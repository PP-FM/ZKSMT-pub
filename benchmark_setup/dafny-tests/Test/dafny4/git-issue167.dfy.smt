(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@143 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@T T@T) T@T)
(declare-fun $generated@@145 (T@T) T@T)
(declare-fun $generated@@146 (T@T) T@T)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@177 (T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 () T@T)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@200 (T@U T@U T@U) T@U)
(declare-fun $generated@@201 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@202 (T@T T@T) T@T)
(declare-fun $generated@@203 (T@T) T@T)
(declare-fun $generated@@204 (T@T) T@T)
(declare-fun $generated@@205 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@256 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@268 () T@U)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@271 () T@U)
(declare-fun $generated@@273 (T@U T@U) T@U)
(declare-fun $generated@@274 (T@U T@U) Bool)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@286 (T@U T@U) Bool)
(declare-fun $generated@@289 (T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@302 (T@U) T@U)
(declare-fun $generated@@306 (T@U T@U T@U) Bool)
(declare-fun $generated@@318 (T@T) T@U)
(declare-fun $generated@@319 (T@U) Int)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@328 () Int)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@U) Bool)
(declare-fun $generated@@331 (T@U T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@341 (T@U) Int)
(declare-fun $generated@@342 (T@T) T@U)
(declare-fun $generated@@347 (T@T T@T) T@U)
(declare-fun $generated@@353 (T@U) T@U)
(declare-fun $generated@@354 (T@T T@T) T@U)
(declare-fun $generated@@355 (T@T T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@357 (T@T) T@T)
(declare-fun $generated@@371 (T@U T@U T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@385 (T@U) Bool)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) Bool)
(declare-fun $generated@@388 (T@U T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@399 (T@T T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@470 (T@U T@U) T@U)
(declare-fun $generated@@487 (T@T) T@U)
(declare-fun $generated@@511 () T@T)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@554 (T@U Int) T@U)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@593 (T@U) Int)
(declare-fun $generated@@594 (T@U) Int)
(declare-fun $generated@@618 (T@U) T@U)
(declare-fun $generated@@668 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (= ($generated@@1 $generated@@139) 14))
(assert (forall (($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@139) ($generated@@138 $generated@@141)) ($generated@@140 $generated@@141))
 :pattern ( ($generated@@138 $generated@@141))
)))
(assert  (and (and (and (and (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (= ($generated@@1 ($generated@@144 $generated@@147 $generated@@148)) 15)) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@145 ($generated@@144 $generated@@149 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@144 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (! (= ($generated@@146 ($generated@@144 $generated@@151 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@144 $generated@@151 $generated@@152))
))) (forall (($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@145 (type $generated@@153))))
(= (type ($generated@@142 $generated@@153)) ($generated@@82 $generated@@154 $generated@@4)))
 :pattern ( ($generated@@142 $generated@@153))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 ($generated@@86 (type $generated@@156))))
(let (($generated@@159 ($generated@@85 (type $generated@@155))))
(= (type ($generated@@143 $generated@@155 $generated@@156 $generated@@157)) ($generated@@144 $generated@@159 $generated@@158))))
 :pattern ( ($generated@@143 $generated@@155 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (let (($generated@@163 ($generated@@86 (type $generated@@161))))
(let (($generated@@164 ($generated@@85 (type $generated@@160))))
 (=> (and (and (= (type $generated@@160) ($generated@@82 $generated@@164 $generated@@4)) (= (type $generated@@161) ($generated@@82 $generated@@164 $generated@@163))) (= (type $generated@@162) $generated@@70)) (= ($generated@@142 ($generated@@143 $generated@@160 $generated@@161 $generated@@162)) $generated@@160))))
 :pattern ( ($generated@@142 ($generated@@143 $generated@@160 $generated@@161 $generated@@162)))
)))
(assert (forall (($generated@@166 T@U) ) (! (let (($generated@@167 ($generated@@146 (type $generated@@166))))
(let (($generated@@168 ($generated@@145 (type $generated@@166))))
(= (type ($generated@@165 $generated@@166)) ($generated@@82 $generated@@168 $generated@@167))))
 :pattern ( ($generated@@165 $generated@@166))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (let (($generated@@172 ($generated@@86 (type $generated@@170))))
(let (($generated@@173 ($generated@@85 (type $generated@@169))))
 (=> (and (and (= (type $generated@@169) ($generated@@82 $generated@@173 $generated@@4)) (= (type $generated@@170) ($generated@@82 $generated@@173 $generated@@172))) (= (type $generated@@171) $generated@@70)) (= ($generated@@165 ($generated@@143 $generated@@169 $generated@@170 $generated@@171)) $generated@@170))))
 :pattern ( ($generated@@165 ($generated@@143 $generated@@169 $generated@@170 $generated@@171)))
)))
(assert (forall (($generated@@175 T@U) ) (!  (=> (= (type $generated@@175) $generated@@2) ($generated@@174 $generated@@175 ($generated@@81 0)))
 :pattern ( ($generated@@174 $generated@@175 ($generated@@81 0)))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= (type ($generated@@177 $generated@@178 $generated@@179)) $generated@@70)
 :pattern ( ($generated@@177 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (and (= (type $generated@@180) $generated@@70) (= (type $generated@@181) $generated@@70)) (= (type $generated@@182) $generated@@139)) ($generated@@174 $generated@@182 ($generated@@177 $generated@@180 $generated@@181))) ($generated@@176 $generated@@182))
 :pattern ( ($generated@@176 $generated@@182) ($generated@@174 $generated@@182 ($generated@@177 $generated@@180 $generated@@181)))
)))
(assert  (and (and (= ($generated@@1 $generated@@186) 16) (forall (($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@184 $generated@@187))
))) (forall (($generated@@188 T@U) ) (! (= (type ($generated@@185 $generated@@188)) $generated@@186)
 :pattern ( ($generated@@185 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) $generated@@139) (= (type $generated@@190) $generated@@139)) true) (= ($generated@@183 $generated@@189 $generated@@190)  (and (= ($generated@@184 $generated@@189) ($generated@@184 $generated@@190)) (= ($generated@@185 $generated@@189) ($generated@@185 $generated@@190)))))
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
)))
(assert  (and (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@74)
 :pattern ( ($generated@@191 $generated@@193))
)) (= (type $generated@@192) $generated@@139)))
(assert (= ($generated@@191 $generated@@192) $generated@@63))
(assert (= (type $generated@@194) $generated@@139))
(assert (= ($generated@@191 $generated@@194) $generated@@65))
(assert (forall (($generated@@197 T@U) ) (! (= (type ($generated@@195 $generated@@197)) $generated@@70)
 :pattern ( ($generated@@195 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and (and (= (type $generated@@198) ($generated@@82 $generated@@186 $generated@@2)) (= (type $generated@@199) $generated@@70)) ($generated@@174 $generated@@198 ($generated@@195 $generated@@199))) ($generated@@196 $generated@@198))
 :pattern ( ($generated@@174 $generated@@198 ($generated@@195 $generated@@199)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@206 T@T) ($generated@@207 T@T) ) (= ($generated@@1 ($generated@@202 $generated@@206 $generated@@207)) 17)) (forall (($generated@@208 T@T) ($generated@@209 T@T) ) (! (= ($generated@@203 ($generated@@202 $generated@@208 $generated@@209)) $generated@@208)
 :pattern ( ($generated@@202 $generated@@208 $generated@@209))
))) (forall (($generated@@210 T@T) ($generated@@211 T@T) ) (! (= ($generated@@204 ($generated@@202 $generated@@210 $generated@@211)) $generated@@211)
 :pattern ( ($generated@@202 $generated@@210 $generated@@211))
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@204 (type $generated@@212))))
(= (type ($generated@@200 $generated@@212 $generated@@213 $generated@@214)) $generated@@215))
 :pattern ( ($generated@@200 $generated@@212 $generated@@213 $generated@@214))
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 (type $generated@@219)))
(let (($generated@@221 (type $generated@@217)))
(= (type ($generated@@205 $generated@@216 $generated@@217 $generated@@218 $generated@@219)) ($generated@@202 $generated@@221 $generated@@220))))
 :pattern ( ($generated@@205 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 ($generated@@204 (type $generated@@222))))
 (=> (= (type $generated@@225) $generated@@226) (= ($generated@@200 ($generated@@205 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@223 $generated@@224) $generated@@225)))
 :weight 0
))) (and (and (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@200 ($generated@@205 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@231 $generated@@232) ($generated@@200 $generated@@228 $generated@@231 $generated@@232)))
 :weight 0
)) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or (= $generated@@236 $generated@@238) (= ($generated@@200 ($generated@@205 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@200 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (or true (= ($generated@@200 ($generated@@205 $generated@@240 $generated@@241 $generated@@242 $generated@@239) $generated@@243 $generated@@244) ($generated@@200 $generated@@240 $generated@@243 $generated@@244)))
 :weight 0
)))) (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 Bool) ) (! (= (type ($generated@@201 $generated@@245 $generated@@246 $generated@@247 $generated@@248)) ($generated@@202 $generated@@83 $generated@@4))
 :pattern ( ($generated@@201 $generated@@245 $generated@@246 $generated@@247 $generated@@248))
))))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 Bool) ($generated@@253 T@U) ($generated@@254 T@U) ) (! (let (($generated@@255 ($generated@@73 (type $generated@@254))))
 (=> (and (and (and (and (= (type $generated@@249) $generated@@83) (= (type $generated@@250) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@251) ($generated@@72 $generated@@4))) (= (type $generated@@253) $generated@@83)) (= (type $generated@@254) ($generated@@72 $generated@@255))) (= ($generated@@0 ($generated@@200 ($generated@@201 $generated@@249 $generated@@250 $generated@@251 $generated@@252) $generated@@253 $generated@@254))  (=> (and (not (= $generated@@253 $generated@@249)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@250 $generated@@253) $generated@@251))) $generated@@252))))
 :pattern ( ($generated@@200 ($generated@@201 $generated@@249 $generated@@250 $generated@@251 $generated@@252) $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 Bool) ) (! (= (type ($generated@@256 $generated@@257 $generated@@258 $generated@@259 $generated@@260)) ($generated@@202 $generated@@83 $generated@@4))
 :pattern ( ($generated@@256 $generated@@257 $generated@@258 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 Bool) ($generated@@265 T@U) ($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@73 (type $generated@@266))))
 (=> (and (and (and (and (= (type $generated@@261) $generated@@83) (= (type $generated@@262) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@263) ($generated@@72 $generated@@4))) (= (type $generated@@265) $generated@@83)) (= (type $generated@@266) ($generated@@72 $generated@@267))) (= ($generated@@0 ($generated@@200 ($generated@@256 $generated@@261 $generated@@262 $generated@@263 $generated@@264) $generated@@265 $generated@@266))  (=> (and (not (= $generated@@265 $generated@@261)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@262 $generated@@265) $generated@@263))) $generated@@264))))
 :pattern ( ($generated@@200 ($generated@@256 $generated@@261 $generated@@262 $generated@@263 $generated@@264) $generated@@265 $generated@@266))
)))
(assert (= (type $generated@@268) $generated@@70))
(assert (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@139) ($generated@@174 $generated@@269 $generated@@268)) ($generated@@140 $generated@@269))
 :pattern ( ($generated@@140 $generated@@269) ($generated@@174 $generated@@269 $generated@@268))
)))
(assert (= (type $generated@@271) $generated@@70))
(assert (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@139) ($generated@@174 $generated@@272 $generated@@271)) ($generated@@270 $generated@@272))
 :pattern ( ($generated@@270 $generated@@272) ($generated@@174 $generated@@272 $generated@@271))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (! (= (type ($generated@@273 $generated@@275 $generated@@276)) $generated@@139)
 :pattern ( ($generated@@273 $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (= (type $generated@@277) $generated@@70) (= (type $generated@@278) $generated@@70)) (= (type $generated@@279) $generated@@186)) (= (type $generated@@280) $generated@@186)) (= ($generated@@174 ($generated@@273 $generated@@279 $generated@@280) ($generated@@177 $generated@@277 $generated@@278))  (and ($generated@@274 $generated@@279 $generated@@277) ($generated@@274 $generated@@280 $generated@@278))))
 :pattern ( ($generated@@174 ($generated@@273 $generated@@279 $generated@@280) ($generated@@177 $generated@@277 $generated@@278)))
)))
(assert ($generated@@174 $generated@@192 $generated@@268))
(assert ($generated@@174 $generated@@194 $generated@@271))
(assert (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@281 $generated@@282)) ($generated@@80 $generated@@192 $generated@@268 $generated@@282))
 :pattern ( ($generated@@80 $generated@@192 $generated@@268 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@281 $generated@@283)) ($generated@@80 $generated@@194 $generated@@271 $generated@@283))
 :pattern ( ($generated@@80 $generated@@194 $generated@@271 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@139) (= (type $generated@@285) $generated@@139)) (= ($generated@@183 $generated@@284 $generated@@285) (= $generated@@284 $generated@@285)))
 :pattern ( ($generated@@183 $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@139) (= (type $generated@@288) $generated@@139)) (= ($generated@@286 $generated@@287 $generated@@288) (= $generated@@287 $generated@@288)))
 :pattern ( ($generated@@286 $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@139) (= (type $generated@@291) $generated@@139)) (= ($generated@@289 $generated@@290 $generated@@291) (= $generated@@290 $generated@@291)))
 :pattern ( ($generated@@289 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@70)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) ($generated@@82 $generated@@186 $generated@@4)) (= (type $generated@@295) $generated@@70)) (= ($generated@@174 $generated@@294 ($generated@@292 $generated@@295)) (forall (($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@186) ($generated@@0 ($generated@@87 $generated@@294 $generated@@296))) ($generated@@274 $generated@@296 $generated@@295))
 :pattern ( ($generated@@87 $generated@@294 $generated@@296))
))))
 :pattern ( ($generated@@174 $generated@@294 ($generated@@292 $generated@@295)))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@70)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) ($generated@@82 $generated@@186 $generated@@4)) (= (type $generated@@300) $generated@@70)) (= ($generated@@174 $generated@@299 ($generated@@297 $generated@@300)) (forall (($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@186) ($generated@@0 ($generated@@87 $generated@@299 $generated@@301))) ($generated@@274 $generated@@301 $generated@@300))
 :pattern ( ($generated@@87 $generated@@299 $generated@@301))
))))
 :pattern ( ($generated@@174 $generated@@299 ($generated@@297 $generated@@300)))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 (type $generated@@303)))
(= (type ($generated@@302 $generated@@303)) $generated@@304))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ) (! (= ($generated@@302 $generated@@305) $generated@@305)
 :pattern ( ($generated@@302 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@307) $generated@@70) (= (type $generated@@308) $generated@@70)) (= (type $generated@@309) $generated@@186)) (= (type $generated@@310) $generated@@186)) (= (type $generated@@311) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@281 $generated@@311)) (= ($generated@@80 ($generated@@273 $generated@@309 $generated@@310) ($generated@@177 $generated@@307 $generated@@308) $generated@@311)  (and ($generated@@306 $generated@@309 $generated@@307 $generated@@311) ($generated@@306 $generated@@310 $generated@@308 $generated@@311))))
 :pattern ( ($generated@@80 ($generated@@273 $generated@@309 $generated@@310) ($generated@@177 $generated@@307 $generated@@308) $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (= (type $generated@@312) $generated@@139) (= ($generated@@176 $generated@@312) (= ($generated@@191 $generated@@312) $generated@@61)))
 :pattern ( ($generated@@176 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (!  (=> (= (type $generated@@313) $generated@@139) (= ($generated@@140 $generated@@313) (= ($generated@@191 $generated@@313) $generated@@63)))
 :pattern ( ($generated@@140 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (!  (=> (= (type $generated@@314) $generated@@139) (= ($generated@@270 $generated@@314) (= ($generated@@191 $generated@@314) $generated@@65)))
 :pattern ( ($generated@@270 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@139) ($generated@@176 $generated@@315)) (exists (($generated@@316 T@U) ($generated@@317 T@U) ) (!  (and (and (= (type $generated@@316) $generated@@186) (= (type $generated@@317) $generated@@186)) (= $generated@@315 ($generated@@273 $generated@@316 $generated@@317)))
 :no-pattern (type $generated@@316)
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
)))
 :pattern ( ($generated@@176 $generated@@315))
)))
(assert  (and (and (forall (($generated@@322 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@322)) 18)) (forall (($generated@@323 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@320 $generated@@323))
))) (forall (($generated@@324 T@T) ) (! (= (type ($generated@@318 $generated@@324)) ($generated@@320 $generated@@324))
 :pattern ( ($generated@@318 $generated@@324))
))))
(assert (forall (($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@318 $generated@@325)) 0)
 :pattern ( ($generated@@318 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@326) $generated@@139) ($generated@@140 $generated@@326)) (= $generated@@326 $generated@@192))
 :pattern ( ($generated@@140 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@139) ($generated@@270 $generated@@327)) (= $generated@@327 $generated@@194))
 :pattern ( ($generated@@270 $generated@@327))
)))
(assert  (and (forall (($generated@@332 T@U) ) (! (= (type ($generated@@329 $generated@@332)) ($generated@@144 $generated@@186 $generated@@186))
 :pattern ( ($generated@@329 $generated@@332))
)) (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (! (= (type ($generated@@331 $generated@@333 $generated@@334)) $generated@@70)
 :pattern ( ($generated@@331 $generated@@333 $generated@@334))
))))
(assert  (=> (<= 2 $generated@@328) (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) ($generated@@144 $generated@@186 $generated@@186)) (or ($generated@@330 $generated@@335) (and (not (= 2 $generated@@328)) ($generated@@174 $generated@@335 ($generated@@331 $generated@@268 $generated@@46))))) ($generated@@174 ($generated@@329 $generated@@335) ($generated@@331 $generated@@271 $generated@@46)))
 :pattern ( ($generated@@329 $generated@@335))
))))
(assert (forall (($generated@@337 T@U) ) (! (= (type ($generated@@336 $generated@@337)) $generated@@186)
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@70) (= (type $generated@@340) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@306 ($generated@@336 $generated@@338) $generated@@339 $generated@@340) ($generated@@80 $generated@@338 $generated@@339 $generated@@340)))
 :pattern ( ($generated@@306 ($generated@@336 $generated@@338) $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@343 T@T) ) (! (= (type ($generated@@342 $generated@@343)) ($generated@@82 $generated@@343 $generated@@2))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@85 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@82 $generated@@345 $generated@@2)) (and (= (= ($generated@@341 $generated@@344) 0) (= $generated@@344 ($generated@@342 $generated@@345))) (=> (not (= ($generated@@341 $generated@@344) 0)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) (< 0 ($generated ($generated@@87 $generated@@344 $generated@@346))))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@341 $generated@@344))
)))
(assert (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@347 $generated@@348 $generated@@349)) ($generated@@144 $generated@@348 $generated@@349))
 :pattern ( ($generated@@347 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@87 ($generated@@142 ($generated@@347 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@87 ($generated@@142 ($generated@@347 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert  (and (and (and (and (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (= ($generated@@1 ($generated@@355 $generated@@358 $generated@@359)) 19)) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= ($generated@@356 ($generated@@355 $generated@@360 $generated@@361)) $generated@@360)
 :pattern ( ($generated@@355 $generated@@360 $generated@@361))
))) (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (! (= ($generated@@357 ($generated@@355 $generated@@362 $generated@@363)) $generated@@363)
 :pattern ( ($generated@@355 $generated@@362 $generated@@363))
))) (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@356 (type $generated@@364))))
(= (type ($generated@@353 $generated@@364)) ($generated@@82 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@353 $generated@@364))
))) (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (! (= (type ($generated@@354 $generated@@366 $generated@@367)) ($generated@@355 $generated@@366 $generated@@367))
 :pattern ( ($generated@@354 $generated@@366 $generated@@367))
))))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@T) ) (! (let (($generated@@370 (type $generated@@368)))
 (not ($generated@@0 ($generated@@87 ($generated@@353 ($generated@@354 $generated@@370 $generated@@369)) $generated@@368))))
 :pattern ( (let (($generated@@370 (type $generated@@368)))
($generated@@87 ($generated@@353 ($generated@@354 $generated@@370 $generated@@369)) $generated@@368)))
)))
(assert  (and (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (! (= (type ($generated@@371 $generated@@373 $generated@@374 $generated@@375)) ($generated@@82 $generated@@186 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373 $generated@@374 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (= (type ($generated@@372 $generated@@376)) $generated@@139)
 :pattern ( ($generated@@372 $generated@@376))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (and (= (type $generated@@377) $generated@@70) (= (type $generated@@378) ($generated@@82 $generated@@186 $generated@@4))) (= (type $generated@@379) ($generated@@82 $generated@@186 $generated@@4))) (= (type $generated@@380) $generated@@186)) (= ($generated@@0 ($generated@@87 ($generated@@371 $generated@@377 $generated@@378 $generated@@379) $generated@@380)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@139) (and (and ($generated@@174 $generated@@381 $generated@@377) ($generated@@0 ($generated@@87 $generated@@378 ($generated@@336 $generated@@381)))) (= $generated@@380 ($generated@@336 ($generated@@372 $generated@@381)))))
 :pattern ( ($generated@@372 $generated@@381))
 :pattern ( ($generated@@87 $generated@@379 ($generated@@336 $generated@@381)))
))))
 :pattern ( ($generated@@87 ($generated@@371 $generated@@377 $generated@@378 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@85 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@82 $generated@@383 $generated@@2)) (= ($generated@@196 $generated@@382) (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@383) (and (<= 0 ($generated ($generated@@87 $generated@@382 $generated@@384))) (<= ($generated ($generated@@87 $generated@@382 $generated@@384)) ($generated@@341 $generated@@382))))
 :pattern ( ($generated@@87 $generated@@382 $generated@@384))
)))))
 :pattern ( ($generated@@196 $generated@@382))
)))
(assert  (and (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@386 $generated@@390)) $generated@@139)
 :pattern ( ($generated@@386 $generated@@390))
)) (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (= (type ($generated@@388 $generated@@391 $generated@@392)) ($generated@@82 $generated@@186 $generated@@4))
 :pattern ( ($generated@@388 $generated@@391 $generated@@392))
))) (forall (($generated@@393 T@U) ) (! (= (type ($generated@@389 $generated@@393)) ($generated@@82 $generated@@186 $generated@@186))
 :pattern ( ($generated@@389 $generated@@393))
))))
(assert  (=> (<= 2 $generated@@328) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@144 $generated@@186 $generated@@186)) (or ($generated@@330 $generated@@394) (and (not (= 2 $generated@@328)) ($generated@@174 $generated@@394 ($generated@@331 $generated@@268 $generated@@46))))) (and (and (forall (($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@395) $generated@@139) ($generated@@174 $generated@@395 $generated@@268)) ($generated@@0 ($generated@@87 ($generated@@142 $generated@@394) ($generated@@336 $generated@@395)))) ($generated@@385 $generated@@395))
 :pattern ( ($generated@@372 $generated@@395))
 :pattern ( ($generated@@87 ($generated@@142 $generated@@394) ($generated@@336 $generated@@395)))
)) (let (($generated@@396 ($generated@@371 $generated@@268 ($generated@@142 $generated@@394) ($generated@@142 $generated@@394))))
(forall (($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@397) $generated@@139) ($generated@@174 $generated@@397 $generated@@271)) ($generated@@0 ($generated@@87 $generated@@396 ($generated@@336 $generated@@397)))) ($generated@@387 $generated@@397))
 :pattern ( ($generated@@386 $generated@@397))
 :pattern ( ($generated@@87 $generated@@396 ($generated@@336 $generated@@397)))
)))) (= ($generated@@329 $generated@@394) (let (($generated@@398 ($generated@@371 $generated@@268 ($generated@@142 $generated@@394) ($generated@@142 $generated@@394))))
($generated@@143 ($generated@@388 $generated@@271 $generated@@398) ($generated@@389 ($generated@@165 $generated@@394)) ($generated@@331 $generated@@271 $generated@@46))))))
 :pattern ( ($generated@@329 $generated@@394))
))))
(assert (forall (($generated@@400 T@T) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@400)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@186) ($generated@@274 $generated@@402 $generated@@268)) (and (= ($generated@@336 ($generated@@399 $generated@@139 $generated@@402)) $generated@@402) ($generated@@174 ($generated@@399 $generated@@139 $generated@@402) $generated@@268)))
 :pattern ( ($generated@@274 $generated@@402 $generated@@268))
)))
(assert (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@186) ($generated@@274 $generated@@403 $generated@@271)) (and (= ($generated@@336 ($generated@@399 $generated@@139 $generated@@403)) $generated@@403) ($generated@@174 ($generated@@399 $generated@@139 $generated@@403) $generated@@271)))
 :pattern ( ($generated@@274 $generated@@403 $generated@@271))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@146 (type $generated@@404))))
(let (($generated@@406 ($generated@@145 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@144 $generated@@406 $generated@@405)) (or (= $generated@@404 ($generated@@347 $generated@@406 $generated@@405)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) ($generated@@0 ($generated@@87 ($generated@@142 $generated@@404) $generated@@407)))
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@142 $generated@@404))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@146 (type $generated@@409))))
(= (type ($generated@@408 $generated@@409)) ($generated@@82 $generated@@410 $generated@@4)))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@146 (type $generated@@411))))
(let (($generated@@413 ($generated@@145 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@144 $generated@@413 $generated@@412)) (or (= $generated@@411 ($generated@@347 $generated@@413 $generated@@412)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@412) ($generated@@0 ($generated@@87 ($generated@@408 $generated@@411) $generated@@414)))
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@408 $generated@@411))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@357 (type $generated@@415))))
(let (($generated@@417 ($generated@@356 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@355 $generated@@417 $generated@@416)) (or (= $generated@@415 ($generated@@354 $generated@@417 $generated@@416)) (exists (($generated@@418 T@U) ) (!  (and (= (type $generated@@418) $generated@@417) ($generated@@0 ($generated@@87 ($generated@@353 $generated@@415) $generated@@418)))
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@353 $generated@@415))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@357 (type $generated@@420))))
(= (type ($generated@@419 $generated@@420)) ($generated@@82 $generated@@421 $generated@@4)))
 :pattern ( ($generated@@419 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@357 (type $generated@@422))))
(let (($generated@@424 ($generated@@356 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@355 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@354 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@423) ($generated@@0 ($generated@@87 ($generated@@419 $generated@@422) $generated@@425)))
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@419 $generated@@422))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@82 $generated@@186 $generated@@2)) (= (type $generated@@427) $generated@@70)) (= ($generated@@174 $generated@@426 ($generated@@195 $generated@@427)) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@186) (< 0 ($generated ($generated@@87 $generated@@426 $generated@@428)))) ($generated@@274 $generated@@428 $generated@@427))
 :pattern ( ($generated@@87 $generated@@426 $generated@@428))
))))
 :pattern ( ($generated@@174 $generated@@426 ($generated@@195 $generated@@427)))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (= (type $generated@@429) $generated@@139) (= (type $generated@@430) $generated@@139)) true) (= ($generated@@286 $generated@@429 $generated@@430) true))
 :pattern ( ($generated@@286 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (= (type $generated@@431) $generated@@139) (= (type $generated@@432) $generated@@139)) true) (= ($generated@@289 $generated@@431 $generated@@432) true))
 :pattern ( ($generated@@289 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (= (type $generated@@433) ($generated@@82 $generated@@186 $generated@@4)) (= (type $generated@@434) $generated@@70)) (= (type $generated@@435) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@433 ($generated@@292 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@186) ($generated@@0 ($generated@@87 $generated@@433 $generated@@436))) ($generated@@306 $generated@@436 $generated@@434 $generated@@435))
 :pattern ( ($generated@@87 $generated@@433 $generated@@436))
))))
 :pattern ( ($generated@@80 $generated@@433 ($generated@@292 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (= (type $generated@@437) ($generated@@82 $generated@@186 $generated@@4)) (= (type $generated@@438) $generated@@70)) (= (type $generated@@439) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@437 ($generated@@297 $generated@@438) $generated@@439) (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@186) ($generated@@0 ($generated@@87 $generated@@437 $generated@@440))) ($generated@@306 $generated@@440 $generated@@438 $generated@@439))
 :pattern ( ($generated@@87 $generated@@437 $generated@@440))
))))
 :pattern ( ($generated@@80 $generated@@437 ($generated@@297 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 (type $generated@@441)))
(= ($generated ($generated@@87 ($generated@@342 $generated@@442) $generated@@441)) 0))
 :pattern ( (let (($generated@@442 (type $generated@@441)))
($generated@@87 ($generated@@342 $generated@@442) $generated@@441)))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) ($generated@@82 $generated@@186 $generated@@4))
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) ($generated@@144 $generated@@186 $generated@@186)) (= (type $generated@@446) $generated@@186)) (= ($generated@@0 ($generated@@87 ($generated@@443 $generated@@445) $generated@@446))  (and ($generated@@0 ($generated@@87 ($generated@@142 $generated@@445) ($generated@@184 ($generated@@399 $generated@@139 $generated@@446)))) (= ($generated@@87 ($generated@@165 $generated@@445) ($generated@@184 ($generated@@399 $generated@@139 $generated@@446))) ($generated@@185 ($generated@@399 $generated@@139 $generated@@446))))))
 :pattern ( ($generated@@87 ($generated@@443 $generated@@445) $generated@@446))
)))
(assert  (and (forall (($generated@@449 T@U) ) (! (= (type ($generated@@447 $generated@@449)) ($generated@@82 $generated@@186 $generated@@4))
 :pattern ( ($generated@@447 $generated@@449))
)) (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@357 (type $generated@@450))))
(let (($generated@@452 ($generated@@356 (type $generated@@450))))
(= (type ($generated@@448 $generated@@450)) ($generated@@82 $generated@@452 $generated@@451))))
 :pattern ( ($generated@@448 $generated@@450))
))))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) ($generated@@355 $generated@@186 $generated@@186)) (= (type $generated@@454) $generated@@186)) (= ($generated@@0 ($generated@@87 ($generated@@447 $generated@@453) $generated@@454))  (and ($generated@@0 ($generated@@87 ($generated@@353 $generated@@453) ($generated@@184 ($generated@@399 $generated@@139 $generated@@454)))) (= ($generated@@87 ($generated@@448 $generated@@453) ($generated@@184 ($generated@@399 $generated@@139 $generated@@454))) ($generated@@185 ($generated@@399 $generated@@139 $generated@@454))))))
 :pattern ( ($generated@@87 ($generated@@447 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (! (let (($generated@@457 (type $generated@@456)))
(let (($generated@@458 ($generated@@145 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@144 $generated@@458 $generated@@457)) (= ($generated@@0 ($generated@@87 ($generated@@408 $generated@@455) $generated@@456)) (exists (($generated@@459 T@U) ) (!  (and (= (type $generated@@459) $generated@@458) (and ($generated@@0 ($generated@@87 ($generated@@142 $generated@@455) $generated@@459)) (= $generated@@456 ($generated@@87 ($generated@@165 $generated@@455) $generated@@459))))
 :pattern ( ($generated@@87 ($generated@@142 $generated@@455) $generated@@459))
 :pattern ( ($generated@@87 ($generated@@165 $generated@@455) $generated@@459))
))))))
 :pattern ( ($generated@@87 ($generated@@408 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (! (let (($generated@@462 (type $generated@@461)))
(let (($generated@@463 ($generated@@356 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@355 $generated@@463 $generated@@462)) (= ($generated@@0 ($generated@@87 ($generated@@419 $generated@@460) $generated@@461)) (exists (($generated@@464 T@U) ) (!  (and (= (type $generated@@464) $generated@@463) (and ($generated@@0 ($generated@@87 ($generated@@353 $generated@@460) $generated@@464)) (= $generated@@461 ($generated@@87 ($generated@@448 $generated@@460) $generated@@464))))
 :pattern ( ($generated@@87 ($generated@@353 $generated@@460) $generated@@464))
 :pattern ( ($generated@@87 ($generated@@448 $generated@@460) $generated@@464))
))))))
 :pattern ( ($generated@@87 ($generated@@419 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (= (type $generated@@465) ($generated@@144 $generated@@186 $generated@@186)) (= (type $generated@@466) $generated@@70)) (= (type $generated@@467) $generated@@70)) (= (type $generated@@468) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@465 ($generated@@331 $generated@@466 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@186) ($generated@@0 ($generated@@87 ($generated@@142 $generated@@465) $generated@@469))) (and ($generated@@306 ($generated@@87 ($generated@@165 $generated@@465) $generated@@469) $generated@@467 $generated@@468) ($generated@@306 $generated@@469 $generated@@466 $generated@@468)))
 :pattern ( ($generated@@87 ($generated@@165 $generated@@465) $generated@@469))
 :pattern ( ($generated@@87 ($generated@@142 $generated@@465) $generated@@469))
))))
 :pattern ( ($generated@@80 $generated@@465 ($generated@@331 $generated@@466 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@471 $generated@@472)) $generated@@70)
 :pattern ( ($generated@@470 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (and (= (type $generated@@473) ($generated@@355 $generated@@186 $generated@@186)) (= (type $generated@@474) $generated@@70)) (= (type $generated@@475) $generated@@70)) (= (type $generated@@476) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@473 ($generated@@470 $generated@@474 $generated@@475) $generated@@476) (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@186) ($generated@@0 ($generated@@87 ($generated@@353 $generated@@473) $generated@@477))) (and ($generated@@306 ($generated@@87 ($generated@@448 $generated@@473) $generated@@477) $generated@@475 $generated@@476) ($generated@@306 $generated@@477 $generated@@474 $generated@@476)))
 :pattern ( ($generated@@87 ($generated@@448 $generated@@473) $generated@@477))
 :pattern ( ($generated@@87 ($generated@@353 $generated@@473) $generated@@477))
))))
 :pattern ( ($generated@@80 $generated@@473 ($generated@@470 $generated@@474 $generated@@475) $generated@@476))
)))
(assert  (=> (<= 2 $generated@@328) (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) ($generated@@144 $generated@@186 $generated@@186)) (or ($generated@@330 ($generated@@302 $generated@@478)) (and (not (= 2 $generated@@328)) ($generated@@174 $generated@@478 ($generated@@331 $generated@@268 $generated@@46))))) (and (and (forall (($generated@@479 T@U) ) (!  (=> (and (and (= (type $generated@@479) $generated@@139) ($generated@@174 $generated@@479 $generated@@268)) ($generated@@0 ($generated@@87 ($generated@@142 $generated@@478) ($generated@@336 $generated@@479)))) ($generated@@385 $generated@@479))
 :pattern ( ($generated@@372 $generated@@479))
 :pattern ( ($generated@@87 ($generated@@142 $generated@@478) ($generated@@336 $generated@@479)))
)) (let (($generated@@480 ($generated@@371 $generated@@268 ($generated@@142 $generated@@478) ($generated@@142 $generated@@478))))
(forall (($generated@@481 T@U) ) (!  (=> (and (and (= (type $generated@@481) $generated@@139) ($generated@@174 $generated@@481 $generated@@271)) ($generated@@0 ($generated@@87 $generated@@480 ($generated@@336 $generated@@481)))) ($generated@@387 $generated@@481))
 :pattern ( ($generated@@386 $generated@@481))
 :pattern ( ($generated@@87 $generated@@480 ($generated@@336 $generated@@481)))
)))) (= ($generated@@329 ($generated@@302 $generated@@478)) (let (($generated@@482 ($generated@@371 $generated@@268 ($generated@@142 $generated@@478) ($generated@@142 $generated@@478))))
($generated@@143 ($generated@@388 $generated@@271 $generated@@482) ($generated@@389 ($generated@@165 ($generated@@302 $generated@@478))) ($generated@@331 $generated@@271 $generated@@46))))))
 :weight 3
 :pattern ( ($generated@@329 ($generated@@302 $generated@@478)))
))))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) ($generated@@82 $generated@@186 $generated@@186)) (= (type $generated@@484) $generated@@186)) (= ($generated@@87 ($generated@@389 $generated@@483) $generated@@484) ($generated@@87 $generated@@483 ($generated@@336 ($generated@@386 ($generated@@399 $generated@@139 $generated@@484))))))
 :pattern ( ($generated@@87 ($generated@@389 $generated@@483) $generated@@484))
)))
(assert  (=> (<= 1 $generated@@328) (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@139) (or ($generated@@385 $generated@@485) (and (not (= 1 $generated@@328)) ($generated@@174 $generated@@485 $generated@@268)))) (= ($generated@@372 $generated@@485) ($generated@@302 $generated@@194)))
 :pattern ( ($generated@@372 $generated@@485))
))))
(assert  (=> (<= 1 $generated@@328) (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@139) (or ($generated@@387 $generated@@486) (and (not (= 1 $generated@@328)) ($generated@@174 $generated@@486 $generated@@271)))) (= ($generated@@386 $generated@@486) ($generated@@302 $generated@@192)))
 :pattern ( ($generated@@386 $generated@@486))
))))
(assert (forall (($generated@@488 T@T) ) (! (= (type ($generated@@487 $generated@@488)) ($generated@@82 $generated@@488 $generated@@4))
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@357 (type $generated@@489))))
(let (($generated@@491 ($generated@@356 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@355 $generated@@491 $generated@@490)) (= (= $generated@@489 ($generated@@354 $generated@@491 $generated@@490)) (= ($generated@@353 $generated@@489) ($generated@@487 $generated@@491))))))
 :pattern ( ($generated@@353 $generated@@489))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@357 (type $generated@@492))))
(let (($generated@@494 ($generated@@356 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@355 $generated@@494 $generated@@493)) (= (= $generated@@492 ($generated@@354 $generated@@494 $generated@@493)) (= ($generated@@419 $generated@@492) ($generated@@487 $generated@@493))))))
 :pattern ( ($generated@@419 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@357 (type $generated@@495))))
(let (($generated@@497 ($generated@@356 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@355 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@354 $generated@@497 $generated@@496)) (= ($generated@@447 $generated@@495) ($generated@@487 $generated@@186))))))
 :pattern ( ($generated@@447 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@146 (type $generated@@498))))
(let (($generated@@500 ($generated@@145 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@144 $generated@@500 $generated@@499)) (or (= $generated@@498 ($generated@@347 $generated@@500 $generated@@499)) (exists (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (and (and (= (type $generated@@501) $generated@@186) (= (type $generated@@502) $generated@@186)) ($generated@@0 ($generated@@87 ($generated@@443 $generated@@498) ($generated@@336 ($generated@@273 $generated@@501 $generated@@502)))))
 :no-pattern (type $generated@@501)
 :no-pattern (type $generated@@502)
 :no-pattern ($generated $generated@@501)
 :no-pattern ($generated@@0 $generated@@501)
 :no-pattern ($generated $generated@@502)
 :no-pattern ($generated@@0 $generated@@502)
))))))
 :pattern ( ($generated@@443 $generated@@498))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@357 (type $generated@@503))))
(let (($generated@@505 ($generated@@356 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@355 $generated@@505 $generated@@504)) (or (= $generated@@503 ($generated@@354 $generated@@505 $generated@@504)) (exists (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (and (and (= (type $generated@@506) $generated@@186) (= (type $generated@@507) $generated@@186)) ($generated@@0 ($generated@@87 ($generated@@447 $generated@@503) ($generated@@336 ($generated@@273 $generated@@506 $generated@@507)))))
 :no-pattern (type $generated@@506)
 :no-pattern (type $generated@@507)
 :no-pattern ($generated $generated@@506)
 :no-pattern ($generated@@0 $generated@@506)
 :no-pattern ($generated $generated@@507)
 :no-pattern ($generated@@0 $generated@@507)
))))))
 :pattern ( ($generated@@447 $generated@@503))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@186) ($generated@@274 $generated@@508 $generated@@46)) (and (= ($generated@@336 ($generated@@399 $generated@@2 $generated@@508)) $generated@@508) ($generated@@174 ($generated@@399 $generated@@2 $generated@@508) $generated@@46)))
 :pattern ( ($generated@@274 $generated@@508 $generated@@46))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@186) ($generated@@274 $generated@@509 $generated@@47)) (and (= ($generated@@336 ($generated@@399 $generated@@3 $generated@@509)) $generated@@509) ($generated@@174 ($generated@@399 $generated@@3 $generated@@509) $generated@@47)))
 :pattern ( ($generated@@274 $generated@@509 $generated@@47))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@186) ($generated@@274 $generated@@510 $generated@@44)) (and (= ($generated@@336 ($generated@@399 $generated@@4 $generated@@510)) $generated@@510) ($generated@@174 ($generated@@399 $generated@@4 $generated@@510) $generated@@44)))
 :pattern ( ($generated@@274 $generated@@510 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@511) 20))
(assert (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@186) ($generated@@274 $generated@@512 $generated@@45)) (and (= ($generated@@336 ($generated@@399 $generated@@511 $generated@@512)) $generated@@512) ($generated@@174 ($generated@@399 $generated@@511 $generated@@512) $generated@@45)))
 :pattern ( ($generated@@274 $generated@@512 $generated@@45))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@274 ($generated@@336 $generated@@513) $generated@@514) ($generated@@174 $generated@@513 $generated@@514)))
 :pattern ( ($generated@@274 ($generated@@336 $generated@@513) $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@85 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@82 $generated@@516 $generated@@2)) (<= 0 ($generated@@341 $generated@@515))))
 :pattern ( ($generated@@341 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@321 (type $generated@@517))))
 (=> (= (type $generated@@517) ($generated@@320 $generated@@518)) (<= 0 ($generated@@319 $generated@@517))))
 :pattern ( ($generated@@319 $generated@@517))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@70) (= (type $generated@@522) $generated@@70)) (= ($generated@@519 ($generated@@331 $generated@@521 $generated@@522)) $generated@@521))
 :pattern ( ($generated@@331 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@70) (= (type $generated@@526) $generated@@70)) (= ($generated@@523 ($generated@@331 $generated@@525 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@331 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@70) (= (type $generated@@528) $generated@@70)) (= ($generated@@78 ($generated@@331 $generated@@527 $generated@@528)) $generated@@58))
 :pattern ( ($generated@@331 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@70)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@70) (= (type $generated@@532) $generated@@70)) (= ($generated@@529 ($generated@@470 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@470 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@70)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@70) (= (type $generated@@536) $generated@@70)) (= ($generated@@533 ($generated@@470 $generated@@535 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@470 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@70) (= (type $generated@@538) $generated@@70)) (= ($generated@@78 ($generated@@470 $generated@@537 $generated@@538)) $generated@@59))
 :pattern ( ($generated@@470 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@186) (= (type $generated@@540) $generated@@186)) (= ($generated@@191 ($generated@@273 $generated@@539 $generated@@540)) $generated@@61))
 :pattern ( ($generated@@273 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@70)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@70) (= (type $generated@@544) $generated@@70)) (= ($generated@@541 ($generated@@177 $generated@@543 $generated@@544)) $generated@@543))
 :pattern ( ($generated@@177 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@70)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@70) (= (type $generated@@548) $generated@@70)) (= ($generated@@545 ($generated@@177 $generated@@547 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@177 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@186) (= (type $generated@@550) $generated@@186)) (= ($generated@@184 ($generated@@273 $generated@@549 $generated@@550)) $generated@@549))
 :pattern ( ($generated@@273 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@186) (= (type $generated@@552) $generated@@186)) (= ($generated@@185 ($generated@@273 $generated@@551 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@273 $generated@@551 $generated@@552))
)))
(assert  (and (forall (($generated@@555 T@U) ) (! (= (type ($generated@@553 $generated@@555)) $generated@@70)
 :pattern ( ($generated@@553 $generated@@555))
)) (forall (($generated@@556 T@U) ($generated@@557 Int) ) (! (let (($generated@@558 ($generated@@321 (type $generated@@556))))
(= (type ($generated@@554 $generated@@556 $generated@@557)) $generated@@558))
 :pattern ( ($generated@@554 $generated@@556 $generated@@557))
))))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@320 $generated@@186)) (= (type $generated@@560) $generated@@70)) (= (type $generated@@561) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@559 ($generated@@553 $generated@@560) $generated@@561) (forall (($generated@@562 Int) ) (!  (=> (and (<= 0 $generated@@562) (< $generated@@562 ($generated@@319 $generated@@559))) ($generated@@306 ($generated@@554 $generated@@559 $generated@@562) $generated@@560 $generated@@561))
 :pattern ( ($generated@@554 $generated@@559 $generated@@562))
))))
 :pattern ( ($generated@@80 $generated@@559 ($generated@@553 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@564 Int) ) (! (= ($generated@@563 ($generated@@81 $generated@@564)) $generated@@564)
 :pattern ( ($generated@@81 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@70)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@70) (= ($generated@@565 ($generated@@292 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@292 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@70) (= ($generated@@78 ($generated@@292 $generated@@568)) $generated@@54))
 :pattern ( ($generated@@292 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@70)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@70) (= ($generated@@569 ($generated@@297 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@297 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@70) (= ($generated@@78 ($generated@@297 $generated@@572)) $generated@@55))
 :pattern ( ($generated@@297 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@70)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@70) (= ($generated@@573 ($generated@@195 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@195 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@70) (= ($generated@@78 ($generated@@195 $generated@@576)) $generated@@56))
 :pattern ( ($generated@@195 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@70)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@70) (= ($generated@@577 ($generated@@553 $generated@@579)) $generated@@579))
 :pattern ( ($generated@@553 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@70) (= ($generated@@78 ($generated@@553 $generated@@580)) $generated@@57))
 :pattern ( ($generated@@553 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@581)))
(= ($generated@@399 $generated@@582 ($generated@@336 $generated@@581)) $generated@@581))
 :pattern ( ($generated@@336 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@144 $generated@@186 $generated@@186)) (= (type $generated@@584) $generated@@70)) (= (type $generated@@585) $generated@@70)) (= ($generated@@174 $generated@@583 ($generated@@331 $generated@@584 $generated@@585)) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@186) ($generated@@0 ($generated@@87 ($generated@@142 $generated@@583) $generated@@586))) (and ($generated@@274 ($generated@@87 ($generated@@165 $generated@@583) $generated@@586) $generated@@585) ($generated@@274 $generated@@586 $generated@@584)))
 :pattern ( ($generated@@87 ($generated@@165 $generated@@583) $generated@@586))
 :pattern ( ($generated@@87 ($generated@@142 $generated@@583) $generated@@586))
))))
 :pattern ( ($generated@@174 $generated@@583 ($generated@@331 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@355 $generated@@186 $generated@@186)) (= (type $generated@@588) $generated@@70)) (= (type $generated@@589) $generated@@70)) (= ($generated@@174 $generated@@587 ($generated@@470 $generated@@588 $generated@@589)) (forall (($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@186) ($generated@@0 ($generated@@87 ($generated@@353 $generated@@587) $generated@@590))) (and ($generated@@274 ($generated@@87 ($generated@@448 $generated@@587) $generated@@590) $generated@@589) ($generated@@274 $generated@@590 $generated@@588)))
 :pattern ( ($generated@@87 ($generated@@448 $generated@@587) $generated@@590))
 :pattern ( ($generated@@87 ($generated@@353 $generated@@587) $generated@@590))
))))
 :pattern ( ($generated@@174 $generated@@587 ($generated@@470 $generated@@588 $generated@@589)))
)))
(assert  (=> (<= 1 $generated@@328) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@139) (or ($generated@@385 ($generated@@302 $generated@@591)) (and (not (= 1 $generated@@328)) ($generated@@174 $generated@@591 $generated@@268)))) (= ($generated@@372 ($generated@@302 $generated@@591)) ($generated@@302 $generated@@194)))
 :weight 3
 :pattern ( ($generated@@372 ($generated@@302 $generated@@591)))
))))
(assert  (=> (<= 1 $generated@@328) (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@139) (or ($generated@@387 ($generated@@302 $generated@@592)) (and (not (= 1 $generated@@328)) ($generated@@174 $generated@@592 $generated@@271)))) (= ($generated@@386 ($generated@@302 $generated@@592)) ($generated@@302 $generated@@192)))
 :weight 3
 :pattern ( ($generated@@386 ($generated@@302 $generated@@592)))
))))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@186) (= (type $generated@@596) $generated@@186)) (< ($generated@@593 $generated@@595) ($generated@@594 ($generated@@273 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@273 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@186) (= (type $generated@@598) $generated@@186)) (< ($generated@@593 $generated@@598) ($generated@@594 ($generated@@273 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@273 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@70) (= (type $generated@@600) ($generated@@82 $generated@@186 $generated@@4))) (= (type $generated@@601) $generated@@186)) (= ($generated@@0 ($generated@@87 ($generated@@388 $generated@@599 $generated@@600) $generated@@601))  (and ($generated@@274 $generated@@601 $generated@@599) ($generated@@0 ($generated@@87 $generated@@600 $generated@@601)))))
 :pattern ( ($generated@@87 ($generated@@388 $generated@@599 $generated@@600) $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@186) (= (type $generated@@603) $generated@@70)) (= (type $generated@@604) $generated@@70)) ($generated@@274 $generated@@602 ($generated@@331 $generated@@603 $generated@@604))) (and (= ($generated@@336 ($generated@@399 ($generated@@144 $generated@@186 $generated@@186) $generated@@602)) $generated@@602) ($generated@@174 ($generated@@399 ($generated@@144 $generated@@186 $generated@@186) $generated@@602) ($generated@@331 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@274 $generated@@602 ($generated@@331 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@186) (= (type $generated@@606) $generated@@70)) (= (type $generated@@607) $generated@@70)) ($generated@@274 $generated@@605 ($generated@@470 $generated@@606 $generated@@607))) (and (= ($generated@@336 ($generated@@399 ($generated@@355 $generated@@186 $generated@@186) $generated@@605)) $generated@@605) ($generated@@174 ($generated@@399 ($generated@@355 $generated@@186 $generated@@186) $generated@@605) ($generated@@470 $generated@@606 $generated@@607))))
 :pattern ( ($generated@@274 $generated@@605 ($generated@@470 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@70) (= (type $generated@@609) $generated@@70)) (= (type $generated@@610) $generated@@186)) ($generated@@274 $generated@@610 ($generated@@177 $generated@@608 $generated@@609))) (and (= ($generated@@336 ($generated@@399 $generated@@139 $generated@@610)) $generated@@610) ($generated@@174 ($generated@@399 $generated@@139 $generated@@610) ($generated@@177 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@274 $generated@@610 ($generated@@177 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@611)))
 (not ($generated@@0 ($generated@@87 ($generated@@487 $generated@@612) $generated@@611))))
 :pattern ( (let (($generated@@612 (type $generated@@611)))
($generated@@87 ($generated@@487 $generated@@612) $generated@@611)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@613) ($generated@@82 $generated@@186 $generated@@4)) (= (type $generated@@614) ($generated@@82 $generated@@186 $generated@@186))) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) (forall (($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@186) ($generated@@0 ($generated@@87 $generated@@613 $generated@@617))) (and ($generated@@274 $generated@@617 $generated@@615) ($generated@@274 ($generated@@87 $generated@@614 $generated@@617) $generated@@616)))
 :no-pattern (type $generated@@617)
 :no-pattern ($generated $generated@@617)
 :no-pattern ($generated@@0 $generated@@617)
))) ($generated@@174 ($generated@@143 $generated@@613 $generated@@614 ($generated@@331 $generated@@615 $generated@@616)) ($generated@@331 $generated@@615 $generated@@616)))
 :pattern ( ($generated@@143 $generated@@613 $generated@@614 ($generated@@331 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@619 T@U) ) (! (= (type ($generated@@618 $generated@@619)) $generated@@75)
 :pattern ( ($generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@70) (= (type $generated@@621) $generated@@70)) (and (= ($generated@@78 ($generated@@177 $generated@@620 $generated@@621)) $generated@@62) (= ($generated@@618 ($generated@@177 $generated@@620 $generated@@621)) $generated@@67)))
 :pattern ( ($generated@@177 $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@139) (= ($generated@@593 ($generated@@336 $generated@@622)) ($generated@@594 $generated@@622)))
 :pattern ( ($generated@@593 ($generated@@336 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@186) ($generated@@274 $generated@@623 ($generated@@81 0))) (and (= ($generated@@336 ($generated@@399 $generated@@2 $generated@@623)) $generated@@623) ($generated@@174 ($generated@@399 ($generated@@82 $generated@@186 $generated@@4) $generated@@623) ($generated@@81 0))))
 :pattern ( ($generated@@274 $generated@@623 ($generated@@81 0)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@186) (= (type $generated@@625) $generated@@70)) ($generated@@274 $generated@@624 ($generated@@292 $generated@@625))) (and (= ($generated@@336 ($generated@@399 ($generated@@82 $generated@@186 $generated@@4) $generated@@624)) $generated@@624) ($generated@@174 ($generated@@399 ($generated@@82 $generated@@186 $generated@@4) $generated@@624) ($generated@@292 $generated@@625))))
 :pattern ( ($generated@@274 $generated@@624 ($generated@@292 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) $generated@@186) (= (type $generated@@627) $generated@@70)) ($generated@@274 $generated@@626 ($generated@@297 $generated@@627))) (and (= ($generated@@336 ($generated@@399 ($generated@@82 $generated@@186 $generated@@4) $generated@@626)) $generated@@626) ($generated@@174 ($generated@@399 ($generated@@82 $generated@@186 $generated@@4) $generated@@626) ($generated@@297 $generated@@627))))
 :pattern ( ($generated@@274 $generated@@626 ($generated@@297 $generated@@627)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (= (type $generated@@628) $generated@@186) (= (type $generated@@629) $generated@@70)) ($generated@@274 $generated@@628 ($generated@@195 $generated@@629))) (and (= ($generated@@336 ($generated@@399 ($generated@@82 $generated@@186 $generated@@2) $generated@@628)) $generated@@628) ($generated@@174 ($generated@@399 ($generated@@82 $generated@@186 $generated@@2) $generated@@628) ($generated@@195 $generated@@629))))
 :pattern ( ($generated@@274 $generated@@628 ($generated@@195 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@630) $generated@@186) (= (type $generated@@631) $generated@@70)) ($generated@@274 $generated@@630 ($generated@@553 $generated@@631))) (and (= ($generated@@336 ($generated@@399 ($generated@@320 $generated@@186) $generated@@630)) $generated@@630) ($generated@@174 ($generated@@399 ($generated@@320 $generated@@186) $generated@@630) ($generated@@553 $generated@@631))))
 :pattern ( ($generated@@274 $generated@@630 ($generated@@553 $generated@@631)))
)))
(assert (= ($generated@@78 $generated@@268) $generated@@64))
(assert (= ($generated@@618 $generated@@268) $generated@@68))
(assert (= ($generated@@78 $generated@@271) $generated@@66))
(assert (= ($generated@@618 $generated@@271) $generated@@69))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@632) ($generated@@82 $generated@@186 $generated@@2)) (= (type $generated@@633) $generated@@70)) (= (type $generated@@634) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@632 ($generated@@195 $generated@@633) $generated@@634) (forall (($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@186) (< 0 ($generated ($generated@@87 $generated@@632 $generated@@635)))) ($generated@@306 $generated@@635 $generated@@633 $generated@@634))
 :pattern ( ($generated@@87 $generated@@632 $generated@@635))
))))
 :pattern ( ($generated@@80 $generated@@632 ($generated@@195 $generated@@633) $generated@@634))
)))
(assert (= $generated@@192 ($generated@@302 $generated@@192)))
(assert (= $generated@@194 ($generated@@302 $generated@@194)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) $generated@@139) (= (type $generated@@637) $generated@@70)) (= (type $generated@@638) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@281 $generated@@638) (and ($generated@@176 $generated@@636) (exists (($generated@@639 T@U) ) (!  (and (= (type $generated@@639) $generated@@70) ($generated@@80 $generated@@636 ($generated@@177 $generated@@637 $generated@@639) $generated@@638))
 :pattern ( ($generated@@80 $generated@@636 ($generated@@177 $generated@@637 $generated@@639) $generated@@638))
))))) ($generated@@306 ($generated@@184 $generated@@636) $generated@@637 $generated@@638))
 :pattern ( ($generated@@306 ($generated@@184 $generated@@636) $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) $generated@@139) (= (type $generated@@641) $generated@@70)) (= (type $generated@@642) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@281 $generated@@642) (and ($generated@@176 $generated@@640) (exists (($generated@@643 T@U) ) (!  (and (= (type $generated@@643) $generated@@70) ($generated@@80 $generated@@640 ($generated@@177 $generated@@643 $generated@@641) $generated@@642))
 :pattern ( ($generated@@80 $generated@@640 ($generated@@177 $generated@@643 $generated@@641) $generated@@642))
))))) ($generated@@306 ($generated@@185 $generated@@640) $generated@@641 $generated@@642))
 :pattern ( ($generated@@306 ($generated@@185 $generated@@640) $generated@@641 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) $generated@@186) (= (type $generated@@645) $generated@@186)) (= ($generated@@273 ($generated@@302 $generated@@644) ($generated@@302 $generated@@645)) ($generated@@302 ($generated@@273 $generated@@644 $generated@@645))))
 :pattern ( ($generated@@273 ($generated@@302 $generated@@644) ($generated@@302 $generated@@645)))
)))
(assert (forall (($generated@@646 T@U) ) (! (= ($generated@@336 ($generated@@302 $generated@@646)) ($generated@@302 ($generated@@336 $generated@@646)))
 :pattern ( ($generated@@336 ($generated@@302 $generated@@646)))
)))
(assert  (=> (<= 1 $generated@@328) (forall (($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@139) (or ($generated@@385 $generated@@647) (and (not (= 1 $generated@@328)) ($generated@@174 $generated@@647 $generated@@268)))) ($generated@@174 ($generated@@372 $generated@@647) $generated@@271))
 :pattern ( ($generated@@372 $generated@@647))
))))
(assert  (=> (<= 1 $generated@@328) (forall (($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@648) $generated@@139) (or ($generated@@387 $generated@@648) (and (not (= 1 $generated@@328)) ($generated@@174 $generated@@648 $generated@@271)))) ($generated@@174 ($generated@@386 $generated@@648) $generated@@268))
 :pattern ( ($generated@@386 $generated@@648))
))))
(assert (forall (($generated@@649 T@U) ) (! (let (($generated@@650 ($generated@@321 (type $generated@@649))))
 (=> (and (= (type $generated@@649) ($generated@@320 $generated@@650)) (= ($generated@@319 $generated@@649) 0)) (= $generated@@649 ($generated@@318 $generated@@650))))
 :pattern ( ($generated@@319 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (! (let (($generated@@654 (type $generated@@652)))
 (=> (and (and (= (type $generated@@651) ($generated@@82 $generated@@654 $generated@@2)) (= (type $generated@@653) $generated@@2)) (<= 0 ($generated $generated@@653))) (= ($generated@@341 ($generated@@88 $generated@@651 $generated@@652 $generated@@653)) (+ (- ($generated@@341 $generated@@651) ($generated ($generated@@87 $generated@@651 $generated@@652))) ($generated $generated@@653)))))
 :pattern ( ($generated@@341 ($generated@@88 $generated@@651 $generated@@652 $generated@@653)))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@656) $generated@@2)) ($generated@@80 $generated@@656 $generated@@46 $generated@@655))
 :pattern ( ($generated@@80 $generated@@656 $generated@@46 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@658) $generated@@3)) ($generated@@80 $generated@@658 $generated@@47 $generated@@657))
 :pattern ( ($generated@@80 $generated@@658 $generated@@47 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@660) $generated@@4)) ($generated@@80 $generated@@660 $generated@@44 $generated@@659))
 :pattern ( ($generated@@80 $generated@@660 $generated@@44 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@662) $generated@@511)) ($generated@@80 $generated@@662 $generated@@45 $generated@@661))
 :pattern ( ($generated@@80 $generated@@662 $generated@@45 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@664) $generated@@186)) ($generated@@80 $generated@@664 $generated@@48 $generated@@663))
 :pattern ( ($generated@@80 $generated@@664 $generated@@48 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@320 $generated@@186)) (= (type $generated@@666) $generated@@70)) (= ($generated@@174 $generated@@665 ($generated@@553 $generated@@666)) (forall (($generated@@667 Int) ) (!  (=> (and (<= 0 $generated@@667) (< $generated@@667 ($generated@@319 $generated@@665))) ($generated@@274 ($generated@@554 $generated@@665 $generated@@667) $generated@@666))
 :pattern ( ($generated@@554 $generated@@665 $generated@@667))
))))
 :pattern ( ($generated@@174 $generated@@665 ($generated@@553 $generated@@666)))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 Int) ) (!  (=> (= (type $generated@@669) ($generated@@320 $generated@@186)) (=> (and (<= 0 $generated@@670) (< $generated@@670 ($generated@@319 $generated@@669))) (< ($generated@@594 ($generated@@399 $generated@@139 ($generated@@554 $generated@@669 $generated@@670))) ($generated@@668 $generated@@669))))
 :pattern ( ($generated@@594 ($generated@@399 $generated@@139 ($generated@@554 $generated@@669 $generated@@670))))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (= (type $generated@@671) ($generated@@144 $generated@@186 $generated@@186)) (= (type $generated@@672) $generated@@70)) (= (type $generated@@673) $generated@@70)) ($generated@@174 $generated@@671 ($generated@@331 $generated@@672 $generated@@673))) (and (and ($generated@@174 ($generated@@142 $generated@@671) ($generated@@292 $generated@@672)) ($generated@@174 ($generated@@408 $generated@@671) ($generated@@292 $generated@@673))) ($generated@@174 ($generated@@443 $generated@@671) ($generated@@292 ($generated@@177 $generated@@672 $generated@@673)))))
 :pattern ( ($generated@@174 $generated@@671 ($generated@@331 $generated@@672 $generated@@673)))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (and (= (type $generated@@674) ($generated@@355 $generated@@186 $generated@@186)) (= (type $generated@@675) $generated@@70)) (= (type $generated@@676) $generated@@70)) ($generated@@174 $generated@@674 ($generated@@470 $generated@@675 $generated@@676))) (and (and ($generated@@174 ($generated@@353 $generated@@674) ($generated@@297 $generated@@675)) ($generated@@174 ($generated@@419 $generated@@674) ($generated@@297 $generated@@676))) ($generated@@174 ($generated@@447 $generated@@674) ($generated@@297 ($generated@@177 $generated@@675 $generated@@676)))))
 :pattern ( ($generated@@174 $generated@@674 ($generated@@470 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@2) ($generated@@174 $generated@@677 $generated@@46))
 :pattern ( ($generated@@174 $generated@@677 $generated@@46))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@3) ($generated@@174 $generated@@678 $generated@@47))
 :pattern ( ($generated@@174 $generated@@678 $generated@@47))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@4) ($generated@@174 $generated@@679 $generated@@44))
 :pattern ( ($generated@@174 $generated@@679 $generated@@44))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@511) ($generated@@174 $generated@@680 $generated@@45))
 :pattern ( ($generated@@174 $generated@@680 $generated@@45))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@186) ($generated@@174 $generated@@681 $generated@@48))
 :pattern ( ($generated@@174 $generated@@681 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@683) $generated@@139) (= (type $generated@@684) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@682) ($generated@@82 $generated@@186 $generated@@4))) (= (type $generated@@685) ($generated@@144 $generated@@186 $generated@@186))) (= (type $generated@@686) $generated@@139)) (= (type $generated@@687) ($generated@@82 $generated@@186 $generated@@4))) (= (type $generated@@688) $generated@@139)) (= (type $generated@@689) ($generated@@202 $generated@@83 $generated@@4))) (= (type $generated@@690) $generated@@83)) (= (type $generated@@691) ($generated@@202 $generated@@83 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 21) (let (($generated@@693 true))
(let (($generated@@694  (=> (and (not ($generated@@0 ($generated@@87 $generated@@682 ($generated@@336 $generated@@683)))) (= (ControlFlow 0 6) 2)) $generated@@693)))
(let (($generated@@695  (=> (and (and ($generated@@0 ($generated@@87 $generated@@682 ($generated@@336 $generated@@683))) ($generated@@80 $generated@@683 $generated@@271 $generated@@684)) (and ($generated@@387 $generated@@683) ($generated@@140 ($generated@@386 $generated@@683)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@0 ($generated@@87 ($generated@@142 $generated@@685) ($generated@@336 ($generated@@386 $generated@@683))))) (=> ($generated@@0 ($generated@@87 ($generated@@142 $generated@@685) ($generated@@336 ($generated@@386 $generated@@683)))) (=> (= (ControlFlow 0 4) 2) $generated@@693))))))
(let (($generated@@696  (=> (and ($generated@@174 $generated@@683 $generated@@271) ($generated@@80 $generated@@683 $generated@@271 $generated@@684)) (and (=> (= (ControlFlow 0 7) 4) $generated@@695) (=> (= (ControlFlow 0 7) 6) $generated@@694)))))
(let (($generated@@697  (=> (and (not (and ($generated@@174 $generated@@683 $generated@@271) ($generated@@80 $generated@@683 $generated@@271 $generated@@684))) (= (ControlFlow 0 3) 2)) $generated@@693)))
(let (($generated@@698  (=> (forall (($generated@@699 T@U) ) (!  (=> (and (and (= (type $generated@@699) $generated@@139) ($generated@@174 $generated@@699 $generated@@268)) ($generated@@0 ($generated@@87 ($generated@@142 $generated@@685) ($generated@@336 $generated@@699)))) ($generated@@138 $generated@@699))
 :pattern ( ($generated@@87 ($generated@@142 $generated@@685) ($generated@@336 $generated@@699)))
)) (and (=> (= (ControlFlow 0 8) (- 0 9)) (forall (($generated@@700 T@U) ) (!  (=> (and (and (= (type $generated@@700) $generated@@139) ($generated@@174 $generated@@700 $generated@@268)) ($generated@@0 ($generated@@87 ($generated@@142 $generated@@685) ($generated@@336 $generated@@700)))) ($generated@@286 $generated@@700 $generated@@192))
 :pattern ( ($generated@@87 ($generated@@142 $generated@@685) ($generated@@336 $generated@@700)))
))) (=> (forall (($generated@@701 T@U) ) (!  (=> (and (and (= (type $generated@@701) $generated@@139) ($generated@@174 $generated@@701 $generated@@268)) ($generated@@0 ($generated@@87 ($generated@@142 $generated@@685) ($generated@@336 $generated@@701)))) ($generated@@286 $generated@@701 $generated@@192))
 :pattern ( ($generated@@87 ($generated@@142 $generated@@685) ($generated@@336 $generated@@701)))
)) (and (=> (= (ControlFlow 0 8) 7) $generated@@696) (=> (= (ControlFlow 0 8) 3) $generated@@697)))))))
(let (($generated@@702  (=> (and (not ($generated@@0 ($generated@@87 ($generated@@142 $generated@@685) ($generated@@336 $generated@@686)))) (= (ControlFlow 0 12) 8)) $generated@@698)))
(let (($generated@@703  (=> (and ($generated@@0 ($generated@@87 ($generated@@142 $generated@@685) ($generated@@336 $generated@@686))) (= (ControlFlow 0 11) 8)) $generated@@698)))
(let (($generated@@704  (=> (and ($generated@@174 $generated@@686 $generated@@268) ($generated@@80 $generated@@686 $generated@@268 $generated@@684)) (and (=> (= (ControlFlow 0 13) 11) $generated@@703) (=> (= (ControlFlow 0 13) 12) $generated@@702)))))
(let (($generated@@705  (=> (and (not (and ($generated@@174 $generated@@686 $generated@@268) ($generated@@80 $generated@@686 $generated@@268 $generated@@684))) (= (ControlFlow 0 10) 8)) $generated@@698)))
(let (($generated@@706  (=> (and (and (= $generated@@687 ($generated@@371 $generated@@268 ($generated@@142 $generated@@685) ($generated@@142 $generated@@685))) (forall (($generated@@707 T@U) ) (!  (=> (and (and (= (type $generated@@707) $generated@@139) ($generated@@174 $generated@@707 $generated@@268)) ($generated@@0 ($generated@@87 ($generated@@142 $generated@@685) ($generated@@336 $generated@@707)))) ($generated@@385 $generated@@707))
 :pattern ( ($generated@@372 $generated@@707))
 :pattern ( ($generated@@87 ($generated@@142 $generated@@685) ($generated@@336 $generated@@707)))
))) (and ($generated@@174 $generated@@687 ($generated@@292 $generated@@271)) (= $generated@@682 $generated@@687))) (and (=> (= (ControlFlow 0 14) 13) $generated@@704) (=> (= (ControlFlow 0 14) 10) $generated@@705)))))
(let (($generated@@708  (=> (and (not ($generated@@0 ($generated@@87 ($generated@@142 $generated@@685) ($generated@@336 $generated@@688)))) (= (ControlFlow 0 17) 14)) $generated@@706)))
(let (($generated@@709  (=> ($generated@@0 ($generated@@87 ($generated@@142 $generated@@685) ($generated@@336 $generated@@688))) (=> (and (and ($generated@@80 $generated@@688 $generated@@268 $generated@@684) ($generated@@385 $generated@@688)) (and ($generated@@270 ($generated@@372 $generated@@688)) (= (ControlFlow 0 16) 14))) $generated@@706))))
(let (($generated@@710  (=> (and ($generated@@174 $generated@@688 $generated@@268) ($generated@@80 $generated@@688 $generated@@268 $generated@@684)) (and (=> (= (ControlFlow 0 18) 16) $generated@@709) (=> (= (ControlFlow 0 18) 17) $generated@@708)))))
(let (($generated@@711  (=> (and (not (and ($generated@@174 $generated@@688 $generated@@268) ($generated@@80 $generated@@688 $generated@@268 $generated@@684))) (= (ControlFlow 0 15) 14)) $generated@@706)))
(let (($generated@@712  (=> (= $generated@@689 ($generated@@256 $generated@@690 $generated@@684 $generated@@60 false)) (=> (and ($generated@@174 $generated@@682 ($generated@@292 $generated@@271)) ($generated@@80 $generated@@682 ($generated@@292 $generated@@271) $generated@@684)) (and (=> (= (ControlFlow 0 19) 18) $generated@@710) (=> (= (ControlFlow 0 19) 15) $generated@@711))))))
(let (($generated@@713 true))
(let (($generated@@714  (=> (= $generated@@691 ($generated@@201 $generated@@690 $generated@@684 $generated@@60 false)) (and (=> (= (ControlFlow 0 20) 1) $generated@@713) (=> (= (ControlFlow 0 20) 19) $generated@@712)))))
(let (($generated@@715  (=> (and (and (and ($generated@@281 $generated@@684) ($generated@@692 $generated@@684)) ($generated@@174 $generated@@685 ($generated@@331 $generated@@268 $generated@@46))) (and (= 2 $generated@@328) (= (ControlFlow 0 21) 20))) $generated@@714)))
$generated@@715))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@142 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@T T@T) T@T)
(declare-fun $generated@@144 (T@T) T@T)
(declare-fun $generated@@145 (T@T) T@T)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U) T@U)
(declare-fun $generated@@177 () T@T)
(declare-fun $generated@@183 (T@U T@U) Bool)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 () T@T)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@196 (T@U T@U T@U) T@U)
(declare-fun $generated@@197 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@198 (T@T T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@200 (T@T) T@T)
(declare-fun $generated@@201 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@252 () Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@257 (T@U T@U) T@U)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 (T@U T@U) T@U)
(declare-fun $generated@@269 (T@U T@U) T@U)
(declare-fun $generated@@270 (T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@278 (T@U) Bool)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@291 (Int) Int)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@297 (T@U T@U) T@U)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@308 (Int) T@U)
(declare-fun $generated@@309 (T@U) Int)
(declare-fun $generated@@310 () T@T)
(declare-fun $generated@@313 (T@U) Bool)
(declare-fun $generated@@314 (T@U T@U T@U) Bool)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@328 (T@T) T@U)
(declare-fun $generated@@329 (T@U) Int)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@350 (T@U) Int)
(declare-fun $generated@@351 (T@T) T@U)
(declare-fun $generated@@356 (T@T T@T) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@T T@T) T@U)
(declare-fun $generated@@364 (T@T T@T) T@T)
(declare-fun $generated@@365 (T@T) T@T)
(declare-fun $generated@@366 (T@T) T@T)
(declare-fun $generated@@380 (T@U T@U) Bool)
(declare-fun $generated@@388 (T@T T@U) T@U)
(declare-fun $generated@@392 (T@U Int) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@464 (T@U T@U) T@U)
(declare-fun $generated@@475 (T@U T@U) T@U)
(declare-fun $generated@@490 (T@T) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@564 (T@U) Int)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@574 (T@U) T@U)
(declare-fun $generated@@578 (T@U) T@U)
(declare-fun $generated@@592 (T@U) Int)
(declare-fun $generated@@593 (T@U) Int)
(declare-fun $generated@@601 (T@U T@U T@U) T@U)
(declare-fun $generated@@624 (T@T) T@U)
(declare-fun $generated@@635 (T@U) T@U)
(declare-fun $generated@@639 (T@U) T@U)
(declare-fun $generated@@640 (T@U) T@U)
(declare-fun $generated@@693 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert  (and (and (and (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ) (= ($generated@@1 ($generated@@143 $generated@@146 $generated@@147)) 14)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ) (! (= ($generated@@144 ($generated@@143 $generated@@148 $generated@@149)) $generated@@148)
 :pattern ( ($generated@@143 $generated@@148 $generated@@149))
))) (forall (($generated@@150 T@T) ($generated@@151 T@T) ) (! (= ($generated@@145 ($generated@@143 $generated@@150 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@143 $generated@@150 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@144 (type $generated@@152))))
(= (type ($generated@@141 $generated@@152)) ($generated@@78 $generated@@153 $generated@@4)))
 :pattern ( ($generated@@141 $generated@@152))
))) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (let (($generated@@157 ($generated@@82 (type $generated@@155))))
(let (($generated@@158 ($generated@@81 (type $generated@@154))))
(= (type ($generated@@142 $generated@@154 $generated@@155 $generated@@156)) ($generated@@143 $generated@@158 $generated@@157))))
 :pattern ( ($generated@@142 $generated@@154 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 ($generated@@82 (type $generated@@160))))
(let (($generated@@163 ($generated@@81 (type $generated@@159))))
 (=> (and (and (= (type $generated@@159) ($generated@@78 $generated@@163 $generated@@4)) (= (type $generated@@160) ($generated@@78 $generated@@163 $generated@@162))) (= (type $generated@@161) $generated@@66)) (= ($generated@@141 ($generated@@142 $generated@@159 $generated@@160 $generated@@161)) $generated@@159))))
 :pattern ( ($generated@@141 ($generated@@142 $generated@@159 $generated@@160 $generated@@161)))
)))
(assert (forall (($generated@@165 T@U) ) (! (let (($generated@@166 ($generated@@145 (type $generated@@165))))
(let (($generated@@167 ($generated@@144 (type $generated@@165))))
(= (type ($generated@@164 $generated@@165)) ($generated@@78 $generated@@167 $generated@@166))))
 :pattern ( ($generated@@164 $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (let (($generated@@171 ($generated@@82 (type $generated@@169))))
(let (($generated@@172 ($generated@@81 (type $generated@@168))))
 (=> (and (and (= (type $generated@@168) ($generated@@78 $generated@@172 $generated@@4)) (= (type $generated@@169) ($generated@@78 $generated@@172 $generated@@171))) (= (type $generated@@170) $generated@@66)) (= ($generated@@164 ($generated@@142 $generated@@168 $generated@@169 $generated@@170)) $generated@@169))))
 :pattern ( ($generated@@164 ($generated@@142 $generated@@168 $generated@@169 $generated@@170)))
)))
(assert (forall (($generated@@174 T@U) ) (!  (=> (= (type $generated@@174) $generated@@2) ($generated@@173 $generated@@174 ($generated@@77 0)))
 :pattern ( ($generated@@173 $generated@@174 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@177) 15) (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= (type ($generated@@176 $generated@@178 $generated@@179)) $generated@@66)
 :pattern ( ($generated@@176 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (and (= (type $generated@@180) $generated@@66) (= (type $generated@@181) $generated@@66)) (= (type $generated@@182) $generated@@177)) ($generated@@173 $generated@@182 ($generated@@176 $generated@@180 $generated@@181))) ($generated@@175 $generated@@182))
 :pattern ( ($generated@@175 $generated@@182) ($generated@@173 $generated@@182 ($generated@@176 $generated@@180 $generated@@181)))
)))
(assert  (and (and (= ($generated@@1 $generated@@186) 16) (forall (($generated@@187 T@U) ) (! (= (type ($generated@@184 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@184 $generated@@187))
))) (forall (($generated@@188 T@U) ) (! (= (type ($generated@@185 $generated@@188)) $generated@@186)
 :pattern ( ($generated@@185 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) $generated@@177) (= (type $generated@@190) $generated@@177)) true) (= ($generated@@183 $generated@@189 $generated@@190)  (and (= ($generated@@184 $generated@@189) ($generated@@184 $generated@@190)) (= ($generated@@185 $generated@@189) ($generated@@185 $generated@@190)))))
 :pattern ( ($generated@@183 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@66)
 :pattern ( ($generated@@191 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (= (type $generated@@194) ($generated@@78 $generated@@186 $generated@@2)) (= (type $generated@@195) $generated@@66)) ($generated@@173 $generated@@194 ($generated@@191 $generated@@195))) ($generated@@192 $generated@@194))
 :pattern ( ($generated@@173 $generated@@194 ($generated@@191 $generated@@195)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (= ($generated@@1 ($generated@@198 $generated@@202 $generated@@203)) 17)) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@199 ($generated@@198 $generated@@204 $generated@@205)) $generated@@204)
 :pattern ( ($generated@@198 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@T) ($generated@@207 T@T) ) (! (= ($generated@@200 ($generated@@198 $generated@@206 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@198 $generated@@206 $generated@@207))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@200 (type $generated@@208))))
(= (type ($generated@@196 $generated@@208 $generated@@209 $generated@@210)) $generated@@211))
 :pattern ( ($generated@@196 $generated@@208 $generated@@209 $generated@@210))
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 (type $generated@@215)))
(let (($generated@@217 (type $generated@@213)))
(= (type ($generated@@201 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@198 $generated@@217 $generated@@216))))
 :pattern ( ($generated@@201 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@200 (type $generated@@218))))
 (=> (= (type $generated@@221) $generated@@222) (= ($generated@@196 ($generated@@201 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@219 $generated@@220) $generated@@221)))
 :weight 0
))) (and (and (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@196 ($generated@@201 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@196 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
)) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or (= $generated@@232 $generated@@234) (= ($generated@@196 ($generated@@201 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@196 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (or true (= ($generated@@196 ($generated@@201 $generated@@236 $generated@@237 $generated@@238 $generated@@235) $generated@@239 $generated@@240) ($generated@@196 $generated@@236 $generated@@239 $generated@@240)))
 :weight 0
)))) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Bool) ) (! (= (type ($generated@@197 $generated@@241 $generated@@242 $generated@@243 $generated@@244)) ($generated@@198 $generated@@79 $generated@@4))
 :pattern ( ($generated@@197 $generated@@241 $generated@@242 $generated@@243 $generated@@244))
))))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 Bool) ($generated@@249 T@U) ($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@69 (type $generated@@250))))
 (=> (and (and (and (and (= (type $generated@@245) $generated@@79) (= (type $generated@@246) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@247) ($generated@@68 $generated@@4))) (= (type $generated@@249) $generated@@79)) (= (type $generated@@250) ($generated@@68 $generated@@251))) (= ($generated@@0 ($generated@@196 ($generated@@197 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249 $generated@@250))  (=> (and (not (= $generated@@249 $generated@@245)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@246 $generated@@249) $generated@@247))) $generated@@248))))
 :pattern ( ($generated@@196 ($generated@@197 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249 $generated@@250))
)))
(assert  (and (and (and (and (and (forall (($generated@@260 T@U) ) (! (= (type ($generated@@253 $generated@@260)) ($generated@@143 $generated@@186 $generated@@186))
 :pattern ( ($generated@@253 $generated@@260))
)) (forall (($generated@@261 T@U) ) (! (= (type ($generated@@255 $generated@@261)) $generated@@66)
 :pattern ( ($generated@@255 $generated@@261))
))) (forall (($generated@@262 T@U) ) (! (= (type ($generated@@256 $generated@@262)) $generated@@66)
 :pattern ( ($generated@@256 $generated@@262))
))) (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (! (= (type ($generated@@257 $generated@@263 $generated@@264)) ($generated@@78 $generated@@186 $generated@@4))
 :pattern ( ($generated@@257 $generated@@263 $generated@@264))
))) (= (type $generated@@258) ($generated@@78 $generated@@186 $generated@@186))) (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (! (= (type ($generated@@259 $generated@@265 $generated@@266)) $generated@@66)
 :pattern ( ($generated@@259 $generated@@265 $generated@@266))
))))
(assert  (=> (<= 1 $generated@@252) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@78 $generated@@186 $generated@@4)) (or ($generated@@254 $generated@@267) (and (not (= 1 $generated@@252)) ($generated@@173 $generated@@267 ($generated@@255 ($generated@@256 $generated@@45)))))) (= ($generated@@253 $generated@@267) (let (($generated@@268 ($generated@@142 ($generated@@257 ($generated@@256 $generated@@45) $generated@@267) $generated@@258 ($generated@@259 ($generated@@256 $generated@@45) ($generated@@256 $generated@@45)))))
($generated@@142 ($generated@@257 ($generated@@256 $generated@@45) ($generated@@141 $generated@@268)) $generated@@258 ($generated@@259 ($generated@@256 $generated@@45) ($generated@@256 $generated@@45))))))
 :pattern ( ($generated@@253 $generated@@267))
))))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (! (= (type ($generated@@269 $generated@@271 $generated@@272)) $generated@@177)
 :pattern ( ($generated@@269 $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (= (type $generated@@273) $generated@@66) (= (type $generated@@274) $generated@@66)) (= (type $generated@@275) $generated@@186)) (= (type $generated@@276) $generated@@186)) (= ($generated@@173 ($generated@@269 $generated@@275 $generated@@276) ($generated@@176 $generated@@273 $generated@@274))  (and ($generated@@270 $generated@@275 $generated@@273) ($generated@@270 $generated@@276 $generated@@274))))
 :pattern ( ($generated@@173 ($generated@@269 $generated@@275 $generated@@276) ($generated@@176 $generated@@273 $generated@@274)))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@277 $generated@@279)) ($generated@@143 $generated@@186 $generated@@186))
 :pattern ( ($generated@@277 $generated@@279))
)))
(assert  (=> (<= 1 $generated@@252) (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) ($generated@@143 $generated@@186 $generated@@186)) (or ($generated@@278 $generated@@280) (and (not (= 1 $generated@@252)) ($generated@@173 $generated@@280 ($generated@@259 $generated@@138 $generated@@138))))) ($generated@@173 ($generated@@277 $generated@@280) ($generated@@259 $generated@@138 $generated@@138)))
 :pattern ( ($generated@@277 $generated@@280))
))))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@177) (= (type $generated@@282) $generated@@177)) (= ($generated@@183 $generated@@281 $generated@@282) (= $generated@@281 $generated@@282)))
 :pattern ( ($generated@@183 $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) ($generated@@78 $generated@@186 $generated@@4)) (= (type $generated@@284) $generated@@66)) (= ($generated@@173 $generated@@283 ($generated@@255 $generated@@284)) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@186) ($generated@@0 ($generated@@83 $generated@@283 $generated@@285))) ($generated@@270 $generated@@285 $generated@@284))
 :pattern ( ($generated@@83 $generated@@283 $generated@@285))
))))
 :pattern ( ($generated@@173 $generated@@283 ($generated@@255 $generated@@284)))
)))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@66)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) ($generated@@78 $generated@@186 $generated@@4)) (= (type $generated@@289) $generated@@66)) (= ($generated@@173 $generated@@288 ($generated@@286 $generated@@289)) (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@186) ($generated@@0 ($generated@@83 $generated@@288 $generated@@290))) ($generated@@270 $generated@@290 $generated@@289))
 :pattern ( ($generated@@83 $generated@@288 $generated@@290))
))))
 :pattern ( ($generated@@173 $generated@@288 ($generated@@286 $generated@@289)))
)))
(assert (forall (($generated@@292 Int) ) (! (= ($generated@@291 $generated@@292) $generated@@292)
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 (type $generated@@294)))
(= (type ($generated@@293 $generated@@294)) $generated@@295))
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (= ($generated@@293 $generated@@296) $generated@@296)
 :pattern ( ($generated@@293 $generated@@296))
)))
(assert  (and (and (forall (($generated@@300 T@T) ) (= ($generated@@1 ($generated@@298 $generated@@300)) 18)) (forall (($generated@@301 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@298 $generated@@301))
))) (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (! (let (($generated@@304 (type $generated@@303)))
(= (type ($generated@@297 $generated@@302 $generated@@303)) ($generated@@298 $generated@@304)))
 :pattern ( ($generated@@297 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and (= (type $generated@@305) ($generated@@298 $generated@@186)) (= (type $generated@@306) $generated@@186)) (= (type $generated@@307) $generated@@66)) (and ($generated@@173 $generated@@305 ($generated@@256 $generated@@307)) ($generated@@270 $generated@@306 $generated@@307))) ($generated@@173 ($generated@@297 $generated@@305 $generated@@306) ($generated@@256 $generated@@307)))
 :pattern ( ($generated@@173 ($generated@@297 $generated@@305 $generated@@306) ($generated@@256 $generated@@307)))
)))
(assert  (and (= ($generated@@1 $generated@@310) 19) (forall (($generated@@311 Int) ) (! (= (type ($generated@@308 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@308 $generated@@311))
))))
(assert (forall (($generated@@312 Int) ) (!  (=> (and (<= 0 $generated@@312) (< $generated@@312 65536)) (= ($generated@@309 ($generated@@308 $generated@@312)) $generated@@312))
 :pattern ( ($generated@@308 $generated@@312))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@315) $generated@@66) (= (type $generated@@316) $generated@@66)) (= (type $generated@@317) $generated@@186)) (= (type $generated@@318) $generated@@186)) (= (type $generated@@319) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@313 $generated@@319)) (= ($generated@@76 ($generated@@269 $generated@@317 $generated@@318) ($generated@@176 $generated@@315 $generated@@316) $generated@@319)  (and ($generated@@314 $generated@@317 $generated@@315 $generated@@319) ($generated@@314 $generated@@318 $generated@@316 $generated@@319))))
 :pattern ( ($generated@@76 ($generated@@269 $generated@@317 $generated@@318) ($generated@@176 $generated@@315 $generated@@316) $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@70)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ) (!  (=> (= (type $generated@@322) $generated@@177) (= ($generated@@175 $generated@@322) (= ($generated@@320 $generated@@322) $generated@@62)))
 :pattern ( ($generated@@175 $generated@@322))
)))
(assert  (=> (<= 1 $generated@@252) (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) ($generated@@78 $generated@@186 $generated@@4)) (or ($generated@@254 ($generated@@293 $generated@@323)) (and (not (= 1 $generated@@252)) ($generated@@173 $generated@@323 ($generated@@255 ($generated@@256 $generated@@45)))))) (= ($generated@@253 ($generated@@293 $generated@@323)) (let (($generated@@324 ($generated@@142 ($generated@@257 ($generated@@256 $generated@@45) ($generated@@293 $generated@@323)) $generated@@258 ($generated@@259 ($generated@@256 $generated@@45) ($generated@@256 $generated@@45)))))
($generated@@142 ($generated@@257 ($generated@@256 $generated@@45) ($generated@@141 $generated@@324)) $generated@@258 ($generated@@259 ($generated@@256 $generated@@45) ($generated@@256 $generated@@45))))))
 :weight 3
 :pattern ( ($generated@@253 ($generated@@293 $generated@@323)))
))))
(assert (forall (($generated@@325 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@177) ($generated@@175 $generated@@325)) (exists (($generated@@326 T@U) ($generated@@327 T@U) ) (!  (and (and (= (type $generated@@326) $generated@@186) (= (type $generated@@327) $generated@@186)) (= $generated@@325 ($generated@@269 $generated@@326 $generated@@327)))
 :no-pattern (type $generated@@326)
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
)))
 :pattern ( ($generated@@175 $generated@@325))
)))
(assert (forall (($generated@@330 T@T) ) (! (= (type ($generated@@328 $generated@@330)) ($generated@@298 $generated@@330))
 :pattern ( ($generated@@328 $generated@@330))
)))
(assert (forall (($generated@@331 T@T) ) (! (= ($generated@@329 ($generated@@328 $generated@@331)) 0)
 :pattern ( ($generated@@328 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@2) (= ($generated@@173 $generated@@332 $generated@@138) (<= ($generated@@291 0) ($generated $generated@@332))))
 :pattern ( ($generated@@173 $generated@@332 $generated@@138))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (! (let (($generated@@335 (type $generated@@334)))
 (=> (= (type $generated@@333) ($generated@@298 $generated@@335)) (= ($generated@@329 ($generated@@297 $generated@@333 $generated@@334)) (+ 1 ($generated@@329 $generated@@333)))))
 :pattern ( ($generated@@297 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@310) (and (and (= ($generated@@308 ($generated@@309 $generated@@336)) $generated@@336) (<= 0 ($generated@@309 $generated@@336))) (< ($generated@@309 $generated@@336) 65536)))
 :pattern ( ($generated@@309 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (= (type ($generated@@337 $generated@@338)) $generated@@186)
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@66) (= (type $generated@@341) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@314 ($generated@@337 $generated@@339) $generated@@340 $generated@@341) ($generated@@76 $generated@@339 $generated@@340 $generated@@341)))
 :pattern ( ($generated@@314 ($generated@@337 $generated@@339) $generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@342) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@343) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@344) $generated@@186)) (= (type $generated@@345) $generated@@66)) ($generated@@134 $generated@@342 $generated@@343)) ($generated@@314 $generated@@344 $generated@@345 $generated@@342)) ($generated@@314 $generated@@344 $generated@@345 $generated@@343))
 :pattern ( ($generated@@134 $generated@@342 $generated@@343) ($generated@@314 $generated@@344 $generated@@345 $generated@@342))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@346) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@347) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@349) $generated@@66)) ($generated@@134 $generated@@346 $generated@@347)) ($generated@@76 $generated@@348 $generated@@349 $generated@@346)) ($generated@@76 $generated@@348 $generated@@349 $generated@@347))
 :pattern ( ($generated@@134 $generated@@346 $generated@@347) ($generated@@76 $generated@@348 $generated@@349 $generated@@346))
)))
(assert (forall (($generated@@352 T@T) ) (! (= (type ($generated@@351 $generated@@352)) ($generated@@78 $generated@@352 $generated@@2))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@81 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@78 $generated@@354 $generated@@2)) (and (= (= ($generated@@350 $generated@@353) 0) (= $generated@@353 ($generated@@351 $generated@@354))) (=> (not (= ($generated@@350 $generated@@353) 0)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) (< 0 ($generated ($generated@@83 $generated@@353 $generated@@355))))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (! (= (type ($generated@@356 $generated@@357 $generated@@358)) ($generated@@143 $generated@@357 $generated@@358))
 :pattern ( ($generated@@356 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@T) ) (! (let (($generated@@361 (type $generated@@359)))
 (not ($generated@@0 ($generated@@83 ($generated@@141 ($generated@@356 $generated@@361 $generated@@360)) $generated@@359))))
 :pattern ( (let (($generated@@361 (type $generated@@359)))
($generated@@83 ($generated@@141 ($generated@@356 $generated@@361 $generated@@360)) $generated@@359)))
)))
(assert  (and (and (and (and (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (= ($generated@@1 ($generated@@364 $generated@@367 $generated@@368)) 20)) (forall (($generated@@369 T@T) ($generated@@370 T@T) ) (! (= ($generated@@365 ($generated@@364 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@364 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= ($generated@@366 ($generated@@364 $generated@@371 $generated@@372)) $generated@@372)
 :pattern ( ($generated@@364 $generated@@371 $generated@@372))
))) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@365 (type $generated@@373))))
(= (type ($generated@@362 $generated@@373)) ($generated@@78 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@373))
))) (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (! (= (type ($generated@@363 $generated@@375 $generated@@376)) ($generated@@364 $generated@@375 $generated@@376))
 :pattern ( ($generated@@363 $generated@@375 $generated@@376))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@T) ) (! (let (($generated@@379 (type $generated@@377)))
 (not ($generated@@0 ($generated@@83 ($generated@@362 ($generated@@363 $generated@@379 $generated@@378)) $generated@@377))))
 :pattern ( (let (($generated@@379 (type $generated@@377)))
($generated@@83 ($generated@@362 ($generated@@363 $generated@@379 $generated@@378)) $generated@@377)))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@81 (type $generated@@381))))
 (=> (and (= (type $generated@@381) ($generated@@78 $generated@@383 $generated@@4)) (= (type $generated@@382) ($generated@@78 $generated@@383 $generated@@4))) (= ($generated@@380 $generated@@381 $generated@@382) (forall (($generated@@384 T@U) ) (!  (=> (= (type $generated@@384) $generated@@383) (= ($generated@@0 ($generated@@83 $generated@@381 $generated@@384)) ($generated@@0 ($generated@@83 $generated@@382 $generated@@384))))
 :pattern ( ($generated@@83 $generated@@381 $generated@@384))
 :pattern ( ($generated@@83 $generated@@382 $generated@@384))
)))))
 :pattern ( ($generated@@380 $generated@@381 $generated@@382))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@81 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@78 $generated@@386 $generated@@2)) (= ($generated@@192 $generated@@385) (forall (($generated@@387 T@U) ) (!  (=> (= (type $generated@@387) $generated@@386) (and (<= 0 ($generated ($generated@@83 $generated@@385 $generated@@387))) (<= ($generated ($generated@@83 $generated@@385 $generated@@387)) ($generated@@350 $generated@@385))))
 :pattern ( ($generated@@83 $generated@@385 $generated@@387))
)))))
 :pattern ( ($generated@@192 $generated@@385))
)))
(assert (forall (($generated@@389 T@T) ($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@389 $generated@@390)) $generated@@389)
 :pattern ( ($generated@@388 $generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@186) ($generated@@270 $generated@@391 $generated@@138)) (and (= ($generated@@337 ($generated@@388 $generated@@2 $generated@@391)) $generated@@391) ($generated@@173 ($generated@@388 $generated@@2 $generated@@391) $generated@@138)))
 :pattern ( ($generated@@270 $generated@@391 $generated@@138))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 Int) ) (! (let (($generated@@395 ($generated@@299 (type $generated@@393))))
(= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@395))
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 Int) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
 (=> (= (type $generated@@396) ($generated@@298 $generated@@399)) (and (=> (= $generated@@397 ($generated@@329 $generated@@396)) (= ($generated@@392 ($generated@@297 $generated@@396 $generated@@398) $generated@@397) $generated@@398)) (=> (not (= $generated@@397 ($generated@@329 $generated@@396))) (= ($generated@@392 ($generated@@297 $generated@@396 $generated@@398) $generated@@397) ($generated@@392 $generated@@396 $generated@@397))))))
 :pattern ( ($generated@@392 ($generated@@297 $generated@@396 $generated@@398) $generated@@397))
)))
(assert  (=> (<= 1 $generated@@252) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@78 $generated@@186 $generated@@4)) (or ($generated@@254 $generated@@400) (and (not (= 1 $generated@@252)) ($generated@@173 $generated@@400 ($generated@@255 ($generated@@256 $generated@@45)))))) ($generated@@173 ($generated@@253 $generated@@400) ($generated@@259 ($generated@@256 $generated@@45) ($generated@@256 $generated@@45))))
 :pattern ( ($generated@@253 $generated@@400))
))))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@145 (type $generated@@401))))
(let (($generated@@403 ($generated@@144 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@143 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@356 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) ($generated@@0 ($generated@@83 ($generated@@141 $generated@@401) $generated@@404)))
 :no-pattern (type $generated@@404)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
))))))
 :pattern ( ($generated@@141 $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@145 (type $generated@@406))))
(= (type ($generated@@405 $generated@@406)) ($generated@@78 $generated@@407 $generated@@4)))
 :pattern ( ($generated@@405 $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@145 (type $generated@@408))))
(let (($generated@@410 ($generated@@144 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@143 $generated@@410 $generated@@409)) (or (= $generated@@408 ($generated@@356 $generated@@410 $generated@@409)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@409) ($generated@@0 ($generated@@83 ($generated@@405 $generated@@408) $generated@@411)))
 :no-pattern (type $generated@@411)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
))))))
 :pattern ( ($generated@@405 $generated@@408))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@366 (type $generated@@412))))
(let (($generated@@414 ($generated@@365 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@364 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@363 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) ($generated@@0 ($generated@@83 ($generated@@362 $generated@@412) $generated@@415)))
 :no-pattern (type $generated@@415)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
))))))
 :pattern ( ($generated@@362 $generated@@412))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@366 (type $generated@@417))))
(= (type ($generated@@416 $generated@@417)) ($generated@@78 $generated@@418 $generated@@4)))
 :pattern ( ($generated@@416 $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@366 (type $generated@@419))))
(let (($generated@@421 ($generated@@365 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@364 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@363 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@420) ($generated@@0 ($generated@@83 ($generated@@416 $generated@@419) $generated@@422)))
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@416 $generated@@419))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) ($generated@@78 $generated@@186 $generated@@2)) (= (type $generated@@424) $generated@@66)) (= ($generated@@173 $generated@@423 ($generated@@191 $generated@@424)) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@186) (< 0 ($generated ($generated@@83 $generated@@423 $generated@@425)))) ($generated@@270 $generated@@425 $generated@@424))
 :pattern ( ($generated@@83 $generated@@423 $generated@@425))
))))
 :pattern ( ($generated@@173 $generated@@423 ($generated@@191 $generated@@424)))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (= (type $generated@@426) ($generated@@78 $generated@@186 $generated@@4)) (= (type $generated@@427) $generated@@66)) (= (type $generated@@428) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@426 ($generated@@255 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@186) ($generated@@0 ($generated@@83 $generated@@426 $generated@@429))) ($generated@@314 $generated@@429 $generated@@427 $generated@@428))
 :pattern ( ($generated@@83 $generated@@426 $generated@@429))
))))
 :pattern ( ($generated@@76 $generated@@426 ($generated@@255 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (= (type $generated@@430) ($generated@@78 $generated@@186 $generated@@4)) (= (type $generated@@431) $generated@@66)) (= (type $generated@@432) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@430 ($generated@@286 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@186) ($generated@@0 ($generated@@83 $generated@@430 $generated@@433))) ($generated@@314 $generated@@433 $generated@@431 $generated@@432))
 :pattern ( ($generated@@83 $generated@@430 $generated@@433))
))))
 :pattern ( ($generated@@76 $generated@@430 ($generated@@286 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (= (type $generated@@434) $generated@@186) (= ($generated@@83 $generated@@258 $generated@@434) $generated@@434))
 :pattern ( ($generated@@83 $generated@@258 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 (type $generated@@435)))
(= ($generated ($generated@@83 ($generated@@351 $generated@@436) $generated@@435)) 0))
 :pattern ( (let (($generated@@436 (type $generated@@435)))
($generated@@83 ($generated@@351 $generated@@436) $generated@@435)))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) ($generated@@78 $generated@@186 $generated@@4))
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) ($generated@@143 $generated@@186 $generated@@186)) (= (type $generated@@440) $generated@@186)) (= ($generated@@0 ($generated@@83 ($generated@@437 $generated@@439) $generated@@440))  (and ($generated@@0 ($generated@@83 ($generated@@141 $generated@@439) ($generated@@184 ($generated@@388 $generated@@177 $generated@@440)))) (= ($generated@@83 ($generated@@164 $generated@@439) ($generated@@184 ($generated@@388 $generated@@177 $generated@@440))) ($generated@@185 ($generated@@388 $generated@@177 $generated@@440))))))
 :pattern ( ($generated@@83 ($generated@@437 $generated@@439) $generated@@440))
)))
(assert  (and (forall (($generated@@443 T@U) ) (! (= (type ($generated@@441 $generated@@443)) ($generated@@78 $generated@@186 $generated@@4))
 :pattern ( ($generated@@441 $generated@@443))
)) (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@366 (type $generated@@444))))
(let (($generated@@446 ($generated@@365 (type $generated@@444))))
(= (type ($generated@@442 $generated@@444)) ($generated@@78 $generated@@446 $generated@@445))))
 :pattern ( ($generated@@442 $generated@@444))
))))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) ($generated@@364 $generated@@186 $generated@@186)) (= (type $generated@@448) $generated@@186)) (= ($generated@@0 ($generated@@83 ($generated@@441 $generated@@447) $generated@@448))  (and ($generated@@0 ($generated@@83 ($generated@@362 $generated@@447) ($generated@@184 ($generated@@388 $generated@@177 $generated@@448)))) (= ($generated@@83 ($generated@@442 $generated@@447) ($generated@@184 ($generated@@388 $generated@@177 $generated@@448))) ($generated@@185 ($generated@@388 $generated@@177 $generated@@448))))))
 :pattern ( ($generated@@83 ($generated@@441 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@450)))
(let (($generated@@452 ($generated@@144 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@143 $generated@@452 $generated@@451)) (= ($generated@@0 ($generated@@83 ($generated@@405 $generated@@449) $generated@@450)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@452) (and ($generated@@0 ($generated@@83 ($generated@@141 $generated@@449) $generated@@453)) (= $generated@@450 ($generated@@83 ($generated@@164 $generated@@449) $generated@@453))))
 :pattern ( ($generated@@83 ($generated@@141 $generated@@449) $generated@@453))
 :pattern ( ($generated@@83 ($generated@@164 $generated@@449) $generated@@453))
))))))
 :pattern ( ($generated@@83 ($generated@@405 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 (type $generated@@455)))
(let (($generated@@457 ($generated@@365 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@364 $generated@@457 $generated@@456)) (= ($generated@@0 ($generated@@83 ($generated@@416 $generated@@454) $generated@@455)) (exists (($generated@@458 T@U) ) (!  (and (= (type $generated@@458) $generated@@457) (and ($generated@@0 ($generated@@83 ($generated@@362 $generated@@454) $generated@@458)) (= $generated@@455 ($generated@@83 ($generated@@442 $generated@@454) $generated@@458))))
 :pattern ( ($generated@@83 ($generated@@362 $generated@@454) $generated@@458))
 :pattern ( ($generated@@83 ($generated@@442 $generated@@454) $generated@@458))
))))))
 :pattern ( ($generated@@83 ($generated@@416 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (and (= (type $generated@@459) ($generated@@143 $generated@@186 $generated@@186)) (= (type $generated@@460) $generated@@66)) (= (type $generated@@461) $generated@@66)) (= (type $generated@@462) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@459 ($generated@@259 $generated@@460 $generated@@461) $generated@@462) (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@186) ($generated@@0 ($generated@@83 ($generated@@141 $generated@@459) $generated@@463))) (and ($generated@@314 ($generated@@83 ($generated@@164 $generated@@459) $generated@@463) $generated@@461 $generated@@462) ($generated@@314 $generated@@463 $generated@@460 $generated@@462)))
 :pattern ( ($generated@@83 ($generated@@164 $generated@@459) $generated@@463))
 :pattern ( ($generated@@83 ($generated@@141 $generated@@459) $generated@@463))
))))
 :pattern ( ($generated@@76 $generated@@459 ($generated@@259 $generated@@460 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (! (= (type ($generated@@464 $generated@@465 $generated@@466)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (and (and (= (type $generated@@467) ($generated@@364 $generated@@186 $generated@@186)) (= (type $generated@@468) $generated@@66)) (= (type $generated@@469) $generated@@66)) (= (type $generated@@470) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@467 ($generated@@464 $generated@@468 $generated@@469) $generated@@470) (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@186) ($generated@@0 ($generated@@83 ($generated@@362 $generated@@467) $generated@@471))) (and ($generated@@314 ($generated@@83 ($generated@@442 $generated@@467) $generated@@471) $generated@@469 $generated@@470) ($generated@@314 $generated@@471 $generated@@468 $generated@@470)))
 :pattern ( ($generated@@83 ($generated@@442 $generated@@467) $generated@@471))
 :pattern ( ($generated@@83 ($generated@@362 $generated@@467) $generated@@471))
))))
 :pattern ( ($generated@@76 $generated@@467 ($generated@@464 $generated@@468 $generated@@469) $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@81 (type $generated@@472))))
 (=> (and (and (= (type $generated@@472) ($generated@@78 $generated@@474 $generated@@4)) (= (type $generated@@473) ($generated@@78 $generated@@474 $generated@@4))) ($generated@@380 $generated@@472 $generated@@473)) (= $generated@@472 $generated@@473)))
 :pattern ( ($generated@@380 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (! (let (($generated@@478 (type $generated@@477)))
(= (type ($generated@@475 $generated@@476 $generated@@477)) ($generated@@78 $generated@@478 $generated@@4)))
 :pattern ( ($generated@@475 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (! (let (($generated@@482 (type $generated@@480)))
 (=> (and (and (= (type $generated@@479) ($generated@@78 $generated@@482 $generated@@4)) (= (type $generated@@481) $generated@@482)) ($generated@@0 ($generated@@83 $generated@@479 $generated@@481))) ($generated@@0 ($generated@@83 ($generated@@475 $generated@@479 $generated@@480) $generated@@481))))
 :pattern ( ($generated@@475 $generated@@479 $generated@@480) ($generated@@83 $generated@@479 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (! (let (($generated@@486 (type $generated@@484)))
 (=> (and (= (type $generated@@483) ($generated@@78 $generated@@486 $generated@@4)) (= (type $generated@@485) $generated@@486)) (= ($generated@@0 ($generated@@83 ($generated@@475 $generated@@483 $generated@@484) $generated@@485))  (or (= $generated@@485 $generated@@484) ($generated@@0 ($generated@@83 $generated@@483 $generated@@485))))))
 :pattern ( ($generated@@83 ($generated@@475 $generated@@483 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@487) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@488) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@489) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@487 $generated@@489))) (and ($generated@@134 $generated@@487 $generated@@488) ($generated@@134 $generated@@488 $generated@@489))) ($generated@@134 $generated@@487 $generated@@489))
 :pattern ( ($generated@@134 $generated@@487 $generated@@488) ($generated@@134 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@T) ) (! (= (type ($generated@@490 $generated@@491)) ($generated@@78 $generated@@491 $generated@@4))
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@366 (type $generated@@492))))
(let (($generated@@494 ($generated@@365 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@364 $generated@@494 $generated@@493)) (= (= $generated@@492 ($generated@@363 $generated@@494 $generated@@493)) (= ($generated@@362 $generated@@492) ($generated@@490 $generated@@494))))))
 :pattern ( ($generated@@362 $generated@@492))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@366 (type $generated@@495))))
(let (($generated@@497 ($generated@@365 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@364 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@363 $generated@@497 $generated@@496)) (= ($generated@@416 $generated@@495) ($generated@@490 $generated@@496))))))
 :pattern ( ($generated@@416 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@366 (type $generated@@498))))
(let (($generated@@500 ($generated@@365 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@364 $generated@@500 $generated@@499)) (= (= $generated@@498 ($generated@@363 $generated@@500 $generated@@499)) (= ($generated@@441 $generated@@498) ($generated@@490 $generated@@186))))))
 :pattern ( ($generated@@441 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@145 (type $generated@@501))))
(let (($generated@@503 ($generated@@144 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@143 $generated@@503 $generated@@502)) (or (= $generated@@501 ($generated@@356 $generated@@503 $generated@@502)) (exists (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (and (and (= (type $generated@@504) $generated@@186) (= (type $generated@@505) $generated@@186)) ($generated@@0 ($generated@@83 ($generated@@437 $generated@@501) ($generated@@337 ($generated@@269 $generated@@504 $generated@@505)))))
 :no-pattern (type $generated@@504)
 :no-pattern (type $generated@@505)
 :no-pattern ($generated $generated@@504)
 :no-pattern ($generated@@0 $generated@@504)
 :no-pattern ($generated $generated@@505)
 :no-pattern ($generated@@0 $generated@@505)
))))))
 :pattern ( ($generated@@437 $generated@@501))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@366 (type $generated@@506))))
(let (($generated@@508 ($generated@@365 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@364 $generated@@508 $generated@@507)) (or (= $generated@@506 ($generated@@363 $generated@@508 $generated@@507)) (exists (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (and (and (= (type $generated@@509) $generated@@186) (= (type $generated@@510) $generated@@186)) ($generated@@0 ($generated@@83 ($generated@@441 $generated@@506) ($generated@@337 ($generated@@269 $generated@@509 $generated@@510)))))
 :no-pattern (type $generated@@509)
 :no-pattern (type $generated@@510)
 :no-pattern ($generated $generated@@509)
 :no-pattern ($generated@@0 $generated@@509)
 :no-pattern ($generated $generated@@510)
 :no-pattern ($generated@@0 $generated@@510)
))))))
 :pattern ( ($generated@@441 $generated@@506))
)))
(assert  (=> (<= 1 $generated@@252) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) ($generated@@143 $generated@@186 $generated@@186)) (or ($generated@@278 $generated@@511) (and (not (= 1 $generated@@252)) ($generated@@173 $generated@@511 ($generated@@259 $generated@@138 $generated@@138))))) (= ($generated@@277 $generated@@511) (let (($generated@@512 ($generated@@142 ($generated@@257 $generated@@138 ($generated@@141 $generated@@511)) $generated@@258 ($generated@@259 $generated@@138 $generated@@138))))
($generated@@142 ($generated@@257 $generated@@138 ($generated@@141 $generated@@512)) $generated@@258 ($generated@@259 $generated@@138 $generated@@138)))))
 :pattern ( ($generated@@277 $generated@@511))
))))
(assert (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@186) ($generated@@270 $generated@@513 $generated@@46)) (and (= ($generated@@337 ($generated@@388 $generated@@2 $generated@@513)) $generated@@513) ($generated@@173 ($generated@@388 $generated@@2 $generated@@513) $generated@@46)))
 :pattern ( ($generated@@270 $generated@@513 $generated@@46))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@186) ($generated@@270 $generated@@514 $generated@@47)) (and (= ($generated@@337 ($generated@@388 $generated@@3 $generated@@514)) $generated@@514) ($generated@@173 ($generated@@388 $generated@@3 $generated@@514) $generated@@47)))
 :pattern ( ($generated@@270 $generated@@514 $generated@@47))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@186) ($generated@@270 $generated@@515 $generated@@44)) (and (= ($generated@@337 ($generated@@388 $generated@@4 $generated@@515)) $generated@@515) ($generated@@173 ($generated@@388 $generated@@4 $generated@@515) $generated@@44)))
 :pattern ( ($generated@@270 $generated@@515 $generated@@44))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@186) ($generated@@270 $generated@@516 $generated@@45)) (and (= ($generated@@337 ($generated@@388 $generated@@310 $generated@@516)) $generated@@516) ($generated@@173 ($generated@@388 $generated@@310 $generated@@516) $generated@@45)))
 :pattern ( ($generated@@270 $generated@@516 $generated@@45))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@66) (= ($generated@@270 ($generated@@337 $generated@@517) $generated@@518) ($generated@@173 $generated@@517 $generated@@518)))
 :pattern ( ($generated@@270 ($generated@@337 $generated@@517) $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 ($generated@@81 (type $generated@@519))))
 (=> (= (type $generated@@519) ($generated@@78 $generated@@520 $generated@@2)) (<= 0 ($generated@@350 $generated@@519))))
 :pattern ( ($generated@@350 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 ($generated@@299 (type $generated@@521))))
 (=> (= (type $generated@@521) ($generated@@298 $generated@@522)) (<= 0 ($generated@@329 $generated@@521))))
 :pattern ( ($generated@@329 $generated@@521))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@66)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@66) (= (type $generated@@526) $generated@@66)) (= ($generated@@523 ($generated@@259 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@259 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@66)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@66) (= (type $generated@@530) $generated@@66)) (= ($generated@@527 ($generated@@259 $generated@@529 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@259 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@66) (= (type $generated@@532) $generated@@66)) (= ($generated@@74 ($generated@@259 $generated@@531 $generated@@532)) $generated@@58))
 :pattern ( ($generated@@259 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@66)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@66) (= (type $generated@@536) $generated@@66)) (= ($generated@@533 ($generated@@464 $generated@@535 $generated@@536)) $generated@@535))
 :pattern ( ($generated@@464 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@66)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@66) (= (type $generated@@540) $generated@@66)) (= ($generated@@537 ($generated@@464 $generated@@539 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@464 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@66) (= (type $generated@@542) $generated@@66)) (= ($generated@@74 ($generated@@464 $generated@@541 $generated@@542)) $generated@@59))
 :pattern ( ($generated@@464 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@186) (= (type $generated@@544) $generated@@186)) (= ($generated@@320 ($generated@@269 $generated@@543 $generated@@544)) $generated@@62))
 :pattern ( ($generated@@269 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@66)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@66) (= (type $generated@@548) $generated@@66)) (= ($generated@@545 ($generated@@176 $generated@@547 $generated@@548)) $generated@@547))
 :pattern ( ($generated@@176 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@66)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@66) (= (type $generated@@552) $generated@@66)) (= ($generated@@549 ($generated@@176 $generated@@551 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@176 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@186) (= (type $generated@@554) $generated@@186)) (= ($generated@@184 ($generated@@269 $generated@@553 $generated@@554)) $generated@@553))
 :pattern ( ($generated@@269 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@186) (= (type $generated@@556) $generated@@186)) (= ($generated@@185 ($generated@@269 $generated@@555 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@269 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@557) ($generated@@298 $generated@@186)) (= (type $generated@@558) $generated@@66)) (= (type $generated@@559) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@557 ($generated@@256 $generated@@558) $generated@@559) (forall (($generated@@560 Int) ) (!  (=> (and (<= 0 $generated@@560) (< $generated@@560 ($generated@@329 $generated@@557))) ($generated@@314 ($generated@@392 $generated@@557 $generated@@560) $generated@@558 $generated@@559))
 :pattern ( ($generated@@392 $generated@@557 $generated@@560))
))))
 :pattern ( ($generated@@76 $generated@@557 ($generated@@256 $generated@@558) $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (! (let (($generated@@563 (type $generated@@562)))
 (=> (= (type $generated@@561) ($generated@@78 $generated@@563 $generated@@4)) ($generated@@0 ($generated@@83 ($generated@@475 $generated@@561 $generated@@562) $generated@@562))))
 :pattern ( ($generated@@475 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@565 Int) ) (! (= ($generated@@564 ($generated@@77 $generated@@565)) $generated@@565)
 :pattern ( ($generated@@77 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@66)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@66) (= ($generated@@566 ($generated@@255 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@255 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@66) (= ($generated@@74 ($generated@@255 $generated@@569)) $generated@@54))
 :pattern ( ($generated@@255 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@66)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@66) (= ($generated@@570 ($generated@@286 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@286 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@66) (= ($generated@@74 ($generated@@286 $generated@@573)) $generated@@55))
 :pattern ( ($generated@@286 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ) (! (= (type ($generated@@574 $generated@@575)) $generated@@66)
 :pattern ( ($generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@66) (= ($generated@@574 ($generated@@191 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@191 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@66) (= ($generated@@74 ($generated@@191 $generated@@577)) $generated@@56))
 :pattern ( ($generated@@191 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ) (! (= (type ($generated@@578 $generated@@579)) $generated@@66)
 :pattern ( ($generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@66) (= ($generated@@578 ($generated@@256 $generated@@580)) $generated@@580))
 :pattern ( ($generated@@256 $generated@@580))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@66) (= ($generated@@74 ($generated@@256 $generated@@581)) $generated@@57))
 :pattern ( ($generated@@256 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (! (let (($generated@@583 (type $generated@@582)))
(= ($generated@@388 $generated@@583 ($generated@@337 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@337 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@143 $generated@@186 $generated@@186)) (= (type $generated@@585) $generated@@66)) (= (type $generated@@586) $generated@@66)) (= ($generated@@173 $generated@@584 ($generated@@259 $generated@@585 $generated@@586)) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@186) ($generated@@0 ($generated@@83 ($generated@@141 $generated@@584) $generated@@587))) (and ($generated@@270 ($generated@@83 ($generated@@164 $generated@@584) $generated@@587) $generated@@586) ($generated@@270 $generated@@587 $generated@@585)))
 :pattern ( ($generated@@83 ($generated@@164 $generated@@584) $generated@@587))
 :pattern ( ($generated@@83 ($generated@@141 $generated@@584) $generated@@587))
))))
 :pattern ( ($generated@@173 $generated@@584 ($generated@@259 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@588) ($generated@@364 $generated@@186 $generated@@186)) (= (type $generated@@589) $generated@@66)) (= (type $generated@@590) $generated@@66)) (= ($generated@@173 $generated@@588 ($generated@@464 $generated@@589 $generated@@590)) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@186) ($generated@@0 ($generated@@83 ($generated@@362 $generated@@588) $generated@@591))) (and ($generated@@270 ($generated@@83 ($generated@@442 $generated@@588) $generated@@591) $generated@@590) ($generated@@270 $generated@@591 $generated@@589)))
 :pattern ( ($generated@@83 ($generated@@442 $generated@@588) $generated@@591))
 :pattern ( ($generated@@83 ($generated@@362 $generated@@588) $generated@@591))
))))
 :pattern ( ($generated@@173 $generated@@588 ($generated@@464 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@186) (= (type $generated@@595) $generated@@186)) (< ($generated@@592 $generated@@594) ($generated@@593 ($generated@@269 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@269 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@186) (= (type $generated@@597) $generated@@186)) (< ($generated@@592 $generated@@597) ($generated@@593 ($generated@@269 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@269 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@66) (= (type $generated@@599) ($generated@@78 $generated@@186 $generated@@4))) (= (type $generated@@600) $generated@@186)) (= ($generated@@0 ($generated@@83 ($generated@@257 $generated@@598 $generated@@599) $generated@@600))  (and ($generated@@270 $generated@@600 $generated@@598) ($generated@@0 ($generated@@83 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@83 ($generated@@257 $generated@@598 $generated@@599) $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (! (let (($generated@@605 (type $generated@@604)))
(let (($generated@@606 (type $generated@@603)))
(= (type ($generated@@601 $generated@@602 $generated@@603 $generated@@604)) ($generated@@143 $generated@@606 $generated@@605))))
 :pattern ( ($generated@@601 $generated@@602 $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (! (let (($generated@@611 (type $generated@@610)))
(let (($generated@@612 (type $generated@@608)))
 (=> (and (= (type $generated@@607) ($generated@@143 $generated@@612 $generated@@611)) (= (type $generated@@609) $generated@@612)) (and (=> (= $generated@@609 $generated@@608) (and ($generated@@0 ($generated@@83 ($generated@@141 ($generated@@601 $generated@@607 $generated@@608 $generated@@610)) $generated@@609)) (= ($generated@@83 ($generated@@164 ($generated@@601 $generated@@607 $generated@@608 $generated@@610)) $generated@@609) $generated@@610))) (=> (not (= $generated@@609 $generated@@608)) (and (= ($generated@@0 ($generated@@83 ($generated@@141 ($generated@@601 $generated@@607 $generated@@608 $generated@@610)) $generated@@609)) ($generated@@0 ($generated@@83 ($generated@@141 $generated@@607) $generated@@609))) (= ($generated@@83 ($generated@@164 ($generated@@601 $generated@@607 $generated@@608 $generated@@610)) $generated@@609) ($generated@@83 ($generated@@164 $generated@@607) $generated@@609))))))))
 :pattern ( ($generated@@83 ($generated@@141 ($generated@@601 $generated@@607 $generated@@608 $generated@@610)) $generated@@609))
 :pattern ( ($generated@@83 ($generated@@164 ($generated@@601 $generated@@607 $generated@@608 $generated@@610)) $generated@@609))
)))
(assert  (=> (<= 1 $generated@@252) (forall (($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@143 $generated@@186 $generated@@186)) (or ($generated@@278 ($generated@@293 $generated@@613)) (and (not (= 1 $generated@@252)) ($generated@@173 $generated@@613 ($generated@@259 $generated@@138 $generated@@138))))) (= ($generated@@277 ($generated@@293 $generated@@613)) (let (($generated@@614 ($generated@@142 ($generated@@257 $generated@@138 ($generated@@141 $generated@@613)) $generated@@258 ($generated@@259 $generated@@138 $generated@@138))))
($generated@@142 ($generated@@257 $generated@@138 ($generated@@141 $generated@@614)) $generated@@258 ($generated@@259 $generated@@138 $generated@@138)))))
 :weight 3
 :pattern ( ($generated@@277 ($generated@@293 $generated@@613)))
))))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@186) (= (type $generated@@616) $generated@@66)) (= (type $generated@@617) $generated@@66)) ($generated@@270 $generated@@615 ($generated@@259 $generated@@616 $generated@@617))) (and (= ($generated@@337 ($generated@@388 ($generated@@143 $generated@@186 $generated@@186) $generated@@615)) $generated@@615) ($generated@@173 ($generated@@388 ($generated@@143 $generated@@186 $generated@@186) $generated@@615) ($generated@@259 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@270 $generated@@615 ($generated@@259 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@186) (= (type $generated@@619) $generated@@66)) (= (type $generated@@620) $generated@@66)) ($generated@@270 $generated@@618 ($generated@@464 $generated@@619 $generated@@620))) (and (= ($generated@@337 ($generated@@388 ($generated@@364 $generated@@186 $generated@@186) $generated@@618)) $generated@@618) ($generated@@173 ($generated@@388 ($generated@@364 $generated@@186 $generated@@186) $generated@@618) ($generated@@464 $generated@@619 $generated@@620))))
 :pattern ( ($generated@@270 $generated@@618 ($generated@@464 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) $generated@@66) (= (type $generated@@622) $generated@@66)) (= (type $generated@@623) $generated@@186)) ($generated@@270 $generated@@623 ($generated@@176 $generated@@621 $generated@@622))) (and (= ($generated@@337 ($generated@@388 $generated@@177 $generated@@623)) $generated@@623) ($generated@@173 ($generated@@388 $generated@@177 $generated@@623) ($generated@@176 $generated@@621 $generated@@622))))
 :pattern ( ($generated@@270 $generated@@623 ($generated@@176 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@625 T@T) ) (! (= (type ($generated@@624 $generated@@625)) ($generated@@78 $generated@@625 $generated@@4))
 :pattern ( ($generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ) (! (let (($generated@@627 (type $generated@@626)))
 (not ($generated@@0 ($generated@@83 ($generated@@624 $generated@@627) $generated@@626))))
 :pattern ( (let (($generated@@627 (type $generated@@626)))
($generated@@83 ($generated@@624 $generated@@627) $generated@@626)))
)))
(assert (forall (($generated@@628 T@U) ) (! (let (($generated@@629 (type $generated@@628)))
 (not ($generated@@0 ($generated@@83 ($generated@@490 $generated@@629) $generated@@628))))
 :pattern ( (let (($generated@@629 (type $generated@@628)))
($generated@@83 ($generated@@490 $generated@@629) $generated@@628)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@630) ($generated@@78 $generated@@186 $generated@@4)) (= (type $generated@@631) ($generated@@78 $generated@@186 $generated@@186))) (= (type $generated@@632) $generated@@66)) (= (type $generated@@633) $generated@@66)) (forall (($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@186) ($generated@@0 ($generated@@83 $generated@@630 $generated@@634))) (and ($generated@@270 $generated@@634 $generated@@632) ($generated@@270 ($generated@@83 $generated@@631 $generated@@634) $generated@@633)))
 :no-pattern (type $generated@@634)
 :no-pattern ($generated $generated@@634)
 :no-pattern ($generated@@0 $generated@@634)
))) ($generated@@173 ($generated@@142 $generated@@630 $generated@@631 ($generated@@259 $generated@@632 $generated@@633)) ($generated@@259 $generated@@632 $generated@@633)))
 :pattern ( ($generated@@142 $generated@@630 $generated@@631 ($generated@@259 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@636 T@U) ) (! (= (type ($generated@@635 $generated@@636)) $generated@@71)
 :pattern ( ($generated@@635 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@66) (= (type $generated@@638) $generated@@66)) (and (= ($generated@@74 ($generated@@176 $generated@@637 $generated@@638)) $generated@@63) (= ($generated@@635 ($generated@@176 $generated@@637 $generated@@638)) $generated@@65)))
 :pattern ( ($generated@@176 $generated@@637 $generated@@638))
)))
(assert  (and (forall (($generated@@641 T@U) ) (! (let (($generated@@642 ($generated@@299 (type $generated@@641))))
(= (type ($generated@@639 $generated@@641)) ($generated@@298 $generated@@642)))
 :pattern ( ($generated@@639 $generated@@641))
)) (forall (($generated@@643 T@U) ) (! (let (($generated@@644 ($generated@@299 (type $generated@@643))))
(= (type ($generated@@640 $generated@@643)) $generated@@644))
 :pattern ( ($generated@@640 $generated@@643))
))))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (! (let (($generated@@647 (type $generated@@646)))
 (=> (= (type $generated@@645) ($generated@@298 $generated@@647)) (and (= ($generated@@639 ($generated@@297 $generated@@645 $generated@@646)) $generated@@645) (= ($generated@@640 ($generated@@297 $generated@@645 $generated@@646)) $generated@@646))))
 :pattern ( ($generated@@297 $generated@@645 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@177) (= ($generated@@592 ($generated@@337 $generated@@648)) ($generated@@593 $generated@@648)))
 :pattern ( ($generated@@592 ($generated@@337 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@649) $generated@@186) ($generated@@270 $generated@@649 ($generated@@77 0))) (and (= ($generated@@337 ($generated@@388 $generated@@2 $generated@@649)) $generated@@649) ($generated@@173 ($generated@@388 ($generated@@78 $generated@@186 $generated@@4) $generated@@649) ($generated@@77 0))))
 :pattern ( ($generated@@270 $generated@@649 ($generated@@77 0)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (= (type $generated@@650) $generated@@186) (= (type $generated@@651) $generated@@66)) ($generated@@270 $generated@@650 ($generated@@255 $generated@@651))) (and (= ($generated@@337 ($generated@@388 ($generated@@78 $generated@@186 $generated@@4) $generated@@650)) $generated@@650) ($generated@@173 ($generated@@388 ($generated@@78 $generated@@186 $generated@@4) $generated@@650) ($generated@@255 $generated@@651))))
 :pattern ( ($generated@@270 $generated@@650 ($generated@@255 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (= (type $generated@@652) $generated@@186) (= (type $generated@@653) $generated@@66)) ($generated@@270 $generated@@652 ($generated@@286 $generated@@653))) (and (= ($generated@@337 ($generated@@388 ($generated@@78 $generated@@186 $generated@@4) $generated@@652)) $generated@@652) ($generated@@173 ($generated@@388 ($generated@@78 $generated@@186 $generated@@4) $generated@@652) ($generated@@286 $generated@@653))))
 :pattern ( ($generated@@270 $generated@@652 ($generated@@286 $generated@@653)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (= (type $generated@@654) $generated@@186) (= (type $generated@@655) $generated@@66)) ($generated@@270 $generated@@654 ($generated@@191 $generated@@655))) (and (= ($generated@@337 ($generated@@388 ($generated@@78 $generated@@186 $generated@@2) $generated@@654)) $generated@@654) ($generated@@173 ($generated@@388 ($generated@@78 $generated@@186 $generated@@2) $generated@@654) ($generated@@191 $generated@@655))))
 :pattern ( ($generated@@270 $generated@@654 ($generated@@191 $generated@@655)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (= (type $generated@@656) $generated@@186) (= (type $generated@@657) $generated@@66)) ($generated@@270 $generated@@656 ($generated@@256 $generated@@657))) (and (= ($generated@@337 ($generated@@388 ($generated@@298 $generated@@186) $generated@@656)) $generated@@656) ($generated@@173 ($generated@@388 ($generated@@298 $generated@@186) $generated@@656) ($generated@@256 $generated@@657))))
 :pattern ( ($generated@@270 $generated@@656 ($generated@@256 $generated@@657)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@61))
(assert (= ($generated@@635 $generated@@138) $generated@@64))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (= (type $generated@@658) ($generated@@78 $generated@@186 $generated@@2)) (= (type $generated@@659) $generated@@66)) (= (type $generated@@660) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@658 ($generated@@191 $generated@@659) $generated@@660) (forall (($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@661) $generated@@186) (< 0 ($generated ($generated@@83 $generated@@658 $generated@@661)))) ($generated@@314 $generated@@661 $generated@@659 $generated@@660))
 :pattern ( ($generated@@83 $generated@@658 $generated@@661))
))))
 :pattern ( ($generated@@76 $generated@@658 ($generated@@191 $generated@@659) $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (and (= (type $generated@@662) $generated@@177) (= (type $generated@@663) $generated@@66)) (= (type $generated@@664) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@313 $generated@@664) (and ($generated@@175 $generated@@662) (exists (($generated@@665 T@U) ) (!  (and (= (type $generated@@665) $generated@@66) ($generated@@76 $generated@@662 ($generated@@176 $generated@@663 $generated@@665) $generated@@664))
 :pattern ( ($generated@@76 $generated@@662 ($generated@@176 $generated@@663 $generated@@665) $generated@@664))
))))) ($generated@@314 ($generated@@184 $generated@@662) $generated@@663 $generated@@664))
 :pattern ( ($generated@@314 ($generated@@184 $generated@@662) $generated@@663 $generated@@664))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (and (= (type $generated@@666) $generated@@177) (= (type $generated@@667) $generated@@66)) (= (type $generated@@668) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@313 $generated@@668) (and ($generated@@175 $generated@@666) (exists (($generated@@669 T@U) ) (!  (and (= (type $generated@@669) $generated@@66) ($generated@@76 $generated@@666 ($generated@@176 $generated@@669 $generated@@667) $generated@@668))
 :pattern ( ($generated@@76 $generated@@666 ($generated@@176 $generated@@669 $generated@@667) $generated@@668))
))))) ($generated@@314 ($generated@@185 $generated@@666) $generated@@667 $generated@@668))
 :pattern ( ($generated@@314 ($generated@@185 $generated@@666) $generated@@667 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (= (type $generated@@670) $generated@@186) (= (type $generated@@671) $generated@@186)) (= ($generated@@269 ($generated@@293 $generated@@670) ($generated@@293 $generated@@671)) ($generated@@293 ($generated@@269 $generated@@670 $generated@@671))))
 :pattern ( ($generated@@269 ($generated@@293 $generated@@670) ($generated@@293 $generated@@671)))
)))
(assert (forall (($generated@@672 Int) ) (! (= ($generated@@337 ($generated@@8 ($generated@@291 $generated@@672))) ($generated@@293 ($generated@@337 ($generated@@8 $generated@@672))))
 :pattern ( ($generated@@337 ($generated@@8 ($generated@@291 $generated@@672))))
)))
(assert (forall (($generated@@673 T@U) ) (! (= ($generated@@337 ($generated@@293 $generated@@673)) ($generated@@293 ($generated@@337 $generated@@673)))
 :pattern ( ($generated@@337 ($generated@@293 $generated@@673)))
)))
(assert (forall (($generated@@674 T@U) ) (! (let (($generated@@675 ($generated@@299 (type $generated@@674))))
 (=> (and (= (type $generated@@674) ($generated@@298 $generated@@675)) (= ($generated@@329 $generated@@674) 0)) (= $generated@@674 ($generated@@328 $generated@@675))))
 :pattern ( ($generated@@329 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ($generated@@678 T@U) ) (! (let (($generated@@679 (type $generated@@677)))
 (=> (and (and (= (type $generated@@676) ($generated@@78 $generated@@679 $generated@@2)) (= (type $generated@@678) $generated@@2)) (<= 0 ($generated $generated@@678))) (= ($generated@@350 ($generated@@84 $generated@@676 $generated@@677 $generated@@678)) (+ (- ($generated@@350 $generated@@676) ($generated ($generated@@83 $generated@@676 $generated@@677))) ($generated $generated@@678)))))
 :pattern ( ($generated@@350 ($generated@@84 $generated@@676 $generated@@677 $generated@@678)))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@681) $generated@@2)) ($generated@@76 $generated@@681 $generated@@46 $generated@@680))
 :pattern ( ($generated@@76 $generated@@681 $generated@@46 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@683) $generated@@3)) ($generated@@76 $generated@@683 $generated@@47 $generated@@682))
 :pattern ( ($generated@@76 $generated@@683 $generated@@47 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (= (type $generated@@684) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@685) $generated@@4)) ($generated@@76 $generated@@685 $generated@@44 $generated@@684))
 :pattern ( ($generated@@76 $generated@@685 $generated@@44 $generated@@684))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (= (type $generated@@686) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@687) $generated@@310)) ($generated@@76 $generated@@687 $generated@@45 $generated@@686))
 :pattern ( ($generated@@76 $generated@@687 $generated@@45 $generated@@686))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@688) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@689) $generated@@186)) ($generated@@76 $generated@@689 $generated@@48 $generated@@688))
 :pattern ( ($generated@@76 $generated@@689 $generated@@48 $generated@@688))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (= (type $generated@@690) ($generated@@298 $generated@@186)) (= (type $generated@@691) $generated@@66)) (= ($generated@@173 $generated@@690 ($generated@@256 $generated@@691)) (forall (($generated@@692 Int) ) (!  (=> (and (<= 0 $generated@@692) (< $generated@@692 ($generated@@329 $generated@@690))) ($generated@@270 ($generated@@392 $generated@@690 $generated@@692) $generated@@691))
 :pattern ( ($generated@@392 $generated@@690 $generated@@692))
))))
 :pattern ( ($generated@@173 $generated@@690 ($generated@@256 $generated@@691)))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 Int) ) (!  (=> (= (type $generated@@694) ($generated@@298 $generated@@186)) (=> (and (<= 0 $generated@@695) (< $generated@@695 ($generated@@329 $generated@@694))) (< ($generated@@593 ($generated@@388 $generated@@177 ($generated@@392 $generated@@694 $generated@@695))) ($generated@@693 $generated@@694))))
 :pattern ( ($generated@@593 ($generated@@388 $generated@@177 ($generated@@392 $generated@@694 $generated@@695))))
)))
(assert (forall (($generated@@696 T@U) ($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (and (and (= (type $generated@@696) ($generated@@143 $generated@@186 $generated@@186)) (= (type $generated@@697) $generated@@66)) (= (type $generated@@698) $generated@@66)) ($generated@@173 $generated@@696 ($generated@@259 $generated@@697 $generated@@698))) (and (and ($generated@@173 ($generated@@141 $generated@@696) ($generated@@255 $generated@@697)) ($generated@@173 ($generated@@405 $generated@@696) ($generated@@255 $generated@@698))) ($generated@@173 ($generated@@437 $generated@@696) ($generated@@255 ($generated@@176 $generated@@697 $generated@@698)))))
 :pattern ( ($generated@@173 $generated@@696 ($generated@@259 $generated@@697 $generated@@698)))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ($generated@@701 T@U) ) (!  (=> (and (and (and (= (type $generated@@699) ($generated@@364 $generated@@186 $generated@@186)) (= (type $generated@@700) $generated@@66)) (= (type $generated@@701) $generated@@66)) ($generated@@173 $generated@@699 ($generated@@464 $generated@@700 $generated@@701))) (and (and ($generated@@173 ($generated@@362 $generated@@699) ($generated@@286 $generated@@700)) ($generated@@173 ($generated@@416 $generated@@699) ($generated@@286 $generated@@701))) ($generated@@173 ($generated@@441 $generated@@699) ($generated@@286 ($generated@@176 $generated@@700 $generated@@701)))))
 :pattern ( ($generated@@173 $generated@@699 ($generated@@464 $generated@@700 $generated@@701)))
)))
(assert (forall (($generated@@702 T@U) ) (!  (=> (= (type $generated@@702) $generated@@2) ($generated@@173 $generated@@702 $generated@@46))
 :pattern ( ($generated@@173 $generated@@702 $generated@@46))
)))
(assert (forall (($generated@@703 T@U) ) (!  (=> (= (type $generated@@703) $generated@@3) ($generated@@173 $generated@@703 $generated@@47))
 :pattern ( ($generated@@173 $generated@@703 $generated@@47))
)))
(assert (forall (($generated@@704 T@U) ) (!  (=> (= (type $generated@@704) $generated@@4) ($generated@@173 $generated@@704 $generated@@44))
 :pattern ( ($generated@@173 $generated@@704 $generated@@44))
)))
(assert (forall (($generated@@705 T@U) ) (!  (=> (= (type $generated@@705) $generated@@310) ($generated@@173 $generated@@705 $generated@@45))
 :pattern ( ($generated@@173 $generated@@705 $generated@@45))
)))
(assert (forall (($generated@@706 T@U) ) (!  (=> (= (type $generated@@706) $generated@@186) ($generated@@173 $generated@@706 $generated@@48))
 :pattern ( ($generated@@173 $generated@@706 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@707 () T@U)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () T@U)
(declare-fun $generated@@710 () T@U)
(declare-fun $generated@@711 (T@U) Bool)
(declare-fun $generated@@712 () T@U)
(declare-fun $generated@@713 () T@U)
(declare-fun $generated@@714 () T@U)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 () T@U)
(declare-fun $generated@@719 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@707) ($generated@@198 $generated@@79 $generated@@4)) (= (type $generated@@708) $generated@@79)) (= (type $generated@@709) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@710) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@712) ($generated@@143 $generated@@186 $generated@@186))) (= (type $generated@@713) ($generated@@143 $generated@@186 $generated@@186))) (= (type $generated@@714) ($generated@@78 $generated@@186 $generated@@4))) (= (type $generated@@715) ($generated@@143 $generated@@186 $generated@@186))) (= (type $generated@@716) ($generated@@143 $generated@@186 $generated@@186))) (= (type $generated@@717) ($generated@@143 $generated@@186 $generated@@186))) (= (type $generated@@718) ($generated@@78 $generated@@186 $generated@@4))) (= (type $generated@@719) ($generated@@143 $generated@@186 $generated@@186))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@720  (=> (= $generated@@707 ($generated@@197 $generated@@708 $generated@@709 $generated@@60 false)) (=> (and (and ($generated@@313 $generated@@710) ($generated@@711 $generated@@710)) (and (forall (($generated@@721 T@U) ) (!  (=> (= (type $generated@@721) $generated@@79) (=> (and (not (= $generated@@721 $generated@@708)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@709 $generated@@721) $generated@@60))) (= ($generated@@83 $generated@@710 $generated@@721) ($generated@@83 $generated@@709 $generated@@721))))
 :pattern ( ($generated@@83 $generated@@710 $generated@@721))
)) ($generated@@134 $generated@@709 $generated@@710))) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@173 ($generated@@8 ($generated@@291 6)) $generated@@138)) (=> ($generated@@173 ($generated@@8 ($generated@@291 6)) $generated@@138) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@173 ($generated@@8 ($generated@@291 8)) $generated@@138)) (=> ($generated@@173 ($generated@@8 ($generated@@291 8)) $generated@@138) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@173 ($generated@@8 ($generated@@291 7)) $generated@@138)) (=> ($generated@@173 ($generated@@8 ($generated@@291 7)) $generated@@138) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@173 ($generated@@8 ($generated@@291 3)) $generated@@138)) (=> ($generated@@173 ($generated@@8 ($generated@@291 3)) $generated@@138) (=> (= $generated@@712 ($generated@@293 ($generated@@601 ($generated@@601 ($generated@@356 $generated@@186 $generated@@186) ($generated@@337 ($generated@@8 ($generated@@291 6))) ($generated@@337 ($generated@@8 ($generated@@291 8)))) ($generated@@337 ($generated@@8 ($generated@@291 7))) ($generated@@337 ($generated@@8 ($generated@@291 3)))))) (=> (and (and ($generated@@76 $generated@@712 ($generated@@259 $generated@@138 $generated@@138) $generated@@710) ($generated@@278 $generated@@712)) (and ($generated@@278 $generated@@712) (= $generated@@713 ($generated@@277 $generated@@712)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@380 ($generated@@141 $generated@@712) ($generated@@141 $generated@@713))) (=> ($generated@@380 ($generated@@141 $generated@@712) ($generated@@141 $generated@@713)) (=> (and (= $generated@@714 ($generated@@293 ($generated@@475 ($generated@@475 ($generated@@624 $generated@@186) ($generated@@337 ($generated@@293 ($generated@@297 ($generated@@297 ($generated@@297 ($generated@@297 ($generated@@297 ($generated@@297 ($generated@@328 $generated@@186) ($generated@@337 ($generated@@308 65))) ($generated@@337 ($generated@@308 108))) ($generated@@337 ($generated@@308 102))) ($generated@@337 ($generated@@308 111))) ($generated@@337 ($generated@@308 110))) ($generated@@337 ($generated@@308 115)))))) ($generated@@337 ($generated@@293 ($generated@@297 ($generated@@297 ($generated@@297 ($generated@@297 ($generated@@297 ($generated@@328 $generated@@186) ($generated@@337 ($generated@@308 77))) ($generated@@337 ($generated@@308 105))) ($generated@@337 ($generated@@308 108))) ($generated@@337 ($generated@@308 108))) ($generated@@337 ($generated@@308 97)))))))) ($generated@@76 $generated@@714 ($generated@@255 ($generated@@256 $generated@@45)) $generated@@710)) (=> (and (and ($generated@@254 $generated@@714) ($generated@@254 $generated@@714)) (and (= $generated@@715 ($generated@@253 $generated@@714)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@380 $generated@@714 ($generated@@141 $generated@@715))))))))))))))))))))
(let (($generated@@722  (=> (and ($generated@@313 $generated@@709) ($generated@@711 $generated@@709)) (=> (and (and ($generated@@173 $generated@@716 ($generated@@259 $generated@@138 $generated@@138)) ($generated@@76 $generated@@716 ($generated@@259 $generated@@138 $generated@@138) $generated@@709)) true) (=> (and (and (and (and ($generated@@173 $generated@@717 ($generated@@259 $generated@@138 $generated@@138)) ($generated@@76 $generated@@717 ($generated@@259 $generated@@138 $generated@@138) $generated@@709)) true) (and (and ($generated@@173 $generated@@718 ($generated@@255 ($generated@@256 $generated@@45))) ($generated@@76 $generated@@718 ($generated@@255 ($generated@@256 $generated@@45)) $generated@@709)) true)) (and (and (and ($generated@@173 $generated@@719 ($generated@@259 ($generated@@256 $generated@@45) ($generated@@256 $generated@@45))) ($generated@@76 $generated@@719 ($generated@@259 ($generated@@256 $generated@@45) ($generated@@256 $generated@@45)) $generated@@709)) true) (and (= 2 $generated@@252) (= (ControlFlow 0 8) 2)))) $generated@@720)))))
$generated@@722)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 () Int)
(declare-fun $generated@@135 (Int) Int)
(declare-fun $generated@@136 (Int) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@224 (Int) Int)
(declare-fun $generated@@225 (Int) Bool)
(declare-fun $generated@@229 (Int) Int)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) T@U)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@248 (T@T) T@T)
(declare-fun $generated@@249 (T@T) T@T)
(declare-fun $generated@@259 (Int) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 () T@T)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@266 (T@U T@U T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@293 (T@U) Int)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@338 (T@U Int) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@382 (T@T T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@410 (T@U T@U) T@U)
(declare-fun $generated@@418 (T@U T@U) T@U)
(declare-fun $generated@@426 (T@T) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@599 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (=> (<= 0 $generated@@134) (forall (($generated@@137 Int) ) (!  (=> (or ($generated@@136 $generated@@137) (not (= 0 $generated@@134))) (= ($generated@@135 $generated@@137) (let (($generated@@138 (+ $generated@@137 $generated@@137)))
(- $generated@@138 $generated@@137))))
 :pattern ( ($generated@@135 $generated@@137))
))))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@64)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@64) (= (type $generated@@145) $generated@@64)) (= (type $generated@@146) $generated@@141)) ($generated@@132 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@132 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@64)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@76 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@64)) ($generated@@132 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@132 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@77 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@67 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@77) (= (type $generated@@210) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@211) ($generated@@66 $generated@@4))) (= (type $generated@@213) $generated@@77)) (= (type $generated@@214) ($generated@@66 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@141)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@64) (= (type $generated@@221) $generated@@64)) (= (type $generated@@222) $generated@@150)) (= (type $generated@@223) $generated@@150)) (= ($generated@@132 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221))  (and ($generated@@217 $generated@@222 $generated@@220) ($generated@@217 $generated@@223 $generated@@221))))
 :pattern ( ($generated@@132 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221)))
)))
(assert  (=> (<= 0 $generated@@134) (forall (($generated@@226 Int) ) (!  (=> (or ($generated@@225 $generated@@226) (and (not (= 0 $generated@@134)) (< $generated@@226 2400))) true)
 :pattern ( ($generated@@224 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) $generated@@141) (= (type $generated@@228) $generated@@141)) (= ($generated@@147 $generated@@227 $generated@@228) (= $generated@@227 $generated@@228)))
 :pattern ( ($generated@@147 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@231 T@U) ) (! (let (($generated@@232 (type $generated@@231)))
(= (type ($generated@@230 $generated@@231)) $generated@@232))
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert  (=> (<= 0 $generated@@134) (forall (($generated@@233 Int) ) (!  (=> (or ($generated@@225 ($generated@@229 $generated@@233)) (and (not (= 0 $generated@@134)) ($generated@@0 ($generated@@230 ($generated@@11 (< $generated@@233 2400)))))) (= ($generated@@224 ($generated@@229 $generated@@233)) ($generated@@229 $generated@@233)))
 :weight 3
 :pattern ( ($generated@@224 ($generated@@229 $generated@@233)))
))))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@64)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@76 $generated@@150 $generated@@4)) (= (type $generated@@237) $generated@@64)) (= ($generated@@132 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@150) ($generated@@0 ($generated@@81 $generated@@236 $generated@@238))) ($generated@@217 $generated@@238 $generated@@237))
 :pattern ( ($generated@@81 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@132 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@64)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@76 $generated@@150 $generated@@4)) (= (type $generated@@242) $generated@@64)) (= ($generated@@132 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@150) ($generated@@0 ($generated@@81 $generated@@241 $generated@@243))) ($generated@@217 $generated@@243 $generated@@242))
 :pattern ( ($generated@@81 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@132 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@229 $generated@@244) $generated@@244)
 :pattern ( ($generated@@229 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@230 $generated@@245) $generated@@245)
 :pattern ( ($generated@@230 $generated@@245))
)))
(assert  (and (and (and (forall (($generated@@250 T@T) ) (= ($generated@@1 ($generated@@248 $generated@@250)) 17)) (forall (($generated@@251 T@T) ) (! (= ($generated@@249 ($generated@@248 $generated@@251)) $generated@@251)
 :pattern ( ($generated@@248 $generated@@251))
))) (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (let (($generated@@254 (type $generated@@253)))
(= (type ($generated@@246 $generated@@252 $generated@@253)) ($generated@@248 $generated@@254)))
 :pattern ( ($generated@@246 $generated@@252 $generated@@253))
))) (forall (($generated@@255 T@U) ) (! (= (type ($generated@@247 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@247 $generated@@255))
))))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) ($generated@@248 $generated@@150)) (= (type $generated@@257) $generated@@150)) (= (type $generated@@258) $generated@@64)) (and ($generated@@132 $generated@@256 ($generated@@247 $generated@@258)) ($generated@@217 $generated@@257 $generated@@258))) ($generated@@132 ($generated@@246 $generated@@256 $generated@@257) ($generated@@247 $generated@@258)))
 :pattern ( ($generated@@132 ($generated@@246 $generated@@256 $generated@@257) ($generated@@247 $generated@@258)))
)))
(assert  (and (= ($generated@@1 $generated@@261) 18) (forall (($generated@@262 Int) ) (! (= (type ($generated@@259 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@259 $generated@@262))
))))
(assert (forall (($generated@@263 Int) ) (!  (=> (and (<= 0 $generated@@263) (< $generated@@263 65536)) (= ($generated@@260 ($generated@@259 $generated@@263)) $generated@@263))
 :pattern ( ($generated@@259 $generated@@263))
)))
(assert  (=> (<= 0 $generated@@134) (forall (($generated@@264 Int) ) (!  (=> (or ($generated@@136 $generated@@264) (not (= 0 $generated@@134))) true)
 :pattern ( ($generated@@135 $generated@@264))
))))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) $generated@@64) (= (type $generated@@268) $generated@@64)) (= (type $generated@@269) $generated@@150)) (= (type $generated@@270) $generated@@150)) (= (type $generated@@271) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@265 $generated@@271)) (= ($generated@@74 ($generated@@216 $generated@@269 $generated@@270) ($generated@@140 $generated@@267 $generated@@268) $generated@@271)  (and ($generated@@266 $generated@@269 $generated@@267 $generated@@271) ($generated@@266 $generated@@270 $generated@@268 $generated@@271))))
 :pattern ( ($generated@@74 ($generated@@216 $generated@@269 $generated@@270) ($generated@@140 $generated@@267 $generated@@268) $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@68)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@141) (= ($generated@@139 $generated@@274) (= ($generated@@272 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@139 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@141) ($generated@@139 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@150) (= (type $generated@@277) $generated@@150)) (= $generated@@275 ($generated@@216 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@139 $generated@@275))
)))
(assert (forall (($generated@@280 T@T) ) (! (= (type ($generated@@278 $generated@@280)) ($generated@@248 $generated@@280))
 :pattern ( ($generated@@278 $generated@@280))
)))
(assert (forall (($generated@@281 T@T) ) (! (= ($generated@@279 ($generated@@278 $generated@@281)) 0)
 :pattern ( ($generated@@278 $generated@@281))
)))
(assert  (=> (<= 0 $generated@@134) (forall (($generated@@282 Int) ) (!  (=> (or ($generated@@136 ($generated@@229 $generated@@282)) (not (= 0 $generated@@134))) (= ($generated@@135 ($generated@@229 $generated@@282)) (let (($generated@@283 ($generated@@229 (+ $generated@@282 $generated@@282))))
($generated@@229 (- $generated@@283 $generated@@282)))))
 :weight 3
 :pattern ( ($generated@@135 ($generated@@229 $generated@@282)))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (let (($generated@@286 (type $generated@@285)))
 (=> (= (type $generated@@284) ($generated@@248 $generated@@286)) (= ($generated@@279 ($generated@@246 $generated@@284 $generated@@285)) (+ 1 ($generated@@279 $generated@@284)))))
 :pattern ( ($generated@@246 $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@261) (and (and (= ($generated@@259 ($generated@@260 $generated@@287)) $generated@@287) (<= 0 ($generated@@260 $generated@@287))) (< ($generated@@260 $generated@@287) 65536)))
 :pattern ( ($generated@@260 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@150)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@64) (= (type $generated@@292) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@266 ($generated@@288 $generated@@290) $generated@@291 $generated@@292) ($generated@@74 $generated@@290 $generated@@291 $generated@@292)))
 :pattern ( ($generated@@266 ($generated@@288 $generated@@290) $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@76 $generated@@295 $generated@@2))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@79 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@76 $generated@@297 $generated@@2)) (and (= (= ($generated@@293 $generated@@296) 0) (= $generated@@296 ($generated@@294 $generated@@297))) (=> (not (= ($generated@@293 $generated@@296) 0)) (exists (($generated@@298 T@U) ) (!  (and (= (type $generated@@298) $generated@@297) (< 0 ($generated ($generated@@81 $generated@@296 $generated@@298))))
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
))))))
 :pattern ( ($generated@@293 $generated@@296))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 20)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@76 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@81 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@81 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@79 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@76 $generated@@336 $generated@@2)) (= ($generated@@156 $generated@@335) (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@336) (and (<= 0 ($generated ($generated@@81 $generated@@335 $generated@@337))) (<= ($generated ($generated@@81 $generated@@335 $generated@@337)) ($generated@@293 $generated@@335))))
 :pattern ( ($generated@@81 $generated@@335 $generated@@337))
)))))
 :pattern ( ($generated@@156 $generated@@335))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 Int) ) (! (let (($generated@@341 ($generated@@249 (type $generated@@339))))
(= (type ($generated@@338 $generated@@339 $generated@@340)) $generated@@341))
 :pattern ( ($generated@@338 $generated@@339 $generated@@340))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 Int) ($generated@@344 T@U) ) (! (let (($generated@@345 (type $generated@@344)))
 (=> (= (type $generated@@342) ($generated@@248 $generated@@345)) (and (=> (= $generated@@343 ($generated@@279 $generated@@342)) (= ($generated@@338 ($generated@@246 $generated@@342 $generated@@344) $generated@@343) $generated@@344)) (=> (not (= $generated@@343 ($generated@@279 $generated@@342))) (= ($generated@@338 ($generated@@246 $generated@@342 $generated@@344) $generated@@343) ($generated@@338 $generated@@342 $generated@@343))))))
 :pattern ( ($generated@@338 ($generated@@246 $generated@@342 $generated@@344) $generated@@343))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@303 (type $generated@@346))))
(let (($generated@@348 ($generated@@302 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@301 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@300 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@299 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@303 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@76 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@303 (type $generated@@353))))
(let (($generated@@355 ($generated@@302 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@301 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@300 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@321 (type $generated@@357))))
(let (($generated@@359 ($generated@@320 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@319 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@318 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@81 ($generated@@317 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@317 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@321 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@76 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@321 (type $generated@@364))))
(let (($generated@@366 ($generated@@320 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@319 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@318 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@81 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@76 $generated@@150 $generated@@2)) (= (type $generated@@369) $generated@@64)) (= ($generated@@132 $generated@@368 ($generated@@155 $generated@@369)) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@150) (< 0 ($generated ($generated@@81 $generated@@368 $generated@@370)))) ($generated@@217 $generated@@370 $generated@@369))
 :pattern ( ($generated@@81 $generated@@368 $generated@@370))
))))
 :pattern ( ($generated@@132 $generated@@368 ($generated@@155 $generated@@369)))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (and (= (type $generated@@371) ($generated@@76 $generated@@150 $generated@@4)) (= (type $generated@@372) $generated@@64)) (= (type $generated@@373) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@371 ($generated@@234 $generated@@372) $generated@@373) (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@150) ($generated@@0 ($generated@@81 $generated@@371 $generated@@374))) ($generated@@266 $generated@@374 $generated@@372 $generated@@373))
 :pattern ( ($generated@@81 $generated@@371 $generated@@374))
))))
 :pattern ( ($generated@@74 $generated@@371 ($generated@@234 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (and (= (type $generated@@375) ($generated@@76 $generated@@150 $generated@@4)) (= (type $generated@@376) $generated@@64)) (= (type $generated@@377) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@375 ($generated@@239 $generated@@376) $generated@@377) (forall (($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@378) $generated@@150) ($generated@@0 ($generated@@81 $generated@@375 $generated@@378))) ($generated@@266 $generated@@378 $generated@@376 $generated@@377))
 :pattern ( ($generated@@81 $generated@@375 $generated@@378))
))))
 :pattern ( ($generated@@74 $generated@@375 ($generated@@239 $generated@@376) $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 (type $generated@@379)))
(= ($generated ($generated@@81 ($generated@@294 $generated@@380) $generated@@379)) 0))
 :pattern ( (let (($generated@@380 (type $generated@@379)))
($generated@@81 ($generated@@294 $generated@@380) $generated@@379)))
)))
(assert  (and (and (forall (($generated@@384 T@U) ) (! (= (type ($generated@@381 $generated@@384)) ($generated@@76 $generated@@150 $generated@@4))
 :pattern ( ($generated@@381 $generated@@384))
)) (forall (($generated@@385 T@T) ($generated@@386 T@U) ) (! (= (type ($generated@@382 $generated@@385 $generated@@386)) $generated@@385)
 :pattern ( ($generated@@382 $generated@@385 $generated@@386))
))) (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@303 (type $generated@@387))))
(let (($generated@@389 ($generated@@302 (type $generated@@387))))
(= (type ($generated@@383 $generated@@387)) ($generated@@76 $generated@@389 $generated@@388))))
 :pattern ( ($generated@@383 $generated@@387))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@301 $generated@@150 $generated@@150)) (= (type $generated@@391) $generated@@150)) (= ($generated@@0 ($generated@@81 ($generated@@381 $generated@@390) $generated@@391))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@390) ($generated@@148 ($generated@@382 $generated@@141 $generated@@391)))) (= ($generated@@81 ($generated@@383 $generated@@390) ($generated@@148 ($generated@@382 $generated@@141 $generated@@391))) ($generated@@149 ($generated@@382 $generated@@141 $generated@@391))))))
 :pattern ( ($generated@@81 ($generated@@381 $generated@@390) $generated@@391))
)))
(assert  (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@394)) ($generated@@76 $generated@@150 $generated@@4))
 :pattern ( ($generated@@392 $generated@@394))
)) (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@321 (type $generated@@395))))
(let (($generated@@397 ($generated@@320 (type $generated@@395))))
(= (type ($generated@@393 $generated@@395)) ($generated@@76 $generated@@397 $generated@@396))))
 :pattern ( ($generated@@393 $generated@@395))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@319 $generated@@150 $generated@@150)) (= (type $generated@@399) $generated@@150)) (= ($generated@@0 ($generated@@81 ($generated@@392 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@81 ($generated@@317 $generated@@398) ($generated@@148 ($generated@@382 $generated@@141 $generated@@399)))) (= ($generated@@81 ($generated@@393 $generated@@398) ($generated@@148 ($generated@@382 $generated@@141 $generated@@399))) ($generated@@149 ($generated@@382 $generated@@141 $generated@@399))))))
 :pattern ( ($generated@@81 ($generated@@392 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@302 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@301 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@81 ($generated@@350 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@81 ($generated@@383 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@400) $generated@@404))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@81 ($generated@@350 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@320 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@319 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@81 ($generated@@361 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@81 ($generated@@317 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@81 ($generated@@393 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@81 ($generated@@317 $generated@@405) $generated@@409))
 :pattern ( ($generated@@81 ($generated@@393 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@81 ($generated@@361 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@411 $generated@@412)) $generated@@64)
 :pattern ( ($generated@@410 $generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (and (= (type $generated@@413) ($generated@@301 $generated@@150 $generated@@150)) (= (type $generated@@414) $generated@@64)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@150) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@413) $generated@@417))) (and ($generated@@266 ($generated@@81 ($generated@@383 $generated@@413) $generated@@417) $generated@@415 $generated@@416) ($generated@@266 $generated@@417 $generated@@414 $generated@@416)))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@413) $generated@@417))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@413) $generated@@417))
))))
 :pattern ( ($generated@@74 $generated@@413 ($generated@@410 $generated@@414 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@419 $generated@@420)) $generated@@64)
 :pattern ( ($generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) ($generated@@319 $generated@@150 $generated@@150)) (= (type $generated@@422) $generated@@64)) (= (type $generated@@423) $generated@@64)) (= (type $generated@@424) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@150) ($generated@@0 ($generated@@81 ($generated@@317 $generated@@421) $generated@@425))) (and ($generated@@266 ($generated@@81 ($generated@@393 $generated@@421) $generated@@425) $generated@@423 $generated@@424) ($generated@@266 $generated@@425 $generated@@422 $generated@@424)))
 :pattern ( ($generated@@81 ($generated@@393 $generated@@421) $generated@@425))
 :pattern ( ($generated@@81 ($generated@@317 $generated@@421) $generated@@425))
))))
 :pattern ( ($generated@@74 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@427 T@T) ) (! (= (type ($generated@@426 $generated@@427)) ($generated@@76 $generated@@427 $generated@@4))
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@321 (type $generated@@428))))
(let (($generated@@430 ($generated@@320 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@319 $generated@@430 $generated@@429)) (= (= $generated@@428 ($generated@@318 $generated@@430 $generated@@429)) (= ($generated@@317 $generated@@428) ($generated@@426 $generated@@430))))))
 :pattern ( ($generated@@317 $generated@@428))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@321 (type $generated@@431))))
(let (($generated@@433 ($generated@@320 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@319 $generated@@433 $generated@@432)) (= (= $generated@@431 ($generated@@318 $generated@@433 $generated@@432)) (= ($generated@@361 $generated@@431) ($generated@@426 $generated@@432))))))
 :pattern ( ($generated@@361 $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@321 (type $generated@@434))))
(let (($generated@@436 ($generated@@320 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@319 $generated@@436 $generated@@435)) (= (= $generated@@434 ($generated@@318 $generated@@436 $generated@@435)) (= ($generated@@392 $generated@@434) ($generated@@426 $generated@@150))))))
 :pattern ( ($generated@@392 $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@303 (type $generated@@437))))
(let (($generated@@439 ($generated@@302 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@301 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@300 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (and (and (= (type $generated@@440) $generated@@150) (= (type $generated@@441) $generated@@150)) ($generated@@0 ($generated@@81 ($generated@@381 $generated@@437) ($generated@@288 ($generated@@216 $generated@@440 $generated@@441)))))
 :no-pattern (type $generated@@440)
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@381 $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@321 (type $generated@@442))))
(let (($generated@@444 ($generated@@320 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@319 $generated@@444 $generated@@443)) (or (= $generated@@442 ($generated@@318 $generated@@444 $generated@@443)) (exists (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (and (and (= (type $generated@@445) $generated@@150) (= (type $generated@@446) $generated@@150)) ($generated@@0 ($generated@@81 ($generated@@392 $generated@@442) ($generated@@288 ($generated@@216 $generated@@445 $generated@@446)))))
 :no-pattern (type $generated@@445)
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@392 $generated@@442))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@150) ($generated@@217 $generated@@447 $generated@@46)) (and (= ($generated@@288 ($generated@@382 $generated@@2 $generated@@447)) $generated@@447) ($generated@@132 ($generated@@382 $generated@@2 $generated@@447) $generated@@46)))
 :pattern ( ($generated@@217 $generated@@447 $generated@@46))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@150) ($generated@@217 $generated@@448 $generated@@47)) (and (= ($generated@@288 ($generated@@382 $generated@@3 $generated@@448)) $generated@@448) ($generated@@132 ($generated@@382 $generated@@3 $generated@@448) $generated@@47)))
 :pattern ( ($generated@@217 $generated@@448 $generated@@47))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@150) ($generated@@217 $generated@@449 $generated@@44)) (and (= ($generated@@288 ($generated@@382 $generated@@4 $generated@@449)) $generated@@449) ($generated@@132 ($generated@@382 $generated@@4 $generated@@449) $generated@@44)))
 :pattern ( ($generated@@217 $generated@@449 $generated@@44))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@150) ($generated@@217 $generated@@450 $generated@@45)) (and (= ($generated@@288 ($generated@@382 $generated@@261 $generated@@450)) $generated@@450) ($generated@@132 ($generated@@382 $generated@@261 $generated@@450) $generated@@45)))
 :pattern ( ($generated@@217 $generated@@450 $generated@@45))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@64) (= ($generated@@217 ($generated@@288 $generated@@451) $generated@@452) ($generated@@132 $generated@@451 $generated@@452)))
 :pattern ( ($generated@@217 ($generated@@288 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@79 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@76 $generated@@454 $generated@@2)) (<= 0 ($generated@@293 $generated@@453))))
 :pattern ( ($generated@@293 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@249 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@248 $generated@@456)) (<= 0 ($generated@@279 $generated@@455))))
 :pattern ( ($generated@@279 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@410 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@410 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@410 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@410 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@72 ($generated@@410 $generated@@465 $generated@@466)) $generated@@58))
 :pattern ( ($generated@@410 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@467 ($generated@@418 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@418 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@418 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@418 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@72 ($generated@@418 $generated@@475 $generated@@476)) $generated@@59))
 :pattern ( ($generated@@418 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@150) (= (type $generated@@478) $generated@@150)) (= ($generated@@272 ($generated@@216 $generated@@477 $generated@@478)) $generated@@61))
 :pattern ( ($generated@@216 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@64) (= (type $generated@@482) $generated@@64)) (= ($generated@@479 ($generated@@140 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@140 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@64) (= (type $generated@@486) $generated@@64)) (= ($generated@@483 ($generated@@140 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@140 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@150) (= (type $generated@@488) $generated@@150)) (= ($generated@@148 ($generated@@216 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@216 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@150) (= (type $generated@@490) $generated@@150)) (= ($generated@@149 ($generated@@216 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@216 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@248 $generated@@150)) (= (type $generated@@492) $generated@@64)) (= (type $generated@@493) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@491 ($generated@@247 $generated@@492) $generated@@493) (forall (($generated@@494 Int) ) (!  (=> (and (<= 0 $generated@@494) (< $generated@@494 ($generated@@279 $generated@@491))) ($generated@@266 ($generated@@338 $generated@@491 $generated@@494) $generated@@492 $generated@@493))
 :pattern ( ($generated@@338 $generated@@491 $generated@@494))
))))
 :pattern ( ($generated@@74 $generated@@491 ($generated@@247 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@496 Int) ) (! (= ($generated@@495 ($generated@@75 $generated@@496)) $generated@@496)
 :pattern ( ($generated@@75 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@234 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@234 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@234 $generated@@500)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@239 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@239 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@239 $generated@@504)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@505 ($generated@@155 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@155 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@72 ($generated@@155 $generated@@508)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@64)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@64) (= ($generated@@509 ($generated@@247 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@247 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@64) (= ($generated@@72 ($generated@@247 $generated@@512)) $generated@@57))
 :pattern ( ($generated@@247 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
(= ($generated@@382 $generated@@514 ($generated@@288 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@288 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@301 $generated@@150 $generated@@150)) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) $generated@@64)) (= ($generated@@132 $generated@@515 ($generated@@410 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@150) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@515) $generated@@518))) (and ($generated@@217 ($generated@@81 ($generated@@383 $generated@@515) $generated@@518) $generated@@517) ($generated@@217 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@81 ($generated@@383 $generated@@515) $generated@@518))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@132 $generated@@515 ($generated@@410 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@319 $generated@@150 $generated@@150)) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@64)) (= ($generated@@132 $generated@@519 ($generated@@418 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@150) ($generated@@0 ($generated@@81 ($generated@@317 $generated@@519) $generated@@522))) (and ($generated@@217 ($generated@@81 ($generated@@393 $generated@@519) $generated@@522) $generated@@521) ($generated@@217 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@81 ($generated@@393 $generated@@519) $generated@@522))
 :pattern ( ($generated@@81 ($generated@@317 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@132 $generated@@519 ($generated@@418 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@150) (= (type $generated@@526) $generated@@150)) (< ($generated@@523 $generated@@525) ($generated@@524 ($generated@@216 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@216 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@150) (= (type $generated@@528) $generated@@150)) (< ($generated@@523 $generated@@528) ($generated@@524 ($generated@@216 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@216 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@150) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) ($generated@@217 $generated@@529 ($generated@@410 $generated@@530 $generated@@531))) (and (= ($generated@@288 ($generated@@382 ($generated@@301 $generated@@150 $generated@@150) $generated@@529)) $generated@@529) ($generated@@132 ($generated@@382 ($generated@@301 $generated@@150 $generated@@150) $generated@@529) ($generated@@410 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@217 $generated@@529 ($generated@@410 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@150) (= (type $generated@@533) $generated@@64)) (= (type $generated@@534) $generated@@64)) ($generated@@217 $generated@@532 ($generated@@418 $generated@@533 $generated@@534))) (and (= ($generated@@288 ($generated@@382 ($generated@@319 $generated@@150 $generated@@150) $generated@@532)) $generated@@532) ($generated@@132 ($generated@@382 ($generated@@319 $generated@@150 $generated@@150) $generated@@532) ($generated@@418 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@217 $generated@@532 ($generated@@418 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@64) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) $generated@@150)) ($generated@@217 $generated@@537 ($generated@@140 $generated@@535 $generated@@536))) (and (= ($generated@@288 ($generated@@382 $generated@@141 $generated@@537)) $generated@@537) ($generated@@132 ($generated@@382 $generated@@141 $generated@@537) ($generated@@140 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@217 $generated@@537 ($generated@@140 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@81 ($generated@@426 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@81 ($generated@@426 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@69)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@64) (= (type $generated@@543) $generated@@64)) (and (= ($generated@@72 ($generated@@140 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@140 $generated@@542 $generated@@543)) $generated@@63)))
 :pattern ( ($generated@@140 $generated@@542 $generated@@543))
)))
(assert  (and (forall (($generated@@546 T@U) ) (! (let (($generated@@547 ($generated@@249 (type $generated@@546))))
(= (type ($generated@@544 $generated@@546)) ($generated@@248 $generated@@547)))
 :pattern ( ($generated@@544 $generated@@546))
)) (forall (($generated@@548 T@U) ) (! (let (($generated@@549 ($generated@@249 (type $generated@@548))))
(= (type ($generated@@545 $generated@@548)) $generated@@549))
 :pattern ( ($generated@@545 $generated@@548))
))))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
 (=> (= (type $generated@@550) ($generated@@248 $generated@@552)) (and (= ($generated@@544 ($generated@@246 $generated@@550 $generated@@551)) $generated@@550) (= ($generated@@545 ($generated@@246 $generated@@550 $generated@@551)) $generated@@551))))
 :pattern ( ($generated@@246 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@141) (= ($generated@@523 ($generated@@288 $generated@@553)) ($generated@@524 $generated@@553)))
 :pattern ( ($generated@@523 ($generated@@288 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@150) ($generated@@217 $generated@@554 ($generated@@75 0))) (and (= ($generated@@288 ($generated@@382 $generated@@2 $generated@@554)) $generated@@554) ($generated@@132 ($generated@@382 ($generated@@76 $generated@@150 $generated@@4) $generated@@554) ($generated@@75 0))))
 :pattern ( ($generated@@217 $generated@@554 ($generated@@75 0)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@150) (= (type $generated@@556) $generated@@64)) ($generated@@217 $generated@@555 ($generated@@234 $generated@@556))) (and (= ($generated@@288 ($generated@@382 ($generated@@76 $generated@@150 $generated@@4) $generated@@555)) $generated@@555) ($generated@@132 ($generated@@382 ($generated@@76 $generated@@150 $generated@@4) $generated@@555) ($generated@@234 $generated@@556))))
 :pattern ( ($generated@@217 $generated@@555 ($generated@@234 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@150) (= (type $generated@@558) $generated@@64)) ($generated@@217 $generated@@557 ($generated@@239 $generated@@558))) (and (= ($generated@@288 ($generated@@382 ($generated@@76 $generated@@150 $generated@@4) $generated@@557)) $generated@@557) ($generated@@132 ($generated@@382 ($generated@@76 $generated@@150 $generated@@4) $generated@@557) ($generated@@239 $generated@@558))))
 :pattern ( ($generated@@217 $generated@@557 ($generated@@239 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@150) (= (type $generated@@560) $generated@@64)) ($generated@@217 $generated@@559 ($generated@@155 $generated@@560))) (and (= ($generated@@288 ($generated@@382 ($generated@@76 $generated@@150 $generated@@2) $generated@@559)) $generated@@559) ($generated@@132 ($generated@@382 ($generated@@76 $generated@@150 $generated@@2) $generated@@559) ($generated@@155 $generated@@560))))
 :pattern ( ($generated@@217 $generated@@559 ($generated@@155 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@150) (= (type $generated@@562) $generated@@64)) ($generated@@217 $generated@@561 ($generated@@247 $generated@@562))) (and (= ($generated@@288 ($generated@@382 ($generated@@248 $generated@@150) $generated@@561)) $generated@@561) ($generated@@132 ($generated@@382 ($generated@@248 $generated@@150) $generated@@561) ($generated@@247 $generated@@562))))
 :pattern ( ($generated@@217 $generated@@561 ($generated@@247 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@76 $generated@@150 $generated@@2)) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@563 ($generated@@155 $generated@@564) $generated@@565) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@150) (< 0 ($generated ($generated@@81 $generated@@563 $generated@@566)))) ($generated@@266 $generated@@566 $generated@@564 $generated@@565))
 :pattern ( ($generated@@81 $generated@@563 $generated@@566))
))))
 :pattern ( ($generated@@74 $generated@@563 ($generated@@155 $generated@@564) $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@141) (= (type $generated@@568) $generated@@64)) (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@265 $generated@@569) (and ($generated@@139 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@64) ($generated@@74 $generated@@567 ($generated@@140 $generated@@568 $generated@@570) $generated@@569))
 :pattern ( ($generated@@74 $generated@@567 ($generated@@140 $generated@@568 $generated@@570) $generated@@569))
))))) ($generated@@266 ($generated@@148 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@266 ($generated@@148 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@141) (= (type $generated@@572) $generated@@64)) (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@265 $generated@@573) (and ($generated@@139 $generated@@571) (exists (($generated@@574 T@U) ) (!  (and (= (type $generated@@574) $generated@@64) ($generated@@74 $generated@@571 ($generated@@140 $generated@@574 $generated@@572) $generated@@573))
 :pattern ( ($generated@@74 $generated@@571 ($generated@@140 $generated@@574 $generated@@572) $generated@@573))
))))) ($generated@@266 ($generated@@149 $generated@@571) $generated@@572 $generated@@573))
 :pattern ( ($generated@@266 ($generated@@149 $generated@@571) $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@150) (= (type $generated@@576) $generated@@150)) (= ($generated@@216 ($generated@@230 $generated@@575) ($generated@@230 $generated@@576)) ($generated@@230 ($generated@@216 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@216 ($generated@@230 $generated@@575) ($generated@@230 $generated@@576)))
)))
(assert (forall (($generated@@577 Int) ) (! (= ($generated@@288 ($generated@@8 ($generated@@229 $generated@@577))) ($generated@@230 ($generated@@288 ($generated@@8 $generated@@577))))
 :pattern ( ($generated@@288 ($generated@@8 ($generated@@229 $generated@@577))))
)))
(assert (forall (($generated@@578 T@U) ) (! (= ($generated@@288 ($generated@@230 $generated@@578)) ($generated@@230 ($generated@@288 $generated@@578)))
 :pattern ( ($generated@@288 ($generated@@230 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@249 (type $generated@@579))))
 (=> (and (= (type $generated@@579) ($generated@@248 $generated@@580)) (= ($generated@@279 $generated@@579) 0)) (= $generated@@579 ($generated@@278 $generated@@580))))
 :pattern ( ($generated@@279 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@582)))
 (=> (and (and (= (type $generated@@581) ($generated@@76 $generated@@584 $generated@@2)) (= (type $generated@@583) $generated@@2)) (<= 0 ($generated $generated@@583))) (= ($generated@@293 ($generated@@82 $generated@@581 $generated@@582 $generated@@583)) (+ (- ($generated@@293 $generated@@581) ($generated ($generated@@81 $generated@@581 $generated@@582))) ($generated $generated@@583)))))
 :pattern ( ($generated@@293 ($generated@@82 $generated@@581 $generated@@582 $generated@@583)))
)))
(assert  (=> (<= 0 $generated@@134) (forall (($generated@@585 Int) ) (!  (=> (or ($generated@@225 $generated@@585) (and (not (= 0 $generated@@134)) (< $generated@@585 2400))) (= ($generated@@224 $generated@@585) $generated@@585))
 :pattern ( ($generated@@224 $generated@@585))
))))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@587) $generated@@2)) ($generated@@74 $generated@@587 $generated@@46 $generated@@586))
 :pattern ( ($generated@@74 $generated@@587 $generated@@46 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@589) $generated@@3)) ($generated@@74 $generated@@589 $generated@@47 $generated@@588))
 :pattern ( ($generated@@74 $generated@@589 $generated@@47 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) $generated@@4)) ($generated@@74 $generated@@591 $generated@@44 $generated@@590))
 :pattern ( ($generated@@74 $generated@@591 $generated@@44 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@593) $generated@@261)) ($generated@@74 $generated@@593 $generated@@45 $generated@@592))
 :pattern ( ($generated@@74 $generated@@593 $generated@@45 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@595) $generated@@150)) ($generated@@74 $generated@@595 $generated@@48 $generated@@594))
 :pattern ( ($generated@@74 $generated@@595 $generated@@48 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@248 $generated@@150)) (= (type $generated@@597) $generated@@64)) (= ($generated@@132 $generated@@596 ($generated@@247 $generated@@597)) (forall (($generated@@598 Int) ) (!  (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@279 $generated@@596))) ($generated@@217 ($generated@@338 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@338 $generated@@596 $generated@@598))
))))
 :pattern ( ($generated@@132 $generated@@596 ($generated@@247 $generated@@597)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 Int) ) (!  (=> (= (type $generated@@600) ($generated@@248 $generated@@150)) (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@279 $generated@@600))) (< ($generated@@524 ($generated@@382 $generated@@141 ($generated@@338 $generated@@600 $generated@@601))) ($generated@@599 $generated@@600))))
 :pattern ( ($generated@@524 ($generated@@382 $generated@@141 ($generated@@338 $generated@@600 $generated@@601))))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@301 $generated@@150 $generated@@150)) (= (type $generated@@603) $generated@@64)) (= (type $generated@@604) $generated@@64)) ($generated@@132 $generated@@602 ($generated@@410 $generated@@603 $generated@@604))) (and (and ($generated@@132 ($generated@@299 $generated@@602) ($generated@@234 $generated@@603)) ($generated@@132 ($generated@@350 $generated@@602) ($generated@@234 $generated@@604))) ($generated@@132 ($generated@@381 $generated@@602) ($generated@@234 ($generated@@140 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@132 $generated@@602 ($generated@@410 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@319 $generated@@150 $generated@@150)) (= (type $generated@@606) $generated@@64)) (= (type $generated@@607) $generated@@64)) ($generated@@132 $generated@@605 ($generated@@418 $generated@@606 $generated@@607))) (and (and ($generated@@132 ($generated@@317 $generated@@605) ($generated@@239 $generated@@606)) ($generated@@132 ($generated@@361 $generated@@605) ($generated@@239 $generated@@607))) ($generated@@132 ($generated@@392 $generated@@605) ($generated@@239 ($generated@@140 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@132 $generated@@605 ($generated@@418 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@2) ($generated@@132 $generated@@608 $generated@@46))
 :pattern ( ($generated@@132 $generated@@608 $generated@@46))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@3) ($generated@@132 $generated@@609 $generated@@47))
 :pattern ( ($generated@@132 $generated@@609 $generated@@47))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@4) ($generated@@132 $generated@@610 $generated@@44))
 :pattern ( ($generated@@132 $generated@@610 $generated@@44))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@261) ($generated@@132 $generated@@611 $generated@@45))
 :pattern ( ($generated@@132 $generated@@611 $generated@@45))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@150) ($generated@@132 $generated@@612 $generated@@48))
 :pattern ( ($generated@@132 $generated@@612 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () Int)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () Int)
(declare-fun $generated@@624 () Int)
(declare-fun $generated@@625 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@613) ($generated@@162 $generated@@77 $generated@@4)) (= (type $generated@@614) $generated@@77)) (= (type $generated@@615) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@616) ($generated@@248 $generated@@150))) (= (type $generated@@617) ($generated@@248 $generated@@150))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@626  (=> (= $generated@@613 ($generated@@161 $generated@@614 $generated@@615 $generated@@60 false)) (=> (and (and ($generated@@132 $generated@@616 ($generated@@247 $generated@@45)) ($generated@@74 $generated@@616 ($generated@@247 $generated@@45) $generated@@615)) (and (= $generated@@617 ($generated@@230 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@246 ($generated@@278 $generated@@150) ($generated@@288 ($generated@@259 117))) ($generated@@288 ($generated@@259 110))) ($generated@@288 ($generated@@259 117))) ($generated@@288 ($generated@@259 115))) ($generated@@288 ($generated@@259 101))) ($generated@@288 ($generated@@259 100))))) ($generated@@132 $generated@@617 ($generated@@247 $generated@@45)))) (=> (and (and (and (= $generated@@616 $generated@@617) (= $generated@@618 ($generated@@229 10))) (and ($generated@@132 ($generated@@8 $generated@@618) $generated@@46) (= $generated@@619 $generated@@618))) (and (and (= $generated@@620 ($generated@@229 20)) ($generated@@132 ($generated@@8 $generated@@620) $generated@@46)) (and (= $generated@@621 $generated@@620) ($generated@@74 ($generated@@8 $generated@@619) $generated@@46 $generated@@615)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (< $generated@@619 2400)) (=> (and (and (< $generated@@619 2400) ($generated@@225 $generated@@619)) (and (= $generated@@622 ($generated@@224 $generated@@619)) ($generated@@74 ($generated@@8 $generated@@622) $generated@@46 $generated@@615))) (=> (and (and (and ($generated@@136 ($generated@@224 $generated@@619)) (let (($generated@@627 ($generated@@229 10)))
 (and ($generated@@225 $generated@@627) ($generated@@136 ($generated@@224 $generated@@627))))) (and (= $generated@@623 (let (($generated@@628 ($generated@@229 20)))
(let (($generated@@629 ($generated@@229 10)))
(+ ($generated@@135 ($generated@@229 ($generated@@224 $generated@@629))) $generated@@628)))) (= $generated@@624 ($generated@@229 30)))) (and (and ($generated@@74 ($generated@@8 $generated@@624) $generated@@46 $generated@@615) ($generated@@136 ($generated@@229 30))) (and ($generated@@136 ($generated@@229 30)) (= (ControlFlow 0 2) (- 0 1))))) (= $generated@@623 ($generated@@229 ($generated@@135 ($generated@@229 30))))))))))))
(let (($generated@@630  (=> (and (and ($generated@@265 $generated@@615) ($generated@@625 $generated@@615)) (and (= 1 $generated@@134) (= (ControlFlow 0 4) 2))) $generated@@626)))
$generated@@630)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (Int Int) Bool)
(declare-fun $generated@@78 (Int) Int)
(declare-fun $generated@@79 (T@U) Bool)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (Int Int) Bool)
(declare-fun $generated@@84 (Int Int) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@93 (Bool) T@U)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@95 () T@U)
(declare-fun $generated@@96 (T@T T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@99 (T@T) T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U) T@U)
(declare-fun $generated@@104 (T@U T@U T@U) T@U)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 (T@T T@T T@T) T@T)
(declare-fun $generated@@108 (T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@113 () T@T)
(declare-fun $generated@@233 (T@U T@U T@U) Bool)
(declare-fun $generated@@234 (Int) T@U)
(declare-fun $generated@@238 (T@U T@U) Bool)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@250 () T@T)
(declare-fun $generated@@256 (T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@264 (T@U) Bool)
(declare-fun $generated@@268 (T@U T@U T@U) T@U)
(declare-fun $generated@@269 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@270 (T@T T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@324 (T@U T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@345 (T@U T@U T@U) Bool)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@357 (T@T) T@U)
(declare-fun $generated@@358 (T@U) Int)
(declare-fun $generated@@359 (T@T) T@T)
(declare-fun $generated@@360 (T@T) T@T)
(declare-fun $generated@@373 (T@U) Int)
(declare-fun $generated@@374 (T@T) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@T T@T) T@U)
(declare-fun $generated@@381 (T@T T@T) T@T)
(declare-fun $generated@@382 (T@T) T@T)
(declare-fun $generated@@383 (T@T) T@T)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@T T@T) T@U)
(declare-fun $generated@@399 (T@T T@T) T@T)
(declare-fun $generated@@400 (T@T) T@T)
(declare-fun $generated@@401 (T@T) T@T)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@491 (T@U T@U) T@U)
(declare-fun $generated@@499 (T@U T@U) T@U)
(declare-fun $generated@@507 (Int Int) Int)
(declare-fun $generated@@514 (T@T) T@U)
(declare-fun $generated@@538 () T@T)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@550 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@582 (T@U Int) T@U)
(declare-fun $generated@@591 (T@U) Int)
(declare-fun $generated@@593 (T@U) T@U)
(declare-fun $generated@@597 (T@U) T@U)
(declare-fun $generated@@601 (T@U) T@U)
(declare-fun $generated@@605 (T@U) T@U)
(declare-fun $generated@@619 (T@U) Int)
(declare-fun $generated@@620 (T@U) Int)
(declare-fun $generated@@639 (T@U) T@U)
(declare-fun $generated@@703 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@114 $generated@@115)) 11)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@99 ($generated@@80 $generated@@116 $generated@@117)) $generated@@116)
 :pattern ( ($generated@@80 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@T) ($generated@@119 T@T) ) (! (= ($generated@@100 ($generated@@80 $generated@@118 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@80 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@100 (type $generated@@120))))
(= (type ($generated@@101 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@101 $generated@@120 $generated@@121))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@124)))
(= (type ($generated@@102 $generated@@123 $generated@@124 $generated@@125)) ($generated@@80 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@102 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@100 (type $generated@@128))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@101 ($generated@@102 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@101 ($generated@@102 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@101 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@101 $generated@@137 $generated@@139)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@69 (type $generated@@141))))
(= (type ($generated@@103 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@103 $generated@@140 $generated@@141))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= (type ($generated@@104 $generated@@143 $generated@@144 $generated@@145)) $generated@@82)
 :pattern ( ($generated@@104 $generated@@143 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (let (($generated@@149 ($generated@@69 (type $generated@@147))))
 (=> (= (type $generated@@148) $generated@@149) (= ($generated@@103 ($generated@@104 $generated@@146 $generated@@147 $generated@@148) $generated@@147) $generated@@148)))
 :weight 0
))) (and (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@152 $generated@@153) (= ($generated@@103 ($generated@@104 $generated@@151 $generated@@152 $generated@@150) $generated@@153) ($generated@@103 $generated@@151 $generated@@153)))
 :weight 0
)) (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or true (= ($generated@@103 ($generated@@104 $generated@@155 $generated@@156 $generated@@154) $generated@@157) ($generated@@103 $generated@@155 $generated@@157)))
 :weight 0
)))) (forall (($generated@@158 T@U) ) (! (let (($generated@@159 (type $generated@@158)))
(= (type ($generated@@85 $generated@@158)) $generated@@159))
 :pattern ( ($generated@@85 $generated@@158))
))) (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 ($generated@@100 (type $generated@@160))))
(= (type ($generated@@86 $generated@@160 $generated@@161)) $generated@@162))
 :pattern ( ($generated@@86 $generated@@160 $generated@@161))
))) (= ($generated@@1 $generated@@105) 14)) (= ($generated@@1 $generated@@106) 15)) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@87 $generated@@163)) ($generated@@80 $generated@@105 $generated@@106))
 :pattern ( ($generated@@87 $generated@@163))
))) (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@88 $generated@@164 $generated@@165 $generated@@166)) $generated@@106)
 :pattern ( ($generated@@88 $generated@@164 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@107 $generated@@167 $generated@@168 $generated@@169)) 16))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@108 ($generated@@107 $generated@@170 $generated@@171 $generated@@172)) $generated@@170)
 :pattern ( ($generated@@107 $generated@@170 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@109 ($generated@@107 $generated@@173 $generated@@174 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@107 $generated@@173 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@110 ($generated@@107 $generated@@176 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@107 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@110 (type $generated@@179))))
(= (type ($generated@@111 $generated@@179 $generated@@180 $generated@@181)) $generated@@182))
 :pattern ( ($generated@@111 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 (type $generated@@186)))
(let (($generated@@188 (type $generated@@185)))
(let (($generated@@189 (type $generated@@184)))
(= (type ($generated@@112 $generated@@183 $generated@@184 $generated@@185 $generated@@186)) ($generated@@107 $generated@@189 $generated@@188 $generated@@187)))))
 :pattern ( ($generated@@112 $generated@@183 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@110 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@111 ($generated@@112 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@111 ($generated@@112 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@111 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@111 ($generated@@112 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@111 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@111 ($generated@@112 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@111 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (= ($generated@@1 $generated@@113) 17)) (forall (($generated@@213 Int) ) (! (= (type ($generated@@89 $generated@@213)) ($generated@@107 ($generated@@80 $generated@@81 $generated@@82) $generated@@113 $generated@@113))
 :pattern ( ($generated@@89 $generated@@213))
))) (forall (($generated@@214 T@U) ) (! (= (type ($generated@@90 $generated@@214)) ($generated@@107 ($generated@@80 $generated@@81 $generated@@82) $generated@@113 $generated@@4))
 :pattern ( ($generated@@90 $generated@@214))
))) (forall (($generated@@215 T@U) ) (! (= (type ($generated@@91 $generated@@215)) ($generated@@107 ($generated@@80 $generated@@81 $generated@@82) $generated@@113 ($generated@@80 $generated@@113 $generated@@4)))
 :pattern ( ($generated@@91 $generated@@215))
))) (forall (($generated@@216 T@U) ) (! (= (type ($generated@@92 $generated@@216)) ($generated@@80 $generated@@113 $generated@@4))
 :pattern ( ($generated@@92 $generated@@216))
))) (forall (($generated@@217 Bool) ) (! (= (type ($generated@@93 $generated@@217)) ($generated@@80 $generated@@81 $generated@@4))
 :pattern ( ($generated@@93 $generated@@217))
))) (forall (($generated@@218 T@U) ) (! (= (type ($generated@@94 $generated@@218)) $generated@@105)
 :pattern ( ($generated@@94 $generated@@218))
))) (= (type $generated@@95) $generated@@105)) (forall (($generated@@219 T@T) ($generated@@220 T@U) ) (! (= (type ($generated@@96 $generated@@219 $generated@@220)) $generated@@219)
 :pattern ( ($generated@@96 $generated@@219 $generated@@220))
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (= (type ($generated@@97 $generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) $generated@@113)
 :pattern ( ($generated@@97 $generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))) (forall (($generated@@226 T@U) ) (! (= (type ($generated@@98 $generated@@226)) $generated@@113)
 :pattern ( ($generated@@98 $generated@@226))
))))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@227 T@U) ($generated@@228 Int) ($generated@@229 Int) ) (!  (=> (and (= (type $generated@@227) ($generated@@80 $generated@@81 $generated@@82)) (or ($generated@@83 ($generated@@78 $generated@@228) ($generated@@78 $generated@@229)) (and (not (= 1 $generated@@76)) ($generated@@79 $generated@@227)))) (and (forall (($generated@@230 Int) ) ($generated@@84 $generated@@230 ($generated@@78 $generated@@228))) (= ($generated@@77 ($generated@@78 $generated@@228) ($generated@@78 $generated@@229)) (let (($generated@@231 ($generated@@85 ($generated@@86 ($generated@@87 ($generated@@88 ($generated@@89 ($generated@@78 $generated@@228)) ($generated@@90 $generated@@46) ($generated@@91 ($generated@@92 ($generated@@93 false))))) ($generated@@94 $generated@@95)))))
(forall (($generated@@232 Int) ) (!  (=> true (= (+ ($generated ($generated@@96 $generated@@2 ($generated@@97 $generated@@46 $generated@@46 $generated@@227 $generated@@231 ($generated@@98 ($generated@@8 $generated@@232))))) $generated@@229) (+ (+ $generated@@232 $generated@@228) $generated@@229)))
 :pattern ( ($generated@@96 $generated@@2 ($generated@@97 $generated@@46 $generated@@46 $generated@@227 $generated@@231 ($generated@@98 ($generated@@8 $generated@@232)))))
))))))
 :weight 3
 :pattern ( ($generated@@77 ($generated@@78 $generated@@228) ($generated@@78 $generated@@229)) ($generated@@79 $generated@@227))
))))
(assert (forall (($generated@@235 Int) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@66)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@2) (= (type $generated@@237) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@233 $generated@@236 ($generated@@234 0) $generated@@237))
 :pattern ( ($generated@@233 $generated@@236 ($generated@@234 0) $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (= (type $generated@@239) $generated@@66) (= (type $generated@@240) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@241) $generated@@113)) (= ($generated@@0 ($generated@@111 ($generated@@90 $generated@@239) $generated@@240 $generated@@241)) ($generated@@238 $generated@@241 $generated@@239)))
 :pattern ( ($generated@@111 ($generated@@90 $generated@@239) $generated@@240 $generated@@241))
)))
(assert  (and (= (type $generated@@242) $generated@@66) (= (type $generated@@243) $generated@@81)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@81) (= (type $generated@@245) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@233 $generated@@244 $generated@@242 $generated@@245)  (or (= $generated@@244 $generated@@243) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@245 $generated@@244) $generated@@60)))))
 :pattern ( ($generated@@233 $generated@@244 $generated@@242 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (= (type $generated@@247) $generated@@2) ($generated@@246 $generated@@247 ($generated@@234 0)))
 :pattern ( ($generated@@246 $generated@@247 ($generated@@234 0)))
)))
(assert  (and (= ($generated@@1 $generated@@250) 18) (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@249 $generated@@251 $generated@@252)) $generated@@66)
 :pattern ( ($generated@@249 $generated@@251 $generated@@252))
))))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (= (type $generated@@253) $generated@@66) (= (type $generated@@254) $generated@@66)) (= (type $generated@@255) $generated@@250)) ($generated@@246 $generated@@255 ($generated@@249 $generated@@253 $generated@@254))) ($generated@@248 $generated@@255))
 :pattern ( ($generated@@248 $generated@@255) ($generated@@246 $generated@@255 ($generated@@249 $generated@@253 $generated@@254)))
)))
(assert  (and (forall (($generated@@259 T@U) ) (! (= (type ($generated@@257 $generated@@259)) $generated@@113)
 :pattern ( ($generated@@257 $generated@@259))
)) (forall (($generated@@260 T@U) ) (! (= (type ($generated@@258 $generated@@260)) $generated@@113)
 :pattern ( ($generated@@258 $generated@@260))
))))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@261) $generated@@250) (= (type $generated@@262) $generated@@250)) true) (= ($generated@@256 $generated@@261 $generated@@262)  (and (= ($generated@@257 $generated@@261) ($generated@@257 $generated@@262)) (= ($generated@@258 $generated@@261) ($generated@@258 $generated@@262)))))
 :pattern ( ($generated@@256 $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@263 $generated@@265)) $generated@@66)
 :pattern ( ($generated@@263 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) ($generated@@80 $generated@@113 $generated@@2)) (= (type $generated@@267) $generated@@66)) ($generated@@246 $generated@@266 ($generated@@263 $generated@@267))) ($generated@@264 $generated@@266))
 :pattern ( ($generated@@246 $generated@@266 ($generated@@263 $generated@@267)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@274 $generated@@275)) 19)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@270 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@272 ($generated@@270 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@270 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@268 $generated@@280 $generated@@281 $generated@@282)) $generated@@283))
 :pattern ( ($generated@@268 $generated@@280 $generated@@281 $generated@@282))
))) (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (! (let (($generated@@288 (type $generated@@287)))
(let (($generated@@289 (type $generated@@285)))
(= (type ($generated@@273 $generated@@284 $generated@@285 $generated@@286 $generated@@287)) ($generated@@270 $generated@@289 $generated@@288))))
 :pattern ( ($generated@@273 $generated@@284 $generated@@285 $generated@@286 $generated@@287))
))) (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@272 (type $generated@@290))))
 (=> (= (type $generated@@293) $generated@@294) (= ($generated@@268 ($generated@@273 $generated@@290 $generated@@291 $generated@@292 $generated@@293) $generated@@291 $generated@@292) $generated@@293)))
 :weight 0
))) (and (and (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (or (= $generated@@297 $generated@@299) (= ($generated@@268 ($generated@@273 $generated@@296 $generated@@297 $generated@@298 $generated@@295) $generated@@299 $generated@@300) ($generated@@268 $generated@@296 $generated@@299 $generated@@300)))
 :weight 0
)) (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (or (= $generated@@304 $generated@@306) (= ($generated@@268 ($generated@@273 $generated@@302 $generated@@303 $generated@@304 $generated@@301) $generated@@305 $generated@@306) ($generated@@268 $generated@@302 $generated@@305 $generated@@306)))
 :weight 0
))) (forall (($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (or true (= ($generated@@268 ($generated@@273 $generated@@308 $generated@@309 $generated@@310 $generated@@307) $generated@@311 $generated@@312) ($generated@@268 $generated@@308 $generated@@311 $generated@@312)))
 :weight 0
)))) (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 Bool) ) (! (= (type ($generated@@269 $generated@@313 $generated@@314 $generated@@315 $generated@@316)) ($generated@@270 $generated@@81 $generated@@4))
 :pattern ( ($generated@@269 $generated@@313 $generated@@314 $generated@@315 $generated@@316))
))))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 Bool) ($generated@@321 T@U) ($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@69 (type $generated@@322))))
 (=> (and (and (and (and (= (type $generated@@317) $generated@@81) (= (type $generated@@318) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@319) ($generated@@68 $generated@@4))) (= (type $generated@@321) $generated@@81)) (= (type $generated@@322) ($generated@@68 $generated@@323))) (= ($generated@@0 ($generated@@268 ($generated@@269 $generated@@317 $generated@@318 $generated@@319 $generated@@320) $generated@@321 $generated@@322))  (=> (and (not (= $generated@@321 $generated@@317)) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@318 $generated@@321) $generated@@319))) $generated@@320))))
 :pattern ( ($generated@@268 ($generated@@269 $generated@@317 $generated@@318 $generated@@319 $generated@@320) $generated@@321 $generated@@322))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (! (= (type ($generated@@324 $generated@@325 $generated@@326)) $generated@@250)
 :pattern ( ($generated@@324 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (and (and (= (type $generated@@327) $generated@@66) (= (type $generated@@328) $generated@@66)) (= (type $generated@@329) $generated@@113)) (= (type $generated@@330) $generated@@113)) (= ($generated@@246 ($generated@@324 $generated@@329 $generated@@330) ($generated@@249 $generated@@327 $generated@@328))  (and ($generated@@238 $generated@@329 $generated@@327) ($generated@@238 $generated@@330 $generated@@328))))
 :pattern ( ($generated@@246 ($generated@@324 $generated@@329 $generated@@330) ($generated@@249 $generated@@327 $generated@@328)))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@250) (= (type $generated@@332) $generated@@250)) (= ($generated@@256 $generated@@331 $generated@@332) (= $generated@@331 $generated@@332)))
 :pattern ( ($generated@@256 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (= (type ($generated@@333 $generated@@334)) $generated@@66)
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@335) ($generated@@80 $generated@@113 $generated@@4)) (= (type $generated@@336) $generated@@66)) (= ($generated@@246 $generated@@335 ($generated@@333 $generated@@336)) (forall (($generated@@337 T@U) ) (!  (=> (and (= (type $generated@@337) $generated@@113) ($generated@@0 ($generated@@101 $generated@@335 $generated@@337))) ($generated@@238 $generated@@337 $generated@@336))
 :pattern ( ($generated@@101 $generated@@335 $generated@@337))
))))
 :pattern ( ($generated@@246 $generated@@335 ($generated@@333 $generated@@336)))
)))
(assert (forall (($generated@@339 T@U) ) (! (= (type ($generated@@338 $generated@@339)) $generated@@66)
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@340) ($generated@@80 $generated@@113 $generated@@4)) (= (type $generated@@341) $generated@@66)) (= ($generated@@246 $generated@@340 ($generated@@338 $generated@@341)) (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@113) ($generated@@0 ($generated@@101 $generated@@340 $generated@@342))) ($generated@@238 $generated@@342 $generated@@341))
 :pattern ( ($generated@@101 $generated@@340 $generated@@342))
))))
 :pattern ( ($generated@@246 $generated@@340 ($generated@@338 $generated@@341)))
)))
(assert (forall (($generated@@343 Int) ) (! (= ($generated@@78 $generated@@343) $generated@@343)
 :pattern ( ($generated@@78 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (! (= ($generated@@85 $generated@@344) $generated@@344)
 :pattern ( ($generated@@85 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@346) $generated@@66) (= (type $generated@@347) $generated@@66)) (= (type $generated@@348) $generated@@113)) (= (type $generated@@349) $generated@@113)) (= (type $generated@@350) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@79 $generated@@350)) (= ($generated@@233 ($generated@@324 $generated@@348 $generated@@349) ($generated@@249 $generated@@346 $generated@@347) $generated@@350)  (and ($generated@@345 $generated@@348 $generated@@346 $generated@@350) ($generated@@345 $generated@@349 $generated@@347 $generated@@350))))
 :pattern ( ($generated@@233 ($generated@@324 $generated@@348 $generated@@349) ($generated@@249 $generated@@346 $generated@@347) $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (= (type ($generated@@351 $generated@@352)) $generated@@70)
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@250) (= ($generated@@248 $generated@@353) (= ($generated@@351 $generated@@353) $generated@@62)))
 :pattern ( ($generated@@248 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@250) ($generated@@248 $generated@@354)) (exists (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (and (and (= (type $generated@@355) $generated@@113) (= (type $generated@@356) $generated@@113)) (= $generated@@354 ($generated@@324 $generated@@355 $generated@@356)))
 :no-pattern (type $generated@@355)
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
)))
 :pattern ( ($generated@@248 $generated@@354))
)))
(assert  (and (and (forall (($generated@@361 T@T) ) (= ($generated@@1 ($generated@@359 $generated@@361)) 20)) (forall (($generated@@362 T@T) ) (! (= ($generated@@360 ($generated@@359 $generated@@362)) $generated@@362)
 :pattern ( ($generated@@359 $generated@@362))
))) (forall (($generated@@363 T@T) ) (! (= (type ($generated@@357 $generated@@363)) ($generated@@359 $generated@@363))
 :pattern ( ($generated@@357 $generated@@363))
))))
(assert (forall (($generated@@364 T@T) ) (! (= ($generated@@358 ($generated@@357 $generated@@364)) 0)
 :pattern ( ($generated@@357 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@365) ($generated@@80 $generated@@81 $generated@@4)) (= (type $generated@@366) $generated@@113)) (= ($generated@@0 ($generated@@101 ($generated@@92 $generated@@365) $generated@@366)) ($generated@@0 ($generated@@101 $generated@@365 ($generated@@96 $generated@@81 $generated@@366)))))
 :pattern ( ($generated@@101 ($generated@@92 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@100 (type $generated@@367))))
 (=> (and (= (type $generated@@367) ($generated@@80 $generated@@105 $generated@@369)) (= (type $generated@@368) $generated@@105)) (= ($generated@@86 $generated@@367 $generated@@368) ($generated@@101 $generated@@367 $generated@@368))))
 :pattern ( ($generated@@86 $generated@@367 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@66) (= (type $generated@@372) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@345 ($generated@@98 $generated@@370) $generated@@371 $generated@@372) ($generated@@233 $generated@@370 $generated@@371 $generated@@372)))
 :pattern ( ($generated@@345 ($generated@@98 $generated@@370) $generated@@371 $generated@@372))
)))
(assert (forall (($generated@@375 T@T) ) (! (= (type ($generated@@374 $generated@@375)) ($generated@@80 $generated@@375 $generated@@2))
 :pattern ( ($generated@@374 $generated@@375))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@99 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@80 $generated@@377 $generated@@2)) (and (= (= ($generated@@373 $generated@@376) 0) (= $generated@@376 ($generated@@374 $generated@@377))) (=> (not (= ($generated@@373 $generated@@376) 0)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) (< 0 ($generated ($generated@@101 $generated@@376 $generated@@378))))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@373 $generated@@376))
)))
(assert  (and (and (and (and (forall (($generated@@384 T@T) ($generated@@385 T@T) ) (= ($generated@@1 ($generated@@381 $generated@@384 $generated@@385)) 21)) (forall (($generated@@386 T@T) ($generated@@387 T@T) ) (! (= ($generated@@382 ($generated@@381 $generated@@386 $generated@@387)) $generated@@386)
 :pattern ( ($generated@@381 $generated@@386 $generated@@387))
))) (forall (($generated@@388 T@T) ($generated@@389 T@T) ) (! (= ($generated@@383 ($generated@@381 $generated@@388 $generated@@389)) $generated@@389)
 :pattern ( ($generated@@381 $generated@@388 $generated@@389))
))) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@382 (type $generated@@390))))
(= (type ($generated@@379 $generated@@390)) ($generated@@80 $generated@@391 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@390))
))) (forall (($generated@@392 T@T) ($generated@@393 T@T) ) (! (= (type ($generated@@380 $generated@@392 $generated@@393)) ($generated@@381 $generated@@392 $generated@@393))
 :pattern ( ($generated@@380 $generated@@392 $generated@@393))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@T) ) (! (let (($generated@@396 (type $generated@@394)))
 (not ($generated@@0 ($generated@@101 ($generated@@379 ($generated@@380 $generated@@396 $generated@@395)) $generated@@394))))
 :pattern ( (let (($generated@@396 (type $generated@@394)))
($generated@@101 ($generated@@379 ($generated@@380 $generated@@396 $generated@@395)) $generated@@394)))
)))
(assert  (and (and (and (and (forall (($generated@@402 T@T) ($generated@@403 T@T) ) (= ($generated@@1 ($generated@@399 $generated@@402 $generated@@403)) 22)) (forall (($generated@@404 T@T) ($generated@@405 T@T) ) (! (= ($generated@@400 ($generated@@399 $generated@@404 $generated@@405)) $generated@@404)
 :pattern ( ($generated@@399 $generated@@404 $generated@@405))
))) (forall (($generated@@406 T@T) ($generated@@407 T@T) ) (! (= ($generated@@401 ($generated@@399 $generated@@406 $generated@@407)) $generated@@407)
 :pattern ( ($generated@@399 $generated@@406 $generated@@407))
))) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@400 (type $generated@@408))))
(= (type ($generated@@397 $generated@@408)) ($generated@@80 $generated@@409 $generated@@4)))
 :pattern ( ($generated@@397 $generated@@408))
))) (forall (($generated@@410 T@T) ($generated@@411 T@T) ) (! (= (type ($generated@@398 $generated@@410 $generated@@411)) ($generated@@399 $generated@@410 $generated@@411))
 :pattern ( ($generated@@398 $generated@@410 $generated@@411))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@T) ) (! (let (($generated@@414 (type $generated@@412)))
 (not ($generated@@0 ($generated@@101 ($generated@@397 ($generated@@398 $generated@@414 $generated@@413)) $generated@@412))))
 :pattern ( (let (($generated@@414 (type $generated@@412)))
($generated@@101 ($generated@@397 ($generated@@398 $generated@@414 $generated@@413)) $generated@@412)))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@99 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@80 $generated@@416 $generated@@2)) (= ($generated@@264 $generated@@415) (forall (($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@416) (and (<= 0 ($generated ($generated@@101 $generated@@415 $generated@@417))) (<= ($generated ($generated@@101 $generated@@415 $generated@@417)) ($generated@@373 $generated@@415))))
 :pattern ( ($generated@@101 $generated@@415 $generated@@417))
)))))
 :pattern ( ($generated@@264 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@418) $generated@@66) (= (type $generated@@419) $generated@@66)) (= (type $generated@@420) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@421) ($generated@@107 ($generated@@80 $generated@@81 $generated@@82) $generated@@113 $generated@@113))) (= (type $generated@@422) ($generated@@107 ($generated@@80 $generated@@81 $generated@@82) $generated@@113 $generated@@4))) (= (type $generated@@423) ($generated@@107 ($generated@@80 $generated@@81 $generated@@82) $generated@@113 ($generated@@80 $generated@@113 $generated@@4)))) (= (type $generated@@424) $generated@@113)) (= ($generated@@97 $generated@@418 $generated@@419 $generated@@420 ($generated@@88 $generated@@421 $generated@@422 $generated@@423) $generated@@424) ($generated@@111 $generated@@421 $generated@@420 $generated@@424)))
 :pattern ( ($generated@@97 $generated@@418 $generated@@419 $generated@@420 ($generated@@88 $generated@@421 $generated@@422 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@113) ($generated@@238 $generated@@425 $generated@@242)) (and (= ($generated@@98 ($generated@@96 $generated@@81 $generated@@425)) $generated@@425) ($generated@@246 ($generated@@96 $generated@@81 $generated@@425) $generated@@242)))
 :pattern ( ($generated@@238 $generated@@425 $generated@@242))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@383 (type $generated@@426))))
(let (($generated@@428 ($generated@@382 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@381 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@380 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ) (!  (and (= (type $generated@@429) $generated@@428) ($generated@@0 ($generated@@101 ($generated@@379 $generated@@426) $generated@@429)))
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@379 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@383 (type $generated@@431))))
(= (type ($generated@@430 $generated@@431)) ($generated@@80 $generated@@432 $generated@@4)))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@383 (type $generated@@433))))
(let (($generated@@435 ($generated@@382 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@381 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@380 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ) (!  (and (= (type $generated@@436) $generated@@434) ($generated@@0 ($generated@@101 ($generated@@430 $generated@@433) $generated@@436)))
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@430 $generated@@433))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@401 (type $generated@@437))))
(let (($generated@@439 ($generated@@400 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@399 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@398 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ) (!  (and (= (type $generated@@440) $generated@@439) ($generated@@0 ($generated@@101 ($generated@@397 $generated@@437) $generated@@440)))
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@397 $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@401 (type $generated@@442))))
(= (type ($generated@@441 $generated@@442)) ($generated@@80 $generated@@443 $generated@@4)))
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@401 (type $generated@@444))))
(let (($generated@@446 ($generated@@400 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@399 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@398 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ) (!  (and (= (type $generated@@447) $generated@@445) ($generated@@0 ($generated@@101 ($generated@@441 $generated@@444) $generated@@447)))
 :no-pattern (type $generated@@447)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
))))))
 :pattern ( ($generated@@441 $generated@@444))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) ($generated@@80 $generated@@113 $generated@@2)) (= (type $generated@@449) $generated@@66)) (= ($generated@@246 $generated@@448 ($generated@@263 $generated@@449)) (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@113) (< 0 ($generated ($generated@@101 $generated@@448 $generated@@450)))) ($generated@@238 $generated@@450 $generated@@449))
 :pattern ( ($generated@@101 $generated@@448 $generated@@450))
))))
 :pattern ( ($generated@@246 $generated@@448 ($generated@@263 $generated@@449)))
)))
(assert (forall (($generated@@451 Bool) ($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@81) (= ($generated@@0 ($generated@@101 ($generated@@93 $generated@@451) $generated@@452)) $generated@@451))
 :pattern ( ($generated@@101 ($generated@@93 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@106) (= (type $generated@@454) $generated@@105)) (= ($generated@@101 ($generated@@87 $generated@@453) $generated@@454) $generated@@453))
 :pattern ( ($generated@@101 ($generated@@87 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (= (type $generated@@455) ($generated@@80 $generated@@113 $generated@@4)) (= (type $generated@@456) $generated@@66)) (= (type $generated@@457) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@233 $generated@@455 ($generated@@333 $generated@@456) $generated@@457) (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@113) ($generated@@0 ($generated@@101 $generated@@455 $generated@@458))) ($generated@@345 $generated@@458 $generated@@456 $generated@@457))
 :pattern ( ($generated@@101 $generated@@455 $generated@@458))
))))
 :pattern ( ($generated@@233 $generated@@455 ($generated@@333 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (and (= (type $generated@@459) ($generated@@80 $generated@@113 $generated@@4)) (= (type $generated@@460) $generated@@66)) (= (type $generated@@461) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@233 $generated@@459 ($generated@@338 $generated@@460) $generated@@461) (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@113) ($generated@@0 ($generated@@101 $generated@@459 $generated@@462))) ($generated@@345 $generated@@462 $generated@@460 $generated@@461))
 :pattern ( ($generated@@101 $generated@@459 $generated@@462))
))))
 :pattern ( ($generated@@233 $generated@@459 ($generated@@338 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 (type $generated@@463)))
(= ($generated ($generated@@101 ($generated@@374 $generated@@464) $generated@@463)) 0))
 :pattern ( (let (($generated@@464 (type $generated@@463)))
($generated@@101 ($generated@@374 $generated@@464) $generated@@463)))
)))
(assert  (and (forall (($generated@@467 T@U) ) (! (= (type ($generated@@465 $generated@@467)) ($generated@@80 $generated@@113 $generated@@4))
 :pattern ( ($generated@@465 $generated@@467))
)) (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@383 (type $generated@@468))))
(let (($generated@@470 ($generated@@382 (type $generated@@468))))
(= (type ($generated@@466 $generated@@468)) ($generated@@80 $generated@@470 $generated@@469))))
 :pattern ( ($generated@@466 $generated@@468))
))))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) ($generated@@381 $generated@@113 $generated@@113)) (= (type $generated@@472) $generated@@113)) (= ($generated@@0 ($generated@@101 ($generated@@465 $generated@@471) $generated@@472))  (and ($generated@@0 ($generated@@101 ($generated@@379 $generated@@471) ($generated@@257 ($generated@@96 $generated@@250 $generated@@472)))) (= ($generated@@101 ($generated@@466 $generated@@471) ($generated@@257 ($generated@@96 $generated@@250 $generated@@472))) ($generated@@258 ($generated@@96 $generated@@250 $generated@@472))))))
 :pattern ( ($generated@@101 ($generated@@465 $generated@@471) $generated@@472))
)))
(assert  (and (forall (($generated@@475 T@U) ) (! (= (type ($generated@@473 $generated@@475)) ($generated@@80 $generated@@113 $generated@@4))
 :pattern ( ($generated@@473 $generated@@475))
)) (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@401 (type $generated@@476))))
(let (($generated@@478 ($generated@@400 (type $generated@@476))))
(= (type ($generated@@474 $generated@@476)) ($generated@@80 $generated@@478 $generated@@477))))
 :pattern ( ($generated@@474 $generated@@476))
))))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) ($generated@@399 $generated@@113 $generated@@113)) (= (type $generated@@480) $generated@@113)) (= ($generated@@0 ($generated@@101 ($generated@@473 $generated@@479) $generated@@480))  (and ($generated@@0 ($generated@@101 ($generated@@397 $generated@@479) ($generated@@257 ($generated@@96 $generated@@250 $generated@@480)))) (= ($generated@@101 ($generated@@474 $generated@@479) ($generated@@257 ($generated@@96 $generated@@250 $generated@@480))) ($generated@@258 ($generated@@96 $generated@@250 $generated@@480))))))
 :pattern ( ($generated@@101 ($generated@@473 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (! (let (($generated@@483 (type $generated@@482)))
(let (($generated@@484 ($generated@@382 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@381 $generated@@484 $generated@@483)) (= ($generated@@0 ($generated@@101 ($generated@@430 $generated@@481) $generated@@482)) (exists (($generated@@485 T@U) ) (!  (and (= (type $generated@@485) $generated@@484) (and ($generated@@0 ($generated@@101 ($generated@@379 $generated@@481) $generated@@485)) (= $generated@@482 ($generated@@101 ($generated@@466 $generated@@481) $generated@@485))))
 :pattern ( ($generated@@101 ($generated@@379 $generated@@481) $generated@@485))
 :pattern ( ($generated@@101 ($generated@@466 $generated@@481) $generated@@485))
))))))
 :pattern ( ($generated@@101 ($generated@@430 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (! (let (($generated@@488 (type $generated@@487)))
(let (($generated@@489 ($generated@@400 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@399 $generated@@489 $generated@@488)) (= ($generated@@0 ($generated@@101 ($generated@@441 $generated@@486) $generated@@487)) (exists (($generated@@490 T@U) ) (!  (and (= (type $generated@@490) $generated@@489) (and ($generated@@0 ($generated@@101 ($generated@@397 $generated@@486) $generated@@490)) (= $generated@@487 ($generated@@101 ($generated@@474 $generated@@486) $generated@@490))))
 :pattern ( ($generated@@101 ($generated@@397 $generated@@486) $generated@@490))
 :pattern ( ($generated@@101 ($generated@@474 $generated@@486) $generated@@490))
))))))
 :pattern ( ($generated@@101 ($generated@@441 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (and (= (type $generated@@494) ($generated@@381 $generated@@113 $generated@@113)) (= (type $generated@@495) $generated@@66)) (= (type $generated@@496) $generated@@66)) (= (type $generated@@497) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@233 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497) (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@113) ($generated@@0 ($generated@@101 ($generated@@379 $generated@@494) $generated@@498))) (and ($generated@@345 ($generated@@101 ($generated@@466 $generated@@494) $generated@@498) $generated@@496 $generated@@497) ($generated@@345 $generated@@498 $generated@@495 $generated@@497)))
 :pattern ( ($generated@@101 ($generated@@466 $generated@@494) $generated@@498))
 :pattern ( ($generated@@101 ($generated@@379 $generated@@494) $generated@@498))
))))
 :pattern ( ($generated@@233 $generated@@494 ($generated@@491 $generated@@495 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (! (= (type ($generated@@499 $generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@499 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (and (= (type $generated@@502) ($generated@@399 $generated@@113 $generated@@113)) (= (type $generated@@503) $generated@@66)) (= (type $generated@@504) $generated@@66)) (= (type $generated@@505) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@233 $generated@@502 ($generated@@499 $generated@@503 $generated@@504) $generated@@505) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@113) ($generated@@0 ($generated@@101 ($generated@@397 $generated@@502) $generated@@506))) (and ($generated@@345 ($generated@@101 ($generated@@474 $generated@@502) $generated@@506) $generated@@504 $generated@@505) ($generated@@345 $generated@@506 $generated@@503 $generated@@505)))
 :pattern ( ($generated@@101 ($generated@@474 $generated@@502) $generated@@506))
 :pattern ( ($generated@@101 ($generated@@397 $generated@@502) $generated@@506))
))))
 :pattern ( ($generated@@233 $generated@@502 ($generated@@499 $generated@@503 $generated@@504) $generated@@505))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@508 Int) ($generated@@509 Int) ) (!  (=> (or ($generated@@84 ($generated@@78 $generated@@508) ($generated@@78 $generated@@509)) (not (= 0 $generated@@76))) (= ($generated@@507 ($generated@@78 $generated@@508) ($generated@@78 $generated@@509)) ($generated@@78 (+ $generated@@508 $generated@@509))))
 :weight 3
 :pattern ( ($generated@@507 ($generated@@78 $generated@@508) ($generated@@78 $generated@@509)))
))))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@510 Int) ($generated@@511 Int) ) (!  (=> (or ($generated@@84 $generated@@510 $generated@@511) (not (= 0 $generated@@76))) true)
 :pattern ( ($generated@@507 $generated@@510 $generated@@511))
))))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@512 Int) ($generated@@513 Int) ) (!  (=> (or ($generated@@83 $generated@@512 $generated@@513) (not (= 1 $generated@@76))) true)
 :pattern ( ($generated@@77 $generated@@512 $generated@@513))
))))
(assert (forall (($generated@@515 T@T) ) (! (= (type ($generated@@514 $generated@@515)) ($generated@@80 $generated@@515 $generated@@4))
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 ($generated@@401 (type $generated@@516))))
(let (($generated@@518 ($generated@@400 (type $generated@@516))))
 (=> (= (type $generated@@516) ($generated@@399 $generated@@518 $generated@@517)) (= (= $generated@@516 ($generated@@398 $generated@@518 $generated@@517)) (= ($generated@@397 $generated@@516) ($generated@@514 $generated@@518))))))
 :pattern ( ($generated@@397 $generated@@516))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 ($generated@@401 (type $generated@@519))))
(let (($generated@@521 ($generated@@400 (type $generated@@519))))
 (=> (= (type $generated@@519) ($generated@@399 $generated@@521 $generated@@520)) (= (= $generated@@519 ($generated@@398 $generated@@521 $generated@@520)) (= ($generated@@441 $generated@@519) ($generated@@514 $generated@@520))))))
 :pattern ( ($generated@@441 $generated@@519))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 ($generated@@401 (type $generated@@522))))
(let (($generated@@524 ($generated@@400 (type $generated@@522))))
 (=> (= (type $generated@@522) ($generated@@399 $generated@@524 $generated@@523)) (= (= $generated@@522 ($generated@@398 $generated@@524 $generated@@523)) (= ($generated@@473 $generated@@522) ($generated@@514 $generated@@113))))))
 :pattern ( ($generated@@473 $generated@@522))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 ($generated@@383 (type $generated@@525))))
(let (($generated@@527 ($generated@@382 (type $generated@@525))))
 (=> (= (type $generated@@525) ($generated@@381 $generated@@527 $generated@@526)) (or (= $generated@@525 ($generated@@380 $generated@@527 $generated@@526)) (exists (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (and (and (= (type $generated@@528) $generated@@113) (= (type $generated@@529) $generated@@113)) ($generated@@0 ($generated@@101 ($generated@@465 $generated@@525) ($generated@@98 ($generated@@324 $generated@@528 $generated@@529)))))
 :no-pattern (type $generated@@528)
 :no-pattern (type $generated@@529)
 :no-pattern ($generated $generated@@528)
 :no-pattern ($generated@@0 $generated@@528)
 :no-pattern ($generated $generated@@529)
 :no-pattern ($generated@@0 $generated@@529)
))))))
 :pattern ( ($generated@@465 $generated@@525))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 ($generated@@401 (type $generated@@530))))
(let (($generated@@532 ($generated@@400 (type $generated@@530))))
 (=> (= (type $generated@@530) ($generated@@399 $generated@@532 $generated@@531)) (or (= $generated@@530 ($generated@@398 $generated@@532 $generated@@531)) (exists (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (and (and (= (type $generated@@533) $generated@@113) (= (type $generated@@534) $generated@@113)) ($generated@@0 ($generated@@101 ($generated@@473 $generated@@530) ($generated@@98 ($generated@@324 $generated@@533 $generated@@534)))))
 :no-pattern (type $generated@@533)
 :no-pattern (type $generated@@534)
 :no-pattern ($generated $generated@@533)
 :no-pattern ($generated@@0 $generated@@533)
 :no-pattern ($generated $generated@@534)
 :no-pattern ($generated@@0 $generated@@534)
))))))
 :pattern ( ($generated@@473 $generated@@530))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@113) ($generated@@238 $generated@@535 $generated@@46)) (and (= ($generated@@98 ($generated@@96 $generated@@2 $generated@@535)) $generated@@535) ($generated@@246 ($generated@@96 $generated@@2 $generated@@535) $generated@@46)))
 :pattern ( ($generated@@238 $generated@@535 $generated@@46))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@113) ($generated@@238 $generated@@536 $generated@@47)) (and (= ($generated@@98 ($generated@@96 $generated@@3 $generated@@536)) $generated@@536) ($generated@@246 ($generated@@96 $generated@@3 $generated@@536) $generated@@47)))
 :pattern ( ($generated@@238 $generated@@536 $generated@@47))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@113) ($generated@@238 $generated@@537 $generated@@44)) (and (= ($generated@@98 ($generated@@96 $generated@@4 $generated@@537)) $generated@@537) ($generated@@246 ($generated@@96 $generated@@4 $generated@@537) $generated@@44)))
 :pattern ( ($generated@@238 $generated@@537 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@538) 23))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@113) ($generated@@238 $generated@@539 $generated@@45)) (and (= ($generated@@98 ($generated@@96 $generated@@538 $generated@@539)) $generated@@539) ($generated@@246 ($generated@@96 $generated@@538 $generated@@539) $generated@@45)))
 :pattern ( ($generated@@238 $generated@@539 $generated@@45))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@66) (= ($generated@@238 ($generated@@98 $generated@@540) $generated@@541) ($generated@@246 $generated@@540 $generated@@541)))
 :pattern ( ($generated@@238 ($generated@@98 $generated@@540) $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@99 (type $generated@@542))))
 (=> (= (type $generated@@542) ($generated@@80 $generated@@543 $generated@@2)) (<= 0 ($generated@@373 $generated@@542))))
 :pattern ( ($generated@@373 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@360 (type $generated@@544))))
 (=> (= (type $generated@@544) ($generated@@359 $generated@@545)) (<= 0 ($generated@@358 $generated@@544))))
 :pattern ( ($generated@@358 $generated@@544))
)))
(assert (forall (($generated@@547 T@U) ) (! (= (type ($generated@@546 $generated@@547)) $generated@@66)
 :pattern ( ($generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@66) (= (type $generated@@549) $generated@@66)) (= ($generated@@546 ($generated@@491 $generated@@548 $generated@@549)) $generated@@548))
 :pattern ( ($generated@@491 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ) (! (= (type ($generated@@550 $generated@@551)) $generated@@66)
 :pattern ( ($generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@66) (= (type $generated@@553) $generated@@66)) (= ($generated@@550 ($generated@@491 $generated@@552 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@491 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@66) (= (type $generated@@555) $generated@@66)) (= ($generated@@74 ($generated@@491 $generated@@554 $generated@@555)) $generated@@58))
 :pattern ( ($generated@@491 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@66)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@66) (= (type $generated@@559) $generated@@66)) (= ($generated@@556 ($generated@@499 $generated@@558 $generated@@559)) $generated@@558))
 :pattern ( ($generated@@499 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@66)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@66) (= (type $generated@@563) $generated@@66)) (= ($generated@@560 ($generated@@499 $generated@@562 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@499 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@66) (= (type $generated@@565) $generated@@66)) (= ($generated@@74 ($generated@@499 $generated@@564 $generated@@565)) $generated@@59))
 :pattern ( ($generated@@499 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@113) (= (type $generated@@567) $generated@@113)) (= ($generated@@351 ($generated@@324 $generated@@566 $generated@@567)) $generated@@62))
 :pattern ( ($generated@@324 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@66)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@66) (= (type $generated@@571) $generated@@66)) (= ($generated@@568 ($generated@@249 $generated@@570 $generated@@571)) $generated@@570))
 :pattern ( ($generated@@249 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@66)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@66) (= (type $generated@@575) $generated@@66)) (= ($generated@@572 ($generated@@249 $generated@@574 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@249 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@113) (= (type $generated@@577) $generated@@113)) (= ($generated@@257 ($generated@@324 $generated@@576 $generated@@577)) $generated@@576))
 :pattern ( ($generated@@324 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@113) (= (type $generated@@579) $generated@@113)) (= ($generated@@258 ($generated@@324 $generated@@578 $generated@@579)) $generated@@579))
 :pattern ( ($generated@@324 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@81) ($generated@@246 $generated@@580 $generated@@242))
 :pattern ( ($generated@@246 $generated@@580 $generated@@242))
)))
(assert  (and (forall (($generated@@583 T@U) ) (! (= (type ($generated@@581 $generated@@583)) $generated@@66)
 :pattern ( ($generated@@581 $generated@@583))
)) (forall (($generated@@584 T@U) ($generated@@585 Int) ) (! (let (($generated@@586 ($generated@@360 (type $generated@@584))))
(= (type ($generated@@582 $generated@@584 $generated@@585)) $generated@@586))
 :pattern ( ($generated@@582 $generated@@584 $generated@@585))
))))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@587) ($generated@@359 $generated@@113)) (= (type $generated@@588) $generated@@66)) (= (type $generated@@589) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@233 $generated@@587 ($generated@@581 $generated@@588) $generated@@589) (forall (($generated@@590 Int) ) (!  (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@358 $generated@@587))) ($generated@@345 ($generated@@582 $generated@@587 $generated@@590) $generated@@588 $generated@@589))
 :pattern ( ($generated@@582 $generated@@587 $generated@@590))
))))
 :pattern ( ($generated@@233 $generated@@587 ($generated@@581 $generated@@588) $generated@@589))
)))
(assert (forall (($generated@@592 Int) ) (! (= ($generated@@591 ($generated@@234 $generated@@592)) $generated@@592)
 :pattern ( ($generated@@234 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ) (! (= (type ($generated@@593 $generated@@594)) $generated@@66)
 :pattern ( ($generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@66) (= ($generated@@593 ($generated@@333 $generated@@595)) $generated@@595))
 :pattern ( ($generated@@333 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@66) (= ($generated@@74 ($generated@@333 $generated@@596)) $generated@@54))
 :pattern ( ($generated@@333 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ) (! (= (type ($generated@@597 $generated@@598)) $generated@@66)
 :pattern ( ($generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@66) (= ($generated@@597 ($generated@@338 $generated@@599)) $generated@@599))
 :pattern ( ($generated@@338 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@66) (= ($generated@@74 ($generated@@338 $generated@@600)) $generated@@55))
 :pattern ( ($generated@@338 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ) (! (= (type ($generated@@601 $generated@@602)) $generated@@66)
 :pattern ( ($generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@66) (= ($generated@@601 ($generated@@263 $generated@@603)) $generated@@603))
 :pattern ( ($generated@@263 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@66) (= ($generated@@74 ($generated@@263 $generated@@604)) $generated@@56))
 :pattern ( ($generated@@263 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ) (! (= (type ($generated@@605 $generated@@606)) $generated@@66)
 :pattern ( ($generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@66) (= ($generated@@605 ($generated@@581 $generated@@607)) $generated@@607))
 :pattern ( ($generated@@581 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@66) (= ($generated@@74 ($generated@@581 $generated@@608)) $generated@@57))
 :pattern ( ($generated@@581 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@609)))
(= ($generated@@96 $generated@@610 ($generated@@98 $generated@@609)) $generated@@609))
 :pattern ( ($generated@@98 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@611) ($generated@@381 $generated@@113 $generated@@113)) (= (type $generated@@612) $generated@@66)) (= (type $generated@@613) $generated@@66)) (= ($generated@@246 $generated@@611 ($generated@@491 $generated@@612 $generated@@613)) (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@113) ($generated@@0 ($generated@@101 ($generated@@379 $generated@@611) $generated@@614))) (and ($generated@@238 ($generated@@101 ($generated@@466 $generated@@611) $generated@@614) $generated@@613) ($generated@@238 $generated@@614 $generated@@612)))
 :pattern ( ($generated@@101 ($generated@@466 $generated@@611) $generated@@614))
 :pattern ( ($generated@@101 ($generated@@379 $generated@@611) $generated@@614))
))))
 :pattern ( ($generated@@246 $generated@@611 ($generated@@491 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@615) ($generated@@399 $generated@@113 $generated@@113)) (= (type $generated@@616) $generated@@66)) (= (type $generated@@617) $generated@@66)) (= ($generated@@246 $generated@@615 ($generated@@499 $generated@@616 $generated@@617)) (forall (($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@113) ($generated@@0 ($generated@@101 ($generated@@397 $generated@@615) $generated@@618))) (and ($generated@@238 ($generated@@101 ($generated@@474 $generated@@615) $generated@@618) $generated@@617) ($generated@@238 $generated@@618 $generated@@616)))
 :pattern ( ($generated@@101 ($generated@@474 $generated@@615) $generated@@618))
 :pattern ( ($generated@@101 ($generated@@397 $generated@@615) $generated@@618))
))))
 :pattern ( ($generated@@246 $generated@@615 ($generated@@499 $generated@@616 $generated@@617)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@113) (= (type $generated@@622) $generated@@113)) (< ($generated@@619 $generated@@621) ($generated@@620 ($generated@@324 $generated@@621 $generated@@622))))
 :pattern ( ($generated@@324 $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@113) (= (type $generated@@624) $generated@@113)) (< ($generated@@619 $generated@@624) ($generated@@620 ($generated@@324 $generated@@623 $generated@@624))))
 :pattern ( ($generated@@324 $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (! (let (($generated@@627 ($generated@@100 (type $generated@@625))))
 (=> (and (= (type $generated@@625) ($generated@@80 $generated@@105 $generated@@627)) (= (type $generated@@626) $generated@@105)) (= ($generated@@86 $generated@@625 ($generated@@94 $generated@@626)) ($generated@@86 $generated@@625 $generated@@626))))
 :pattern ( ($generated@@86 $generated@@625 ($generated@@94 $generated@@626)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) $generated@@113) (= (type $generated@@629) $generated@@66)) (= (type $generated@@630) $generated@@66)) ($generated@@238 $generated@@628 ($generated@@491 $generated@@629 $generated@@630))) (and (= ($generated@@98 ($generated@@96 ($generated@@381 $generated@@113 $generated@@113) $generated@@628)) $generated@@628) ($generated@@246 ($generated@@96 ($generated@@381 $generated@@113 $generated@@113) $generated@@628) ($generated@@491 $generated@@629 $generated@@630))))
 :pattern ( ($generated@@238 $generated@@628 ($generated@@491 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) $generated@@113) (= (type $generated@@632) $generated@@66)) (= (type $generated@@633) $generated@@66)) ($generated@@238 $generated@@631 ($generated@@499 $generated@@632 $generated@@633))) (and (= ($generated@@98 ($generated@@96 ($generated@@399 $generated@@113 $generated@@113) $generated@@631)) $generated@@631) ($generated@@246 ($generated@@96 ($generated@@399 $generated@@113 $generated@@113) $generated@@631) ($generated@@499 $generated@@632 $generated@@633))))
 :pattern ( ($generated@@238 $generated@@631 ($generated@@499 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@66) (= (type $generated@@635) $generated@@66)) (= (type $generated@@636) $generated@@113)) ($generated@@238 $generated@@636 ($generated@@249 $generated@@634 $generated@@635))) (and (= ($generated@@98 ($generated@@96 $generated@@250 $generated@@636)) $generated@@636) ($generated@@246 ($generated@@96 $generated@@250 $generated@@636) ($generated@@249 $generated@@634 $generated@@635))))
 :pattern ( ($generated@@238 $generated@@636 ($generated@@249 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@637 T@U) ) (! (let (($generated@@638 (type $generated@@637)))
 (not ($generated@@0 ($generated@@101 ($generated@@514 $generated@@638) $generated@@637))))
 :pattern ( (let (($generated@@638 (type $generated@@637)))
($generated@@101 ($generated@@514 $generated@@638) $generated@@637)))
)))
(assert (forall (($generated@@640 T@U) ) (! (= (type ($generated@@639 $generated@@640)) $generated@@71)
 :pattern ( ($generated@@639 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@66) (= (type $generated@@642) $generated@@66)) (and (= ($generated@@74 ($generated@@249 $generated@@641 $generated@@642)) $generated@@63) (= ($generated@@639 ($generated@@249 $generated@@641 $generated@@642)) $generated@@65)))
 :pattern ( ($generated@@249 $generated@@641 $generated@@642))
)))
(assert (forall (($generated@@643 Int) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@645) $generated@@113)) (= ($generated@@111 ($generated@@89 $generated@@643) $generated@@644 $generated@@645) ($generated@@98 ($generated@@8 ($generated@@507 ($generated ($generated@@96 $generated@@2 $generated@@645)) $generated@@643)))))
 :pattern ( ($generated@@111 ($generated@@89 $generated@@643) $generated@@644 $generated@@645))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@250) (= ($generated@@619 ($generated@@98 $generated@@646)) ($generated@@620 $generated@@646)))
 :pattern ( ($generated@@619 ($generated@@98 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@113) ($generated@@238 $generated@@647 ($generated@@234 0))) (and (= ($generated@@98 ($generated@@96 $generated@@2 $generated@@647)) $generated@@647) ($generated@@246 ($generated@@96 ($generated@@80 $generated@@113 $generated@@4) $generated@@647) ($generated@@234 0))))
 :pattern ( ($generated@@238 $generated@@647 ($generated@@234 0)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (= (type $generated@@648) $generated@@113) (= (type $generated@@649) $generated@@66)) ($generated@@238 $generated@@648 ($generated@@333 $generated@@649))) (and (= ($generated@@98 ($generated@@96 ($generated@@80 $generated@@113 $generated@@4) $generated@@648)) $generated@@648) ($generated@@246 ($generated@@96 ($generated@@80 $generated@@113 $generated@@4) $generated@@648) ($generated@@333 $generated@@649))))
 :pattern ( ($generated@@238 $generated@@648 ($generated@@333 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (= (type $generated@@650) $generated@@113) (= (type $generated@@651) $generated@@66)) ($generated@@238 $generated@@650 ($generated@@338 $generated@@651))) (and (= ($generated@@98 ($generated@@96 ($generated@@80 $generated@@113 $generated@@4) $generated@@650)) $generated@@650) ($generated@@246 ($generated@@96 ($generated@@80 $generated@@113 $generated@@4) $generated@@650) ($generated@@338 $generated@@651))))
 :pattern ( ($generated@@238 $generated@@650 ($generated@@338 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (= (type $generated@@652) $generated@@113) (= (type $generated@@653) $generated@@66)) ($generated@@238 $generated@@652 ($generated@@263 $generated@@653))) (and (= ($generated@@98 ($generated@@96 ($generated@@80 $generated@@113 $generated@@2) $generated@@652)) $generated@@652) ($generated@@246 ($generated@@96 ($generated@@80 $generated@@113 $generated@@2) $generated@@652) ($generated@@263 $generated@@653))))
 :pattern ( ($generated@@238 $generated@@652 ($generated@@263 $generated@@653)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (= (type $generated@@654) $generated@@113) (= (type $generated@@655) $generated@@66)) ($generated@@238 $generated@@654 ($generated@@581 $generated@@655))) (and (= ($generated@@98 ($generated@@96 ($generated@@359 $generated@@113) $generated@@654)) $generated@@654) ($generated@@246 ($generated@@96 ($generated@@359 $generated@@113) $generated@@654) ($generated@@581 $generated@@655))))
 :pattern ( ($generated@@238 $generated@@654 ($generated@@581 $generated@@655)))
)))
(assert (= ($generated@@74 $generated@@242) $generated@@61))
(assert (= ($generated@@639 $generated@@242) $generated@@64))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (and (= (type $generated@@656) ($generated@@80 $generated@@113 $generated@@2)) (= (type $generated@@657) $generated@@66)) (= (type $generated@@658) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@233 $generated@@656 ($generated@@263 $generated@@657) $generated@@658) (forall (($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@659) $generated@@113) (< 0 ($generated ($generated@@101 $generated@@656 $generated@@659)))) ($generated@@345 $generated@@659 $generated@@657 $generated@@658))
 :pattern ( ($generated@@101 $generated@@656 $generated@@659))
))))
 :pattern ( ($generated@@233 $generated@@656 ($generated@@263 $generated@@657) $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ) (!  (=> (= (type $generated@@660) ($generated@@80 $generated@@81 $generated@@4)) ($generated@@246 ($generated@@92 $generated@@660) ($generated@@333 $generated@@242)))
 :pattern ( ($generated@@92 $generated@@660))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (and (= (type $generated@@661) $generated@@250) (= (type $generated@@662) $generated@@66)) (= (type $generated@@663) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@79 $generated@@663) (and ($generated@@248 $generated@@661) (exists (($generated@@664 T@U) ) (!  (and (= (type $generated@@664) $generated@@66) ($generated@@233 $generated@@661 ($generated@@249 $generated@@662 $generated@@664) $generated@@663))
 :pattern ( ($generated@@233 $generated@@661 ($generated@@249 $generated@@662 $generated@@664) $generated@@663))
))))) ($generated@@345 ($generated@@257 $generated@@661) $generated@@662 $generated@@663))
 :pattern ( ($generated@@345 ($generated@@257 $generated@@661) $generated@@662 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (and (= (type $generated@@665) $generated@@250) (= (type $generated@@666) $generated@@66)) (= (type $generated@@667) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@79 $generated@@667) (and ($generated@@248 $generated@@665) (exists (($generated@@668 T@U) ) (!  (and (= (type $generated@@668) $generated@@66) ($generated@@233 $generated@@665 ($generated@@249 $generated@@668 $generated@@666) $generated@@667))
 :pattern ( ($generated@@233 $generated@@665 ($generated@@249 $generated@@668 $generated@@666) $generated@@667))
))))) ($generated@@345 ($generated@@258 $generated@@665) $generated@@666 $generated@@667))
 :pattern ( ($generated@@345 ($generated@@258 $generated@@665) $generated@@666 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) $generated@@113) (= (type $generated@@670) $generated@@113)) (= ($generated@@324 ($generated@@85 $generated@@669) ($generated@@85 $generated@@670)) ($generated@@85 ($generated@@324 $generated@@669 $generated@@670))))
 :pattern ( ($generated@@324 ($generated@@85 $generated@@669) ($generated@@85 $generated@@670)))
)))
(assert (forall (($generated@@671 Int) ) (! (= ($generated@@98 ($generated@@8 ($generated@@78 $generated@@671))) ($generated@@85 ($generated@@98 ($generated@@8 $generated@@671))))
 :pattern ( ($generated@@98 ($generated@@8 ($generated@@78 $generated@@671))))
)))
(assert (forall (($generated@@672 T@U) ) (! (= ($generated@@98 ($generated@@85 $generated@@672)) ($generated@@85 ($generated@@98 $generated@@672)))
 :pattern ( ($generated@@98 ($generated@@85 $generated@@672)))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@673 T@U) ($generated@@674 Int) ($generated@@675 Int) ) (!  (=> (and (= (type $generated@@673) ($generated@@80 $generated@@81 $generated@@82)) (or ($generated@@83 $generated@@674 $generated@@675) (and (not (= 1 $generated@@76)) ($generated@@79 $generated@@673)))) (and (forall (($generated@@676 Int) ) ($generated@@84 $generated@@676 $generated@@674)) (= ($generated@@77 $generated@@674 $generated@@675) (let (($generated@@677 ($generated@@85 ($generated@@86 ($generated@@87 ($generated@@88 ($generated@@89 $generated@@674) ($generated@@90 $generated@@46) ($generated@@91 ($generated@@92 ($generated@@93 false))))) ($generated@@94 $generated@@95)))))
(forall (($generated@@678 Int) ) (!  (=> true (= (+ ($generated ($generated@@96 $generated@@2 ($generated@@97 $generated@@46 $generated@@46 $generated@@673 $generated@@677 ($generated@@98 ($generated@@8 $generated@@678))))) $generated@@675) (+ (+ $generated@@678 $generated@@674) $generated@@675)))
 :pattern ( ($generated@@96 $generated@@2 ($generated@@97 $generated@@46 $generated@@46 $generated@@673 $generated@@677 ($generated@@98 ($generated@@8 $generated@@678)))))
))))))
 :pattern ( ($generated@@77 $generated@@674 $generated@@675) ($generated@@79 $generated@@673))
))))
(assert (forall (($generated@@679 T@U) ) (! (let (($generated@@680 ($generated@@360 (type $generated@@679))))
 (=> (and (= (type $generated@@679) ($generated@@359 $generated@@680)) (= ($generated@@358 $generated@@679) 0)) (= $generated@@679 ($generated@@357 $generated@@680))))
 :pattern ( ($generated@@358 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ($generated@@683 T@U) ) (! (let (($generated@@684 (type $generated@@682)))
 (=> (and (and (= (type $generated@@681) ($generated@@80 $generated@@684 $generated@@2)) (= (type $generated@@683) $generated@@2)) (<= 0 ($generated $generated@@683))) (= ($generated@@373 ($generated@@102 $generated@@681 $generated@@682 $generated@@683)) (+ (- ($generated@@373 $generated@@681) ($generated ($generated@@101 $generated@@681 $generated@@682))) ($generated $generated@@683)))))
 :pattern ( ($generated@@373 ($generated@@102 $generated@@681 $generated@@682 $generated@@683)))
)))
(assert  (=> (<= 0 $generated@@76) (forall (($generated@@685 Int) ($generated@@686 Int) ) (!  (=> (or ($generated@@84 $generated@@685 $generated@@686) (not (= 0 $generated@@76))) (= ($generated@@507 $generated@@685 $generated@@686) (+ $generated@@685 $generated@@686)))
 :pattern ( ($generated@@507 $generated@@685 $generated@@686))
))))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (= (type $generated@@687) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@688) $generated@@2)) ($generated@@233 $generated@@688 $generated@@46 $generated@@687))
 :pattern ( ($generated@@233 $generated@@688 $generated@@46 $generated@@687))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@689) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@690) $generated@@3)) ($generated@@233 $generated@@690 $generated@@47 $generated@@689))
 :pattern ( ($generated@@233 $generated@@690 $generated@@47 $generated@@689))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (= (type $generated@@691) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@692) $generated@@4)) ($generated@@233 $generated@@692 $generated@@44 $generated@@691))
 :pattern ( ($generated@@233 $generated@@692 $generated@@44 $generated@@691))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (= (type $generated@@693) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@694) $generated@@538)) ($generated@@233 $generated@@694 $generated@@45 $generated@@693))
 :pattern ( ($generated@@233 $generated@@694 $generated@@45 $generated@@693))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (= (type $generated@@695) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@696) $generated@@113)) ($generated@@233 $generated@@696 $generated@@48 $generated@@695))
 :pattern ( ($generated@@233 $generated@@696 $generated@@48 $generated@@695))
)))
(assert (forall (($generated@@697 T@U) ($generated@@698 T@U) ) (!  (=> (and (= (type $generated@@697) ($generated@@359 $generated@@113)) (= (type $generated@@698) $generated@@66)) (= ($generated@@246 $generated@@697 ($generated@@581 $generated@@698)) (forall (($generated@@699 Int) ) (!  (=> (and (<= 0 $generated@@699) (< $generated@@699 ($generated@@358 $generated@@697))) ($generated@@238 ($generated@@582 $generated@@697 $generated@@699) $generated@@698))
 :pattern ( ($generated@@582 $generated@@697 $generated@@699))
))))
 :pattern ( ($generated@@246 $generated@@697 ($generated@@581 $generated@@698)))
)))
(assert (forall (($generated@@700 T@U) ($generated@@701 T@U) ($generated@@702 T@U) ) (!  (=> (and (and (= (type $generated@@700) ($generated@@80 $generated@@113 $generated@@4)) (= (type $generated@@701) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@702) $generated@@113)) (= ($generated@@111 ($generated@@91 $generated@@700) $generated@@701 $generated@@702) $generated@@700))
 :pattern ( ($generated@@111 ($generated@@91 $generated@@700) $generated@@701 $generated@@702))
)))
(assert (forall (($generated@@704 T@U) ($generated@@705 Int) ) (!  (=> (= (type $generated@@704) ($generated@@359 $generated@@113)) (=> (and (<= 0 $generated@@705) (< $generated@@705 ($generated@@358 $generated@@704))) (< ($generated@@620 ($generated@@96 $generated@@250 ($generated@@582 $generated@@704 $generated@@705))) ($generated@@703 $generated@@704))))
 :pattern ( ($generated@@620 ($generated@@96 $generated@@250 ($generated@@582 $generated@@704 $generated@@705))))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (and (and (= (type $generated@@706) ($generated@@381 $generated@@113 $generated@@113)) (= (type $generated@@707) $generated@@66)) (= (type $generated@@708) $generated@@66)) ($generated@@246 $generated@@706 ($generated@@491 $generated@@707 $generated@@708))) (and (and ($generated@@246 ($generated@@379 $generated@@706) ($generated@@333 $generated@@707)) ($generated@@246 ($generated@@430 $generated@@706) ($generated@@333 $generated@@708))) ($generated@@246 ($generated@@465 $generated@@706) ($generated@@333 ($generated@@249 $generated@@707 $generated@@708)))))
 :pattern ( ($generated@@246 $generated@@706 ($generated@@491 $generated@@707 $generated@@708)))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (and (and (= (type $generated@@709) ($generated@@399 $generated@@113 $generated@@113)) (= (type $generated@@710) $generated@@66)) (= (type $generated@@711) $generated@@66)) ($generated@@246 $generated@@709 ($generated@@499 $generated@@710 $generated@@711))) (and (and ($generated@@246 ($generated@@397 $generated@@709) ($generated@@338 $generated@@710)) ($generated@@246 ($generated@@441 $generated@@709) ($generated@@338 $generated@@711))) ($generated@@246 ($generated@@473 $generated@@709) ($generated@@338 ($generated@@249 $generated@@710 $generated@@711)))))
 :pattern ( ($generated@@246 $generated@@709 ($generated@@499 $generated@@710 $generated@@711)))
)))
(assert (forall (($generated@@712 T@U) ) (!  (=> (= (type $generated@@712) $generated@@2) ($generated@@246 $generated@@712 $generated@@46))
 :pattern ( ($generated@@246 $generated@@712 $generated@@46))
)))
(assert (forall (($generated@@713 T@U) ) (!  (=> (= (type $generated@@713) $generated@@3) ($generated@@246 $generated@@713 $generated@@47))
 :pattern ( ($generated@@246 $generated@@713 $generated@@47))
)))
(assert (forall (($generated@@714 T@U) ) (!  (=> (= (type $generated@@714) $generated@@4) ($generated@@246 $generated@@714 $generated@@44))
 :pattern ( ($generated@@246 $generated@@714 $generated@@44))
)))
(assert (forall (($generated@@715 T@U) ) (!  (=> (= (type $generated@@715) $generated@@538) ($generated@@246 $generated@@715 $generated@@45))
 :pattern ( ($generated@@246 $generated@@715 $generated@@45))
)))
(assert (forall (($generated@@716 T@U) ) (!  (=> (= (type $generated@@716) $generated@@113) ($generated@@246 $generated@@716 $generated@@48))
 :pattern ( ($generated@@246 $generated@@716 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 () T@U)
(declare-fun $generated@@719 () Int)
(declare-fun $generated@@720 () Int)
(declare-fun $generated@@721 (T@U) Bool)
(assert  (and (= (type $generated@@717) ($generated@@270 $generated@@81 $generated@@4)) (= (type $generated@@718) ($generated@@80 $generated@@81 $generated@@82))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@722  (=> (and (and (= $generated@@717 ($generated@@269 $generated@@243 $generated@@718 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@83 $generated@@719 $generated@@720)) (or ($generated@@77 $generated@@719 $generated@@720) (let (($generated@@723 ($generated@@85 ($generated@@86 ($generated@@87 ($generated@@88 ($generated@@89 $generated@@719) ($generated@@90 $generated@@46) ($generated@@91 ($generated@@92 ($generated@@93 false))))) ($generated@@94 $generated@@95)))))
(forall (($generated@@724 Int) ) (!  (=> true (= (+ ($generated ($generated@@96 $generated@@2 ($generated@@97 $generated@@46 $generated@@46 $generated@@718 $generated@@723 ($generated@@98 ($generated@@8 $generated@@724))))) $generated@@720) (+ (+ $generated@@724 $generated@@719) $generated@@720)))
 :pattern ( ($generated@@96 $generated@@2 ($generated@@97 $generated@@46 $generated@@46 $generated@@718 $generated@@723 ($generated@@98 ($generated@@8 $generated@@724)))))
)))))))
(let (($generated@@725  (=> (and (and ($generated@@79 $generated@@718) ($generated@@721 $generated@@718)) (and (= 2 $generated@@76) (= (ControlFlow 0 3) 2))) $generated@@722)))
$generated@@725)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
