(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 () Int)
(declare-fun $generated@@70 (T@U Int) Int)
(declare-fun $generated@@71 (T@U) T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (Int) Bool)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@137 (T@T T@T) T@T)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@139 (T@T) T@T)
(declare-fun $generated@@140 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@191 (Int) Int)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@201 (T@T) T@U)
(declare-fun $generated@@202 (T@U) Int)
(declare-fun $generated@@203 (T@T) T@T)
(declare-fun $generated@@204 (T@T) T@T)
(declare-fun $generated@@209 (T@U T@U T@U) Bool)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@211 () T@T)
(declare-fun $generated@@216 (T@U) T@U)
(declare-fun $generated@@217 (T@T T@T) T@U)
(declare-fun $generated@@218 (T@T T@T) T@T)
(declare-fun $generated@@219 (T@T) T@T)
(declare-fun $generated@@220 (T@T) T@T)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@235 (T@T T@T) T@U)
(declare-fun $generated@@236 (T@T T@T) T@T)
(declare-fun $generated@@237 (T@T) T@T)
(declare-fun $generated@@238 (T@T) T@T)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@U T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@284 (T@U T@U) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@296 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 () T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@U Int) T@U)
(declare-fun $generated@@338 (T@U) Int)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@U) T@U)
(declare-fun $generated@@381 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (= ($generated@@1 $generated@@72) 9) (forall (($generated@@74 T@U) ) (! (= (type ($generated@@71 $generated@@74)) $generated@@72)
 :pattern ( ($generated@@71 $generated@@74))
))))
(assert  (=> (<= 0 $generated@@69) (forall (($generated@@75 T@U) ($generated@@76 Int) ) (!  (=> (and (= (type $generated@@75) $generated@@72) (or ($generated@@73 $generated@@76) (not (= 0 $generated@@69)))) (= ($generated@@70 ($generated@@71 $generated@@75) $generated@@76) $generated@@76))
 :pattern ( ($generated@@70 ($generated@@71 $generated@@75) $generated@@76))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 10)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 11)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@64 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@64 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@61)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (= ($generated@@1 ($generated@@137 $generated@@141 $generated@@142)) 13)) (forall (($generated@@143 T@T) ($generated@@144 T@T) ) (! (= ($generated@@138 ($generated@@137 $generated@@143 $generated@@144)) $generated@@143)
 :pattern ( ($generated@@137 $generated@@143 $generated@@144))
))) (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (! (= ($generated@@139 ($generated@@137 $generated@@145 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@137 $generated@@145 $generated@@146))
))) (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (let (($generated@@150 ($generated@@139 (type $generated@@147))))
(= (type ($generated@@135 $generated@@147 $generated@@148 $generated@@149)) $generated@@150))
 :pattern ( ($generated@@135 $generated@@147 $generated@@148 $generated@@149))
))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (let (($generated@@155 (type $generated@@154)))
(let (($generated@@156 (type $generated@@152)))
(= (type ($generated@@140 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@137 $generated@@156 $generated@@155))))
 :pattern ( ($generated@@140 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))) (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@139 (type $generated@@157))))
 (=> (= (type $generated@@160) $generated@@161) (= ($generated@@135 ($generated@@140 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@158 $generated@@159) $generated@@160)))
 :weight 0
))) (and (and (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (or (= $generated@@164 $generated@@166) (= ($generated@@135 ($generated@@140 $generated@@163 $generated@@164 $generated@@165 $generated@@162) $generated@@166 $generated@@167) ($generated@@135 $generated@@163 $generated@@166 $generated@@167)))
 :weight 0
)) (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@171 $generated@@173) (= ($generated@@135 ($generated@@140 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@172 $generated@@173) ($generated@@135 $generated@@169 $generated@@172 $generated@@173)))
 :weight 0
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or true (= ($generated@@135 ($generated@@140 $generated@@175 $generated@@176 $generated@@177 $generated@@174) $generated@@178 $generated@@179) ($generated@@135 $generated@@175 $generated@@178 $generated@@179)))
 :weight 0
)))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 Bool) ) (! (= (type ($generated@@136 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@137 $generated@@80 $generated@@4))
 :pattern ( ($generated@@136 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 Bool) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@64 (type $generated@@189))))
 (=> (and (and (and (and (= (type $generated@@184) $generated@@80) (= (type $generated@@185) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@186) ($generated@@63 $generated@@4))) (= (type $generated@@188) $generated@@80)) (= (type $generated@@189) ($generated@@63 $generated@@190))) (= ($generated@@0 ($generated@@135 ($generated@@136 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@188 $generated@@189))  (=> (and (not (= $generated@@188 $generated@@184)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@185 $generated@@188) $generated@@186))) $generated@@187))))
 :pattern ( ($generated@@135 ($generated@@136 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@188 $generated@@189))
)))
(assert  (=> (<= 0 $generated@@69) (forall (($generated@@192 T@U) ($generated@@193 Int) ) (!  (=> (and (= (type $generated@@192) $generated@@72) (or ($generated@@73 ($generated@@191 $generated@@193)) (not (= 0 $generated@@69)))) (= ($generated@@70 ($generated@@71 $generated@@192) ($generated@@191 $generated@@193)) ($generated@@191 $generated@@193)))
 :weight 3
 :pattern ( ($generated@@70 ($generated@@71 $generated@@192) ($generated@@191 $generated@@193)))
))))
(assert (forall (($generated@@194 Int) ) (! (= ($generated@@191 $generated@@194) $generated@@194)
 :pattern ( ($generated@@191 $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ) (! (let (($generated@@197 (type $generated@@196)))
(= (type ($generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@195 $generated@@196))
)))
(assert (forall (($generated@@198 T@U) ) (! (= ($generated@@195 $generated@@198) $generated@@198)
 :pattern ( ($generated@@195 $generated@@198))
)))
(assert  (=> (<= 0 $generated@@69) (forall (($generated@@199 T@U) ($generated@@200 Int) ) (!  (=> (and (= (type $generated@@199) $generated@@72) (or ($generated@@73 $generated@@200) (not (= 0 $generated@@69)))) true)
 :pattern ( ($generated@@70 $generated@@199 $generated@@200))
))))
(assert  (and (and (forall (($generated@@205 T@T) ) (= ($generated@@1 ($generated@@203 $generated@@205)) 14)) (forall (($generated@@206 T@T) ) (! (= ($generated@@204 ($generated@@203 $generated@@206)) $generated@@206)
 :pattern ( ($generated@@203 $generated@@206))
))) (forall (($generated@@207 T@T) ) (! (= (type ($generated@@201 $generated@@207)) ($generated@@203 $generated@@207))
 :pattern ( ($generated@@201 $generated@@207))
))))
(assert (forall (($generated@@208 T@T) ) (! (= ($generated@@202 ($generated@@201 $generated@@208)) 0)
 :pattern ( ($generated@@201 $generated@@208))
)))
(assert  (and (= ($generated@@1 $generated@@211) 15) (forall (($generated@@212 T@U) ) (! (= (type ($generated@@210 $generated@@212)) $generated@@211)
 :pattern ( ($generated@@210 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and (= (type $generated@@214) $generated@@61) (= (type $generated@@215) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@209 ($generated@@210 $generated@@213) $generated@@214 $generated@@215) ($generated@@77 $generated@@213 $generated@@214 $generated@@215)))
 :pattern ( ($generated@@209 ($generated@@210 $generated@@213) $generated@@214 $generated@@215))
)))
(assert  (and (and (and (and (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (= ($generated@@1 ($generated@@218 $generated@@221 $generated@@222)) 16)) (forall (($generated@@223 T@T) ($generated@@224 T@T) ) (! (= ($generated@@219 ($generated@@218 $generated@@223 $generated@@224)) $generated@@223)
 :pattern ( ($generated@@218 $generated@@223 $generated@@224))
))) (forall (($generated@@225 T@T) ($generated@@226 T@T) ) (! (= ($generated@@220 ($generated@@218 $generated@@225 $generated@@226)) $generated@@226)
 :pattern ( ($generated@@218 $generated@@225 $generated@@226))
))) (forall (($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@219 (type $generated@@227))))
(= (type ($generated@@216 $generated@@227)) ($generated@@79 $generated@@228 $generated@@4)))
 :pattern ( ($generated@@216 $generated@@227))
))) (forall (($generated@@229 T@T) ($generated@@230 T@T) ) (! (= (type ($generated@@217 $generated@@229 $generated@@230)) ($generated@@218 $generated@@229 $generated@@230))
 :pattern ( ($generated@@217 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@T) ) (! (let (($generated@@233 (type $generated@@231)))
 (not ($generated@@0 ($generated@@84 ($generated@@216 ($generated@@217 $generated@@233 $generated@@232)) $generated@@231))))
 :pattern ( (let (($generated@@233 (type $generated@@231)))
($generated@@84 ($generated@@216 ($generated@@217 $generated@@233 $generated@@232)) $generated@@231)))
)))
(assert  (and (and (and (and (forall (($generated@@239 T@T) ($generated@@240 T@T) ) (= ($generated@@1 ($generated@@236 $generated@@239 $generated@@240)) 17)) (forall (($generated@@241 T@T) ($generated@@242 T@T) ) (! (= ($generated@@237 ($generated@@236 $generated@@241 $generated@@242)) $generated@@241)
 :pattern ( ($generated@@236 $generated@@241 $generated@@242))
))) (forall (($generated@@243 T@T) ($generated@@244 T@T) ) (! (= ($generated@@238 ($generated@@236 $generated@@243 $generated@@244)) $generated@@244)
 :pattern ( ($generated@@236 $generated@@243 $generated@@244))
))) (forall (($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@237 (type $generated@@245))))
(= (type ($generated@@234 $generated@@245)) ($generated@@79 $generated@@246 $generated@@4)))
 :pattern ( ($generated@@234 $generated@@245))
))) (forall (($generated@@247 T@T) ($generated@@248 T@T) ) (! (= (type ($generated@@235 $generated@@247 $generated@@248)) ($generated@@236 $generated@@247 $generated@@248))
 :pattern ( ($generated@@235 $generated@@247 $generated@@248))
))))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@T) ) (! (let (($generated@@251 (type $generated@@249)))
 (not ($generated@@0 ($generated@@84 ($generated@@234 ($generated@@235 $generated@@251 $generated@@250)) $generated@@249))))
 :pattern ( (let (($generated@@251 (type $generated@@249)))
($generated@@84 ($generated@@234 ($generated@@235 $generated@@251 $generated@@250)) $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ) (! (let (($generated@@253 ($generated@@220 (type $generated@@252))))
(let (($generated@@254 ($generated@@219 (type $generated@@252))))
 (=> (= (type $generated@@252) ($generated@@218 $generated@@254 $generated@@253)) (or (= $generated@@252 ($generated@@217 $generated@@254 $generated@@253)) (exists (($generated@@255 T@U) ) (!  (and (= (type $generated@@255) $generated@@254) ($generated@@0 ($generated@@84 ($generated@@216 $generated@@252) $generated@@255)))
 :no-pattern (type $generated@@255)
 :no-pattern ($generated $generated@@255)
 :no-pattern ($generated@@0 $generated@@255)
))))))
 :pattern ( ($generated@@216 $generated@@252))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@238 (type $generated@@256))))
(let (($generated@@258 ($generated@@237 (type $generated@@256))))
 (=> (= (type $generated@@256) ($generated@@236 $generated@@258 $generated@@257)) (or (= $generated@@256 ($generated@@235 $generated@@258 $generated@@257)) (exists (($generated@@259 T@U) ) (!  (and (= (type $generated@@259) $generated@@258) ($generated@@0 ($generated@@84 ($generated@@234 $generated@@256) $generated@@259)))
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
))))))
 :pattern ( ($generated@@234 $generated@@256))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@61)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (and (= (type $generated@@262) ($generated@@79 $generated@@211 $generated@@4)) (= (type $generated@@263) $generated@@61)) (= (type $generated@@264) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@262 ($generated@@260 $generated@@263) $generated@@264) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@211) ($generated@@0 ($generated@@84 $generated@@262 $generated@@265))) ($generated@@209 $generated@@265 $generated@@263 $generated@@264))
 :pattern ( ($generated@@84 $generated@@262 $generated@@265))
))))
 :pattern ( ($generated@@77 $generated@@262 ($generated@@260 $generated@@263) $generated@@264))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@61)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (= (type $generated@@268) ($generated@@79 $generated@@211 $generated@@4)) (= (type $generated@@269) $generated@@61)) (= (type $generated@@270) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@268 ($generated@@266 $generated@@269) $generated@@270) (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@211) ($generated@@0 ($generated@@84 $generated@@268 $generated@@271))) ($generated@@209 $generated@@271 $generated@@269 $generated@@270))
 :pattern ( ($generated@@84 $generated@@268 $generated@@271))
))))
 :pattern ( ($generated@@77 $generated@@268 ($generated@@266 $generated@@269) $generated@@270))
)))
(assert  (and (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (= (type ($generated@@272 $generated@@274 $generated@@275)) $generated@@61)
 :pattern ( ($generated@@272 $generated@@274 $generated@@275))
)) (forall (($generated@@276 T@U) ) (! (let (($generated@@277 ($generated@@220 (type $generated@@276))))
(let (($generated@@278 ($generated@@219 (type $generated@@276))))
(= (type ($generated@@273 $generated@@276)) ($generated@@79 $generated@@278 $generated@@277))))
 :pattern ( ($generated@@273 $generated@@276))
))))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (= (type $generated@@279) ($generated@@218 $generated@@211 $generated@@211)) (= (type $generated@@280) $generated@@61)) (= (type $generated@@281) $generated@@61)) (= (type $generated@@282) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@279 ($generated@@272 $generated@@280 $generated@@281) $generated@@282) (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@211) ($generated@@0 ($generated@@84 ($generated@@216 $generated@@279) $generated@@283))) (and ($generated@@209 ($generated@@84 ($generated@@273 $generated@@279) $generated@@283) $generated@@281 $generated@@282) ($generated@@209 $generated@@283 $generated@@280 $generated@@282)))
 :pattern ( ($generated@@84 ($generated@@273 $generated@@279) $generated@@283))
 :pattern ( ($generated@@84 ($generated@@216 $generated@@279) $generated@@283))
))))
 :pattern ( ($generated@@77 $generated@@279 ($generated@@272 $generated@@280 $generated@@281) $generated@@282))
)))
(assert  (and (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (! (= (type ($generated@@284 $generated@@286 $generated@@287)) $generated@@61)
 :pattern ( ($generated@@284 $generated@@286 $generated@@287))
)) (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@238 (type $generated@@288))))
(let (($generated@@290 ($generated@@237 (type $generated@@288))))
(= (type ($generated@@285 $generated@@288)) ($generated@@79 $generated@@290 $generated@@289))))
 :pattern ( ($generated@@285 $generated@@288))
))))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (= (type $generated@@291) ($generated@@236 $generated@@211 $generated@@211)) (= (type $generated@@292) $generated@@61)) (= (type $generated@@293) $generated@@61)) (= (type $generated@@294) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@291 ($generated@@284 $generated@@292 $generated@@293) $generated@@294) (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@211) ($generated@@0 ($generated@@84 ($generated@@234 $generated@@291) $generated@@295))) (and ($generated@@209 ($generated@@84 ($generated@@285 $generated@@291) $generated@@295) $generated@@293 $generated@@294) ($generated@@209 $generated@@295 $generated@@292 $generated@@294)))
 :pattern ( ($generated@@84 ($generated@@285 $generated@@291) $generated@@295))
 :pattern ( ($generated@@84 ($generated@@234 $generated@@291) $generated@@295))
))))
 :pattern ( ($generated@@77 $generated@@291 ($generated@@284 $generated@@292 $generated@@293) $generated@@294))
)))
(assert (forall (($generated@@297 T@T) ) (! (= (type ($generated@@296 $generated@@297)) ($generated@@79 $generated@@297 $generated@@4))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@238 (type $generated@@298))))
(let (($generated@@300 ($generated@@237 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@236 $generated@@300 $generated@@299)) (= (= $generated@@298 ($generated@@235 $generated@@300 $generated@@299)) (= ($generated@@234 $generated@@298) ($generated@@296 $generated@@300))))))
 :pattern ( ($generated@@234 $generated@@298))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@204 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@203 $generated@@302)) (<= 0 ($generated@@202 $generated@@301))))
 :pattern ( ($generated@@202 $generated@@301))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@61)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@61) (= (type $generated@@306) $generated@@61)) (= ($generated@@303 ($generated@@272 $generated@@305 $generated@@306)) $generated@@305))
 :pattern ( ($generated@@272 $generated@@305 $generated@@306))
)))
(assert (forall (($generated@@308 T@U) ) (! (= (type ($generated@@307 $generated@@308)) $generated@@61)
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@61) (= (type $generated@@310) $generated@@61)) (= ($generated@@307 ($generated@@272 $generated@@309 $generated@@310)) $generated@@310))
 :pattern ( ($generated@@272 $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@61) (= (type $generated@@312) $generated@@61)) (= ($generated@@67 ($generated@@272 $generated@@311 $generated@@312)) $generated@@58))
 :pattern ( ($generated@@272 $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@61)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@61) (= (type $generated@@316) $generated@@61)) (= ($generated@@313 ($generated@@284 $generated@@315 $generated@@316)) $generated@@315))
 :pattern ( ($generated@@284 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@61)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@61) (= (type $generated@@320) $generated@@61)) (= ($generated@@317 ($generated@@284 $generated@@319 $generated@@320)) $generated@@320))
 :pattern ( ($generated@@284 $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ) (!  (=> (and (= (type $generated@@321) $generated@@61) (= (type $generated@@322) $generated@@61)) (= ($generated@@67 ($generated@@284 $generated@@321 $generated@@322)) $generated@@59))
 :pattern ( ($generated@@284 $generated@@321 $generated@@322))
)))
(assert  (and (forall (($generated@@325 T@U) ) (! (= (type ($generated@@323 $generated@@325)) $generated@@72)
 :pattern ( ($generated@@323 $generated@@325))
)) (= (type $generated@@324) $generated@@72)))
(assert (forall (($generated@@326 T@U) ($generated@@327 Int) ) (!  (=> (= (type $generated@@326) $generated@@72) (= ($generated@@70 $generated@@326 $generated@@327) ($generated@@70 $generated@@324 $generated@@327)))
 :pattern ( ($generated@@70 ($generated@@323 $generated@@326) $generated@@327))
)))
(assert  (and (forall (($generated@@330 T@U) ) (! (= (type ($generated@@328 $generated@@330)) $generated@@61)
 :pattern ( ($generated@@328 $generated@@330))
)) (forall (($generated@@331 T@U) ($generated@@332 Int) ) (! (let (($generated@@333 ($generated@@204 (type $generated@@331))))
(= (type ($generated@@329 $generated@@331 $generated@@332)) $generated@@333))
 :pattern ( ($generated@@329 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ) (!  (=> (and (and (= (type $generated@@334) ($generated@@203 $generated@@211)) (= (type $generated@@335) $generated@@61)) (= (type $generated@@336) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@334 ($generated@@328 $generated@@335) $generated@@336) (forall (($generated@@337 Int) ) (!  (=> (and (<= 0 $generated@@337) (< $generated@@337 ($generated@@202 $generated@@334))) ($generated@@209 ($generated@@329 $generated@@334 $generated@@337) $generated@@335 $generated@@336))
 :pattern ( ($generated@@329 $generated@@334 $generated@@337))
))))
 :pattern ( ($generated@@77 $generated@@334 ($generated@@328 $generated@@335) $generated@@336))
)))
(assert (forall (($generated@@339 Int) ) (! (= ($generated@@338 ($generated@@78 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@78 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (= (type ($generated@@340 $generated@@341)) $generated@@61)
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@61) (= ($generated@@340 ($generated@@260 $generated@@342)) $generated@@342))
 :pattern ( ($generated@@260 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@61) (= ($generated@@67 ($generated@@260 $generated@@343)) $generated@@54))
 :pattern ( ($generated@@260 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (= (type ($generated@@344 $generated@@345)) $generated@@61)
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@61) (= ($generated@@344 ($generated@@266 $generated@@346)) $generated@@346))
 :pattern ( ($generated@@266 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@61) (= ($generated@@67 ($generated@@266 $generated@@347)) $generated@@55))
 :pattern ( ($generated@@266 $generated@@347))
)))
(assert  (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@350)) $generated@@61)
 :pattern ( ($generated@@348 $generated@@350))
)) (forall (($generated@@351 T@U) ) (! (= (type ($generated@@349 $generated@@351)) $generated@@61)
 :pattern ( ($generated@@349 $generated@@351))
))))
(assert (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@61) (= ($generated@@349 ($generated@@348 $generated@@352)) $generated@@352))
 :pattern ( ($generated@@348 $generated@@352))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@61) (= ($generated@@67 ($generated@@348 $generated@@353)) $generated@@56))
 :pattern ( ($generated@@348 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (= (type ($generated@@354 $generated@@355)) $generated@@61)
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@61) (= ($generated@@354 ($generated@@328 $generated@@356)) $generated@@356))
 :pattern ( ($generated@@328 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (= (type $generated@@357) $generated@@61) (= ($generated@@67 ($generated@@328 $generated@@357)) $generated@@57))
 :pattern ( ($generated@@328 $generated@@357))
)))
(assert (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@358 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@358 $generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(= ($generated@@358 $generated@@362 ($generated@@210 $generated@@361)) $generated@@361))
 :pattern ( ($generated@@210 $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 Int) ) (!  (=> (= (type $generated@@363) $generated@@72) (= ($generated@@70 ($generated@@71 $generated@@363) $generated@@364) ($generated@@70 $generated@@363 $generated@@364)))
 :pattern ( ($generated@@70 ($generated@@71 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
 (not ($generated@@0 ($generated@@84 ($generated@@296 $generated@@366) $generated@@365))))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@84 ($generated@@296 $generated@@366) $generated@@365)))
)))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (and (= (type $generated@@367) ($generated@@79 $generated@@211 $generated@@2)) (= (type $generated@@368) $generated@@61)) (= (type $generated@@369) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@367 ($generated@@348 $generated@@368) $generated@@369) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@211) (< 0 ($generated ($generated@@84 $generated@@367 $generated@@370)))) ($generated@@209 $generated@@370 $generated@@368 $generated@@369))
 :pattern ( ($generated@@84 $generated@@367 $generated@@370))
))))
 :pattern ( ($generated@@77 $generated@@367 ($generated@@348 $generated@@368) $generated@@369))
)))
(assert (forall (($generated@@371 Int) ) (! (= ($generated@@210 ($generated@@8 ($generated@@191 $generated@@371))) ($generated@@195 ($generated@@210 ($generated@@8 $generated@@371))))
 :pattern ( ($generated@@210 ($generated@@8 ($generated@@191 $generated@@371))))
)))
(assert (forall (($generated@@372 T@U) ) (! (= ($generated@@210 ($generated@@195 $generated@@372)) ($generated@@195 ($generated@@210 $generated@@372)))
 :pattern ( ($generated@@210 ($generated@@195 $generated@@372)))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@204 (type $generated@@373))))
 (=> (and (= (type $generated@@373) ($generated@@203 $generated@@374)) (= ($generated@@202 $generated@@373) 0)) (= $generated@@373 ($generated@@201 $generated@@374))))
 :pattern ( ($generated@@202 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@376) $generated@@2)) ($generated@@77 $generated@@376 $generated@@46 $generated@@375))
 :pattern ( ($generated@@77 $generated@@376 $generated@@46 $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@378) $generated@@3)) ($generated@@77 $generated@@378 $generated@@47 $generated@@377))
 :pattern ( ($generated@@77 $generated@@378 $generated@@47 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@380) $generated@@4)) ($generated@@77 $generated@@380 $generated@@44 $generated@@379))
 :pattern ( ($generated@@77 $generated@@380 $generated@@44 $generated@@379))
)))
(assert (= ($generated@@1 $generated@@381) 18))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@383) $generated@@381)) ($generated@@77 $generated@@383 $generated@@45 $generated@@382))
 :pattern ( ($generated@@77 $generated@@383 $generated@@45 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@385) $generated@@211)) ($generated@@77 $generated@@385 $generated@@48 $generated@@384))
 :pattern ( ($generated@@77 $generated@@385 $generated@@48 $generated@@384))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@386 (T@U) Bool)
(declare-fun $generated@@387 () T@U)
(declare-fun $generated@@388 (T@U) Bool)
(declare-fun $generated@@389 () T@U)
(declare-fun $generated@@390 () T@U)
(declare-fun $generated@@391 () T@U)
(declare-fun $generated@@392 () T@U)
(declare-fun $generated@@393 () Int)
(declare-fun $generated@@394 () Int)
(declare-fun $generated@@395 () T@U)
(declare-fun $generated@@396 () T@U)
(declare-fun $generated@@397 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@392) $generated@@72) (= (type $generated@@389) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@390) $generated@@72)) (= (type $generated@@395) $generated@@72)) (= (type $generated@@387) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@391) $generated@@72)) (= (type $generated@@396) ($generated@@137 $generated@@80 $generated@@4))) (= (type $generated@@397) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@398  (=> (and (and (and ($generated@@386 $generated@@387) ($generated@@388 $generated@@387)) (= $generated@@389 $generated@@387)) (and (and (= $generated@@390 ($generated@@71 $generated@@391)) (= $generated@@392 ($generated@@71 ($generated@@71 $generated@@391)))) (and (= ($generated@@323 $generated@@391) $generated@@391) (= (ControlFlow 0 9) (- 0 8))))) (= ($generated@@70 $generated@@392 $generated@@393) $generated@@393))))
(let (($generated@@399 true))
(let (($generated@@400  (and (=> (= (ControlFlow 0 10) 7) $generated@@399) (=> (= (ControlFlow 0 10) 9) $generated@@398))))
(let (($generated@@401  (=> (= (ControlFlow 0 3) (- 0 2)) (forall (($generated@@402 Int) ) (!  (=> true (= ($generated@@70 $generated@@392 $generated@@402) $generated@@402))
 :pattern ( ($generated@@70 $generated@@392 $generated@@402))
)))))
(let (($generated@@403  (=> ($generated@@77 ($generated@@8 $generated@@394) $generated@@46 $generated@@389) (=> (and ($generated@@73 $generated@@394) (forall (($generated@@404 Int) ) (! ($generated@@73 $generated@@404)
 :pattern ( ($generated@@70 $generated@@390 $generated@@404))
))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (forall (($generated@@405 Int) ) (!  (=> true (= ($generated@@70 $generated@@392 $generated@@405) $generated@@405))
 :pattern ( ($generated@@70 $generated@@392 $generated@@405))
))) (=> (and (forall (($generated@@406 Int) ) (!  (=> true (= ($generated@@70 $generated@@390 $generated@@406) $generated@@406))
 :pattern ( ($generated@@70 $generated@@390 $generated@@406))
)) (= (ControlFlow 0 4) 3)) $generated@@401))))))
(let (($generated@@407 true))
(let (($generated@@408  (=> (and (and (and (= $generated@@390 ($generated@@71 $generated@@395)) (= $generated@@392 ($generated@@71 ($generated@@71 $generated@@395)))) (= ($generated@@323 $generated@@395) $generated@@395)) (forall (($generated@@409 Int) ) (!  (=> ($generated@@0 ($generated@@195 ($generated@@11 true))) (= ($generated@@70 $generated@@390 $generated@@409) $generated@@409))
 :pattern ( ($generated@@70 $generated@@390 $generated@@409))
))) (and (=> (= (ControlFlow 0 6) 4) $generated@@403) (=> (= (ControlFlow 0 6) 1) $generated@@407)))))
(let (($generated@@410  (=> (= ($generated@@323 $generated@@390) $generated@@390) (=> (and (= ($generated@@323 $generated@@392) $generated@@392) (= $generated@@396 ($generated@@136 $generated@@397 $generated@@389 $generated@@60 false))) (and (=> (= (ControlFlow 0 11) 10) $generated@@400) (=> (= (ControlFlow 0 11) 6) $generated@@408))))))
(let (($generated@@411  (=> (and (and ($generated@@386 $generated@@389) ($generated@@388 $generated@@389)) (and (= 1 $generated@@69) (= (ControlFlow 0 12) 11))) $generated@@410)))
$generated@@411))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
