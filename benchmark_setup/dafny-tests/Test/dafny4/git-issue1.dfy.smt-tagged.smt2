(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 () Int)
(declare-fun $generated@@76 (T@U) Int)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@82 (T@U) Int)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) Bool)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (Int) Int)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@264 (T@U T@U T@U) Bool)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@287 (Int) T@U)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@297 (T@U) Int)
(declare-fun $generated@@298 (T@T) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@322 (T@T T@T) T@U)
(declare-fun $generated@@323 (T@T T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@342 (T@T T@U) T@U)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@U T@U) T@U)
(declare-fun $generated@@425 (T@T) T@U)
(declare-fun $generated@@449 () T@T)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@492 (T@U Int) T@U)
(declare-fun $generated@@501 (T@U) Int)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@531 (T@U) Int)
(declare-fun $generated@@532 (T@U) Int)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@602 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert  (and (= ($generated@@1 $generated@@77) 11) (= (type $generated@@80) $generated@@67)))
(assert  (=> (<= 1 $generated@@75) (forall (($generated@@83 T@U) ) (!  (=> (and (= (type $generated@@83) $generated@@77) (or ($generated@@78 $generated@@83) (and (not (= 1 $generated@@75)) ($generated@@79 $generated@@83 $generated@@80)))) (and ($generated@@81 $generated@@83) (= ($generated@@76 $generated@@83) ($generated@@82 $generated@@83))))
 :pattern ( ($generated@@76 $generated@@83))
))))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@68)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@44) $generated@@49))
(assert (= ($generated@@84 $generated@@45) $generated@@50))
(assert (= ($generated@@84 $generated@@46) $generated@@51))
(assert (= ($generated@@84 $generated@@47) $generated@@52))
(assert (= ($generated@@84 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 12)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@70 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 14)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@70 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@79 $generated@@144 ($generated@@87 0)))
 :pattern ( ($generated@@79 $generated@@144 ($generated@@87 0)))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@146 $generated@@147 $generated@@148)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@67)) (= (type $generated@@151) $generated@@77)) ($generated@@79 $generated@@151 ($generated@@146 $generated@@149 $generated@@150))) ($generated@@145 $generated@@151))
 :pattern ( ($generated@@145 $generated@@151) ($generated@@79 $generated@@151 ($generated@@146 $generated@@149 $generated@@150)))
)))
(assert  (and (and (= ($generated@@1 $generated@@155) 15) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@153 $generated@@156))
))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@155)
 :pattern ( ($generated@@154 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@77) (= (type $generated@@159) $generated@@77)) true) (= ($generated@@152 $generated@@158 $generated@@159)  (and (= ($generated@@153 $generated@@158) ($generated@@153 $generated@@159)) (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)))))
 :pattern ( ($generated@@152 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@67)
 :pattern ( ($generated@@160 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@88 $generated@@155 $generated@@2)) (= (type $generated@@164) $generated@@67)) ($generated@@79 $generated@@163 ($generated@@160 $generated@@164))) ($generated@@161 $generated@@163))
 :pattern ( ($generated@@79 $generated@@163 ($generated@@160 $generated@@164)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@89 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@70 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@89) (= (type $generated@@215) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@216) ($generated@@69 $generated@@4))) (= (type $generated@@218) $generated@@89)) (= (type $generated@@219) ($generated@@69 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@167 $generated@@89 $generated@@4))
 :pattern ( ($generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@70 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@89) (= (type $generated@@227) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@228) ($generated@@69 $generated@@4))) (= (type $generated@@230) $generated@@89)) (= (type $generated@@231) ($generated@@69 $generated@@232))) (= ($generated@@0 ($generated@@165 ($generated@@221 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@165 ($generated@@221 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@77) ($generated@@79 $generated@@233 $generated@@80)) ($generated@@81 $generated@@233))
 :pattern ( ($generated@@81 $generated@@233) ($generated@@79 $generated@@233 $generated@@80))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) $generated@@77)
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (= (type $generated@@238) $generated@@67) (= (type $generated@@239) $generated@@67)) (= (type $generated@@240) $generated@@155)) (= (type $generated@@241) $generated@@155)) (= ($generated@@79 ($generated@@234 $generated@@240 $generated@@241) ($generated@@146 $generated@@238 $generated@@239))  (and ($generated@@235 $generated@@240 $generated@@238) ($generated@@235 $generated@@241 $generated@@239))))
 :pattern ( ($generated@@79 ($generated@@234 $generated@@240 $generated@@241) ($generated@@146 $generated@@238 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@77) (= (type $generated@@243) $generated@@77)) (= ($generated@@152 $generated@@242 $generated@@243) (= $generated@@242 $generated@@243)))
 :pattern ( ($generated@@152 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@77) (= (type $generated@@246) $generated@@77)) (= ($generated@@244 $generated@@245 $generated@@246) (= $generated@@245 $generated@@246)))
 :pattern ( ($generated@@244 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= (type ($generated@@247 $generated@@248)) $generated@@67)
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@88 $generated@@155 $generated@@4)) (= (type $generated@@250) $generated@@67)) (= ($generated@@79 $generated@@249 ($generated@@247 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@155) ($generated@@0 ($generated@@93 $generated@@249 $generated@@251))) ($generated@@235 $generated@@251 $generated@@250))
 :pattern ( ($generated@@93 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@79 $generated@@249 ($generated@@247 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@67)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@88 $generated@@155 $generated@@4)) (= (type $generated@@255) $generated@@67)) (= ($generated@@79 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@155) ($generated@@0 ($generated@@93 $generated@@254 $generated@@256))) ($generated@@235 $generated@@256 $generated@@255))
 :pattern ( ($generated@@93 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@79 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 Int) ) (! (= ($generated@@257 $generated@@258) $generated@@258)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (let (($generated@@261 (type $generated@@260)))
(= (type ($generated@@259 $generated@@260)) $generated@@261))
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= ($generated@@259 $generated@@262) $generated@@262)
 :pattern ( ($generated@@259 $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@265) $generated@@67) (= (type $generated@@266) $generated@@67)) (= (type $generated@@267) $generated@@155)) (= (type $generated@@268) $generated@@155)) (= (type $generated@@269) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@263 $generated@@269)) (= ($generated@@86 ($generated@@234 $generated@@267 $generated@@268) ($generated@@146 $generated@@265 $generated@@266) $generated@@269)  (and ($generated@@264 $generated@@267 $generated@@265 $generated@@269) ($generated@@264 $generated@@268 $generated@@266 $generated@@269))))
 :pattern ( ($generated@@86 ($generated@@234 $generated@@267 $generated@@268) ($generated@@146 $generated@@265 $generated@@266) $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@71)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (!  (=> (= (type $generated@@272) $generated@@77) (= ($generated@@145 $generated@@272) (= ($generated@@270 $generated@@272) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@77) (= ($generated@@81 $generated@@273) (= ($generated@@270 $generated@@273) $generated@@63)))
 :pattern ( ($generated@@81 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@77) ($generated@@145 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@155) (= (type $generated@@276) $generated@@155)) (= $generated@@274 ($generated@@234 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@145 $generated@@274))
)))
(assert  (and (and (forall (($generated@@281 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@281)) 17)) (forall (($generated@@282 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
))) (forall (($generated@@283 T@T) ) (! (= (type ($generated@@277 $generated@@283)) ($generated@@279 $generated@@283))
 :pattern ( ($generated@@277 $generated@@283))
))))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@284)) 0)
 :pattern ( ($generated@@277 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (= (type $generated@@285) $generated@@77) (= (type $generated@@286) $generated@@77)) true) (= ($generated@@244 $generated@@285 $generated@@286) (= ($generated@@82 $generated@@285) ($generated@@82 $generated@@286))))
 :pattern ( ($generated@@244 $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@288 Int) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@77)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@77) ($generated@@81 $generated@@289)) (exists (($generated@@290 Int) ) (= $generated@@289 ($generated@@287 $generated@@290))))
 :pattern ( ($generated@@81 $generated@@289))
)))
(assert  (=> (<= 1 $generated@@75) (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@77) (or ($generated@@78 ($generated@@259 $generated@@291)) (and (not (= 1 $generated@@75)) ($generated@@79 $generated@@291 $generated@@80)))) (and ($generated@@81 ($generated@@259 $generated@@291)) (= ($generated@@76 ($generated@@259 $generated@@291)) ($generated@@257 ($generated@@82 ($generated@@259 $generated@@291))))))
 :weight 3
 :pattern ( ($generated@@76 ($generated@@259 $generated@@291)))
))))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@155)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@67) (= (type $generated@@296) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@264 ($generated@@292 $generated@@294) $generated@@295 $generated@@296) ($generated@@86 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@264 ($generated@@292 $generated@@294) $generated@@295 $generated@@296))
)))
(assert (forall (($generated@@299 T@T) ) (! (= (type ($generated@@298 $generated@@299)) ($generated@@88 $generated@@299 $generated@@2))
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@91 (type $generated@@300))))
 (=> (= (type $generated@@300) ($generated@@88 $generated@@301 $generated@@2)) (and (= (= ($generated@@297 $generated@@300) 0) (= $generated@@300 ($generated@@298 $generated@@301))) (=> (not (= ($generated@@297 $generated@@300) 0)) (exists (($generated@@302 T@U) ) (!  (and (= (type $generated@@302) $generated@@301) (< 0 ($generated ($generated@@93 $generated@@300 $generated@@302))))
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
))))))
 :pattern ( ($generated@@297 $generated@@300))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 18)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@88 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@93 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@93 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert  (and (and (and (and (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@326 $generated@@327)) 19)) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@328 $generated@@329)) $generated@@328)
 :pattern ( ($generated@@323 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= ($generated@@325 ($generated@@323 $generated@@330 $generated@@331)) $generated@@331)
 :pattern ( ($generated@@323 $generated@@330 $generated@@331))
))) (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@324 (type $generated@@332))))
(= (type ($generated@@321 $generated@@332)) ($generated@@88 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@321 $generated@@332))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@322 $generated@@334 $generated@@335)) ($generated@@323 $generated@@334 $generated@@335))
 :pattern ( ($generated@@322 $generated@@334 $generated@@335))
))))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@93 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@93 ($generated@@321 ($generated@@322 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@91 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@88 $generated@@340 $generated@@2)) (= ($generated@@161 $generated@@339) (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@340) (and (<= 0 ($generated ($generated@@93 $generated@@339 $generated@@341))) (<= ($generated ($generated@@93 $generated@@339 $generated@@341)) ($generated@@297 $generated@@339))))
 :pattern ( ($generated@@93 $generated@@339 $generated@@341))
)))))
 :pattern ( ($generated@@161 $generated@@339))
)))
(assert (forall (($generated@@343 T@T) ($generated@@344 T@U) ) (! (= (type ($generated@@342 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@342 $generated@@343 $generated@@344))
)))
(assert (forall (($generated@@345 T@U) ) (!  (=> (and (= (type $generated@@345) $generated@@155) ($generated@@235 $generated@@345 $generated@@80)) (and (= ($generated@@292 ($generated@@342 $generated@@77 $generated@@345)) $generated@@345) ($generated@@79 ($generated@@342 $generated@@77 $generated@@345) $generated@@80)))
 :pattern ( ($generated@@235 $generated@@345 $generated@@80))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@307 (type $generated@@346))))
(let (($generated@@348 ($generated@@306 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@305 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@304 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@93 ($generated@@303 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@303 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@307 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@88 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@307 (type $generated@@353))))
(let (($generated@@355 ($generated@@306 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@305 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@304 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@93 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@325 (type $generated@@357))))
(let (($generated@@359 ($generated@@324 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@323 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@322 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@93 ($generated@@321 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@321 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@325 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@88 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@325 (type $generated@@364))))
(let (($generated@@366 ($generated@@324 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@323 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@322 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@93 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@88 $generated@@155 $generated@@2)) (= (type $generated@@369) $generated@@67)) (= ($generated@@79 $generated@@368 ($generated@@160 $generated@@369)) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@155) (< 0 ($generated ($generated@@93 $generated@@368 $generated@@370)))) ($generated@@235 $generated@@370 $generated@@369))
 :pattern ( ($generated@@93 $generated@@368 $generated@@370))
))))
 :pattern ( ($generated@@79 $generated@@368 ($generated@@160 $generated@@369)))
)))
(assert (forall (($generated@@371 Int) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@88 $generated@@89 $generated@@90)) ($generated@@263 $generated@@372)) (= ($generated@@86 ($generated@@287 $generated@@371) $generated@@80 $generated@@372) ($generated@@86 ($generated@@8 $generated@@371) $generated@@46 $generated@@372)))
 :pattern ( ($generated@@86 ($generated@@287 $generated@@371) $generated@@80 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@88 $generated@@155 $generated@@4)) (= (type $generated@@374) $generated@@67)) (= (type $generated@@375) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@373 ($generated@@247 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@155) ($generated@@0 ($generated@@93 $generated@@373 $generated@@376))) ($generated@@264 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@93 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@86 $generated@@373 ($generated@@247 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@88 $generated@@155 $generated@@4)) (= (type $generated@@378) $generated@@67)) (= (type $generated@@379) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@377 ($generated@@252 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@155) ($generated@@0 ($generated@@93 $generated@@377 $generated@@380))) ($generated@@264 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@93 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@86 $generated@@377 ($generated@@252 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@93 ($generated@@298 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@93 ($generated@@298 $generated@@382) $generated@@381)))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@88 $generated@@155 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@307 (type $generated@@386))))
(let (($generated@@388 ($generated@@306 (type $generated@@386))))
(= (type ($generated@@384 $generated@@386)) ($generated@@88 $generated@@388 $generated@@387))))
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@305 $generated@@155 $generated@@155)) (= (type $generated@@390) $generated@@155)) (= ($generated@@0 ($generated@@93 ($generated@@383 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@93 ($generated@@303 $generated@@389) ($generated@@153 ($generated@@342 $generated@@77 $generated@@390)))) (= ($generated@@93 ($generated@@384 $generated@@389) ($generated@@153 ($generated@@342 $generated@@77 $generated@@390))) ($generated@@154 ($generated@@342 $generated@@77 $generated@@390))))))
 :pattern ( ($generated@@93 ($generated@@383 $generated@@389) $generated@@390))
)))
(assert  (and (forall (($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@393)) ($generated@@88 $generated@@155 $generated@@4))
 :pattern ( ($generated@@391 $generated@@393))
)) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@325 (type $generated@@394))))
(let (($generated@@396 ($generated@@324 (type $generated@@394))))
(= (type ($generated@@392 $generated@@394)) ($generated@@88 $generated@@396 $generated@@395))))
 :pattern ( ($generated@@392 $generated@@394))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@323 $generated@@155 $generated@@155)) (= (type $generated@@398) $generated@@155)) (= ($generated@@0 ($generated@@93 ($generated@@391 $generated@@397) $generated@@398))  (and ($generated@@0 ($generated@@93 ($generated@@321 $generated@@397) ($generated@@153 ($generated@@342 $generated@@77 $generated@@398)))) (= ($generated@@93 ($generated@@392 $generated@@397) ($generated@@153 ($generated@@342 $generated@@77 $generated@@398))) ($generated@@154 ($generated@@342 $generated@@77 $generated@@398))))))
 :pattern ( ($generated@@93 ($generated@@391 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@306 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@305 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@93 ($generated@@350 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@93 ($generated@@303 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@93 ($generated@@384 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@93 ($generated@@303 $generated@@399) $generated@@403))
 :pattern ( ($generated@@93 ($generated@@384 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@93 ($generated@@350 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@324 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@323 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@93 ($generated@@361 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@93 ($generated@@321 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@93 ($generated@@392 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@93 ($generated@@321 $generated@@404) $generated@@408))
 :pattern ( ($generated@@93 ($generated@@392 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@93 ($generated@@361 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@67)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@305 $generated@@155 $generated@@155)) (= (type $generated@@413) $generated@@67)) (= (type $generated@@414) $generated@@67)) (= (type $generated@@415) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@155) ($generated@@0 ($generated@@93 ($generated@@303 $generated@@412) $generated@@416))) (and ($generated@@264 ($generated@@93 ($generated@@384 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@264 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@93 ($generated@@384 $generated@@412) $generated@@416))
 :pattern ( ($generated@@93 ($generated@@303 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@86 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@67)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) ($generated@@323 $generated@@155 $generated@@155)) (= (type $generated@@421) $generated@@67)) (= (type $generated@@422) $generated@@67)) (= (type $generated@@423) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@155) ($generated@@0 ($generated@@93 ($generated@@321 $generated@@420) $generated@@424))) (and ($generated@@264 ($generated@@93 ($generated@@392 $generated@@420) $generated@@424) $generated@@422 $generated@@423) ($generated@@264 $generated@@424 $generated@@421 $generated@@423)))
 :pattern ( ($generated@@93 ($generated@@392 $generated@@420) $generated@@424))
 :pattern ( ($generated@@93 ($generated@@321 $generated@@420) $generated@@424))
))))
 :pattern ( ($generated@@86 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@426 T@T) ) (! (= (type ($generated@@425 $generated@@426)) ($generated@@88 $generated@@426 $generated@@4))
 :pattern ( ($generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@325 (type $generated@@427))))
(let (($generated@@429 ($generated@@324 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@323 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@322 $generated@@429 $generated@@428)) (= ($generated@@321 $generated@@427) ($generated@@425 $generated@@429))))))
 :pattern ( ($generated@@321 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@325 (type $generated@@430))))
(let (($generated@@432 ($generated@@324 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@323 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@322 $generated@@432 $generated@@431)) (= ($generated@@361 $generated@@430) ($generated@@425 $generated@@431))))))
 :pattern ( ($generated@@361 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@325 (type $generated@@433))))
(let (($generated@@435 ($generated@@324 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@323 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@322 $generated@@435 $generated@@434)) (= ($generated@@391 $generated@@433) ($generated@@425 $generated@@155))))))
 :pattern ( ($generated@@391 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@307 (type $generated@@436))))
(let (($generated@@438 ($generated@@306 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@305 $generated@@438 $generated@@437)) (or (= $generated@@436 ($generated@@304 $generated@@438 $generated@@437)) (exists (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (and (and (= (type $generated@@439) $generated@@155) (= (type $generated@@440) $generated@@155)) ($generated@@0 ($generated@@93 ($generated@@383 $generated@@436) ($generated@@292 ($generated@@234 $generated@@439 $generated@@440)))))
 :no-pattern (type $generated@@439)
 :no-pattern (type $generated@@440)
 :no-pattern ($generated $generated@@439)
 :no-pattern ($generated@@0 $generated@@439)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
))))))
 :pattern ( ($generated@@383 $generated@@436))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@325 (type $generated@@441))))
(let (($generated@@443 ($generated@@324 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@323 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@322 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@155) (= (type $generated@@445) $generated@@155)) ($generated@@0 ($generated@@93 ($generated@@391 $generated@@441) ($generated@@292 ($generated@@234 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@391 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@155) ($generated@@235 $generated@@446 $generated@@46)) (and (= ($generated@@292 ($generated@@342 $generated@@2 $generated@@446)) $generated@@446) ($generated@@79 ($generated@@342 $generated@@2 $generated@@446) $generated@@46)))
 :pattern ( ($generated@@235 $generated@@446 $generated@@46))
)))
(assert (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@155) ($generated@@235 $generated@@447 $generated@@47)) (and (= ($generated@@292 ($generated@@342 $generated@@3 $generated@@447)) $generated@@447) ($generated@@79 ($generated@@342 $generated@@3 $generated@@447) $generated@@47)))
 :pattern ( ($generated@@235 $generated@@447 $generated@@47))
)))
(assert (forall (($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@155) ($generated@@235 $generated@@448 $generated@@44)) (and (= ($generated@@292 ($generated@@342 $generated@@4 $generated@@448)) $generated@@448) ($generated@@79 ($generated@@342 $generated@@4 $generated@@448) $generated@@44)))
 :pattern ( ($generated@@235 $generated@@448 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@449) 20))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@155) ($generated@@235 $generated@@450 $generated@@45)) (and (= ($generated@@292 ($generated@@342 $generated@@449 $generated@@450)) $generated@@450) ($generated@@79 ($generated@@342 $generated@@449 $generated@@450) $generated@@45)))
 :pattern ( ($generated@@235 $generated@@450 $generated@@45))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (= (type $generated@@452) $generated@@67) (= ($generated@@235 ($generated@@292 $generated@@451) $generated@@452) ($generated@@79 $generated@@451 $generated@@452)))
 :pattern ( ($generated@@235 ($generated@@292 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@91 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@88 $generated@@454 $generated@@2)) (<= 0 ($generated@@297 $generated@@453))))
 :pattern ( ($generated@@297 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@280 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@279 $generated@@456)) (<= 0 ($generated@@278 $generated@@455))))
 :pattern ( ($generated@@278 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@67)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@67) (= (type $generated@@460) $generated@@67)) (= ($generated@@457 ($generated@@409 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@409 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@67)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@67) (= (type $generated@@464) $generated@@67)) (= ($generated@@461 ($generated@@409 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@409 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@67) (= (type $generated@@466) $generated@@67)) (= ($generated@@84 ($generated@@409 $generated@@465 $generated@@466)) $generated@@58))
 :pattern ( ($generated@@409 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@67)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@67) (= (type $generated@@470) $generated@@67)) (= ($generated@@467 ($generated@@417 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@417 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@67) (= (type $generated@@474) $generated@@67)) (= ($generated@@471 ($generated@@417 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@417 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@67) (= (type $generated@@476) $generated@@67)) (= ($generated@@84 ($generated@@417 $generated@@475 $generated@@476)) $generated@@59))
 :pattern ( ($generated@@417 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@155) (= (type $generated@@478) $generated@@155)) (= ($generated@@270 ($generated@@234 $generated@@477 $generated@@478)) $generated@@61))
 :pattern ( ($generated@@234 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@67)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@67) (= (type $generated@@482) $generated@@67)) (= ($generated@@479 ($generated@@146 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@146 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@67) (= (type $generated@@486) $generated@@67)) (= ($generated@@483 ($generated@@146 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@146 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@155) (= (type $generated@@488) $generated@@155)) (= ($generated@@153 ($generated@@234 $generated@@487 $generated@@488)) $generated@@487))
 :pattern ( ($generated@@234 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@155) (= (type $generated@@490) $generated@@155)) (= ($generated@@154 ($generated@@234 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@234 $generated@@489 $generated@@490))
)))
(assert  (and (forall (($generated@@493 T@U) ) (! (= (type ($generated@@491 $generated@@493)) $generated@@67)
 :pattern ( ($generated@@491 $generated@@493))
)) (forall (($generated@@494 T@U) ($generated@@495 Int) ) (! (let (($generated@@496 ($generated@@280 (type $generated@@494))))
(= (type ($generated@@492 $generated@@494 $generated@@495)) $generated@@496))
 :pattern ( ($generated@@492 $generated@@494 $generated@@495))
))))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (= (type $generated@@497) ($generated@@279 $generated@@155)) (= (type $generated@@498) $generated@@67)) (= (type $generated@@499) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@497 ($generated@@491 $generated@@498) $generated@@499) (forall (($generated@@500 Int) ) (!  (=> (and (<= 0 $generated@@500) (< $generated@@500 ($generated@@278 $generated@@497))) ($generated@@264 ($generated@@492 $generated@@497 $generated@@500) $generated@@498 $generated@@499))
 :pattern ( ($generated@@492 $generated@@497 $generated@@500))
))))
 :pattern ( ($generated@@86 $generated@@497 ($generated@@491 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@502 Int) ) (! (= ($generated@@501 ($generated@@87 $generated@@502)) $generated@@502)
 :pattern ( ($generated@@87 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@67)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@67) (= ($generated@@503 ($generated@@247 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@247 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@67) (= ($generated@@84 ($generated@@247 $generated@@506)) $generated@@54))
 :pattern ( ($generated@@247 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@67) (= ($generated@@507 ($generated@@252 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@252 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@67) (= ($generated@@84 ($generated@@252 $generated@@510)) $generated@@55))
 :pattern ( ($generated@@252 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@67)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@67) (= ($generated@@511 ($generated@@160 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@160 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@67) (= ($generated@@84 ($generated@@160 $generated@@514)) $generated@@56))
 :pattern ( ($generated@@160 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@67)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@67) (= ($generated@@515 ($generated@@491 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@491 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@67) (= ($generated@@84 ($generated@@491 $generated@@518)) $generated@@57))
 :pattern ( ($generated@@491 $generated@@518))
)))
(assert (forall (($generated@@519 Int) ) (! (= ($generated@@270 ($generated@@287 $generated@@519)) $generated@@63)
 :pattern ( ($generated@@287 $generated@@519))
)))
(assert (forall (($generated@@520 Int) ) (! (= ($generated@@82 ($generated@@287 $generated@@520)) $generated@@520)
 :pattern ( ($generated@@287 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 (type $generated@@521)))
(= ($generated@@342 $generated@@522 ($generated@@292 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@292 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@305 $generated@@155 $generated@@155)) (= (type $generated@@524) $generated@@67)) (= (type $generated@@525) $generated@@67)) (= ($generated@@79 $generated@@523 ($generated@@409 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@155) ($generated@@0 ($generated@@93 ($generated@@303 $generated@@523) $generated@@526))) (and ($generated@@235 ($generated@@93 ($generated@@384 $generated@@523) $generated@@526) $generated@@525) ($generated@@235 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@93 ($generated@@384 $generated@@523) $generated@@526))
 :pattern ( ($generated@@93 ($generated@@303 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@79 $generated@@523 ($generated@@409 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (= (type $generated@@527) ($generated@@323 $generated@@155 $generated@@155)) (= (type $generated@@528) $generated@@67)) (= (type $generated@@529) $generated@@67)) (= ($generated@@79 $generated@@527 ($generated@@417 $generated@@528 $generated@@529)) (forall (($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@155) ($generated@@0 ($generated@@93 ($generated@@321 $generated@@527) $generated@@530))) (and ($generated@@235 ($generated@@93 ($generated@@392 $generated@@527) $generated@@530) $generated@@529) ($generated@@235 $generated@@530 $generated@@528)))
 :pattern ( ($generated@@93 ($generated@@392 $generated@@527) $generated@@530))
 :pattern ( ($generated@@93 ($generated@@321 $generated@@527) $generated@@530))
))))
 :pattern ( ($generated@@79 $generated@@527 ($generated@@417 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@155) (= (type $generated@@534) $generated@@155)) (< ($generated@@531 $generated@@533) ($generated@@532 ($generated@@234 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@234 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@155) (= (type $generated@@536) $generated@@155)) (< ($generated@@531 $generated@@536) ($generated@@532 ($generated@@234 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@234 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@79 ($generated@@287 $generated@@537) $generated@@80) ($generated@@79 ($generated@@8 $generated@@537) $generated@@46))
 :pattern ( ($generated@@79 ($generated@@287 $generated@@537) $generated@@80))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (and (= (type $generated@@538) $generated@@155) (= (type $generated@@539) $generated@@67)) (= (type $generated@@540) $generated@@67)) ($generated@@235 $generated@@538 ($generated@@409 $generated@@539 $generated@@540))) (and (= ($generated@@292 ($generated@@342 ($generated@@305 $generated@@155 $generated@@155) $generated@@538)) $generated@@538) ($generated@@79 ($generated@@342 ($generated@@305 $generated@@155 $generated@@155) $generated@@538) ($generated@@409 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@235 $generated@@538 ($generated@@409 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@155) (= (type $generated@@542) $generated@@67)) (= (type $generated@@543) $generated@@67)) ($generated@@235 $generated@@541 ($generated@@417 $generated@@542 $generated@@543))) (and (= ($generated@@292 ($generated@@342 ($generated@@323 $generated@@155 $generated@@155) $generated@@541)) $generated@@541) ($generated@@79 ($generated@@342 ($generated@@323 $generated@@155 $generated@@155) $generated@@541) ($generated@@417 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@235 $generated@@541 ($generated@@417 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@67) (= (type $generated@@545) $generated@@67)) (= (type $generated@@546) $generated@@155)) ($generated@@235 $generated@@546 ($generated@@146 $generated@@544 $generated@@545))) (and (= ($generated@@292 ($generated@@342 $generated@@77 $generated@@546)) $generated@@546) ($generated@@79 ($generated@@342 $generated@@77 $generated@@546) ($generated@@146 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@235 $generated@@546 ($generated@@146 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
 (not ($generated@@0 ($generated@@93 ($generated@@425 $generated@@548) $generated@@547))))
 :pattern ( (let (($generated@@548 (type $generated@@547)))
($generated@@93 ($generated@@425 $generated@@548) $generated@@547)))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@72)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@67) (= (type $generated@@552) $generated@@67)) (and (= ($generated@@84 ($generated@@146 $generated@@551 $generated@@552)) $generated@@62) (= ($generated@@549 ($generated@@146 $generated@@551 $generated@@552)) $generated@@65)))
 :pattern ( ($generated@@146 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@77) (= (type $generated@@554) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@263 $generated@@554) (and ($generated@@81 $generated@@553) ($generated@@86 $generated@@553 $generated@@80 $generated@@554)))) ($generated@@86 ($generated@@8 ($generated@@82 $generated@@553)) $generated@@46 $generated@@554))
 :pattern ( ($generated@@86 ($generated@@8 ($generated@@82 $generated@@553)) $generated@@46 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@77) (= ($generated@@531 ($generated@@292 $generated@@555)) ($generated@@532 $generated@@555)))
 :pattern ( ($generated@@531 ($generated@@292 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@155) ($generated@@235 $generated@@556 ($generated@@87 0))) (and (= ($generated@@292 ($generated@@342 $generated@@2 $generated@@556)) $generated@@556) ($generated@@79 ($generated@@342 ($generated@@88 $generated@@155 $generated@@4) $generated@@556) ($generated@@87 0))))
 :pattern ( ($generated@@235 $generated@@556 ($generated@@87 0)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@155) (= (type $generated@@558) $generated@@67)) ($generated@@235 $generated@@557 ($generated@@247 $generated@@558))) (and (= ($generated@@292 ($generated@@342 ($generated@@88 $generated@@155 $generated@@4) $generated@@557)) $generated@@557) ($generated@@79 ($generated@@342 ($generated@@88 $generated@@155 $generated@@4) $generated@@557) ($generated@@247 $generated@@558))))
 :pattern ( ($generated@@235 $generated@@557 ($generated@@247 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@559) $generated@@155) (= (type $generated@@560) $generated@@67)) ($generated@@235 $generated@@559 ($generated@@252 $generated@@560))) (and (= ($generated@@292 ($generated@@342 ($generated@@88 $generated@@155 $generated@@4) $generated@@559)) $generated@@559) ($generated@@79 ($generated@@342 ($generated@@88 $generated@@155 $generated@@4) $generated@@559) ($generated@@252 $generated@@560))))
 :pattern ( ($generated@@235 $generated@@559 ($generated@@252 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@155) (= (type $generated@@562) $generated@@67)) ($generated@@235 $generated@@561 ($generated@@160 $generated@@562))) (and (= ($generated@@292 ($generated@@342 ($generated@@88 $generated@@155 $generated@@2) $generated@@561)) $generated@@561) ($generated@@79 ($generated@@342 ($generated@@88 $generated@@155 $generated@@2) $generated@@561) ($generated@@160 $generated@@562))))
 :pattern ( ($generated@@235 $generated@@561 ($generated@@160 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@155) (= (type $generated@@564) $generated@@67)) ($generated@@235 $generated@@563 ($generated@@491 $generated@@564))) (and (= ($generated@@292 ($generated@@342 ($generated@@279 $generated@@155) $generated@@563)) $generated@@563) ($generated@@79 ($generated@@342 ($generated@@279 $generated@@155) $generated@@563) ($generated@@491 $generated@@564))))
 :pattern ( ($generated@@235 $generated@@563 ($generated@@491 $generated@@564)))
)))
(assert (= ($generated@@84 $generated@@80) $generated@@64))
(assert (= ($generated@@549 $generated@@80) $generated@@66))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@88 $generated@@155 $generated@@2)) (= (type $generated@@566) $generated@@67)) (= (type $generated@@567) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@565 ($generated@@160 $generated@@566) $generated@@567) (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@155) (< 0 ($generated ($generated@@93 $generated@@565 $generated@@568)))) ($generated@@264 $generated@@568 $generated@@566 $generated@@567))
 :pattern ( ($generated@@93 $generated@@565 $generated@@568))
))))
 :pattern ( ($generated@@86 $generated@@565 ($generated@@160 $generated@@566) $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@77) (= (type $generated@@570) $generated@@67)) (= (type $generated@@571) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@263 $generated@@571) (and ($generated@@145 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@67) ($generated@@86 $generated@@569 ($generated@@146 $generated@@570 $generated@@572) $generated@@571))
 :pattern ( ($generated@@86 $generated@@569 ($generated@@146 $generated@@570 $generated@@572) $generated@@571))
))))) ($generated@@264 ($generated@@153 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@264 ($generated@@153 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@77) (= (type $generated@@574) $generated@@67)) (= (type $generated@@575) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@263 $generated@@575) (and ($generated@@145 $generated@@573) (exists (($generated@@576 T@U) ) (!  (and (= (type $generated@@576) $generated@@67) ($generated@@86 $generated@@573 ($generated@@146 $generated@@576 $generated@@574) $generated@@575))
 :pattern ( ($generated@@86 $generated@@573 ($generated@@146 $generated@@576 $generated@@574) $generated@@575))
))))) ($generated@@264 ($generated@@154 $generated@@573) $generated@@574 $generated@@575))
 :pattern ( ($generated@@264 ($generated@@154 $generated@@573) $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@155) (= (type $generated@@578) $generated@@155)) (= ($generated@@234 ($generated@@259 $generated@@577) ($generated@@259 $generated@@578)) ($generated@@259 ($generated@@234 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@234 ($generated@@259 $generated@@577) ($generated@@259 $generated@@578)))
)))
(assert (forall (($generated@@579 Int) ) (! (= ($generated@@292 ($generated@@8 ($generated@@257 $generated@@579))) ($generated@@259 ($generated@@292 ($generated@@8 $generated@@579))))
 :pattern ( ($generated@@292 ($generated@@8 ($generated@@257 $generated@@579))))
)))
(assert (forall (($generated@@580 Int) ) (! (= ($generated@@287 ($generated@@257 $generated@@580)) ($generated@@259 ($generated@@287 $generated@@580)))
 :pattern ( ($generated@@287 ($generated@@257 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ) (! (= ($generated@@292 ($generated@@259 $generated@@581)) ($generated@@259 ($generated@@292 $generated@@581)))
 :pattern ( ($generated@@292 ($generated@@259 $generated@@581)))
)))
(assert  (=> (<= 1 $generated@@75) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@77) (or ($generated@@78 $generated@@582) (and (not (= 1 $generated@@75)) ($generated@@79 $generated@@582 $generated@@80)))) (= ($generated@@76 $generated@@582) ($generated@@82 $generated@@582)))
 :pattern ( ($generated@@76 $generated@@582))
))))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 ($generated@@280 (type $generated@@583))))
 (=> (and (= (type $generated@@583) ($generated@@279 $generated@@584)) (= ($generated@@278 $generated@@583) 0)) (= $generated@@583 ($generated@@277 $generated@@584))))
 :pattern ( ($generated@@278 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (! (let (($generated@@588 (type $generated@@586)))
 (=> (and (and (= (type $generated@@585) ($generated@@88 $generated@@588 $generated@@2)) (= (type $generated@@587) $generated@@2)) (<= 0 ($generated $generated@@587))) (= ($generated@@297 ($generated@@94 $generated@@585 $generated@@586 $generated@@587)) (+ (- ($generated@@297 $generated@@585) ($generated ($generated@@93 $generated@@585 $generated@@586))) ($generated $generated@@587)))))
 :pattern ( ($generated@@297 ($generated@@94 $generated@@585 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@590) $generated@@2)) ($generated@@86 $generated@@590 $generated@@46 $generated@@589))
 :pattern ( ($generated@@86 $generated@@590 $generated@@46 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@592) $generated@@3)) ($generated@@86 $generated@@592 $generated@@47 $generated@@591))
 :pattern ( ($generated@@86 $generated@@592 $generated@@47 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@594) $generated@@4)) ($generated@@86 $generated@@594 $generated@@44 $generated@@593))
 :pattern ( ($generated@@86 $generated@@594 $generated@@44 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@596) $generated@@449)) ($generated@@86 $generated@@596 $generated@@45 $generated@@595))
 :pattern ( ($generated@@86 $generated@@596 $generated@@45 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@598) $generated@@155)) ($generated@@86 $generated@@598 $generated@@48 $generated@@597))
 :pattern ( ($generated@@86 $generated@@598 $generated@@48 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@279 $generated@@155)) (= (type $generated@@600) $generated@@67)) (= ($generated@@79 $generated@@599 ($generated@@491 $generated@@600)) (forall (($generated@@601 Int) ) (!  (=> (and (<= 0 $generated@@601) (< $generated@@601 ($generated@@278 $generated@@599))) ($generated@@235 ($generated@@492 $generated@@599 $generated@@601) $generated@@600))
 :pattern ( ($generated@@492 $generated@@599 $generated@@601))
))))
 :pattern ( ($generated@@79 $generated@@599 ($generated@@491 $generated@@600)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 Int) ) (!  (=> (= (type $generated@@603) ($generated@@279 $generated@@155)) (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@278 $generated@@603))) (< ($generated@@532 ($generated@@342 $generated@@77 ($generated@@492 $generated@@603 $generated@@604))) ($generated@@602 $generated@@603))))
 :pattern ( ($generated@@532 ($generated@@342 $generated@@77 ($generated@@492 $generated@@603 $generated@@604))))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) ($generated@@305 $generated@@155 $generated@@155)) (= (type $generated@@606) $generated@@67)) (= (type $generated@@607) $generated@@67)) ($generated@@79 $generated@@605 ($generated@@409 $generated@@606 $generated@@607))) (and (and ($generated@@79 ($generated@@303 $generated@@605) ($generated@@247 $generated@@606)) ($generated@@79 ($generated@@350 $generated@@605) ($generated@@247 $generated@@607))) ($generated@@79 ($generated@@383 $generated@@605) ($generated@@247 ($generated@@146 $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@79 $generated@@605 ($generated@@409 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) ($generated@@323 $generated@@155 $generated@@155)) (= (type $generated@@609) $generated@@67)) (= (type $generated@@610) $generated@@67)) ($generated@@79 $generated@@608 ($generated@@417 $generated@@609 $generated@@610))) (and (and ($generated@@79 ($generated@@321 $generated@@608) ($generated@@252 $generated@@609)) ($generated@@79 ($generated@@361 $generated@@608) ($generated@@252 $generated@@610))) ($generated@@79 ($generated@@391 $generated@@608) ($generated@@252 ($generated@@146 $generated@@609 $generated@@610)))))
 :pattern ( ($generated@@79 $generated@@608 ($generated@@417 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@2) ($generated@@79 $generated@@611 $generated@@46))
 :pattern ( ($generated@@79 $generated@@611 $generated@@46))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@3) ($generated@@79 $generated@@612 $generated@@47))
 :pattern ( ($generated@@79 $generated@@612 $generated@@47))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@4) ($generated@@79 $generated@@613 $generated@@44))
 :pattern ( ($generated@@79 $generated@@613 $generated@@44))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@449) ($generated@@79 $generated@@614 $generated@@45))
 :pattern ( ($generated@@79 $generated@@614 $generated@@45))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@155) ($generated@@79 $generated@@615 $generated@@48))
 :pattern ( ($generated@@79 $generated@@615 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@616) $generated@@77) (= (type $generated@@619) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@617) ($generated@@167 $generated@@89 $generated@@4))) (= (type $generated@@618) $generated@@89)) (= (type $generated@@620) ($generated@@167 $generated@@89 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@622  (=> (= (ControlFlow 0 4) (- 0 3)) (= ($generated@@76 $generated@@616) ($generated@@82 $generated@@616)))))
(let (($generated@@623  (=> (and (= $generated@@617 ($generated@@221 $generated@@618 $generated@@619 $generated@@60 false)) ($generated@@81 $generated@@616)) (=> (and (and (= ($generated@@76 $generated@@616) ($generated@@82 $generated@@616)) ($generated@@81 $generated@@616)) (and ($generated@@79 ($generated@@8 ($generated@@76 $generated@@616)) $generated@@46) (= (ControlFlow 0 5) 4))) $generated@@622))))
(let (($generated@@624  (=> (and ($generated@@86 $generated@@616 $generated@@80 $generated@@619) (= (ControlFlow 0 2) (- 0 1))) (or (= $generated@@616 $generated@@616) (< ($generated@@532 $generated@@616) ($generated@@532 $generated@@616))))))
(let (($generated@@625  (=> (= $generated@@620 ($generated@@166 $generated@@618 $generated@@619 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 2) $generated@@624) (=> (= (ControlFlow 0 6) 5) $generated@@623)))))
(let (($generated@@626  (=> (and (and (and ($generated@@263 $generated@@619) ($generated@@621 $generated@@619)) ($generated@@79 $generated@@616 $generated@@80)) (and (= 1 $generated@@75) (= (ControlFlow 0 7) 6))) $generated@@625)))
$generated@@626))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 () Int)
(declare-fun $generated@@76 (T@U) Int)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@82 (T@U) Int)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@222 (T@U T@U) T@U)
(declare-fun $generated@@223 (T@U T@U) Bool)
(declare-fun $generated@@232 (T@U T@U) Bool)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (Int) Int)
(declare-fun $generated@@247 (T@U) T@U)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@252 (T@U T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@265 (T@T) T@U)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@T) T@T)
(declare-fun $generated@@268 (T@T) T@T)
(declare-fun $generated@@275 (Int) T@U)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@330 (T@T T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@T) T@U)
(declare-fun $generated@@437 () T@T)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@480 (T@U Int) T@U)
(declare-fun $generated@@489 (T@U) Int)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@590 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert  (and (= ($generated@@1 $generated@@77) 11) (= (type $generated@@80) $generated@@67)))
(assert  (=> (<= 1 $generated@@75) (forall (($generated@@83 T@U) ) (!  (=> (and (= (type $generated@@83) $generated@@77) (or ($generated@@78 $generated@@83) (and (not (= 1 $generated@@75)) ($generated@@79 $generated@@83 $generated@@80)))) (and ($generated@@81 $generated@@83) (= ($generated@@76 $generated@@83) ($generated@@82 $generated@@83))))
 :pattern ( ($generated@@76 $generated@@83))
))))
(assert (forall (($generated@@85 T@U) ) (! (= (type ($generated@@84 $generated@@85)) $generated@@68)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (= ($generated@@84 $generated@@44) $generated@@49))
(assert (= ($generated@@84 $generated@@45) $generated@@50))
(assert (= ($generated@@84 $generated@@46) $generated@@51))
(assert (= ($generated@@84 $generated@@47) $generated@@52))
(assert (= ($generated@@84 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (= ($generated@@1 ($generated@@88 $generated@@97 $generated@@98)) 12)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@88 $generated@@99 $generated@@100))
))) (forall (($generated@@101 T@T) ($generated@@102 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@88 $generated@@101 $generated@@102))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@92 (type $generated@@103))))
(= (type ($generated@@93 $generated@@103 $generated@@104)) $generated@@105))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 (type $generated@@108)))
(let (($generated@@110 (type $generated@@107)))
(= (type ($generated@@94 $generated@@106 $generated@@107 $generated@@108)) ($generated@@88 $generated@@110 $generated@@109))))
 :pattern ( ($generated@@94 $generated@@106 $generated@@107 $generated@@108))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (let (($generated@@114 ($generated@@92 (type $generated@@111))))
 (=> (= (type $generated@@113) $generated@@114) (= ($generated@@93 ($generated@@94 $generated@@111 $generated@@112 $generated@@113) $generated@@112) $generated@@113)))
 :weight 0
))) (and (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@93 ($generated@@94 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@93 $generated@@116 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or true (= ($generated@@93 ($generated@@94 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@93 $generated@@120 $generated@@122)))
 :weight 0
)))) (= ($generated@@1 $generated@@89) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@70 (type $generated@@124))))
(= (type ($generated@@95 $generated@@123 $generated@@124)) $generated@@125))
 :pattern ( ($generated@@95 $generated@@123 $generated@@124))
))) (= ($generated@@1 $generated@@90) 14)) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= (type ($generated@@96 $generated@@126 $generated@@127 $generated@@128)) $generated@@90)
 :pattern ( ($generated@@96 $generated@@126 $generated@@127 $generated@@128))
))) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@70 (type $generated@@130))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@95 ($generated@@96 $generated@@129 $generated@@130 $generated@@131) $generated@@130) $generated@@131)))
 :weight 0
))) (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 ($generated@@96 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@134 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or true (= ($generated@@95 ($generated@@96 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@95 $generated@@138 $generated@@140)))
 :weight 0
)))) (forall (($generated@@141 Int) ) (! (= (type ($generated@@87 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@87 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@142) $generated@@2) (= (type $generated@@143) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
 :pattern ( ($generated@@86 $generated@@142 ($generated@@87 0) $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@79 $generated@@144 ($generated@@87 0)))
 :pattern ( ($generated@@79 $generated@@144 ($generated@@87 0)))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@146 $generated@@147 $generated@@148)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@67)) (= (type $generated@@151) $generated@@77)) ($generated@@79 $generated@@151 ($generated@@146 $generated@@149 $generated@@150))) ($generated@@145 $generated@@151))
 :pattern ( ($generated@@145 $generated@@151) ($generated@@79 $generated@@151 ($generated@@146 $generated@@149 $generated@@150)))
)))
(assert  (and (and (= ($generated@@1 $generated@@155) 15) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@153 $generated@@156))
))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@155)
 :pattern ( ($generated@@154 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@77) (= (type $generated@@159) $generated@@77)) true) (= ($generated@@152 $generated@@158 $generated@@159)  (and (= ($generated@@153 $generated@@158) ($generated@@153 $generated@@159)) (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)))))
 :pattern ( ($generated@@152 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@67)
 :pattern ( ($generated@@160 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@88 $generated@@155 $generated@@2)) (= (type $generated@@164) $generated@@67)) ($generated@@79 $generated@@163 ($generated@@160 $generated@@164))) ($generated@@161 $generated@@163))
 :pattern ( ($generated@@79 $generated@@163 ($generated@@160 $generated@@164)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@89 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@70 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@89) (= (type $generated@@215) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@216) ($generated@@69 $generated@@4))) (= (type $generated@@218) $generated@@89)) (= (type $generated@@219) ($generated@@69 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@95 ($generated@@93 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> (and (= (type $generated@@221) $generated@@77) ($generated@@79 $generated@@221 $generated@@80)) ($generated@@81 $generated@@221))
 :pattern ( ($generated@@81 $generated@@221) ($generated@@79 $generated@@221 $generated@@80))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (! (= (type ($generated@@222 $generated@@224 $generated@@225)) $generated@@77)
 :pattern ( ($generated@@222 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (and (and (= (type $generated@@226) $generated@@67) (= (type $generated@@227) $generated@@67)) (= (type $generated@@228) $generated@@155)) (= (type $generated@@229) $generated@@155)) (= ($generated@@79 ($generated@@222 $generated@@228 $generated@@229) ($generated@@146 $generated@@226 $generated@@227))  (and ($generated@@223 $generated@@228 $generated@@226) ($generated@@223 $generated@@229 $generated@@227))))
 :pattern ( ($generated@@79 ($generated@@222 $generated@@228 $generated@@229) ($generated@@146 $generated@@226 $generated@@227)))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@77) (= (type $generated@@231) $generated@@77)) (= ($generated@@152 $generated@@230 $generated@@231) (= $generated@@230 $generated@@231)))
 :pattern ( ($generated@@152 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@77) (= (type $generated@@234) $generated@@77)) (= ($generated@@232 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@232 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@67)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@88 $generated@@155 $generated@@4)) (= (type $generated@@238) $generated@@67)) (= ($generated@@79 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@155) ($generated@@0 ($generated@@93 $generated@@237 $generated@@239))) ($generated@@223 $generated@@239 $generated@@238))
 :pattern ( ($generated@@93 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@79 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@67)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@88 $generated@@155 $generated@@4)) (= (type $generated@@243) $generated@@67)) (= ($generated@@79 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@155) ($generated@@0 ($generated@@93 $generated@@242 $generated@@244))) ($generated@@223 $generated@@244 $generated@@243))
 :pattern ( ($generated@@93 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@79 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 Int) ) (! (= ($generated@@245 $generated@@246) $generated@@246)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (let (($generated@@249 (type $generated@@248)))
(= (type ($generated@@247 $generated@@248)) $generated@@249))
 :pattern ( ($generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= ($generated@@247 $generated@@250) $generated@@250)
 :pattern ( ($generated@@247 $generated@@250))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@253) $generated@@67) (= (type $generated@@254) $generated@@67)) (= (type $generated@@255) $generated@@155)) (= (type $generated@@256) $generated@@155)) (= (type $generated@@257) ($generated@@88 $generated@@89 $generated@@90))) ($generated@@251 $generated@@257)) (= ($generated@@86 ($generated@@222 $generated@@255 $generated@@256) ($generated@@146 $generated@@253 $generated@@254) $generated@@257)  (and ($generated@@252 $generated@@255 $generated@@253 $generated@@257) ($generated@@252 $generated@@256 $generated@@254 $generated@@257))))
 :pattern ( ($generated@@86 ($generated@@222 $generated@@255 $generated@@256) ($generated@@146 $generated@@253 $generated@@254) $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@71)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ) (!  (=> (= (type $generated@@260) $generated@@77) (= ($generated@@145 $generated@@260) (= ($generated@@258 $generated@@260) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (!  (=> (= (type $generated@@261) $generated@@77) (= ($generated@@81 $generated@@261) (= ($generated@@258 $generated@@261) $generated@@63)))
 :pattern ( ($generated@@81 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@77) ($generated@@145 $generated@@262)) (exists (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (and (and (= (type $generated@@263) $generated@@155) (= (type $generated@@264) $generated@@155)) (= $generated@@262 ($generated@@222 $generated@@263 $generated@@264)))
 :no-pattern (type $generated@@263)
 :no-pattern (type $generated@@264)
 :no-pattern ($generated $generated@@263)
 :no-pattern ($generated@@0 $generated@@263)
 :no-pattern ($generated $generated@@264)
 :no-pattern ($generated@@0 $generated@@264)
)))
 :pattern ( ($generated@@145 $generated@@262))
)))
(assert  (and (and (forall (($generated@@269 T@T) ) (= ($generated@@1 ($generated@@267 $generated@@269)) 17)) (forall (($generated@@270 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@270)) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
))) (forall (($generated@@271 T@T) ) (! (= (type ($generated@@265 $generated@@271)) ($generated@@267 $generated@@271))
 :pattern ( ($generated@@265 $generated@@271))
))))
(assert (forall (($generated@@272 T@T) ) (! (= ($generated@@266 ($generated@@265 $generated@@272)) 0)
 :pattern ( ($generated@@265 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (= (type $generated@@273) $generated@@77) (= (type $generated@@274) $generated@@77)) true) (= ($generated@@232 $generated@@273 $generated@@274) (= ($generated@@82 $generated@@273) ($generated@@82 $generated@@274))))
 :pattern ( ($generated@@232 $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 Int) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@77)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@77) ($generated@@81 $generated@@277)) (exists (($generated@@278 Int) ) (= $generated@@277 ($generated@@275 $generated@@278))))
 :pattern ( ($generated@@81 $generated@@277))
)))
(assert  (=> (<= 1 $generated@@75) (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@77) (or ($generated@@78 ($generated@@247 $generated@@279)) (and (not (= 1 $generated@@75)) ($generated@@79 $generated@@279 $generated@@80)))) (and ($generated@@81 ($generated@@247 $generated@@279)) (= ($generated@@76 ($generated@@247 $generated@@279)) ($generated@@245 ($generated@@82 ($generated@@247 $generated@@279))))))
 :weight 3
 :pattern ( ($generated@@76 ($generated@@247 $generated@@279)))
))))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@155)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@67) (= (type $generated@@284) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@252 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@86 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@252 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@88 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@91 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@88 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@93 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 18)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@88 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@93 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@93 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 19)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@88 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@93 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@93 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@91 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@88 $generated@@328 $generated@@2)) (= ($generated@@161 $generated@@327) (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@328) (and (<= 0 ($generated ($generated@@93 $generated@@327 $generated@@329))) (<= ($generated ($generated@@93 $generated@@327 $generated@@329)) ($generated@@285 $generated@@327))))
 :pattern ( ($generated@@93 $generated@@327 $generated@@329))
)))))
 :pattern ( ($generated@@161 $generated@@327))
)))
(assert (forall (($generated@@331 T@T) ($generated@@332 T@U) ) (! (= (type ($generated@@330 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@330 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@155) ($generated@@223 $generated@@333 $generated@@80)) (and (= ($generated@@280 ($generated@@330 $generated@@77 $generated@@333)) $generated@@333) ($generated@@79 ($generated@@330 $generated@@77 $generated@@333) $generated@@80)))
 :pattern ( ($generated@@223 $generated@@333 $generated@@80))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@295 (type $generated@@334))))
(let (($generated@@336 ($generated@@294 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@293 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@292 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@336) ($generated@@0 ($generated@@93 ($generated@@291 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@291 $generated@@334))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@295 (type $generated@@339))))
(= (type ($generated@@338 $generated@@339)) ($generated@@88 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@295 (type $generated@@341))))
(let (($generated@@343 ($generated@@294 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@293 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@292 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@342) ($generated@@0 ($generated@@93 ($generated@@338 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@313 (type $generated@@345))))
(let (($generated@@347 ($generated@@312 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@311 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@310 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@93 ($generated@@309 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@309 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@313 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@88 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@313 (type $generated@@352))))
(let (($generated@@354 ($generated@@312 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@311 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@310 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@93 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@356) ($generated@@88 $generated@@155 $generated@@2)) (= (type $generated@@357) $generated@@67)) (= ($generated@@79 $generated@@356 ($generated@@160 $generated@@357)) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@155) (< 0 ($generated ($generated@@93 $generated@@356 $generated@@358)))) ($generated@@223 $generated@@358 $generated@@357))
 :pattern ( ($generated@@93 $generated@@356 $generated@@358))
))))
 :pattern ( ($generated@@79 $generated@@356 ($generated@@160 $generated@@357)))
)))
(assert (forall (($generated@@359 Int) ($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) ($generated@@88 $generated@@89 $generated@@90)) ($generated@@251 $generated@@360)) (= ($generated@@86 ($generated@@275 $generated@@359) $generated@@80 $generated@@360) ($generated@@86 ($generated@@8 $generated@@359) $generated@@46 $generated@@360)))
 :pattern ( ($generated@@86 ($generated@@275 $generated@@359) $generated@@80 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@88 $generated@@155 $generated@@4)) (= (type $generated@@362) $generated@@67)) (= (type $generated@@363) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@361 ($generated@@235 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@155) ($generated@@0 ($generated@@93 $generated@@361 $generated@@364))) ($generated@@252 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@93 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@86 $generated@@361 ($generated@@235 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@88 $generated@@155 $generated@@4)) (= (type $generated@@366) $generated@@67)) (= (type $generated@@367) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@365 ($generated@@240 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@155) ($generated@@0 ($generated@@93 $generated@@365 $generated@@368))) ($generated@@252 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@93 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@86 $generated@@365 ($generated@@240 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(= ($generated ($generated@@93 ($generated@@286 $generated@@370) $generated@@369)) 0))
 :pattern ( (let (($generated@@370 (type $generated@@369)))
($generated@@93 ($generated@@286 $generated@@370) $generated@@369)))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@88 $generated@@155 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@295 (type $generated@@374))))
(let (($generated@@376 ($generated@@294 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@88 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@293 $generated@@155 $generated@@155)) (= (type $generated@@378) $generated@@155)) (= ($generated@@0 ($generated@@93 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@93 ($generated@@291 $generated@@377) ($generated@@153 ($generated@@330 $generated@@77 $generated@@378)))) (= ($generated@@93 ($generated@@372 $generated@@377) ($generated@@153 ($generated@@330 $generated@@77 $generated@@378))) ($generated@@154 ($generated@@330 $generated@@77 $generated@@378))))))
 :pattern ( ($generated@@93 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@88 $generated@@155 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@313 (type $generated@@382))))
(let (($generated@@384 ($generated@@312 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@88 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@311 $generated@@155 $generated@@155)) (= (type $generated@@386) $generated@@155)) (= ($generated@@0 ($generated@@93 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@93 ($generated@@309 $generated@@385) ($generated@@153 ($generated@@330 $generated@@77 $generated@@386)))) (= ($generated@@93 ($generated@@380 $generated@@385) ($generated@@153 ($generated@@330 $generated@@77 $generated@@386))) ($generated@@154 ($generated@@330 $generated@@77 $generated@@386))))))
 :pattern ( ($generated@@93 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@294 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@293 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@93 ($generated@@338 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@93 ($generated@@291 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@93 ($generated@@372 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@93 ($generated@@291 $generated@@387) $generated@@391))
 :pattern ( ($generated@@93 ($generated@@372 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@93 ($generated@@338 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@312 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@311 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@93 ($generated@@349 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@93 ($generated@@309 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@93 ($generated@@380 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@93 ($generated@@309 $generated@@392) $generated@@396))
 :pattern ( ($generated@@93 ($generated@@380 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@93 ($generated@@349 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@67)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@293 $generated@@155 $generated@@155)) (= (type $generated@@401) $generated@@67)) (= (type $generated@@402) $generated@@67)) (= (type $generated@@403) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@155) ($generated@@0 ($generated@@93 ($generated@@291 $generated@@400) $generated@@404))) (and ($generated@@252 ($generated@@93 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@252 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@93 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@93 ($generated@@291 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@86 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@67)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@311 $generated@@155 $generated@@155)) (= (type $generated@@409) $generated@@67)) (= (type $generated@@410) $generated@@67)) (= (type $generated@@411) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@155) ($generated@@0 ($generated@@93 ($generated@@309 $generated@@408) $generated@@412))) (and ($generated@@252 ($generated@@93 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@252 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@93 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@93 ($generated@@309 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@86 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@T) ) (! (= (type ($generated@@413 $generated@@414)) ($generated@@88 $generated@@414 $generated@@4))
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@313 (type $generated@@415))))
(let (($generated@@417 ($generated@@312 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@311 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@310 $generated@@417 $generated@@416)) (= ($generated@@309 $generated@@415) ($generated@@413 $generated@@417))))))
 :pattern ( ($generated@@309 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@313 (type $generated@@418))))
(let (($generated@@420 ($generated@@312 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@311 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@310 $generated@@420 $generated@@419)) (= ($generated@@349 $generated@@418) ($generated@@413 $generated@@419))))))
 :pattern ( ($generated@@349 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@313 (type $generated@@421))))
(let (($generated@@423 ($generated@@312 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@311 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@310 $generated@@423 $generated@@422)) (= ($generated@@379 $generated@@421) ($generated@@413 $generated@@155))))))
 :pattern ( ($generated@@379 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@295 (type $generated@@424))))
(let (($generated@@426 ($generated@@294 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@293 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@292 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@155) (= (type $generated@@428) $generated@@155)) ($generated@@0 ($generated@@93 ($generated@@371 $generated@@424) ($generated@@280 ($generated@@222 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@371 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@313 (type $generated@@429))))
(let (($generated@@431 ($generated@@312 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@311 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@310 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@155) (= (type $generated@@433) $generated@@155)) ($generated@@0 ($generated@@93 ($generated@@379 $generated@@429) ($generated@@280 ($generated@@222 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@379 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@155) ($generated@@223 $generated@@434 $generated@@46)) (and (= ($generated@@280 ($generated@@330 $generated@@2 $generated@@434)) $generated@@434) ($generated@@79 ($generated@@330 $generated@@2 $generated@@434) $generated@@46)))
 :pattern ( ($generated@@223 $generated@@434 $generated@@46))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@155) ($generated@@223 $generated@@435 $generated@@47)) (and (= ($generated@@280 ($generated@@330 $generated@@3 $generated@@435)) $generated@@435) ($generated@@79 ($generated@@330 $generated@@3 $generated@@435) $generated@@47)))
 :pattern ( ($generated@@223 $generated@@435 $generated@@47))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@155) ($generated@@223 $generated@@436 $generated@@44)) (and (= ($generated@@280 ($generated@@330 $generated@@4 $generated@@436)) $generated@@436) ($generated@@79 ($generated@@330 $generated@@4 $generated@@436) $generated@@44)))
 :pattern ( ($generated@@223 $generated@@436 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@437) 20))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@155) ($generated@@223 $generated@@438 $generated@@45)) (and (= ($generated@@280 ($generated@@330 $generated@@437 $generated@@438)) $generated@@438) ($generated@@79 ($generated@@330 $generated@@437 $generated@@438) $generated@@45)))
 :pattern ( ($generated@@223 $generated@@438 $generated@@45))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (= (type $generated@@440) $generated@@67) (= ($generated@@223 ($generated@@280 $generated@@439) $generated@@440) ($generated@@79 $generated@@439 $generated@@440)))
 :pattern ( ($generated@@223 ($generated@@280 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@91 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@88 $generated@@442 $generated@@2)) (<= 0 ($generated@@285 $generated@@441))))
 :pattern ( ($generated@@285 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@268 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@267 $generated@@444)) (<= 0 ($generated@@266 $generated@@443))))
 :pattern ( ($generated@@266 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@67)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@67) (= (type $generated@@448) $generated@@67)) (= ($generated@@445 ($generated@@397 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@397 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@67)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@67) (= (type $generated@@452) $generated@@67)) (= ($generated@@449 ($generated@@397 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@397 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@67) (= (type $generated@@454) $generated@@67)) (= ($generated@@84 ($generated@@397 $generated@@453 $generated@@454)) $generated@@58))
 :pattern ( ($generated@@397 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@67)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@455 ($generated@@405 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@405 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@67)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@67) (= (type $generated@@462) $generated@@67)) (= ($generated@@459 ($generated@@405 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@405 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@67) (= (type $generated@@464) $generated@@67)) (= ($generated@@84 ($generated@@405 $generated@@463 $generated@@464)) $generated@@59))
 :pattern ( ($generated@@405 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@155) (= (type $generated@@466) $generated@@155)) (= ($generated@@258 ($generated@@222 $generated@@465 $generated@@466)) $generated@@61))
 :pattern ( ($generated@@222 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@67)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@67) (= (type $generated@@470) $generated@@67)) (= ($generated@@467 ($generated@@146 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@146 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@67) (= (type $generated@@474) $generated@@67)) (= ($generated@@471 ($generated@@146 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@146 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@155) (= (type $generated@@476) $generated@@155)) (= ($generated@@153 ($generated@@222 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@222 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@155) (= (type $generated@@478) $generated@@155)) (= ($generated@@154 ($generated@@222 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@222 $generated@@477 $generated@@478))
)))
(assert  (and (forall (($generated@@481 T@U) ) (! (= (type ($generated@@479 $generated@@481)) $generated@@67)
 :pattern ( ($generated@@479 $generated@@481))
)) (forall (($generated@@482 T@U) ($generated@@483 Int) ) (! (let (($generated@@484 ($generated@@268 (type $generated@@482))))
(= (type ($generated@@480 $generated@@482 $generated@@483)) $generated@@484))
 :pattern ( ($generated@@480 $generated@@482 $generated@@483))
))))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (= (type $generated@@485) ($generated@@267 $generated@@155)) (= (type $generated@@486) $generated@@67)) (= (type $generated@@487) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@485 ($generated@@479 $generated@@486) $generated@@487) (forall (($generated@@488 Int) ) (!  (=> (and (<= 0 $generated@@488) (< $generated@@488 ($generated@@266 $generated@@485))) ($generated@@252 ($generated@@480 $generated@@485 $generated@@488) $generated@@486 $generated@@487))
 :pattern ( ($generated@@480 $generated@@485 $generated@@488))
))))
 :pattern ( ($generated@@86 $generated@@485 ($generated@@479 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@490 Int) ) (! (= ($generated@@489 ($generated@@87 $generated@@490)) $generated@@490)
 :pattern ( ($generated@@87 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@67)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@491 ($generated@@235 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@235 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@67) (= ($generated@@84 ($generated@@235 $generated@@494)) $generated@@54))
 :pattern ( ($generated@@235 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@495 ($generated@@240 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@240 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@67) (= ($generated@@84 ($generated@@240 $generated@@498)) $generated@@55))
 :pattern ( ($generated@@240 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@67) (= ($generated@@499 ($generated@@160 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@160 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@67) (= ($generated@@84 ($generated@@160 $generated@@502)) $generated@@56))
 :pattern ( ($generated@@160 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@67)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@67) (= ($generated@@503 ($generated@@479 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@479 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@67) (= ($generated@@84 ($generated@@479 $generated@@506)) $generated@@57))
 :pattern ( ($generated@@479 $generated@@506))
)))
(assert (forall (($generated@@507 Int) ) (! (= ($generated@@258 ($generated@@275 $generated@@507)) $generated@@63)
 :pattern ( ($generated@@275 $generated@@507))
)))
(assert (forall (($generated@@508 Int) ) (! (= ($generated@@82 ($generated@@275 $generated@@508)) $generated@@508)
 :pattern ( ($generated@@275 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
(= ($generated@@330 $generated@@510 ($generated@@280 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@280 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@293 $generated@@155 $generated@@155)) (= (type $generated@@512) $generated@@67)) (= (type $generated@@513) $generated@@67)) (= ($generated@@79 $generated@@511 ($generated@@397 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@155) ($generated@@0 ($generated@@93 ($generated@@291 $generated@@511) $generated@@514))) (and ($generated@@223 ($generated@@93 ($generated@@372 $generated@@511) $generated@@514) $generated@@513) ($generated@@223 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@93 ($generated@@372 $generated@@511) $generated@@514))
 :pattern ( ($generated@@93 ($generated@@291 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@79 $generated@@511 ($generated@@397 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@311 $generated@@155 $generated@@155)) (= (type $generated@@516) $generated@@67)) (= (type $generated@@517) $generated@@67)) (= ($generated@@79 $generated@@515 ($generated@@405 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@155) ($generated@@0 ($generated@@93 ($generated@@309 $generated@@515) $generated@@518))) (and ($generated@@223 ($generated@@93 ($generated@@380 $generated@@515) $generated@@518) $generated@@517) ($generated@@223 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@93 ($generated@@380 $generated@@515) $generated@@518))
 :pattern ( ($generated@@93 ($generated@@309 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@79 $generated@@515 ($generated@@405 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@155) (= (type $generated@@522) $generated@@155)) (< ($generated@@519 $generated@@521) ($generated@@520 ($generated@@222 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@222 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@155) (= (type $generated@@524) $generated@@155)) (< ($generated@@519 $generated@@524) ($generated@@520 ($generated@@222 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@222 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 Int) ) (! (= ($generated@@79 ($generated@@275 $generated@@525) $generated@@80) ($generated@@79 ($generated@@8 $generated@@525) $generated@@46))
 :pattern ( ($generated@@79 ($generated@@275 $generated@@525) $generated@@80))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@155) (= (type $generated@@527) $generated@@67)) (= (type $generated@@528) $generated@@67)) ($generated@@223 $generated@@526 ($generated@@397 $generated@@527 $generated@@528))) (and (= ($generated@@280 ($generated@@330 ($generated@@293 $generated@@155 $generated@@155) $generated@@526)) $generated@@526) ($generated@@79 ($generated@@330 ($generated@@293 $generated@@155 $generated@@155) $generated@@526) ($generated@@397 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@223 $generated@@526 ($generated@@397 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@155) (= (type $generated@@530) $generated@@67)) (= (type $generated@@531) $generated@@67)) ($generated@@223 $generated@@529 ($generated@@405 $generated@@530 $generated@@531))) (and (= ($generated@@280 ($generated@@330 ($generated@@311 $generated@@155 $generated@@155) $generated@@529)) $generated@@529) ($generated@@79 ($generated@@330 ($generated@@311 $generated@@155 $generated@@155) $generated@@529) ($generated@@405 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@223 $generated@@529 ($generated@@405 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@67) (= (type $generated@@533) $generated@@67)) (= (type $generated@@534) $generated@@155)) ($generated@@223 $generated@@534 ($generated@@146 $generated@@532 $generated@@533))) (and (= ($generated@@280 ($generated@@330 $generated@@77 $generated@@534)) $generated@@534) ($generated@@79 ($generated@@330 $generated@@77 $generated@@534) ($generated@@146 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@223 $generated@@534 ($generated@@146 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 (type $generated@@535)))
 (not ($generated@@0 ($generated@@93 ($generated@@413 $generated@@536) $generated@@535))))
 :pattern ( (let (($generated@@536 (type $generated@@535)))
($generated@@93 ($generated@@413 $generated@@536) $generated@@535)))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@72)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@67) (= (type $generated@@540) $generated@@67)) (and (= ($generated@@84 ($generated@@146 $generated@@539 $generated@@540)) $generated@@62) (= ($generated@@537 ($generated@@146 $generated@@539 $generated@@540)) $generated@@65)))
 :pattern ( ($generated@@146 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@77) (= (type $generated@@542) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@251 $generated@@542) (and ($generated@@81 $generated@@541) ($generated@@86 $generated@@541 $generated@@80 $generated@@542)))) ($generated@@86 ($generated@@8 ($generated@@82 $generated@@541)) $generated@@46 $generated@@542))
 :pattern ( ($generated@@86 ($generated@@8 ($generated@@82 $generated@@541)) $generated@@46 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@77) (= ($generated@@519 ($generated@@280 $generated@@543)) ($generated@@520 $generated@@543)))
 :pattern ( ($generated@@519 ($generated@@280 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@155) ($generated@@223 $generated@@544 ($generated@@87 0))) (and (= ($generated@@280 ($generated@@330 $generated@@2 $generated@@544)) $generated@@544) ($generated@@79 ($generated@@330 ($generated@@88 $generated@@155 $generated@@4) $generated@@544) ($generated@@87 0))))
 :pattern ( ($generated@@223 $generated@@544 ($generated@@87 0)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@155) (= (type $generated@@546) $generated@@67)) ($generated@@223 $generated@@545 ($generated@@235 $generated@@546))) (and (= ($generated@@280 ($generated@@330 ($generated@@88 $generated@@155 $generated@@4) $generated@@545)) $generated@@545) ($generated@@79 ($generated@@330 ($generated@@88 $generated@@155 $generated@@4) $generated@@545) ($generated@@235 $generated@@546))))
 :pattern ( ($generated@@223 $generated@@545 ($generated@@235 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@155) (= (type $generated@@548) $generated@@67)) ($generated@@223 $generated@@547 ($generated@@240 $generated@@548))) (and (= ($generated@@280 ($generated@@330 ($generated@@88 $generated@@155 $generated@@4) $generated@@547)) $generated@@547) ($generated@@79 ($generated@@330 ($generated@@88 $generated@@155 $generated@@4) $generated@@547) ($generated@@240 $generated@@548))))
 :pattern ( ($generated@@223 $generated@@547 ($generated@@240 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@155) (= (type $generated@@550) $generated@@67)) ($generated@@223 $generated@@549 ($generated@@160 $generated@@550))) (and (= ($generated@@280 ($generated@@330 ($generated@@88 $generated@@155 $generated@@2) $generated@@549)) $generated@@549) ($generated@@79 ($generated@@330 ($generated@@88 $generated@@155 $generated@@2) $generated@@549) ($generated@@160 $generated@@550))))
 :pattern ( ($generated@@223 $generated@@549 ($generated@@160 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@155) (= (type $generated@@552) $generated@@67)) ($generated@@223 $generated@@551 ($generated@@479 $generated@@552))) (and (= ($generated@@280 ($generated@@330 ($generated@@267 $generated@@155) $generated@@551)) $generated@@551) ($generated@@79 ($generated@@330 ($generated@@267 $generated@@155) $generated@@551) ($generated@@479 $generated@@552))))
 :pattern ( ($generated@@223 $generated@@551 ($generated@@479 $generated@@552)))
)))
(assert (= ($generated@@84 $generated@@80) $generated@@64))
(assert (= ($generated@@537 $generated@@80) $generated@@66))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@88 $generated@@155 $generated@@2)) (= (type $generated@@554) $generated@@67)) (= (type $generated@@555) ($generated@@88 $generated@@89 $generated@@90))) (= ($generated@@86 $generated@@553 ($generated@@160 $generated@@554) $generated@@555) (forall (($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@155) (< 0 ($generated ($generated@@93 $generated@@553 $generated@@556)))) ($generated@@252 $generated@@556 $generated@@554 $generated@@555))
 :pattern ( ($generated@@93 $generated@@553 $generated@@556))
))))
 :pattern ( ($generated@@86 $generated@@553 ($generated@@160 $generated@@554) $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@77) (= (type $generated@@558) $generated@@67)) (= (type $generated@@559) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@251 $generated@@559) (and ($generated@@145 $generated@@557) (exists (($generated@@560 T@U) ) (!  (and (= (type $generated@@560) $generated@@67) ($generated@@86 $generated@@557 ($generated@@146 $generated@@558 $generated@@560) $generated@@559))
 :pattern ( ($generated@@86 $generated@@557 ($generated@@146 $generated@@558 $generated@@560) $generated@@559))
))))) ($generated@@252 ($generated@@153 $generated@@557) $generated@@558 $generated@@559))
 :pattern ( ($generated@@252 ($generated@@153 $generated@@557) $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@77) (= (type $generated@@562) $generated@@67)) (= (type $generated@@563) ($generated@@88 $generated@@89 $generated@@90))) (and ($generated@@251 $generated@@563) (and ($generated@@145 $generated@@561) (exists (($generated@@564 T@U) ) (!  (and (= (type $generated@@564) $generated@@67) ($generated@@86 $generated@@561 ($generated@@146 $generated@@564 $generated@@562) $generated@@563))
 :pattern ( ($generated@@86 $generated@@561 ($generated@@146 $generated@@564 $generated@@562) $generated@@563))
))))) ($generated@@252 ($generated@@154 $generated@@561) $generated@@562 $generated@@563))
 :pattern ( ($generated@@252 ($generated@@154 $generated@@561) $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@155) (= (type $generated@@566) $generated@@155)) (= ($generated@@222 ($generated@@247 $generated@@565) ($generated@@247 $generated@@566)) ($generated@@247 ($generated@@222 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@222 ($generated@@247 $generated@@565) ($generated@@247 $generated@@566)))
)))
(assert (forall (($generated@@567 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@245 $generated@@567))) ($generated@@247 ($generated@@280 ($generated@@8 $generated@@567))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@245 $generated@@567))))
)))
(assert (forall (($generated@@568 Int) ) (! (= ($generated@@275 ($generated@@245 $generated@@568)) ($generated@@247 ($generated@@275 $generated@@568)))
 :pattern ( ($generated@@275 ($generated@@245 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (! (= ($generated@@280 ($generated@@247 $generated@@569)) ($generated@@247 ($generated@@280 $generated@@569)))
 :pattern ( ($generated@@280 ($generated@@247 $generated@@569)))
)))
(assert  (=> (<= 1 $generated@@75) (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@77) (or ($generated@@78 $generated@@570) (and (not (= 1 $generated@@75)) ($generated@@79 $generated@@570 $generated@@80)))) (= ($generated@@76 $generated@@570) ($generated@@82 $generated@@570)))
 :pattern ( ($generated@@76 $generated@@570))
))))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@268 (type $generated@@571))))
 (=> (and (= (type $generated@@571) ($generated@@267 $generated@@572)) (= ($generated@@266 $generated@@571) 0)) (= $generated@@571 ($generated@@265 $generated@@572))))
 :pattern ( ($generated@@266 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@574)))
 (=> (and (and (= (type $generated@@573) ($generated@@88 $generated@@576 $generated@@2)) (= (type $generated@@575) $generated@@2)) (<= 0 ($generated $generated@@575))) (= ($generated@@285 ($generated@@94 $generated@@573 $generated@@574 $generated@@575)) (+ (- ($generated@@285 $generated@@573) ($generated ($generated@@93 $generated@@573 $generated@@574))) ($generated $generated@@575)))))
 :pattern ( ($generated@@285 ($generated@@94 $generated@@573 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@578) $generated@@2)) ($generated@@86 $generated@@578 $generated@@46 $generated@@577))
 :pattern ( ($generated@@86 $generated@@578 $generated@@46 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@580) $generated@@3)) ($generated@@86 $generated@@580 $generated@@47 $generated@@579))
 :pattern ( ($generated@@86 $generated@@580 $generated@@47 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@582) $generated@@4)) ($generated@@86 $generated@@582 $generated@@44 $generated@@581))
 :pattern ( ($generated@@86 $generated@@582 $generated@@44 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@584) $generated@@437)) ($generated@@86 $generated@@584 $generated@@45 $generated@@583))
 :pattern ( ($generated@@86 $generated@@584 $generated@@45 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@88 $generated@@89 $generated@@90)) (= (type $generated@@586) $generated@@155)) ($generated@@86 $generated@@586 $generated@@48 $generated@@585))
 :pattern ( ($generated@@86 $generated@@586 $generated@@48 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@267 $generated@@155)) (= (type $generated@@588) $generated@@67)) (= ($generated@@79 $generated@@587 ($generated@@479 $generated@@588)) (forall (($generated@@589 Int) ) (!  (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@266 $generated@@587))) ($generated@@223 ($generated@@480 $generated@@587 $generated@@589) $generated@@588))
 :pattern ( ($generated@@480 $generated@@587 $generated@@589))
))))
 :pattern ( ($generated@@79 $generated@@587 ($generated@@479 $generated@@588)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 Int) ) (!  (=> (= (type $generated@@591) ($generated@@267 $generated@@155)) (=> (and (<= 0 $generated@@592) (< $generated@@592 ($generated@@266 $generated@@591))) (< ($generated@@520 ($generated@@330 $generated@@77 ($generated@@480 $generated@@591 $generated@@592))) ($generated@@590 $generated@@591))))
 :pattern ( ($generated@@520 ($generated@@330 $generated@@77 ($generated@@480 $generated@@591 $generated@@592))))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@293 $generated@@155 $generated@@155)) (= (type $generated@@594) $generated@@67)) (= (type $generated@@595) $generated@@67)) ($generated@@79 $generated@@593 ($generated@@397 $generated@@594 $generated@@595))) (and (and ($generated@@79 ($generated@@291 $generated@@593) ($generated@@235 $generated@@594)) ($generated@@79 ($generated@@338 $generated@@593) ($generated@@235 $generated@@595))) ($generated@@79 ($generated@@371 $generated@@593) ($generated@@235 ($generated@@146 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@79 $generated@@593 ($generated@@397 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) ($generated@@311 $generated@@155 $generated@@155)) (= (type $generated@@597) $generated@@67)) (= (type $generated@@598) $generated@@67)) ($generated@@79 $generated@@596 ($generated@@405 $generated@@597 $generated@@598))) (and (and ($generated@@79 ($generated@@309 $generated@@596) ($generated@@240 $generated@@597)) ($generated@@79 ($generated@@349 $generated@@596) ($generated@@240 $generated@@598))) ($generated@@79 ($generated@@379 $generated@@596) ($generated@@240 ($generated@@146 $generated@@597 $generated@@598)))))
 :pattern ( ($generated@@79 $generated@@596 ($generated@@405 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@2) ($generated@@79 $generated@@599 $generated@@46))
 :pattern ( ($generated@@79 $generated@@599 $generated@@46))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@3) ($generated@@79 $generated@@600 $generated@@47))
 :pattern ( ($generated@@79 $generated@@600 $generated@@47))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@4) ($generated@@79 $generated@@601 $generated@@44))
 :pattern ( ($generated@@79 $generated@@601 $generated@@44))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@437) ($generated@@79 $generated@@602 $generated@@45))
 :pattern ( ($generated@@79 $generated@@602 $generated@@45))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@155) ($generated@@79 $generated@@603 $generated@@48))
 :pattern ( ($generated@@79 $generated@@603 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@604) $generated@@77) (= (type $generated@@605) ($generated@@88 $generated@@89 $generated@@90))) (= (type $generated@@606) $generated@@77)) (= (type $generated@@607) ($generated@@167 $generated@@89 $generated@@4))) (= (type $generated@@608) $generated@@89)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@610  (=> (and (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@77) ($generated@@79 $generated@@611 $generated@@80)) ($generated@@78 $generated@@611))
 :pattern ( ($generated@@76 $generated@@611))
)) (= (ControlFlow 0 4) (- 0 3))) (exists (($generated@@612 T@U) ) (!  (and (= (type $generated@@612) $generated@@77) (and ($generated@@79 $generated@@612 $generated@@80) (> ($generated@@76 $generated@@612) 0)))
 :pattern ( ($generated@@76 $generated@@612))
)))))
(let (($generated@@613  (=> (and (not (and ($generated@@79 $generated@@604 $generated@@80) ($generated@@86 $generated@@604 $generated@@80 $generated@@605))) (= (ControlFlow 0 6) 4)) $generated@@610)))
(let (($generated@@614  (=> (and (and (and ($generated@@79 $generated@@604 $generated@@80) ($generated@@86 $generated@@604 $generated@@80 $generated@@605)) ($generated@@86 $generated@@604 $generated@@80 $generated@@605)) (and ($generated@@78 $generated@@604) (= (ControlFlow 0 5) 4))) $generated@@610)))
(let (($generated@@615  (and (=> (= (ControlFlow 0 7) 5) $generated@@614) (=> (= (ControlFlow 0 7) 6) $generated@@613))))
(let (($generated@@616 true))
(let (($generated@@617  (=> (and (forall (($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@77) ($generated@@79 $generated@@618 $generated@@80)) ($generated@@78 $generated@@618))
 :pattern ( ($generated@@76 $generated@@618))
)) (exists (($generated@@619 T@U) ) (!  (and (= (type $generated@@619) $generated@@77) (and ($generated@@79 $generated@@619 $generated@@80) (> ($generated@@76 $generated@@619) 0)))
 :pattern ( ($generated@@76 $generated@@619))
))) (and (=> (= (ControlFlow 0 8) 7) $generated@@615) (=> (= (ControlFlow 0 8) 2) $generated@@616)))))
(let (($generated@@620  (=> (and (not (and ($generated@@79 $generated@@606 $generated@@80) ($generated@@86 $generated@@606 $generated@@80 $generated@@605))) (= (ControlFlow 0 10) 8)) $generated@@617)))
(let (($generated@@621  (=> (and (and (and ($generated@@79 $generated@@606 $generated@@80) ($generated@@86 $generated@@606 $generated@@80 $generated@@605)) ($generated@@86 $generated@@606 $generated@@80 $generated@@605)) (and ($generated@@78 $generated@@606) (= (ControlFlow 0 9) 8))) $generated@@617)))
(let (($generated@@622  (and (=> (= (ControlFlow 0 11) 9) $generated@@621) (=> (= (ControlFlow 0 11) 10) $generated@@620))))
(let (($generated@@623 true))
(let (($generated@@624  (=> (= $generated@@607 ($generated@@166 $generated@@608 $generated@@605 $generated@@60 false)) (and (=> (= (ControlFlow 0 12) 11) $generated@@622) (=> (= (ControlFlow 0 12) 1) $generated@@623)))))
(let (($generated@@625  (=> (and (and ($generated@@251 $generated@@605) ($generated@@609 $generated@@605)) (and (= 2 $generated@@75) (= (ControlFlow 0 13) 12))) $generated@@624)))
$generated@@625)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
