(set-logic UFNIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@180  (=> (= (ControlFlow 0 3) (- 0 2)) (<= ($generated@@157 1) ($generated@@157 1)))))
(let (($generated@@181 true))
(let (($generated@@182  (=> (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@181) (=> (= (ControlFlow 0 4) 3) $generated@@180)))))
(let (($generated@@183  (=> (and (and ($generated@@177 $generated@@175) ($generated@@178 $generated@@175)) (and (= 0 $generated@@179) (= (ControlFlow 0 5) 4))) $generated@@182)))
$generated@@183)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 () Int)
(declare-fun $generated@@156 (Int) T@U)
(declare-fun $generated@@157 (Int) Bool)
(declare-fun $generated@@158 (Int) Int)
(declare-fun $generated@@159 (Int Int) Bool)
(declare-fun $generated@@160 (Int Int) Bool)
(declare-fun $generated@@161 (T@U Int Int) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@276 (Int Int) Int)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@330 (T@T T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@418 (T@T) T@U)
(declare-fun $generated@@442 () T@T)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@490 (T@U Int) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@595 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert  (and (forall (($generated@@162 Int) ) (! (= (type ($generated@@156 $generated@@162)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@156 $generated@@162))
)) (forall (($generated@@163 T@U) ($generated@@164 Int) ($generated@@165 Int) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164 $generated@@165)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@161 $generated@@163 $generated@@164 $generated@@165))
))))
(assert  (=> (<= 2 $generated@@155) (forall (($generated@@166 Int) ) (!  (=> (or ($generated@@157 $generated@@166) (and (not (= 2 $generated@@155)) (<= ($generated@@158 1) $generated@@166))) (and (forall (($generated@@167 Int) ) (!  (=> (<= ($generated@@158 1) $generated@@167) (=> (<= $generated@@167 $generated@@166) ($generated@@160 $generated@@167 $generated@@166)))
 :pattern ( ($generated@@159 $generated@@167 $generated@@166))
)) (= ($generated@@156 $generated@@166) ($generated@@161 $generated@@134 $generated@@166 $generated@@166))))
 :pattern ( ($generated@@156 $generated@@166))
))))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@66)
 :pattern ( ($generated@@168 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@172) $generated@@66)) ($generated@@137 $generated@@171 ($generated@@168 $generated@@172))) ($generated@@169 $generated@@171))
 :pattern ( ($generated@@137 $generated@@171 ($generated@@168 $generated@@172)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 16)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@79 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@69 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@79) (= (type $generated@@223) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@224) ($generated@@68 $generated@@4))) (= (type $generated@@226) $generated@@79)) (= (type $generated@@227) ($generated@@68 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@141)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@66) (= (type $generated@@234) $generated@@66)) (= (type $generated@@235) $generated@@150)) (= (type $generated@@236) $generated@@150)) (= ($generated@@137 ($generated@@229 $generated@@235 $generated@@236) ($generated@@140 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@137 ($generated@@229 $generated@@235 $generated@@236) ($generated@@140 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@141) (= (type $generated@@238) $generated@@141)) (= ($generated@@147 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@147 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@66)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@242) $generated@@66)) (= ($generated@@137 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@150) ($generated@@0 ($generated@@83 $generated@@241 $generated@@243))) ($generated@@230 $generated@@243 $generated@@242))
 :pattern ( ($generated@@83 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@137 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@66)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@247) $generated@@66)) (= ($generated@@137 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@150) ($generated@@0 ($generated@@83 $generated@@246 $generated@@248))) ($generated@@230 $generated@@248 $generated@@247))
 :pattern ( ($generated@@83 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@137 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@158 $generated@@249) $generated@@249)
 :pattern ( ($generated@@158 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@66) (= (type $generated@@257) $generated@@66)) (= (type $generated@@258) $generated@@150)) (= (type $generated@@259) $generated@@150)) (= (type $generated@@260) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@254 $generated@@260)) (= ($generated@@76 ($generated@@229 $generated@@258 $generated@@259) ($generated@@140 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@76 ($generated@@229 $generated@@258 $generated@@259) ($generated@@140 $generated@@256 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@70)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@141) (= ($generated@@139 $generated@@263) (= ($generated@@261 $generated@@263) $generated@@61)))
 :pattern ( ($generated@@139 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@141) ($generated@@139 $generated@@264)) (exists (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (and (and (= (type $generated@@265) $generated@@150) (= (type $generated@@266) $generated@@150)) (= $generated@@264 ($generated@@229 $generated@@265 $generated@@266)))
 :no-pattern (type $generated@@265)
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
)))
 :pattern ( ($generated@@139 $generated@@264))
)))
(assert  (and (and (forall (($generated@@271 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@271)) 17)) (forall (($generated@@272 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@272)) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
))) (forall (($generated@@273 T@T) ) (! (= (type ($generated@@267 $generated@@273)) ($generated@@269 $generated@@273))
 :pattern ( ($generated@@267 $generated@@273))
))))
(assert (forall (($generated@@274 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@274)) 0)
 :pattern ( ($generated@@267 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@2) (= ($generated@@137 $generated@@275 $generated@@134) (<= ($generated@@158 1) ($generated $generated@@275))))
 :pattern ( ($generated@@137 $generated@@275 $generated@@134))
)))
(assert  (=> (<= 1 $generated@@155) (forall (($generated@@277 Int) ($generated@@278 Int) ) (!  (=> (or ($generated@@160 ($generated@@158 $generated@@277) ($generated@@158 $generated@@278)) (and (not (= 1 $generated@@155)) (and (<= ($generated@@158 1) $generated@@277) (<= ($generated@@158 1) $generated@@278)))) (= ($generated@@159 ($generated@@158 $generated@@277) ($generated@@158 $generated@@278)) (exists (($generated@@279 Int) ) (! (= ($generated@@276 ($generated@@158 $generated@@277) $generated@@279) ($generated@@158 $generated@@278))
 :pattern ( ($generated@@276 $generated@@277 $generated@@279))
))))
 :weight 3
 :pattern ( ($generated@@159 ($generated@@158 $generated@@277) ($generated@@158 $generated@@278)))
))))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@150)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@66) (= (type $generated@@284) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@255 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@76 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@255 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@78 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@81 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@78 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@83 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 18)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@78 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@83 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@83 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 19)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@78 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@83 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@83 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@81 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@78 $generated@@328 $generated@@2)) (= ($generated@@169 $generated@@327) (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@328) (and (<= 0 ($generated ($generated@@83 $generated@@327 $generated@@329))) (<= ($generated ($generated@@83 $generated@@327 $generated@@329)) ($generated@@285 $generated@@327))))
 :pattern ( ($generated@@83 $generated@@327 $generated@@329))
)))))
 :pattern ( ($generated@@169 $generated@@327))
)))
(assert (forall (($generated@@331 T@T) ($generated@@332 T@U) ) (! (= (type ($generated@@330 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@330 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@150) ($generated@@230 $generated@@333 $generated@@134)) (and (= ($generated@@280 ($generated@@330 $generated@@2 $generated@@333)) $generated@@333) ($generated@@137 ($generated@@330 $generated@@2 $generated@@333) $generated@@134)))
 :pattern ( ($generated@@230 $generated@@333 $generated@@134))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@295 (type $generated@@334))))
(let (($generated@@336 ($generated@@294 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@293 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@292 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@336) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@291 $generated@@334))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@295 (type $generated@@339))))
(= (type ($generated@@338 $generated@@339)) ($generated@@78 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@295 (type $generated@@341))))
(let (($generated@@343 ($generated@@294 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@293 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@292 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@342) ($generated@@0 ($generated@@83 ($generated@@338 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@313 (type $generated@@345))))
(let (($generated@@347 ($generated@@312 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@311 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@310 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@309 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@313 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@78 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@313 (type $generated@@352))))
(let (($generated@@354 ($generated@@312 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@311 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@310 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@83 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert  (=> (<= 2 $generated@@155) (forall (($generated@@356 Int) ) (!  (=> (or ($generated@@157 ($generated@@158 $generated@@356)) (and (not (= 2 $generated@@155)) (<= ($generated@@158 1) $generated@@356))) (and (forall (($generated@@357 Int) ) (!  (=> (<= ($generated@@158 1) $generated@@357) (=> (<= $generated@@357 ($generated@@158 $generated@@356)) ($generated@@160 $generated@@357 ($generated@@158 $generated@@356))))
 :pattern ( ($generated@@159 $generated@@357 $generated@@356))
)) (= ($generated@@156 ($generated@@158 $generated@@356)) ($generated@@161 $generated@@134 ($generated@@158 $generated@@356) ($generated@@158 $generated@@356)))))
 :weight 3
 :pattern ( ($generated@@156 ($generated@@158 $generated@@356)))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@359) $generated@@66)) (= ($generated@@137 $generated@@358 ($generated@@168 $generated@@359)) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@358 $generated@@360)))) ($generated@@230 $generated@@360 $generated@@359))
 :pattern ( ($generated@@83 $generated@@358 $generated@@360))
))))
 :pattern ( ($generated@@137 $generated@@358 ($generated@@168 $generated@@359)))
)))
(assert  (=> (<= 2 $generated@@155) (forall (($generated@@361 Int) ) (!  (=> (or ($generated@@157 $generated@@361) (and (not (= 2 $generated@@155)) (<= ($generated@@158 1) $generated@@361))) ($generated@@137 ($generated@@156 $generated@@361) ($generated@@239 $generated@@134)))
 :pattern ( ($generated@@156 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@363) $generated@@66)) (= (type $generated@@364) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@362 ($generated@@239 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@150) ($generated@@0 ($generated@@83 $generated@@362 $generated@@365))) ($generated@@255 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@83 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@76 $generated@@362 ($generated@@239 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@367) $generated@@66)) (= (type $generated@@368) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@366 ($generated@@244 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@150) ($generated@@0 ($generated@@83 $generated@@366 $generated@@369))) ($generated@@255 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@83 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@76 $generated@@366 ($generated@@244 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= ($generated ($generated@@83 ($generated@@286 $generated@@371) $generated@@370)) 0))
 :pattern ( (let (($generated@@371 (type $generated@@370)))
($generated@@83 ($generated@@286 $generated@@371) $generated@@370)))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@295 (type $generated@@375))))
(let (($generated@@377 ($generated@@294 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@293 $generated@@150 $generated@@150)) (= (type $generated@@379) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@83 ($generated@@291 $generated@@378) ($generated@@148 ($generated@@330 $generated@@141 $generated@@379)))) (= ($generated@@83 ($generated@@373 $generated@@378) ($generated@@148 ($generated@@330 $generated@@141 $generated@@379))) ($generated@@149 ($generated@@330 $generated@@141 $generated@@379))))))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@313 (type $generated@@383))))
(let (($generated@@385 ($generated@@312 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@78 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@311 $generated@@150 $generated@@150)) (= (type $generated@@387) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@83 ($generated@@309 $generated@@386) ($generated@@148 ($generated@@330 $generated@@141 $generated@@387)))) (= ($generated@@83 ($generated@@381 $generated@@386) ($generated@@148 ($generated@@330 $generated@@141 $generated@@387))) ($generated@@149 ($generated@@330 $generated@@141 $generated@@387))))))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@294 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@293 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@83 ($generated@@338 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@83 ($generated@@291 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@83 ($generated@@373 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@388) $generated@@392))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@83 ($generated@@338 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@312 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@311 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@83 ($generated@@349 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@83 ($generated@@309 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@83 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@393) $generated@@397))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@83 ($generated@@349 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@66)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@293 $generated@@150 $generated@@150)) (= (type $generated@@402) $generated@@66)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@401) $generated@@405))) (and ($generated@@255 ($generated@@83 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@255 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@76 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@66)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@311 $generated@@150 $generated@@150)) (= (type $generated@@410) $generated@@66)) (= (type $generated@@411) $generated@@66)) (= (type $generated@@412) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@409) $generated@@413))) (and ($generated@@255 ($generated@@83 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@255 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@76 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 Int) ($generated@@416 Int) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@66) (= (type $generated@@417) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@161 $generated@@414 $generated@@415 $generated@@416) $generated@@417))  (and ($generated@@230 $generated@@417 $generated@@414) (and (<= ($generated ($generated@@330 $generated@@2 $generated@@417)) $generated@@415) ($generated@@159 ($generated ($generated@@330 $generated@@2 $generated@@417)) $generated@@416)))))
 :pattern ( ($generated@@83 ($generated@@161 $generated@@414 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@419 T@T) ) (! (= (type ($generated@@418 $generated@@419)) ($generated@@78 $generated@@419 $generated@@4))
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@313 (type $generated@@420))))
(let (($generated@@422 ($generated@@312 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@311 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@310 $generated@@422 $generated@@421)) (= ($generated@@309 $generated@@420) ($generated@@418 $generated@@422))))))
 :pattern ( ($generated@@309 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@313 (type $generated@@423))))
(let (($generated@@425 ($generated@@312 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@311 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@310 $generated@@425 $generated@@424)) (= ($generated@@349 $generated@@423) ($generated@@418 $generated@@424))))))
 :pattern ( ($generated@@349 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@313 (type $generated@@426))))
(let (($generated@@428 ($generated@@312 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@311 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@310 $generated@@428 $generated@@427)) (= ($generated@@380 $generated@@426) ($generated@@418 $generated@@150))))))
 :pattern ( ($generated@@380 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@295 (type $generated@@429))))
(let (($generated@@431 ($generated@@294 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@293 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@292 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@150) (= (type $generated@@433) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@372 $generated@@429) ($generated@@280 ($generated@@229 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@372 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@313 (type $generated@@434))))
(let (($generated@@436 ($generated@@312 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@311 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@310 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@150) (= (type $generated@@438) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@380 $generated@@434) ($generated@@280 ($generated@@229 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@380 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@150) ($generated@@230 $generated@@439 $generated@@46)) (and (= ($generated@@280 ($generated@@330 $generated@@2 $generated@@439)) $generated@@439) ($generated@@137 ($generated@@330 $generated@@2 $generated@@439) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@439 $generated@@46))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@150) ($generated@@230 $generated@@440 $generated@@47)) (and (= ($generated@@280 ($generated@@330 $generated@@3 $generated@@440)) $generated@@440) ($generated@@137 ($generated@@330 $generated@@3 $generated@@440) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@440 $generated@@47))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@150) ($generated@@230 $generated@@441 $generated@@44)) (and (= ($generated@@280 ($generated@@330 $generated@@4 $generated@@441)) $generated@@441) ($generated@@137 ($generated@@330 $generated@@4 $generated@@441) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@441 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@442) 20))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@150) ($generated@@230 $generated@@443 $generated@@45)) (and (= ($generated@@280 ($generated@@330 $generated@@442 $generated@@443)) $generated@@443) ($generated@@137 ($generated@@330 $generated@@442 $generated@@443) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@443 $generated@@45))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (= (type $generated@@445) $generated@@66) (= ($generated@@230 ($generated@@280 $generated@@444) $generated@@445) ($generated@@137 $generated@@444 $generated@@445)))
 :pattern ( ($generated@@230 ($generated@@280 $generated@@444) $generated@@445))
)))
(assert  (=> (<= 1 $generated@@155) (forall (($generated@@446 Int) ($generated@@447 Int) ) (!  (=> (or ($generated@@160 $generated@@446 $generated@@447) (and (not (= 1 $generated@@155)) (and (<= ($generated@@158 1) $generated@@446) (<= ($generated@@158 1) $generated@@447)))) (= ($generated@@159 $generated@@446 $generated@@447) (exists (($generated@@448 Int) ) (! (= ($generated@@276 $generated@@446 $generated@@448) $generated@@447)
 :pattern ( ($generated@@276 $generated@@446 $generated@@448))
))))
 :pattern ( ($generated@@159 $generated@@446 $generated@@447))
))))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@81 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@78 $generated@@450 $generated@@2)) (<= 0 ($generated@@285 $generated@@449))))
 :pattern ( ($generated@@285 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@270 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@269 $generated@@452)) (<= 0 ($generated@@268 $generated@@451))))
 :pattern ( ($generated@@268 $generated@@451))
)))
(assert  (=> (<= 1 $generated@@155) (forall (($generated@@453 Int) ($generated@@454 Int) ) (!  (=> (or ($generated@@160 $generated@@453 $generated@@454) (and (not (= 1 $generated@@155)) (and (<= ($generated@@158 1) $generated@@453) (<= ($generated@@158 1) $generated@@454)))) true)
 :pattern ( ($generated@@159 $generated@@453 $generated@@454))
))))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@66)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@455 ($generated@@398 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@398 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@66)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@459 ($generated@@398 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@398 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@66) (= (type $generated@@464) $generated@@66)) (= ($generated@@74 ($generated@@398 $generated@@463 $generated@@464)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@66)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@66) (= (type $generated@@468) $generated@@66)) (= ($generated@@465 ($generated@@406 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@406 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@66)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@66) (= (type $generated@@472) $generated@@66)) (= ($generated@@469 ($generated@@406 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@406 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@66) (= (type $generated@@474) $generated@@66)) (= ($generated@@74 ($generated@@406 $generated@@473 $generated@@474)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@150) (= (type $generated@@476) $generated@@150)) (= ($generated@@261 ($generated@@229 $generated@@475 $generated@@476)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@66) (= (type $generated@@480) $generated@@66)) (= ($generated@@477 ($generated@@140 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@140 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@66)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@66) (= (type $generated@@484) $generated@@66)) (= ($generated@@481 ($generated@@140 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@140 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@150) (= (type $generated@@486) $generated@@150)) (= ($generated@@148 ($generated@@229 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@229 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@150) (= (type $generated@@488) $generated@@150)) (= ($generated@@149 ($generated@@229 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@229 $generated@@487 $generated@@488))
)))
(assert  (and (forall (($generated@@491 T@U) ) (! (= (type ($generated@@489 $generated@@491)) $generated@@66)
 :pattern ( ($generated@@489 $generated@@491))
)) (forall (($generated@@492 T@U) ($generated@@493 Int) ) (! (let (($generated@@494 ($generated@@270 (type $generated@@492))))
(= (type ($generated@@490 $generated@@492 $generated@@493)) $generated@@494))
 :pattern ( ($generated@@490 $generated@@492 $generated@@493))
))))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@269 $generated@@150)) (= (type $generated@@496) $generated@@66)) (= (type $generated@@497) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@495 ($generated@@489 $generated@@496) $generated@@497) (forall (($generated@@498 Int) ) (!  (=> (and (<= 0 $generated@@498) (< $generated@@498 ($generated@@268 $generated@@495))) ($generated@@255 ($generated@@490 $generated@@495 $generated@@498) $generated@@496 $generated@@497))
 :pattern ( ($generated@@490 $generated@@495 $generated@@498))
))))
 :pattern ( ($generated@@76 $generated@@495 ($generated@@489 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@500 Int) ) (! (= ($generated@@499 ($generated@@77 $generated@@500)) $generated@@500)
 :pattern ( ($generated@@77 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@66)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@501 ($generated@@239 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@239 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@74 ($generated@@239 $generated@@504)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@66)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@505 ($generated@@244 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@244 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@74 ($generated@@244 $generated@@508)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@66)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@66) (= ($generated@@509 ($generated@@168 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@168 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@74 ($generated@@168 $generated@@512)) $generated@@56))
 :pattern ( ($generated@@168 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@66)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@66) (= ($generated@@513 ($generated@@489 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@489 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@66) (= ($generated@@74 ($generated@@489 $generated@@516)) $generated@@57))
 :pattern ( ($generated@@489 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
(= ($generated@@330 $generated@@518 ($generated@@280 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@280 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@293 $generated@@150 $generated@@150)) (= (type $generated@@520) $generated@@66)) (= (type $generated@@521) $generated@@66)) (= ($generated@@137 $generated@@519 ($generated@@398 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@519) $generated@@522))) (and ($generated@@230 ($generated@@83 ($generated@@373 $generated@@519) $generated@@522) $generated@@521) ($generated@@230 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@519) $generated@@522))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@137 $generated@@519 ($generated@@398 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@311 $generated@@150 $generated@@150)) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) (= ($generated@@137 $generated@@523 ($generated@@406 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@523) $generated@@526))) (and ($generated@@230 ($generated@@83 ($generated@@381 $generated@@523) $generated@@526) $generated@@525) ($generated@@230 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@523) $generated@@526))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@137 $generated@@523 ($generated@@406 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@150) (= (type $generated@@530) $generated@@150)) (< ($generated@@527 $generated@@529) ($generated@@528 ($generated@@229 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@229 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@150) (= (type $generated@@532) $generated@@150)) (< ($generated@@527 $generated@@532) ($generated@@528 ($generated@@229 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@229 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@150) (= (type $generated@@534) $generated@@66)) (= (type $generated@@535) $generated@@66)) ($generated@@230 $generated@@533 ($generated@@398 $generated@@534 $generated@@535))) (and (= ($generated@@280 ($generated@@330 ($generated@@293 $generated@@150 $generated@@150) $generated@@533)) $generated@@533) ($generated@@137 ($generated@@330 ($generated@@293 $generated@@150 $generated@@150) $generated@@533) ($generated@@398 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@230 $generated@@533 ($generated@@398 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@150) (= (type $generated@@537) $generated@@66)) (= (type $generated@@538) $generated@@66)) ($generated@@230 $generated@@536 ($generated@@406 $generated@@537 $generated@@538))) (and (= ($generated@@280 ($generated@@330 ($generated@@311 $generated@@150 $generated@@150) $generated@@536)) $generated@@536) ($generated@@137 ($generated@@330 ($generated@@311 $generated@@150 $generated@@150) $generated@@536) ($generated@@406 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@230 $generated@@536 ($generated@@406 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@66) (= (type $generated@@540) $generated@@66)) (= (type $generated@@541) $generated@@150)) ($generated@@230 $generated@@541 ($generated@@140 $generated@@539 $generated@@540))) (and (= ($generated@@280 ($generated@@330 $generated@@141 $generated@@541)) $generated@@541) ($generated@@137 ($generated@@330 $generated@@141 $generated@@541) ($generated@@140 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@230 $generated@@541 ($generated@@140 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@83 ($generated@@418 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@83 ($generated@@418 $generated@@543) $generated@@542)))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@71)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@66) (= (type $generated@@547) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@546 $generated@@547)) $generated@@62) (= ($generated@@544 ($generated@@140 $generated@@546 $generated@@547)) $generated@@64)))
 :pattern ( ($generated@@140 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 Int) ($generated@@549 Int) ) (! (= ($generated@@276 $generated@@548 $generated@@549) (* $generated@@548 $generated@@549))
 :pattern ( ($generated@@276 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@141) (= ($generated@@527 ($generated@@280 $generated@@550)) ($generated@@528 $generated@@550)))
 :pattern ( ($generated@@527 ($generated@@280 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@150) ($generated@@230 $generated@@551 ($generated@@77 0))) (and (= ($generated@@280 ($generated@@330 $generated@@2 $generated@@551)) $generated@@551) ($generated@@137 ($generated@@330 ($generated@@78 $generated@@150 $generated@@4) $generated@@551) ($generated@@77 0))))
 :pattern ( ($generated@@230 $generated@@551 ($generated@@77 0)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@150) (= (type $generated@@553) $generated@@66)) ($generated@@230 $generated@@552 ($generated@@239 $generated@@553))) (and (= ($generated@@280 ($generated@@330 ($generated@@78 $generated@@150 $generated@@4) $generated@@552)) $generated@@552) ($generated@@137 ($generated@@330 ($generated@@78 $generated@@150 $generated@@4) $generated@@552) ($generated@@239 $generated@@553))))
 :pattern ( ($generated@@230 $generated@@552 ($generated@@239 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@150) (= (type $generated@@555) $generated@@66)) ($generated@@230 $generated@@554 ($generated@@244 $generated@@555))) (and (= ($generated@@280 ($generated@@330 ($generated@@78 $generated@@150 $generated@@4) $generated@@554)) $generated@@554) ($generated@@137 ($generated@@330 ($generated@@78 $generated@@150 $generated@@4) $generated@@554) ($generated@@244 $generated@@555))))
 :pattern ( ($generated@@230 $generated@@554 ($generated@@244 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@150) (= (type $generated@@557) $generated@@66)) ($generated@@230 $generated@@556 ($generated@@168 $generated@@557))) (and (= ($generated@@280 ($generated@@330 ($generated@@78 $generated@@150 $generated@@2) $generated@@556)) $generated@@556) ($generated@@137 ($generated@@330 ($generated@@78 $generated@@150 $generated@@2) $generated@@556) ($generated@@168 $generated@@557))))
 :pattern ( ($generated@@230 $generated@@556 ($generated@@168 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@150) (= (type $generated@@559) $generated@@66)) ($generated@@230 $generated@@558 ($generated@@489 $generated@@559))) (and (= ($generated@@280 ($generated@@330 ($generated@@269 $generated@@150) $generated@@558)) $generated@@558) ($generated@@137 ($generated@@330 ($generated@@269 $generated@@150) $generated@@558) ($generated@@489 $generated@@559))))
 :pattern ( ($generated@@230 $generated@@558 ($generated@@489 $generated@@559)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@63))
(assert (= ($generated@@544 $generated@@134) $generated@@65))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@561) $generated@@66)) (= (type $generated@@562) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@560 ($generated@@168 $generated@@561) $generated@@562) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@560 $generated@@563)))) ($generated@@255 $generated@@563 $generated@@561 $generated@@562))
 :pattern ( ($generated@@83 $generated@@560 $generated@@563))
))))
 :pattern ( ($generated@@76 $generated@@560 ($generated@@168 $generated@@561) $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@141) (= (type $generated@@565) $generated@@66)) (= (type $generated@@566) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@254 $generated@@566) (and ($generated@@139 $generated@@564) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@66) ($generated@@76 $generated@@564 ($generated@@140 $generated@@565 $generated@@567) $generated@@566))
 :pattern ( ($generated@@76 $generated@@564 ($generated@@140 $generated@@565 $generated@@567) $generated@@566))
))))) ($generated@@255 ($generated@@148 $generated@@564) $generated@@565 $generated@@566))
 :pattern ( ($generated@@255 ($generated@@148 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@141) (= (type $generated@@569) $generated@@66)) (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@254 $generated@@570) (and ($generated@@139 $generated@@568) (exists (($generated@@571 T@U) ) (!  (and (= (type $generated@@571) $generated@@66) ($generated@@76 $generated@@568 ($generated@@140 $generated@@571 $generated@@569) $generated@@570))
 :pattern ( ($generated@@76 $generated@@568 ($generated@@140 $generated@@571 $generated@@569) $generated@@570))
))))) ($generated@@255 ($generated@@149 $generated@@568) $generated@@569 $generated@@570))
 :pattern ( ($generated@@255 ($generated@@149 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@150) (= (type $generated@@573) $generated@@150)) (= ($generated@@229 ($generated@@250 $generated@@572) ($generated@@250 $generated@@573)) ($generated@@250 ($generated@@229 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@229 ($generated@@250 $generated@@572) ($generated@@250 $generated@@573)))
)))
(assert (forall (($generated@@574 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@158 $generated@@574))) ($generated@@250 ($generated@@280 ($generated@@8 $generated@@574))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@158 $generated@@574))))
)))
(assert (forall (($generated@@575 T@U) ) (! (= ($generated@@280 ($generated@@250 $generated@@575)) ($generated@@250 ($generated@@280 $generated@@575)))
 :pattern ( ($generated@@280 ($generated@@250 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 ($generated@@270 (type $generated@@576))))
 (=> (and (= (type $generated@@576) ($generated@@269 $generated@@577)) (= ($generated@@268 $generated@@576) 0)) (= $generated@@576 ($generated@@267 $generated@@577))))
 :pattern ( ($generated@@268 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@579)))
 (=> (and (and (= (type $generated@@578) ($generated@@78 $generated@@581 $generated@@2)) (= (type $generated@@580) $generated@@2)) (<= 0 ($generated $generated@@580))) (= ($generated@@285 ($generated@@84 $generated@@578 $generated@@579 $generated@@580)) (+ (- ($generated@@285 $generated@@578) ($generated ($generated@@83 $generated@@578 $generated@@579))) ($generated $generated@@580)))))
 :pattern ( ($generated@@285 ($generated@@84 $generated@@578 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@583) $generated@@2)) ($generated@@76 $generated@@583 $generated@@46 $generated@@582))
 :pattern ( ($generated@@76 $generated@@583 $generated@@46 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@585) $generated@@3)) ($generated@@76 $generated@@585 $generated@@47 $generated@@584))
 :pattern ( ($generated@@76 $generated@@585 $generated@@47 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@587) $generated@@4)) ($generated@@76 $generated@@587 $generated@@44 $generated@@586))
 :pattern ( ($generated@@76 $generated@@587 $generated@@44 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@589) $generated@@442)) ($generated@@76 $generated@@589 $generated@@45 $generated@@588))
 :pattern ( ($generated@@76 $generated@@589 $generated@@45 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@591) $generated@@150)) ($generated@@76 $generated@@591 $generated@@48 $generated@@590))
 :pattern ( ($generated@@76 $generated@@591 $generated@@48 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@269 $generated@@150)) (= (type $generated@@593) $generated@@66)) (= ($generated@@137 $generated@@592 ($generated@@489 $generated@@593)) (forall (($generated@@594 Int) ) (!  (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@268 $generated@@592))) ($generated@@230 ($generated@@490 $generated@@592 $generated@@594) $generated@@593))
 :pattern ( ($generated@@490 $generated@@592 $generated@@594))
))))
 :pattern ( ($generated@@137 $generated@@592 ($generated@@489 $generated@@593)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 Int) ) (!  (=> (= (type $generated@@596) ($generated@@269 $generated@@150)) (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@268 $generated@@596))) (< ($generated@@528 ($generated@@330 $generated@@141 ($generated@@490 $generated@@596 $generated@@597))) ($generated@@595 $generated@@596))))
 :pattern ( ($generated@@528 ($generated@@330 $generated@@141 ($generated@@490 $generated@@596 $generated@@597))))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@293 $generated@@150 $generated@@150)) (= (type $generated@@599) $generated@@66)) (= (type $generated@@600) $generated@@66)) ($generated@@137 $generated@@598 ($generated@@398 $generated@@599 $generated@@600))) (and (and ($generated@@137 ($generated@@291 $generated@@598) ($generated@@239 $generated@@599)) ($generated@@137 ($generated@@338 $generated@@598) ($generated@@239 $generated@@600))) ($generated@@137 ($generated@@372 $generated@@598) ($generated@@239 ($generated@@140 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@137 $generated@@598 ($generated@@398 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@311 $generated@@150 $generated@@150)) (= (type $generated@@602) $generated@@66)) (= (type $generated@@603) $generated@@66)) ($generated@@137 $generated@@601 ($generated@@406 $generated@@602 $generated@@603))) (and (and ($generated@@137 ($generated@@309 $generated@@601) ($generated@@244 $generated@@602)) ($generated@@137 ($generated@@349 $generated@@601) ($generated@@244 $generated@@603))) ($generated@@137 ($generated@@380 $generated@@601) ($generated@@244 ($generated@@140 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@137 $generated@@601 ($generated@@406 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@2) ($generated@@137 $generated@@604 $generated@@46))
 :pattern ( ($generated@@137 $generated@@604 $generated@@46))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@3) ($generated@@137 $generated@@605 $generated@@47))
 :pattern ( ($generated@@137 $generated@@605 $generated@@47))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@4) ($generated@@137 $generated@@606 $generated@@44))
 :pattern ( ($generated@@137 $generated@@606 $generated@@44))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@442) ($generated@@137 $generated@@607 $generated@@45))
 :pattern ( ($generated@@137 $generated@@607 $generated@@45))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@150) ($generated@@137 $generated@@608 $generated@@48))
 :pattern ( ($generated@@137 $generated@@608 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () Int)
(declare-fun $generated@@613 (T@U) Bool)
(assert  (and (and (= (type $generated@@609) ($generated@@175 $generated@@79 $generated@@4)) (= (type $generated@@610) $generated@@79)) (= (type $generated@@611) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@614  (=> (and (= $generated@@609 ($generated@@174 $generated@@610 $generated@@611 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@615 Int) ) (!  (=> true (= ($generated@@0 ($generated@@83 ($generated@@156 $generated@@612) ($generated@@280 ($generated@@8 $generated@@615))))  (and (<= ($generated@@158 1) $generated@@615) ($generated@@159 $generated@@615 $generated@@612))))
 :pattern ( ($generated@@83 ($generated@@156 $generated@@612) ($generated@@280 ($generated@@8 $generated@@615))))
)))))
(let (($generated@@616  (=> (and (and (and ($generated@@254 $generated@@611) ($generated@@613 $generated@@611)) (<= ($generated@@158 1) $generated@@612)) (and (= 3 $generated@@155) (= (ControlFlow 0 3) 2))) $generated@@614)))
$generated@@616)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 () Int)
(declare-fun $generated@@156 (Int) T@U)
(declare-fun $generated@@157 (Int) Bool)
(declare-fun $generated@@158 (Int) Int)
(declare-fun $generated@@159 (Int Int) Bool)
(declare-fun $generated@@160 (Int Int) Bool)
(declare-fun $generated@@161 (T@U Int Int) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@276 (Int Int) Int)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@330 (T@T T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@418 (T@T) T@U)
(declare-fun $generated@@442 () T@T)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@490 (T@U Int) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@595 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert  (and (forall (($generated@@162 Int) ) (! (= (type ($generated@@156 $generated@@162)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@156 $generated@@162))
)) (forall (($generated@@163 T@U) ($generated@@164 Int) ($generated@@165 Int) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164 $generated@@165)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@161 $generated@@163 $generated@@164 $generated@@165))
))))
(assert  (=> (<= 2 $generated@@155) (forall (($generated@@166 Int) ) (!  (=> (or ($generated@@157 $generated@@166) (and (not (= 2 $generated@@155)) (<= ($generated@@158 1) $generated@@166))) (and (forall (($generated@@167 Int) ) (!  (=> (<= ($generated@@158 1) $generated@@167) (=> (<= $generated@@167 $generated@@166) ($generated@@160 $generated@@167 $generated@@166)))
 :pattern ( ($generated@@159 $generated@@167 $generated@@166))
)) (= ($generated@@156 $generated@@166) ($generated@@161 $generated@@134 $generated@@166 $generated@@166))))
 :pattern ( ($generated@@156 $generated@@166))
))))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@66)
 :pattern ( ($generated@@168 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@172) $generated@@66)) ($generated@@137 $generated@@171 ($generated@@168 $generated@@172))) ($generated@@169 $generated@@171))
 :pattern ( ($generated@@137 $generated@@171 ($generated@@168 $generated@@172)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 16)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@79 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@69 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@79) (= (type $generated@@223) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@224) ($generated@@68 $generated@@4))) (= (type $generated@@226) $generated@@79)) (= (type $generated@@227) ($generated@@68 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@141)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@66) (= (type $generated@@234) $generated@@66)) (= (type $generated@@235) $generated@@150)) (= (type $generated@@236) $generated@@150)) (= ($generated@@137 ($generated@@229 $generated@@235 $generated@@236) ($generated@@140 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@137 ($generated@@229 $generated@@235 $generated@@236) ($generated@@140 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@141) (= (type $generated@@238) $generated@@141)) (= ($generated@@147 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@147 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@66)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@242) $generated@@66)) (= ($generated@@137 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@150) ($generated@@0 ($generated@@83 $generated@@241 $generated@@243))) ($generated@@230 $generated@@243 $generated@@242))
 :pattern ( ($generated@@83 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@137 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@66)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@247) $generated@@66)) (= ($generated@@137 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@150) ($generated@@0 ($generated@@83 $generated@@246 $generated@@248))) ($generated@@230 $generated@@248 $generated@@247))
 :pattern ( ($generated@@83 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@137 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@158 $generated@@249) $generated@@249)
 :pattern ( ($generated@@158 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@66) (= (type $generated@@257) $generated@@66)) (= (type $generated@@258) $generated@@150)) (= (type $generated@@259) $generated@@150)) (= (type $generated@@260) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@254 $generated@@260)) (= ($generated@@76 ($generated@@229 $generated@@258 $generated@@259) ($generated@@140 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@76 ($generated@@229 $generated@@258 $generated@@259) ($generated@@140 $generated@@256 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@70)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@141) (= ($generated@@139 $generated@@263) (= ($generated@@261 $generated@@263) $generated@@61)))
 :pattern ( ($generated@@139 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@141) ($generated@@139 $generated@@264)) (exists (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (and (and (= (type $generated@@265) $generated@@150) (= (type $generated@@266) $generated@@150)) (= $generated@@264 ($generated@@229 $generated@@265 $generated@@266)))
 :no-pattern (type $generated@@265)
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
)))
 :pattern ( ($generated@@139 $generated@@264))
)))
(assert  (and (and (forall (($generated@@271 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@271)) 17)) (forall (($generated@@272 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@272)) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
))) (forall (($generated@@273 T@T) ) (! (= (type ($generated@@267 $generated@@273)) ($generated@@269 $generated@@273))
 :pattern ( ($generated@@267 $generated@@273))
))))
(assert (forall (($generated@@274 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@274)) 0)
 :pattern ( ($generated@@267 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@2) (= ($generated@@137 $generated@@275 $generated@@134) (<= ($generated@@158 1) ($generated $generated@@275))))
 :pattern ( ($generated@@137 $generated@@275 $generated@@134))
)))
(assert  (=> (<= 1 $generated@@155) (forall (($generated@@277 Int) ($generated@@278 Int) ) (!  (=> (or ($generated@@160 ($generated@@158 $generated@@277) ($generated@@158 $generated@@278)) (and (not (= 1 $generated@@155)) (and (<= ($generated@@158 1) $generated@@277) (<= ($generated@@158 1) $generated@@278)))) (= ($generated@@159 ($generated@@158 $generated@@277) ($generated@@158 $generated@@278)) (exists (($generated@@279 Int) ) (! (= ($generated@@276 ($generated@@158 $generated@@277) $generated@@279) ($generated@@158 $generated@@278))
 :pattern ( ($generated@@276 $generated@@277 $generated@@279))
))))
 :weight 3
 :pattern ( ($generated@@159 ($generated@@158 $generated@@277) ($generated@@158 $generated@@278)))
))))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@150)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@66) (= (type $generated@@284) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@255 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@76 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@255 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@78 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@81 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@78 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@83 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 18)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@78 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@83 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@83 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 19)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@78 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@83 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@83 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@81 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@78 $generated@@328 $generated@@2)) (= ($generated@@169 $generated@@327) (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@328) (and (<= 0 ($generated ($generated@@83 $generated@@327 $generated@@329))) (<= ($generated ($generated@@83 $generated@@327 $generated@@329)) ($generated@@285 $generated@@327))))
 :pattern ( ($generated@@83 $generated@@327 $generated@@329))
)))))
 :pattern ( ($generated@@169 $generated@@327))
)))
(assert (forall (($generated@@331 T@T) ($generated@@332 T@U) ) (! (= (type ($generated@@330 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@330 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@150) ($generated@@230 $generated@@333 $generated@@134)) (and (= ($generated@@280 ($generated@@330 $generated@@2 $generated@@333)) $generated@@333) ($generated@@137 ($generated@@330 $generated@@2 $generated@@333) $generated@@134)))
 :pattern ( ($generated@@230 $generated@@333 $generated@@134))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@295 (type $generated@@334))))
(let (($generated@@336 ($generated@@294 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@293 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@292 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@336) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@291 $generated@@334))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@295 (type $generated@@339))))
(= (type ($generated@@338 $generated@@339)) ($generated@@78 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@295 (type $generated@@341))))
(let (($generated@@343 ($generated@@294 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@293 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@292 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@342) ($generated@@0 ($generated@@83 ($generated@@338 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@313 (type $generated@@345))))
(let (($generated@@347 ($generated@@312 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@311 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@310 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@309 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@313 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@78 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@313 (type $generated@@352))))
(let (($generated@@354 ($generated@@312 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@311 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@310 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@83 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert  (=> (<= 2 $generated@@155) (forall (($generated@@356 Int) ) (!  (=> (or ($generated@@157 ($generated@@158 $generated@@356)) (and (not (= 2 $generated@@155)) (<= ($generated@@158 1) $generated@@356))) (and (forall (($generated@@357 Int) ) (!  (=> (<= ($generated@@158 1) $generated@@357) (=> (<= $generated@@357 ($generated@@158 $generated@@356)) ($generated@@160 $generated@@357 ($generated@@158 $generated@@356))))
 :pattern ( ($generated@@159 $generated@@357 $generated@@356))
)) (= ($generated@@156 ($generated@@158 $generated@@356)) ($generated@@161 $generated@@134 ($generated@@158 $generated@@356) ($generated@@158 $generated@@356)))))
 :weight 3
 :pattern ( ($generated@@156 ($generated@@158 $generated@@356)))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@359) $generated@@66)) (= ($generated@@137 $generated@@358 ($generated@@168 $generated@@359)) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@358 $generated@@360)))) ($generated@@230 $generated@@360 $generated@@359))
 :pattern ( ($generated@@83 $generated@@358 $generated@@360))
))))
 :pattern ( ($generated@@137 $generated@@358 ($generated@@168 $generated@@359)))
)))
(assert  (=> (<= 2 $generated@@155) (forall (($generated@@361 Int) ) (!  (=> (or ($generated@@157 $generated@@361) (and (not (= 2 $generated@@155)) (<= ($generated@@158 1) $generated@@361))) ($generated@@137 ($generated@@156 $generated@@361) ($generated@@239 $generated@@134)))
 :pattern ( ($generated@@156 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@363) $generated@@66)) (= (type $generated@@364) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@362 ($generated@@239 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@150) ($generated@@0 ($generated@@83 $generated@@362 $generated@@365))) ($generated@@255 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@83 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@76 $generated@@362 ($generated@@239 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@367) $generated@@66)) (= (type $generated@@368) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@366 ($generated@@244 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@150) ($generated@@0 ($generated@@83 $generated@@366 $generated@@369))) ($generated@@255 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@83 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@76 $generated@@366 ($generated@@244 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= ($generated ($generated@@83 ($generated@@286 $generated@@371) $generated@@370)) 0))
 :pattern ( (let (($generated@@371 (type $generated@@370)))
($generated@@83 ($generated@@286 $generated@@371) $generated@@370)))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@295 (type $generated@@375))))
(let (($generated@@377 ($generated@@294 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@293 $generated@@150 $generated@@150)) (= (type $generated@@379) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@83 ($generated@@291 $generated@@378) ($generated@@148 ($generated@@330 $generated@@141 $generated@@379)))) (= ($generated@@83 ($generated@@373 $generated@@378) ($generated@@148 ($generated@@330 $generated@@141 $generated@@379))) ($generated@@149 ($generated@@330 $generated@@141 $generated@@379))))))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@313 (type $generated@@383))))
(let (($generated@@385 ($generated@@312 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@78 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@311 $generated@@150 $generated@@150)) (= (type $generated@@387) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@83 ($generated@@309 $generated@@386) ($generated@@148 ($generated@@330 $generated@@141 $generated@@387)))) (= ($generated@@83 ($generated@@381 $generated@@386) ($generated@@148 ($generated@@330 $generated@@141 $generated@@387))) ($generated@@149 ($generated@@330 $generated@@141 $generated@@387))))))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@294 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@293 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@83 ($generated@@338 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@83 ($generated@@291 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@83 ($generated@@373 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@388) $generated@@392))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@83 ($generated@@338 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@312 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@311 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@83 ($generated@@349 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@83 ($generated@@309 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@83 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@393) $generated@@397))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@83 ($generated@@349 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@66)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@293 $generated@@150 $generated@@150)) (= (type $generated@@402) $generated@@66)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@401) $generated@@405))) (and ($generated@@255 ($generated@@83 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@255 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@76 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@66)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@311 $generated@@150 $generated@@150)) (= (type $generated@@410) $generated@@66)) (= (type $generated@@411) $generated@@66)) (= (type $generated@@412) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@409) $generated@@413))) (and ($generated@@255 ($generated@@83 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@255 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@76 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 Int) ($generated@@416 Int) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@66) (= (type $generated@@417) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@161 $generated@@414 $generated@@415 $generated@@416) $generated@@417))  (and ($generated@@230 $generated@@417 $generated@@414) (and (<= ($generated ($generated@@330 $generated@@2 $generated@@417)) $generated@@415) ($generated@@159 ($generated ($generated@@330 $generated@@2 $generated@@417)) $generated@@416)))))
 :pattern ( ($generated@@83 ($generated@@161 $generated@@414 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@419 T@T) ) (! (= (type ($generated@@418 $generated@@419)) ($generated@@78 $generated@@419 $generated@@4))
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@313 (type $generated@@420))))
(let (($generated@@422 ($generated@@312 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@311 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@310 $generated@@422 $generated@@421)) (= ($generated@@309 $generated@@420) ($generated@@418 $generated@@422))))))
 :pattern ( ($generated@@309 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@313 (type $generated@@423))))
(let (($generated@@425 ($generated@@312 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@311 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@310 $generated@@425 $generated@@424)) (= ($generated@@349 $generated@@423) ($generated@@418 $generated@@424))))))
 :pattern ( ($generated@@349 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@313 (type $generated@@426))))
(let (($generated@@428 ($generated@@312 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@311 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@310 $generated@@428 $generated@@427)) (= ($generated@@380 $generated@@426) ($generated@@418 $generated@@150))))))
 :pattern ( ($generated@@380 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@295 (type $generated@@429))))
(let (($generated@@431 ($generated@@294 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@293 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@292 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@150) (= (type $generated@@433) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@372 $generated@@429) ($generated@@280 ($generated@@229 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@372 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@313 (type $generated@@434))))
(let (($generated@@436 ($generated@@312 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@311 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@310 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@150) (= (type $generated@@438) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@380 $generated@@434) ($generated@@280 ($generated@@229 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@380 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@150) ($generated@@230 $generated@@439 $generated@@46)) (and (= ($generated@@280 ($generated@@330 $generated@@2 $generated@@439)) $generated@@439) ($generated@@137 ($generated@@330 $generated@@2 $generated@@439) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@439 $generated@@46))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@150) ($generated@@230 $generated@@440 $generated@@47)) (and (= ($generated@@280 ($generated@@330 $generated@@3 $generated@@440)) $generated@@440) ($generated@@137 ($generated@@330 $generated@@3 $generated@@440) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@440 $generated@@47))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@150) ($generated@@230 $generated@@441 $generated@@44)) (and (= ($generated@@280 ($generated@@330 $generated@@4 $generated@@441)) $generated@@441) ($generated@@137 ($generated@@330 $generated@@4 $generated@@441) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@441 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@442) 20))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@150) ($generated@@230 $generated@@443 $generated@@45)) (and (= ($generated@@280 ($generated@@330 $generated@@442 $generated@@443)) $generated@@443) ($generated@@137 ($generated@@330 $generated@@442 $generated@@443) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@443 $generated@@45))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (= (type $generated@@445) $generated@@66) (= ($generated@@230 ($generated@@280 $generated@@444) $generated@@445) ($generated@@137 $generated@@444 $generated@@445)))
 :pattern ( ($generated@@230 ($generated@@280 $generated@@444) $generated@@445))
)))
(assert  (=> (<= 1 $generated@@155) (forall (($generated@@446 Int) ($generated@@447 Int) ) (!  (=> (or ($generated@@160 $generated@@446 $generated@@447) (and (not (= 1 $generated@@155)) (and (<= ($generated@@158 1) $generated@@446) (<= ($generated@@158 1) $generated@@447)))) (= ($generated@@159 $generated@@446 $generated@@447) (exists (($generated@@448 Int) ) (! (= ($generated@@276 $generated@@446 $generated@@448) $generated@@447)
 :pattern ( ($generated@@276 $generated@@446 $generated@@448))
))))
 :pattern ( ($generated@@159 $generated@@446 $generated@@447))
))))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@81 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@78 $generated@@450 $generated@@2)) (<= 0 ($generated@@285 $generated@@449))))
 :pattern ( ($generated@@285 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@270 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@269 $generated@@452)) (<= 0 ($generated@@268 $generated@@451))))
 :pattern ( ($generated@@268 $generated@@451))
)))
(assert  (=> (<= 1 $generated@@155) (forall (($generated@@453 Int) ($generated@@454 Int) ) (!  (=> (or ($generated@@160 $generated@@453 $generated@@454) (and (not (= 1 $generated@@155)) (and (<= ($generated@@158 1) $generated@@453) (<= ($generated@@158 1) $generated@@454)))) true)
 :pattern ( ($generated@@159 $generated@@453 $generated@@454))
))))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@66)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@455 ($generated@@398 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@398 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@66)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@459 ($generated@@398 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@398 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@66) (= (type $generated@@464) $generated@@66)) (= ($generated@@74 ($generated@@398 $generated@@463 $generated@@464)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@66)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@66) (= (type $generated@@468) $generated@@66)) (= ($generated@@465 ($generated@@406 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@406 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@66)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@66) (= (type $generated@@472) $generated@@66)) (= ($generated@@469 ($generated@@406 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@406 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@66) (= (type $generated@@474) $generated@@66)) (= ($generated@@74 ($generated@@406 $generated@@473 $generated@@474)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@150) (= (type $generated@@476) $generated@@150)) (= ($generated@@261 ($generated@@229 $generated@@475 $generated@@476)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@66) (= (type $generated@@480) $generated@@66)) (= ($generated@@477 ($generated@@140 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@140 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@66)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@66) (= (type $generated@@484) $generated@@66)) (= ($generated@@481 ($generated@@140 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@140 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@150) (= (type $generated@@486) $generated@@150)) (= ($generated@@148 ($generated@@229 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@229 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@150) (= (type $generated@@488) $generated@@150)) (= ($generated@@149 ($generated@@229 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@229 $generated@@487 $generated@@488))
)))
(assert  (and (forall (($generated@@491 T@U) ) (! (= (type ($generated@@489 $generated@@491)) $generated@@66)
 :pattern ( ($generated@@489 $generated@@491))
)) (forall (($generated@@492 T@U) ($generated@@493 Int) ) (! (let (($generated@@494 ($generated@@270 (type $generated@@492))))
(= (type ($generated@@490 $generated@@492 $generated@@493)) $generated@@494))
 :pattern ( ($generated@@490 $generated@@492 $generated@@493))
))))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@269 $generated@@150)) (= (type $generated@@496) $generated@@66)) (= (type $generated@@497) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@495 ($generated@@489 $generated@@496) $generated@@497) (forall (($generated@@498 Int) ) (!  (=> (and (<= 0 $generated@@498) (< $generated@@498 ($generated@@268 $generated@@495))) ($generated@@255 ($generated@@490 $generated@@495 $generated@@498) $generated@@496 $generated@@497))
 :pattern ( ($generated@@490 $generated@@495 $generated@@498))
))))
 :pattern ( ($generated@@76 $generated@@495 ($generated@@489 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@500 Int) ) (! (= ($generated@@499 ($generated@@77 $generated@@500)) $generated@@500)
 :pattern ( ($generated@@77 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@66)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@501 ($generated@@239 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@239 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@74 ($generated@@239 $generated@@504)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@66)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@505 ($generated@@244 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@244 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@74 ($generated@@244 $generated@@508)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@66)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@66) (= ($generated@@509 ($generated@@168 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@168 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@74 ($generated@@168 $generated@@512)) $generated@@56))
 :pattern ( ($generated@@168 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@66)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@66) (= ($generated@@513 ($generated@@489 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@489 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@66) (= ($generated@@74 ($generated@@489 $generated@@516)) $generated@@57))
 :pattern ( ($generated@@489 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
(= ($generated@@330 $generated@@518 ($generated@@280 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@280 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@293 $generated@@150 $generated@@150)) (= (type $generated@@520) $generated@@66)) (= (type $generated@@521) $generated@@66)) (= ($generated@@137 $generated@@519 ($generated@@398 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@519) $generated@@522))) (and ($generated@@230 ($generated@@83 ($generated@@373 $generated@@519) $generated@@522) $generated@@521) ($generated@@230 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@519) $generated@@522))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@137 $generated@@519 ($generated@@398 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@311 $generated@@150 $generated@@150)) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) (= ($generated@@137 $generated@@523 ($generated@@406 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@523) $generated@@526))) (and ($generated@@230 ($generated@@83 ($generated@@381 $generated@@523) $generated@@526) $generated@@525) ($generated@@230 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@523) $generated@@526))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@137 $generated@@523 ($generated@@406 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@150) (= (type $generated@@530) $generated@@150)) (< ($generated@@527 $generated@@529) ($generated@@528 ($generated@@229 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@229 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@150) (= (type $generated@@532) $generated@@150)) (< ($generated@@527 $generated@@532) ($generated@@528 ($generated@@229 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@229 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@150) (= (type $generated@@534) $generated@@66)) (= (type $generated@@535) $generated@@66)) ($generated@@230 $generated@@533 ($generated@@398 $generated@@534 $generated@@535))) (and (= ($generated@@280 ($generated@@330 ($generated@@293 $generated@@150 $generated@@150) $generated@@533)) $generated@@533) ($generated@@137 ($generated@@330 ($generated@@293 $generated@@150 $generated@@150) $generated@@533) ($generated@@398 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@230 $generated@@533 ($generated@@398 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@150) (= (type $generated@@537) $generated@@66)) (= (type $generated@@538) $generated@@66)) ($generated@@230 $generated@@536 ($generated@@406 $generated@@537 $generated@@538))) (and (= ($generated@@280 ($generated@@330 ($generated@@311 $generated@@150 $generated@@150) $generated@@536)) $generated@@536) ($generated@@137 ($generated@@330 ($generated@@311 $generated@@150 $generated@@150) $generated@@536) ($generated@@406 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@230 $generated@@536 ($generated@@406 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@66) (= (type $generated@@540) $generated@@66)) (= (type $generated@@541) $generated@@150)) ($generated@@230 $generated@@541 ($generated@@140 $generated@@539 $generated@@540))) (and (= ($generated@@280 ($generated@@330 $generated@@141 $generated@@541)) $generated@@541) ($generated@@137 ($generated@@330 $generated@@141 $generated@@541) ($generated@@140 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@230 $generated@@541 ($generated@@140 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@83 ($generated@@418 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@83 ($generated@@418 $generated@@543) $generated@@542)))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@71)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@66) (= (type $generated@@547) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@546 $generated@@547)) $generated@@62) (= ($generated@@544 ($generated@@140 $generated@@546 $generated@@547)) $generated@@64)))
 :pattern ( ($generated@@140 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 Int) ($generated@@549 Int) ) (! (= ($generated@@276 $generated@@548 $generated@@549) (* $generated@@548 $generated@@549))
 :pattern ( ($generated@@276 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@141) (= ($generated@@527 ($generated@@280 $generated@@550)) ($generated@@528 $generated@@550)))
 :pattern ( ($generated@@527 ($generated@@280 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@150) ($generated@@230 $generated@@551 ($generated@@77 0))) (and (= ($generated@@280 ($generated@@330 $generated@@2 $generated@@551)) $generated@@551) ($generated@@137 ($generated@@330 ($generated@@78 $generated@@150 $generated@@4) $generated@@551) ($generated@@77 0))))
 :pattern ( ($generated@@230 $generated@@551 ($generated@@77 0)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@150) (= (type $generated@@553) $generated@@66)) ($generated@@230 $generated@@552 ($generated@@239 $generated@@553))) (and (= ($generated@@280 ($generated@@330 ($generated@@78 $generated@@150 $generated@@4) $generated@@552)) $generated@@552) ($generated@@137 ($generated@@330 ($generated@@78 $generated@@150 $generated@@4) $generated@@552) ($generated@@239 $generated@@553))))
 :pattern ( ($generated@@230 $generated@@552 ($generated@@239 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@150) (= (type $generated@@555) $generated@@66)) ($generated@@230 $generated@@554 ($generated@@244 $generated@@555))) (and (= ($generated@@280 ($generated@@330 ($generated@@78 $generated@@150 $generated@@4) $generated@@554)) $generated@@554) ($generated@@137 ($generated@@330 ($generated@@78 $generated@@150 $generated@@4) $generated@@554) ($generated@@244 $generated@@555))))
 :pattern ( ($generated@@230 $generated@@554 ($generated@@244 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@150) (= (type $generated@@557) $generated@@66)) ($generated@@230 $generated@@556 ($generated@@168 $generated@@557))) (and (= ($generated@@280 ($generated@@330 ($generated@@78 $generated@@150 $generated@@2) $generated@@556)) $generated@@556) ($generated@@137 ($generated@@330 ($generated@@78 $generated@@150 $generated@@2) $generated@@556) ($generated@@168 $generated@@557))))
 :pattern ( ($generated@@230 $generated@@556 ($generated@@168 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@150) (= (type $generated@@559) $generated@@66)) ($generated@@230 $generated@@558 ($generated@@489 $generated@@559))) (and (= ($generated@@280 ($generated@@330 ($generated@@269 $generated@@150) $generated@@558)) $generated@@558) ($generated@@137 ($generated@@330 ($generated@@269 $generated@@150) $generated@@558) ($generated@@489 $generated@@559))))
 :pattern ( ($generated@@230 $generated@@558 ($generated@@489 $generated@@559)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@63))
(assert (= ($generated@@544 $generated@@134) $generated@@65))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@561) $generated@@66)) (= (type $generated@@562) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@560 ($generated@@168 $generated@@561) $generated@@562) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@560 $generated@@563)))) ($generated@@255 $generated@@563 $generated@@561 $generated@@562))
 :pattern ( ($generated@@83 $generated@@560 $generated@@563))
))))
 :pattern ( ($generated@@76 $generated@@560 ($generated@@168 $generated@@561) $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@141) (= (type $generated@@565) $generated@@66)) (= (type $generated@@566) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@254 $generated@@566) (and ($generated@@139 $generated@@564) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@66) ($generated@@76 $generated@@564 ($generated@@140 $generated@@565 $generated@@567) $generated@@566))
 :pattern ( ($generated@@76 $generated@@564 ($generated@@140 $generated@@565 $generated@@567) $generated@@566))
))))) ($generated@@255 ($generated@@148 $generated@@564) $generated@@565 $generated@@566))
 :pattern ( ($generated@@255 ($generated@@148 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@141) (= (type $generated@@569) $generated@@66)) (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@254 $generated@@570) (and ($generated@@139 $generated@@568) (exists (($generated@@571 T@U) ) (!  (and (= (type $generated@@571) $generated@@66) ($generated@@76 $generated@@568 ($generated@@140 $generated@@571 $generated@@569) $generated@@570))
 :pattern ( ($generated@@76 $generated@@568 ($generated@@140 $generated@@571 $generated@@569) $generated@@570))
))))) ($generated@@255 ($generated@@149 $generated@@568) $generated@@569 $generated@@570))
 :pattern ( ($generated@@255 ($generated@@149 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@150) (= (type $generated@@573) $generated@@150)) (= ($generated@@229 ($generated@@250 $generated@@572) ($generated@@250 $generated@@573)) ($generated@@250 ($generated@@229 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@229 ($generated@@250 $generated@@572) ($generated@@250 $generated@@573)))
)))
(assert (forall (($generated@@574 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@158 $generated@@574))) ($generated@@250 ($generated@@280 ($generated@@8 $generated@@574))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@158 $generated@@574))))
)))
(assert (forall (($generated@@575 T@U) ) (! (= ($generated@@280 ($generated@@250 $generated@@575)) ($generated@@250 ($generated@@280 $generated@@575)))
 :pattern ( ($generated@@280 ($generated@@250 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 ($generated@@270 (type $generated@@576))))
 (=> (and (= (type $generated@@576) ($generated@@269 $generated@@577)) (= ($generated@@268 $generated@@576) 0)) (= $generated@@576 ($generated@@267 $generated@@577))))
 :pattern ( ($generated@@268 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@579)))
 (=> (and (and (= (type $generated@@578) ($generated@@78 $generated@@581 $generated@@2)) (= (type $generated@@580) $generated@@2)) (<= 0 ($generated $generated@@580))) (= ($generated@@285 ($generated@@84 $generated@@578 $generated@@579 $generated@@580)) (+ (- ($generated@@285 $generated@@578) ($generated ($generated@@83 $generated@@578 $generated@@579))) ($generated $generated@@580)))))
 :pattern ( ($generated@@285 ($generated@@84 $generated@@578 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@583) $generated@@2)) ($generated@@76 $generated@@583 $generated@@46 $generated@@582))
 :pattern ( ($generated@@76 $generated@@583 $generated@@46 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@585) $generated@@3)) ($generated@@76 $generated@@585 $generated@@47 $generated@@584))
 :pattern ( ($generated@@76 $generated@@585 $generated@@47 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@587) $generated@@4)) ($generated@@76 $generated@@587 $generated@@44 $generated@@586))
 :pattern ( ($generated@@76 $generated@@587 $generated@@44 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@589) $generated@@442)) ($generated@@76 $generated@@589 $generated@@45 $generated@@588))
 :pattern ( ($generated@@76 $generated@@589 $generated@@45 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@591) $generated@@150)) ($generated@@76 $generated@@591 $generated@@48 $generated@@590))
 :pattern ( ($generated@@76 $generated@@591 $generated@@48 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@269 $generated@@150)) (= (type $generated@@593) $generated@@66)) (= ($generated@@137 $generated@@592 ($generated@@489 $generated@@593)) (forall (($generated@@594 Int) ) (!  (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@268 $generated@@592))) ($generated@@230 ($generated@@490 $generated@@592 $generated@@594) $generated@@593))
 :pattern ( ($generated@@490 $generated@@592 $generated@@594))
))))
 :pattern ( ($generated@@137 $generated@@592 ($generated@@489 $generated@@593)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 Int) ) (!  (=> (= (type $generated@@596) ($generated@@269 $generated@@150)) (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@268 $generated@@596))) (< ($generated@@528 ($generated@@330 $generated@@141 ($generated@@490 $generated@@596 $generated@@597))) ($generated@@595 $generated@@596))))
 :pattern ( ($generated@@528 ($generated@@330 $generated@@141 ($generated@@490 $generated@@596 $generated@@597))))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@293 $generated@@150 $generated@@150)) (= (type $generated@@599) $generated@@66)) (= (type $generated@@600) $generated@@66)) ($generated@@137 $generated@@598 ($generated@@398 $generated@@599 $generated@@600))) (and (and ($generated@@137 ($generated@@291 $generated@@598) ($generated@@239 $generated@@599)) ($generated@@137 ($generated@@338 $generated@@598) ($generated@@239 $generated@@600))) ($generated@@137 ($generated@@372 $generated@@598) ($generated@@239 ($generated@@140 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@137 $generated@@598 ($generated@@398 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@311 $generated@@150 $generated@@150)) (= (type $generated@@602) $generated@@66)) (= (type $generated@@603) $generated@@66)) ($generated@@137 $generated@@601 ($generated@@406 $generated@@602 $generated@@603))) (and (and ($generated@@137 ($generated@@309 $generated@@601) ($generated@@244 $generated@@602)) ($generated@@137 ($generated@@349 $generated@@601) ($generated@@244 $generated@@603))) ($generated@@137 ($generated@@380 $generated@@601) ($generated@@244 ($generated@@140 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@137 $generated@@601 ($generated@@406 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@2) ($generated@@137 $generated@@604 $generated@@46))
 :pattern ( ($generated@@137 $generated@@604 $generated@@46))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@3) ($generated@@137 $generated@@605 $generated@@47))
 :pattern ( ($generated@@137 $generated@@605 $generated@@47))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@4) ($generated@@137 $generated@@606 $generated@@44))
 :pattern ( ($generated@@137 $generated@@606 $generated@@44))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@442) ($generated@@137 $generated@@607 $generated@@45))
 :pattern ( ($generated@@137 $generated@@607 $generated@@45))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@150) ($generated@@137 $generated@@608 $generated@@48))
 :pattern ( ($generated@@137 $generated@@608 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () Int)
(declare-fun $generated@@613 (T@U) Bool)
(assert  (and (and (= (type $generated@@609) ($generated@@175 $generated@@79 $generated@@4)) (= (type $generated@@610) $generated@@79)) (= (type $generated@@611) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@614  (=> (= $generated@@609 ($generated@@174 $generated@@610 $generated@@611 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@276 ($generated@@158 1) $generated@@612) $generated@@612)) (=> (= ($generated@@276 ($generated@@158 1) $generated@@612) $generated@@612) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@83 ($generated@@156 $generated@@612) ($generated@@280 ($generated@@8 ($generated@@158 1)))))))))))
(let (($generated@@615  (=> (and (and (and ($generated@@254 $generated@@611) ($generated@@613 $generated@@611)) (<= ($generated@@158 1) $generated@@612)) (and (= 3 $generated@@155) (= (ControlFlow 0 4) 2))) $generated@@614)))
$generated@@615)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 () Int)
(declare-fun $generated@@156 (Int) T@U)
(declare-fun $generated@@157 (Int) Bool)
(declare-fun $generated@@158 (Int) Int)
(declare-fun $generated@@159 (Int Int) Bool)
(declare-fun $generated@@160 (Int Int) Bool)
(declare-fun $generated@@161 (T@U Int Int) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) T@U)
(declare-fun $generated@@230 (T@U T@U) Bool)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@276 (Int Int) Int)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@291 (T@U) T@U)
(declare-fun $generated@@292 (T@T T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@330 (T@T T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@398 (T@U T@U) T@U)
(declare-fun $generated@@406 (T@U T@U) T@U)
(declare-fun $generated@@418 (T@T) T@U)
(declare-fun $generated@@442 () T@T)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@490 (T@U Int) T@U)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@595 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert  (and (forall (($generated@@162 Int) ) (! (= (type ($generated@@156 $generated@@162)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@156 $generated@@162))
)) (forall (($generated@@163 T@U) ($generated@@164 Int) ($generated@@165 Int) ) (! (= (type ($generated@@161 $generated@@163 $generated@@164 $generated@@165)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@161 $generated@@163 $generated@@164 $generated@@165))
))))
(assert  (=> (<= 2 $generated@@155) (forall (($generated@@166 Int) ) (!  (=> (or ($generated@@157 $generated@@166) (and (not (= 2 $generated@@155)) (<= ($generated@@158 1) $generated@@166))) (and (forall (($generated@@167 Int) ) (!  (=> (<= ($generated@@158 1) $generated@@167) (=> (<= $generated@@167 $generated@@166) ($generated@@160 $generated@@167 $generated@@166)))
 :pattern ( ($generated@@159 $generated@@167 $generated@@166))
)) (= ($generated@@156 $generated@@166) ($generated@@161 $generated@@134 $generated@@166 $generated@@166))))
 :pattern ( ($generated@@156 $generated@@166))
))))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@66)
 :pattern ( ($generated@@168 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@172) $generated@@66)) ($generated@@137 $generated@@171 ($generated@@168 $generated@@172))) ($generated@@169 $generated@@171))
 :pattern ( ($generated@@137 $generated@@171 ($generated@@168 $generated@@172)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 16)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@79 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@69 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@79) (= (type $generated@@223) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@224) ($generated@@68 $generated@@4))) (= (type $generated@@226) $generated@@79)) (= (type $generated@@227) ($generated@@68 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= (type ($generated@@229 $generated@@231 $generated@@232)) $generated@@141)
 :pattern ( ($generated@@229 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (and (and (= (type $generated@@233) $generated@@66) (= (type $generated@@234) $generated@@66)) (= (type $generated@@235) $generated@@150)) (= (type $generated@@236) $generated@@150)) (= ($generated@@137 ($generated@@229 $generated@@235 $generated@@236) ($generated@@140 $generated@@233 $generated@@234))  (and ($generated@@230 $generated@@235 $generated@@233) ($generated@@230 $generated@@236 $generated@@234))))
 :pattern ( ($generated@@137 ($generated@@229 $generated@@235 $generated@@236) ($generated@@140 $generated@@233 $generated@@234)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@141) (= (type $generated@@238) $generated@@141)) (= ($generated@@147 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@147 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@66)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@242) $generated@@66)) (= ($generated@@137 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@150) ($generated@@0 ($generated@@83 $generated@@241 $generated@@243))) ($generated@@230 $generated@@243 $generated@@242))
 :pattern ( ($generated@@83 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@137 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@66)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@247) $generated@@66)) (= ($generated@@137 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@150) ($generated@@0 ($generated@@83 $generated@@246 $generated@@248))) ($generated@@230 $generated@@248 $generated@@247))
 :pattern ( ($generated@@83 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@137 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@158 $generated@@249) $generated@@249)
 :pattern ( ($generated@@158 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@66) (= (type $generated@@257) $generated@@66)) (= (type $generated@@258) $generated@@150)) (= (type $generated@@259) $generated@@150)) (= (type $generated@@260) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@254 $generated@@260)) (= ($generated@@76 ($generated@@229 $generated@@258 $generated@@259) ($generated@@140 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@76 ($generated@@229 $generated@@258 $generated@@259) ($generated@@140 $generated@@256 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@70)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@141) (= ($generated@@139 $generated@@263) (= ($generated@@261 $generated@@263) $generated@@61)))
 :pattern ( ($generated@@139 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@141) ($generated@@139 $generated@@264)) (exists (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (and (and (= (type $generated@@265) $generated@@150) (= (type $generated@@266) $generated@@150)) (= $generated@@264 ($generated@@229 $generated@@265 $generated@@266)))
 :no-pattern (type $generated@@265)
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
)))
 :pattern ( ($generated@@139 $generated@@264))
)))
(assert  (and (and (forall (($generated@@271 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@271)) 17)) (forall (($generated@@272 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@272)) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
))) (forall (($generated@@273 T@T) ) (! (= (type ($generated@@267 $generated@@273)) ($generated@@269 $generated@@273))
 :pattern ( ($generated@@267 $generated@@273))
))))
(assert (forall (($generated@@274 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@274)) 0)
 :pattern ( ($generated@@267 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@2) (= ($generated@@137 $generated@@275 $generated@@134) (<= ($generated@@158 1) ($generated $generated@@275))))
 :pattern ( ($generated@@137 $generated@@275 $generated@@134))
)))
(assert  (=> (<= 1 $generated@@155) (forall (($generated@@277 Int) ($generated@@278 Int) ) (!  (=> (or ($generated@@160 ($generated@@158 $generated@@277) ($generated@@158 $generated@@278)) (and (not (= 1 $generated@@155)) (and (<= ($generated@@158 1) $generated@@277) (<= ($generated@@158 1) $generated@@278)))) (= ($generated@@159 ($generated@@158 $generated@@277) ($generated@@158 $generated@@278)) (exists (($generated@@279 Int) ) (! (= ($generated@@276 ($generated@@158 $generated@@277) $generated@@279) ($generated@@158 $generated@@278))
 :pattern ( ($generated@@276 $generated@@277 $generated@@279))
))))
 :weight 3
 :pattern ( ($generated@@159 ($generated@@158 $generated@@277) ($generated@@158 $generated@@278)))
))))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@150)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@66) (= (type $generated@@284) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@255 ($generated@@280 $generated@@282) $generated@@283 $generated@@284) ($generated@@76 $generated@@282 $generated@@283 $generated@@284)))
 :pattern ( ($generated@@255 ($generated@@280 $generated@@282) $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@287 T@T) ) (! (= (type ($generated@@286 $generated@@287)) ($generated@@78 $generated@@287 $generated@@2))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (! (let (($generated@@289 ($generated@@81 (type $generated@@288))))
 (=> (= (type $generated@@288) ($generated@@78 $generated@@289 $generated@@2)) (and (= (= ($generated@@285 $generated@@288) 0) (= $generated@@288 ($generated@@286 $generated@@289))) (=> (not (= ($generated@@285 $generated@@288) 0)) (exists (($generated@@290 T@U) ) (!  (and (= (type $generated@@290) $generated@@289) (< 0 ($generated ($generated@@83 $generated@@288 $generated@@290))))
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
))))))
 :pattern ( ($generated@@285 $generated@@288))
)))
(assert  (and (and (and (and (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@296 $generated@@297)) 18)) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@298 $generated@@299)) $generated@@298)
 :pattern ( ($generated@@293 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@295 ($generated@@293 $generated@@300 $generated@@301)) $generated@@301)
 :pattern ( ($generated@@293 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@294 (type $generated@@302))))
(= (type ($generated@@291 $generated@@302)) ($generated@@78 $generated@@303 $generated@@4)))
 :pattern ( ($generated@@291 $generated@@302))
))) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= (type ($generated@@292 $generated@@304 $generated@@305)) ($generated@@293 $generated@@304 $generated@@305))
 :pattern ( ($generated@@292 $generated@@304 $generated@@305))
))))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@T) ) (! (let (($generated@@308 (type $generated@@306)))
 (not ($generated@@0 ($generated@@83 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306))))
 :pattern ( (let (($generated@@308 (type $generated@@306)))
($generated@@83 ($generated@@291 ($generated@@292 $generated@@308 $generated@@307)) $generated@@306)))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 19)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@78 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@83 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@83 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@81 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@78 $generated@@328 $generated@@2)) (= ($generated@@169 $generated@@327) (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@328) (and (<= 0 ($generated ($generated@@83 $generated@@327 $generated@@329))) (<= ($generated ($generated@@83 $generated@@327 $generated@@329)) ($generated@@285 $generated@@327))))
 :pattern ( ($generated@@83 $generated@@327 $generated@@329))
)))))
 :pattern ( ($generated@@169 $generated@@327))
)))
(assert (forall (($generated@@331 T@T) ($generated@@332 T@U) ) (! (= (type ($generated@@330 $generated@@331 $generated@@332)) $generated@@331)
 :pattern ( ($generated@@330 $generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@333) $generated@@150) ($generated@@230 $generated@@333 $generated@@134)) (and (= ($generated@@280 ($generated@@330 $generated@@2 $generated@@333)) $generated@@333) ($generated@@137 ($generated@@330 $generated@@2 $generated@@333) $generated@@134)))
 :pattern ( ($generated@@230 $generated@@333 $generated@@134))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@295 (type $generated@@334))))
(let (($generated@@336 ($generated@@294 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@293 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@292 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@336) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@291 $generated@@334))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@295 (type $generated@@339))))
(= (type ($generated@@338 $generated@@339)) ($generated@@78 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@295 (type $generated@@341))))
(let (($generated@@343 ($generated@@294 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@293 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@292 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@342) ($generated@@0 ($generated@@83 ($generated@@338 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@313 (type $generated@@345))))
(let (($generated@@347 ($generated@@312 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@311 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@310 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@309 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@313 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@78 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@313 (type $generated@@352))))
(let (($generated@@354 ($generated@@312 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@311 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@310 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@83 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert  (=> (<= 2 $generated@@155) (forall (($generated@@356 Int) ) (!  (=> (or ($generated@@157 ($generated@@158 $generated@@356)) (and (not (= 2 $generated@@155)) (<= ($generated@@158 1) $generated@@356))) (and (forall (($generated@@357 Int) ) (!  (=> (<= ($generated@@158 1) $generated@@357) (=> (<= $generated@@357 ($generated@@158 $generated@@356)) ($generated@@160 $generated@@357 ($generated@@158 $generated@@356))))
 :pattern ( ($generated@@159 $generated@@357 $generated@@356))
)) (= ($generated@@156 ($generated@@158 $generated@@356)) ($generated@@161 $generated@@134 ($generated@@158 $generated@@356) ($generated@@158 $generated@@356)))))
 :weight 3
 :pattern ( ($generated@@156 ($generated@@158 $generated@@356)))
))))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@359) $generated@@66)) (= ($generated@@137 $generated@@358 ($generated@@168 $generated@@359)) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@358 $generated@@360)))) ($generated@@230 $generated@@360 $generated@@359))
 :pattern ( ($generated@@83 $generated@@358 $generated@@360))
))))
 :pattern ( ($generated@@137 $generated@@358 ($generated@@168 $generated@@359)))
)))
(assert  (=> (<= 2 $generated@@155) (forall (($generated@@361 Int) ) (!  (=> (or ($generated@@157 $generated@@361) (and (not (= 2 $generated@@155)) (<= ($generated@@158 1) $generated@@361))) ($generated@@137 ($generated@@156 $generated@@361) ($generated@@239 $generated@@134)))
 :pattern ( ($generated@@156 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@362) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@363) $generated@@66)) (= (type $generated@@364) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@362 ($generated@@239 $generated@@363) $generated@@364) (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@150) ($generated@@0 ($generated@@83 $generated@@362 $generated@@365))) ($generated@@255 $generated@@365 $generated@@363 $generated@@364))
 :pattern ( ($generated@@83 $generated@@362 $generated@@365))
))))
 :pattern ( ($generated@@76 $generated@@362 ($generated@@239 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ($generated@@368 T@U) ) (!  (=> (and (and (= (type $generated@@366) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@367) $generated@@66)) (= (type $generated@@368) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@366 ($generated@@244 $generated@@367) $generated@@368) (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@150) ($generated@@0 ($generated@@83 $generated@@366 $generated@@369))) ($generated@@255 $generated@@369 $generated@@367 $generated@@368))
 :pattern ( ($generated@@83 $generated@@366 $generated@@369))
))))
 :pattern ( ($generated@@76 $generated@@366 ($generated@@244 $generated@@367) $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(= ($generated ($generated@@83 ($generated@@286 $generated@@371) $generated@@370)) 0))
 :pattern ( (let (($generated@@371 (type $generated@@370)))
($generated@@83 ($generated@@286 $generated@@371) $generated@@370)))
)))
(assert  (and (forall (($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@374)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@372 $generated@@374))
)) (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@295 (type $generated@@375))))
(let (($generated@@377 ($generated@@294 (type $generated@@375))))
(= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@377 $generated@@376))))
 :pattern ( ($generated@@373 $generated@@375))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@378) ($generated@@293 $generated@@150 $generated@@150)) (= (type $generated@@379) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@372 $generated@@378) $generated@@379))  (and ($generated@@0 ($generated@@83 ($generated@@291 $generated@@378) ($generated@@148 ($generated@@330 $generated@@141 $generated@@379)))) (= ($generated@@83 ($generated@@373 $generated@@378) ($generated@@148 ($generated@@330 $generated@@141 $generated@@379))) ($generated@@149 ($generated@@330 $generated@@141 $generated@@379))))))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@378) $generated@@379))
)))
(assert  (and (forall (($generated@@382 T@U) ) (! (= (type ($generated@@380 $generated@@382)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@380 $generated@@382))
)) (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@313 (type $generated@@383))))
(let (($generated@@385 ($generated@@312 (type $generated@@383))))
(= (type ($generated@@381 $generated@@383)) ($generated@@78 $generated@@385 $generated@@384))))
 :pattern ( ($generated@@381 $generated@@383))
))))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@311 $generated@@150 $generated@@150)) (= (type $generated@@387) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@380 $generated@@386) $generated@@387))  (and ($generated@@0 ($generated@@83 ($generated@@309 $generated@@386) ($generated@@148 ($generated@@330 $generated@@141 $generated@@387)))) (= ($generated@@83 ($generated@@381 $generated@@386) ($generated@@148 ($generated@@330 $generated@@141 $generated@@387))) ($generated@@149 ($generated@@330 $generated@@141 $generated@@387))))))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@294 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@293 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@83 ($generated@@338 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@83 ($generated@@291 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@83 ($generated@@373 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@388) $generated@@392))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@83 ($generated@@338 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@312 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@311 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@83 ($generated@@349 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@83 ($generated@@309 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@83 ($generated@@381 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@393) $generated@@397))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@83 ($generated@@349 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@399 $generated@@400)) $generated@@66)
 :pattern ( ($generated@@398 $generated@@399 $generated@@400))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (and (= (type $generated@@401) ($generated@@293 $generated@@150 $generated@@150)) (= (type $generated@@402) $generated@@66)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@401) $generated@@405))) (and ($generated@@255 ($generated@@83 ($generated@@373 $generated@@401) $generated@@405) $generated@@403 $generated@@404) ($generated@@255 $generated@@405 $generated@@402 $generated@@404)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@401) $generated@@405))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@401) $generated@@405))
))))
 :pattern ( ($generated@@76 $generated@@401 ($generated@@398 $generated@@402 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@407 $generated@@408)) $generated@@66)
 :pattern ( ($generated@@406 $generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (= (type $generated@@409) ($generated@@311 $generated@@150 $generated@@150)) (= (type $generated@@410) $generated@@66)) (= (type $generated@@411) $generated@@66)) (= (type $generated@@412) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@409) $generated@@413))) (and ($generated@@255 ($generated@@83 ($generated@@381 $generated@@409) $generated@@413) $generated@@411 $generated@@412) ($generated@@255 $generated@@413 $generated@@410 $generated@@412)))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@409) $generated@@413))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@409) $generated@@413))
))))
 :pattern ( ($generated@@76 $generated@@409 ($generated@@406 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 Int) ($generated@@416 Int) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@66) (= (type $generated@@417) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@161 $generated@@414 $generated@@415 $generated@@416) $generated@@417))  (and ($generated@@230 $generated@@417 $generated@@414) (and (<= ($generated ($generated@@330 $generated@@2 $generated@@417)) $generated@@415) ($generated@@159 ($generated ($generated@@330 $generated@@2 $generated@@417)) $generated@@416)))))
 :pattern ( ($generated@@83 ($generated@@161 $generated@@414 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@419 T@T) ) (! (= (type ($generated@@418 $generated@@419)) ($generated@@78 $generated@@419 $generated@@4))
 :pattern ( ($generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@313 (type $generated@@420))))
(let (($generated@@422 ($generated@@312 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@311 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@310 $generated@@422 $generated@@421)) (= ($generated@@309 $generated@@420) ($generated@@418 $generated@@422))))))
 :pattern ( ($generated@@309 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@313 (type $generated@@423))))
(let (($generated@@425 ($generated@@312 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@311 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@310 $generated@@425 $generated@@424)) (= ($generated@@349 $generated@@423) ($generated@@418 $generated@@424))))))
 :pattern ( ($generated@@349 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@313 (type $generated@@426))))
(let (($generated@@428 ($generated@@312 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@311 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@310 $generated@@428 $generated@@427)) (= ($generated@@380 $generated@@426) ($generated@@418 $generated@@150))))))
 :pattern ( ($generated@@380 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@295 (type $generated@@429))))
(let (($generated@@431 ($generated@@294 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@293 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@292 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@150) (= (type $generated@@433) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@372 $generated@@429) ($generated@@280 ($generated@@229 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@372 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (! (let (($generated@@435 ($generated@@313 (type $generated@@434))))
(let (($generated@@436 ($generated@@312 (type $generated@@434))))
 (=> (= (type $generated@@434) ($generated@@311 $generated@@436 $generated@@435)) (or (= $generated@@434 ($generated@@310 $generated@@436 $generated@@435)) (exists (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (and (and (= (type $generated@@437) $generated@@150) (= (type $generated@@438) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@380 $generated@@434) ($generated@@280 ($generated@@229 $generated@@437 $generated@@438)))))
 :no-pattern (type $generated@@437)
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@380 $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@150) ($generated@@230 $generated@@439 $generated@@46)) (and (= ($generated@@280 ($generated@@330 $generated@@2 $generated@@439)) $generated@@439) ($generated@@137 ($generated@@330 $generated@@2 $generated@@439) $generated@@46)))
 :pattern ( ($generated@@230 $generated@@439 $generated@@46))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@150) ($generated@@230 $generated@@440 $generated@@47)) (and (= ($generated@@280 ($generated@@330 $generated@@3 $generated@@440)) $generated@@440) ($generated@@137 ($generated@@330 $generated@@3 $generated@@440) $generated@@47)))
 :pattern ( ($generated@@230 $generated@@440 $generated@@47))
)))
(assert (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@150) ($generated@@230 $generated@@441 $generated@@44)) (and (= ($generated@@280 ($generated@@330 $generated@@4 $generated@@441)) $generated@@441) ($generated@@137 ($generated@@330 $generated@@4 $generated@@441) $generated@@44)))
 :pattern ( ($generated@@230 $generated@@441 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@442) 20))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@150) ($generated@@230 $generated@@443 $generated@@45)) (and (= ($generated@@280 ($generated@@330 $generated@@442 $generated@@443)) $generated@@443) ($generated@@137 ($generated@@330 $generated@@442 $generated@@443) $generated@@45)))
 :pattern ( ($generated@@230 $generated@@443 $generated@@45))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (= (type $generated@@445) $generated@@66) (= ($generated@@230 ($generated@@280 $generated@@444) $generated@@445) ($generated@@137 $generated@@444 $generated@@445)))
 :pattern ( ($generated@@230 ($generated@@280 $generated@@444) $generated@@445))
)))
(assert  (=> (<= 1 $generated@@155) (forall (($generated@@446 Int) ($generated@@447 Int) ) (!  (=> (or ($generated@@160 $generated@@446 $generated@@447) (and (not (= 1 $generated@@155)) (and (<= ($generated@@158 1) $generated@@446) (<= ($generated@@158 1) $generated@@447)))) (= ($generated@@159 $generated@@446 $generated@@447) (exists (($generated@@448 Int) ) (! (= ($generated@@276 $generated@@446 $generated@@448) $generated@@447)
 :pattern ( ($generated@@276 $generated@@446 $generated@@448))
))))
 :pattern ( ($generated@@159 $generated@@446 $generated@@447))
))))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@81 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@78 $generated@@450 $generated@@2)) (<= 0 ($generated@@285 $generated@@449))))
 :pattern ( ($generated@@285 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@270 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@269 $generated@@452)) (<= 0 ($generated@@268 $generated@@451))))
 :pattern ( ($generated@@268 $generated@@451))
)))
(assert  (=> (<= 1 $generated@@155) (forall (($generated@@453 Int) ($generated@@454 Int) ) (!  (=> (or ($generated@@160 $generated@@453 $generated@@454) (and (not (= 1 $generated@@155)) (and (<= ($generated@@158 1) $generated@@453) (<= ($generated@@158 1) $generated@@454)))) true)
 :pattern ( ($generated@@159 $generated@@453 $generated@@454))
))))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@66)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@455 ($generated@@398 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@398 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@66)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@459 ($generated@@398 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@398 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@66) (= (type $generated@@464) $generated@@66)) (= ($generated@@74 ($generated@@398 $generated@@463 $generated@@464)) $generated@@58))
 :pattern ( ($generated@@398 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@66)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@66) (= (type $generated@@468) $generated@@66)) (= ($generated@@465 ($generated@@406 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@406 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@66)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@66) (= (type $generated@@472) $generated@@66)) (= ($generated@@469 ($generated@@406 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@406 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@66) (= (type $generated@@474) $generated@@66)) (= ($generated@@74 ($generated@@406 $generated@@473 $generated@@474)) $generated@@59))
 :pattern ( ($generated@@406 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@150) (= (type $generated@@476) $generated@@150)) (= ($generated@@261 ($generated@@229 $generated@@475 $generated@@476)) $generated@@61))
 :pattern ( ($generated@@229 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@66) (= (type $generated@@480) $generated@@66)) (= ($generated@@477 ($generated@@140 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@140 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@66)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@66) (= (type $generated@@484) $generated@@66)) (= ($generated@@481 ($generated@@140 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@140 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@150) (= (type $generated@@486) $generated@@150)) (= ($generated@@148 ($generated@@229 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@229 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@150) (= (type $generated@@488) $generated@@150)) (= ($generated@@149 ($generated@@229 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@229 $generated@@487 $generated@@488))
)))
(assert  (and (forall (($generated@@491 T@U) ) (! (= (type ($generated@@489 $generated@@491)) $generated@@66)
 :pattern ( ($generated@@489 $generated@@491))
)) (forall (($generated@@492 T@U) ($generated@@493 Int) ) (! (let (($generated@@494 ($generated@@270 (type $generated@@492))))
(= (type ($generated@@490 $generated@@492 $generated@@493)) $generated@@494))
 :pattern ( ($generated@@490 $generated@@492 $generated@@493))
))))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (and (= (type $generated@@495) ($generated@@269 $generated@@150)) (= (type $generated@@496) $generated@@66)) (= (type $generated@@497) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@495 ($generated@@489 $generated@@496) $generated@@497) (forall (($generated@@498 Int) ) (!  (=> (and (<= 0 $generated@@498) (< $generated@@498 ($generated@@268 $generated@@495))) ($generated@@255 ($generated@@490 $generated@@495 $generated@@498) $generated@@496 $generated@@497))
 :pattern ( ($generated@@490 $generated@@495 $generated@@498))
))))
 :pattern ( ($generated@@76 $generated@@495 ($generated@@489 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@500 Int) ) (! (= ($generated@@499 ($generated@@77 $generated@@500)) $generated@@500)
 :pattern ( ($generated@@77 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@66)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@501 ($generated@@239 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@239 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@66) (= ($generated@@74 ($generated@@239 $generated@@504)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@66)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@505 ($generated@@244 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@244 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@74 ($generated@@244 $generated@@508)) $generated@@55))
 :pattern ( ($generated@@244 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@66)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@66) (= ($generated@@509 ($generated@@168 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@168 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@74 ($generated@@168 $generated@@512)) $generated@@56))
 :pattern ( ($generated@@168 $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@66)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@66) (= ($generated@@513 ($generated@@489 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@489 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@66) (= ($generated@@74 ($generated@@489 $generated@@516)) $generated@@57))
 :pattern ( ($generated@@489 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
(= ($generated@@330 $generated@@518 ($generated@@280 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@280 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@293 $generated@@150 $generated@@150)) (= (type $generated@@520) $generated@@66)) (= (type $generated@@521) $generated@@66)) (= ($generated@@137 $generated@@519 ($generated@@398 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@291 $generated@@519) $generated@@522))) (and ($generated@@230 ($generated@@83 ($generated@@373 $generated@@519) $generated@@522) $generated@@521) ($generated@@230 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@519) $generated@@522))
 :pattern ( ($generated@@83 ($generated@@291 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@137 $generated@@519 ($generated@@398 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@311 $generated@@150 $generated@@150)) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) (= ($generated@@137 $generated@@523 ($generated@@406 $generated@@524 $generated@@525)) (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@309 $generated@@523) $generated@@526))) (and ($generated@@230 ($generated@@83 ($generated@@381 $generated@@523) $generated@@526) $generated@@525) ($generated@@230 $generated@@526 $generated@@524)))
 :pattern ( ($generated@@83 ($generated@@381 $generated@@523) $generated@@526))
 :pattern ( ($generated@@83 ($generated@@309 $generated@@523) $generated@@526))
))))
 :pattern ( ($generated@@137 $generated@@523 ($generated@@406 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@150) (= (type $generated@@530) $generated@@150)) (< ($generated@@527 $generated@@529) ($generated@@528 ($generated@@229 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@229 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@150) (= (type $generated@@532) $generated@@150)) (< ($generated@@527 $generated@@532) ($generated@@528 ($generated@@229 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@229 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@150) (= (type $generated@@534) $generated@@66)) (= (type $generated@@535) $generated@@66)) ($generated@@230 $generated@@533 ($generated@@398 $generated@@534 $generated@@535))) (and (= ($generated@@280 ($generated@@330 ($generated@@293 $generated@@150 $generated@@150) $generated@@533)) $generated@@533) ($generated@@137 ($generated@@330 ($generated@@293 $generated@@150 $generated@@150) $generated@@533) ($generated@@398 $generated@@534 $generated@@535))))
 :pattern ( ($generated@@230 $generated@@533 ($generated@@398 $generated@@534 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@536) $generated@@150) (= (type $generated@@537) $generated@@66)) (= (type $generated@@538) $generated@@66)) ($generated@@230 $generated@@536 ($generated@@406 $generated@@537 $generated@@538))) (and (= ($generated@@280 ($generated@@330 ($generated@@311 $generated@@150 $generated@@150) $generated@@536)) $generated@@536) ($generated@@137 ($generated@@330 ($generated@@311 $generated@@150 $generated@@150) $generated@@536) ($generated@@406 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@230 $generated@@536 ($generated@@406 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@66) (= (type $generated@@540) $generated@@66)) (= (type $generated@@541) $generated@@150)) ($generated@@230 $generated@@541 ($generated@@140 $generated@@539 $generated@@540))) (and (= ($generated@@280 ($generated@@330 $generated@@141 $generated@@541)) $generated@@541) ($generated@@137 ($generated@@330 $generated@@141 $generated@@541) ($generated@@140 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@230 $generated@@541 ($generated@@140 $generated@@539 $generated@@540)))
)))
(assert (forall (($generated@@542 T@U) ) (! (let (($generated@@543 (type $generated@@542)))
 (not ($generated@@0 ($generated@@83 ($generated@@418 $generated@@543) $generated@@542))))
 :pattern ( (let (($generated@@543 (type $generated@@542)))
($generated@@83 ($generated@@418 $generated@@543) $generated@@542)))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@71)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@66) (= (type $generated@@547) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@546 $generated@@547)) $generated@@62) (= ($generated@@544 ($generated@@140 $generated@@546 $generated@@547)) $generated@@64)))
 :pattern ( ($generated@@140 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 Int) ($generated@@549 Int) ) (! (= ($generated@@276 $generated@@548 $generated@@549) (* $generated@@548 $generated@@549))
 :pattern ( ($generated@@276 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@141) (= ($generated@@527 ($generated@@280 $generated@@550)) ($generated@@528 $generated@@550)))
 :pattern ( ($generated@@527 ($generated@@280 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@150) ($generated@@230 $generated@@551 ($generated@@77 0))) (and (= ($generated@@280 ($generated@@330 $generated@@2 $generated@@551)) $generated@@551) ($generated@@137 ($generated@@330 ($generated@@78 $generated@@150 $generated@@4) $generated@@551) ($generated@@77 0))))
 :pattern ( ($generated@@230 $generated@@551 ($generated@@77 0)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@150) (= (type $generated@@553) $generated@@66)) ($generated@@230 $generated@@552 ($generated@@239 $generated@@553))) (and (= ($generated@@280 ($generated@@330 ($generated@@78 $generated@@150 $generated@@4) $generated@@552)) $generated@@552) ($generated@@137 ($generated@@330 ($generated@@78 $generated@@150 $generated@@4) $generated@@552) ($generated@@239 $generated@@553))))
 :pattern ( ($generated@@230 $generated@@552 ($generated@@239 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@150) (= (type $generated@@555) $generated@@66)) ($generated@@230 $generated@@554 ($generated@@244 $generated@@555))) (and (= ($generated@@280 ($generated@@330 ($generated@@78 $generated@@150 $generated@@4) $generated@@554)) $generated@@554) ($generated@@137 ($generated@@330 ($generated@@78 $generated@@150 $generated@@4) $generated@@554) ($generated@@244 $generated@@555))))
 :pattern ( ($generated@@230 $generated@@554 ($generated@@244 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@150) (= (type $generated@@557) $generated@@66)) ($generated@@230 $generated@@556 ($generated@@168 $generated@@557))) (and (= ($generated@@280 ($generated@@330 ($generated@@78 $generated@@150 $generated@@2) $generated@@556)) $generated@@556) ($generated@@137 ($generated@@330 ($generated@@78 $generated@@150 $generated@@2) $generated@@556) ($generated@@168 $generated@@557))))
 :pattern ( ($generated@@230 $generated@@556 ($generated@@168 $generated@@557)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (= (type $generated@@558) $generated@@150) (= (type $generated@@559) $generated@@66)) ($generated@@230 $generated@@558 ($generated@@489 $generated@@559))) (and (= ($generated@@280 ($generated@@330 ($generated@@269 $generated@@150) $generated@@558)) $generated@@558) ($generated@@137 ($generated@@330 ($generated@@269 $generated@@150) $generated@@558) ($generated@@489 $generated@@559))))
 :pattern ( ($generated@@230 $generated@@558 ($generated@@489 $generated@@559)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@63))
(assert (= ($generated@@544 $generated@@134) $generated@@65))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@560) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@561) $generated@@66)) (= (type $generated@@562) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@560 ($generated@@168 $generated@@561) $generated@@562) (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@560 $generated@@563)))) ($generated@@255 $generated@@563 $generated@@561 $generated@@562))
 :pattern ( ($generated@@83 $generated@@560 $generated@@563))
))))
 :pattern ( ($generated@@76 $generated@@560 ($generated@@168 $generated@@561) $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@141) (= (type $generated@@565) $generated@@66)) (= (type $generated@@566) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@254 $generated@@566) (and ($generated@@139 $generated@@564) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@66) ($generated@@76 $generated@@564 ($generated@@140 $generated@@565 $generated@@567) $generated@@566))
 :pattern ( ($generated@@76 $generated@@564 ($generated@@140 $generated@@565 $generated@@567) $generated@@566))
))))) ($generated@@255 ($generated@@148 $generated@@564) $generated@@565 $generated@@566))
 :pattern ( ($generated@@255 ($generated@@148 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@141) (= (type $generated@@569) $generated@@66)) (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@254 $generated@@570) (and ($generated@@139 $generated@@568) (exists (($generated@@571 T@U) ) (!  (and (= (type $generated@@571) $generated@@66) ($generated@@76 $generated@@568 ($generated@@140 $generated@@571 $generated@@569) $generated@@570))
 :pattern ( ($generated@@76 $generated@@568 ($generated@@140 $generated@@571 $generated@@569) $generated@@570))
))))) ($generated@@255 ($generated@@149 $generated@@568) $generated@@569 $generated@@570))
 :pattern ( ($generated@@255 ($generated@@149 $generated@@568) $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@150) (= (type $generated@@573) $generated@@150)) (= ($generated@@229 ($generated@@250 $generated@@572) ($generated@@250 $generated@@573)) ($generated@@250 ($generated@@229 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@229 ($generated@@250 $generated@@572) ($generated@@250 $generated@@573)))
)))
(assert (forall (($generated@@574 Int) ) (! (= ($generated@@280 ($generated@@8 ($generated@@158 $generated@@574))) ($generated@@250 ($generated@@280 ($generated@@8 $generated@@574))))
 :pattern ( ($generated@@280 ($generated@@8 ($generated@@158 $generated@@574))))
)))
(assert (forall (($generated@@575 T@U) ) (! (= ($generated@@280 ($generated@@250 $generated@@575)) ($generated@@250 ($generated@@280 $generated@@575)))
 :pattern ( ($generated@@280 ($generated@@250 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 ($generated@@270 (type $generated@@576))))
 (=> (and (= (type $generated@@576) ($generated@@269 $generated@@577)) (= ($generated@@268 $generated@@576) 0)) (= $generated@@576 ($generated@@267 $generated@@577))))
 :pattern ( ($generated@@268 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@579)))
 (=> (and (and (= (type $generated@@578) ($generated@@78 $generated@@581 $generated@@2)) (= (type $generated@@580) $generated@@2)) (<= 0 ($generated $generated@@580))) (= ($generated@@285 ($generated@@84 $generated@@578 $generated@@579 $generated@@580)) (+ (- ($generated@@285 $generated@@578) ($generated ($generated@@83 $generated@@578 $generated@@579))) ($generated $generated@@580)))))
 :pattern ( ($generated@@285 ($generated@@84 $generated@@578 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@583) $generated@@2)) ($generated@@76 $generated@@583 $generated@@46 $generated@@582))
 :pattern ( ($generated@@76 $generated@@583 $generated@@46 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@585) $generated@@3)) ($generated@@76 $generated@@585 $generated@@47 $generated@@584))
 :pattern ( ($generated@@76 $generated@@585 $generated@@47 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@587) $generated@@4)) ($generated@@76 $generated@@587 $generated@@44 $generated@@586))
 :pattern ( ($generated@@76 $generated@@587 $generated@@44 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@589) $generated@@442)) ($generated@@76 $generated@@589 $generated@@45 $generated@@588))
 :pattern ( ($generated@@76 $generated@@589 $generated@@45 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@591) $generated@@150)) ($generated@@76 $generated@@591 $generated@@48 $generated@@590))
 :pattern ( ($generated@@76 $generated@@591 $generated@@48 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@269 $generated@@150)) (= (type $generated@@593) $generated@@66)) (= ($generated@@137 $generated@@592 ($generated@@489 $generated@@593)) (forall (($generated@@594 Int) ) (!  (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@268 $generated@@592))) ($generated@@230 ($generated@@490 $generated@@592 $generated@@594) $generated@@593))
 :pattern ( ($generated@@490 $generated@@592 $generated@@594))
))))
 :pattern ( ($generated@@137 $generated@@592 ($generated@@489 $generated@@593)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 Int) ) (!  (=> (= (type $generated@@596) ($generated@@269 $generated@@150)) (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@268 $generated@@596))) (< ($generated@@528 ($generated@@330 $generated@@141 ($generated@@490 $generated@@596 $generated@@597))) ($generated@@595 $generated@@596))))
 :pattern ( ($generated@@528 ($generated@@330 $generated@@141 ($generated@@490 $generated@@596 $generated@@597))))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@293 $generated@@150 $generated@@150)) (= (type $generated@@599) $generated@@66)) (= (type $generated@@600) $generated@@66)) ($generated@@137 $generated@@598 ($generated@@398 $generated@@599 $generated@@600))) (and (and ($generated@@137 ($generated@@291 $generated@@598) ($generated@@239 $generated@@599)) ($generated@@137 ($generated@@338 $generated@@598) ($generated@@239 $generated@@600))) ($generated@@137 ($generated@@372 $generated@@598) ($generated@@239 ($generated@@140 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@137 $generated@@598 ($generated@@398 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@311 $generated@@150 $generated@@150)) (= (type $generated@@602) $generated@@66)) (= (type $generated@@603) $generated@@66)) ($generated@@137 $generated@@601 ($generated@@406 $generated@@602 $generated@@603))) (and (and ($generated@@137 ($generated@@309 $generated@@601) ($generated@@244 $generated@@602)) ($generated@@137 ($generated@@349 $generated@@601) ($generated@@244 $generated@@603))) ($generated@@137 ($generated@@380 $generated@@601) ($generated@@244 ($generated@@140 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@137 $generated@@601 ($generated@@406 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@2) ($generated@@137 $generated@@604 $generated@@46))
 :pattern ( ($generated@@137 $generated@@604 $generated@@46))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@3) ($generated@@137 $generated@@605 $generated@@47))
 :pattern ( ($generated@@137 $generated@@605 $generated@@47))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@4) ($generated@@137 $generated@@606 $generated@@44))
 :pattern ( ($generated@@137 $generated@@606 $generated@@44))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@442) ($generated@@137 $generated@@607 $generated@@45))
 :pattern ( ($generated@@137 $generated@@607 $generated@@45))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@150) ($generated@@137 $generated@@608 $generated@@48))
 :pattern ( ($generated@@137 $generated@@608 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () Int)
(declare-fun $generated@@613 (T@U) Bool)
(assert  (and (and (= (type $generated@@609) ($generated@@175 $generated@@79 $generated@@4)) (= (type $generated@@610) $generated@@79)) (= (type $generated@@611) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@614  (=> (= $generated@@609 ($generated@@174 $generated@@610 $generated@@611 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@276 $generated@@612 ($generated@@158 1)) $generated@@612)) (=> (= ($generated@@276 $generated@@612 ($generated@@158 1)) $generated@@612) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@83 ($generated@@156 $generated@@612) ($generated@@280 ($generated@@8 $generated@@612))))))))))
(let (($generated@@615  (=> (and (and (and ($generated@@254 $generated@@611) ($generated@@613 $generated@@611)) (<= ($generated@@158 1) $generated@@612)) (and (= 3 $generated@@155) (= (ControlFlow 0 4) 2))) $generated@@614)))
$generated@@615)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 () Int)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 () T@U)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@T) T@U)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@89 (T@U) Int)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@149 (T@U T@U T@U) Bool)
(declare-fun $generated@@150 (Int) T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@177 (T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@179 (T@T T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@233 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (Int) Int)
(declare-fun $generated@@267 (T@U T@U T@U) Bool)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@279 (T@T) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@T)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@293 (T@U) Int)
(declare-fun $generated@@294 (T@T) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@T T@T) T@U)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@320 (T@T T@T) T@U)
(declare-fun $generated@@321 (T@T T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@U T@U) T@U)
(declare-fun $generated@@428 (T@T) T@U)
(declare-fun $generated@@452 () T@T)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@495 (T@U Int) T@U)
(declare-fun $generated@@504 (T@U) Int)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@535 (T@U) Int)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@603 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@96 $generated@@97)) 11)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@78 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@78 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@78 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@78 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@78 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@69 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@80)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@69 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 14)) (forall (($generated@@140 T@U) ) (! (let (($generated@@141 (type $generated@@140)))
(= (type ($generated@@76 $generated@@140)) $generated@@141))
 :pattern ( ($generated@@76 $generated@@140))
))) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@84 $generated@@142)) $generated@@66)
 :pattern ( ($generated@@84 $generated@@142))
))) (= (type $generated@@85) $generated@@66)) (forall (($generated@@143 T@T) ) (! (= (type ($generated@@87 $generated@@143)) ($generated@@78 $generated@@143 $generated@@4))
 :pattern ( ($generated@@87 $generated@@143))
))))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@145) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 ($generated@@76 $generated@@145)) (and (not (= 3 $generated@@74)) (and (and ($generated@@77 $generated@@144) ($generated@@83 $generated@@145 ($generated@@84 $generated@@85))) (not ($generated@@86 $generated@@145 ($generated@@87 $generated@@81))))))) (and ($generated@@88 ($generated@@76 $generated@@145)) (= ($generated@@75 ($generated@@76 $generated@@145)) (let (($generated@@146 ($generated@@89 ($generated@@76 $generated@@145))))
$generated@@146))))
 :weight 3
 :pattern ( ($generated@@75 ($generated@@76 $generated@@145)) ($generated@@77 $generated@@144))
))))
(assert (forall (($generated@@148 T@U) ) (! (= (type ($generated@@147 $generated@@148)) $generated@@67)
 :pattern ( ($generated@@147 $generated@@148))
)))
(assert (= ($generated@@147 $generated@@44) $generated@@49))
(assert (= ($generated@@147 $generated@@45) $generated@@50))
(assert (= ($generated@@147 $generated@@46) $generated@@51))
(assert (= ($generated@@147 $generated@@47) $generated@@52))
(assert (= ($generated@@147 $generated@@48) $generated@@53))
(assert (forall (($generated@@151 Int) ) (! (= (type ($generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@2) (= (type $generated@@153) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@149 $generated@@152 ($generated@@150 0) $generated@@153))
 :pattern ( ($generated@@149 $generated@@152 ($generated@@150 0) $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@2) (= (type $generated@@155) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@149 $generated@@154 $generated@@85 $generated@@155))
 :pattern ( ($generated@@149 $generated@@154 $generated@@85 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@83 $generated@@156 ($generated@@150 0)))
 :pattern ( ($generated@@83 $generated@@156 ($generated@@150 0)))
)))
(assert  (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@160 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@158 $generated@@160 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@66) (= (type $generated@@163) $generated@@66)) (= (type $generated@@164) $generated@@159)) ($generated@@83 $generated@@164 ($generated@@158 $generated@@162 $generated@@163))) ($generated@@157 $generated@@164))
 :pattern ( ($generated@@157 $generated@@164) ($generated@@83 $generated@@164 ($generated@@158 $generated@@162 $generated@@163)))
)))
(assert  (and (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@81)
 :pattern ( ($generated@@166 $generated@@168))
)) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@81)
 :pattern ( ($generated@@167 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@159) (= (type $generated@@171) $generated@@159)) true) (= ($generated@@165 $generated@@170 $generated@@171)  (and (= ($generated@@166 $generated@@170) ($generated@@166 $generated@@171)) (= ($generated@@167 $generated@@170) ($generated@@167 $generated@@171)))))
 :pattern ( ($generated@@165 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@174 T@U) ) (! (= (type ($generated@@172 $generated@@174)) $generated@@66)
 :pattern ( ($generated@@172 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@176) $generated@@66)) ($generated@@83 $generated@@175 ($generated@@172 $generated@@176))) ($generated@@173 $generated@@175))
 :pattern ( ($generated@@83 $generated@@175 ($generated@@172 $generated@@176)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@1 ($generated@@179 $generated@@183 $generated@@184)) 16)) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@180 ($generated@@179 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@179 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@181 ($generated@@179 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@179 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@181 (type $generated@@189))))
(= (type ($generated@@177 $generated@@189 $generated@@190 $generated@@191)) $generated@@192))
 :pattern ( ($generated@@177 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 (type $generated@@196)))
(let (($generated@@198 (type $generated@@194)))
(= (type ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196)) ($generated@@179 $generated@@198 $generated@@197))))
 :pattern ( ($generated@@182 $generated@@193 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@181 (type $generated@@199))))
 (=> (= (type $generated@@202) $generated@@203) (= ($generated@@177 ($generated@@182 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@200 $generated@@201) $generated@@202)))
 :weight 0
))) (and (and (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@177 ($generated@@182 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@177 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@177 ($generated@@182 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@177 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
))) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or true (= ($generated@@177 ($generated@@182 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@177 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@179 $generated@@79 $generated@@4))
 :pattern ( ($generated@@178 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@69 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@79) (= (type $generated@@227) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@228) ($generated@@68 $generated@@4))) (= (type $generated@@230) $generated@@79)) (= (type $generated@@231) ($generated@@68 $generated@@232))) (= ($generated@@0 ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@177 ($generated@@178 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@233 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@179 $generated@@79 $generated@@4))
 :pattern ( ($generated@@233 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@69 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@79) (= (type $generated@@239) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@240) ($generated@@68 $generated@@4))) (= (type $generated@@242) $generated@@79)) (= (type $generated@@243) ($generated@@68 $generated@@244))) (= ($generated@@0 ($generated@@177 ($generated@@233 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@177 ($generated@@233 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! (= (type ($generated@@245 $generated@@247 $generated@@248)) $generated@@159)
 :pattern ( ($generated@@245 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (= (type $generated@@249) $generated@@66) (= (type $generated@@250) $generated@@66)) (= (type $generated@@251) $generated@@81)) (= (type $generated@@252) $generated@@81)) (= ($generated@@83 ($generated@@245 $generated@@251 $generated@@252) ($generated@@158 $generated@@249 $generated@@250))  (and ($generated@@246 $generated@@251 $generated@@249) ($generated@@246 $generated@@252 $generated@@250))))
 :pattern ( ($generated@@83 ($generated@@245 $generated@@251 $generated@@252) ($generated@@158 $generated@@249 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@159) (= (type $generated@@254) $generated@@159)) (= ($generated@@165 $generated@@253 $generated@@254) (= $generated@@253 $generated@@254)))
 :pattern ( ($generated@@165 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@256) $generated@@66)) (= ($generated@@83 $generated@@255 ($generated@@84 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@81) ($generated@@0 ($generated@@92 $generated@@255 $generated@@257))) ($generated@@246 $generated@@257 $generated@@256))
 :pattern ( ($generated@@92 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@83 $generated@@255 ($generated@@84 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@66)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@261) $generated@@66)) (= ($generated@@83 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@81) ($generated@@0 ($generated@@92 $generated@@260 $generated@@262))) ($generated@@246 $generated@@262 $generated@@261))
 :pattern ( ($generated@@92 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@83 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@263 $generated@@264) $generated@@264)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ) (! (= ($generated@@76 $generated@@265) $generated@@265)
 :pattern ( ($generated@@76 $generated@@265))
)))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@78 $generated@@81 $generated@@4)) (or ($generated@@82 $generated@@266) (and (not (= 3 $generated@@74)) (and ($generated@@83 $generated@@266 ($generated@@84 $generated@@85)) (not ($generated@@86 $generated@@266 ($generated@@87 $generated@@81))))))) (<= ($generated@@263 1) ($generated@@75 $generated@@266)))
 :pattern ( ($generated@@75 $generated@@266))
))))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@268) $generated@@66) (= (type $generated@@269) $generated@@66)) (= (type $generated@@270) $generated@@81)) (= (type $generated@@271) $generated@@81)) (= (type $generated@@272) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@77 $generated@@272)) (= ($generated@@149 ($generated@@245 $generated@@270 $generated@@271) ($generated@@158 $generated@@268 $generated@@269) $generated@@272)  (and ($generated@@267 $generated@@270 $generated@@268 $generated@@272) ($generated@@267 $generated@@271 $generated@@269 $generated@@272))))
 :pattern ( ($generated@@149 ($generated@@245 $generated@@270 $generated@@271) ($generated@@158 $generated@@268 $generated@@269) $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@70)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@159) (= ($generated@@157 $generated@@275) (= ($generated@@273 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@157 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@159) ($generated@@157 $generated@@276)) (exists (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (and (and (= (type $generated@@277) $generated@@81) (= (type $generated@@278) $generated@@81)) (= $generated@@276 ($generated@@245 $generated@@277 $generated@@278)))
 :no-pattern (type $generated@@277)
 :no-pattern (type $generated@@278)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
)))
 :pattern ( ($generated@@157 $generated@@276))
)))
(assert  (and (and (forall (($generated@@283 T@T) ) (= ($generated@@1 ($generated@@281 $generated@@283)) 17)) (forall (($generated@@284 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@284)) $generated@@284)
 :pattern ( ($generated@@281 $generated@@284))
))) (forall (($generated@@285 T@T) ) (! (= (type ($generated@@279 $generated@@285)) ($generated@@281 $generated@@285))
 :pattern ( ($generated@@279 $generated@@285))
))))
(assert (forall (($generated@@286 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@286)) 0)
 :pattern ( ($generated@@279 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@2) (= ($generated@@83 $generated@@287 $generated@@85) (<= ($generated@@263 1) ($generated $generated@@287))))
 :pattern ( ($generated@@83 $generated@@287 $generated@@85))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@81)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@66) (= (type $generated@@292) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@267 ($generated@@288 $generated@@290) $generated@@291 $generated@@292) ($generated@@149 $generated@@290 $generated@@291 $generated@@292)))
 :pattern ( ($generated@@267 ($generated@@288 $generated@@290) $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@295 T@T) ) (! (= (type ($generated@@294 $generated@@295)) ($generated@@78 $generated@@295 $generated@@2))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@90 (type $generated@@296))))
 (=> (= (type $generated@@296) ($generated@@78 $generated@@297 $generated@@2)) (and (= (= ($generated@@293 $generated@@296) 0) (= $generated@@296 ($generated@@294 $generated@@297))) (=> (not (= ($generated@@293 $generated@@296) 0)) (exists (($generated@@298 T@U) ) (!  (and (= (type $generated@@298) $generated@@297) (< 0 ($generated ($generated@@92 $generated@@296 $generated@@298))))
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
))))))
 :pattern ( ($generated@@293 $generated@@296))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) ($generated@@78 $generated@@81 $generated@@4)) ($generated@@88 $generated@@299)) (and ($generated@@0 ($generated@@92 $generated@@299 ($generated@@288 ($generated@@8 ($generated@@89 $generated@@299))))) (forall (($generated@@300 T@U) ) (!  (=> (and (and (= (type $generated@@300) $generated@@2) true) ($generated@@0 ($generated@@92 $generated@@299 ($generated@@288 $generated@@300)))) (<= ($generated $generated@@300) ($generated@@89 $generated@@299)))
 :pattern ( ($generated@@92 $generated@@299 ($generated@@288 $generated@@300)))
))))
 :pattern ( ($generated@@89 $generated@@299))
)))
(assert  (and (and (and (and (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@306 $generated@@307)) 18)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@308 $generated@@309)) $generated@@308)
 :pattern ( ($generated@@303 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@310 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@303 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@304 (type $generated@@312))))
(= (type ($generated@@301 $generated@@312)) ($generated@@78 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@301 $generated@@312))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= (type ($generated@@302 $generated@@314 $generated@@315)) ($generated@@303 $generated@@314 $generated@@315))
 :pattern ( ($generated@@302 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@T) ) (! (let (($generated@@318 (type $generated@@316)))
 (not ($generated@@0 ($generated@@92 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316))))
 :pattern ( (let (($generated@@318 (type $generated@@316)))
($generated@@92 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316)))
)))
(assert  (and (and (and (and (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (= ($generated@@1 ($generated@@321 $generated@@324 $generated@@325)) 19)) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@321 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@323 ($generated@@321 $generated@@328 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@321 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@322 (type $generated@@330))))
(= (type ($generated@@319 $generated@@330)) ($generated@@78 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@319 $generated@@330))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= (type ($generated@@320 $generated@@332 $generated@@333)) ($generated@@321 $generated@@332 $generated@@333))
 :pattern ( ($generated@@320 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@T) ) (! (let (($generated@@336 (type $generated@@334)))
 (not ($generated@@0 ($generated@@92 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334))))
 :pattern ( (let (($generated@@336 (type $generated@@334)))
($generated@@92 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334)))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@90 (type $generated@@337))))
 (=> (and (= (type $generated@@337) ($generated@@78 $generated@@339 $generated@@4)) (= (type $generated@@338) ($generated@@78 $generated@@339 $generated@@4))) (= ($generated@@86 $generated@@337 $generated@@338) (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@339) (= ($generated@@0 ($generated@@92 $generated@@337 $generated@@340)) ($generated@@0 ($generated@@92 $generated@@338 $generated@@340))))
 :pattern ( ($generated@@92 $generated@@337 $generated@@340))
 :pattern ( ($generated@@92 $generated@@338 $generated@@340))
)))))
 :pattern ( ($generated@@86 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@90 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@78 $generated@@342 $generated@@2)) (= ($generated@@173 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@92 $generated@@341 $generated@@343))) (<= ($generated ($generated@@92 $generated@@341 $generated@@343)) ($generated@@293 $generated@@341))))
 :pattern ( ($generated@@92 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@173 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@81) ($generated@@246 $generated@@347 $generated@@85)) (and (= ($generated@@288 ($generated@@344 $generated@@2 $generated@@347)) $generated@@347) ($generated@@83 ($generated@@344 $generated@@2 $generated@@347) $generated@@85)))
 :pattern ( ($generated@@246 $generated@@347 $generated@@85))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@305 (type $generated@@348))))
(let (($generated@@350 ($generated@@304 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@303 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@302 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@92 ($generated@@301 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@301 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@305 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@78 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@305 (type $generated@@355))))
(let (($generated@@357 ($generated@@304 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@303 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@302 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@92 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@323 (type $generated@@359))))
(let (($generated@@361 ($generated@@322 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@321 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@320 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@92 ($generated@@319 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@319 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@323 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@78 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@323 (type $generated@@366))))
(let (($generated@@368 ($generated@@322 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@321 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@320 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@92 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@371) $generated@@66)) (= ($generated@@83 $generated@@370 ($generated@@172 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@81) (< 0 ($generated ($generated@@92 $generated@@370 $generated@@372)))) ($generated@@246 $generated@@372 $generated@@371))
 :pattern ( ($generated@@92 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@83 $generated@@370 ($generated@@172 $generated@@371)))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@374) $generated@@66)) (= (type $generated@@375) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@373 ($generated@@84 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@81) ($generated@@0 ($generated@@92 $generated@@373 $generated@@376))) ($generated@@267 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@92 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@149 $generated@@373 ($generated@@84 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@378) $generated@@66)) (= (type $generated@@379) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@377 ($generated@@258 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@81) ($generated@@0 ($generated@@92 $generated@@377 $generated@@380))) ($generated@@267 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@92 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@149 $generated@@377 ($generated@@258 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@92 ($generated@@294 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@92 ($generated@@294 $generated@@382) $generated@@381)))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@305 (type $generated@@386))))
(let (($generated@@388 ($generated@@304 (type $generated@@386))))
(= (type ($generated@@384 $generated@@386)) ($generated@@78 $generated@@388 $generated@@387))))
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@303 $generated@@81 $generated@@81)) (= (type $generated@@390) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@383 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@92 ($generated@@301 $generated@@389) ($generated@@166 ($generated@@344 $generated@@159 $generated@@390)))) (= ($generated@@92 ($generated@@384 $generated@@389) ($generated@@166 ($generated@@344 $generated@@159 $generated@@390))) ($generated@@167 ($generated@@344 $generated@@159 $generated@@390))))))
 :pattern ( ($generated@@92 ($generated@@383 $generated@@389) $generated@@390))
)))
(assert  (and (forall (($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@393)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@391 $generated@@393))
)) (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@323 (type $generated@@394))))
(let (($generated@@396 ($generated@@322 (type $generated@@394))))
(= (type ($generated@@392 $generated@@394)) ($generated@@78 $generated@@396 $generated@@395))))
 :pattern ( ($generated@@392 $generated@@394))
))))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@397) ($generated@@321 $generated@@81 $generated@@81)) (= (type $generated@@398) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@391 $generated@@397) $generated@@398))  (and ($generated@@0 ($generated@@92 ($generated@@319 $generated@@397) ($generated@@166 ($generated@@344 $generated@@159 $generated@@398)))) (= ($generated@@92 ($generated@@392 $generated@@397) ($generated@@166 ($generated@@344 $generated@@159 $generated@@398))) ($generated@@167 ($generated@@344 $generated@@159 $generated@@398))))))
 :pattern ( ($generated@@92 ($generated@@391 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(let (($generated@@402 ($generated@@304 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@303 $generated@@402 $generated@@401)) (= ($generated@@0 ($generated@@92 ($generated@@352 $generated@@399) $generated@@400)) (exists (($generated@@403 T@U) ) (!  (and (= (type $generated@@403) $generated@@402) (and ($generated@@0 ($generated@@92 ($generated@@301 $generated@@399) $generated@@403)) (= $generated@@400 ($generated@@92 ($generated@@384 $generated@@399) $generated@@403))))
 :pattern ( ($generated@@92 ($generated@@301 $generated@@399) $generated@@403))
 :pattern ( ($generated@@92 ($generated@@384 $generated@@399) $generated@@403))
))))))
 :pattern ( ($generated@@92 ($generated@@352 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@322 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@321 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@92 ($generated@@363 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@92 ($generated@@319 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@92 ($generated@@392 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@92 ($generated@@319 $generated@@404) $generated@@408))
 :pattern ( ($generated@@92 ($generated@@392 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@92 ($generated@@363 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@66)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@303 $generated@@81 $generated@@81)) (= (type $generated@@413) $generated@@66)) (= (type $generated@@414) $generated@@66)) (= (type $generated@@415) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@301 $generated@@412) $generated@@416))) (and ($generated@@267 ($generated@@92 ($generated@@384 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@267 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@92 ($generated@@384 $generated@@412) $generated@@416))
 :pattern ( ($generated@@92 ($generated@@301 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@149 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@418 $generated@@419)) $generated@@66)
 :pattern ( ($generated@@417 $generated@@418 $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (and (and (= (type $generated@@420) ($generated@@321 $generated@@81 $generated@@81)) (= (type $generated@@421) $generated@@66)) (= (type $generated@@422) $generated@@66)) (= (type $generated@@423) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423) (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@319 $generated@@420) $generated@@424))) (and ($generated@@267 ($generated@@92 ($generated@@392 $generated@@420) $generated@@424) $generated@@422 $generated@@423) ($generated@@267 $generated@@424 $generated@@421 $generated@@423)))
 :pattern ( ($generated@@92 ($generated@@392 $generated@@420) $generated@@424))
 :pattern ( ($generated@@92 ($generated@@319 $generated@@420) $generated@@424))
))))
 :pattern ( ($generated@@149 $generated@@420 ($generated@@417 $generated@@421 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@90 (type $generated@@425))))
 (=> (and (and (= (type $generated@@425) ($generated@@78 $generated@@427 $generated@@4)) (= (type $generated@@426) ($generated@@78 $generated@@427 $generated@@4))) ($generated@@86 $generated@@425 $generated@@426)) (= $generated@@425 $generated@@426)))
 :pattern ( ($generated@@86 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@429 T@T) ) (! (= (type ($generated@@428 $generated@@429)) ($generated@@78 $generated@@429 $generated@@4))
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@323 (type $generated@@430))))
(let (($generated@@432 ($generated@@322 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@321 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@320 $generated@@432 $generated@@431)) (= ($generated@@319 $generated@@430) ($generated@@428 $generated@@432))))))
 :pattern ( ($generated@@319 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@323 (type $generated@@433))))
(let (($generated@@435 ($generated@@322 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@321 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@320 $generated@@435 $generated@@434)) (= ($generated@@363 $generated@@433) ($generated@@428 $generated@@434))))))
 :pattern ( ($generated@@363 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@323 (type $generated@@436))))
(let (($generated@@438 ($generated@@322 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@321 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@320 $generated@@438 $generated@@437)) (= ($generated@@391 $generated@@436) ($generated@@428 $generated@@81))))))
 :pattern ( ($generated@@391 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@305 (type $generated@@439))))
(let (($generated@@441 ($generated@@304 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@303 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@302 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@81) (= (type $generated@@443) $generated@@81)) ($generated@@0 ($generated@@92 ($generated@@383 $generated@@439) ($generated@@288 ($generated@@245 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@383 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@323 (type $generated@@444))))
(let (($generated@@446 ($generated@@322 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@321 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@320 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@81) (= (type $generated@@448) $generated@@81)) ($generated@@0 ($generated@@92 ($generated@@391 $generated@@444) ($generated@@288 ($generated@@245 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@391 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@81) ($generated@@246 $generated@@449 $generated@@46)) (and (= ($generated@@288 ($generated@@344 $generated@@2 $generated@@449)) $generated@@449) ($generated@@83 ($generated@@344 $generated@@2 $generated@@449) $generated@@46)))
 :pattern ( ($generated@@246 $generated@@449 $generated@@46))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@81) ($generated@@246 $generated@@450 $generated@@47)) (and (= ($generated@@288 ($generated@@344 $generated@@3 $generated@@450)) $generated@@450) ($generated@@83 ($generated@@344 $generated@@3 $generated@@450) $generated@@47)))
 :pattern ( ($generated@@246 $generated@@450 $generated@@47))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@81) ($generated@@246 $generated@@451 $generated@@44)) (and (= ($generated@@288 ($generated@@344 $generated@@4 $generated@@451)) $generated@@451) ($generated@@83 ($generated@@344 $generated@@4 $generated@@451) $generated@@44)))
 :pattern ( ($generated@@246 $generated@@451 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@452) 20))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@81) ($generated@@246 $generated@@453 $generated@@45)) (and (= ($generated@@288 ($generated@@344 $generated@@452 $generated@@453)) $generated@@453) ($generated@@83 ($generated@@344 $generated@@452 $generated@@453) $generated@@45)))
 :pattern ( ($generated@@246 $generated@@453 $generated@@45))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (= (type $generated@@455) $generated@@66) (= ($generated@@246 ($generated@@288 $generated@@454) $generated@@455) ($generated@@83 $generated@@454 $generated@@455)))
 :pattern ( ($generated@@246 ($generated@@288 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@90 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@78 $generated@@457 $generated@@2)) (<= 0 ($generated@@293 $generated@@456))))
 :pattern ( ($generated@@293 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@282 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@281 $generated@@459)) (<= 0 ($generated@@280 $generated@@458))))
 :pattern ( ($generated@@280 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@66)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@66) (= (type $generated@@463) $generated@@66)) (= ($generated@@460 ($generated@@409 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@409 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@409 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@409 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@66) (= (type $generated@@469) $generated@@66)) (= ($generated@@147 ($generated@@409 $generated@@468 $generated@@469)) $generated@@58))
 :pattern ( ($generated@@409 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@66)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@66) (= (type $generated@@473) $generated@@66)) (= ($generated@@470 ($generated@@417 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@417 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@66)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@66) (= (type $generated@@477) $generated@@66)) (= ($generated@@474 ($generated@@417 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@417 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@66) (= (type $generated@@479) $generated@@66)) (= ($generated@@147 ($generated@@417 $generated@@478 $generated@@479)) $generated@@59))
 :pattern ( ($generated@@417 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@81) (= (type $generated@@481) $generated@@81)) (= ($generated@@273 ($generated@@245 $generated@@480 $generated@@481)) $generated@@61))
 :pattern ( ($generated@@245 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@66)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@66) (= (type $generated@@485) $generated@@66)) (= ($generated@@482 ($generated@@158 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@158 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@66)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@66) (= (type $generated@@489) $generated@@66)) (= ($generated@@486 ($generated@@158 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@158 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@81) (= (type $generated@@491) $generated@@81)) (= ($generated@@166 ($generated@@245 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@245 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@81) (= (type $generated@@493) $generated@@81)) (= ($generated@@167 ($generated@@245 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@245 $generated@@492 $generated@@493))
)))
(assert  (and (forall (($generated@@496 T@U) ) (! (= (type ($generated@@494 $generated@@496)) $generated@@66)
 :pattern ( ($generated@@494 $generated@@496))
)) (forall (($generated@@497 T@U) ($generated@@498 Int) ) (! (let (($generated@@499 ($generated@@282 (type $generated@@497))))
(= (type ($generated@@495 $generated@@497 $generated@@498)) $generated@@499))
 :pattern ( ($generated@@495 $generated@@497 $generated@@498))
))))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@281 $generated@@81)) (= (type $generated@@501) $generated@@66)) (= (type $generated@@502) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@500 ($generated@@494 $generated@@501) $generated@@502) (forall (($generated@@503 Int) ) (!  (=> (and (<= 0 $generated@@503) (< $generated@@503 ($generated@@280 $generated@@500))) ($generated@@267 ($generated@@495 $generated@@500 $generated@@503) $generated@@501 $generated@@502))
 :pattern ( ($generated@@495 $generated@@500 $generated@@503))
))))
 :pattern ( ($generated@@149 $generated@@500 ($generated@@494 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@505 Int) ) (! (= ($generated@@504 ($generated@@150 $generated@@505)) $generated@@505)
 :pattern ( ($generated@@150 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@66)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@66) (= ($generated@@506 ($generated@@84 $generated@@508)) $generated@@508))
 :pattern ( ($generated@@84 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@66) (= ($generated@@147 ($generated@@84 $generated@@509)) $generated@@54))
 :pattern ( ($generated@@84 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@66)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@66) (= ($generated@@510 ($generated@@258 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@258 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@66) (= ($generated@@147 ($generated@@258 $generated@@513)) $generated@@55))
 :pattern ( ($generated@@258 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@66)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@66) (= ($generated@@514 ($generated@@172 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@172 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@66) (= ($generated@@147 ($generated@@172 $generated@@517)) $generated@@56))
 :pattern ( ($generated@@172 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@66)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@66) (= ($generated@@518 ($generated@@494 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@494 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@66) (= ($generated@@147 ($generated@@494 $generated@@521)) $generated@@57))
 :pattern ( ($generated@@494 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
(= ($generated@@344 $generated@@523 ($generated@@288 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@288 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@303 $generated@@81 $generated@@81)) (= (type $generated@@525) $generated@@66)) (= (type $generated@@526) $generated@@66)) (= ($generated@@83 $generated@@524 ($generated@@409 $generated@@525 $generated@@526)) (forall (($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@301 $generated@@524) $generated@@527))) (and ($generated@@246 ($generated@@92 ($generated@@384 $generated@@524) $generated@@527) $generated@@526) ($generated@@246 $generated@@527 $generated@@525)))
 :pattern ( ($generated@@92 ($generated@@384 $generated@@524) $generated@@527))
 :pattern ( ($generated@@92 ($generated@@301 $generated@@524) $generated@@527))
))))
 :pattern ( ($generated@@83 $generated@@524 ($generated@@409 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) ($generated@@321 $generated@@81 $generated@@81)) (= (type $generated@@529) $generated@@66)) (= (type $generated@@530) $generated@@66)) (= ($generated@@83 $generated@@528 ($generated@@417 $generated@@529 $generated@@530)) (forall (($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@319 $generated@@528) $generated@@531))) (and ($generated@@246 ($generated@@92 ($generated@@392 $generated@@528) $generated@@531) $generated@@530) ($generated@@246 $generated@@531 $generated@@529)))
 :pattern ( ($generated@@92 ($generated@@392 $generated@@528) $generated@@531))
 :pattern ( ($generated@@92 ($generated@@319 $generated@@528) $generated@@531))
))))
 :pattern ( ($generated@@83 $generated@@528 ($generated@@417 $generated@@529 $generated@@530)))
)))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@533) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 $generated@@533) (and (not (= 3 $generated@@74)) (and (and ($generated@@77 $generated@@532) ($generated@@83 $generated@@533 ($generated@@84 $generated@@85))) (not ($generated@@86 $generated@@533 ($generated@@87 $generated@@81))))))) (and ($generated@@88 $generated@@533) (= ($generated@@75 $generated@@533) (let (($generated@@534 ($generated@@89 $generated@@533)))
$generated@@534))))
 :pattern ( ($generated@@75 $generated@@533) ($generated@@77 $generated@@532))
))))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@81) (= (type $generated@@538) $generated@@81)) (< ($generated@@535 $generated@@537) ($generated@@536 ($generated@@245 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@245 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@81) (= (type $generated@@540) $generated@@81)) (< ($generated@@535 $generated@@540) ($generated@@536 ($generated@@245 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@245 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@81) (= (type $generated@@542) $generated@@66)) (= (type $generated@@543) $generated@@66)) ($generated@@246 $generated@@541 ($generated@@409 $generated@@542 $generated@@543))) (and (= ($generated@@288 ($generated@@344 ($generated@@303 $generated@@81 $generated@@81) $generated@@541)) $generated@@541) ($generated@@83 ($generated@@344 ($generated@@303 $generated@@81 $generated@@81) $generated@@541) ($generated@@409 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@246 $generated@@541 ($generated@@409 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@544) $generated@@81) (= (type $generated@@545) $generated@@66)) (= (type $generated@@546) $generated@@66)) ($generated@@246 $generated@@544 ($generated@@417 $generated@@545 $generated@@546))) (and (= ($generated@@288 ($generated@@344 ($generated@@321 $generated@@81 $generated@@81) $generated@@544)) $generated@@544) ($generated@@83 ($generated@@344 ($generated@@321 $generated@@81 $generated@@81) $generated@@544) ($generated@@417 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@246 $generated@@544 ($generated@@417 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@66) (= (type $generated@@548) $generated@@66)) (= (type $generated@@549) $generated@@81)) ($generated@@246 $generated@@549 ($generated@@158 $generated@@547 $generated@@548))) (and (= ($generated@@288 ($generated@@344 $generated@@159 $generated@@549)) $generated@@549) ($generated@@83 ($generated@@344 $generated@@159 $generated@@549) ($generated@@158 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@246 $generated@@549 ($generated@@158 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 (type $generated@@550)))
 (not ($generated@@0 ($generated@@92 ($generated@@87 $generated@@551) $generated@@550))))
 :pattern ( (let (($generated@@551 (type $generated@@550)))
($generated@@92 ($generated@@87 $generated@@551) $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
 (not ($generated@@0 ($generated@@92 ($generated@@428 $generated@@553) $generated@@552))))
 :pattern ( (let (($generated@@553 (type $generated@@552)))
($generated@@92 ($generated@@428 $generated@@553) $generated@@552)))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@71)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@66) (= (type $generated@@557) $generated@@66)) (and (= ($generated@@147 ($generated@@158 $generated@@556 $generated@@557)) $generated@@62) (= ($generated@@554 ($generated@@158 $generated@@556 $generated@@557)) $generated@@64)))
 :pattern ( ($generated@@158 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@159) (= ($generated@@535 ($generated@@288 $generated@@558)) ($generated@@536 $generated@@558)))
 :pattern ( ($generated@@535 ($generated@@288 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@81) ($generated@@246 $generated@@559 ($generated@@150 0))) (and (= ($generated@@288 ($generated@@344 $generated@@2 $generated@@559)) $generated@@559) ($generated@@83 ($generated@@344 ($generated@@78 $generated@@81 $generated@@4) $generated@@559) ($generated@@150 0))))
 :pattern ( ($generated@@246 $generated@@559 ($generated@@150 0)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@560) $generated@@81) (= (type $generated@@561) $generated@@66)) ($generated@@246 $generated@@560 ($generated@@84 $generated@@561))) (and (= ($generated@@288 ($generated@@344 ($generated@@78 $generated@@81 $generated@@4) $generated@@560)) $generated@@560) ($generated@@83 ($generated@@344 ($generated@@78 $generated@@81 $generated@@4) $generated@@560) ($generated@@84 $generated@@561))))
 :pattern ( ($generated@@246 $generated@@560 ($generated@@84 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@81) (= (type $generated@@563) $generated@@66)) ($generated@@246 $generated@@562 ($generated@@258 $generated@@563))) (and (= ($generated@@288 ($generated@@344 ($generated@@78 $generated@@81 $generated@@4) $generated@@562)) $generated@@562) ($generated@@83 ($generated@@344 ($generated@@78 $generated@@81 $generated@@4) $generated@@562) ($generated@@258 $generated@@563))))
 :pattern ( ($generated@@246 $generated@@562 ($generated@@258 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@81) (= (type $generated@@565) $generated@@66)) ($generated@@246 $generated@@564 ($generated@@172 $generated@@565))) (and (= ($generated@@288 ($generated@@344 ($generated@@78 $generated@@81 $generated@@2) $generated@@564)) $generated@@564) ($generated@@83 ($generated@@344 ($generated@@78 $generated@@81 $generated@@2) $generated@@564) ($generated@@172 $generated@@565))))
 :pattern ( ($generated@@246 $generated@@564 ($generated@@172 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@81) (= (type $generated@@567) $generated@@66)) ($generated@@246 $generated@@566 ($generated@@494 $generated@@567))) (and (= ($generated@@288 ($generated@@344 ($generated@@281 $generated@@81) $generated@@566)) $generated@@566) ($generated@@83 ($generated@@344 ($generated@@281 $generated@@81) $generated@@566) ($generated@@494 $generated@@567))))
 :pattern ( ($generated@@246 $generated@@566 ($generated@@494 $generated@@567)))
)))
(assert (= ($generated@@147 $generated@@85) $generated@@63))
(assert (= ($generated@@554 $generated@@85) $generated@@65))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@569) $generated@@66)) (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@568 ($generated@@172 $generated@@569) $generated@@570) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@81) (< 0 ($generated ($generated@@92 $generated@@568 $generated@@571)))) ($generated@@267 $generated@@571 $generated@@569 $generated@@570))
 :pattern ( ($generated@@92 $generated@@568 $generated@@571))
))))
 :pattern ( ($generated@@149 $generated@@568 ($generated@@172 $generated@@569) $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) $generated@@159) (= (type $generated@@573) $generated@@66)) (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@77 $generated@@574) (and ($generated@@157 $generated@@572) (exists (($generated@@575 T@U) ) (!  (and (= (type $generated@@575) $generated@@66) ($generated@@149 $generated@@572 ($generated@@158 $generated@@573 $generated@@575) $generated@@574))
 :pattern ( ($generated@@149 $generated@@572 ($generated@@158 $generated@@573 $generated@@575) $generated@@574))
))))) ($generated@@267 ($generated@@166 $generated@@572) $generated@@573 $generated@@574))
 :pattern ( ($generated@@267 ($generated@@166 $generated@@572) $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@159) (= (type $generated@@577) $generated@@66)) (= (type $generated@@578) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@77 $generated@@578) (and ($generated@@157 $generated@@576) (exists (($generated@@579 T@U) ) (!  (and (= (type $generated@@579) $generated@@66) ($generated@@149 $generated@@576 ($generated@@158 $generated@@579 $generated@@577) $generated@@578))
 :pattern ( ($generated@@149 $generated@@576 ($generated@@158 $generated@@579 $generated@@577) $generated@@578))
))))) ($generated@@267 ($generated@@167 $generated@@576) $generated@@577 $generated@@578))
 :pattern ( ($generated@@267 ($generated@@167 $generated@@576) $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@81) (= (type $generated@@581) $generated@@81)) (= ($generated@@245 ($generated@@76 $generated@@580) ($generated@@76 $generated@@581)) ($generated@@76 ($generated@@245 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@245 ($generated@@76 $generated@@580) ($generated@@76 $generated@@581)))
)))
(assert (forall (($generated@@582 Int) ) (! (= ($generated@@288 ($generated@@8 ($generated@@263 $generated@@582))) ($generated@@76 ($generated@@288 ($generated@@8 $generated@@582))))
 :pattern ( ($generated@@288 ($generated@@8 ($generated@@263 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ) (! (= ($generated@@288 ($generated@@76 $generated@@583)) ($generated@@76 ($generated@@288 $generated@@583)))
 :pattern ( ($generated@@288 ($generated@@76 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ) (! (let (($generated@@585 ($generated@@282 (type $generated@@584))))
 (=> (and (= (type $generated@@584) ($generated@@281 $generated@@585)) (= ($generated@@280 $generated@@584) 0)) (= $generated@@584 ($generated@@279 $generated@@585))))
 :pattern ( ($generated@@280 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (! (let (($generated@@589 (type $generated@@587)))
 (=> (and (and (= (type $generated@@586) ($generated@@78 $generated@@589 $generated@@2)) (= (type $generated@@588) $generated@@2)) (<= 0 ($generated $generated@@588))) (= ($generated@@293 ($generated@@93 $generated@@586 $generated@@587 $generated@@588)) (+ (- ($generated@@293 $generated@@586) ($generated ($generated@@92 $generated@@586 $generated@@587))) ($generated $generated@@588)))))
 :pattern ( ($generated@@293 ($generated@@93 $generated@@586 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@591) $generated@@2)) ($generated@@149 $generated@@591 $generated@@46 $generated@@590))
 :pattern ( ($generated@@149 $generated@@591 $generated@@46 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@593) $generated@@3)) ($generated@@149 $generated@@593 $generated@@47 $generated@@592))
 :pattern ( ($generated@@149 $generated@@593 $generated@@47 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@595) $generated@@4)) ($generated@@149 $generated@@595 $generated@@44 $generated@@594))
 :pattern ( ($generated@@149 $generated@@595 $generated@@44 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@597) $generated@@452)) ($generated@@149 $generated@@597 $generated@@45 $generated@@596))
 :pattern ( ($generated@@149 $generated@@597 $generated@@45 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@599) $generated@@81)) ($generated@@149 $generated@@599 $generated@@48 $generated@@598))
 :pattern ( ($generated@@149 $generated@@599 $generated@@48 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@281 $generated@@81)) (= (type $generated@@601) $generated@@66)) (= ($generated@@83 $generated@@600 ($generated@@494 $generated@@601)) (forall (($generated@@602 Int) ) (!  (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@280 $generated@@600))) ($generated@@246 ($generated@@495 $generated@@600 $generated@@602) $generated@@601))
 :pattern ( ($generated@@495 $generated@@600 $generated@@602))
))))
 :pattern ( ($generated@@83 $generated@@600 ($generated@@494 $generated@@601)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 Int) ) (!  (=> (= (type $generated@@604) ($generated@@281 $generated@@81)) (=> (and (<= 0 $generated@@605) (< $generated@@605 ($generated@@280 $generated@@604))) (< ($generated@@536 ($generated@@344 $generated@@159 ($generated@@495 $generated@@604 $generated@@605))) ($generated@@603 $generated@@604))))
 :pattern ( ($generated@@536 ($generated@@344 $generated@@159 ($generated@@495 $generated@@604 $generated@@605))))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) ($generated@@303 $generated@@81 $generated@@81)) (= (type $generated@@607) $generated@@66)) (= (type $generated@@608) $generated@@66)) ($generated@@83 $generated@@606 ($generated@@409 $generated@@607 $generated@@608))) (and (and ($generated@@83 ($generated@@301 $generated@@606) ($generated@@84 $generated@@607)) ($generated@@83 ($generated@@352 $generated@@606) ($generated@@84 $generated@@608))) ($generated@@83 ($generated@@383 $generated@@606) ($generated@@84 ($generated@@158 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@83 $generated@@606 ($generated@@409 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) ($generated@@321 $generated@@81 $generated@@81)) (= (type $generated@@610) $generated@@66)) (= (type $generated@@611) $generated@@66)) ($generated@@83 $generated@@609 ($generated@@417 $generated@@610 $generated@@611))) (and (and ($generated@@83 ($generated@@319 $generated@@609) ($generated@@258 $generated@@610)) ($generated@@83 ($generated@@363 $generated@@609) ($generated@@258 $generated@@611))) ($generated@@83 ($generated@@391 $generated@@609) ($generated@@258 ($generated@@158 $generated@@610 $generated@@611)))))
 :pattern ( ($generated@@83 $generated@@609 ($generated@@417 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@2) ($generated@@83 $generated@@612 $generated@@46))
 :pattern ( ($generated@@83 $generated@@612 $generated@@46))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@3) ($generated@@83 $generated@@613 $generated@@47))
 :pattern ( ($generated@@83 $generated@@613 $generated@@47))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (= (type $generated@@614) $generated@@4) ($generated@@83 $generated@@614 $generated@@44))
 :pattern ( ($generated@@83 $generated@@614 $generated@@44))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (= (type $generated@@615) $generated@@452) ($generated@@83 $generated@@615 $generated@@45))
 :pattern ( ($generated@@83 $generated@@615 $generated@@45))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@81) ($generated@@83 $generated@@616 $generated@@48))
 :pattern ( ($generated@@83 $generated@@616 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () Int)
(declare-fun $generated@@620 () T@U)
(declare-fun $generated@@621 () T@U)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 (T@U) Bool)
(declare-fun $generated@@625 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@617) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@620) ($generated@@179 $generated@@79 $generated@@4))) (= (type $generated@@621) $generated@@79)) (= (type $generated@@622) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@623) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@625) ($generated@@179 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@626 true))
(let (($generated@@627  (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (and ($generated@@83 ($generated@@8 ($generated@@263 0)) $generated@@46) (and ($generated@@0 ($generated@@92 $generated@@617 ($generated@@288 ($generated@@8 ($generated@@263 0))))) (forall (($generated@@628 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@92 $generated@@617 ($generated@@288 ($generated@@8 $generated@@628)))) (<= $generated@@628 ($generated@@263 0))))
 :pattern ( ($generated@@92 $generated@@617 ($generated@@288 ($generated@@8 $generated@@628))))
)))) (exists (($generated@@629 T@U) ) (!  (and (= (type $generated@@629) $generated@@2) (and ($generated@@0 ($generated@@92 $generated@@617 ($generated@@288 $generated@@629))) (forall (($generated@@630 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@92 $generated@@617 ($generated@@288 ($generated@@8 $generated@@630)))) (<= $generated@@630 ($generated $generated@@629))))
 :pattern ( ($generated@@92 $generated@@617 ($generated@@288 ($generated@@8 $generated@@630))))
))))
 :no-pattern (type $generated@@629)
 :no-pattern ($generated $generated@@629)
 :no-pattern ($generated@@0 $generated@@629)
)))) (=> (or (and ($generated@@83 ($generated@@8 ($generated@@263 0)) $generated@@46) (and ($generated@@0 ($generated@@92 $generated@@617 ($generated@@288 ($generated@@8 ($generated@@263 0))))) (forall (($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@631) $generated@@2) true) ($generated@@0 ($generated@@92 $generated@@617 ($generated@@288 $generated@@631)))) (<= ($generated $generated@@631) ($generated@@263 0)))
 :pattern ( ($generated@@92 $generated@@617 ($generated@@288 $generated@@631)))
)))) (exists (($generated@@632 Int) )  (and ($generated@@0 ($generated@@92 $generated@@617 ($generated@@288 ($generated@@8 $generated@@632)))) (forall (($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@633) $generated@@2) true) ($generated@@0 ($generated@@92 $generated@@617 ($generated@@288 $generated@@633)))) (<= ($generated $generated@@633) $generated@@632))
 :pattern ( ($generated@@92 $generated@@617 ($generated@@288 $generated@@633)))
))))) (=> (and (and ($generated@@0 ($generated@@92 $generated@@617 ($generated@@288 ($generated@@8 $generated@@618)))) (forall (($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@634) $generated@@2) true) ($generated@@0 ($generated@@92 $generated@@617 ($generated@@288 $generated@@634)))) (<= ($generated $generated@@634) $generated@@618))
 :pattern ( ($generated@@92 $generated@@617 ($generated@@288 $generated@@634)))
))) (and ($generated@@88 $generated@@617) (= (ControlFlow 0 4) (- 0 3)))) ($generated@@83 ($generated@@8 $generated@@618) $generated@@85))))))
(let (($generated@@635  (=> (and (not ($generated@@0 ($generated@@92 $generated@@617 ($generated@@288 ($generated@@8 $generated@@619))))) (= (ControlFlow 0 9) 4)) $generated@@627)))
(let (($generated@@636  (=> (and ($generated@@0 ($generated@@92 $generated@@617 ($generated@@288 ($generated@@8 $generated@@619)))) (= (ControlFlow 0 8) 4)) $generated@@627)))
(let (($generated@@637  (and (=> (= (ControlFlow 0 10) 8) $generated@@636) (=> (= (ControlFlow 0 10) 9) $generated@@635))))
(let (($generated@@638  (=> ($generated@@0 ($generated@@92 $generated@@617 ($generated@@288 ($generated@@8 $generated@@618)))) (and (=> (= (ControlFlow 0 11) 10) $generated@@637) (=> (= (ControlFlow 0 11) 7) $generated@@626)))))
(let (($generated@@639  (=> (and (not ($generated@@0 ($generated@@92 $generated@@617 ($generated@@288 ($generated@@8 $generated@@618))))) (= (ControlFlow 0 6) 4)) $generated@@627)))
(let (($generated@@640  (and (=> (= (ControlFlow 0 12) 11) $generated@@638) (=> (= (ControlFlow 0 12) 6) $generated@@639))))
(let (($generated@@641 true))
(let (($generated@@642  (=> (= $generated@@620 ($generated@@233 $generated@@621 $generated@@622 $generated@@60 false)) (and (=> (= (ControlFlow 0 13) (- 0 14)) (not ($generated@@86 $generated@@617 ($generated@@87 $generated@@81)))) (=> (not ($generated@@86 $generated@@617 ($generated@@87 $generated@@81))) (=> (and (and ($generated@@77 $generated@@623) ($generated@@624 $generated@@623)) (and (exists (($generated@@643 Int) ) (!  (and ($generated@@0 ($generated@@92 $generated@@617 ($generated@@288 ($generated@@8 $generated@@643)))) (forall (($generated@@644 T@U) ) (!  (=> (and (and (= (type $generated@@644) $generated@@2) true) ($generated@@0 ($generated@@92 $generated@@617 ($generated@@288 $generated@@644)))) (<= ($generated $generated@@644) $generated@@643))
 :pattern ( ($generated@@92 $generated@@617 ($generated@@288 $generated@@644)))
)))
 :pattern ( ($generated@@92 $generated@@617 ($generated@@288 ($generated@@8 $generated@@643))))
)) (= $generated@@622 $generated@@623))) (and (=> (= (ControlFlow 0 13) 12) $generated@@640) (=> (= (ControlFlow 0 13) 2) $generated@@641))))))))
(let (($generated@@645 true))
(let (($generated@@646  (=> (and (= $generated@@625 ($generated@@178 $generated@@621 $generated@@622 $generated@@60 false)) (not ($generated@@86 $generated@@617 ($generated@@87 $generated@@81)))) (and (=> (= (ControlFlow 0 15) 1) $generated@@645) (=> (= (ControlFlow 0 15) 13) $generated@@642)))))
(let (($generated@@647  (=> (and (and (and ($generated@@77 $generated@@622) ($generated@@624 $generated@@622)) ($generated@@83 $generated@@617 ($generated@@84 $generated@@85))) (and (= 3 $generated@@74) (= (ControlFlow 0 16) 15))) $generated@@646)))
$generated@@647))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 () Int)
(declare-fun $generated@@138 (T@U T@U) Int)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@T) T@U)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Int)
(declare-fun $generated@@152 (T@U T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@191 (T@U T@U T@U) T@U)
(declare-fun $generated@@192 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@193 (T@T T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U) T@U)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (Int) Int)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@271 (T@U T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@295 (T@U) Int)
(declare-fun $generated@@296 (T@T) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@T T@T) T@U)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@320 (T@T T@T) T@U)
(declare-fun $generated@@321 (T@T T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@344 (T@T T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@444 (T@T) T@U)
(declare-fun $generated@@468 () T@T)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@511 () T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@516 (T@U Int) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@556 (T@U) Int)
(declare-fun $generated@@557 (T@U) Int)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@637 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert  (and (and (and (and (and (and (and (= ($generated@@1 $generated@@141) 14) (= ($generated@@1 $generated@@142) 15)) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@139 $generated@@153)) $generated@@141)
 :pattern ( ($generated@@139 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@145 $generated@@154)) $generated@@66)
 :pattern ( ($generated@@145 $generated@@154))
))) (forall (($generated@@155 T@T) ) (! (= (type ($generated@@147 $generated@@155)) ($generated@@78 $generated@@155 $generated@@4))
 :pattern ( ($generated@@147 $generated@@155))
))) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 (type $generated@@157)))
(= (type ($generated@@149 $generated@@156 $generated@@157)) ($generated@@78 $generated@@158 $generated@@4)))
 :pattern ( ($generated@@149 $generated@@156 $generated@@157))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@150 $generated@@159)) $generated@@142)
 :pattern ( ($generated@@150 $generated@@159))
))) (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 ($generated@@81 (type $generated@@160))))
(= (type ($generated@@152 $generated@@160 $generated@@161)) ($generated@@78 $generated@@162 $generated@@4)))
 :pattern ( ($generated@@152 $generated@@160 $generated@@161))
))))
(assert  (=> (<= 1 $generated@@137) (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@163) $generated@@141) (= (type $generated@@164) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@165) ($generated@@78 $generated@@142 $generated@@4))) (or ($generated@@143 $generated@@165) (and (not (= 1 $generated@@137)) (and (and ($generated@@140 $generated@@164) ($generated@@144 $generated@@165 ($generated@@145 $generated@@134))) (not ($generated@@146 $generated@@165 ($generated@@147 $generated@@142))))))) (and (and ($generated@@148 $generated@@165) (=> (not ($generated@@146 $generated@@165 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 ($generated@@151 $generated@@165)))))) (let (($generated@@166 ($generated@@152 $generated@@165 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 ($generated@@151 $generated@@165)))))))
($generated@@143 $generated@@166)))) (= ($generated@@138 ($generated@@139 $generated@@163) $generated@@165) (let (($generated@@167 ($generated@@151 $generated@@165)))
(ite ($generated@@146 $generated@@165 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 $generated@@167)))) $generated@@167 (let (($generated@@168 ($generated@@152 $generated@@165 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 $generated@@167))))))
(let (($generated@@169 ($generated@@138 $generated@@163 $generated@@168)))
(ite (< $generated@@167 $generated@@169) $generated@@169 $generated@@167))))))))
 :pattern ( ($generated@@138 ($generated@@139 $generated@@163) $generated@@165) ($generated@@140 $generated@@164))
))))
(assert (forall (($generated@@170 T@U) ) (!  (=> (= (type $generated@@170) $generated@@2) ($generated@@144 $generated@@170 ($generated@@77 0)))
 :pattern ( ($generated@@144 $generated@@170 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@173) 16) (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@174 $generated@@175)) $generated@@66)
 :pattern ( ($generated@@172 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (and (= (type $generated@@176) $generated@@66) (= (type $generated@@177) $generated@@66)) (= (type $generated@@178) $generated@@173)) ($generated@@144 $generated@@178 ($generated@@172 $generated@@176 $generated@@177))) ($generated@@171 $generated@@178))
 :pattern ( ($generated@@171 $generated@@178) ($generated@@144 $generated@@178 ($generated@@172 $generated@@176 $generated@@177)))
)))
(assert  (and (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@142)
 :pattern ( ($generated@@180 $generated@@182))
)) (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@142)
 :pattern ( ($generated@@181 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) $generated@@173) (= (type $generated@@185) $generated@@173)) true) (= ($generated@@179 $generated@@184 $generated@@185)  (and (= ($generated@@180 $generated@@184) ($generated@@180 $generated@@185)) (= ($generated@@181 $generated@@184) ($generated@@181 $generated@@185)))))
 :pattern ( ($generated@@179 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@66)
 :pattern ( ($generated@@186 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) ($generated@@78 $generated@@142 $generated@@2)) (= (type $generated@@190) $generated@@66)) ($generated@@144 $generated@@189 ($generated@@186 $generated@@190))) ($generated@@187 $generated@@189))
 :pattern ( ($generated@@144 $generated@@189 ($generated@@186 $generated@@190)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (= ($generated@@1 ($generated@@193 $generated@@197 $generated@@198)) 17)) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@199 $generated@@200)) $generated@@199)
 :pattern ( ($generated@@193 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@195 ($generated@@193 $generated@@201 $generated@@202)) $generated@@202)
 :pattern ( ($generated@@193 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@195 (type $generated@@203))))
(= (type ($generated@@191 $generated@@203 $generated@@204 $generated@@205)) $generated@@206))
 :pattern ( ($generated@@191 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(let (($generated@@212 (type $generated@@208)))
(= (type ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@193 $generated@@212 $generated@@211))))
 :pattern ( ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@195 (type $generated@@213))))
 (=> (= (type $generated@@216) $generated@@217) (= ($generated@@191 ($generated@@196 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@214 $generated@@215) $generated@@216)))
 :weight 0
))) (and (and (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@220 $generated@@222) (= ($generated@@191 ($generated@@196 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@191 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or (= $generated@@227 $generated@@229) (= ($generated@@191 ($generated@@196 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@191 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or true (= ($generated@@191 ($generated@@196 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@191 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
)))) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ) (! (= (type ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239)) ($generated@@193 $generated@@79 $generated@@4))
 :pattern ( ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239))
))))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@69 (type $generated@@245))))
 (=> (and (and (and (and (= (type $generated@@240) $generated@@79) (= (type $generated@@241) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@242) ($generated@@68 $generated@@4))) (= (type $generated@@244) $generated@@79)) (= (type $generated@@245) ($generated@@68 $generated@@246))) (= ($generated@@0 ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))  (=> (and (not (= $generated@@244 $generated@@240)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@241 $generated@@244) $generated@@242))) $generated@@243))))
 :pattern ( ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@249 $generated@@250)) $generated@@173)
 :pattern ( ($generated@@247 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (= (type $generated@@251) $generated@@66) (= (type $generated@@252) $generated@@66)) (= (type $generated@@253) $generated@@142)) (= (type $generated@@254) $generated@@142)) (= ($generated@@144 ($generated@@247 $generated@@253 $generated@@254) ($generated@@172 $generated@@251 $generated@@252))  (and ($generated@@248 $generated@@253 $generated@@251) ($generated@@248 $generated@@254 $generated@@252))))
 :pattern ( ($generated@@144 ($generated@@247 $generated@@253 $generated@@254) ($generated@@172 $generated@@251 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@173) (= (type $generated@@256) $generated@@173)) (= ($generated@@179 $generated@@255 $generated@@256) (= $generated@@255 $generated@@256)))
 :pattern ( ($generated@@179 $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) ($generated@@78 $generated@@142 $generated@@4)) (= (type $generated@@258) $generated@@66)) (= ($generated@@144 $generated@@257 ($generated@@145 $generated@@258)) (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@142) ($generated@@0 ($generated@@83 $generated@@257 $generated@@259))) ($generated@@248 $generated@@259 $generated@@258))
 :pattern ( ($generated@@83 $generated@@257 $generated@@259))
))))
 :pattern ( ($generated@@144 $generated@@257 ($generated@@145 $generated@@258)))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@66)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) ($generated@@78 $generated@@142 $generated@@4)) (= (type $generated@@263) $generated@@66)) (= ($generated@@144 $generated@@262 ($generated@@260 $generated@@263)) (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@142) ($generated@@0 ($generated@@83 $generated@@262 $generated@@264))) ($generated@@248 $generated@@264 $generated@@263))
 :pattern ( ($generated@@83 $generated@@262 $generated@@264))
))))
 :pattern ( ($generated@@144 $generated@@262 ($generated@@260 $generated@@263)))
)))
(assert (forall (($generated@@266 Int) ) (! (= ($generated@@265 $generated@@266) $generated@@266)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (let (($generated@@269 (type $generated@@268)))
(= (type ($generated@@267 $generated@@268)) $generated@@269))
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! (= ($generated@@267 $generated@@270) $generated@@270)
 :pattern ( ($generated@@267 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) $generated@@66) (= (type $generated@@273) $generated@@66)) (= (type $generated@@274) $generated@@142)) (= (type $generated@@275) $generated@@142)) (= (type $generated@@276) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@140 $generated@@276)) (= ($generated@@76 ($generated@@247 $generated@@274 $generated@@275) ($generated@@172 $generated@@272 $generated@@273) $generated@@276)  (and ($generated@@271 $generated@@274 $generated@@272 $generated@@276) ($generated@@271 $generated@@275 $generated@@273 $generated@@276))))
 :pattern ( ($generated@@76 ($generated@@247 $generated@@274 $generated@@275) ($generated@@172 $generated@@272 $generated@@273) $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@70)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@173) (= ($generated@@171 $generated@@279) (= ($generated@@277 $generated@@279) $generated@@61)))
 :pattern ( ($generated@@171 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@173) ($generated@@171 $generated@@280)) (exists (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (and (and (= (type $generated@@281) $generated@@142) (= (type $generated@@282) $generated@@142)) (= $generated@@280 ($generated@@247 $generated@@281 $generated@@282)))
 :no-pattern (type $generated@@281)
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
)))
 :pattern ( ($generated@@171 $generated@@280))
)))
(assert  (and (and (forall (($generated@@287 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@287)) 18)) (forall (($generated@@288 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@288)) $generated@@288)
 :pattern ( ($generated@@285 $generated@@288))
))) (forall (($generated@@289 T@T) ) (! (= (type ($generated@@283 $generated@@289)) ($generated@@285 $generated@@289))
 :pattern ( ($generated@@283 $generated@@289))
))))
(assert (forall (($generated@@290 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@290)) 0)
 :pattern ( ($generated@@283 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@2) (= ($generated@@144 $generated@@291 $generated@@134) (<= ($generated@@265 1) ($generated $generated@@291))))
 :pattern ( ($generated@@144 $generated@@291 $generated@@134))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@66) (= (type $generated@@294) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@271 ($generated@@150 $generated@@292) $generated@@293 $generated@@294) ($generated@@76 $generated@@292 $generated@@293 $generated@@294)))
 :pattern ( ($generated@@271 ($generated@@150 $generated@@292) $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@297 T@T) ) (! (= (type ($generated@@296 $generated@@297)) ($generated@@78 $generated@@297 $generated@@2))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@81 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@78 $generated@@299 $generated@@2)) (and (= (= ($generated@@295 $generated@@298) 0) (= $generated@@298 ($generated@@296 $generated@@299))) (=> (not (= ($generated@@295 $generated@@298) 0)) (exists (($generated@@300 T@U) ) (!  (and (= (type $generated@@300) $generated@@299) (< 0 ($generated ($generated@@83 $generated@@298 $generated@@300))))
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
))))))
 :pattern ( ($generated@@295 $generated@@298))
)))
(assert  (and (and (and (and (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@306 $generated@@307)) 19)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@308 $generated@@309)) $generated@@308)
 :pattern ( ($generated@@303 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@310 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@303 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@304 (type $generated@@312))))
(= (type ($generated@@301 $generated@@312)) ($generated@@78 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@301 $generated@@312))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= (type ($generated@@302 $generated@@314 $generated@@315)) ($generated@@303 $generated@@314 $generated@@315))
 :pattern ( ($generated@@302 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@T) ) (! (let (($generated@@318 (type $generated@@316)))
 (not ($generated@@0 ($generated@@83 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316))))
 :pattern ( (let (($generated@@318 (type $generated@@316)))
($generated@@83 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316)))
)))
(assert  (and (and (and (and (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (= ($generated@@1 ($generated@@321 $generated@@324 $generated@@325)) 20)) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@321 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@323 ($generated@@321 $generated@@328 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@321 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@322 (type $generated@@330))))
(= (type ($generated@@319 $generated@@330)) ($generated@@78 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@319 $generated@@330))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= (type ($generated@@320 $generated@@332 $generated@@333)) ($generated@@321 $generated@@332 $generated@@333))
 :pattern ( ($generated@@320 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@T) ) (! (let (($generated@@336 (type $generated@@334)))
 (not ($generated@@0 ($generated@@83 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334))))
 :pattern ( (let (($generated@@336 (type $generated@@334)))
($generated@@83 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334)))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@81 (type $generated@@337))))
 (=> (and (= (type $generated@@337) ($generated@@78 $generated@@339 $generated@@4)) (= (type $generated@@338) ($generated@@78 $generated@@339 $generated@@4))) (= ($generated@@146 $generated@@337 $generated@@338) (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@339) (= ($generated@@0 ($generated@@83 $generated@@337 $generated@@340)) ($generated@@0 ($generated@@83 $generated@@338 $generated@@340))))
 :pattern ( ($generated@@83 $generated@@337 $generated@@340))
 :pattern ( ($generated@@83 $generated@@338 $generated@@340))
)))))
 :pattern ( ($generated@@146 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@81 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@78 $generated@@342 $generated@@2)) (= ($generated@@187 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@83 $generated@@341 $generated@@343))) (<= ($generated ($generated@@83 $generated@@341 $generated@@343)) ($generated@@295 $generated@@341))))
 :pattern ( ($generated@@83 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@187 $generated@@341))
)))
(assert (forall (($generated@@345 T@T) ($generated@@346 T@U) ) (! (= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@142) ($generated@@248 $generated@@347 $generated@@134)) (and (= ($generated@@150 ($generated@@344 $generated@@2 $generated@@347)) $generated@@347) ($generated@@144 ($generated@@344 $generated@@2 $generated@@347) $generated@@134)))
 :pattern ( ($generated@@248 $generated@@347 $generated@@134))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@305 (type $generated@@348))))
(let (($generated@@350 ($generated@@304 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@303 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@302 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@350) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@301 $generated@@348))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@305 (type $generated@@353))))
(= (type ($generated@@352 $generated@@353)) ($generated@@78 $generated@@354 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@305 (type $generated@@355))))
(let (($generated@@357 ($generated@@304 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@303 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@302 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@356) ($generated@@0 ($generated@@83 ($generated@@352 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@352 $generated@@355))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@323 (type $generated@@359))))
(let (($generated@@361 ($generated@@322 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@321 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@320 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@361) ($generated@@0 ($generated@@83 ($generated@@319 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@319 $generated@@359))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@323 (type $generated@@364))))
(= (type ($generated@@363 $generated@@364)) ($generated@@78 $generated@@365 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@323 (type $generated@@366))))
(let (($generated@@368 ($generated@@322 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@321 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@320 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@367) ($generated@@0 ($generated@@83 ($generated@@363 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@363 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@370) ($generated@@78 $generated@@142 $generated@@2)) (= (type $generated@@371) $generated@@66)) (= ($generated@@144 $generated@@370 ($generated@@186 $generated@@371)) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@142) (< 0 ($generated ($generated@@83 $generated@@370 $generated@@372)))) ($generated@@248 $generated@@372 $generated@@371))
 :pattern ( ($generated@@83 $generated@@370 $generated@@372))
))))
 :pattern ( ($generated@@144 $generated@@370 ($generated@@186 $generated@@371)))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
 (=> (and (= (type $generated@@373) ($generated@@78 $generated@@376 $generated@@4)) (= (type $generated@@374) ($generated@@78 $generated@@376 $generated@@4))) (= ($generated@@0 ($generated@@83 ($generated@@152 $generated@@373 $generated@@374) $generated@@375))  (and ($generated@@0 ($generated@@83 $generated@@373 $generated@@375)) (not ($generated@@0 ($generated@@83 $generated@@374 $generated@@375)))))))
 :pattern ( ($generated@@83 ($generated@@152 $generated@@373 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@78 $generated@@142 $generated@@4)) (= (type $generated@@378) $generated@@66)) (= (type $generated@@379) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@377 ($generated@@145 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@142) ($generated@@0 ($generated@@83 $generated@@377 $generated@@380))) ($generated@@271 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@83 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@76 $generated@@377 ($generated@@145 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@381) ($generated@@78 $generated@@142 $generated@@4)) (= (type $generated@@382) $generated@@66)) (= (type $generated@@383) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@381 ($generated@@260 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@142) ($generated@@0 ($generated@@83 $generated@@381 $generated@@384))) ($generated@@271 $generated@@384 $generated@@382 $generated@@383))
 :pattern ( ($generated@@83 $generated@@381 $generated@@384))
))))
 :pattern ( ($generated@@76 $generated@@381 ($generated@@260 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(= ($generated ($generated@@83 ($generated@@296 $generated@@386) $generated@@385)) 0))
 :pattern ( (let (($generated@@386 (type $generated@@385)))
($generated@@83 ($generated@@296 $generated@@386) $generated@@385)))
)))
(assert  (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@389)) ($generated@@78 $generated@@142 $generated@@4))
 :pattern ( ($generated@@387 $generated@@389))
)) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@305 (type $generated@@390))))
(let (($generated@@392 ($generated@@304 (type $generated@@390))))
(= (type ($generated@@388 $generated@@390)) ($generated@@78 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@388 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@303 $generated@@142 $generated@@142)) (= (type $generated@@394) $generated@@142)) (= ($generated@@0 ($generated@@83 ($generated@@387 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@83 ($generated@@301 $generated@@393) ($generated@@180 ($generated@@344 $generated@@173 $generated@@394)))) (= ($generated@@83 ($generated@@388 $generated@@393) ($generated@@180 ($generated@@344 $generated@@173 $generated@@394))) ($generated@@181 ($generated@@344 $generated@@173 $generated@@394))))))
 :pattern ( ($generated@@83 ($generated@@387 $generated@@393) $generated@@394))
)))
(assert  (and (forall (($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@397)) ($generated@@78 $generated@@142 $generated@@4))
 :pattern ( ($generated@@395 $generated@@397))
)) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@323 (type $generated@@398))))
(let (($generated@@400 ($generated@@322 (type $generated@@398))))
(= (type ($generated@@396 $generated@@398)) ($generated@@78 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@396 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@321 $generated@@142 $generated@@142)) (= (type $generated@@402) $generated@@142)) (= ($generated@@0 ($generated@@83 ($generated@@395 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@83 ($generated@@319 $generated@@401) ($generated@@180 ($generated@@344 $generated@@173 $generated@@402)))) (= ($generated@@83 ($generated@@396 $generated@@401) ($generated@@180 ($generated@@344 $generated@@173 $generated@@402))) ($generated@@181 ($generated@@344 $generated@@173 $generated@@402))))))
 :pattern ( ($generated@@83 ($generated@@395 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(let (($generated@@406 ($generated@@304 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@303 $generated@@406 $generated@@405)) (= ($generated@@0 ($generated@@83 ($generated@@352 $generated@@403) $generated@@404)) (exists (($generated@@407 T@U) ) (!  (and (= (type $generated@@407) $generated@@406) (and ($generated@@0 ($generated@@83 ($generated@@301 $generated@@403) $generated@@407)) (= $generated@@404 ($generated@@83 ($generated@@388 $generated@@403) $generated@@407))))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@403) $generated@@407))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@403) $generated@@407))
))))))
 :pattern ( ($generated@@83 ($generated@@352 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(let (($generated@@411 ($generated@@322 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@321 $generated@@411 $generated@@410)) (= ($generated@@0 ($generated@@83 ($generated@@363 $generated@@408) $generated@@409)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (and ($generated@@0 ($generated@@83 ($generated@@319 $generated@@408) $generated@@412)) (= $generated@@409 ($generated@@83 ($generated@@396 $generated@@408) $generated@@412))))
 :pattern ( ($generated@@83 ($generated@@319 $generated@@408) $generated@@412))
 :pattern ( ($generated@@83 ($generated@@396 $generated@@408) $generated@@412))
))))))
 :pattern ( ($generated@@83 ($generated@@363 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@66)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@303 $generated@@142 $generated@@142)) (= (type $generated@@417) $generated@@66)) (= (type $generated@@418) $generated@@66)) (= (type $generated@@419) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@142) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@416) $generated@@420))) (and ($generated@@271 ($generated@@83 ($generated@@388 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@271 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@416) $generated@@420))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@76 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@66)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@321 $generated@@142 $generated@@142)) (= (type $generated@@425) $generated@@66)) (= (type $generated@@426) $generated@@66)) (= (type $generated@@427) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@142) ($generated@@0 ($generated@@83 ($generated@@319 $generated@@424) $generated@@428))) (and ($generated@@271 ($generated@@83 ($generated@@396 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@271 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@83 ($generated@@396 $generated@@424) $generated@@428))
 :pattern ( ($generated@@83 ($generated@@319 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@76 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@81 (type $generated@@429))))
 (=> (and (and (= (type $generated@@429) ($generated@@78 $generated@@431 $generated@@4)) (= (type $generated@@430) ($generated@@78 $generated@@431 $generated@@4))) ($generated@@146 $generated@@429 $generated@@430)) (= $generated@@429 $generated@@430)))
 :pattern ( ($generated@@146 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@433)))
 (=> (and (and (= (type $generated@@432) ($generated@@78 $generated@@435 $generated@@4)) (= (type $generated@@434) $generated@@435)) ($generated@@0 ($generated@@83 $generated@@432 $generated@@434))) ($generated@@0 ($generated@@83 ($generated@@149 $generated@@432 $generated@@433) $generated@@434))))
 :pattern ( ($generated@@149 $generated@@432 $generated@@433) ($generated@@83 $generated@@432 $generated@@434))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (! (let (($generated@@439 (type $generated@@437)))
 (=> (and (= (type $generated@@436) ($generated@@78 $generated@@439 $generated@@4)) (= (type $generated@@438) $generated@@439)) (= ($generated@@0 ($generated@@83 ($generated@@149 $generated@@436 $generated@@437) $generated@@438))  (or (= $generated@@438 $generated@@437) ($generated@@0 ($generated@@83 $generated@@436 $generated@@438))))))
 :pattern ( ($generated@@83 ($generated@@149 $generated@@436 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (! (let (($generated@@443 (type $generated@@442)))
 (=> (and (and (= (type $generated@@440) ($generated@@78 $generated@@443 $generated@@4)) (= (type $generated@@441) ($generated@@78 $generated@@443 $generated@@4))) ($generated@@0 ($generated@@83 $generated@@441 $generated@@442))) (not ($generated@@0 ($generated@@83 ($generated@@152 $generated@@440 $generated@@441) $generated@@442)))))
 :pattern ( ($generated@@152 $generated@@440 $generated@@441) ($generated@@83 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@445 T@T) ) (! (= (type ($generated@@444 $generated@@445)) ($generated@@78 $generated@@445 $generated@@4))
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@323 (type $generated@@446))))
(let (($generated@@448 ($generated@@322 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@321 $generated@@448 $generated@@447)) (= (= $generated@@446 ($generated@@320 $generated@@448 $generated@@447)) (= ($generated@@319 $generated@@446) ($generated@@444 $generated@@448))))))
 :pattern ( ($generated@@319 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@323 (type $generated@@449))))
(let (($generated@@451 ($generated@@322 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@321 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@320 $generated@@451 $generated@@450)) (= ($generated@@363 $generated@@449) ($generated@@444 $generated@@450))))))
 :pattern ( ($generated@@363 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@323 (type $generated@@452))))
(let (($generated@@454 ($generated@@322 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@321 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@320 $generated@@454 $generated@@453)) (= ($generated@@395 $generated@@452) ($generated@@444 $generated@@142))))))
 :pattern ( ($generated@@395 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@305 (type $generated@@455))))
(let (($generated@@457 ($generated@@304 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@303 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@302 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (and (and (= (type $generated@@458) $generated@@142) (= (type $generated@@459) $generated@@142)) ($generated@@0 ($generated@@83 ($generated@@387 $generated@@455) ($generated@@150 ($generated@@247 $generated@@458 $generated@@459)))))
 :no-pattern (type $generated@@458)
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@387 $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@323 (type $generated@@460))))
(let (($generated@@462 ($generated@@322 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@321 $generated@@462 $generated@@461)) (or (= $generated@@460 ($generated@@320 $generated@@462 $generated@@461)) (exists (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (and (and (= (type $generated@@463) $generated@@142) (= (type $generated@@464) $generated@@142)) ($generated@@0 ($generated@@83 ($generated@@395 $generated@@460) ($generated@@150 ($generated@@247 $generated@@463 $generated@@464)))))
 :no-pattern (type $generated@@463)
 :no-pattern (type $generated@@464)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
))))))
 :pattern ( ($generated@@395 $generated@@460))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@142) ($generated@@248 $generated@@465 $generated@@46)) (and (= ($generated@@150 ($generated@@344 $generated@@2 $generated@@465)) $generated@@465) ($generated@@144 ($generated@@344 $generated@@2 $generated@@465) $generated@@46)))
 :pattern ( ($generated@@248 $generated@@465 $generated@@46))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@142) ($generated@@248 $generated@@466 $generated@@47)) (and (= ($generated@@150 ($generated@@344 $generated@@3 $generated@@466)) $generated@@466) ($generated@@144 ($generated@@344 $generated@@3 $generated@@466) $generated@@47)))
 :pattern ( ($generated@@248 $generated@@466 $generated@@47))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@142) ($generated@@248 $generated@@467 $generated@@44)) (and (= ($generated@@150 ($generated@@344 $generated@@4 $generated@@467)) $generated@@467) ($generated@@144 ($generated@@344 $generated@@4 $generated@@467) $generated@@44)))
 :pattern ( ($generated@@248 $generated@@467 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@468) 21))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@142) ($generated@@248 $generated@@469 $generated@@45)) (and (= ($generated@@150 ($generated@@344 $generated@@468 $generated@@469)) $generated@@469) ($generated@@144 ($generated@@344 $generated@@468 $generated@@469) $generated@@45)))
 :pattern ( ($generated@@248 $generated@@469 $generated@@45))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@66) (= ($generated@@248 ($generated@@150 $generated@@470) $generated@@471) ($generated@@144 $generated@@470 $generated@@471)))
 :pattern ( ($generated@@248 ($generated@@150 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@81 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@78 $generated@@473 $generated@@2)) (<= 0 ($generated@@295 $generated@@472))))
 :pattern ( ($generated@@295 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@286 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@285 $generated@@475)) (<= 0 ($generated@@284 $generated@@474))))
 :pattern ( ($generated@@284 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@66) (= (type $generated@@479) $generated@@66)) (= ($generated@@476 ($generated@@413 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@413 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@66)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@66) (= (type $generated@@483) $generated@@66)) (= ($generated@@480 ($generated@@413 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@413 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@66) (= (type $generated@@485) $generated@@66)) (= ($generated@@74 ($generated@@413 $generated@@484 $generated@@485)) $generated@@58))
 :pattern ( ($generated@@413 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@66)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@66) (= (type $generated@@489) $generated@@66)) (= ($generated@@486 ($generated@@421 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@421 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@66)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@66) (= (type $generated@@493) $generated@@66)) (= ($generated@@490 ($generated@@421 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@421 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@66) (= (type $generated@@495) $generated@@66)) (= ($generated@@74 ($generated@@421 $generated@@494 $generated@@495)) $generated@@59))
 :pattern ( ($generated@@421 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@142) (= (type $generated@@497) $generated@@142)) (= ($generated@@277 ($generated@@247 $generated@@496 $generated@@497)) $generated@@61))
 :pattern ( ($generated@@247 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@66) (= (type $generated@@501) $generated@@66)) (= ($generated@@498 ($generated@@172 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@172 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@66)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@66) (= (type $generated@@505) $generated@@66)) (= ($generated@@502 ($generated@@172 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@172 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@142) (= (type $generated@@507) $generated@@142)) (= ($generated@@180 ($generated@@247 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@247 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@142) (= (type $generated@@509) $generated@@142)) (= ($generated@@181 ($generated@@247 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@247 $generated@@508 $generated@@509))
)))
(assert  (and (forall (($generated@@512 T@U) ) (! (= (type ($generated@@510 $generated@@512)) $generated@@141)
 :pattern ( ($generated@@510 $generated@@512))
)) (= (type $generated@@511) $generated@@141)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@141) (= (type $generated@@514) ($generated@@78 $generated@@142 $generated@@4))) (= ($generated@@138 $generated@@513 $generated@@514) ($generated@@138 $generated@@511 $generated@@514)))
 :pattern ( ($generated@@138 ($generated@@510 $generated@@513) $generated@@514))
)))
(assert  (and (forall (($generated@@517 T@U) ) (! (= (type ($generated@@515 $generated@@517)) $generated@@66)
 :pattern ( ($generated@@515 $generated@@517))
)) (forall (($generated@@518 T@U) ($generated@@519 Int) ) (! (let (($generated@@520 ($generated@@286 (type $generated@@518))))
(= (type ($generated@@516 $generated@@518 $generated@@519)) $generated@@520))
 :pattern ( ($generated@@516 $generated@@518 $generated@@519))
))))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@285 $generated@@142)) (= (type $generated@@522) $generated@@66)) (= (type $generated@@523) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@521 ($generated@@515 $generated@@522) $generated@@523) (forall (($generated@@524 Int) ) (!  (=> (and (<= 0 $generated@@524) (< $generated@@524 ($generated@@284 $generated@@521))) ($generated@@271 ($generated@@516 $generated@@521 $generated@@524) $generated@@522 $generated@@523))
 :pattern ( ($generated@@516 $generated@@521 $generated@@524))
))))
 :pattern ( ($generated@@76 $generated@@521 ($generated@@515 $generated@@522) $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (! (let (($generated@@527 (type $generated@@526)))
 (=> (= (type $generated@@525) ($generated@@78 $generated@@527 $generated@@4)) ($generated@@0 ($generated@@83 ($generated@@149 $generated@@525 $generated@@526) $generated@@526))))
 :pattern ( ($generated@@149 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@529 Int) ) (! (= ($generated@@528 ($generated@@77 $generated@@529)) $generated@@529)
 :pattern ( ($generated@@77 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@66)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@66) (= ($generated@@530 ($generated@@145 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@145 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@66) (= ($generated@@74 ($generated@@145 $generated@@533)) $generated@@54))
 :pattern ( ($generated@@145 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@66)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@66) (= ($generated@@534 ($generated@@260 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@260 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@66) (= ($generated@@74 ($generated@@260 $generated@@537)) $generated@@55))
 :pattern ( ($generated@@260 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@66)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@66) (= ($generated@@538 ($generated@@186 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@186 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@66) (= ($generated@@74 ($generated@@186 $generated@@541)) $generated@@56))
 :pattern ( ($generated@@186 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@66)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@66) (= ($generated@@542 ($generated@@515 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@515 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@66) (= ($generated@@74 ($generated@@515 $generated@@545)) $generated@@57))
 :pattern ( ($generated@@515 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
(= ($generated@@344 $generated@@547 ($generated@@150 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@150 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@303 $generated@@142 $generated@@142)) (= (type $generated@@549) $generated@@66)) (= (type $generated@@550) $generated@@66)) (= ($generated@@144 $generated@@548 ($generated@@413 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@142) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@548) $generated@@551))) (and ($generated@@248 ($generated@@83 ($generated@@388 $generated@@548) $generated@@551) $generated@@550) ($generated@@248 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@548) $generated@@551))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@144 $generated@@548 ($generated@@413 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@321 $generated@@142 $generated@@142)) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) $generated@@66)) (= ($generated@@144 $generated@@552 ($generated@@421 $generated@@553 $generated@@554)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@142) ($generated@@0 ($generated@@83 ($generated@@319 $generated@@552) $generated@@555))) (and ($generated@@248 ($generated@@83 ($generated@@396 $generated@@552) $generated@@555) $generated@@554) ($generated@@248 $generated@@555 $generated@@553)))
 :pattern ( ($generated@@83 ($generated@@396 $generated@@552) $generated@@555))
 :pattern ( ($generated@@83 ($generated@@319 $generated@@552) $generated@@555))
))))
 :pattern ( ($generated@@144 $generated@@552 ($generated@@421 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@142) (= (type $generated@@559) $generated@@142)) (< ($generated@@556 $generated@@558) ($generated@@557 ($generated@@247 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@247 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@142) (= (type $generated@@561) $generated@@142)) (< ($generated@@556 $generated@@561) ($generated@@557 ($generated@@247 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@247 $generated@@560 $generated@@561))
)))
(assert  (=> (<= 1 $generated@@137) (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@141) (= (type $generated@@563) ($generated@@78 $generated@@142 $generated@@4))) (or ($generated@@143 $generated@@563) (and (not (= 1 $generated@@137)) (and ($generated@@144 $generated@@563 ($generated@@145 $generated@@134)) (not ($generated@@146 $generated@@563 ($generated@@147 $generated@@142))))))) (and (and ($generated@@0 ($generated@@83 $generated@@563 ($generated@@150 ($generated@@8 ($generated@@138 $generated@@562 $generated@@563))))) (forall (($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@2) true) ($generated@@0 ($generated@@83 $generated@@563 ($generated@@150 $generated@@564)))) (<= ($generated $generated@@564) ($generated@@138 $generated@@562 $generated@@563)))
 :pattern ( ($generated@@83 $generated@@563 ($generated@@150 $generated@@564)))
))) (<= ($generated@@265 1) ($generated@@138 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@138 $generated@@562 $generated@@563))
))))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@141) (= (type $generated@@566) ($generated@@78 $generated@@142 $generated@@4))) (= ($generated@@138 ($generated@@139 $generated@@565) $generated@@566) ($generated@@138 $generated@@565 $generated@@566)))
 :pattern ( ($generated@@138 ($generated@@139 $generated@@565) $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@142) (= (type $generated@@568) $generated@@66)) (= (type $generated@@569) $generated@@66)) ($generated@@248 $generated@@567 ($generated@@413 $generated@@568 $generated@@569))) (and (= ($generated@@150 ($generated@@344 ($generated@@303 $generated@@142 $generated@@142) $generated@@567)) $generated@@567) ($generated@@144 ($generated@@344 ($generated@@303 $generated@@142 $generated@@142) $generated@@567) ($generated@@413 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@248 $generated@@567 ($generated@@413 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@142) (= (type $generated@@571) $generated@@66)) (= (type $generated@@572) $generated@@66)) ($generated@@248 $generated@@570 ($generated@@421 $generated@@571 $generated@@572))) (and (= ($generated@@150 ($generated@@344 ($generated@@321 $generated@@142 $generated@@142) $generated@@570)) $generated@@570) ($generated@@144 ($generated@@344 ($generated@@321 $generated@@142 $generated@@142) $generated@@570) ($generated@@421 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@248 $generated@@570 ($generated@@421 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@66) (= (type $generated@@574) $generated@@66)) (= (type $generated@@575) $generated@@142)) ($generated@@248 $generated@@575 ($generated@@172 $generated@@573 $generated@@574))) (and (= ($generated@@150 ($generated@@344 $generated@@173 $generated@@575)) $generated@@575) ($generated@@144 ($generated@@344 $generated@@173 $generated@@575) ($generated@@172 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@248 $generated@@575 ($generated@@172 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@576)))
 (not ($generated@@0 ($generated@@83 ($generated@@147 $generated@@577) $generated@@576))))
 :pattern ( (let (($generated@@577 (type $generated@@576)))
($generated@@83 ($generated@@147 $generated@@577) $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ) (! (let (($generated@@579 (type $generated@@578)))
 (not ($generated@@0 ($generated@@83 ($generated@@444 $generated@@579) $generated@@578))))
 :pattern ( (let (($generated@@579 (type $generated@@578)))
($generated@@83 ($generated@@444 $generated@@579) $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@71)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@66) (= (type $generated@@583) $generated@@66)) (and (= ($generated@@74 ($generated@@172 $generated@@582 $generated@@583)) $generated@@62) (= ($generated@@580 ($generated@@172 $generated@@582 $generated@@583)) $generated@@64)))
 :pattern ( ($generated@@172 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@173) (= ($generated@@556 ($generated@@150 $generated@@584)) ($generated@@557 $generated@@584)))
 :pattern ( ($generated@@556 ($generated@@150 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@142) ($generated@@248 $generated@@585 ($generated@@77 0))) (and (= ($generated@@150 ($generated@@344 $generated@@2 $generated@@585)) $generated@@585) ($generated@@144 ($generated@@344 ($generated@@78 $generated@@142 $generated@@4) $generated@@585) ($generated@@77 0))))
 :pattern ( ($generated@@248 $generated@@585 ($generated@@77 0)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@142) (= (type $generated@@587) $generated@@66)) ($generated@@248 $generated@@586 ($generated@@145 $generated@@587))) (and (= ($generated@@150 ($generated@@344 ($generated@@78 $generated@@142 $generated@@4) $generated@@586)) $generated@@586) ($generated@@144 ($generated@@344 ($generated@@78 $generated@@142 $generated@@4) $generated@@586) ($generated@@145 $generated@@587))))
 :pattern ( ($generated@@248 $generated@@586 ($generated@@145 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@142) (= (type $generated@@589) $generated@@66)) ($generated@@248 $generated@@588 ($generated@@260 $generated@@589))) (and (= ($generated@@150 ($generated@@344 ($generated@@78 $generated@@142 $generated@@4) $generated@@588)) $generated@@588) ($generated@@144 ($generated@@344 ($generated@@78 $generated@@142 $generated@@4) $generated@@588) ($generated@@260 $generated@@589))))
 :pattern ( ($generated@@248 $generated@@588 ($generated@@260 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@142) (= (type $generated@@591) $generated@@66)) ($generated@@248 $generated@@590 ($generated@@186 $generated@@591))) (and (= ($generated@@150 ($generated@@344 ($generated@@78 $generated@@142 $generated@@2) $generated@@590)) $generated@@590) ($generated@@144 ($generated@@344 ($generated@@78 $generated@@142 $generated@@2) $generated@@590) ($generated@@186 $generated@@591))))
 :pattern ( ($generated@@248 $generated@@590 ($generated@@186 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@142) (= (type $generated@@593) $generated@@66)) ($generated@@248 $generated@@592 ($generated@@515 $generated@@593))) (and (= ($generated@@150 ($generated@@344 ($generated@@285 $generated@@142) $generated@@592)) $generated@@592) ($generated@@144 ($generated@@344 ($generated@@285 $generated@@142) $generated@@592) ($generated@@515 $generated@@593))))
 :pattern ( ($generated@@248 $generated@@592 ($generated@@515 $generated@@593)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@63))
(assert (= ($generated@@580 $generated@@134) $generated@@65))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@594) ($generated@@78 $generated@@142 $generated@@2)) (= (type $generated@@595) $generated@@66)) (= (type $generated@@596) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@594 ($generated@@186 $generated@@595) $generated@@596) (forall (($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@142) (< 0 ($generated ($generated@@83 $generated@@594 $generated@@597)))) ($generated@@271 $generated@@597 $generated@@595 $generated@@596))
 :pattern ( ($generated@@83 $generated@@594 $generated@@597))
))))
 :pattern ( ($generated@@76 $generated@@594 ($generated@@186 $generated@@595) $generated@@596))
)))
(assert  (=> (<= 1 $generated@@137) (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) $generated@@141) (= (type $generated@@599) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@600) ($generated@@78 $generated@@142 $generated@@4))) (or ($generated@@143 ($generated@@267 $generated@@600)) (and (not (= 1 $generated@@137)) (and (and ($generated@@140 $generated@@599) ($generated@@144 $generated@@600 ($generated@@145 $generated@@134))) (not ($generated@@146 $generated@@600 ($generated@@147 $generated@@142))))))) (and (and ($generated@@148 ($generated@@267 $generated@@600)) (=> (not ($generated@@146 $generated@@600 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 ($generated@@151 ($generated@@267 $generated@@600))))))) (let (($generated@@601 ($generated@@152 $generated@@600 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 ($generated@@151 ($generated@@267 $generated@@600))))))))
($generated@@143 $generated@@601)))) (= ($generated@@138 ($generated@@139 $generated@@598) ($generated@@267 $generated@@600)) (let (($generated@@602 ($generated@@151 ($generated@@267 $generated@@600))))
(ite ($generated@@146 $generated@@600 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 $generated@@602)))) $generated@@602 (let (($generated@@603 ($generated@@152 $generated@@600 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 $generated@@602))))))
(let (($generated@@604 ($generated@@138 ($generated@@139 $generated@@598) $generated@@603)))
(ite (< $generated@@602 $generated@@604) $generated@@604 $generated@@602))))))))
 :weight 3
 :pattern ( ($generated@@138 ($generated@@139 $generated@@598) ($generated@@267 $generated@@600)) ($generated@@140 $generated@@599))
))))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@173) (= (type $generated@@606) $generated@@66)) (= (type $generated@@607) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@140 $generated@@607) (and ($generated@@171 $generated@@605) (exists (($generated@@608 T@U) ) (!  (and (= (type $generated@@608) $generated@@66) ($generated@@76 $generated@@605 ($generated@@172 $generated@@606 $generated@@608) $generated@@607))
 :pattern ( ($generated@@76 $generated@@605 ($generated@@172 $generated@@606 $generated@@608) $generated@@607))
))))) ($generated@@271 ($generated@@180 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@271 ($generated@@180 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@173) (= (type $generated@@610) $generated@@66)) (= (type $generated@@611) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@140 $generated@@611) (and ($generated@@171 $generated@@609) (exists (($generated@@612 T@U) ) (!  (and (= (type $generated@@612) $generated@@66) ($generated@@76 $generated@@609 ($generated@@172 $generated@@612 $generated@@610) $generated@@611))
 :pattern ( ($generated@@76 $generated@@609 ($generated@@172 $generated@@612 $generated@@610) $generated@@611))
))))) ($generated@@271 ($generated@@181 $generated@@609) $generated@@610 $generated@@611))
 :pattern ( ($generated@@271 ($generated@@181 $generated@@609) $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@142) (= (type $generated@@614) $generated@@142)) (= ($generated@@247 ($generated@@267 $generated@@613) ($generated@@267 $generated@@614)) ($generated@@267 ($generated@@247 $generated@@613 $generated@@614))))
 :pattern ( ($generated@@247 ($generated@@267 $generated@@613) ($generated@@267 $generated@@614)))
)))
(assert (forall (($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@78 $generated@@142 $generated@@4)) ($generated@@148 $generated@@615)) ($generated@@0 ($generated@@83 $generated@@615 ($generated@@150 ($generated@@8 ($generated@@151 $generated@@615))))))
 :pattern ( ($generated@@151 $generated@@615))
)))
(assert (forall (($generated@@616 Int) ) (! (= ($generated@@150 ($generated@@8 ($generated@@265 $generated@@616))) ($generated@@267 ($generated@@150 ($generated@@8 $generated@@616))))
 :pattern ( ($generated@@150 ($generated@@8 ($generated@@265 $generated@@616))))
)))
(assert (forall (($generated@@617 T@U) ) (! (= ($generated@@150 ($generated@@267 $generated@@617)) ($generated@@267 ($generated@@150 $generated@@617)))
 :pattern ( ($generated@@150 ($generated@@267 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (! (let (($generated@@619 ($generated@@286 (type $generated@@618))))
 (=> (and (= (type $generated@@618) ($generated@@285 $generated@@619)) (= ($generated@@284 $generated@@618) 0)) (= $generated@@618 ($generated@@283 $generated@@619))))
 :pattern ( ($generated@@284 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (! (let (($generated@@623 (type $generated@@621)))
 (=> (and (and (= (type $generated@@620) ($generated@@78 $generated@@623 $generated@@2)) (= (type $generated@@622) $generated@@2)) (<= 0 ($generated $generated@@622))) (= ($generated@@295 ($generated@@84 $generated@@620 $generated@@621 $generated@@622)) (+ (- ($generated@@295 $generated@@620) ($generated ($generated@@83 $generated@@620 $generated@@621))) ($generated $generated@@622)))))
 :pattern ( ($generated@@295 ($generated@@84 $generated@@620 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@625) $generated@@2)) ($generated@@76 $generated@@625 $generated@@46 $generated@@624))
 :pattern ( ($generated@@76 $generated@@625 $generated@@46 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@627) $generated@@3)) ($generated@@76 $generated@@627 $generated@@47 $generated@@626))
 :pattern ( ($generated@@76 $generated@@627 $generated@@47 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@629) $generated@@4)) ($generated@@76 $generated@@629 $generated@@44 $generated@@628))
 :pattern ( ($generated@@76 $generated@@629 $generated@@44 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@631) $generated@@468)) ($generated@@76 $generated@@631 $generated@@45 $generated@@630))
 :pattern ( ($generated@@76 $generated@@631 $generated@@45 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@633) $generated@@142)) ($generated@@76 $generated@@633 $generated@@48 $generated@@632))
 :pattern ( ($generated@@76 $generated@@633 $generated@@48 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@285 $generated@@142)) (= (type $generated@@635) $generated@@66)) (= ($generated@@144 $generated@@634 ($generated@@515 $generated@@635)) (forall (($generated@@636 Int) ) (!  (=> (and (<= 0 $generated@@636) (< $generated@@636 ($generated@@284 $generated@@634))) ($generated@@248 ($generated@@516 $generated@@634 $generated@@636) $generated@@635))
 :pattern ( ($generated@@516 $generated@@634 $generated@@636))
))))
 :pattern ( ($generated@@144 $generated@@634 ($generated@@515 $generated@@635)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 Int) ) (!  (=> (= (type $generated@@638) ($generated@@285 $generated@@142)) (=> (and (<= 0 $generated@@639) (< $generated@@639 ($generated@@284 $generated@@638))) (< ($generated@@557 ($generated@@344 $generated@@173 ($generated@@516 $generated@@638 $generated@@639))) ($generated@@637 $generated@@638))))
 :pattern ( ($generated@@557 ($generated@@344 $generated@@173 ($generated@@516 $generated@@638 $generated@@639))))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (and (and (= (type $generated@@640) ($generated@@303 $generated@@142 $generated@@142)) (= (type $generated@@641) $generated@@66)) (= (type $generated@@642) $generated@@66)) ($generated@@144 $generated@@640 ($generated@@413 $generated@@641 $generated@@642))) (and (and ($generated@@144 ($generated@@301 $generated@@640) ($generated@@145 $generated@@641)) ($generated@@144 ($generated@@352 $generated@@640) ($generated@@145 $generated@@642))) ($generated@@144 ($generated@@387 $generated@@640) ($generated@@145 ($generated@@172 $generated@@641 $generated@@642)))))
 :pattern ( ($generated@@144 $generated@@640 ($generated@@413 $generated@@641 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) ($generated@@321 $generated@@142 $generated@@142)) (= (type $generated@@644) $generated@@66)) (= (type $generated@@645) $generated@@66)) ($generated@@144 $generated@@643 ($generated@@421 $generated@@644 $generated@@645))) (and (and ($generated@@144 ($generated@@319 $generated@@643) ($generated@@260 $generated@@644)) ($generated@@144 ($generated@@363 $generated@@643) ($generated@@260 $generated@@645))) ($generated@@144 ($generated@@395 $generated@@643) ($generated@@260 ($generated@@172 $generated@@644 $generated@@645)))))
 :pattern ( ($generated@@144 $generated@@643 ($generated@@421 $generated@@644 $generated@@645)))
)))
(assert (forall (($generated@@646 T@U) ) (!  (=> (= (type $generated@@646) $generated@@2) ($generated@@144 $generated@@646 $generated@@46))
 :pattern ( ($generated@@144 $generated@@646 $generated@@46))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@3) ($generated@@144 $generated@@647 $generated@@47))
 :pattern ( ($generated@@144 $generated@@647 $generated@@47))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@4) ($generated@@144 $generated@@648 $generated@@44))
 :pattern ( ($generated@@144 $generated@@648 $generated@@44))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@468) ($generated@@144 $generated@@649 $generated@@45))
 :pattern ( ($generated@@144 $generated@@649 $generated@@45))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@142) ($generated@@144 $generated@@650 $generated@@48))
 :pattern ( ($generated@@144 $generated@@650 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () T@U)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () Int)
(declare-fun $generated@@656 (T@U) Bool)
(declare-fun $generated@@657 () Int)
(assert  (and (and (and (= (type $generated@@651) ($generated@@193 $generated@@79 $generated@@4)) (= (type $generated@@652) $generated@@79)) (= (type $generated@@653) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@654) ($generated@@78 $generated@@142 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@658  (=> (and (= $generated@@651 ($generated@@192 $generated@@652 $generated@@653 $generated@@60 false)) ($generated@@76 $generated@@654 ($generated@@145 $generated@@134) $generated@@653)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not ($generated@@146 $generated@@654 ($generated@@147 $generated@@142)))) (=> (not ($generated@@146 $generated@@654 ($generated@@147 $generated@@142))) (=> (and (and ($generated@@143 $generated@@654) ($generated@@143 $generated@@654)) (and (= $generated@@655 ($generated@@138 ($generated@@139 $generated@@511) $generated@@654)) (= (ControlFlow 0 2) (- 0 1)))) (exists (($generated@@659 T@U) ) (!  (and (= (type $generated@@659) $generated@@2) (and ($generated@@0 ($generated@@83 $generated@@654 ($generated@@150 $generated@@659))) (forall (($generated@@660 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@83 $generated@@654 ($generated@@150 ($generated@@8 $generated@@660)))) (<= $generated@@660 ($generated $generated@@659))))
 :pattern ( ($generated@@83 $generated@@654 ($generated@@150 ($generated@@8 $generated@@660))))
))))
 :pattern ( ($generated@@83 $generated@@654 ($generated@@150 $generated@@659)))
))))))))
(let (($generated@@661  (=> (and (and ($generated@@140 $generated@@653) ($generated@@656 $generated@@653)) (and ($generated@@144 $generated@@654 ($generated@@145 $generated@@134)) ($generated@@76 $generated@@654 ($generated@@145 $generated@@134) $generated@@653))) (=> (and (and (and (<= ($generated@@265 1) $generated@@657) true) (= 2 $generated@@137)) (and (not ($generated@@146 $generated@@654 ($generated@@147 $generated@@142))) (= (ControlFlow 0 4) 2))) $generated@@658))))
$generated@@661)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 () Int)
(declare-fun $generated@@138 (T@U T@U) Int)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@T) T@U)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Int)
(declare-fun $generated@@152 (T@U T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@191 (T@U T@U T@U) T@U)
(declare-fun $generated@@192 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@193 (T@T T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@196 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@259 (T@U T@U) T@U)
(declare-fun $generated@@266 (T@U T@U) T@U)
(declare-fun $generated@@267 (T@U T@U) Bool)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@284 (Int) Int)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@290 (T@U T@U T@U) Bool)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@303 (T@U) Int)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@314 (T@U) Int)
(declare-fun $generated@@315 (T@T) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@T T@T) T@U)
(declare-fun $generated@@340 (T@T T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@363 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) Bool)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@419 (T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@444 (T@U T@U) T@U)
(declare-fun $generated@@475 (T@T) T@U)
(declare-fun $generated@@499 () T@T)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@542 () T@U)
(declare-fun $generated@@546 (T@U) T@U)
(declare-fun $generated@@547 (T@U Int) T@U)
(declare-fun $generated@@559 (T@U) Int)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@587 (T@U) Int)
(declare-fun $generated@@588 (T@U) Int)
(declare-fun $generated@@614 (T@U) T@U)
(declare-fun $generated@@628 (T@U T@U) Bool)
(declare-fun $generated@@684 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert  (and (and (and (and (and (and (and (= ($generated@@1 $generated@@141) 14) (= ($generated@@1 $generated@@142) 15)) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@139 $generated@@153)) $generated@@141)
 :pattern ( ($generated@@139 $generated@@153))
))) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@145 $generated@@154)) $generated@@66)
 :pattern ( ($generated@@145 $generated@@154))
))) (forall (($generated@@155 T@T) ) (! (= (type ($generated@@147 $generated@@155)) ($generated@@78 $generated@@155 $generated@@4))
 :pattern ( ($generated@@147 $generated@@155))
))) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 (type $generated@@157)))
(= (type ($generated@@149 $generated@@156 $generated@@157)) ($generated@@78 $generated@@158 $generated@@4)))
 :pattern ( ($generated@@149 $generated@@156 $generated@@157))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@150 $generated@@159)) $generated@@142)
 :pattern ( ($generated@@150 $generated@@159))
))) (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (let (($generated@@162 ($generated@@81 (type $generated@@160))))
(= (type ($generated@@152 $generated@@160 $generated@@161)) ($generated@@78 $generated@@162 $generated@@4)))
 :pattern ( ($generated@@152 $generated@@160 $generated@@161))
))))
(assert  (=> (<= 1 $generated@@137) (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (and (= (type $generated@@163) $generated@@141) (= (type $generated@@164) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@165) ($generated@@78 $generated@@142 $generated@@4))) (or ($generated@@143 $generated@@165) (and (not (= 1 $generated@@137)) (and (and ($generated@@140 $generated@@164) ($generated@@144 $generated@@165 ($generated@@145 $generated@@134))) (not ($generated@@146 $generated@@165 ($generated@@147 $generated@@142))))))) (and (and ($generated@@148 $generated@@165) (=> (not ($generated@@146 $generated@@165 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 ($generated@@151 $generated@@165)))))) (let (($generated@@166 ($generated@@152 $generated@@165 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 ($generated@@151 $generated@@165)))))))
($generated@@143 $generated@@166)))) (= ($generated@@138 ($generated@@139 $generated@@163) $generated@@165) (let (($generated@@167 ($generated@@151 $generated@@165)))
(ite ($generated@@146 $generated@@165 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 $generated@@167)))) $generated@@167 (let (($generated@@168 ($generated@@152 $generated@@165 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 $generated@@167))))))
(let (($generated@@169 ($generated@@138 $generated@@163 $generated@@168)))
(ite (< $generated@@167 $generated@@169) $generated@@169 $generated@@167))))))))
 :pattern ( ($generated@@138 ($generated@@139 $generated@@163) $generated@@165) ($generated@@140 $generated@@164))
))))
(assert (forall (($generated@@170 T@U) ) (!  (=> (= (type $generated@@170) $generated@@2) ($generated@@144 $generated@@170 ($generated@@77 0)))
 :pattern ( ($generated@@144 $generated@@170 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@173) 16) (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@174 $generated@@175)) $generated@@66)
 :pattern ( ($generated@@172 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (and (and (= (type $generated@@176) $generated@@66) (= (type $generated@@177) $generated@@66)) (= (type $generated@@178) $generated@@173)) ($generated@@144 $generated@@178 ($generated@@172 $generated@@176 $generated@@177))) ($generated@@171 $generated@@178))
 :pattern ( ($generated@@171 $generated@@178) ($generated@@144 $generated@@178 ($generated@@172 $generated@@176 $generated@@177)))
)))
(assert  (and (forall (($generated@@182 T@U) ) (! (= (type ($generated@@180 $generated@@182)) $generated@@142)
 :pattern ( ($generated@@180 $generated@@182))
)) (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@142)
 :pattern ( ($generated@@181 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and (= (type $generated@@184) $generated@@173) (= (type $generated@@185) $generated@@173)) true) (= ($generated@@179 $generated@@184 $generated@@185)  (and (= ($generated@@180 $generated@@184) ($generated@@180 $generated@@185)) (= ($generated@@181 $generated@@184) ($generated@@181 $generated@@185)))))
 :pattern ( ($generated@@179 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@188 T@U) ) (! (= (type ($generated@@186 $generated@@188)) $generated@@66)
 :pattern ( ($generated@@186 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (= (type $generated@@189) ($generated@@78 $generated@@142 $generated@@2)) (= (type $generated@@190) $generated@@66)) ($generated@@144 $generated@@189 ($generated@@186 $generated@@190))) ($generated@@187 $generated@@189))
 :pattern ( ($generated@@144 $generated@@189 ($generated@@186 $generated@@190)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (= ($generated@@1 ($generated@@193 $generated@@197 $generated@@198)) 17)) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@199 $generated@@200)) $generated@@199)
 :pattern ( ($generated@@193 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@195 ($generated@@193 $generated@@201 $generated@@202)) $generated@@202)
 :pattern ( ($generated@@193 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (let (($generated@@206 ($generated@@195 (type $generated@@203))))
(= (type ($generated@@191 $generated@@203 $generated@@204 $generated@@205)) $generated@@206))
 :pattern ( ($generated@@191 $generated@@203 $generated@@204 $generated@@205))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 (type $generated@@210)))
(let (($generated@@212 (type $generated@@208)))
(= (type ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@193 $generated@@212 $generated@@211))))
 :pattern ( ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@195 (type $generated@@213))))
 (=> (= (type $generated@@216) $generated@@217) (= ($generated@@191 ($generated@@196 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@214 $generated@@215) $generated@@216)))
 :weight 0
))) (and (and (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or (= $generated@@220 $generated@@222) (= ($generated@@191 ($generated@@196 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@191 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or (= $generated@@227 $generated@@229) (= ($generated@@191 ($generated@@196 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@191 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or true (= ($generated@@191 ($generated@@196 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@191 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
)))) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ) (! (= (type ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239)) ($generated@@193 $generated@@79 $generated@@4))
 :pattern ( ($generated@@192 $generated@@236 $generated@@237 $generated@@238 $generated@@239))
))))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@69 (type $generated@@245))))
 (=> (and (and (and (and (= (type $generated@@240) $generated@@79) (= (type $generated@@241) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@242) ($generated@@68 $generated@@4))) (= (type $generated@@244) $generated@@79)) (= (type $generated@@245) ($generated@@68 $generated@@246))) (= ($generated@@0 ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))  (=> (and (not (= $generated@@244 $generated@@240)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@241 $generated@@244) $generated@@242))) $generated@@243))))
 :pattern ( ($generated@@191 ($generated@@192 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 Bool) ) (! (= (type ($generated@@247 $generated@@248 $generated@@249 $generated@@250 $generated@@251)) ($generated@@193 $generated@@79 $generated@@4))
 :pattern ( ($generated@@247 $generated@@248 $generated@@249 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 Bool) ($generated@@256 T@U) ($generated@@257 T@U) ) (! (let (($generated@@258 ($generated@@69 (type $generated@@257))))
 (=> (and (and (and (and (= (type $generated@@252) $generated@@79) (= (type $generated@@253) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@254) ($generated@@68 $generated@@4))) (= (type $generated@@256) $generated@@79)) (= (type $generated@@257) ($generated@@68 $generated@@258))) (= ($generated@@0 ($generated@@191 ($generated@@247 $generated@@252 $generated@@253 $generated@@254 $generated@@255) $generated@@256 $generated@@257))  (=> (and (not (= $generated@@256 $generated@@252)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@253 $generated@@256) $generated@@254))) $generated@@255))))
 :pattern ( ($generated@@191 ($generated@@247 $generated@@252 $generated@@253 $generated@@254 $generated@@255) $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (let (($generated@@262 ($generated@@81 (type $generated@@260))))
(= (type ($generated@@259 $generated@@260 $generated@@261)) ($generated@@78 $generated@@262 $generated@@4)))
 :pattern ( ($generated@@259 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@81 (type $generated@@263))))
 (=> (and (= (type $generated@@263) ($generated@@78 $generated@@265 $generated@@4)) (= (type $generated@@264) ($generated@@78 $generated@@265 $generated@@4))) (= ($generated@@259 ($generated@@259 $generated@@263 $generated@@264) $generated@@264) ($generated@@259 $generated@@263 $generated@@264))))
 :pattern ( ($generated@@259 ($generated@@259 $generated@@263 $generated@@264) $generated@@264))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (! (= (type ($generated@@266 $generated@@268 $generated@@269)) $generated@@173)
 :pattern ( ($generated@@266 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (= (type $generated@@270) $generated@@66) (= (type $generated@@271) $generated@@66)) (= (type $generated@@272) $generated@@142)) (= (type $generated@@273) $generated@@142)) (= ($generated@@144 ($generated@@266 $generated@@272 $generated@@273) ($generated@@172 $generated@@270 $generated@@271))  (and ($generated@@267 $generated@@272 $generated@@270) ($generated@@267 $generated@@273 $generated@@271))))
 :pattern ( ($generated@@144 ($generated@@266 $generated@@272 $generated@@273) ($generated@@172 $generated@@270 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@173) (= (type $generated@@275) $generated@@173)) (= ($generated@@179 $generated@@274 $generated@@275) (= $generated@@274 $generated@@275)))
 :pattern ( ($generated@@179 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@78 $generated@@142 $generated@@4)) (= (type $generated@@277) $generated@@66)) (= ($generated@@144 $generated@@276 ($generated@@145 $generated@@277)) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@142) ($generated@@0 ($generated@@83 $generated@@276 $generated@@278))) ($generated@@267 $generated@@278 $generated@@277))
 :pattern ( ($generated@@83 $generated@@276 $generated@@278))
))))
 :pattern ( ($generated@@144 $generated@@276 ($generated@@145 $generated@@277)))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@66)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) ($generated@@78 $generated@@142 $generated@@4)) (= (type $generated@@282) $generated@@66)) (= ($generated@@144 $generated@@281 ($generated@@279 $generated@@282)) (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@142) ($generated@@0 ($generated@@83 $generated@@281 $generated@@283))) ($generated@@267 $generated@@283 $generated@@282))
 :pattern ( ($generated@@83 $generated@@281 $generated@@283))
))))
 :pattern ( ($generated@@144 $generated@@281 ($generated@@279 $generated@@282)))
)))
(assert (forall (($generated@@285 Int) ) (! (= ($generated@@284 $generated@@285) $generated@@285)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 (type $generated@@287)))
(= (type ($generated@@286 $generated@@287)) $generated@@288))
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= ($generated@@286 $generated@@289) $generated@@289)
 :pattern ( ($generated@@286 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@291) $generated@@66) (= (type $generated@@292) $generated@@66)) (= (type $generated@@293) $generated@@142)) (= (type $generated@@294) $generated@@142)) (= (type $generated@@295) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@140 $generated@@295)) (= ($generated@@76 ($generated@@266 $generated@@293 $generated@@294) ($generated@@172 $generated@@291 $generated@@292) $generated@@295)  (and ($generated@@290 $generated@@293 $generated@@291 $generated@@295) ($generated@@290 $generated@@294 $generated@@292 $generated@@295))))
 :pattern ( ($generated@@76 ($generated@@266 $generated@@293 $generated@@294) ($generated@@172 $generated@@291 $generated@@292) $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@70)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@173) (= ($generated@@171 $generated@@298) (= ($generated@@296 $generated@@298) $generated@@61)))
 :pattern ( ($generated@@171 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@173) ($generated@@171 $generated@@299)) (exists (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (and (and (= (type $generated@@300) $generated@@142) (= (type $generated@@301) $generated@@142)) (= $generated@@299 ($generated@@266 $generated@@300 $generated@@301)))
 :no-pattern (type $generated@@300)
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
)))
 :pattern ( ($generated@@171 $generated@@299))
)))
(assert  (and (and (forall (($generated@@306 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@306)) 18)) (forall (($generated@@307 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@304 $generated@@307))
))) (forall (($generated@@308 T@T) ) (! (= (type ($generated@@302 $generated@@308)) ($generated@@304 $generated@@308))
 :pattern ( ($generated@@302 $generated@@308))
))))
(assert (forall (($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@309)) 0)
 :pattern ( ($generated@@302 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@2) (= ($generated@@144 $generated@@310 $generated@@134) (<= ($generated@@284 1) ($generated $generated@@310))))
 :pattern ( ($generated@@144 $generated@@310 $generated@@134))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@66) (= (type $generated@@313) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@290 ($generated@@150 $generated@@311) $generated@@312 $generated@@313) ($generated@@76 $generated@@311 $generated@@312 $generated@@313)))
 :pattern ( ($generated@@290 ($generated@@150 $generated@@311) $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@316 T@T) ) (! (= (type ($generated@@315 $generated@@316)) ($generated@@78 $generated@@316 $generated@@2))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@81 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@78 $generated@@318 $generated@@2)) (and (= (= ($generated@@314 $generated@@317) 0) (= $generated@@317 ($generated@@315 $generated@@318))) (=> (not (= ($generated@@314 $generated@@317) 0)) (exists (($generated@@319 T@U) ) (!  (and (= (type $generated@@319) $generated@@318) (< 0 ($generated ($generated@@83 $generated@@317 $generated@@319))))
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
))))))
 :pattern ( ($generated@@314 $generated@@317))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 19)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@78 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@83 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@83 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert  (and (and (and (and (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (= ($generated@@1 ($generated@@340 $generated@@343 $generated@@344)) 20)) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@341 ($generated@@340 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@340 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@342 ($generated@@340 $generated@@347 $generated@@348)) $generated@@348)
 :pattern ( ($generated@@340 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@341 (type $generated@@349))))
(= (type ($generated@@338 $generated@@349)) ($generated@@78 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@349))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= (type ($generated@@339 $generated@@351 $generated@@352)) ($generated@@340 $generated@@351 $generated@@352))
 :pattern ( ($generated@@339 $generated@@351 $generated@@352))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@T) ) (! (let (($generated@@355 (type $generated@@353)))
 (not ($generated@@0 ($generated@@83 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353))))
 :pattern ( (let (($generated@@355 (type $generated@@353)))
($generated@@83 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353)))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@81 (type $generated@@356))))
 (=> (and (= (type $generated@@356) ($generated@@78 $generated@@358 $generated@@4)) (= (type $generated@@357) ($generated@@78 $generated@@358 $generated@@4))) (= ($generated@@146 $generated@@356 $generated@@357) (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@358) (= ($generated@@0 ($generated@@83 $generated@@356 $generated@@359)) ($generated@@0 ($generated@@83 $generated@@357 $generated@@359))))
 :pattern ( ($generated@@83 $generated@@356 $generated@@359))
 :pattern ( ($generated@@83 $generated@@357 $generated@@359))
)))))
 :pattern ( ($generated@@146 $generated@@356 $generated@@357))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@81 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@78 $generated@@361 $generated@@2)) (= ($generated@@187 $generated@@360) (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@361) (and (<= 0 ($generated ($generated@@83 $generated@@360 $generated@@362))) (<= ($generated ($generated@@83 $generated@@360 $generated@@362)) ($generated@@314 $generated@@360))))
 :pattern ( ($generated@@83 $generated@@360 $generated@@362))
)))))
 :pattern ( ($generated@@187 $generated@@360))
)))
(assert (forall (($generated@@364 T@T) ($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@363 $generated@@364 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@142) ($generated@@267 $generated@@366 $generated@@134)) (and (= ($generated@@150 ($generated@@363 $generated@@2 $generated@@366)) $generated@@366) ($generated@@144 ($generated@@363 $generated@@2 $generated@@366) $generated@@134)))
 :pattern ( ($generated@@267 $generated@@366 $generated@@134))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@324 (type $generated@@367))))
(let (($generated@@369 ($generated@@323 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@322 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@321 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@83 ($generated@@320 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@320 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@324 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@78 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@324 (type $generated@@374))))
(let (($generated@@376 ($generated@@323 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@322 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@321 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@83 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@342 (type $generated@@378))))
(let (($generated@@380 ($generated@@341 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@340 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@339 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@83 ($generated@@338 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@338 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@342 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@78 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@342 (type $generated@@385))))
(let (($generated@@387 ($generated@@341 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@340 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@339 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@83 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@78 $generated@@142 $generated@@2)) (= (type $generated@@390) $generated@@66)) (= ($generated@@144 $generated@@389 ($generated@@186 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@142) (< 0 ($generated ($generated@@83 $generated@@389 $generated@@391)))) ($generated@@267 $generated@@391 $generated@@390))
 :pattern ( ($generated@@83 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@144 $generated@@389 ($generated@@186 $generated@@390)))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@81 (type $generated@@393))))
 (=> (and (and (= (type $generated@@393) ($generated@@78 $generated@@395 $generated@@4)) (= (type $generated@@394) ($generated@@78 $generated@@395 $generated@@4))) ($generated@@392 $generated@@393 $generated@@394)) (and (= ($generated@@152 ($generated@@259 $generated@@393 $generated@@394) $generated@@393) $generated@@394) (= ($generated@@152 ($generated@@259 $generated@@393 $generated@@394) $generated@@394) $generated@@393))))
 :pattern ( ($generated@@259 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (! (let (($generated@@399 (type $generated@@398)))
 (=> (and (= (type $generated@@396) ($generated@@78 $generated@@399 $generated@@4)) (= (type $generated@@397) ($generated@@78 $generated@@399 $generated@@4))) (= ($generated@@0 ($generated@@83 ($generated@@152 $generated@@396 $generated@@397) $generated@@398))  (and ($generated@@0 ($generated@@83 $generated@@396 $generated@@398)) (not ($generated@@0 ($generated@@83 $generated@@397 $generated@@398)))))))
 :pattern ( ($generated@@83 ($generated@@152 $generated@@396 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (= (type $generated@@400) ($generated@@78 $generated@@142 $generated@@4)) (= (type $generated@@401) $generated@@66)) (= (type $generated@@402) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@400 ($generated@@145 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@142) ($generated@@0 ($generated@@83 $generated@@400 $generated@@403))) ($generated@@290 $generated@@403 $generated@@401 $generated@@402))
 :pattern ( ($generated@@83 $generated@@400 $generated@@403))
))))
 :pattern ( ($generated@@76 $generated@@400 ($generated@@145 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (= (type $generated@@404) ($generated@@78 $generated@@142 $generated@@4)) (= (type $generated@@405) $generated@@66)) (= (type $generated@@406) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@404 ($generated@@279 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@142) ($generated@@0 ($generated@@83 $generated@@404 $generated@@407))) ($generated@@290 $generated@@407 $generated@@405 $generated@@406))
 :pattern ( ($generated@@83 $generated@@404 $generated@@407))
))))
 :pattern ( ($generated@@76 $generated@@404 ($generated@@279 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(= ($generated ($generated@@83 ($generated@@315 $generated@@409) $generated@@408)) 0))
 :pattern ( (let (($generated@@409 (type $generated@@408)))
($generated@@83 ($generated@@315 $generated@@409) $generated@@408)))
)))
(assert  (and (forall (($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@412)) ($generated@@78 $generated@@142 $generated@@4))
 :pattern ( ($generated@@410 $generated@@412))
)) (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@324 (type $generated@@413))))
(let (($generated@@415 ($generated@@323 (type $generated@@413))))
(= (type ($generated@@411 $generated@@413)) ($generated@@78 $generated@@415 $generated@@414))))
 :pattern ( ($generated@@411 $generated@@413))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@322 $generated@@142 $generated@@142)) (= (type $generated@@417) $generated@@142)) (= ($generated@@0 ($generated@@83 ($generated@@410 $generated@@416) $generated@@417))  (and ($generated@@0 ($generated@@83 ($generated@@320 $generated@@416) ($generated@@180 ($generated@@363 $generated@@173 $generated@@417)))) (= ($generated@@83 ($generated@@411 $generated@@416) ($generated@@180 ($generated@@363 $generated@@173 $generated@@417))) ($generated@@181 ($generated@@363 $generated@@173 $generated@@417))))))
 :pattern ( ($generated@@83 ($generated@@410 $generated@@416) $generated@@417))
)))
(assert  (and (forall (($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@420)) ($generated@@78 $generated@@142 $generated@@4))
 :pattern ( ($generated@@418 $generated@@420))
)) (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@342 (type $generated@@421))))
(let (($generated@@423 ($generated@@341 (type $generated@@421))))
(= (type ($generated@@419 $generated@@421)) ($generated@@78 $generated@@423 $generated@@422))))
 :pattern ( ($generated@@419 $generated@@421))
))))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) ($generated@@340 $generated@@142 $generated@@142)) (= (type $generated@@425) $generated@@142)) (= ($generated@@0 ($generated@@83 ($generated@@418 $generated@@424) $generated@@425))  (and ($generated@@0 ($generated@@83 ($generated@@338 $generated@@424) ($generated@@180 ($generated@@363 $generated@@173 $generated@@425)))) (= ($generated@@83 ($generated@@419 $generated@@424) ($generated@@180 ($generated@@363 $generated@@173 $generated@@425))) ($generated@@181 ($generated@@363 $generated@@173 $generated@@425))))))
 :pattern ( ($generated@@83 ($generated@@418 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (let (($generated@@428 (type $generated@@427)))
(let (($generated@@429 ($generated@@323 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@322 $generated@@429 $generated@@428)) (= ($generated@@0 ($generated@@83 ($generated@@371 $generated@@426) $generated@@427)) (exists (($generated@@430 T@U) ) (!  (and (= (type $generated@@430) $generated@@429) (and ($generated@@0 ($generated@@83 ($generated@@320 $generated@@426) $generated@@430)) (= $generated@@427 ($generated@@83 ($generated@@411 $generated@@426) $generated@@430))))
 :pattern ( ($generated@@83 ($generated@@320 $generated@@426) $generated@@430))
 :pattern ( ($generated@@83 ($generated@@411 $generated@@426) $generated@@430))
))))))
 :pattern ( ($generated@@83 ($generated@@371 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (! (let (($generated@@433 (type $generated@@432)))
(let (($generated@@434 ($generated@@341 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@340 $generated@@434 $generated@@433)) (= ($generated@@0 ($generated@@83 ($generated@@382 $generated@@431) $generated@@432)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) $generated@@434) (and ($generated@@0 ($generated@@83 ($generated@@338 $generated@@431) $generated@@435)) (= $generated@@432 ($generated@@83 ($generated@@419 $generated@@431) $generated@@435))))
 :pattern ( ($generated@@83 ($generated@@338 $generated@@431) $generated@@435))
 :pattern ( ($generated@@83 ($generated@@419 $generated@@431) $generated@@435))
))))))
 :pattern ( ($generated@@83 ($generated@@382 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@66)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@322 $generated@@142 $generated@@142)) (= (type $generated@@440) $generated@@66)) (= (type $generated@@441) $generated@@66)) (= (type $generated@@442) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@142) ($generated@@0 ($generated@@83 ($generated@@320 $generated@@439) $generated@@443))) (and ($generated@@290 ($generated@@83 ($generated@@411 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@290 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@83 ($generated@@411 $generated@@439) $generated@@443))
 :pattern ( ($generated@@83 ($generated@@320 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@76 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (= (type ($generated@@444 $generated@@445 $generated@@446)) $generated@@66)
 :pattern ( ($generated@@444 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (and (and (= (type $generated@@447) ($generated@@340 $generated@@142 $generated@@142)) (= (type $generated@@448) $generated@@66)) (= (type $generated@@449) $generated@@66)) (= (type $generated@@450) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450) (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@142) ($generated@@0 ($generated@@83 ($generated@@338 $generated@@447) $generated@@451))) (and ($generated@@290 ($generated@@83 ($generated@@419 $generated@@447) $generated@@451) $generated@@449 $generated@@450) ($generated@@290 $generated@@451 $generated@@448 $generated@@450)))
 :pattern ( ($generated@@83 ($generated@@419 $generated@@447) $generated@@451))
 :pattern ( ($generated@@83 ($generated@@338 $generated@@447) $generated@@451))
))))
 :pattern ( ($generated@@76 $generated@@447 ($generated@@444 $generated@@448 $generated@@449) $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@81 (type $generated@@452))))
 (=> (and (and (= (type $generated@@452) ($generated@@78 $generated@@454 $generated@@4)) (= (type $generated@@453) ($generated@@78 $generated@@454 $generated@@4))) ($generated@@146 $generated@@452 $generated@@453)) (= $generated@@452 $generated@@453)))
 :pattern ( ($generated@@146 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (! (let (($generated@@458 (type $generated@@456)))
 (=> (and (and (= (type $generated@@455) ($generated@@78 $generated@@458 $generated@@4)) (= (type $generated@@457) $generated@@458)) ($generated@@0 ($generated@@83 $generated@@455 $generated@@457))) ($generated@@0 ($generated@@83 ($generated@@149 $generated@@455 $generated@@456) $generated@@457))))
 :pattern ( ($generated@@149 $generated@@455 $generated@@456) ($generated@@83 $generated@@455 $generated@@457))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ) (! (let (($generated@@462 (type $generated@@461)))
 (=> (and (and (= (type $generated@@459) ($generated@@78 $generated@@462 $generated@@4)) (= (type $generated@@460) ($generated@@78 $generated@@462 $generated@@4))) ($generated@@0 ($generated@@83 $generated@@459 $generated@@461))) ($generated@@0 ($generated@@83 ($generated@@259 $generated@@459 $generated@@460) $generated@@461))))
 :pattern ( ($generated@@259 $generated@@459 $generated@@460) ($generated@@83 $generated@@459 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ) (! (let (($generated@@466 (type $generated@@465)))
 (=> (and (and (= (type $generated@@463) ($generated@@78 $generated@@466 $generated@@4)) (= (type $generated@@464) ($generated@@78 $generated@@466 $generated@@4))) ($generated@@0 ($generated@@83 $generated@@464 $generated@@465))) ($generated@@0 ($generated@@83 ($generated@@259 $generated@@463 $generated@@464) $generated@@465))))
 :pattern ( ($generated@@259 $generated@@463 $generated@@464) ($generated@@83 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (! (let (($generated@@470 (type $generated@@468)))
 (=> (and (= (type $generated@@467) ($generated@@78 $generated@@470 $generated@@4)) (= (type $generated@@469) $generated@@470)) (= ($generated@@0 ($generated@@83 ($generated@@149 $generated@@467 $generated@@468) $generated@@469))  (or (= $generated@@469 $generated@@468) ($generated@@0 ($generated@@83 $generated@@467 $generated@@469))))))
 :pattern ( ($generated@@83 ($generated@@149 $generated@@467 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (! (let (($generated@@474 (type $generated@@473)))
 (=> (and (and (= (type $generated@@471) ($generated@@78 $generated@@474 $generated@@4)) (= (type $generated@@472) ($generated@@78 $generated@@474 $generated@@4))) ($generated@@0 ($generated@@83 $generated@@472 $generated@@473))) (not ($generated@@0 ($generated@@83 ($generated@@152 $generated@@471 $generated@@472) $generated@@473)))))
 :pattern ( ($generated@@152 $generated@@471 $generated@@472) ($generated@@83 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@476 T@T) ) (! (= (type ($generated@@475 $generated@@476)) ($generated@@78 $generated@@476 $generated@@4))
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@342 (type $generated@@477))))
(let (($generated@@479 ($generated@@341 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@340 $generated@@479 $generated@@478)) (= (= $generated@@477 ($generated@@339 $generated@@479 $generated@@478)) (= ($generated@@338 $generated@@477) ($generated@@475 $generated@@479))))))
 :pattern ( ($generated@@338 $generated@@477))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@342 (type $generated@@480))))
(let (($generated@@482 ($generated@@341 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@340 $generated@@482 $generated@@481)) (= (= $generated@@480 ($generated@@339 $generated@@482 $generated@@481)) (= ($generated@@382 $generated@@480) ($generated@@475 $generated@@481))))))
 :pattern ( ($generated@@382 $generated@@480))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@342 (type $generated@@483))))
(let (($generated@@485 ($generated@@341 (type $generated@@483))))
 (=> (= (type $generated@@483) ($generated@@340 $generated@@485 $generated@@484)) (= (= $generated@@483 ($generated@@339 $generated@@485 $generated@@484)) (= ($generated@@418 $generated@@483) ($generated@@475 $generated@@142))))))
 :pattern ( ($generated@@418 $generated@@483))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@324 (type $generated@@486))))
(let (($generated@@488 ($generated@@323 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@322 $generated@@488 $generated@@487)) (or (= $generated@@486 ($generated@@321 $generated@@488 $generated@@487)) (exists (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (and (and (= (type $generated@@489) $generated@@142) (= (type $generated@@490) $generated@@142)) ($generated@@0 ($generated@@83 ($generated@@410 $generated@@486) ($generated@@150 ($generated@@266 $generated@@489 $generated@@490)))))
 :no-pattern (type $generated@@489)
 :no-pattern (type $generated@@490)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
))))))
 :pattern ( ($generated@@410 $generated@@486))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@342 (type $generated@@491))))
(let (($generated@@493 ($generated@@341 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@340 $generated@@493 $generated@@492)) (or (= $generated@@491 ($generated@@339 $generated@@493 $generated@@492)) (exists (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (and (and (= (type $generated@@494) $generated@@142) (= (type $generated@@495) $generated@@142)) ($generated@@0 ($generated@@83 ($generated@@418 $generated@@491) ($generated@@150 ($generated@@266 $generated@@494 $generated@@495)))))
 :no-pattern (type $generated@@494)
 :no-pattern (type $generated@@495)
 :no-pattern ($generated $generated@@494)
 :no-pattern ($generated@@0 $generated@@494)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
))))))
 :pattern ( ($generated@@418 $generated@@491))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@142) ($generated@@267 $generated@@496 $generated@@46)) (and (= ($generated@@150 ($generated@@363 $generated@@2 $generated@@496)) $generated@@496) ($generated@@144 ($generated@@363 $generated@@2 $generated@@496) $generated@@46)))
 :pattern ( ($generated@@267 $generated@@496 $generated@@46))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@142) ($generated@@267 $generated@@497 $generated@@47)) (and (= ($generated@@150 ($generated@@363 $generated@@3 $generated@@497)) $generated@@497) ($generated@@144 ($generated@@363 $generated@@3 $generated@@497) $generated@@47)))
 :pattern ( ($generated@@267 $generated@@497 $generated@@47))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@142) ($generated@@267 $generated@@498 $generated@@44)) (and (= ($generated@@150 ($generated@@363 $generated@@4 $generated@@498)) $generated@@498) ($generated@@144 ($generated@@363 $generated@@4 $generated@@498) $generated@@44)))
 :pattern ( ($generated@@267 $generated@@498 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@499) 21))
(assert (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@142) ($generated@@267 $generated@@500 $generated@@45)) (and (= ($generated@@150 ($generated@@363 $generated@@499 $generated@@500)) $generated@@500) ($generated@@144 ($generated@@363 $generated@@499 $generated@@500) $generated@@45)))
 :pattern ( ($generated@@267 $generated@@500 $generated@@45))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@267 ($generated@@150 $generated@@501) $generated@@502) ($generated@@144 $generated@@501 $generated@@502)))
 :pattern ( ($generated@@267 ($generated@@150 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@81 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@78 $generated@@504 $generated@@2)) (<= 0 ($generated@@314 $generated@@503))))
 :pattern ( ($generated@@314 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@305 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@304 $generated@@506)) (<= 0 ($generated@@303 $generated@@505))))
 :pattern ( ($generated@@303 $generated@@505))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@66)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@66) (= (type $generated@@510) $generated@@66)) (= ($generated@@507 ($generated@@436 $generated@@509 $generated@@510)) $generated@@509))
 :pattern ( ($generated@@436 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@66)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@66) (= (type $generated@@514) $generated@@66)) (= ($generated@@511 ($generated@@436 $generated@@513 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@436 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@66) (= (type $generated@@516) $generated@@66)) (= ($generated@@74 ($generated@@436 $generated@@515 $generated@@516)) $generated@@58))
 :pattern ( ($generated@@436 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@66)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@66) (= (type $generated@@520) $generated@@66)) (= ($generated@@517 ($generated@@444 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@444 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@66)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@66) (= (type $generated@@524) $generated@@66)) (= ($generated@@521 ($generated@@444 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@444 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@66) (= (type $generated@@526) $generated@@66)) (= ($generated@@74 ($generated@@444 $generated@@525 $generated@@526)) $generated@@59))
 :pattern ( ($generated@@444 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@142) (= (type $generated@@528) $generated@@142)) (= ($generated@@296 ($generated@@266 $generated@@527 $generated@@528)) $generated@@61))
 :pattern ( ($generated@@266 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@66)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@66) (= (type $generated@@532) $generated@@66)) (= ($generated@@529 ($generated@@172 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@172 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@66)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@66) (= (type $generated@@536) $generated@@66)) (= ($generated@@533 ($generated@@172 $generated@@535 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@172 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@142) (= (type $generated@@538) $generated@@142)) (= ($generated@@180 ($generated@@266 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@266 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@142) (= (type $generated@@540) $generated@@142)) (= ($generated@@181 ($generated@@266 $generated@@539 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@266 $generated@@539 $generated@@540))
)))
(assert  (and (forall (($generated@@543 T@U) ) (! (= (type ($generated@@541 $generated@@543)) $generated@@141)
 :pattern ( ($generated@@541 $generated@@543))
)) (= (type $generated@@542) $generated@@141)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@141) (= (type $generated@@545) ($generated@@78 $generated@@142 $generated@@4))) (= ($generated@@138 $generated@@544 $generated@@545) ($generated@@138 $generated@@542 $generated@@545)))
 :pattern ( ($generated@@138 ($generated@@541 $generated@@544) $generated@@545))
)))
(assert  (and (forall (($generated@@548 T@U) ) (! (= (type ($generated@@546 $generated@@548)) $generated@@66)
 :pattern ( ($generated@@546 $generated@@548))
)) (forall (($generated@@549 T@U) ($generated@@550 Int) ) (! (let (($generated@@551 ($generated@@305 (type $generated@@549))))
(= (type ($generated@@547 $generated@@549 $generated@@550)) $generated@@551))
 :pattern ( ($generated@@547 $generated@@549 $generated@@550))
))))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@304 $generated@@142)) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@552 ($generated@@546 $generated@@553) $generated@@554) (forall (($generated@@555 Int) ) (!  (=> (and (<= 0 $generated@@555) (< $generated@@555 ($generated@@303 $generated@@552))) ($generated@@290 ($generated@@547 $generated@@552 $generated@@555) $generated@@553 $generated@@554))
 :pattern ( ($generated@@547 $generated@@552 $generated@@555))
))))
 :pattern ( ($generated@@76 $generated@@552 ($generated@@546 $generated@@553) $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
 (=> (= (type $generated@@556) ($generated@@78 $generated@@558 $generated@@4)) ($generated@@0 ($generated@@83 ($generated@@149 $generated@@556 $generated@@557) $generated@@557))))
 :pattern ( ($generated@@149 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@560 Int) ) (! (= ($generated@@559 ($generated@@77 $generated@@560)) $generated@@560)
 :pattern ( ($generated@@77 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@66)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@66) (= ($generated@@561 ($generated@@145 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@145 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@66) (= ($generated@@74 ($generated@@145 $generated@@564)) $generated@@54))
 :pattern ( ($generated@@145 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@66)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@66) (= ($generated@@565 ($generated@@279 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@279 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@66) (= ($generated@@74 ($generated@@279 $generated@@568)) $generated@@55))
 :pattern ( ($generated@@279 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@66)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@66) (= ($generated@@569 ($generated@@186 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@186 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@66) (= ($generated@@74 ($generated@@186 $generated@@572)) $generated@@56))
 :pattern ( ($generated@@186 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@66)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@66) (= ($generated@@573 ($generated@@546 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@546 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (= (type $generated@@576) $generated@@66) (= ($generated@@74 ($generated@@546 $generated@@576)) $generated@@57))
 :pattern ( ($generated@@546 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 (type $generated@@577)))
(= ($generated@@363 $generated@@578 ($generated@@150 $generated@@577)) $generated@@577))
 :pattern ( ($generated@@150 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@322 $generated@@142 $generated@@142)) (= (type $generated@@580) $generated@@66)) (= (type $generated@@581) $generated@@66)) (= ($generated@@144 $generated@@579 ($generated@@436 $generated@@580 $generated@@581)) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@142) ($generated@@0 ($generated@@83 ($generated@@320 $generated@@579) $generated@@582))) (and ($generated@@267 ($generated@@83 ($generated@@411 $generated@@579) $generated@@582) $generated@@581) ($generated@@267 $generated@@582 $generated@@580)))
 :pattern ( ($generated@@83 ($generated@@411 $generated@@579) $generated@@582))
 :pattern ( ($generated@@83 ($generated@@320 $generated@@579) $generated@@582))
))))
 :pattern ( ($generated@@144 $generated@@579 ($generated@@436 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@340 $generated@@142 $generated@@142)) (= (type $generated@@584) $generated@@66)) (= (type $generated@@585) $generated@@66)) (= ($generated@@144 $generated@@583 ($generated@@444 $generated@@584 $generated@@585)) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@142) ($generated@@0 ($generated@@83 ($generated@@338 $generated@@583) $generated@@586))) (and ($generated@@267 ($generated@@83 ($generated@@419 $generated@@583) $generated@@586) $generated@@585) ($generated@@267 $generated@@586 $generated@@584)))
 :pattern ( ($generated@@83 ($generated@@419 $generated@@583) $generated@@586))
 :pattern ( ($generated@@83 ($generated@@338 $generated@@583) $generated@@586))
))))
 :pattern ( ($generated@@144 $generated@@583 ($generated@@444 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@142) (= (type $generated@@590) $generated@@142)) (< ($generated@@587 $generated@@589) ($generated@@588 ($generated@@266 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@266 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@142) (= (type $generated@@592) $generated@@142)) (< ($generated@@587 $generated@@592) ($generated@@588 ($generated@@266 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@266 $generated@@591 $generated@@592))
)))
(assert  (=> (<= 1 $generated@@137) (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (= (type $generated@@593) $generated@@141) (= (type $generated@@594) ($generated@@78 $generated@@142 $generated@@4))) (or ($generated@@143 $generated@@594) (and (not (= 1 $generated@@137)) (and ($generated@@144 $generated@@594 ($generated@@145 $generated@@134)) (not ($generated@@146 $generated@@594 ($generated@@147 $generated@@142))))))) (and (and ($generated@@0 ($generated@@83 $generated@@594 ($generated@@150 ($generated@@8 ($generated@@138 $generated@@593 $generated@@594))))) (forall (($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@2) true) ($generated@@0 ($generated@@83 $generated@@594 ($generated@@150 $generated@@595)))) (<= ($generated $generated@@595) ($generated@@138 $generated@@593 $generated@@594)))
 :pattern ( ($generated@@83 $generated@@594 ($generated@@150 $generated@@595)))
))) (<= ($generated@@284 1) ($generated@@138 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@138 $generated@@593 $generated@@594))
))))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@141) (= (type $generated@@597) ($generated@@78 $generated@@142 $generated@@4))) (= ($generated@@138 ($generated@@139 $generated@@596) $generated@@597) ($generated@@138 $generated@@596 $generated@@597)))
 :pattern ( ($generated@@138 ($generated@@139 $generated@@596) $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (! (let (($generated@@600 ($generated@@81 (type $generated@@598))))
 (=> (and (= (type $generated@@598) ($generated@@78 $generated@@600 $generated@@4)) (= (type $generated@@599) ($generated@@78 $generated@@600 $generated@@4))) (= ($generated@@259 $generated@@598 ($generated@@259 $generated@@598 $generated@@599)) ($generated@@259 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@259 $generated@@598 ($generated@@259 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) $generated@@142) (= (type $generated@@602) $generated@@66)) (= (type $generated@@603) $generated@@66)) ($generated@@267 $generated@@601 ($generated@@436 $generated@@602 $generated@@603))) (and (= ($generated@@150 ($generated@@363 ($generated@@322 $generated@@142 $generated@@142) $generated@@601)) $generated@@601) ($generated@@144 ($generated@@363 ($generated@@322 $generated@@142 $generated@@142) $generated@@601) ($generated@@436 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@267 $generated@@601 ($generated@@436 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@142) (= (type $generated@@605) $generated@@66)) (= (type $generated@@606) $generated@@66)) ($generated@@267 $generated@@604 ($generated@@444 $generated@@605 $generated@@606))) (and (= ($generated@@150 ($generated@@363 ($generated@@340 $generated@@142 $generated@@142) $generated@@604)) $generated@@604) ($generated@@144 ($generated@@363 ($generated@@340 $generated@@142 $generated@@142) $generated@@604) ($generated@@444 $generated@@605 $generated@@606))))
 :pattern ( ($generated@@267 $generated@@604 ($generated@@444 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (and (= (type $generated@@607) $generated@@66) (= (type $generated@@608) $generated@@66)) (= (type $generated@@609) $generated@@142)) ($generated@@267 $generated@@609 ($generated@@172 $generated@@607 $generated@@608))) (and (= ($generated@@150 ($generated@@363 $generated@@173 $generated@@609)) $generated@@609) ($generated@@144 ($generated@@363 $generated@@173 $generated@@609) ($generated@@172 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@267 $generated@@609 ($generated@@172 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ) (! (let (($generated@@611 (type $generated@@610)))
 (not ($generated@@0 ($generated@@83 ($generated@@147 $generated@@611) $generated@@610))))
 :pattern ( (let (($generated@@611 (type $generated@@610)))
($generated@@83 ($generated@@147 $generated@@611) $generated@@610)))
)))
(assert (forall (($generated@@612 T@U) ) (! (let (($generated@@613 (type $generated@@612)))
 (not ($generated@@0 ($generated@@83 ($generated@@475 $generated@@613) $generated@@612))))
 :pattern ( (let (($generated@@613 (type $generated@@612)))
($generated@@83 ($generated@@475 $generated@@613) $generated@@612)))
)))
(assert (forall (($generated@@615 T@U) ) (! (= (type ($generated@@614 $generated@@615)) $generated@@71)
 :pattern ( ($generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@66) (= (type $generated@@617) $generated@@66)) (and (= ($generated@@74 ($generated@@172 $generated@@616 $generated@@617)) $generated@@62) (= ($generated@@614 ($generated@@172 $generated@@616 $generated@@617)) $generated@@64)))
 :pattern ( ($generated@@172 $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@173) (= ($generated@@587 ($generated@@150 $generated@@618)) ($generated@@588 $generated@@618)))
 :pattern ( ($generated@@587 ($generated@@150 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@142) ($generated@@267 $generated@@619 ($generated@@77 0))) (and (= ($generated@@150 ($generated@@363 $generated@@2 $generated@@619)) $generated@@619) ($generated@@144 ($generated@@363 ($generated@@78 $generated@@142 $generated@@4) $generated@@619) ($generated@@77 0))))
 :pattern ( ($generated@@267 $generated@@619 ($generated@@77 0)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@142) (= (type $generated@@621) $generated@@66)) ($generated@@267 $generated@@620 ($generated@@145 $generated@@621))) (and (= ($generated@@150 ($generated@@363 ($generated@@78 $generated@@142 $generated@@4) $generated@@620)) $generated@@620) ($generated@@144 ($generated@@363 ($generated@@78 $generated@@142 $generated@@4) $generated@@620) ($generated@@145 $generated@@621))))
 :pattern ( ($generated@@267 $generated@@620 ($generated@@145 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@142) (= (type $generated@@623) $generated@@66)) ($generated@@267 $generated@@622 ($generated@@279 $generated@@623))) (and (= ($generated@@150 ($generated@@363 ($generated@@78 $generated@@142 $generated@@4) $generated@@622)) $generated@@622) ($generated@@144 ($generated@@363 ($generated@@78 $generated@@142 $generated@@4) $generated@@622) ($generated@@279 $generated@@623))))
 :pattern ( ($generated@@267 $generated@@622 ($generated@@279 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@142) (= (type $generated@@625) $generated@@66)) ($generated@@267 $generated@@624 ($generated@@186 $generated@@625))) (and (= ($generated@@150 ($generated@@363 ($generated@@78 $generated@@142 $generated@@2) $generated@@624)) $generated@@624) ($generated@@144 ($generated@@363 ($generated@@78 $generated@@142 $generated@@2) $generated@@624) ($generated@@186 $generated@@625))))
 :pattern ( ($generated@@267 $generated@@624 ($generated@@186 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) $generated@@142) (= (type $generated@@627) $generated@@66)) ($generated@@267 $generated@@626 ($generated@@546 $generated@@627))) (and (= ($generated@@150 ($generated@@363 ($generated@@304 $generated@@142) $generated@@626)) $generated@@626) ($generated@@144 ($generated@@363 ($generated@@304 $generated@@142) $generated@@626) ($generated@@546 $generated@@627))))
 :pattern ( ($generated@@267 $generated@@626 ($generated@@546 $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (! (let (($generated@@631 ($generated@@81 (type $generated@@629))))
 (=> (and (= (type $generated@@629) ($generated@@78 $generated@@631 $generated@@4)) (= (type $generated@@630) ($generated@@78 $generated@@631 $generated@@4))) (= ($generated@@628 $generated@@629 $generated@@630) (forall (($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@632) $generated@@631) ($generated@@0 ($generated@@83 $generated@@629 $generated@@632))) ($generated@@0 ($generated@@83 $generated@@630 $generated@@632)))
 :pattern ( ($generated@@83 $generated@@629 $generated@@632))
 :pattern ( ($generated@@83 $generated@@630 $generated@@632))
)))))
 :pattern ( ($generated@@628 $generated@@629 $generated@@630))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@63))
(assert (= ($generated@@614 $generated@@134) $generated@@65))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (= (type $generated@@633) ($generated@@78 $generated@@142 $generated@@2)) (= (type $generated@@634) $generated@@66)) (= (type $generated@@635) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@633 ($generated@@186 $generated@@634) $generated@@635) (forall (($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@142) (< 0 ($generated ($generated@@83 $generated@@633 $generated@@636)))) ($generated@@290 $generated@@636 $generated@@634 $generated@@635))
 :pattern ( ($generated@@83 $generated@@633 $generated@@636))
))))
 :pattern ( ($generated@@76 $generated@@633 ($generated@@186 $generated@@634) $generated@@635))
)))
(assert  (=> (<= 1 $generated@@137) (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@141) (= (type $generated@@638) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@639) ($generated@@78 $generated@@142 $generated@@4))) (or ($generated@@143 ($generated@@286 $generated@@639)) (and (not (= 1 $generated@@137)) (and (and ($generated@@140 $generated@@638) ($generated@@144 $generated@@639 ($generated@@145 $generated@@134))) (not ($generated@@146 $generated@@639 ($generated@@147 $generated@@142))))))) (and (and ($generated@@148 ($generated@@286 $generated@@639)) (=> (not ($generated@@146 $generated@@639 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 ($generated@@151 ($generated@@286 $generated@@639))))))) (let (($generated@@640 ($generated@@152 $generated@@639 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 ($generated@@151 ($generated@@286 $generated@@639))))))))
($generated@@143 $generated@@640)))) (= ($generated@@138 ($generated@@139 $generated@@637) ($generated@@286 $generated@@639)) (let (($generated@@641 ($generated@@151 ($generated@@286 $generated@@639))))
(ite ($generated@@146 $generated@@639 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 $generated@@641)))) $generated@@641 (let (($generated@@642 ($generated@@152 $generated@@639 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 $generated@@641))))))
(let (($generated@@643 ($generated@@138 ($generated@@139 $generated@@637) $generated@@642)))
(ite (< $generated@@641 $generated@@643) $generated@@643 $generated@@641))))))))
 :weight 3
 :pattern ( ($generated@@138 ($generated@@139 $generated@@637) ($generated@@286 $generated@@639)) ($generated@@140 $generated@@638))
))))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (! (let (($generated@@646 ($generated@@81 (type $generated@@644))))
 (=> (and (= (type $generated@@644) ($generated@@78 $generated@@646 $generated@@4)) (= (type $generated@@645) ($generated@@78 $generated@@646 $generated@@4))) (= ($generated@@392 $generated@@644 $generated@@645) (forall (($generated@@647 T@U) ) (!  (=> (= (type $generated@@647) $generated@@646) (or (not ($generated@@0 ($generated@@83 $generated@@644 $generated@@647))) (not ($generated@@0 ($generated@@83 $generated@@645 $generated@@647)))))
 :pattern ( ($generated@@83 $generated@@644 $generated@@647))
 :pattern ( ($generated@@83 $generated@@645 $generated@@647))
)))))
 :pattern ( ($generated@@392 $generated@@644 $generated@@645))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) $generated@@173) (= (type $generated@@649) $generated@@66)) (= (type $generated@@650) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@140 $generated@@650) (and ($generated@@171 $generated@@648) (exists (($generated@@651 T@U) ) (!  (and (= (type $generated@@651) $generated@@66) ($generated@@76 $generated@@648 ($generated@@172 $generated@@649 $generated@@651) $generated@@650))
 :pattern ( ($generated@@76 $generated@@648 ($generated@@172 $generated@@649 $generated@@651) $generated@@650))
))))) ($generated@@290 ($generated@@180 $generated@@648) $generated@@649 $generated@@650))
 :pattern ( ($generated@@290 ($generated@@180 $generated@@648) $generated@@649 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) $generated@@173) (= (type $generated@@653) $generated@@66)) (= (type $generated@@654) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@140 $generated@@654) (and ($generated@@171 $generated@@652) (exists (($generated@@655 T@U) ) (!  (and (= (type $generated@@655) $generated@@66) ($generated@@76 $generated@@652 ($generated@@172 $generated@@655 $generated@@653) $generated@@654))
 :pattern ( ($generated@@76 $generated@@652 ($generated@@172 $generated@@655 $generated@@653) $generated@@654))
))))) ($generated@@290 ($generated@@181 $generated@@652) $generated@@653 $generated@@654))
 :pattern ( ($generated@@290 ($generated@@181 $generated@@652) $generated@@653 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) $generated@@142) (= (type $generated@@657) $generated@@142)) (= ($generated@@266 ($generated@@286 $generated@@656) ($generated@@286 $generated@@657)) ($generated@@286 ($generated@@266 $generated@@656 $generated@@657))))
 :pattern ( ($generated@@266 ($generated@@286 $generated@@656) ($generated@@286 $generated@@657)))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@78 $generated@@142 $generated@@4)) ($generated@@148 $generated@@658)) ($generated@@0 ($generated@@83 $generated@@658 ($generated@@150 ($generated@@8 ($generated@@151 $generated@@658))))))
 :pattern ( ($generated@@151 $generated@@658))
)))
(assert (forall (($generated@@659 Int) ) (! (= ($generated@@150 ($generated@@8 ($generated@@284 $generated@@659))) ($generated@@286 ($generated@@150 ($generated@@8 $generated@@659))))
 :pattern ( ($generated@@150 ($generated@@8 ($generated@@284 $generated@@659))))
)))
(assert (forall (($generated@@660 T@U) ) (! (= ($generated@@150 ($generated@@286 $generated@@660)) ($generated@@286 ($generated@@150 $generated@@660)))
 :pattern ( ($generated@@150 ($generated@@286 $generated@@660)))
)))
(assert (forall (($generated@@661 T@U) ) (! (let (($generated@@662 ($generated@@305 (type $generated@@661))))
 (=> (and (= (type $generated@@661) ($generated@@304 $generated@@662)) (= ($generated@@303 $generated@@661) 0)) (= $generated@@661 ($generated@@302 $generated@@662))))
 :pattern ( ($generated@@303 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ($generated@@665 T@U) ) (! (let (($generated@@666 (type $generated@@664)))
 (=> (and (and (= (type $generated@@663) ($generated@@78 $generated@@666 $generated@@2)) (= (type $generated@@665) $generated@@2)) (<= 0 ($generated $generated@@665))) (= ($generated@@314 ($generated@@84 $generated@@663 $generated@@664 $generated@@665)) (+ (- ($generated@@314 $generated@@663) ($generated ($generated@@83 $generated@@663 $generated@@664))) ($generated $generated@@665)))))
 :pattern ( ($generated@@314 ($generated@@84 $generated@@663 $generated@@664 $generated@@665)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (! (let (($generated@@670 (type $generated@@669)))
 (=> (and (= (type $generated@@667) ($generated@@78 $generated@@670 $generated@@4)) (= (type $generated@@668) ($generated@@78 $generated@@670 $generated@@4))) (= ($generated@@0 ($generated@@83 ($generated@@259 $generated@@667 $generated@@668) $generated@@669))  (or ($generated@@0 ($generated@@83 $generated@@667 $generated@@669)) ($generated@@0 ($generated@@83 $generated@@668 $generated@@669))))))
 :pattern ( ($generated@@83 ($generated@@259 $generated@@667 $generated@@668) $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (= (type $generated@@671) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@672) $generated@@2)) ($generated@@76 $generated@@672 $generated@@46 $generated@@671))
 :pattern ( ($generated@@76 $generated@@672 $generated@@46 $generated@@671))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@673) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@674) $generated@@3)) ($generated@@76 $generated@@674 $generated@@47 $generated@@673))
 :pattern ( ($generated@@76 $generated@@674 $generated@@47 $generated@@673))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@675) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@676) $generated@@4)) ($generated@@76 $generated@@676 $generated@@44 $generated@@675))
 :pattern ( ($generated@@76 $generated@@676 $generated@@44 $generated@@675))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (= (type $generated@@677) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@678) $generated@@499)) ($generated@@76 $generated@@678 $generated@@45 $generated@@677))
 :pattern ( ($generated@@76 $generated@@678 $generated@@45 $generated@@677))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (= (type $generated@@679) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@680) $generated@@142)) ($generated@@76 $generated@@680 $generated@@48 $generated@@679))
 :pattern ( ($generated@@76 $generated@@680 $generated@@48 $generated@@679))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@681) ($generated@@304 $generated@@142)) (= (type $generated@@682) $generated@@66)) (= ($generated@@144 $generated@@681 ($generated@@546 $generated@@682)) (forall (($generated@@683 Int) ) (!  (=> (and (<= 0 $generated@@683) (< $generated@@683 ($generated@@303 $generated@@681))) ($generated@@267 ($generated@@547 $generated@@681 $generated@@683) $generated@@682))
 :pattern ( ($generated@@547 $generated@@681 $generated@@683))
))))
 :pattern ( ($generated@@144 $generated@@681 ($generated@@546 $generated@@682)))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 Int) ) (!  (=> (= (type $generated@@685) ($generated@@304 $generated@@142)) (=> (and (<= 0 $generated@@686) (< $generated@@686 ($generated@@303 $generated@@685))) (< ($generated@@588 ($generated@@363 $generated@@173 ($generated@@547 $generated@@685 $generated@@686))) ($generated@@684 $generated@@685))))
 :pattern ( ($generated@@588 ($generated@@363 $generated@@173 ($generated@@547 $generated@@685 $generated@@686))))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (and (and (= (type $generated@@687) ($generated@@322 $generated@@142 $generated@@142)) (= (type $generated@@688) $generated@@66)) (= (type $generated@@689) $generated@@66)) ($generated@@144 $generated@@687 ($generated@@436 $generated@@688 $generated@@689))) (and (and ($generated@@144 ($generated@@320 $generated@@687) ($generated@@145 $generated@@688)) ($generated@@144 ($generated@@371 $generated@@687) ($generated@@145 $generated@@689))) ($generated@@144 ($generated@@410 $generated@@687) ($generated@@145 ($generated@@172 $generated@@688 $generated@@689)))))
 :pattern ( ($generated@@144 $generated@@687 ($generated@@436 $generated@@688 $generated@@689)))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (and (= (type $generated@@690) ($generated@@340 $generated@@142 $generated@@142)) (= (type $generated@@691) $generated@@66)) (= (type $generated@@692) $generated@@66)) ($generated@@144 $generated@@690 ($generated@@444 $generated@@691 $generated@@692))) (and (and ($generated@@144 ($generated@@338 $generated@@690) ($generated@@279 $generated@@691)) ($generated@@144 ($generated@@382 $generated@@690) ($generated@@279 $generated@@692))) ($generated@@144 ($generated@@418 $generated@@690) ($generated@@279 ($generated@@172 $generated@@691 $generated@@692)))))
 :pattern ( ($generated@@144 $generated@@690 ($generated@@444 $generated@@691 $generated@@692)))
)))
(assert (forall (($generated@@693 T@U) ) (!  (=> (= (type $generated@@693) $generated@@2) ($generated@@144 $generated@@693 $generated@@46))
 :pattern ( ($generated@@144 $generated@@693 $generated@@46))
)))
(assert (forall (($generated@@694 T@U) ) (!  (=> (= (type $generated@@694) $generated@@3) ($generated@@144 $generated@@694 $generated@@47))
 :pattern ( ($generated@@144 $generated@@694 $generated@@47))
)))
(assert (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@4) ($generated@@144 $generated@@695 $generated@@44))
 :pattern ( ($generated@@144 $generated@@695 $generated@@44))
)))
(assert (forall (($generated@@696 T@U) ) (!  (=> (= (type $generated@@696) $generated@@499) ($generated@@144 $generated@@696 $generated@@45))
 :pattern ( ($generated@@144 $generated@@696 $generated@@45))
)))
(assert (forall (($generated@@697 T@U) ) (!  (=> (= (type $generated@@697) $generated@@142) ($generated@@144 $generated@@697 $generated@@48))
 :pattern ( ($generated@@144 $generated@@697 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () Int)
(declare-fun $generated@@700 () Int)
(declare-fun $generated@@701 () Int)
(declare-fun $generated@@702 () Int)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 () T@U)
(declare-fun $generated@@706 () Int)
(declare-fun $generated@@707 () T@U)
(declare-fun $generated@@708 () T@U)
(declare-fun $generated@@709 () T@U)
(declare-fun $generated@@710 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@698) ($generated@@78 $generated@@142 $generated@@4)) (= (type $generated@@703) ($generated@@78 $generated@@142 $generated@@4))) (= (type $generated@@704) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@705) ($generated@@78 $generated@@142 $generated@@4))) (= (type $generated@@707) ($generated@@193 $generated@@79 $generated@@4))) (= (type $generated@@708) $generated@@79)) (= (type $generated@@709) ($generated@@193 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 23) (let (($generated@@711 true))
(let (($generated@@712  (=> (and (=> ($generated@@0 ($generated@@83 $generated@@698 ($generated@@150 ($generated@@8 $generated@@699)))) (<= $generated@@699 $generated@@700)) (= (ControlFlow 0 20) 18)) $generated@@711)))
(let (($generated@@713  (=> ($generated@@0 ($generated@@83 $generated@@698 ($generated@@150 ($generated@@8 $generated@@699)))) (=> (and (<= $generated@@699 $generated@@700) (= (ControlFlow 0 19) 18)) $generated@@711))))
(let (($generated@@714  (=> (and (<= ($generated@@284 1) ($generated@@138 ($generated@@139 $generated@@542) $generated@@698)) ($generated@@0 ($generated@@83 $generated@@698 ($generated@@150 ($generated@@8 $generated@@700))))) (and (=> (= (ControlFlow 0 21) 19) $generated@@713) (=> (= (ControlFlow 0 21) 20) $generated@@712)))))
(let (($generated@@715  (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@0 ($generated@@83 $generated@@698 ($generated@@150 ($generated@@8 $generated@@700))))) (=> ($generated@@0 ($generated@@83 $generated@@698 ($generated@@150 ($generated@@8 $generated@@700)))) (=> (= (ControlFlow 0 3) (- 0 2)) (forall (($generated@@716 Int) ) (!  (=> true (=> ($generated@@0 ($generated@@83 $generated@@698 ($generated@@150 ($generated@@8 $generated@@716)))) (<= $generated@@716 $generated@@700)))
 :pattern ( ($generated@@83 $generated@@698 ($generated@@150 ($generated@@8 $generated@@716))))
)))))))
(let (($generated@@717  (=> ($generated@@148 $generated@@698) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@144 ($generated@@8 (ite ($generated@@146 $generated@@698 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 $generated@@701)))) $generated@@701 (let (($generated@@718 ($generated@@152 $generated@@698 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 $generated@@701))))))
(let (($generated@@719 ($generated@@138 ($generated@@139 $generated@@542) $generated@@718)))
(ite (< $generated@@701 $generated@@719) $generated@@719 $generated@@701))))) $generated@@134)) (=> ($generated@@144 ($generated@@8 (ite ($generated@@146 $generated@@698 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 $generated@@701)))) $generated@@701 (let (($generated@@720 ($generated@@152 $generated@@698 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 $generated@@701))))))
(let (($generated@@721 ($generated@@138 ($generated@@139 $generated@@542) $generated@@720)))
(ite (< $generated@@701 $generated@@721) $generated@@721 $generated@@701))))) $generated@@134) (=> (= ($generated@@138 ($generated@@139 $generated@@542) $generated@@698) (ite ($generated@@146 $generated@@698 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 $generated@@701)))) $generated@@701 (let (($generated@@722 ($generated@@152 $generated@@698 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 $generated@@701))))))
(let (($generated@@723 ($generated@@138 ($generated@@139 $generated@@542) $generated@@722)))
(ite (< $generated@@701 $generated@@723) $generated@@723 $generated@@701))))) (=> (and (and (=> (not ($generated@@146 $generated@@698 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 $generated@@701))))) (let (($generated@@724 ($generated@@152 $generated@@698 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 $generated@@701))))))
($generated@@143 $generated@@724))) ($generated@@144 ($generated@@8 ($generated@@138 ($generated@@139 $generated@@542) $generated@@698)) $generated@@134)) (and (= ($generated@@138 ($generated@@139 $generated@@542) $generated@@698) $generated@@700) (= (ControlFlow 0 5) 3))) $generated@@715)))))))
(let (($generated@@725  (=> (and (<= $generated@@702 $generated@@701) (= (ControlFlow 0 9) 5)) $generated@@717)))
(let (($generated@@726  (=> (and (< $generated@@701 $generated@@702) (= (ControlFlow 0 8) 5)) $generated@@717)))
(let (($generated@@727  (=> (not ($generated@@146 $generated@@698 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 $generated@@701))))) (=> (and (and (and ($generated@@144 $generated@@703 ($generated@@145 $generated@@46)) ($generated@@76 $generated@@703 ($generated@@145 $generated@@46) $generated@@704)) (= $generated@@705 ($generated@@152 $generated@@698 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 $generated@@701)))))) (and ($generated@@144 $generated@@705 ($generated@@145 $generated@@46)) (= $generated@@703 $generated@@705))) (and (=> (= (ControlFlow 0 10) (- 0 14)) ($generated@@146 $generated@@698 ($generated@@259 $generated@@703 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 $generated@@701)))))) (=> ($generated@@146 $generated@@698 ($generated@@259 $generated@@703 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 $generated@@701))))) (=> (<= ($generated@@284 1) $generated@@702) (and (=> (= (ControlFlow 0 10) (- 0 13)) ($generated@@144 $generated@@703 ($generated@@145 $generated@@134))) (=> ($generated@@144 $generated@@703 ($generated@@145 $generated@@134)) (=> ($generated@@76 $generated@@703 ($generated@@145 $generated@@134) $generated@@704) (and (=> (= (ControlFlow 0 10) (- 0 12)) (not ($generated@@146 $generated@@703 ($generated@@147 $generated@@142)))) (=> (not ($generated@@146 $generated@@703 ($generated@@147 $generated@@142))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (and ($generated@@628 $generated@@703 $generated@@698) (not ($generated@@628 $generated@@698 $generated@@703)))) (=> (and ($generated@@628 $generated@@703 $generated@@698) (not ($generated@@628 $generated@@698 $generated@@703))) (=> ($generated@@143 $generated@@703) (=> (and (and (= $generated@@706 ($generated@@138 ($generated@@139 $generated@@542) $generated@@703)) ($generated@@143 $generated@@703)) (and ($generated@@144 ($generated@@8 $generated@@706) $generated@@134) (= $generated@@702 $generated@@706))) (and (=> (= (ControlFlow 0 10) 8) $generated@@726) (=> (= (ControlFlow 0 10) 9) $generated@@725))))))))))))))))))
(let (($generated@@728  (=> (and ($generated@@146 $generated@@698 ($generated@@149 ($generated@@147 $generated@@142) ($generated@@150 ($generated@@8 $generated@@701)))) (= (ControlFlow 0 7) 5)) $generated@@717)))
(let (($generated@@729  (and (=> (= (ControlFlow 0 15) (- 0 16)) (or (and ($generated@@144 ($generated@@8 ($generated@@284 0)) $generated@@46) ($generated@@0 ($generated@@83 $generated@@698 ($generated@@150 ($generated@@8 ($generated@@284 0)))))) (exists (($generated@@730 T@U) ) (!  (and (= (type $generated@@730) $generated@@2) ($generated@@0 ($generated@@83 $generated@@698 ($generated@@150 $generated@@730))))
 :no-pattern (type $generated@@730)
 :no-pattern ($generated $generated@@730)
 :no-pattern ($generated@@0 $generated@@730)
)))) (=> (or (and ($generated@@144 ($generated@@8 ($generated@@284 0)) $generated@@46) ($generated@@0 ($generated@@83 $generated@@698 ($generated@@150 ($generated@@8 ($generated@@284 0)))))) (exists (($generated@@731 Int) ) ($generated@@0 ($generated@@83 $generated@@698 ($generated@@150 ($generated@@8 $generated@@731)))))) (=> ($generated@@0 ($generated@@83 $generated@@698 ($generated@@150 ($generated@@8 $generated@@701)))) (and (=> (= (ControlFlow 0 15) 7) $generated@@728) (=> (= (ControlFlow 0 15) 10) $generated@@727)))))))
(let (($generated@@732 true))
(let (($generated@@733  (=> (= $generated@@707 ($generated@@247 $generated@@708 $generated@@704 $generated@@60 false)) (and (=> (= (ControlFlow 0 17) 15) $generated@@729) (=> (= (ControlFlow 0 17) 1) $generated@@732)))))
(let (($generated@@734  (=> (and (= $generated@@709 ($generated@@192 $generated@@708 $generated@@704 $generated@@60 false)) (not ($generated@@146 $generated@@698 ($generated@@147 $generated@@142)))) (and (=> (= (ControlFlow 0 22) 21) $generated@@714) (=> (= (ControlFlow 0 22) 17) $generated@@733)))))
(let (($generated@@735  (=> (and ($generated@@140 $generated@@704) ($generated@@710 $generated@@704)) (=> (and (and ($generated@@144 $generated@@698 ($generated@@145 $generated@@134)) (<= ($generated@@284 1) $generated@@700)) (and (= 1 $generated@@137) (= (ControlFlow 0 23) 22))) $generated@@734))))
$generated@@735))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 () Int)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 () T@U)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@T) T@U)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@89 (T@U) Int)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@149 (T@U T@U T@U) Bool)
(declare-fun $generated@@150 (Int) T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@172 (Int) T@U)
(declare-fun $generated@@173 (Int) Bool)
(declare-fun $generated@@174 (Int) Int)
(declare-fun $generated@@175 (Int Int) Bool)
(declare-fun $generated@@176 (Int Int) Bool)
(declare-fun $generated@@177 (T@U Int Int) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@257 (T@U T@U) T@U)
(declare-fun $generated@@264 (T@U T@U) T@U)
(declare-fun $generated@@265 (T@U T@U) Bool)
(declare-fun $generated@@272 (Int Int) Int)
(declare-fun $generated@@273 (Int Int) Bool)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@291 (T@U T@U T@U) Bool)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@303 (T@T) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@312 (Int Int) Int)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@321 (T@U) Int)
(declare-fun $generated@@322 (T@T) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@T) T@U)
(declare-fun $generated@@349 (T@T T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@372 (T@T T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@450 (T@U T@U) T@U)
(declare-fun $generated@@458 (T@U T@U) T@U)
(declare-fun $generated@@473 (T@T) T@U)
(declare-fun $generated@@497 () T@T)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@545 (T@U Int) T@U)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@560 (T@U) T@U)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@585 (T@U) Int)
(declare-fun $generated@@586 (T@U) Int)
(declare-fun $generated@@607 (T@U) T@U)
(declare-fun $generated@@658 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@96 $generated@@97)) 11)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@78 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@78 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@78 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@78 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@78 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@69 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@80)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@69 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 14)) (forall (($generated@@140 T@U) ) (! (let (($generated@@141 (type $generated@@140)))
(= (type ($generated@@76 $generated@@140)) $generated@@141))
 :pattern ( ($generated@@76 $generated@@140))
))) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@84 $generated@@142)) $generated@@66)
 :pattern ( ($generated@@84 $generated@@142))
))) (= (type $generated@@85) $generated@@66)) (forall (($generated@@143 T@T) ) (! (= (type ($generated@@87 $generated@@143)) ($generated@@78 $generated@@143 $generated@@4))
 :pattern ( ($generated@@87 $generated@@143))
))))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@145) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 ($generated@@76 $generated@@145)) (and (not (= 3 $generated@@74)) (and (and ($generated@@77 $generated@@144) ($generated@@83 $generated@@145 ($generated@@84 $generated@@85))) (not ($generated@@86 $generated@@145 ($generated@@87 $generated@@81))))))) (and ($generated@@88 ($generated@@76 $generated@@145)) (= ($generated@@75 ($generated@@76 $generated@@145)) (let (($generated@@146 ($generated@@89 ($generated@@76 $generated@@145))))
$generated@@146))))
 :weight 3
 :pattern ( ($generated@@75 ($generated@@76 $generated@@145)) ($generated@@77 $generated@@144))
))))
(assert (forall (($generated@@148 T@U) ) (! (= (type ($generated@@147 $generated@@148)) $generated@@67)
 :pattern ( ($generated@@147 $generated@@148))
)))
(assert (= ($generated@@147 $generated@@44) $generated@@49))
(assert (= ($generated@@147 $generated@@45) $generated@@50))
(assert (= ($generated@@147 $generated@@46) $generated@@51))
(assert (= ($generated@@147 $generated@@47) $generated@@52))
(assert (= ($generated@@147 $generated@@48) $generated@@53))
(assert (forall (($generated@@151 Int) ) (! (= (type ($generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@2) (= (type $generated@@153) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@149 $generated@@152 ($generated@@150 0) $generated@@153))
 :pattern ( ($generated@@149 $generated@@152 ($generated@@150 0) $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@2) (= (type $generated@@155) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@149 $generated@@154 $generated@@85 $generated@@155))
 :pattern ( ($generated@@149 $generated@@154 $generated@@85 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@83 $generated@@156 ($generated@@150 0)))
 :pattern ( ($generated@@83 $generated@@156 ($generated@@150 0)))
)))
(assert  (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@160 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@158 $generated@@160 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@66) (= (type $generated@@163) $generated@@66)) (= (type $generated@@164) $generated@@159)) ($generated@@83 $generated@@164 ($generated@@158 $generated@@162 $generated@@163))) ($generated@@157 $generated@@164))
 :pattern ( ($generated@@157 $generated@@164) ($generated@@83 $generated@@164 ($generated@@158 $generated@@162 $generated@@163)))
)))
(assert  (and (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@81)
 :pattern ( ($generated@@166 $generated@@168))
)) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@81)
 :pattern ( ($generated@@167 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@159) (= (type $generated@@171) $generated@@159)) true) (= ($generated@@165 $generated@@170 $generated@@171)  (and (= ($generated@@166 $generated@@170) ($generated@@166 $generated@@171)) (= ($generated@@167 $generated@@170) ($generated@@167 $generated@@171)))))
 :pattern ( ($generated@@165 $generated@@170 $generated@@171))
)))
(assert  (and (forall (($generated@@178 Int) ) (! (= (type ($generated@@172 $generated@@178)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@172 $generated@@178))
)) (forall (($generated@@179 T@U) ($generated@@180 Int) ($generated@@181 Int) ) (! (= (type ($generated@@177 $generated@@179 $generated@@180 $generated@@181)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@177 $generated@@179 $generated@@180 $generated@@181))
))))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@182 Int) ) (!  (=> (or ($generated@@173 $generated@@182) (and (not (= 2 $generated@@74)) (<= ($generated@@174 1) $generated@@182))) (and (forall (($generated@@183 Int) ) (!  (=> (<= ($generated@@174 1) $generated@@183) (=> (<= $generated@@183 $generated@@182) ($generated@@176 $generated@@183 $generated@@182)))
 :pattern ( ($generated@@175 $generated@@183 $generated@@182))
)) (= ($generated@@172 $generated@@182) ($generated@@177 $generated@@85 $generated@@182 $generated@@182))))
 :pattern ( ($generated@@172 $generated@@182))
))))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@66)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@188) $generated@@66)) ($generated@@83 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@83 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@195 $generated@@196)) 16)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@193 ($generated@@191 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@191 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@189 $generated@@201 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@189 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 (type $generated@@208)))
(let (($generated@@210 (type $generated@@206)))
(= (type ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@191 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@193 (type $generated@@211))))
 (=> (= (type $generated@@214) $generated@@215) (= ($generated@@189 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@212 $generated@@213) $generated@@214)))
 :weight 0
))) (and (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@189 ($generated@@194 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@189 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@189 ($generated@@194 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@189 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or true (= ($generated@@189 ($generated@@194 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@189 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@191 $generated@@79 $generated@@4))
 :pattern ( ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@69 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@79) (= (type $generated@@239) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@240) ($generated@@68 $generated@@4))) (= (type $generated@@242) $generated@@79)) (= (type $generated@@243) ($generated@@68 $generated@@244))) (= ($generated@@0 ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 Bool) ) (! (= (type ($generated@@245 $generated@@246 $generated@@247 $generated@@248 $generated@@249)) ($generated@@191 $generated@@79 $generated@@4))
 :pattern ( ($generated@@245 $generated@@246 $generated@@247 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 Bool) ($generated@@254 T@U) ($generated@@255 T@U) ) (! (let (($generated@@256 ($generated@@69 (type $generated@@255))))
 (=> (and (and (and (and (= (type $generated@@250) $generated@@79) (= (type $generated@@251) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@252) ($generated@@68 $generated@@4))) (= (type $generated@@254) $generated@@79)) (= (type $generated@@255) ($generated@@68 $generated@@256))) (= ($generated@@0 ($generated@@189 ($generated@@245 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))  (=> (and (not (= $generated@@254 $generated@@250)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@251 $generated@@254) $generated@@252))) $generated@@253))))
 :pattern ( ($generated@@189 ($generated@@245 $generated@@250 $generated@@251 $generated@@252 $generated@@253) $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (let (($generated@@260 ($generated@@90 (type $generated@@258))))
(= (type ($generated@@257 $generated@@258 $generated@@259)) ($generated@@78 $generated@@260 $generated@@4)))
 :pattern ( ($generated@@257 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (! (let (($generated@@263 ($generated@@90 (type $generated@@261))))
 (=> (and (= (type $generated@@261) ($generated@@78 $generated@@263 $generated@@4)) (= (type $generated@@262) ($generated@@78 $generated@@263 $generated@@4))) (= ($generated@@257 ($generated@@257 $generated@@261 $generated@@262) $generated@@262) ($generated@@257 $generated@@261 $generated@@262))))
 :pattern ( ($generated@@257 ($generated@@257 $generated@@261 $generated@@262) $generated@@262))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (= (type ($generated@@264 $generated@@266 $generated@@267)) $generated@@159)
 :pattern ( ($generated@@264 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (= (type $generated@@268) $generated@@66) (= (type $generated@@269) $generated@@66)) (= (type $generated@@270) $generated@@81)) (= (type $generated@@271) $generated@@81)) (= ($generated@@83 ($generated@@264 $generated@@270 $generated@@271) ($generated@@158 $generated@@268 $generated@@269))  (and ($generated@@265 $generated@@270 $generated@@268) ($generated@@265 $generated@@271 $generated@@269))))
 :pattern ( ($generated@@83 ($generated@@264 $generated@@270 $generated@@271) ($generated@@158 $generated@@268 $generated@@269)))
)))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@274 Int) ($generated@@275 Int) ) (!  (=> (or ($generated@@273 $generated@@274 $generated@@275) (and (not (= 4 $generated@@74)) (and (<= ($generated@@174 1) $generated@@274) (<= ($generated@@174 1) $generated@@275)))) (and (and (and ($generated@@173 $generated@@274) ($generated@@173 $generated@@275)) (let (($generated@@276 ($generated@@257 ($generated@@172 $generated@@274) ($generated@@172 $generated@@275))))
($generated@@82 $generated@@276))) (= ($generated@@272 $generated@@274 $generated@@275) (let (($generated@@277 ($generated@@257 ($generated@@172 $generated@@274) ($generated@@172 $generated@@275))))
($generated@@75 $generated@@277)))))
 :pattern ( ($generated@@272 $generated@@274 $generated@@275))
))))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@159) (= (type $generated@@279) $generated@@159)) (= ($generated@@165 $generated@@278 $generated@@279) (= $generated@@278 $generated@@279)))
 :pattern ( ($generated@@165 $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@281) $generated@@66)) (= ($generated@@83 $generated@@280 ($generated@@84 $generated@@281)) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@81) ($generated@@0 ($generated@@92 $generated@@280 $generated@@282))) ($generated@@265 $generated@@282 $generated@@281))
 :pattern ( ($generated@@92 $generated@@280 $generated@@282))
))))
 :pattern ( ($generated@@83 $generated@@280 ($generated@@84 $generated@@281)))
)))
(assert (forall (($generated@@284 T@U) ) (! (= (type ($generated@@283 $generated@@284)) $generated@@66)
 :pattern ( ($generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@286) $generated@@66)) (= ($generated@@83 $generated@@285 ($generated@@283 $generated@@286)) (forall (($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@81) ($generated@@0 ($generated@@92 $generated@@285 $generated@@287))) ($generated@@265 $generated@@287 $generated@@286))
 :pattern ( ($generated@@92 $generated@@285 $generated@@287))
))))
 :pattern ( ($generated@@83 $generated@@285 ($generated@@283 $generated@@286)))
)))
(assert (forall (($generated@@288 Int) ) (! (= ($generated@@174 $generated@@288) $generated@@288)
 :pattern ( ($generated@@174 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (! (= ($generated@@76 $generated@@289) $generated@@289)
 :pattern ( ($generated@@76 $generated@@289))
)))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) ($generated@@78 $generated@@81 $generated@@4)) (or ($generated@@82 $generated@@290) (and (not (= 3 $generated@@74)) (and ($generated@@83 $generated@@290 ($generated@@84 $generated@@85)) (not ($generated@@86 $generated@@290 ($generated@@87 $generated@@81))))))) (<= ($generated@@174 1) ($generated@@75 $generated@@290)))
 :pattern ( ($generated@@75 $generated@@290))
))))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@292) $generated@@66) (= (type $generated@@293) $generated@@66)) (= (type $generated@@294) $generated@@81)) (= (type $generated@@295) $generated@@81)) (= (type $generated@@296) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@77 $generated@@296)) (= ($generated@@149 ($generated@@264 $generated@@294 $generated@@295) ($generated@@158 $generated@@292 $generated@@293) $generated@@296)  (and ($generated@@291 $generated@@294 $generated@@292 $generated@@296) ($generated@@291 $generated@@295 $generated@@293 $generated@@296))))
 :pattern ( ($generated@@149 ($generated@@264 $generated@@294 $generated@@295) ($generated@@158 $generated@@292 $generated@@293) $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@70)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@159) (= ($generated@@157 $generated@@299) (= ($generated@@297 $generated@@299) $generated@@61)))
 :pattern ( ($generated@@157 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@159) ($generated@@157 $generated@@300)) (exists (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (and (and (= (type $generated@@301) $generated@@81) (= (type $generated@@302) $generated@@81)) (= $generated@@300 ($generated@@264 $generated@@301 $generated@@302)))
 :no-pattern (type $generated@@301)
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
)))
 :pattern ( ($generated@@157 $generated@@300))
)))
(assert  (and (and (forall (($generated@@307 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@307)) 17)) (forall (($generated@@308 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@305 $generated@@308))
))) (forall (($generated@@309 T@T) ) (! (= (type ($generated@@303 $generated@@309)) ($generated@@305 $generated@@309))
 :pattern ( ($generated@@303 $generated@@309))
))))
(assert (forall (($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@310)) 0)
 :pattern ( ($generated@@303 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (= (type $generated@@311) $generated@@2) (= ($generated@@83 $generated@@311 $generated@@85) (<= ($generated@@174 1) ($generated $generated@@311))))
 :pattern ( ($generated@@83 $generated@@311 $generated@@85))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@313 Int) ($generated@@314 Int) ) (!  (=> (or ($generated@@176 ($generated@@174 $generated@@313) ($generated@@174 $generated@@314)) (and (not (= 1 $generated@@74)) (and (<= ($generated@@174 1) $generated@@313) (<= ($generated@@174 1) $generated@@314)))) (= ($generated@@175 ($generated@@174 $generated@@313) ($generated@@174 $generated@@314)) (exists (($generated@@315 Int) ) (! (= ($generated@@312 ($generated@@174 $generated@@313) $generated@@315) ($generated@@174 $generated@@314))
 :pattern ( ($generated@@312 $generated@@313 $generated@@315))
))))
 :weight 3
 :pattern ( ($generated@@175 ($generated@@174 $generated@@313) ($generated@@174 $generated@@314)))
))))
(assert (forall (($generated@@317 T@U) ) (! (= (type ($generated@@316 $generated@@317)) $generated@@81)
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@66) (= (type $generated@@320) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@291 ($generated@@316 $generated@@318) $generated@@319 $generated@@320) ($generated@@149 $generated@@318 $generated@@319 $generated@@320)))
 :pattern ( ($generated@@291 ($generated@@316 $generated@@318) $generated@@319 $generated@@320))
)))
(assert (forall (($generated@@323 T@T) ) (! (= (type ($generated@@322 $generated@@323)) ($generated@@78 $generated@@323 $generated@@2))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@90 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@78 $generated@@325 $generated@@2)) (and (= (= ($generated@@321 $generated@@324) 0) (= $generated@@324 ($generated@@322 $generated@@325))) (=> (not (= ($generated@@321 $generated@@324) 0)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) (< 0 ($generated ($generated@@92 $generated@@324 $generated@@326))))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@78 $generated@@81 $generated@@4)) ($generated@@88 $generated@@327)) (and ($generated@@0 ($generated@@92 $generated@@327 ($generated@@316 ($generated@@8 ($generated@@89 $generated@@327))))) (forall (($generated@@328 T@U) ) (!  (=> (and (and (= (type $generated@@328) $generated@@2) true) ($generated@@0 ($generated@@92 $generated@@327 ($generated@@316 $generated@@328)))) (<= ($generated $generated@@328) ($generated@@89 $generated@@327)))
 :pattern ( ($generated@@92 $generated@@327 ($generated@@316 $generated@@328)))
))))
 :pattern ( ($generated@@89 $generated@@327))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 18)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@78 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@92 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@92 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert  (and (and (and (and (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (= ($generated@@1 ($generated@@349 $generated@@352 $generated@@353)) 19)) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@349 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@351 ($generated@@349 $generated@@356 $generated@@357)) $generated@@357)
 :pattern ( ($generated@@349 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@350 (type $generated@@358))))
(= (type ($generated@@347 $generated@@358)) ($generated@@78 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@358))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= (type ($generated@@348 $generated@@360 $generated@@361)) ($generated@@349 $generated@@360 $generated@@361))
 :pattern ( ($generated@@348 $generated@@360 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@T) ) (! (let (($generated@@364 (type $generated@@362)))
 (not ($generated@@0 ($generated@@92 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362))))
 :pattern ( (let (($generated@@364 (type $generated@@362)))
($generated@@92 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362)))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@90 (type $generated@@365))))
 (=> (and (= (type $generated@@365) ($generated@@78 $generated@@367 $generated@@4)) (= (type $generated@@366) ($generated@@78 $generated@@367 $generated@@4))) (= ($generated@@86 $generated@@365 $generated@@366) (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@367) (= ($generated@@0 ($generated@@92 $generated@@365 $generated@@368)) ($generated@@0 ($generated@@92 $generated@@366 $generated@@368))))
 :pattern ( ($generated@@92 $generated@@365 $generated@@368))
 :pattern ( ($generated@@92 $generated@@366 $generated@@368))
)))))
 :pattern ( ($generated@@86 $generated@@365 $generated@@366))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@90 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@78 $generated@@370 $generated@@2)) (= ($generated@@185 $generated@@369) (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@370) (and (<= 0 ($generated ($generated@@92 $generated@@369 $generated@@371))) (<= ($generated ($generated@@92 $generated@@369 $generated@@371)) ($generated@@321 $generated@@369))))
 :pattern ( ($generated@@92 $generated@@369 $generated@@371))
)))))
 :pattern ( ($generated@@185 $generated@@369))
)))
(assert (forall (($generated@@373 T@T) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@373)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@81) ($generated@@265 $generated@@375 $generated@@85)) (and (= ($generated@@316 ($generated@@372 $generated@@2 $generated@@375)) $generated@@375) ($generated@@83 ($generated@@372 $generated@@2 $generated@@375) $generated@@85)))
 :pattern ( ($generated@@265 $generated@@375 $generated@@85))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@333 (type $generated@@376))))
(let (($generated@@378 ($generated@@332 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@331 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@330 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) ($generated@@0 ($generated@@92 ($generated@@329 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@329 $generated@@376))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@333 (type $generated@@381))))
(= (type ($generated@@380 $generated@@381)) ($generated@@78 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@333 (type $generated@@383))))
(let (($generated@@385 ($generated@@332 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@331 $generated@@385 $generated@@384)) (or (= $generated@@383 ($generated@@330 $generated@@385 $generated@@384)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@384) ($generated@@0 ($generated@@92 ($generated@@380 $generated@@383) $generated@@386)))
 :no-pattern (type $generated@@386)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
))))))
 :pattern ( ($generated@@380 $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@351 (type $generated@@387))))
(let (($generated@@389 ($generated@@350 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@349 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@348 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) ($generated@@0 ($generated@@92 ($generated@@347 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@347 $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@351 (type $generated@@392))))
(= (type ($generated@@391 $generated@@392)) ($generated@@78 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@351 (type $generated@@394))))
(let (($generated@@396 ($generated@@350 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@349 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@348 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@395) ($generated@@0 ($generated@@92 ($generated@@391 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@391 $generated@@394))
)))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@398 Int) ($generated@@399 Int) ) (!  (=> (or ($generated@@273 $generated@@398 $generated@@399) (and (not (= 4 $generated@@74)) (and (<= ($generated@@174 1) $generated@@398) (<= ($generated@@174 1) $generated@@399)))) (<= ($generated@@174 1) ($generated@@272 $generated@@398 $generated@@399)))
 :pattern ( ($generated@@272 $generated@@398 $generated@@399))
))))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@400 Int) ) (!  (=> (or ($generated@@173 ($generated@@174 $generated@@400)) (and (not (= 2 $generated@@74)) (<= ($generated@@174 1) $generated@@400))) (and (forall (($generated@@401 Int) ) (!  (=> (<= ($generated@@174 1) $generated@@401) (=> (<= $generated@@401 ($generated@@174 $generated@@400)) ($generated@@176 $generated@@401 ($generated@@174 $generated@@400))))
 :pattern ( ($generated@@175 $generated@@401 $generated@@400))
)) (= ($generated@@172 ($generated@@174 $generated@@400)) ($generated@@177 $generated@@85 ($generated@@174 $generated@@400) ($generated@@174 $generated@@400)))))
 :weight 3
 :pattern ( ($generated@@172 ($generated@@174 $generated@@400)))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@403) $generated@@66)) (= ($generated@@83 $generated@@402 ($generated@@184 $generated@@403)) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@81) (< 0 ($generated ($generated@@92 $generated@@402 $generated@@404)))) ($generated@@265 $generated@@404 $generated@@403))
 :pattern ( ($generated@@92 $generated@@402 $generated@@404))
))))
 :pattern ( ($generated@@83 $generated@@402 ($generated@@184 $generated@@403)))
)))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@405 Int) ) (!  (=> (or ($generated@@173 $generated@@405) (and (not (= 2 $generated@@74)) (<= ($generated@@174 1) $generated@@405))) ($generated@@83 ($generated@@172 $generated@@405) ($generated@@84 $generated@@85)))
 :pattern ( ($generated@@172 $generated@@405))
))))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@406 Int) ($generated@@407 Int) ) (!  (=> (or ($generated@@273 ($generated@@174 $generated@@406) ($generated@@174 $generated@@407)) (and (not (= 4 $generated@@74)) (and (<= ($generated@@174 1) $generated@@406) (<= ($generated@@174 1) $generated@@407)))) (and (and (and ($generated@@173 ($generated@@174 $generated@@406)) ($generated@@173 ($generated@@174 $generated@@407))) (let (($generated@@408 ($generated@@257 ($generated@@172 ($generated@@174 $generated@@406)) ($generated@@172 ($generated@@174 $generated@@407)))))
($generated@@82 $generated@@408))) (= ($generated@@272 ($generated@@174 $generated@@406) ($generated@@174 $generated@@407)) (let (($generated@@409 ($generated@@257 ($generated@@172 ($generated@@174 $generated@@406)) ($generated@@172 ($generated@@174 $generated@@407)))))
($generated@@75 $generated@@409)))))
 :weight 3
 :pattern ( ($generated@@272 ($generated@@174 $generated@@406) ($generated@@174 $generated@@407)))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
 (=> (and (= (type $generated@@410) ($generated@@78 $generated@@413 $generated@@4)) (= (type $generated@@411) ($generated@@78 $generated@@413 $generated@@4))) (= ($generated@@0 ($generated@@92 ($generated@@257 $generated@@410 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@92 $generated@@410 $generated@@412)) ($generated@@0 ($generated@@92 $generated@@411 $generated@@412))))))
 :pattern ( ($generated@@92 ($generated@@257 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (= (type $generated@@414) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@415) $generated@@66)) (= (type $generated@@416) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@414 ($generated@@84 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@81) ($generated@@0 ($generated@@92 $generated@@414 $generated@@417))) ($generated@@291 $generated@@417 $generated@@415 $generated@@416))
 :pattern ( ($generated@@92 $generated@@414 $generated@@417))
))))
 :pattern ( ($generated@@149 $generated@@414 ($generated@@84 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@419) $generated@@66)) (= (type $generated@@420) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@418 ($generated@@283 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@81) ($generated@@0 ($generated@@92 $generated@@418 $generated@@421))) ($generated@@291 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@92 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@149 $generated@@418 ($generated@@283 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(= ($generated ($generated@@92 ($generated@@322 $generated@@423) $generated@@422)) 0))
 :pattern ( (let (($generated@@423 (type $generated@@422)))
($generated@@92 ($generated@@322 $generated@@423) $generated@@422)))
)))
(assert  (and (forall (($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@426)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@424 $generated@@426))
)) (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@333 (type $generated@@427))))
(let (($generated@@429 ($generated@@332 (type $generated@@427))))
(= (type ($generated@@425 $generated@@427)) ($generated@@78 $generated@@429 $generated@@428))))
 :pattern ( ($generated@@425 $generated@@427))
))))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) ($generated@@331 $generated@@81 $generated@@81)) (= (type $generated@@431) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@424 $generated@@430) $generated@@431))  (and ($generated@@0 ($generated@@92 ($generated@@329 $generated@@430) ($generated@@166 ($generated@@372 $generated@@159 $generated@@431)))) (= ($generated@@92 ($generated@@425 $generated@@430) ($generated@@166 ($generated@@372 $generated@@159 $generated@@431))) ($generated@@167 ($generated@@372 $generated@@159 $generated@@431))))))
 :pattern ( ($generated@@92 ($generated@@424 $generated@@430) $generated@@431))
)))
(assert  (and (forall (($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@434)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@432 $generated@@434))
)) (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@351 (type $generated@@435))))
(let (($generated@@437 ($generated@@350 (type $generated@@435))))
(= (type ($generated@@433 $generated@@435)) ($generated@@78 $generated@@437 $generated@@436))))
 :pattern ( ($generated@@433 $generated@@435))
))))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) ($generated@@349 $generated@@81 $generated@@81)) (= (type $generated@@439) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@432 $generated@@438) $generated@@439))  (and ($generated@@0 ($generated@@92 ($generated@@347 $generated@@438) ($generated@@166 ($generated@@372 $generated@@159 $generated@@439)))) (= ($generated@@92 ($generated@@433 $generated@@438) ($generated@@166 ($generated@@372 $generated@@159 $generated@@439))) ($generated@@167 ($generated@@372 $generated@@159 $generated@@439))))))
 :pattern ( ($generated@@92 ($generated@@432 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (let (($generated@@442 (type $generated@@441)))
(let (($generated@@443 ($generated@@332 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@331 $generated@@443 $generated@@442)) (= ($generated@@0 ($generated@@92 ($generated@@380 $generated@@440) $generated@@441)) (exists (($generated@@444 T@U) ) (!  (and (= (type $generated@@444) $generated@@443) (and ($generated@@0 ($generated@@92 ($generated@@329 $generated@@440) $generated@@444)) (= $generated@@441 ($generated@@92 ($generated@@425 $generated@@440) $generated@@444))))
 :pattern ( ($generated@@92 ($generated@@329 $generated@@440) $generated@@444))
 :pattern ( ($generated@@92 ($generated@@425 $generated@@440) $generated@@444))
))))))
 :pattern ( ($generated@@92 ($generated@@380 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@446)))
(let (($generated@@448 ($generated@@350 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@349 $generated@@448 $generated@@447)) (= ($generated@@0 ($generated@@92 ($generated@@391 $generated@@445) $generated@@446)) (exists (($generated@@449 T@U) ) (!  (and (= (type $generated@@449) $generated@@448) (and ($generated@@0 ($generated@@92 ($generated@@347 $generated@@445) $generated@@449)) (= $generated@@446 ($generated@@92 ($generated@@433 $generated@@445) $generated@@449))))
 :pattern ( ($generated@@92 ($generated@@347 $generated@@445) $generated@@449))
 :pattern ( ($generated@@92 ($generated@@433 $generated@@445) $generated@@449))
))))))
 :pattern ( ($generated@@92 ($generated@@391 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (= (type ($generated@@450 $generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@450 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (and (= (type $generated@@453) ($generated@@331 $generated@@81 $generated@@81)) (= (type $generated@@454) $generated@@66)) (= (type $generated@@455) $generated@@66)) (= (type $generated@@456) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456) (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@329 $generated@@453) $generated@@457))) (and ($generated@@291 ($generated@@92 ($generated@@425 $generated@@453) $generated@@457) $generated@@455 $generated@@456) ($generated@@291 $generated@@457 $generated@@454 $generated@@456)))
 :pattern ( ($generated@@92 ($generated@@425 $generated@@453) $generated@@457))
 :pattern ( ($generated@@92 ($generated@@329 $generated@@453) $generated@@457))
))))
 :pattern ( ($generated@@149 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (! (= (type ($generated@@458 $generated@@459 $generated@@460)) $generated@@66)
 :pattern ( ($generated@@458 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (and (= (type $generated@@461) ($generated@@349 $generated@@81 $generated@@81)) (= (type $generated@@462) $generated@@66)) (= (type $generated@@463) $generated@@66)) (= (type $generated@@464) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@461 ($generated@@458 $generated@@462 $generated@@463) $generated@@464) (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@347 $generated@@461) $generated@@465))) (and ($generated@@291 ($generated@@92 ($generated@@433 $generated@@461) $generated@@465) $generated@@463 $generated@@464) ($generated@@291 $generated@@465 $generated@@462 $generated@@464)))
 :pattern ( ($generated@@92 ($generated@@433 $generated@@461) $generated@@465))
 :pattern ( ($generated@@92 ($generated@@347 $generated@@461) $generated@@465))
))))
 :pattern ( ($generated@@149 $generated@@461 ($generated@@458 $generated@@462 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@90 (type $generated@@466))))
 (=> (and (and (= (type $generated@@466) ($generated@@78 $generated@@468 $generated@@4)) (= (type $generated@@467) ($generated@@78 $generated@@468 $generated@@4))) ($generated@@86 $generated@@466 $generated@@467)) (= $generated@@466 $generated@@467)))
 :pattern ( ($generated@@86 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 Int) ($generated@@471 Int) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@472) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@177 $generated@@469 $generated@@470 $generated@@471) $generated@@472))  (and ($generated@@265 $generated@@472 $generated@@469) (and (<= ($generated ($generated@@372 $generated@@2 $generated@@472)) $generated@@470) ($generated@@175 ($generated ($generated@@372 $generated@@2 $generated@@472)) $generated@@471)))))
 :pattern ( ($generated@@92 ($generated@@177 $generated@@469 $generated@@470 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@474 T@T) ) (! (= (type ($generated@@473 $generated@@474)) ($generated@@78 $generated@@474 $generated@@4))
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@351 (type $generated@@475))))
(let (($generated@@477 ($generated@@350 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@349 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@348 $generated@@477 $generated@@476)) (= ($generated@@347 $generated@@475) ($generated@@473 $generated@@477))))))
 :pattern ( ($generated@@347 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@351 (type $generated@@478))))
(let (($generated@@480 ($generated@@350 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@349 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@348 $generated@@480 $generated@@479)) (= ($generated@@391 $generated@@478) ($generated@@473 $generated@@479))))))
 :pattern ( ($generated@@391 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@351 (type $generated@@481))))
(let (($generated@@483 ($generated@@350 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@349 $generated@@483 $generated@@482)) (= (= $generated@@481 ($generated@@348 $generated@@483 $generated@@482)) (= ($generated@@432 $generated@@481) ($generated@@473 $generated@@81))))))
 :pattern ( ($generated@@432 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@333 (type $generated@@484))))
(let (($generated@@486 ($generated@@332 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@331 $generated@@486 $generated@@485)) (or (= $generated@@484 ($generated@@330 $generated@@486 $generated@@485)) (exists (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (and (and (= (type $generated@@487) $generated@@81) (= (type $generated@@488) $generated@@81)) ($generated@@0 ($generated@@92 ($generated@@424 $generated@@484) ($generated@@316 ($generated@@264 $generated@@487 $generated@@488)))))
 :no-pattern (type $generated@@487)
 :no-pattern (type $generated@@488)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
))))))
 :pattern ( ($generated@@424 $generated@@484))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@351 (type $generated@@489))))
(let (($generated@@491 ($generated@@350 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@349 $generated@@491 $generated@@490)) (or (= $generated@@489 ($generated@@348 $generated@@491 $generated@@490)) (exists (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (and (and (= (type $generated@@492) $generated@@81) (= (type $generated@@493) $generated@@81)) ($generated@@0 ($generated@@92 ($generated@@432 $generated@@489) ($generated@@316 ($generated@@264 $generated@@492 $generated@@493)))))
 :no-pattern (type $generated@@492)
 :no-pattern (type $generated@@493)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
 :no-pattern ($generated $generated@@493)
 :no-pattern ($generated@@0 $generated@@493)
))))))
 :pattern ( ($generated@@432 $generated@@489))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@81) ($generated@@265 $generated@@494 $generated@@46)) (and (= ($generated@@316 ($generated@@372 $generated@@2 $generated@@494)) $generated@@494) ($generated@@83 ($generated@@372 $generated@@2 $generated@@494) $generated@@46)))
 :pattern ( ($generated@@265 $generated@@494 $generated@@46))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@81) ($generated@@265 $generated@@495 $generated@@47)) (and (= ($generated@@316 ($generated@@372 $generated@@3 $generated@@495)) $generated@@495) ($generated@@83 ($generated@@372 $generated@@3 $generated@@495) $generated@@47)))
 :pattern ( ($generated@@265 $generated@@495 $generated@@47))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@81) ($generated@@265 $generated@@496 $generated@@44)) (and (= ($generated@@316 ($generated@@372 $generated@@4 $generated@@496)) $generated@@496) ($generated@@83 ($generated@@372 $generated@@4 $generated@@496) $generated@@44)))
 :pattern ( ($generated@@265 $generated@@496 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@497) 20))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@81) ($generated@@265 $generated@@498 $generated@@45)) (and (= ($generated@@316 ($generated@@372 $generated@@497 $generated@@498)) $generated@@498) ($generated@@83 ($generated@@372 $generated@@497 $generated@@498) $generated@@45)))
 :pattern ( ($generated@@265 $generated@@498 $generated@@45))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@66) (= ($generated@@265 ($generated@@316 $generated@@499) $generated@@500) ($generated@@83 $generated@@499 $generated@@500)))
 :pattern ( ($generated@@265 ($generated@@316 $generated@@499) $generated@@500))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@501 Int) ($generated@@502 Int) ) (!  (=> (or ($generated@@176 $generated@@501 $generated@@502) (and (not (= 1 $generated@@74)) (and (<= ($generated@@174 1) $generated@@501) (<= ($generated@@174 1) $generated@@502)))) (= ($generated@@175 $generated@@501 $generated@@502) (exists (($generated@@503 Int) ) (! (= ($generated@@312 $generated@@501 $generated@@503) $generated@@502)
 :pattern ( ($generated@@312 $generated@@501 $generated@@503))
))))
 :pattern ( ($generated@@175 $generated@@501 $generated@@502))
))))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@90 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@78 $generated@@505 $generated@@2)) (<= 0 ($generated@@321 $generated@@504))))
 :pattern ( ($generated@@321 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@306 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@305 $generated@@507)) (<= 0 ($generated@@304 $generated@@506))))
 :pattern ( ($generated@@304 $generated@@506))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@508 Int) ($generated@@509 Int) ) (!  (=> (or ($generated@@176 $generated@@508 $generated@@509) (and (not (= 1 $generated@@74)) (and (<= ($generated@@174 1) $generated@@508) (<= ($generated@@174 1) $generated@@509)))) true)
 :pattern ( ($generated@@175 $generated@@508 $generated@@509))
))))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@66)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@66) (= (type $generated@@513) $generated@@66)) (= ($generated@@510 ($generated@@450 $generated@@512 $generated@@513)) $generated@@512))
 :pattern ( ($generated@@450 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@66)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@66) (= (type $generated@@517) $generated@@66)) (= ($generated@@514 ($generated@@450 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@450 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@66) (= (type $generated@@519) $generated@@66)) (= ($generated@@147 ($generated@@450 $generated@@518 $generated@@519)) $generated@@58))
 :pattern ( ($generated@@450 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@66)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@66) (= (type $generated@@523) $generated@@66)) (= ($generated@@520 ($generated@@458 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@458 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@66)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= ($generated@@524 ($generated@@458 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@458 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@66) (= (type $generated@@529) $generated@@66)) (= ($generated@@147 ($generated@@458 $generated@@528 $generated@@529)) $generated@@59))
 :pattern ( ($generated@@458 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@81) (= (type $generated@@531) $generated@@81)) (= ($generated@@297 ($generated@@264 $generated@@530 $generated@@531)) $generated@@61))
 :pattern ( ($generated@@264 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@66)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@66) (= (type $generated@@535) $generated@@66)) (= ($generated@@532 ($generated@@158 $generated@@534 $generated@@535)) $generated@@534))
 :pattern ( ($generated@@158 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@66)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@66) (= (type $generated@@539) $generated@@66)) (= ($generated@@536 ($generated@@158 $generated@@538 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@158 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@81) (= (type $generated@@541) $generated@@81)) (= ($generated@@166 ($generated@@264 $generated@@540 $generated@@541)) $generated@@540))
 :pattern ( ($generated@@264 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@81) (= (type $generated@@543) $generated@@81)) (= ($generated@@167 ($generated@@264 $generated@@542 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@264 $generated@@542 $generated@@543))
)))
(assert  (and (forall (($generated@@546 T@U) ) (! (= (type ($generated@@544 $generated@@546)) $generated@@66)
 :pattern ( ($generated@@544 $generated@@546))
)) (forall (($generated@@547 T@U) ($generated@@548 Int) ) (! (let (($generated@@549 ($generated@@306 (type $generated@@547))))
(= (type ($generated@@545 $generated@@547 $generated@@548)) $generated@@549))
 :pattern ( ($generated@@545 $generated@@547 $generated@@548))
))))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@305 $generated@@81)) (= (type $generated@@551) $generated@@66)) (= (type $generated@@552) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@550 ($generated@@544 $generated@@551) $generated@@552) (forall (($generated@@553 Int) ) (!  (=> (and (<= 0 $generated@@553) (< $generated@@553 ($generated@@304 $generated@@550))) ($generated@@291 ($generated@@545 $generated@@550 $generated@@553) $generated@@551 $generated@@552))
 :pattern ( ($generated@@545 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@149 $generated@@550 ($generated@@544 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@555 Int) ) (! (= ($generated@@554 ($generated@@150 $generated@@555)) $generated@@555)
 :pattern ( ($generated@@150 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@66)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@66) (= ($generated@@556 ($generated@@84 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@84 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@66) (= ($generated@@147 ($generated@@84 $generated@@559)) $generated@@54))
 :pattern ( ($generated@@84 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ) (! (= (type ($generated@@560 $generated@@561)) $generated@@66)
 :pattern ( ($generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@66) (= ($generated@@560 ($generated@@283 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@283 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@66) (= ($generated@@147 ($generated@@283 $generated@@563)) $generated@@55))
 :pattern ( ($generated@@283 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@66)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@66) (= ($generated@@564 ($generated@@184 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@184 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@66) (= ($generated@@147 ($generated@@184 $generated@@567)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@66)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@66) (= ($generated@@568 ($generated@@544 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@544 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@66) (= ($generated@@147 ($generated@@544 $generated@@571)) $generated@@57))
 :pattern ( ($generated@@544 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@572)))
(= ($generated@@372 $generated@@573 ($generated@@316 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@316 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@331 $generated@@81 $generated@@81)) (= (type $generated@@575) $generated@@66)) (= (type $generated@@576) $generated@@66)) (= ($generated@@83 $generated@@574 ($generated@@450 $generated@@575 $generated@@576)) (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@329 $generated@@574) $generated@@577))) (and ($generated@@265 ($generated@@92 ($generated@@425 $generated@@574) $generated@@577) $generated@@576) ($generated@@265 $generated@@577 $generated@@575)))
 :pattern ( ($generated@@92 ($generated@@425 $generated@@574) $generated@@577))
 :pattern ( ($generated@@92 ($generated@@329 $generated@@574) $generated@@577))
))))
 :pattern ( ($generated@@83 $generated@@574 ($generated@@450 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@578) ($generated@@349 $generated@@81 $generated@@81)) (= (type $generated@@579) $generated@@66)) (= (type $generated@@580) $generated@@66)) (= ($generated@@83 $generated@@578 ($generated@@458 $generated@@579 $generated@@580)) (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@347 $generated@@578) $generated@@581))) (and ($generated@@265 ($generated@@92 ($generated@@433 $generated@@578) $generated@@581) $generated@@580) ($generated@@265 $generated@@581 $generated@@579)))
 :pattern ( ($generated@@92 ($generated@@433 $generated@@578) $generated@@581))
 :pattern ( ($generated@@92 ($generated@@347 $generated@@578) $generated@@581))
))))
 :pattern ( ($generated@@83 $generated@@578 ($generated@@458 $generated@@579 $generated@@580)))
)))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@583) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 $generated@@583) (and (not (= 3 $generated@@74)) (and (and ($generated@@77 $generated@@582) ($generated@@83 $generated@@583 ($generated@@84 $generated@@85))) (not ($generated@@86 $generated@@583 ($generated@@87 $generated@@81))))))) (and ($generated@@88 $generated@@583) (= ($generated@@75 $generated@@583) (let (($generated@@584 ($generated@@89 $generated@@583)))
$generated@@584))))
 :pattern ( ($generated@@75 $generated@@583) ($generated@@77 $generated@@582))
))))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@81) (= (type $generated@@588) $generated@@81)) (< ($generated@@585 $generated@@587) ($generated@@586 ($generated@@264 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@264 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@81) (= (type $generated@@590) $generated@@81)) (< ($generated@@585 $generated@@590) ($generated@@586 ($generated@@264 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@264 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (! (let (($generated@@593 ($generated@@90 (type $generated@@591))))
 (=> (and (= (type $generated@@591) ($generated@@78 $generated@@593 $generated@@4)) (= (type $generated@@592) ($generated@@78 $generated@@593 $generated@@4))) (= ($generated@@257 $generated@@591 ($generated@@257 $generated@@591 $generated@@592)) ($generated@@257 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@257 $generated@@591 ($generated@@257 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@81) (= (type $generated@@595) $generated@@66)) (= (type $generated@@596) $generated@@66)) ($generated@@265 $generated@@594 ($generated@@450 $generated@@595 $generated@@596))) (and (= ($generated@@316 ($generated@@372 ($generated@@331 $generated@@81 $generated@@81) $generated@@594)) $generated@@594) ($generated@@83 ($generated@@372 ($generated@@331 $generated@@81 $generated@@81) $generated@@594) ($generated@@450 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@265 $generated@@594 ($generated@@450 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@81) (= (type $generated@@598) $generated@@66)) (= (type $generated@@599) $generated@@66)) ($generated@@265 $generated@@597 ($generated@@458 $generated@@598 $generated@@599))) (and (= ($generated@@316 ($generated@@372 ($generated@@349 $generated@@81 $generated@@81) $generated@@597)) $generated@@597) ($generated@@83 ($generated@@372 ($generated@@349 $generated@@81 $generated@@81) $generated@@597) ($generated@@458 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@265 $generated@@597 ($generated@@458 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@66) (= (type $generated@@601) $generated@@66)) (= (type $generated@@602) $generated@@81)) ($generated@@265 $generated@@602 ($generated@@158 $generated@@600 $generated@@601))) (and (= ($generated@@316 ($generated@@372 $generated@@159 $generated@@602)) $generated@@602) ($generated@@83 ($generated@@372 $generated@@159 $generated@@602) ($generated@@158 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@265 $generated@@602 ($generated@@158 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@603 T@U) ) (! (let (($generated@@604 (type $generated@@603)))
 (not ($generated@@0 ($generated@@92 ($generated@@87 $generated@@604) $generated@@603))))
 :pattern ( (let (($generated@@604 (type $generated@@603)))
($generated@@92 ($generated@@87 $generated@@604) $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ) (! (let (($generated@@606 (type $generated@@605)))
 (not ($generated@@0 ($generated@@92 ($generated@@473 $generated@@606) $generated@@605))))
 :pattern ( (let (($generated@@606 (type $generated@@605)))
($generated@@92 ($generated@@473 $generated@@606) $generated@@605)))
)))
(assert (forall (($generated@@608 T@U) ) (! (= (type ($generated@@607 $generated@@608)) $generated@@71)
 :pattern ( ($generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@66) (= (type $generated@@610) $generated@@66)) (and (= ($generated@@147 ($generated@@158 $generated@@609 $generated@@610)) $generated@@62) (= ($generated@@607 ($generated@@158 $generated@@609 $generated@@610)) $generated@@64)))
 :pattern ( ($generated@@158 $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 Int) ($generated@@612 Int) ) (! (= ($generated@@312 $generated@@611 $generated@@612) (* $generated@@611 $generated@@612))
 :pattern ( ($generated@@312 $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@159) (= ($generated@@585 ($generated@@316 $generated@@613)) ($generated@@586 $generated@@613)))
 :pattern ( ($generated@@585 ($generated@@316 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@81) ($generated@@265 $generated@@614 ($generated@@150 0))) (and (= ($generated@@316 ($generated@@372 $generated@@2 $generated@@614)) $generated@@614) ($generated@@83 ($generated@@372 ($generated@@78 $generated@@81 $generated@@4) $generated@@614) ($generated@@150 0))))
 :pattern ( ($generated@@265 $generated@@614 ($generated@@150 0)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@81) (= (type $generated@@616) $generated@@66)) ($generated@@265 $generated@@615 ($generated@@84 $generated@@616))) (and (= ($generated@@316 ($generated@@372 ($generated@@78 $generated@@81 $generated@@4) $generated@@615)) $generated@@615) ($generated@@83 ($generated@@372 ($generated@@78 $generated@@81 $generated@@4) $generated@@615) ($generated@@84 $generated@@616))))
 :pattern ( ($generated@@265 $generated@@615 ($generated@@84 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@81) (= (type $generated@@618) $generated@@66)) ($generated@@265 $generated@@617 ($generated@@283 $generated@@618))) (and (= ($generated@@316 ($generated@@372 ($generated@@78 $generated@@81 $generated@@4) $generated@@617)) $generated@@617) ($generated@@83 ($generated@@372 ($generated@@78 $generated@@81 $generated@@4) $generated@@617) ($generated@@283 $generated@@618))))
 :pattern ( ($generated@@265 $generated@@617 ($generated@@283 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@81) (= (type $generated@@620) $generated@@66)) ($generated@@265 $generated@@619 ($generated@@184 $generated@@620))) (and (= ($generated@@316 ($generated@@372 ($generated@@78 $generated@@81 $generated@@2) $generated@@619)) $generated@@619) ($generated@@83 ($generated@@372 ($generated@@78 $generated@@81 $generated@@2) $generated@@619) ($generated@@184 $generated@@620))))
 :pattern ( ($generated@@265 $generated@@619 ($generated@@184 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@81) (= (type $generated@@622) $generated@@66)) ($generated@@265 $generated@@621 ($generated@@544 $generated@@622))) (and (= ($generated@@316 ($generated@@372 ($generated@@305 $generated@@81) $generated@@621)) $generated@@621) ($generated@@83 ($generated@@372 ($generated@@305 $generated@@81) $generated@@621) ($generated@@544 $generated@@622))))
 :pattern ( ($generated@@265 $generated@@621 ($generated@@544 $generated@@622)))
)))
(assert (= ($generated@@147 $generated@@85) $generated@@63))
(assert (= ($generated@@607 $generated@@85) $generated@@65))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@623) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@624) $generated@@66)) (= (type $generated@@625) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@623 ($generated@@184 $generated@@624) $generated@@625) (forall (($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@81) (< 0 ($generated ($generated@@92 $generated@@623 $generated@@626)))) ($generated@@291 $generated@@626 $generated@@624 $generated@@625))
 :pattern ( ($generated@@92 $generated@@623 $generated@@626))
))))
 :pattern ( ($generated@@149 $generated@@623 ($generated@@184 $generated@@624) $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) $generated@@159) (= (type $generated@@628) $generated@@66)) (= (type $generated@@629) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@77 $generated@@629) (and ($generated@@157 $generated@@627) (exists (($generated@@630 T@U) ) (!  (and (= (type $generated@@630) $generated@@66) ($generated@@149 $generated@@627 ($generated@@158 $generated@@628 $generated@@630) $generated@@629))
 :pattern ( ($generated@@149 $generated@@627 ($generated@@158 $generated@@628 $generated@@630) $generated@@629))
))))) ($generated@@291 ($generated@@166 $generated@@627) $generated@@628 $generated@@629))
 :pattern ( ($generated@@291 ($generated@@166 $generated@@627) $generated@@628 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) $generated@@159) (= (type $generated@@632) $generated@@66)) (= (type $generated@@633) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@77 $generated@@633) (and ($generated@@157 $generated@@631) (exists (($generated@@634 T@U) ) (!  (and (= (type $generated@@634) $generated@@66) ($generated@@149 $generated@@631 ($generated@@158 $generated@@634 $generated@@632) $generated@@633))
 :pattern ( ($generated@@149 $generated@@631 ($generated@@158 $generated@@634 $generated@@632) $generated@@633))
))))) ($generated@@291 ($generated@@167 $generated@@631) $generated@@632 $generated@@633))
 :pattern ( ($generated@@291 ($generated@@167 $generated@@631) $generated@@632 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@81) (= (type $generated@@636) $generated@@81)) (= ($generated@@264 ($generated@@76 $generated@@635) ($generated@@76 $generated@@636)) ($generated@@76 ($generated@@264 $generated@@635 $generated@@636))))
 :pattern ( ($generated@@264 ($generated@@76 $generated@@635) ($generated@@76 $generated@@636)))
)))
(assert (forall (($generated@@637 Int) ) (! (= ($generated@@316 ($generated@@8 ($generated@@174 $generated@@637))) ($generated@@76 ($generated@@316 ($generated@@8 $generated@@637))))
 :pattern ( ($generated@@316 ($generated@@8 ($generated@@174 $generated@@637))))
)))
(assert (forall (($generated@@638 T@U) ) (! (= ($generated@@316 ($generated@@76 $generated@@638)) ($generated@@76 ($generated@@316 $generated@@638)))
 :pattern ( ($generated@@316 ($generated@@76 $generated@@638)))
)))
(assert (forall (($generated@@639 T@U) ) (! (let (($generated@@640 ($generated@@306 (type $generated@@639))))
 (=> (and (= (type $generated@@639) ($generated@@305 $generated@@640)) (= ($generated@@304 $generated@@639) 0)) (= $generated@@639 ($generated@@303 $generated@@640))))
 :pattern ( ($generated@@304 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ($generated@@643 T@U) ) (! (let (($generated@@644 (type $generated@@642)))
 (=> (and (and (= (type $generated@@641) ($generated@@78 $generated@@644 $generated@@2)) (= (type $generated@@643) $generated@@2)) (<= 0 ($generated $generated@@643))) (= ($generated@@321 ($generated@@93 $generated@@641 $generated@@642 $generated@@643)) (+ (- ($generated@@321 $generated@@641) ($generated ($generated@@92 $generated@@641 $generated@@642))) ($generated $generated@@643)))))
 :pattern ( ($generated@@321 ($generated@@93 $generated@@641 $generated@@642 $generated@@643)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@646) $generated@@2)) ($generated@@149 $generated@@646 $generated@@46 $generated@@645))
 :pattern ( ($generated@@149 $generated@@646 $generated@@46 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (= (type $generated@@647) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@648) $generated@@3)) ($generated@@149 $generated@@648 $generated@@47 $generated@@647))
 :pattern ( ($generated@@149 $generated@@648 $generated@@47 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (= (type $generated@@649) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@650) $generated@@4)) ($generated@@149 $generated@@650 $generated@@44 $generated@@649))
 :pattern ( ($generated@@149 $generated@@650 $generated@@44 $generated@@649))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@652) $generated@@497)) ($generated@@149 $generated@@652 $generated@@45 $generated@@651))
 :pattern ( ($generated@@149 $generated@@652 $generated@@45 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@654) $generated@@81)) ($generated@@149 $generated@@654 $generated@@48 $generated@@653))
 :pattern ( ($generated@@149 $generated@@654 $generated@@48 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@305 $generated@@81)) (= (type $generated@@656) $generated@@66)) (= ($generated@@83 $generated@@655 ($generated@@544 $generated@@656)) (forall (($generated@@657 Int) ) (!  (=> (and (<= 0 $generated@@657) (< $generated@@657 ($generated@@304 $generated@@655))) ($generated@@265 ($generated@@545 $generated@@655 $generated@@657) $generated@@656))
 :pattern ( ($generated@@545 $generated@@655 $generated@@657))
))))
 :pattern ( ($generated@@83 $generated@@655 ($generated@@544 $generated@@656)))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 Int) ) (!  (=> (= (type $generated@@659) ($generated@@305 $generated@@81)) (=> (and (<= 0 $generated@@660) (< $generated@@660 ($generated@@304 $generated@@659))) (< ($generated@@586 ($generated@@372 $generated@@159 ($generated@@545 $generated@@659 $generated@@660))) ($generated@@658 $generated@@659))))
 :pattern ( ($generated@@586 ($generated@@372 $generated@@159 ($generated@@545 $generated@@659 $generated@@660))))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (and (= (type $generated@@661) ($generated@@331 $generated@@81 $generated@@81)) (= (type $generated@@662) $generated@@66)) (= (type $generated@@663) $generated@@66)) ($generated@@83 $generated@@661 ($generated@@450 $generated@@662 $generated@@663))) (and (and ($generated@@83 ($generated@@329 $generated@@661) ($generated@@84 $generated@@662)) ($generated@@83 ($generated@@380 $generated@@661) ($generated@@84 $generated@@663))) ($generated@@83 ($generated@@424 $generated@@661) ($generated@@84 ($generated@@158 $generated@@662 $generated@@663)))))
 :pattern ( ($generated@@83 $generated@@661 ($generated@@450 $generated@@662 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@664) ($generated@@349 $generated@@81 $generated@@81)) (= (type $generated@@665) $generated@@66)) (= (type $generated@@666) $generated@@66)) ($generated@@83 $generated@@664 ($generated@@458 $generated@@665 $generated@@666))) (and (and ($generated@@83 ($generated@@347 $generated@@664) ($generated@@283 $generated@@665)) ($generated@@83 ($generated@@391 $generated@@664) ($generated@@283 $generated@@666))) ($generated@@83 ($generated@@432 $generated@@664) ($generated@@283 ($generated@@158 $generated@@665 $generated@@666)))))
 :pattern ( ($generated@@83 $generated@@664 ($generated@@458 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ) (!  (=> (= (type $generated@@667) $generated@@2) ($generated@@83 $generated@@667 $generated@@46))
 :pattern ( ($generated@@83 $generated@@667 $generated@@46))
)))
(assert (forall (($generated@@668 T@U) ) (!  (=> (= (type $generated@@668) $generated@@3) ($generated@@83 $generated@@668 $generated@@47))
 :pattern ( ($generated@@83 $generated@@668 $generated@@47))
)))
(assert (forall (($generated@@669 T@U) ) (!  (=> (= (type $generated@@669) $generated@@4) ($generated@@83 $generated@@669 $generated@@44))
 :pattern ( ($generated@@83 $generated@@669 $generated@@44))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@497) ($generated@@83 $generated@@670 $generated@@45))
 :pattern ( ($generated@@83 $generated@@670 $generated@@45))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@81) ($generated@@83 $generated@@671 $generated@@48))
 :pattern ( ($generated@@83 $generated@@671 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () T@U)
(declare-fun $generated@@675 (T@U) Bool)
(declare-fun $generated@@676 () Int)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () Int)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@674) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@673) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@677) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@672) ($generated@@78 $generated@@81 $generated@@4))) (= (type $generated@@679) ($generated@@191 $generated@@79 $generated@@4))) (= (type $generated@@680) $generated@@79)) (= (type $generated@@681) ($generated@@78 $generated@@81 $generated@@4))) (= (type $generated@@682) ($generated@@191 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@683  (=> ($generated@@0 ($generated@@92 $generated@@672 ($generated@@316 ($generated@@8 ($generated@@174 1))))) (=> (and ($generated@@149 $generated@@672 ($generated@@84 $generated@@85) $generated@@673) (= (ControlFlow 0 5) (- 0 4))) (not ($generated@@86 $generated@@672 ($generated@@87 $generated@@81)))))))
(let (($generated@@684  (=> (and (and ($generated@@77 $generated@@674) ($generated@@675 $generated@@674)) ($generated@@173 $generated@@676)) (=> (and (and (and ($generated@@0 ($generated@@92 ($generated@@172 $generated@@676) ($generated@@316 ($generated@@8 ($generated@@174 1))))) (= $generated@@673 $generated@@674)) (and ($generated@@77 $generated@@677) ($generated@@675 $generated@@677))) (and (and ($generated@@173 $generated@@678) ($generated@@0 ($generated@@92 ($generated@@172 $generated@@678) ($generated@@316 ($generated@@8 ($generated@@174 1)))))) (and (= $generated@@674 $generated@@677) (= (ControlFlow 0 3) (- 0 2))))) ($generated@@0 ($generated@@92 $generated@@672 ($generated@@316 ($generated@@8 ($generated@@174 1)))))))))
(let (($generated@@685  (=> (= $generated@@679 ($generated@@245 $generated@@680 $generated@@673 $generated@@60 false)) (=> (and (and ($generated@@83 $generated@@672 ($generated@@84 $generated@@85)) ($generated@@149 $generated@@672 ($generated@@84 $generated@@85) $generated@@673)) ($generated@@149 ($generated@@8 $generated@@676) $generated@@85 $generated@@673)) (=> (and (and (and ($generated@@173 $generated@@676) ($generated@@149 ($generated@@8 $generated@@678) $generated@@85 $generated@@673)) (and ($generated@@173 $generated@@678) (= $generated@@681 ($generated@@257 ($generated@@172 $generated@@676) ($generated@@172 $generated@@678))))) (and (and ($generated@@173 $generated@@676) ($generated@@173 $generated@@678)) (and ($generated@@83 $generated@@681 ($generated@@84 $generated@@85)) (= $generated@@672 $generated@@681)))) (and (=> (= (ControlFlow 0 6) 3) $generated@@684) (=> (= (ControlFlow 0 6) 5) $generated@@683)))))))
(let (($generated@@686 true))
(let (($generated@@687  (=> (= $generated@@682 ($generated@@190 $generated@@680 $generated@@673 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@686) (=> (= (ControlFlow 0 7) 6) $generated@@685)))))
(let (($generated@@688  (=> (and ($generated@@77 $generated@@673) ($generated@@675 $generated@@673)) (=> (and (and (<= ($generated@@174 1) $generated@@676) (<= ($generated@@174 1) $generated@@678)) (and (= 4 $generated@@74) (= (ControlFlow 0 8) 7))) $generated@@687))))
$generated@@688)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 () Int)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 () T@U)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@T) T@U)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@89 (T@U) Int)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@149 (T@U T@U T@U) Bool)
(declare-fun $generated@@150 (Int) T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@172 (Int) T@U)
(declare-fun $generated@@173 (Int) Bool)
(declare-fun $generated@@174 (Int) Int)
(declare-fun $generated@@175 (Int Int) Bool)
(declare-fun $generated@@176 (Int Int) Bool)
(declare-fun $generated@@177 (T@U Int Int) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) T@U)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@260 (Int Int) Int)
(declare-fun $generated@@261 (Int Int) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@279 (T@U T@U T@U) Bool)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@300 (Int Int) Int)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@309 (T@U) Int)
(declare-fun $generated@@310 (T@T) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@U T@U) T@U)
(declare-fun $generated@@461 (T@T) T@U)
(declare-fun $generated@@485 () T@T)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@533 (T@U Int) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@573 (T@U) Int)
(declare-fun $generated@@574 (T@U) Int)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@646 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@96 $generated@@97)) 11)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@78 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@78 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@78 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@78 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@78 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@69 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@80)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@69 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 14)) (forall (($generated@@140 T@U) ) (! (let (($generated@@141 (type $generated@@140)))
(= (type ($generated@@76 $generated@@140)) $generated@@141))
 :pattern ( ($generated@@76 $generated@@140))
))) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@84 $generated@@142)) $generated@@66)
 :pattern ( ($generated@@84 $generated@@142))
))) (= (type $generated@@85) $generated@@66)) (forall (($generated@@143 T@T) ) (! (= (type ($generated@@87 $generated@@143)) ($generated@@78 $generated@@143 $generated@@4))
 :pattern ( ($generated@@87 $generated@@143))
))))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@145) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 ($generated@@76 $generated@@145)) (and (not (= 3 $generated@@74)) (and (and ($generated@@77 $generated@@144) ($generated@@83 $generated@@145 ($generated@@84 $generated@@85))) (not ($generated@@86 $generated@@145 ($generated@@87 $generated@@81))))))) (and ($generated@@88 ($generated@@76 $generated@@145)) (= ($generated@@75 ($generated@@76 $generated@@145)) (let (($generated@@146 ($generated@@89 ($generated@@76 $generated@@145))))
$generated@@146))))
 :weight 3
 :pattern ( ($generated@@75 ($generated@@76 $generated@@145)) ($generated@@77 $generated@@144))
))))
(assert (forall (($generated@@148 T@U) ) (! (= (type ($generated@@147 $generated@@148)) $generated@@67)
 :pattern ( ($generated@@147 $generated@@148))
)))
(assert (= ($generated@@147 $generated@@44) $generated@@49))
(assert (= ($generated@@147 $generated@@45) $generated@@50))
(assert (= ($generated@@147 $generated@@46) $generated@@51))
(assert (= ($generated@@147 $generated@@47) $generated@@52))
(assert (= ($generated@@147 $generated@@48) $generated@@53))
(assert (forall (($generated@@151 Int) ) (! (= (type ($generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@2) (= (type $generated@@153) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@149 $generated@@152 ($generated@@150 0) $generated@@153))
 :pattern ( ($generated@@149 $generated@@152 ($generated@@150 0) $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@2) (= (type $generated@@155) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@149 $generated@@154 $generated@@85 $generated@@155))
 :pattern ( ($generated@@149 $generated@@154 $generated@@85 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@83 $generated@@156 ($generated@@150 0)))
 :pattern ( ($generated@@83 $generated@@156 ($generated@@150 0)))
)))
(assert  (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@160 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@158 $generated@@160 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@66) (= (type $generated@@163) $generated@@66)) (= (type $generated@@164) $generated@@159)) ($generated@@83 $generated@@164 ($generated@@158 $generated@@162 $generated@@163))) ($generated@@157 $generated@@164))
 :pattern ( ($generated@@157 $generated@@164) ($generated@@83 $generated@@164 ($generated@@158 $generated@@162 $generated@@163)))
)))
(assert  (and (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@81)
 :pattern ( ($generated@@166 $generated@@168))
)) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@81)
 :pattern ( ($generated@@167 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@159) (= (type $generated@@171) $generated@@159)) true) (= ($generated@@165 $generated@@170 $generated@@171)  (and (= ($generated@@166 $generated@@170) ($generated@@166 $generated@@171)) (= ($generated@@167 $generated@@170) ($generated@@167 $generated@@171)))))
 :pattern ( ($generated@@165 $generated@@170 $generated@@171))
)))
(assert  (and (forall (($generated@@178 Int) ) (! (= (type ($generated@@172 $generated@@178)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@172 $generated@@178))
)) (forall (($generated@@179 T@U) ($generated@@180 Int) ($generated@@181 Int) ) (! (= (type ($generated@@177 $generated@@179 $generated@@180 $generated@@181)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@177 $generated@@179 $generated@@180 $generated@@181))
))))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@182 Int) ) (!  (=> (or ($generated@@173 $generated@@182) (and (not (= 2 $generated@@74)) (<= ($generated@@174 1) $generated@@182))) (and (forall (($generated@@183 Int) ) (!  (=> (<= ($generated@@174 1) $generated@@183) (=> (<= $generated@@183 $generated@@182) ($generated@@176 $generated@@183 $generated@@182)))
 :pattern ( ($generated@@175 $generated@@183 $generated@@182))
)) (= ($generated@@172 $generated@@182) ($generated@@177 $generated@@85 $generated@@182 $generated@@182))))
 :pattern ( ($generated@@172 $generated@@182))
))))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@66)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@188) $generated@@66)) ($generated@@83 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@83 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@195 $generated@@196)) 16)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@193 ($generated@@191 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@191 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@189 $generated@@201 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@189 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 (type $generated@@208)))
(let (($generated@@210 (type $generated@@206)))
(= (type ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@191 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@193 (type $generated@@211))))
 (=> (= (type $generated@@214) $generated@@215) (= ($generated@@189 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@212 $generated@@213) $generated@@214)))
 :weight 0
))) (and (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@189 ($generated@@194 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@189 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@189 ($generated@@194 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@189 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or true (= ($generated@@189 ($generated@@194 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@189 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@191 $generated@@79 $generated@@4))
 :pattern ( ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@69 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@79) (= (type $generated@@239) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@240) ($generated@@68 $generated@@4))) (= (type $generated@@242) $generated@@79)) (= (type $generated@@243) ($generated@@68 $generated@@244))) (= ($generated@@0 ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@90 (type $generated@@246))))
(= (type ($generated@@245 $generated@@246 $generated@@247)) ($generated@@78 $generated@@248 $generated@@4)))
 :pattern ( ($generated@@245 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@90 (type $generated@@249))))
 (=> (and (= (type $generated@@249) ($generated@@78 $generated@@251 $generated@@4)) (= (type $generated@@250) ($generated@@78 $generated@@251 $generated@@4))) (= ($generated@@245 ($generated@@245 $generated@@249 $generated@@250) $generated@@250) ($generated@@245 $generated@@249 $generated@@250))))
 :pattern ( ($generated@@245 ($generated@@245 $generated@@249 $generated@@250) $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (! (= (type ($generated@@252 $generated@@254 $generated@@255)) $generated@@159)
 :pattern ( ($generated@@252 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) $generated@@66) (= (type $generated@@257) $generated@@66)) (= (type $generated@@258) $generated@@81)) (= (type $generated@@259) $generated@@81)) (= ($generated@@83 ($generated@@252 $generated@@258 $generated@@259) ($generated@@158 $generated@@256 $generated@@257))  (and ($generated@@253 $generated@@258 $generated@@256) ($generated@@253 $generated@@259 $generated@@257))))
 :pattern ( ($generated@@83 ($generated@@252 $generated@@258 $generated@@259) ($generated@@158 $generated@@256 $generated@@257)))
)))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@262 Int) ($generated@@263 Int) ) (!  (=> (or ($generated@@261 $generated@@262 $generated@@263) (and (not (= 4 $generated@@74)) (and (<= ($generated@@174 1) $generated@@262) (<= ($generated@@174 1) $generated@@263)))) (and (and (and ($generated@@173 $generated@@262) ($generated@@173 $generated@@263)) (let (($generated@@264 ($generated@@245 ($generated@@172 $generated@@262) ($generated@@172 $generated@@263))))
($generated@@82 $generated@@264))) (= ($generated@@260 $generated@@262 $generated@@263) (let (($generated@@265 ($generated@@245 ($generated@@172 $generated@@262) ($generated@@172 $generated@@263))))
($generated@@75 $generated@@265)))))
 :pattern ( ($generated@@260 $generated@@262 $generated@@263))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@159) (= (type $generated@@267) $generated@@159)) (= ($generated@@165 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@165 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@269) $generated@@66)) (= ($generated@@83 $generated@@268 ($generated@@84 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@81) ($generated@@0 ($generated@@92 $generated@@268 $generated@@270))) ($generated@@253 $generated@@270 $generated@@269))
 :pattern ( ($generated@@92 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@83 $generated@@268 ($generated@@84 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@66)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@274) $generated@@66)) (= ($generated@@83 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@81) ($generated@@0 ($generated@@92 $generated@@273 $generated@@275))) ($generated@@253 $generated@@275 $generated@@274))
 :pattern ( ($generated@@92 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@83 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@276 Int) ) (! (= ($generated@@174 $generated@@276) $generated@@276)
 :pattern ( ($generated@@174 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (! (= ($generated@@76 $generated@@277) $generated@@277)
 :pattern ( ($generated@@76 $generated@@277))
)))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) ($generated@@78 $generated@@81 $generated@@4)) (or ($generated@@82 $generated@@278) (and (not (= 3 $generated@@74)) (and ($generated@@83 $generated@@278 ($generated@@84 $generated@@85)) (not ($generated@@86 $generated@@278 ($generated@@87 $generated@@81))))))) (<= ($generated@@174 1) ($generated@@75 $generated@@278)))
 :pattern ( ($generated@@75 $generated@@278))
))))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) $generated@@66) (= (type $generated@@281) $generated@@66)) (= (type $generated@@282) $generated@@81)) (= (type $generated@@283) $generated@@81)) (= (type $generated@@284) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@77 $generated@@284)) (= ($generated@@149 ($generated@@252 $generated@@282 $generated@@283) ($generated@@158 $generated@@280 $generated@@281) $generated@@284)  (and ($generated@@279 $generated@@282 $generated@@280 $generated@@284) ($generated@@279 $generated@@283 $generated@@281 $generated@@284))))
 :pattern ( ($generated@@149 ($generated@@252 $generated@@282 $generated@@283) ($generated@@158 $generated@@280 $generated@@281) $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@70)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@159) (= ($generated@@157 $generated@@287) (= ($generated@@285 $generated@@287) $generated@@61)))
 :pattern ( ($generated@@157 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@159) ($generated@@157 $generated@@288)) (exists (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (and (and (= (type $generated@@289) $generated@@81) (= (type $generated@@290) $generated@@81)) (= $generated@@288 ($generated@@252 $generated@@289 $generated@@290)))
 :no-pattern (type $generated@@289)
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
)))
 :pattern ( ($generated@@157 $generated@@288))
)))
(assert  (and (and (forall (($generated@@295 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@295)) 17)) (forall (($generated@@296 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@293 $generated@@296))
))) (forall (($generated@@297 T@T) ) (! (= (type ($generated@@291 $generated@@297)) ($generated@@293 $generated@@297))
 :pattern ( ($generated@@291 $generated@@297))
))))
(assert (forall (($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@298)) 0)
 :pattern ( ($generated@@291 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@2) (= ($generated@@83 $generated@@299 $generated@@85) (<= ($generated@@174 1) ($generated $generated@@299))))
 :pattern ( ($generated@@83 $generated@@299 $generated@@85))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@301 Int) ($generated@@302 Int) ) (!  (=> (or ($generated@@176 ($generated@@174 $generated@@301) ($generated@@174 $generated@@302)) (and (not (= 1 $generated@@74)) (and (<= ($generated@@174 1) $generated@@301) (<= ($generated@@174 1) $generated@@302)))) (= ($generated@@175 ($generated@@174 $generated@@301) ($generated@@174 $generated@@302)) (exists (($generated@@303 Int) ) (! (= ($generated@@300 ($generated@@174 $generated@@301) $generated@@303) ($generated@@174 $generated@@302))
 :pattern ( ($generated@@300 $generated@@301 $generated@@303))
))))
 :weight 3
 :pattern ( ($generated@@175 ($generated@@174 $generated@@301) ($generated@@174 $generated@@302)))
))))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@81)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@66) (= (type $generated@@308) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@279 ($generated@@304 $generated@@306) $generated@@307 $generated@@308) ($generated@@149 $generated@@306 $generated@@307 $generated@@308)))
 :pattern ( ($generated@@279 ($generated@@304 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@311 T@T) ) (! (= (type ($generated@@310 $generated@@311)) ($generated@@78 $generated@@311 $generated@@2))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@90 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@78 $generated@@313 $generated@@2)) (and (= (= ($generated@@309 $generated@@312) 0) (= $generated@@312 ($generated@@310 $generated@@313))) (=> (not (= ($generated@@309 $generated@@312) 0)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) (< 0 ($generated ($generated@@92 $generated@@312 $generated@@314))))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) ($generated@@78 $generated@@81 $generated@@4)) ($generated@@88 $generated@@315)) (and ($generated@@0 ($generated@@92 $generated@@315 ($generated@@304 ($generated@@8 ($generated@@89 $generated@@315))))) (forall (($generated@@316 T@U) ) (!  (=> (and (and (= (type $generated@@316) $generated@@2) true) ($generated@@0 ($generated@@92 $generated@@315 ($generated@@304 $generated@@316)))) (<= ($generated $generated@@316) ($generated@@89 $generated@@315)))
 :pattern ( ($generated@@92 $generated@@315 ($generated@@304 $generated@@316)))
))))
 :pattern ( ($generated@@89 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 18)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@78 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@92 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@92 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 19)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@92 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@92 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@90 (type $generated@@353))))
 (=> (and (= (type $generated@@353) ($generated@@78 $generated@@355 $generated@@4)) (= (type $generated@@354) ($generated@@78 $generated@@355 $generated@@4))) (= ($generated@@86 $generated@@353 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (= ($generated@@0 ($generated@@92 $generated@@353 $generated@@356)) ($generated@@0 ($generated@@92 $generated@@354 $generated@@356))))
 :pattern ( ($generated@@92 $generated@@353 $generated@@356))
 :pattern ( ($generated@@92 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@86 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@90 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@78 $generated@@358 $generated@@2)) (= ($generated@@185 $generated@@357) (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@358) (and (<= 0 ($generated ($generated@@92 $generated@@357 $generated@@359))) (<= ($generated ($generated@@92 $generated@@357 $generated@@359)) ($generated@@309 $generated@@357))))
 :pattern ( ($generated@@92 $generated@@357 $generated@@359))
)))))
 :pattern ( ($generated@@185 $generated@@357))
)))
(assert (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@360 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@81) ($generated@@253 $generated@@363 $generated@@85)) (and (= ($generated@@304 ($generated@@360 $generated@@2 $generated@@363)) $generated@@363) ($generated@@83 ($generated@@360 $generated@@2 $generated@@363) $generated@@85)))
 :pattern ( ($generated@@253 $generated@@363 $generated@@85))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@321 (type $generated@@364))))
(let (($generated@@366 ($generated@@320 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@319 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@318 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@92 ($generated@@317 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@317 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@321 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@78 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@321 (type $generated@@371))))
(let (($generated@@373 ($generated@@320 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@319 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@318 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@92 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@339 (type $generated@@375))))
(let (($generated@@377 ($generated@@338 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@337 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@336 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@92 ($generated@@335 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@335 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@339 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@78 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@339 (type $generated@@382))))
(let (($generated@@384 ($generated@@338 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@337 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@336 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@92 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@386 Int) ($generated@@387 Int) ) (!  (=> (or ($generated@@261 $generated@@386 $generated@@387) (and (not (= 4 $generated@@74)) (and (<= ($generated@@174 1) $generated@@386) (<= ($generated@@174 1) $generated@@387)))) (<= ($generated@@174 1) ($generated@@260 $generated@@386 $generated@@387)))
 :pattern ( ($generated@@260 $generated@@386 $generated@@387))
))))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@388 Int) ) (!  (=> (or ($generated@@173 ($generated@@174 $generated@@388)) (and (not (= 2 $generated@@74)) (<= ($generated@@174 1) $generated@@388))) (and (forall (($generated@@389 Int) ) (!  (=> (<= ($generated@@174 1) $generated@@389) (=> (<= $generated@@389 ($generated@@174 $generated@@388)) ($generated@@176 $generated@@389 ($generated@@174 $generated@@388))))
 :pattern ( ($generated@@175 $generated@@389 $generated@@388))
)) (= ($generated@@172 ($generated@@174 $generated@@388)) ($generated@@177 $generated@@85 ($generated@@174 $generated@@388) ($generated@@174 $generated@@388)))))
 :weight 3
 :pattern ( ($generated@@172 ($generated@@174 $generated@@388)))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@391) $generated@@66)) (= ($generated@@83 $generated@@390 ($generated@@184 $generated@@391)) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@81) (< 0 ($generated ($generated@@92 $generated@@390 $generated@@392)))) ($generated@@253 $generated@@392 $generated@@391))
 :pattern ( ($generated@@92 $generated@@390 $generated@@392))
))))
 :pattern ( ($generated@@83 $generated@@390 ($generated@@184 $generated@@391)))
)))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@393 Int) ) (!  (=> (or ($generated@@173 $generated@@393) (and (not (= 2 $generated@@74)) (<= ($generated@@174 1) $generated@@393))) ($generated@@83 ($generated@@172 $generated@@393) ($generated@@84 $generated@@85)))
 :pattern ( ($generated@@172 $generated@@393))
))))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@394 Int) ($generated@@395 Int) ) (!  (=> (or ($generated@@261 ($generated@@174 $generated@@394) ($generated@@174 $generated@@395)) (and (not (= 4 $generated@@74)) (and (<= ($generated@@174 1) $generated@@394) (<= ($generated@@174 1) $generated@@395)))) (and (and (and ($generated@@173 ($generated@@174 $generated@@394)) ($generated@@173 ($generated@@174 $generated@@395))) (let (($generated@@396 ($generated@@245 ($generated@@172 ($generated@@174 $generated@@394)) ($generated@@172 ($generated@@174 $generated@@395)))))
($generated@@82 $generated@@396))) (= ($generated@@260 ($generated@@174 $generated@@394) ($generated@@174 $generated@@395)) (let (($generated@@397 ($generated@@245 ($generated@@172 ($generated@@174 $generated@@394)) ($generated@@172 ($generated@@174 $generated@@395)))))
($generated@@75 $generated@@397)))))
 :weight 3
 :pattern ( ($generated@@260 ($generated@@174 $generated@@394) ($generated@@174 $generated@@395)))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
 (=> (and (= (type $generated@@398) ($generated@@78 $generated@@401 $generated@@4)) (= (type $generated@@399) ($generated@@78 $generated@@401 $generated@@4))) (= ($generated@@0 ($generated@@92 ($generated@@245 $generated@@398 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@92 $generated@@398 $generated@@400)) ($generated@@0 ($generated@@92 $generated@@399 $generated@@400))))))
 :pattern ( ($generated@@92 ($generated@@245 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@402 ($generated@@84 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@81) ($generated@@0 ($generated@@92 $generated@@402 $generated@@405))) ($generated@@279 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@92 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@149 $generated@@402 ($generated@@84 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@407) $generated@@66)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@406 ($generated@@271 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@81) ($generated@@0 ($generated@@92 $generated@@406 $generated@@409))) ($generated@@279 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@92 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@149 $generated@@406 ($generated@@271 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(= ($generated ($generated@@92 ($generated@@310 $generated@@411) $generated@@410)) 0))
 :pattern ( (let (($generated@@411 (type $generated@@410)))
($generated@@92 ($generated@@310 $generated@@411) $generated@@410)))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@321 (type $generated@@415))))
(let (($generated@@417 ($generated@@320 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@78 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@419) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@92 ($generated@@317 $generated@@418) ($generated@@166 ($generated@@360 $generated@@159 $generated@@419)))) (= ($generated@@92 ($generated@@413 $generated@@418) ($generated@@166 ($generated@@360 $generated@@159 $generated@@419))) ($generated@@167 ($generated@@360 $generated@@159 $generated@@419))))))
 :pattern ( ($generated@@92 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert  (and (forall (($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@422)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@420 $generated@@422))
)) (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@339 (type $generated@@423))))
(let (($generated@@425 ($generated@@338 (type $generated@@423))))
(= (type ($generated@@421 $generated@@423)) ($generated@@78 $generated@@425 $generated@@424))))
 :pattern ( ($generated@@421 $generated@@423))
))))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@427) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@420 $generated@@426) $generated@@427))  (and ($generated@@0 ($generated@@92 ($generated@@335 $generated@@426) ($generated@@166 ($generated@@360 $generated@@159 $generated@@427)))) (= ($generated@@92 ($generated@@421 $generated@@426) ($generated@@166 ($generated@@360 $generated@@159 $generated@@427))) ($generated@@167 ($generated@@360 $generated@@159 $generated@@427))))))
 :pattern ( ($generated@@92 ($generated@@420 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
(let (($generated@@431 ($generated@@320 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@319 $generated@@431 $generated@@430)) (= ($generated@@0 ($generated@@92 ($generated@@368 $generated@@428) $generated@@429)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) (and ($generated@@0 ($generated@@92 ($generated@@317 $generated@@428) $generated@@432)) (= $generated@@429 ($generated@@92 ($generated@@413 $generated@@428) $generated@@432))))
 :pattern ( ($generated@@92 ($generated@@317 $generated@@428) $generated@@432))
 :pattern ( ($generated@@92 ($generated@@413 $generated@@428) $generated@@432))
))))))
 :pattern ( ($generated@@92 ($generated@@368 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(let (($generated@@436 ($generated@@338 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@337 $generated@@436 $generated@@435)) (= ($generated@@0 ($generated@@92 ($generated@@379 $generated@@433) $generated@@434)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@436) (and ($generated@@0 ($generated@@92 ($generated@@335 $generated@@433) $generated@@437)) (= $generated@@434 ($generated@@92 ($generated@@421 $generated@@433) $generated@@437))))
 :pattern ( ($generated@@92 ($generated@@335 $generated@@433) $generated@@437))
 :pattern ( ($generated@@92 ($generated@@421 $generated@@433) $generated@@437))
))))))
 :pattern ( ($generated@@92 ($generated@@379 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@66)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@442) $generated@@66)) (= (type $generated@@443) $generated@@66)) (= (type $generated@@444) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@317 $generated@@441) $generated@@445))) (and ($generated@@279 ($generated@@92 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@279 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@92 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@92 ($generated@@317 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@149 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@447 $generated@@448)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (= (type $generated@@449) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@450) $generated@@66)) (= (type $generated@@451) $generated@@66)) (= (type $generated@@452) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452) (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@335 $generated@@449) $generated@@453))) (and ($generated@@279 ($generated@@92 ($generated@@421 $generated@@449) $generated@@453) $generated@@451 $generated@@452) ($generated@@279 $generated@@453 $generated@@450 $generated@@452)))
 :pattern ( ($generated@@92 ($generated@@421 $generated@@449) $generated@@453))
 :pattern ( ($generated@@92 ($generated@@335 $generated@@449) $generated@@453))
))))
 :pattern ( ($generated@@149 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@90 (type $generated@@454))))
 (=> (and (and (= (type $generated@@454) ($generated@@78 $generated@@456 $generated@@4)) (= (type $generated@@455) ($generated@@78 $generated@@456 $generated@@4))) ($generated@@86 $generated@@454 $generated@@455)) (= $generated@@454 $generated@@455)))
 :pattern ( ($generated@@86 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 Int) ($generated@@459 Int) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@460) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@177 $generated@@457 $generated@@458 $generated@@459) $generated@@460))  (and ($generated@@253 $generated@@460 $generated@@457) (and (<= ($generated ($generated@@360 $generated@@2 $generated@@460)) $generated@@458) ($generated@@175 ($generated ($generated@@360 $generated@@2 $generated@@460)) $generated@@459)))))
 :pattern ( ($generated@@92 ($generated@@177 $generated@@457 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@462 T@T) ) (! (= (type ($generated@@461 $generated@@462)) ($generated@@78 $generated@@462 $generated@@4))
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@339 (type $generated@@463))))
(let (($generated@@465 ($generated@@338 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@337 $generated@@465 $generated@@464)) (= (= $generated@@463 ($generated@@336 $generated@@465 $generated@@464)) (= ($generated@@335 $generated@@463) ($generated@@461 $generated@@465))))))
 :pattern ( ($generated@@335 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@339 (type $generated@@466))))
(let (($generated@@468 ($generated@@338 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@337 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@336 $generated@@468 $generated@@467)) (= ($generated@@379 $generated@@466) ($generated@@461 $generated@@467))))))
 :pattern ( ($generated@@379 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@339 (type $generated@@469))))
(let (($generated@@471 ($generated@@338 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@337 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@336 $generated@@471 $generated@@470)) (= ($generated@@420 $generated@@469) ($generated@@461 $generated@@81))))))
 :pattern ( ($generated@@420 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@321 (type $generated@@472))))
(let (($generated@@474 ($generated@@320 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@319 $generated@@474 $generated@@473)) (or (= $generated@@472 ($generated@@318 $generated@@474 $generated@@473)) (exists (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (and (and (= (type $generated@@475) $generated@@81) (= (type $generated@@476) $generated@@81)) ($generated@@0 ($generated@@92 ($generated@@412 $generated@@472) ($generated@@304 ($generated@@252 $generated@@475 $generated@@476)))))
 :no-pattern (type $generated@@475)
 :no-pattern (type $generated@@476)
 :no-pattern ($generated $generated@@475)
 :no-pattern ($generated@@0 $generated@@475)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
))))))
 :pattern ( ($generated@@412 $generated@@472))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@339 (type $generated@@477))))
(let (($generated@@479 ($generated@@338 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@337 $generated@@479 $generated@@478)) (or (= $generated@@477 ($generated@@336 $generated@@479 $generated@@478)) (exists (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (and (and (= (type $generated@@480) $generated@@81) (= (type $generated@@481) $generated@@81)) ($generated@@0 ($generated@@92 ($generated@@420 $generated@@477) ($generated@@304 ($generated@@252 $generated@@480 $generated@@481)))))
 :no-pattern (type $generated@@480)
 :no-pattern (type $generated@@481)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
))))))
 :pattern ( ($generated@@420 $generated@@477))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@81) ($generated@@253 $generated@@482 $generated@@46)) (and (= ($generated@@304 ($generated@@360 $generated@@2 $generated@@482)) $generated@@482) ($generated@@83 ($generated@@360 $generated@@2 $generated@@482) $generated@@46)))
 :pattern ( ($generated@@253 $generated@@482 $generated@@46))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@81) ($generated@@253 $generated@@483 $generated@@47)) (and (= ($generated@@304 ($generated@@360 $generated@@3 $generated@@483)) $generated@@483) ($generated@@83 ($generated@@360 $generated@@3 $generated@@483) $generated@@47)))
 :pattern ( ($generated@@253 $generated@@483 $generated@@47))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@81) ($generated@@253 $generated@@484 $generated@@44)) (and (= ($generated@@304 ($generated@@360 $generated@@4 $generated@@484)) $generated@@484) ($generated@@83 ($generated@@360 $generated@@4 $generated@@484) $generated@@44)))
 :pattern ( ($generated@@253 $generated@@484 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@485) 20))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@81) ($generated@@253 $generated@@486 $generated@@45)) (and (= ($generated@@304 ($generated@@360 $generated@@485 $generated@@486)) $generated@@486) ($generated@@83 ($generated@@360 $generated@@485 $generated@@486) $generated@@45)))
 :pattern ( ($generated@@253 $generated@@486 $generated@@45))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@66) (= ($generated@@253 ($generated@@304 $generated@@487) $generated@@488) ($generated@@83 $generated@@487 $generated@@488)))
 :pattern ( ($generated@@253 ($generated@@304 $generated@@487) $generated@@488))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@489 Int) ($generated@@490 Int) ) (!  (=> (or ($generated@@176 $generated@@489 $generated@@490) (and (not (= 1 $generated@@74)) (and (<= ($generated@@174 1) $generated@@489) (<= ($generated@@174 1) $generated@@490)))) (= ($generated@@175 $generated@@489 $generated@@490) (exists (($generated@@491 Int) ) (! (= ($generated@@300 $generated@@489 $generated@@491) $generated@@490)
 :pattern ( ($generated@@300 $generated@@489 $generated@@491))
))))
 :pattern ( ($generated@@175 $generated@@489 $generated@@490))
))))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@90 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@78 $generated@@493 $generated@@2)) (<= 0 ($generated@@309 $generated@@492))))
 :pattern ( ($generated@@309 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@294 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@293 $generated@@495)) (<= 0 ($generated@@292 $generated@@494))))
 :pattern ( ($generated@@292 $generated@@494))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@496 Int) ($generated@@497 Int) ) (!  (=> (or ($generated@@176 $generated@@496 $generated@@497) (and (not (= 1 $generated@@74)) (and (<= ($generated@@174 1) $generated@@496) (<= ($generated@@174 1) $generated@@497)))) true)
 :pattern ( ($generated@@175 $generated@@496 $generated@@497))
))))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@66) (= (type $generated@@501) $generated@@66)) (= ($generated@@498 ($generated@@438 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@438 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@66)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@66) (= (type $generated@@505) $generated@@66)) (= ($generated@@502 ($generated@@438 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@438 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@66) (= (type $generated@@507) $generated@@66)) (= ($generated@@147 ($generated@@438 $generated@@506 $generated@@507)) $generated@@58))
 :pattern ( ($generated@@438 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@66)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@66) (= (type $generated@@511) $generated@@66)) (= ($generated@@508 ($generated@@446 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@446 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@66)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@66) (= (type $generated@@515) $generated@@66)) (= ($generated@@512 ($generated@@446 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@446 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@66) (= (type $generated@@517) $generated@@66)) (= ($generated@@147 ($generated@@446 $generated@@516 $generated@@517)) $generated@@59))
 :pattern ( ($generated@@446 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@81) (= (type $generated@@519) $generated@@81)) (= ($generated@@285 ($generated@@252 $generated@@518 $generated@@519)) $generated@@61))
 :pattern ( ($generated@@252 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@66)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@66) (= (type $generated@@523) $generated@@66)) (= ($generated@@520 ($generated@@158 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@158 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@66)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= ($generated@@524 ($generated@@158 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@158 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@81) (= (type $generated@@529) $generated@@81)) (= ($generated@@166 ($generated@@252 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@252 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@81) (= (type $generated@@531) $generated@@81)) (= ($generated@@167 ($generated@@252 $generated@@530 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@252 $generated@@530 $generated@@531))
)))
(assert  (and (forall (($generated@@534 T@U) ) (! (= (type ($generated@@532 $generated@@534)) $generated@@66)
 :pattern ( ($generated@@532 $generated@@534))
)) (forall (($generated@@535 T@U) ($generated@@536 Int) ) (! (let (($generated@@537 ($generated@@294 (type $generated@@535))))
(= (type ($generated@@533 $generated@@535 $generated@@536)) $generated@@537))
 :pattern ( ($generated@@533 $generated@@535 $generated@@536))
))))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@293 $generated@@81)) (= (type $generated@@539) $generated@@66)) (= (type $generated@@540) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@538 ($generated@@532 $generated@@539) $generated@@540) (forall (($generated@@541 Int) ) (!  (=> (and (<= 0 $generated@@541) (< $generated@@541 ($generated@@292 $generated@@538))) ($generated@@279 ($generated@@533 $generated@@538 $generated@@541) $generated@@539 $generated@@540))
 :pattern ( ($generated@@533 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@149 $generated@@538 ($generated@@532 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@543 Int) ) (! (= ($generated@@542 ($generated@@150 $generated@@543)) $generated@@543)
 :pattern ( ($generated@@150 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@66)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@66) (= ($generated@@544 ($generated@@84 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@84 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@66) (= ($generated@@147 ($generated@@84 $generated@@547)) $generated@@54))
 :pattern ( ($generated@@84 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@66)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@66) (= ($generated@@548 ($generated@@271 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@271 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@66) (= ($generated@@147 ($generated@@271 $generated@@551)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@66)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@66) (= ($generated@@552 ($generated@@184 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@184 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@66) (= ($generated@@147 ($generated@@184 $generated@@555)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@66)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@66) (= ($generated@@556 ($generated@@532 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@532 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@66) (= ($generated@@147 ($generated@@532 $generated@@559)) $generated@@57))
 :pattern ( ($generated@@532 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
(= ($generated@@360 $generated@@561 ($generated@@304 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@304 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@563) $generated@@66)) (= (type $generated@@564) $generated@@66)) (= ($generated@@83 $generated@@562 ($generated@@438 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@317 $generated@@562) $generated@@565))) (and ($generated@@253 ($generated@@92 ($generated@@413 $generated@@562) $generated@@565) $generated@@564) ($generated@@253 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@92 ($generated@@413 $generated@@562) $generated@@565))
 :pattern ( ($generated@@92 ($generated@@317 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@83 $generated@@562 ($generated@@438 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@567) $generated@@66)) (= (type $generated@@568) $generated@@66)) (= ($generated@@83 $generated@@566 ($generated@@446 $generated@@567 $generated@@568)) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@335 $generated@@566) $generated@@569))) (and ($generated@@253 ($generated@@92 ($generated@@421 $generated@@566) $generated@@569) $generated@@568) ($generated@@253 $generated@@569 $generated@@567)))
 :pattern ( ($generated@@92 ($generated@@421 $generated@@566) $generated@@569))
 :pattern ( ($generated@@92 ($generated@@335 $generated@@566) $generated@@569))
))))
 :pattern ( ($generated@@83 $generated@@566 ($generated@@446 $generated@@567 $generated@@568)))
)))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@571) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 $generated@@571) (and (not (= 3 $generated@@74)) (and (and ($generated@@77 $generated@@570) ($generated@@83 $generated@@571 ($generated@@84 $generated@@85))) (not ($generated@@86 $generated@@571 ($generated@@87 $generated@@81))))))) (and ($generated@@88 $generated@@571) (= ($generated@@75 $generated@@571) (let (($generated@@572 ($generated@@89 $generated@@571)))
$generated@@572))))
 :pattern ( ($generated@@75 $generated@@571) ($generated@@77 $generated@@570))
))))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@81) (= (type $generated@@576) $generated@@81)) (< ($generated@@573 $generated@@575) ($generated@@574 ($generated@@252 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@252 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@81) (= (type $generated@@578) $generated@@81)) (< ($generated@@573 $generated@@578) ($generated@@574 ($generated@@252 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@252 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@90 (type $generated@@579))))
 (=> (and (= (type $generated@@579) ($generated@@78 $generated@@581 $generated@@4)) (= (type $generated@@580) ($generated@@78 $generated@@581 $generated@@4))) (= ($generated@@245 $generated@@579 ($generated@@245 $generated@@579 $generated@@580)) ($generated@@245 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@245 $generated@@579 ($generated@@245 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@81) (= (type $generated@@583) $generated@@66)) (= (type $generated@@584) $generated@@66)) ($generated@@253 $generated@@582 ($generated@@438 $generated@@583 $generated@@584))) (and (= ($generated@@304 ($generated@@360 ($generated@@319 $generated@@81 $generated@@81) $generated@@582)) $generated@@582) ($generated@@83 ($generated@@360 ($generated@@319 $generated@@81 $generated@@81) $generated@@582) ($generated@@438 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@253 $generated@@582 ($generated@@438 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@81) (= (type $generated@@586) $generated@@66)) (= (type $generated@@587) $generated@@66)) ($generated@@253 $generated@@585 ($generated@@446 $generated@@586 $generated@@587))) (and (= ($generated@@304 ($generated@@360 ($generated@@337 $generated@@81 $generated@@81) $generated@@585)) $generated@@585) ($generated@@83 ($generated@@360 ($generated@@337 $generated@@81 $generated@@81) $generated@@585) ($generated@@446 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@253 $generated@@585 ($generated@@446 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@66) (= (type $generated@@589) $generated@@66)) (= (type $generated@@590) $generated@@81)) ($generated@@253 $generated@@590 ($generated@@158 $generated@@588 $generated@@589))) (and (= ($generated@@304 ($generated@@360 $generated@@159 $generated@@590)) $generated@@590) ($generated@@83 ($generated@@360 $generated@@159 $generated@@590) ($generated@@158 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@253 $generated@@590 ($generated@@158 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@591)))
 (not ($generated@@0 ($generated@@92 ($generated@@87 $generated@@592) $generated@@591))))
 :pattern ( (let (($generated@@592 (type $generated@@591)))
($generated@@92 ($generated@@87 $generated@@592) $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@593)))
 (not ($generated@@0 ($generated@@92 ($generated@@461 $generated@@594) $generated@@593))))
 :pattern ( (let (($generated@@594 (type $generated@@593)))
($generated@@92 ($generated@@461 $generated@@594) $generated@@593)))
)))
(assert (forall (($generated@@596 T@U) ) (! (= (type ($generated@@595 $generated@@596)) $generated@@71)
 :pattern ( ($generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@66) (= (type $generated@@598) $generated@@66)) (and (= ($generated@@147 ($generated@@158 $generated@@597 $generated@@598)) $generated@@62) (= ($generated@@595 ($generated@@158 $generated@@597 $generated@@598)) $generated@@64)))
 :pattern ( ($generated@@158 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 Int) ($generated@@600 Int) ) (! (= ($generated@@300 $generated@@599 $generated@@600) (* $generated@@599 $generated@@600))
 :pattern ( ($generated@@300 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@159) (= ($generated@@573 ($generated@@304 $generated@@601)) ($generated@@574 $generated@@601)))
 :pattern ( ($generated@@573 ($generated@@304 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@81) ($generated@@253 $generated@@602 ($generated@@150 0))) (and (= ($generated@@304 ($generated@@360 $generated@@2 $generated@@602)) $generated@@602) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@602) ($generated@@150 0))))
 :pattern ( ($generated@@253 $generated@@602 ($generated@@150 0)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@81) (= (type $generated@@604) $generated@@66)) ($generated@@253 $generated@@603 ($generated@@84 $generated@@604))) (and (= ($generated@@304 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@603)) $generated@@603) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@603) ($generated@@84 $generated@@604))))
 :pattern ( ($generated@@253 $generated@@603 ($generated@@84 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@81) (= (type $generated@@606) $generated@@66)) ($generated@@253 $generated@@605 ($generated@@271 $generated@@606))) (and (= ($generated@@304 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@605)) $generated@@605) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@605) ($generated@@271 $generated@@606))))
 :pattern ( ($generated@@253 $generated@@605 ($generated@@271 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@81) (= (type $generated@@608) $generated@@66)) ($generated@@253 $generated@@607 ($generated@@184 $generated@@608))) (and (= ($generated@@304 ($generated@@360 ($generated@@78 $generated@@81 $generated@@2) $generated@@607)) $generated@@607) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@2) $generated@@607) ($generated@@184 $generated@@608))))
 :pattern ( ($generated@@253 $generated@@607 ($generated@@184 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@81) (= (type $generated@@610) $generated@@66)) ($generated@@253 $generated@@609 ($generated@@532 $generated@@610))) (and (= ($generated@@304 ($generated@@360 ($generated@@293 $generated@@81) $generated@@609)) $generated@@609) ($generated@@83 ($generated@@360 ($generated@@293 $generated@@81) $generated@@609) ($generated@@532 $generated@@610))))
 :pattern ( ($generated@@253 $generated@@609 ($generated@@532 $generated@@610)))
)))
(assert (= ($generated@@147 $generated@@85) $generated@@63))
(assert (= ($generated@@595 $generated@@85) $generated@@65))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@611) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@612) $generated@@66)) (= (type $generated@@613) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@611 ($generated@@184 $generated@@612) $generated@@613) (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@81) (< 0 ($generated ($generated@@92 $generated@@611 $generated@@614)))) ($generated@@279 $generated@@614 $generated@@612 $generated@@613))
 :pattern ( ($generated@@92 $generated@@611 $generated@@614))
))))
 :pattern ( ($generated@@149 $generated@@611 ($generated@@184 $generated@@612) $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@159) (= (type $generated@@616) $generated@@66)) (= (type $generated@@617) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@77 $generated@@617) (and ($generated@@157 $generated@@615) (exists (($generated@@618 T@U) ) (!  (and (= (type $generated@@618) $generated@@66) ($generated@@149 $generated@@615 ($generated@@158 $generated@@616 $generated@@618) $generated@@617))
 :pattern ( ($generated@@149 $generated@@615 ($generated@@158 $generated@@616 $generated@@618) $generated@@617))
))))) ($generated@@279 ($generated@@166 $generated@@615) $generated@@616 $generated@@617))
 :pattern ( ($generated@@279 ($generated@@166 $generated@@615) $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) $generated@@159) (= (type $generated@@620) $generated@@66)) (= (type $generated@@621) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@77 $generated@@621) (and ($generated@@157 $generated@@619) (exists (($generated@@622 T@U) ) (!  (and (= (type $generated@@622) $generated@@66) ($generated@@149 $generated@@619 ($generated@@158 $generated@@622 $generated@@620) $generated@@621))
 :pattern ( ($generated@@149 $generated@@619 ($generated@@158 $generated@@622 $generated@@620) $generated@@621))
))))) ($generated@@279 ($generated@@167 $generated@@619) $generated@@620 $generated@@621))
 :pattern ( ($generated@@279 ($generated@@167 $generated@@619) $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@81) (= (type $generated@@624) $generated@@81)) (= ($generated@@252 ($generated@@76 $generated@@623) ($generated@@76 $generated@@624)) ($generated@@76 ($generated@@252 $generated@@623 $generated@@624))))
 :pattern ( ($generated@@252 ($generated@@76 $generated@@623) ($generated@@76 $generated@@624)))
)))
(assert (forall (($generated@@625 Int) ) (! (= ($generated@@304 ($generated@@8 ($generated@@174 $generated@@625))) ($generated@@76 ($generated@@304 ($generated@@8 $generated@@625))))
 :pattern ( ($generated@@304 ($generated@@8 ($generated@@174 $generated@@625))))
)))
(assert (forall (($generated@@626 T@U) ) (! (= ($generated@@304 ($generated@@76 $generated@@626)) ($generated@@76 ($generated@@304 $generated@@626)))
 :pattern ( ($generated@@304 ($generated@@76 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (! (let (($generated@@628 ($generated@@294 (type $generated@@627))))
 (=> (and (= (type $generated@@627) ($generated@@293 $generated@@628)) (= ($generated@@292 $generated@@627) 0)) (= $generated@@627 ($generated@@291 $generated@@628))))
 :pattern ( ($generated@@292 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (! (let (($generated@@632 (type $generated@@630)))
 (=> (and (and (= (type $generated@@629) ($generated@@78 $generated@@632 $generated@@2)) (= (type $generated@@631) $generated@@2)) (<= 0 ($generated $generated@@631))) (= ($generated@@309 ($generated@@93 $generated@@629 $generated@@630 $generated@@631)) (+ (- ($generated@@309 $generated@@629) ($generated ($generated@@92 $generated@@629 $generated@@630))) ($generated $generated@@631)))))
 :pattern ( ($generated@@309 ($generated@@93 $generated@@629 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@634) $generated@@2)) ($generated@@149 $generated@@634 $generated@@46 $generated@@633))
 :pattern ( ($generated@@149 $generated@@634 $generated@@46 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@636) $generated@@3)) ($generated@@149 $generated@@636 $generated@@47 $generated@@635))
 :pattern ( ($generated@@149 $generated@@636 $generated@@47 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@638) $generated@@4)) ($generated@@149 $generated@@638 $generated@@44 $generated@@637))
 :pattern ( ($generated@@149 $generated@@638 $generated@@44 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@640) $generated@@485)) ($generated@@149 $generated@@640 $generated@@45 $generated@@639))
 :pattern ( ($generated@@149 $generated@@640 $generated@@45 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@642) $generated@@81)) ($generated@@149 $generated@@642 $generated@@48 $generated@@641))
 :pattern ( ($generated@@149 $generated@@642 $generated@@48 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@293 $generated@@81)) (= (type $generated@@644) $generated@@66)) (= ($generated@@83 $generated@@643 ($generated@@532 $generated@@644)) (forall (($generated@@645 Int) ) (!  (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@292 $generated@@643))) ($generated@@253 ($generated@@533 $generated@@643 $generated@@645) $generated@@644))
 :pattern ( ($generated@@533 $generated@@643 $generated@@645))
))))
 :pattern ( ($generated@@83 $generated@@643 ($generated@@532 $generated@@644)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 Int) ) (!  (=> (= (type $generated@@647) ($generated@@293 $generated@@81)) (=> (and (<= 0 $generated@@648) (< $generated@@648 ($generated@@292 $generated@@647))) (< ($generated@@574 ($generated@@360 $generated@@159 ($generated@@533 $generated@@647 $generated@@648))) ($generated@@646 $generated@@647))))
 :pattern ( ($generated@@574 ($generated@@360 $generated@@159 ($generated@@533 $generated@@647 $generated@@648))))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@650) $generated@@66)) (= (type $generated@@651) $generated@@66)) ($generated@@83 $generated@@649 ($generated@@438 $generated@@650 $generated@@651))) (and (and ($generated@@83 ($generated@@317 $generated@@649) ($generated@@84 $generated@@650)) ($generated@@83 ($generated@@368 $generated@@649) ($generated@@84 $generated@@651))) ($generated@@83 ($generated@@412 $generated@@649) ($generated@@84 ($generated@@158 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@83 $generated@@649 ($generated@@438 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@653) $generated@@66)) (= (type $generated@@654) $generated@@66)) ($generated@@83 $generated@@652 ($generated@@446 $generated@@653 $generated@@654))) (and (and ($generated@@83 ($generated@@335 $generated@@652) ($generated@@271 $generated@@653)) ($generated@@83 ($generated@@379 $generated@@652) ($generated@@271 $generated@@654))) ($generated@@83 ($generated@@420 $generated@@652) ($generated@@271 ($generated@@158 $generated@@653 $generated@@654)))))
 :pattern ( ($generated@@83 $generated@@652 ($generated@@446 $generated@@653 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@2) ($generated@@83 $generated@@655 $generated@@46))
 :pattern ( ($generated@@83 $generated@@655 $generated@@46))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@3) ($generated@@83 $generated@@656 $generated@@47))
 :pattern ( ($generated@@83 $generated@@656 $generated@@47))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@4) ($generated@@83 $generated@@657 $generated@@44))
 :pattern ( ($generated@@83 $generated@@657 $generated@@44))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@485) ($generated@@83 $generated@@658 $generated@@45))
 :pattern ( ($generated@@83 $generated@@658 $generated@@45))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@81) ($generated@@83 $generated@@659 $generated@@48))
 :pattern ( ($generated@@83 $generated@@659 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@660 () Int)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 (T@U) Bool)
(assert  (and (and (= (type $generated@@661) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@664) ($generated@@191 $generated@@79 $generated@@4))) (= (type $generated@@665) $generated@@79)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@667  (=> (and ($generated@@149 ($generated@@8 $generated@@660) $generated@@85 $generated@@661) ($generated@@173 $generated@@660)) (=> (and (and ($generated@@149 ($generated@@8 $generated@@662) $generated@@85 $generated@@661) ($generated@@173 $generated@@662)) (and ($generated@@173 $generated@@660) ($generated@@173 $generated@@662))) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@0 ($generated@@92 ($generated@@245 ($generated@@172 $generated@@660) ($generated@@172 $generated@@662)) ($generated@@304 ($generated@@8 $generated@@663))))) (=> ($generated@@0 ($generated@@92 ($generated@@245 ($generated@@172 $generated@@660) ($generated@@172 $generated@@662)) ($generated@@304 ($generated@@8 $generated@@663)))) (=> (= (ControlFlow 0 8) (- 0 7)) (<= $generated@@663 ($generated@@260 $generated@@660 $generated@@662)))))))))
(let (($generated@@668 true))
(let (($generated@@669  (=> (and (and ($generated@@176 $generated@@663 $generated@@660) (=> ($generated@@175 $generated@@663 $generated@@660) ($generated@@176 $generated@@663 $generated@@662))) (and ($generated@@175 $generated@@663 $generated@@660) ($generated@@175 $generated@@663 $generated@@662))) (and (=> (= (ControlFlow 0 10) 6) $generated@@668) (=> (= (ControlFlow 0 10) 8) $generated@@667)))))
(let (($generated@@670  (=> (and (not ($generated@@175 $generated@@663 $generated@@660)) (= (ControlFlow 0 12) 10)) $generated@@669)))
(let (($generated@@671  (=> ($generated@@175 $generated@@663 $generated@@660) (=> (and (and ($generated@@149 ($generated@@8 $generated@@663) $generated@@85 $generated@@661) ($generated@@149 ($generated@@8 $generated@@662) $generated@@85 $generated@@661)) (and ($generated@@176 $generated@@663 $generated@@662) (= (ControlFlow 0 11) 10))) $generated@@669))))
(let (($generated@@672  (=> (and (and (<= ($generated@@174 1) $generated@@663) ($generated@@149 ($generated@@8 $generated@@663) $generated@@85 $generated@@661)) (and ($generated@@149 ($generated@@8 $generated@@660) $generated@@85 $generated@@661) ($generated@@176 $generated@@663 $generated@@660))) (and (=> (= (ControlFlow 0 13) 11) $generated@@671) (=> (= (ControlFlow 0 13) 12) $generated@@670)))))
(let (($generated@@673  (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@176 ($generated@@260 $generated@@660 $generated@@662) $generated@@660) (or ($generated@@175 ($generated@@260 $generated@@660 $generated@@662) $generated@@660) (exists (($generated@@674 Int) ) (! (= ($generated@@300 ($generated@@260 $generated@@660 $generated@@662) $generated@@674) $generated@@660)
 :pattern ( ($generated@@300 ($generated@@260 $generated@@660 $generated@@662) $generated@@674))
))))) (=> (=> ($generated@@176 ($generated@@260 $generated@@660 $generated@@662) $generated@@660) (or ($generated@@175 ($generated@@260 $generated@@660 $generated@@662) $generated@@660) (exists (($generated@@675 Int) ) (! (= ($generated@@300 ($generated@@260 $generated@@660 $generated@@662) $generated@@675) $generated@@660)
 :pattern ( ($generated@@300 ($generated@@260 $generated@@660 $generated@@662) $generated@@675))
)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@176 ($generated@@260 $generated@@660 $generated@@662) $generated@@662) (or ($generated@@175 ($generated@@260 $generated@@660 $generated@@662) $generated@@662) (exists (($generated@@676 Int) ) (! (= ($generated@@300 ($generated@@260 $generated@@660 $generated@@662) $generated@@676) $generated@@662)
 :pattern ( ($generated@@300 ($generated@@260 $generated@@660 $generated@@662) $generated@@676))
))))) (=> (=> ($generated@@176 ($generated@@260 $generated@@660 $generated@@662) $generated@@662) (or ($generated@@175 ($generated@@260 $generated@@660 $generated@@662) $generated@@662) (exists (($generated@@677 Int) ) (! (= ($generated@@300 ($generated@@260 $generated@@660 $generated@@662) $generated@@677) $generated@@662)
 :pattern ( ($generated@@300 ($generated@@260 $generated@@660 $generated@@662) $generated@@677))
)))) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@678 Int) ) (!  (=> (<= ($generated@@174 1) $generated@@678) (=> (and ($generated@@175 $generated@@678 $generated@@660) ($generated@@175 $generated@@678 $generated@@662)) (<= $generated@@678 ($generated@@260 $generated@@660 $generated@@662))))
 :pattern ( ($generated@@175 $generated@@678 $generated@@662))
 :pattern ( ($generated@@175 $generated@@678 $generated@@660))
)))))))))
(let (($generated@@679  (=> (and (forall (($generated@@680 Int) ) (!  (=> (and (<= ($generated@@174 1) $generated@@680) (and ($generated@@175 $generated@@680 $generated@@660) ($generated@@175 $generated@@680 $generated@@662))) (<= $generated@@680 ($generated@@260 $generated@@660 $generated@@662)))
 :pattern ( ($generated@@175 $generated@@680 $generated@@662))
 :pattern ( ($generated@@175 $generated@@680 $generated@@660))
)) (= (ControlFlow 0 5) 2)) $generated@@673)))
(let (($generated@@681  (=> (= $generated@@664 ($generated@@190 $generated@@665 $generated@@661 $generated@@60 false)) (and (=> (= (ControlFlow 0 14) 13) $generated@@672) (=> (= (ControlFlow 0 14) 5) $generated@@679)))))
(let (($generated@@682  (=> (and ($generated@@77 $generated@@661) ($generated@@666 $generated@@661)) (=> (and (and (<= ($generated@@174 1) $generated@@660) (<= ($generated@@174 1) $generated@@662)) (and (= 5 $generated@@74) (= (ControlFlow 0 15) 14))) $generated@@681))))
$generated@@682)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 () Int)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 () T@U)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@T) T@U)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@89 (T@U) Int)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@149 (T@U T@U T@U) Bool)
(declare-fun $generated@@150 (Int) T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@172 (Int) T@U)
(declare-fun $generated@@173 (Int) Bool)
(declare-fun $generated@@174 (Int) Int)
(declare-fun $generated@@175 (Int Int) Bool)
(declare-fun $generated@@176 (Int Int) Bool)
(declare-fun $generated@@177 (T@U Int Int) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) T@U)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@260 (Int Int) Int)
(declare-fun $generated@@261 (Int Int) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@279 (T@U T@U T@U) Bool)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@300 (Int Int) Int)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@309 (T@U) Int)
(declare-fun $generated@@310 (T@T) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@U T@U) T@U)
(declare-fun $generated@@461 (T@T) T@U)
(declare-fun $generated@@485 () T@T)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@533 (T@U Int) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@573 (T@U) Int)
(declare-fun $generated@@574 (T@U) Int)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@646 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@96 $generated@@97)) 11)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@78 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@78 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@78 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@78 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@78 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@69 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@80)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@69 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 14)) (forall (($generated@@140 T@U) ) (! (let (($generated@@141 (type $generated@@140)))
(= (type ($generated@@76 $generated@@140)) $generated@@141))
 :pattern ( ($generated@@76 $generated@@140))
))) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@84 $generated@@142)) $generated@@66)
 :pattern ( ($generated@@84 $generated@@142))
))) (= (type $generated@@85) $generated@@66)) (forall (($generated@@143 T@T) ) (! (= (type ($generated@@87 $generated@@143)) ($generated@@78 $generated@@143 $generated@@4))
 :pattern ( ($generated@@87 $generated@@143))
))))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@145) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 ($generated@@76 $generated@@145)) (and (not (= 3 $generated@@74)) (and (and ($generated@@77 $generated@@144) ($generated@@83 $generated@@145 ($generated@@84 $generated@@85))) (not ($generated@@86 $generated@@145 ($generated@@87 $generated@@81))))))) (and ($generated@@88 ($generated@@76 $generated@@145)) (= ($generated@@75 ($generated@@76 $generated@@145)) (let (($generated@@146 ($generated@@89 ($generated@@76 $generated@@145))))
$generated@@146))))
 :weight 3
 :pattern ( ($generated@@75 ($generated@@76 $generated@@145)) ($generated@@77 $generated@@144))
))))
(assert (forall (($generated@@148 T@U) ) (! (= (type ($generated@@147 $generated@@148)) $generated@@67)
 :pattern ( ($generated@@147 $generated@@148))
)))
(assert (= ($generated@@147 $generated@@44) $generated@@49))
(assert (= ($generated@@147 $generated@@45) $generated@@50))
(assert (= ($generated@@147 $generated@@46) $generated@@51))
(assert (= ($generated@@147 $generated@@47) $generated@@52))
(assert (= ($generated@@147 $generated@@48) $generated@@53))
(assert (forall (($generated@@151 Int) ) (! (= (type ($generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@2) (= (type $generated@@153) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@149 $generated@@152 ($generated@@150 0) $generated@@153))
 :pattern ( ($generated@@149 $generated@@152 ($generated@@150 0) $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@2) (= (type $generated@@155) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@149 $generated@@154 $generated@@85 $generated@@155))
 :pattern ( ($generated@@149 $generated@@154 $generated@@85 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@83 $generated@@156 ($generated@@150 0)))
 :pattern ( ($generated@@83 $generated@@156 ($generated@@150 0)))
)))
(assert  (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@160 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@158 $generated@@160 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@66) (= (type $generated@@163) $generated@@66)) (= (type $generated@@164) $generated@@159)) ($generated@@83 $generated@@164 ($generated@@158 $generated@@162 $generated@@163))) ($generated@@157 $generated@@164))
 :pattern ( ($generated@@157 $generated@@164) ($generated@@83 $generated@@164 ($generated@@158 $generated@@162 $generated@@163)))
)))
(assert  (and (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@81)
 :pattern ( ($generated@@166 $generated@@168))
)) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@81)
 :pattern ( ($generated@@167 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@159) (= (type $generated@@171) $generated@@159)) true) (= ($generated@@165 $generated@@170 $generated@@171)  (and (= ($generated@@166 $generated@@170) ($generated@@166 $generated@@171)) (= ($generated@@167 $generated@@170) ($generated@@167 $generated@@171)))))
 :pattern ( ($generated@@165 $generated@@170 $generated@@171))
)))
(assert  (and (forall (($generated@@178 Int) ) (! (= (type ($generated@@172 $generated@@178)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@172 $generated@@178))
)) (forall (($generated@@179 T@U) ($generated@@180 Int) ($generated@@181 Int) ) (! (= (type ($generated@@177 $generated@@179 $generated@@180 $generated@@181)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@177 $generated@@179 $generated@@180 $generated@@181))
))))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@182 Int) ) (!  (=> (or ($generated@@173 $generated@@182) (and (not (= 2 $generated@@74)) (<= ($generated@@174 1) $generated@@182))) (and (forall (($generated@@183 Int) ) (!  (=> (<= ($generated@@174 1) $generated@@183) (=> (<= $generated@@183 $generated@@182) ($generated@@176 $generated@@183 $generated@@182)))
 :pattern ( ($generated@@175 $generated@@183 $generated@@182))
)) (= ($generated@@172 $generated@@182) ($generated@@177 $generated@@85 $generated@@182 $generated@@182))))
 :pattern ( ($generated@@172 $generated@@182))
))))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@66)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@188) $generated@@66)) ($generated@@83 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@83 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@195 $generated@@196)) 16)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@193 ($generated@@191 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@191 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@189 $generated@@201 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@189 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 (type $generated@@208)))
(let (($generated@@210 (type $generated@@206)))
(= (type ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@191 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@193 (type $generated@@211))))
 (=> (= (type $generated@@214) $generated@@215) (= ($generated@@189 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@212 $generated@@213) $generated@@214)))
 :weight 0
))) (and (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@189 ($generated@@194 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@189 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@189 ($generated@@194 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@189 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or true (= ($generated@@189 ($generated@@194 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@189 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@191 $generated@@79 $generated@@4))
 :pattern ( ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@69 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@79) (= (type $generated@@239) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@240) ($generated@@68 $generated@@4))) (= (type $generated@@242) $generated@@79)) (= (type $generated@@243) ($generated@@68 $generated@@244))) (= ($generated@@0 ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@90 (type $generated@@246))))
(= (type ($generated@@245 $generated@@246 $generated@@247)) ($generated@@78 $generated@@248 $generated@@4)))
 :pattern ( ($generated@@245 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@90 (type $generated@@249))))
 (=> (and (= (type $generated@@249) ($generated@@78 $generated@@251 $generated@@4)) (= (type $generated@@250) ($generated@@78 $generated@@251 $generated@@4))) (= ($generated@@245 ($generated@@245 $generated@@249 $generated@@250) $generated@@250) ($generated@@245 $generated@@249 $generated@@250))))
 :pattern ( ($generated@@245 ($generated@@245 $generated@@249 $generated@@250) $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (! (= (type ($generated@@252 $generated@@254 $generated@@255)) $generated@@159)
 :pattern ( ($generated@@252 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) $generated@@66) (= (type $generated@@257) $generated@@66)) (= (type $generated@@258) $generated@@81)) (= (type $generated@@259) $generated@@81)) (= ($generated@@83 ($generated@@252 $generated@@258 $generated@@259) ($generated@@158 $generated@@256 $generated@@257))  (and ($generated@@253 $generated@@258 $generated@@256) ($generated@@253 $generated@@259 $generated@@257))))
 :pattern ( ($generated@@83 ($generated@@252 $generated@@258 $generated@@259) ($generated@@158 $generated@@256 $generated@@257)))
)))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@262 Int) ($generated@@263 Int) ) (!  (=> (or ($generated@@261 $generated@@262 $generated@@263) (and (not (= 4 $generated@@74)) (and (<= ($generated@@174 1) $generated@@262) (<= ($generated@@174 1) $generated@@263)))) (and (and (and ($generated@@173 $generated@@262) ($generated@@173 $generated@@263)) (let (($generated@@264 ($generated@@245 ($generated@@172 $generated@@262) ($generated@@172 $generated@@263))))
($generated@@82 $generated@@264))) (= ($generated@@260 $generated@@262 $generated@@263) (let (($generated@@265 ($generated@@245 ($generated@@172 $generated@@262) ($generated@@172 $generated@@263))))
($generated@@75 $generated@@265)))))
 :pattern ( ($generated@@260 $generated@@262 $generated@@263))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@159) (= (type $generated@@267) $generated@@159)) (= ($generated@@165 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@165 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@269) $generated@@66)) (= ($generated@@83 $generated@@268 ($generated@@84 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@81) ($generated@@0 ($generated@@92 $generated@@268 $generated@@270))) ($generated@@253 $generated@@270 $generated@@269))
 :pattern ( ($generated@@92 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@83 $generated@@268 ($generated@@84 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@66)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@274) $generated@@66)) (= ($generated@@83 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@81) ($generated@@0 ($generated@@92 $generated@@273 $generated@@275))) ($generated@@253 $generated@@275 $generated@@274))
 :pattern ( ($generated@@92 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@83 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@276 Int) ) (! (= ($generated@@174 $generated@@276) $generated@@276)
 :pattern ( ($generated@@174 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (! (= ($generated@@76 $generated@@277) $generated@@277)
 :pattern ( ($generated@@76 $generated@@277))
)))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) ($generated@@78 $generated@@81 $generated@@4)) (or ($generated@@82 $generated@@278) (and (not (= 3 $generated@@74)) (and ($generated@@83 $generated@@278 ($generated@@84 $generated@@85)) (not ($generated@@86 $generated@@278 ($generated@@87 $generated@@81))))))) (<= ($generated@@174 1) ($generated@@75 $generated@@278)))
 :pattern ( ($generated@@75 $generated@@278))
))))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) $generated@@66) (= (type $generated@@281) $generated@@66)) (= (type $generated@@282) $generated@@81)) (= (type $generated@@283) $generated@@81)) (= (type $generated@@284) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@77 $generated@@284)) (= ($generated@@149 ($generated@@252 $generated@@282 $generated@@283) ($generated@@158 $generated@@280 $generated@@281) $generated@@284)  (and ($generated@@279 $generated@@282 $generated@@280 $generated@@284) ($generated@@279 $generated@@283 $generated@@281 $generated@@284))))
 :pattern ( ($generated@@149 ($generated@@252 $generated@@282 $generated@@283) ($generated@@158 $generated@@280 $generated@@281) $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@70)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@159) (= ($generated@@157 $generated@@287) (= ($generated@@285 $generated@@287) $generated@@61)))
 :pattern ( ($generated@@157 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@159) ($generated@@157 $generated@@288)) (exists (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (and (and (= (type $generated@@289) $generated@@81) (= (type $generated@@290) $generated@@81)) (= $generated@@288 ($generated@@252 $generated@@289 $generated@@290)))
 :no-pattern (type $generated@@289)
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
)))
 :pattern ( ($generated@@157 $generated@@288))
)))
(assert  (and (and (forall (($generated@@295 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@295)) 17)) (forall (($generated@@296 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@293 $generated@@296))
))) (forall (($generated@@297 T@T) ) (! (= (type ($generated@@291 $generated@@297)) ($generated@@293 $generated@@297))
 :pattern ( ($generated@@291 $generated@@297))
))))
(assert (forall (($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@298)) 0)
 :pattern ( ($generated@@291 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@2) (= ($generated@@83 $generated@@299 $generated@@85) (<= ($generated@@174 1) ($generated $generated@@299))))
 :pattern ( ($generated@@83 $generated@@299 $generated@@85))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@301 Int) ($generated@@302 Int) ) (!  (=> (or ($generated@@176 ($generated@@174 $generated@@301) ($generated@@174 $generated@@302)) (and (not (= 1 $generated@@74)) (and (<= ($generated@@174 1) $generated@@301) (<= ($generated@@174 1) $generated@@302)))) (= ($generated@@175 ($generated@@174 $generated@@301) ($generated@@174 $generated@@302)) (exists (($generated@@303 Int) ) (! (= ($generated@@300 ($generated@@174 $generated@@301) $generated@@303) ($generated@@174 $generated@@302))
 :pattern ( ($generated@@300 $generated@@301 $generated@@303))
))))
 :weight 3
 :pattern ( ($generated@@175 ($generated@@174 $generated@@301) ($generated@@174 $generated@@302)))
))))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@81)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@66) (= (type $generated@@308) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@279 ($generated@@304 $generated@@306) $generated@@307 $generated@@308) ($generated@@149 $generated@@306 $generated@@307 $generated@@308)))
 :pattern ( ($generated@@279 ($generated@@304 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@311 T@T) ) (! (= (type ($generated@@310 $generated@@311)) ($generated@@78 $generated@@311 $generated@@2))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@90 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@78 $generated@@313 $generated@@2)) (and (= (= ($generated@@309 $generated@@312) 0) (= $generated@@312 ($generated@@310 $generated@@313))) (=> (not (= ($generated@@309 $generated@@312) 0)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) (< 0 ($generated ($generated@@92 $generated@@312 $generated@@314))))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) ($generated@@78 $generated@@81 $generated@@4)) ($generated@@88 $generated@@315)) (and ($generated@@0 ($generated@@92 $generated@@315 ($generated@@304 ($generated@@8 ($generated@@89 $generated@@315))))) (forall (($generated@@316 T@U) ) (!  (=> (and (and (= (type $generated@@316) $generated@@2) true) ($generated@@0 ($generated@@92 $generated@@315 ($generated@@304 $generated@@316)))) (<= ($generated $generated@@316) ($generated@@89 $generated@@315)))
 :pattern ( ($generated@@92 $generated@@315 ($generated@@304 $generated@@316)))
))))
 :pattern ( ($generated@@89 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 18)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@78 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@92 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@92 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 19)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@92 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@92 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@90 (type $generated@@353))))
 (=> (and (= (type $generated@@353) ($generated@@78 $generated@@355 $generated@@4)) (= (type $generated@@354) ($generated@@78 $generated@@355 $generated@@4))) (= ($generated@@86 $generated@@353 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (= ($generated@@0 ($generated@@92 $generated@@353 $generated@@356)) ($generated@@0 ($generated@@92 $generated@@354 $generated@@356))))
 :pattern ( ($generated@@92 $generated@@353 $generated@@356))
 :pattern ( ($generated@@92 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@86 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@90 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@78 $generated@@358 $generated@@2)) (= ($generated@@185 $generated@@357) (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@358) (and (<= 0 ($generated ($generated@@92 $generated@@357 $generated@@359))) (<= ($generated ($generated@@92 $generated@@357 $generated@@359)) ($generated@@309 $generated@@357))))
 :pattern ( ($generated@@92 $generated@@357 $generated@@359))
)))))
 :pattern ( ($generated@@185 $generated@@357))
)))
(assert (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@360 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@81) ($generated@@253 $generated@@363 $generated@@85)) (and (= ($generated@@304 ($generated@@360 $generated@@2 $generated@@363)) $generated@@363) ($generated@@83 ($generated@@360 $generated@@2 $generated@@363) $generated@@85)))
 :pattern ( ($generated@@253 $generated@@363 $generated@@85))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@321 (type $generated@@364))))
(let (($generated@@366 ($generated@@320 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@319 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@318 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@92 ($generated@@317 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@317 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@321 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@78 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@321 (type $generated@@371))))
(let (($generated@@373 ($generated@@320 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@319 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@318 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@92 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@339 (type $generated@@375))))
(let (($generated@@377 ($generated@@338 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@337 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@336 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@92 ($generated@@335 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@335 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@339 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@78 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@339 (type $generated@@382))))
(let (($generated@@384 ($generated@@338 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@337 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@336 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@92 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@386 Int) ($generated@@387 Int) ) (!  (=> (or ($generated@@261 $generated@@386 $generated@@387) (and (not (= 4 $generated@@74)) (and (<= ($generated@@174 1) $generated@@386) (<= ($generated@@174 1) $generated@@387)))) (<= ($generated@@174 1) ($generated@@260 $generated@@386 $generated@@387)))
 :pattern ( ($generated@@260 $generated@@386 $generated@@387))
))))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@388 Int) ) (!  (=> (or ($generated@@173 ($generated@@174 $generated@@388)) (and (not (= 2 $generated@@74)) (<= ($generated@@174 1) $generated@@388))) (and (forall (($generated@@389 Int) ) (!  (=> (<= ($generated@@174 1) $generated@@389) (=> (<= $generated@@389 ($generated@@174 $generated@@388)) ($generated@@176 $generated@@389 ($generated@@174 $generated@@388))))
 :pattern ( ($generated@@175 $generated@@389 $generated@@388))
)) (= ($generated@@172 ($generated@@174 $generated@@388)) ($generated@@177 $generated@@85 ($generated@@174 $generated@@388) ($generated@@174 $generated@@388)))))
 :weight 3
 :pattern ( ($generated@@172 ($generated@@174 $generated@@388)))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@391) $generated@@66)) (= ($generated@@83 $generated@@390 ($generated@@184 $generated@@391)) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@81) (< 0 ($generated ($generated@@92 $generated@@390 $generated@@392)))) ($generated@@253 $generated@@392 $generated@@391))
 :pattern ( ($generated@@92 $generated@@390 $generated@@392))
))))
 :pattern ( ($generated@@83 $generated@@390 ($generated@@184 $generated@@391)))
)))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@393 Int) ) (!  (=> (or ($generated@@173 $generated@@393) (and (not (= 2 $generated@@74)) (<= ($generated@@174 1) $generated@@393))) ($generated@@83 ($generated@@172 $generated@@393) ($generated@@84 $generated@@85)))
 :pattern ( ($generated@@172 $generated@@393))
))))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@394 Int) ($generated@@395 Int) ) (!  (=> (or ($generated@@261 ($generated@@174 $generated@@394) ($generated@@174 $generated@@395)) (and (not (= 4 $generated@@74)) (and (<= ($generated@@174 1) $generated@@394) (<= ($generated@@174 1) $generated@@395)))) (and (and (and ($generated@@173 ($generated@@174 $generated@@394)) ($generated@@173 ($generated@@174 $generated@@395))) (let (($generated@@396 ($generated@@245 ($generated@@172 ($generated@@174 $generated@@394)) ($generated@@172 ($generated@@174 $generated@@395)))))
($generated@@82 $generated@@396))) (= ($generated@@260 ($generated@@174 $generated@@394) ($generated@@174 $generated@@395)) (let (($generated@@397 ($generated@@245 ($generated@@172 ($generated@@174 $generated@@394)) ($generated@@172 ($generated@@174 $generated@@395)))))
($generated@@75 $generated@@397)))))
 :weight 3
 :pattern ( ($generated@@260 ($generated@@174 $generated@@394) ($generated@@174 $generated@@395)))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
 (=> (and (= (type $generated@@398) ($generated@@78 $generated@@401 $generated@@4)) (= (type $generated@@399) ($generated@@78 $generated@@401 $generated@@4))) (= ($generated@@0 ($generated@@92 ($generated@@245 $generated@@398 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@92 $generated@@398 $generated@@400)) ($generated@@0 ($generated@@92 $generated@@399 $generated@@400))))))
 :pattern ( ($generated@@92 ($generated@@245 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@402 ($generated@@84 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@81) ($generated@@0 ($generated@@92 $generated@@402 $generated@@405))) ($generated@@279 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@92 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@149 $generated@@402 ($generated@@84 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@407) $generated@@66)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@406 ($generated@@271 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@81) ($generated@@0 ($generated@@92 $generated@@406 $generated@@409))) ($generated@@279 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@92 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@149 $generated@@406 ($generated@@271 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(= ($generated ($generated@@92 ($generated@@310 $generated@@411) $generated@@410)) 0))
 :pattern ( (let (($generated@@411 (type $generated@@410)))
($generated@@92 ($generated@@310 $generated@@411) $generated@@410)))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@321 (type $generated@@415))))
(let (($generated@@417 ($generated@@320 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@78 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@419) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@92 ($generated@@317 $generated@@418) ($generated@@166 ($generated@@360 $generated@@159 $generated@@419)))) (= ($generated@@92 ($generated@@413 $generated@@418) ($generated@@166 ($generated@@360 $generated@@159 $generated@@419))) ($generated@@167 ($generated@@360 $generated@@159 $generated@@419))))))
 :pattern ( ($generated@@92 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert  (and (forall (($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@422)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@420 $generated@@422))
)) (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@339 (type $generated@@423))))
(let (($generated@@425 ($generated@@338 (type $generated@@423))))
(= (type ($generated@@421 $generated@@423)) ($generated@@78 $generated@@425 $generated@@424))))
 :pattern ( ($generated@@421 $generated@@423))
))))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@427) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@420 $generated@@426) $generated@@427))  (and ($generated@@0 ($generated@@92 ($generated@@335 $generated@@426) ($generated@@166 ($generated@@360 $generated@@159 $generated@@427)))) (= ($generated@@92 ($generated@@421 $generated@@426) ($generated@@166 ($generated@@360 $generated@@159 $generated@@427))) ($generated@@167 ($generated@@360 $generated@@159 $generated@@427))))))
 :pattern ( ($generated@@92 ($generated@@420 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
(let (($generated@@431 ($generated@@320 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@319 $generated@@431 $generated@@430)) (= ($generated@@0 ($generated@@92 ($generated@@368 $generated@@428) $generated@@429)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) (and ($generated@@0 ($generated@@92 ($generated@@317 $generated@@428) $generated@@432)) (= $generated@@429 ($generated@@92 ($generated@@413 $generated@@428) $generated@@432))))
 :pattern ( ($generated@@92 ($generated@@317 $generated@@428) $generated@@432))
 :pattern ( ($generated@@92 ($generated@@413 $generated@@428) $generated@@432))
))))))
 :pattern ( ($generated@@92 ($generated@@368 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(let (($generated@@436 ($generated@@338 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@337 $generated@@436 $generated@@435)) (= ($generated@@0 ($generated@@92 ($generated@@379 $generated@@433) $generated@@434)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@436) (and ($generated@@0 ($generated@@92 ($generated@@335 $generated@@433) $generated@@437)) (= $generated@@434 ($generated@@92 ($generated@@421 $generated@@433) $generated@@437))))
 :pattern ( ($generated@@92 ($generated@@335 $generated@@433) $generated@@437))
 :pattern ( ($generated@@92 ($generated@@421 $generated@@433) $generated@@437))
))))))
 :pattern ( ($generated@@92 ($generated@@379 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@66)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@442) $generated@@66)) (= (type $generated@@443) $generated@@66)) (= (type $generated@@444) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@317 $generated@@441) $generated@@445))) (and ($generated@@279 ($generated@@92 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@279 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@92 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@92 ($generated@@317 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@149 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@447 $generated@@448)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (= (type $generated@@449) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@450) $generated@@66)) (= (type $generated@@451) $generated@@66)) (= (type $generated@@452) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452) (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@335 $generated@@449) $generated@@453))) (and ($generated@@279 ($generated@@92 ($generated@@421 $generated@@449) $generated@@453) $generated@@451 $generated@@452) ($generated@@279 $generated@@453 $generated@@450 $generated@@452)))
 :pattern ( ($generated@@92 ($generated@@421 $generated@@449) $generated@@453))
 :pattern ( ($generated@@92 ($generated@@335 $generated@@449) $generated@@453))
))))
 :pattern ( ($generated@@149 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@90 (type $generated@@454))))
 (=> (and (and (= (type $generated@@454) ($generated@@78 $generated@@456 $generated@@4)) (= (type $generated@@455) ($generated@@78 $generated@@456 $generated@@4))) ($generated@@86 $generated@@454 $generated@@455)) (= $generated@@454 $generated@@455)))
 :pattern ( ($generated@@86 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 Int) ($generated@@459 Int) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@460) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@177 $generated@@457 $generated@@458 $generated@@459) $generated@@460))  (and ($generated@@253 $generated@@460 $generated@@457) (and (<= ($generated ($generated@@360 $generated@@2 $generated@@460)) $generated@@458) ($generated@@175 ($generated ($generated@@360 $generated@@2 $generated@@460)) $generated@@459)))))
 :pattern ( ($generated@@92 ($generated@@177 $generated@@457 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@462 T@T) ) (! (= (type ($generated@@461 $generated@@462)) ($generated@@78 $generated@@462 $generated@@4))
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@339 (type $generated@@463))))
(let (($generated@@465 ($generated@@338 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@337 $generated@@465 $generated@@464)) (= (= $generated@@463 ($generated@@336 $generated@@465 $generated@@464)) (= ($generated@@335 $generated@@463) ($generated@@461 $generated@@465))))))
 :pattern ( ($generated@@335 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@339 (type $generated@@466))))
(let (($generated@@468 ($generated@@338 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@337 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@336 $generated@@468 $generated@@467)) (= ($generated@@379 $generated@@466) ($generated@@461 $generated@@467))))))
 :pattern ( ($generated@@379 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@339 (type $generated@@469))))
(let (($generated@@471 ($generated@@338 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@337 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@336 $generated@@471 $generated@@470)) (= ($generated@@420 $generated@@469) ($generated@@461 $generated@@81))))))
 :pattern ( ($generated@@420 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@321 (type $generated@@472))))
(let (($generated@@474 ($generated@@320 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@319 $generated@@474 $generated@@473)) (or (= $generated@@472 ($generated@@318 $generated@@474 $generated@@473)) (exists (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (and (and (= (type $generated@@475) $generated@@81) (= (type $generated@@476) $generated@@81)) ($generated@@0 ($generated@@92 ($generated@@412 $generated@@472) ($generated@@304 ($generated@@252 $generated@@475 $generated@@476)))))
 :no-pattern (type $generated@@475)
 :no-pattern (type $generated@@476)
 :no-pattern ($generated $generated@@475)
 :no-pattern ($generated@@0 $generated@@475)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
))))))
 :pattern ( ($generated@@412 $generated@@472))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@339 (type $generated@@477))))
(let (($generated@@479 ($generated@@338 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@337 $generated@@479 $generated@@478)) (or (= $generated@@477 ($generated@@336 $generated@@479 $generated@@478)) (exists (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (and (and (= (type $generated@@480) $generated@@81) (= (type $generated@@481) $generated@@81)) ($generated@@0 ($generated@@92 ($generated@@420 $generated@@477) ($generated@@304 ($generated@@252 $generated@@480 $generated@@481)))))
 :no-pattern (type $generated@@480)
 :no-pattern (type $generated@@481)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
))))))
 :pattern ( ($generated@@420 $generated@@477))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@81) ($generated@@253 $generated@@482 $generated@@46)) (and (= ($generated@@304 ($generated@@360 $generated@@2 $generated@@482)) $generated@@482) ($generated@@83 ($generated@@360 $generated@@2 $generated@@482) $generated@@46)))
 :pattern ( ($generated@@253 $generated@@482 $generated@@46))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@81) ($generated@@253 $generated@@483 $generated@@47)) (and (= ($generated@@304 ($generated@@360 $generated@@3 $generated@@483)) $generated@@483) ($generated@@83 ($generated@@360 $generated@@3 $generated@@483) $generated@@47)))
 :pattern ( ($generated@@253 $generated@@483 $generated@@47))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@81) ($generated@@253 $generated@@484 $generated@@44)) (and (= ($generated@@304 ($generated@@360 $generated@@4 $generated@@484)) $generated@@484) ($generated@@83 ($generated@@360 $generated@@4 $generated@@484) $generated@@44)))
 :pattern ( ($generated@@253 $generated@@484 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@485) 20))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@81) ($generated@@253 $generated@@486 $generated@@45)) (and (= ($generated@@304 ($generated@@360 $generated@@485 $generated@@486)) $generated@@486) ($generated@@83 ($generated@@360 $generated@@485 $generated@@486) $generated@@45)))
 :pattern ( ($generated@@253 $generated@@486 $generated@@45))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@66) (= ($generated@@253 ($generated@@304 $generated@@487) $generated@@488) ($generated@@83 $generated@@487 $generated@@488)))
 :pattern ( ($generated@@253 ($generated@@304 $generated@@487) $generated@@488))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@489 Int) ($generated@@490 Int) ) (!  (=> (or ($generated@@176 $generated@@489 $generated@@490) (and (not (= 1 $generated@@74)) (and (<= ($generated@@174 1) $generated@@489) (<= ($generated@@174 1) $generated@@490)))) (= ($generated@@175 $generated@@489 $generated@@490) (exists (($generated@@491 Int) ) (! (= ($generated@@300 $generated@@489 $generated@@491) $generated@@490)
 :pattern ( ($generated@@300 $generated@@489 $generated@@491))
))))
 :pattern ( ($generated@@175 $generated@@489 $generated@@490))
))))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@90 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@78 $generated@@493 $generated@@2)) (<= 0 ($generated@@309 $generated@@492))))
 :pattern ( ($generated@@309 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@294 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@293 $generated@@495)) (<= 0 ($generated@@292 $generated@@494))))
 :pattern ( ($generated@@292 $generated@@494))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@496 Int) ($generated@@497 Int) ) (!  (=> (or ($generated@@176 $generated@@496 $generated@@497) (and (not (= 1 $generated@@74)) (and (<= ($generated@@174 1) $generated@@496) (<= ($generated@@174 1) $generated@@497)))) true)
 :pattern ( ($generated@@175 $generated@@496 $generated@@497))
))))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@66) (= (type $generated@@501) $generated@@66)) (= ($generated@@498 ($generated@@438 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@438 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@66)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@66) (= (type $generated@@505) $generated@@66)) (= ($generated@@502 ($generated@@438 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@438 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@66) (= (type $generated@@507) $generated@@66)) (= ($generated@@147 ($generated@@438 $generated@@506 $generated@@507)) $generated@@58))
 :pattern ( ($generated@@438 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@66)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@66) (= (type $generated@@511) $generated@@66)) (= ($generated@@508 ($generated@@446 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@446 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@66)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@66) (= (type $generated@@515) $generated@@66)) (= ($generated@@512 ($generated@@446 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@446 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@66) (= (type $generated@@517) $generated@@66)) (= ($generated@@147 ($generated@@446 $generated@@516 $generated@@517)) $generated@@59))
 :pattern ( ($generated@@446 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@81) (= (type $generated@@519) $generated@@81)) (= ($generated@@285 ($generated@@252 $generated@@518 $generated@@519)) $generated@@61))
 :pattern ( ($generated@@252 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@66)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@66) (= (type $generated@@523) $generated@@66)) (= ($generated@@520 ($generated@@158 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@158 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@66)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= ($generated@@524 ($generated@@158 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@158 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@81) (= (type $generated@@529) $generated@@81)) (= ($generated@@166 ($generated@@252 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@252 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@81) (= (type $generated@@531) $generated@@81)) (= ($generated@@167 ($generated@@252 $generated@@530 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@252 $generated@@530 $generated@@531))
)))
(assert  (and (forall (($generated@@534 T@U) ) (! (= (type ($generated@@532 $generated@@534)) $generated@@66)
 :pattern ( ($generated@@532 $generated@@534))
)) (forall (($generated@@535 T@U) ($generated@@536 Int) ) (! (let (($generated@@537 ($generated@@294 (type $generated@@535))))
(= (type ($generated@@533 $generated@@535 $generated@@536)) $generated@@537))
 :pattern ( ($generated@@533 $generated@@535 $generated@@536))
))))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@293 $generated@@81)) (= (type $generated@@539) $generated@@66)) (= (type $generated@@540) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@538 ($generated@@532 $generated@@539) $generated@@540) (forall (($generated@@541 Int) ) (!  (=> (and (<= 0 $generated@@541) (< $generated@@541 ($generated@@292 $generated@@538))) ($generated@@279 ($generated@@533 $generated@@538 $generated@@541) $generated@@539 $generated@@540))
 :pattern ( ($generated@@533 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@149 $generated@@538 ($generated@@532 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@543 Int) ) (! (= ($generated@@542 ($generated@@150 $generated@@543)) $generated@@543)
 :pattern ( ($generated@@150 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@66)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@66) (= ($generated@@544 ($generated@@84 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@84 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@66) (= ($generated@@147 ($generated@@84 $generated@@547)) $generated@@54))
 :pattern ( ($generated@@84 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@66)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@66) (= ($generated@@548 ($generated@@271 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@271 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@66) (= ($generated@@147 ($generated@@271 $generated@@551)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@66)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@66) (= ($generated@@552 ($generated@@184 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@184 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@66) (= ($generated@@147 ($generated@@184 $generated@@555)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@66)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@66) (= ($generated@@556 ($generated@@532 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@532 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@66) (= ($generated@@147 ($generated@@532 $generated@@559)) $generated@@57))
 :pattern ( ($generated@@532 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
(= ($generated@@360 $generated@@561 ($generated@@304 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@304 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@563) $generated@@66)) (= (type $generated@@564) $generated@@66)) (= ($generated@@83 $generated@@562 ($generated@@438 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@317 $generated@@562) $generated@@565))) (and ($generated@@253 ($generated@@92 ($generated@@413 $generated@@562) $generated@@565) $generated@@564) ($generated@@253 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@92 ($generated@@413 $generated@@562) $generated@@565))
 :pattern ( ($generated@@92 ($generated@@317 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@83 $generated@@562 ($generated@@438 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@567) $generated@@66)) (= (type $generated@@568) $generated@@66)) (= ($generated@@83 $generated@@566 ($generated@@446 $generated@@567 $generated@@568)) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@335 $generated@@566) $generated@@569))) (and ($generated@@253 ($generated@@92 ($generated@@421 $generated@@566) $generated@@569) $generated@@568) ($generated@@253 $generated@@569 $generated@@567)))
 :pattern ( ($generated@@92 ($generated@@421 $generated@@566) $generated@@569))
 :pattern ( ($generated@@92 ($generated@@335 $generated@@566) $generated@@569))
))))
 :pattern ( ($generated@@83 $generated@@566 ($generated@@446 $generated@@567 $generated@@568)))
)))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@571) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 $generated@@571) (and (not (= 3 $generated@@74)) (and (and ($generated@@77 $generated@@570) ($generated@@83 $generated@@571 ($generated@@84 $generated@@85))) (not ($generated@@86 $generated@@571 ($generated@@87 $generated@@81))))))) (and ($generated@@88 $generated@@571) (= ($generated@@75 $generated@@571) (let (($generated@@572 ($generated@@89 $generated@@571)))
$generated@@572))))
 :pattern ( ($generated@@75 $generated@@571) ($generated@@77 $generated@@570))
))))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@81) (= (type $generated@@576) $generated@@81)) (< ($generated@@573 $generated@@575) ($generated@@574 ($generated@@252 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@252 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@81) (= (type $generated@@578) $generated@@81)) (< ($generated@@573 $generated@@578) ($generated@@574 ($generated@@252 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@252 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@90 (type $generated@@579))))
 (=> (and (= (type $generated@@579) ($generated@@78 $generated@@581 $generated@@4)) (= (type $generated@@580) ($generated@@78 $generated@@581 $generated@@4))) (= ($generated@@245 $generated@@579 ($generated@@245 $generated@@579 $generated@@580)) ($generated@@245 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@245 $generated@@579 ($generated@@245 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@81) (= (type $generated@@583) $generated@@66)) (= (type $generated@@584) $generated@@66)) ($generated@@253 $generated@@582 ($generated@@438 $generated@@583 $generated@@584))) (and (= ($generated@@304 ($generated@@360 ($generated@@319 $generated@@81 $generated@@81) $generated@@582)) $generated@@582) ($generated@@83 ($generated@@360 ($generated@@319 $generated@@81 $generated@@81) $generated@@582) ($generated@@438 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@253 $generated@@582 ($generated@@438 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@81) (= (type $generated@@586) $generated@@66)) (= (type $generated@@587) $generated@@66)) ($generated@@253 $generated@@585 ($generated@@446 $generated@@586 $generated@@587))) (and (= ($generated@@304 ($generated@@360 ($generated@@337 $generated@@81 $generated@@81) $generated@@585)) $generated@@585) ($generated@@83 ($generated@@360 ($generated@@337 $generated@@81 $generated@@81) $generated@@585) ($generated@@446 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@253 $generated@@585 ($generated@@446 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@66) (= (type $generated@@589) $generated@@66)) (= (type $generated@@590) $generated@@81)) ($generated@@253 $generated@@590 ($generated@@158 $generated@@588 $generated@@589))) (and (= ($generated@@304 ($generated@@360 $generated@@159 $generated@@590)) $generated@@590) ($generated@@83 ($generated@@360 $generated@@159 $generated@@590) ($generated@@158 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@253 $generated@@590 ($generated@@158 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@591)))
 (not ($generated@@0 ($generated@@92 ($generated@@87 $generated@@592) $generated@@591))))
 :pattern ( (let (($generated@@592 (type $generated@@591)))
($generated@@92 ($generated@@87 $generated@@592) $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@593)))
 (not ($generated@@0 ($generated@@92 ($generated@@461 $generated@@594) $generated@@593))))
 :pattern ( (let (($generated@@594 (type $generated@@593)))
($generated@@92 ($generated@@461 $generated@@594) $generated@@593)))
)))
(assert (forall (($generated@@596 T@U) ) (! (= (type ($generated@@595 $generated@@596)) $generated@@71)
 :pattern ( ($generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@66) (= (type $generated@@598) $generated@@66)) (and (= ($generated@@147 ($generated@@158 $generated@@597 $generated@@598)) $generated@@62) (= ($generated@@595 ($generated@@158 $generated@@597 $generated@@598)) $generated@@64)))
 :pattern ( ($generated@@158 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 Int) ($generated@@600 Int) ) (! (= ($generated@@300 $generated@@599 $generated@@600) (* $generated@@599 $generated@@600))
 :pattern ( ($generated@@300 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@159) (= ($generated@@573 ($generated@@304 $generated@@601)) ($generated@@574 $generated@@601)))
 :pattern ( ($generated@@573 ($generated@@304 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@81) ($generated@@253 $generated@@602 ($generated@@150 0))) (and (= ($generated@@304 ($generated@@360 $generated@@2 $generated@@602)) $generated@@602) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@602) ($generated@@150 0))))
 :pattern ( ($generated@@253 $generated@@602 ($generated@@150 0)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@81) (= (type $generated@@604) $generated@@66)) ($generated@@253 $generated@@603 ($generated@@84 $generated@@604))) (and (= ($generated@@304 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@603)) $generated@@603) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@603) ($generated@@84 $generated@@604))))
 :pattern ( ($generated@@253 $generated@@603 ($generated@@84 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@81) (= (type $generated@@606) $generated@@66)) ($generated@@253 $generated@@605 ($generated@@271 $generated@@606))) (and (= ($generated@@304 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@605)) $generated@@605) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@605) ($generated@@271 $generated@@606))))
 :pattern ( ($generated@@253 $generated@@605 ($generated@@271 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@81) (= (type $generated@@608) $generated@@66)) ($generated@@253 $generated@@607 ($generated@@184 $generated@@608))) (and (= ($generated@@304 ($generated@@360 ($generated@@78 $generated@@81 $generated@@2) $generated@@607)) $generated@@607) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@2) $generated@@607) ($generated@@184 $generated@@608))))
 :pattern ( ($generated@@253 $generated@@607 ($generated@@184 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@81) (= (type $generated@@610) $generated@@66)) ($generated@@253 $generated@@609 ($generated@@532 $generated@@610))) (and (= ($generated@@304 ($generated@@360 ($generated@@293 $generated@@81) $generated@@609)) $generated@@609) ($generated@@83 ($generated@@360 ($generated@@293 $generated@@81) $generated@@609) ($generated@@532 $generated@@610))))
 :pattern ( ($generated@@253 $generated@@609 ($generated@@532 $generated@@610)))
)))
(assert (= ($generated@@147 $generated@@85) $generated@@63))
(assert (= ($generated@@595 $generated@@85) $generated@@65))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@611) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@612) $generated@@66)) (= (type $generated@@613) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@611 ($generated@@184 $generated@@612) $generated@@613) (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@81) (< 0 ($generated ($generated@@92 $generated@@611 $generated@@614)))) ($generated@@279 $generated@@614 $generated@@612 $generated@@613))
 :pattern ( ($generated@@92 $generated@@611 $generated@@614))
))))
 :pattern ( ($generated@@149 $generated@@611 ($generated@@184 $generated@@612) $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@159) (= (type $generated@@616) $generated@@66)) (= (type $generated@@617) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@77 $generated@@617) (and ($generated@@157 $generated@@615) (exists (($generated@@618 T@U) ) (!  (and (= (type $generated@@618) $generated@@66) ($generated@@149 $generated@@615 ($generated@@158 $generated@@616 $generated@@618) $generated@@617))
 :pattern ( ($generated@@149 $generated@@615 ($generated@@158 $generated@@616 $generated@@618) $generated@@617))
))))) ($generated@@279 ($generated@@166 $generated@@615) $generated@@616 $generated@@617))
 :pattern ( ($generated@@279 ($generated@@166 $generated@@615) $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) $generated@@159) (= (type $generated@@620) $generated@@66)) (= (type $generated@@621) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@77 $generated@@621) (and ($generated@@157 $generated@@619) (exists (($generated@@622 T@U) ) (!  (and (= (type $generated@@622) $generated@@66) ($generated@@149 $generated@@619 ($generated@@158 $generated@@622 $generated@@620) $generated@@621))
 :pattern ( ($generated@@149 $generated@@619 ($generated@@158 $generated@@622 $generated@@620) $generated@@621))
))))) ($generated@@279 ($generated@@167 $generated@@619) $generated@@620 $generated@@621))
 :pattern ( ($generated@@279 ($generated@@167 $generated@@619) $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@81) (= (type $generated@@624) $generated@@81)) (= ($generated@@252 ($generated@@76 $generated@@623) ($generated@@76 $generated@@624)) ($generated@@76 ($generated@@252 $generated@@623 $generated@@624))))
 :pattern ( ($generated@@252 ($generated@@76 $generated@@623) ($generated@@76 $generated@@624)))
)))
(assert (forall (($generated@@625 Int) ) (! (= ($generated@@304 ($generated@@8 ($generated@@174 $generated@@625))) ($generated@@76 ($generated@@304 ($generated@@8 $generated@@625))))
 :pattern ( ($generated@@304 ($generated@@8 ($generated@@174 $generated@@625))))
)))
(assert (forall (($generated@@626 T@U) ) (! (= ($generated@@304 ($generated@@76 $generated@@626)) ($generated@@76 ($generated@@304 $generated@@626)))
 :pattern ( ($generated@@304 ($generated@@76 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (! (let (($generated@@628 ($generated@@294 (type $generated@@627))))
 (=> (and (= (type $generated@@627) ($generated@@293 $generated@@628)) (= ($generated@@292 $generated@@627) 0)) (= $generated@@627 ($generated@@291 $generated@@628))))
 :pattern ( ($generated@@292 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (! (let (($generated@@632 (type $generated@@630)))
 (=> (and (and (= (type $generated@@629) ($generated@@78 $generated@@632 $generated@@2)) (= (type $generated@@631) $generated@@2)) (<= 0 ($generated $generated@@631))) (= ($generated@@309 ($generated@@93 $generated@@629 $generated@@630 $generated@@631)) (+ (- ($generated@@309 $generated@@629) ($generated ($generated@@92 $generated@@629 $generated@@630))) ($generated $generated@@631)))))
 :pattern ( ($generated@@309 ($generated@@93 $generated@@629 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@634) $generated@@2)) ($generated@@149 $generated@@634 $generated@@46 $generated@@633))
 :pattern ( ($generated@@149 $generated@@634 $generated@@46 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@636) $generated@@3)) ($generated@@149 $generated@@636 $generated@@47 $generated@@635))
 :pattern ( ($generated@@149 $generated@@636 $generated@@47 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@638) $generated@@4)) ($generated@@149 $generated@@638 $generated@@44 $generated@@637))
 :pattern ( ($generated@@149 $generated@@638 $generated@@44 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@640) $generated@@485)) ($generated@@149 $generated@@640 $generated@@45 $generated@@639))
 :pattern ( ($generated@@149 $generated@@640 $generated@@45 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@642) $generated@@81)) ($generated@@149 $generated@@642 $generated@@48 $generated@@641))
 :pattern ( ($generated@@149 $generated@@642 $generated@@48 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@293 $generated@@81)) (= (type $generated@@644) $generated@@66)) (= ($generated@@83 $generated@@643 ($generated@@532 $generated@@644)) (forall (($generated@@645 Int) ) (!  (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@292 $generated@@643))) ($generated@@253 ($generated@@533 $generated@@643 $generated@@645) $generated@@644))
 :pattern ( ($generated@@533 $generated@@643 $generated@@645))
))))
 :pattern ( ($generated@@83 $generated@@643 ($generated@@532 $generated@@644)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 Int) ) (!  (=> (= (type $generated@@647) ($generated@@293 $generated@@81)) (=> (and (<= 0 $generated@@648) (< $generated@@648 ($generated@@292 $generated@@647))) (< ($generated@@574 ($generated@@360 $generated@@159 ($generated@@533 $generated@@647 $generated@@648))) ($generated@@646 $generated@@647))))
 :pattern ( ($generated@@574 ($generated@@360 $generated@@159 ($generated@@533 $generated@@647 $generated@@648))))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@650) $generated@@66)) (= (type $generated@@651) $generated@@66)) ($generated@@83 $generated@@649 ($generated@@438 $generated@@650 $generated@@651))) (and (and ($generated@@83 ($generated@@317 $generated@@649) ($generated@@84 $generated@@650)) ($generated@@83 ($generated@@368 $generated@@649) ($generated@@84 $generated@@651))) ($generated@@83 ($generated@@412 $generated@@649) ($generated@@84 ($generated@@158 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@83 $generated@@649 ($generated@@438 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@653) $generated@@66)) (= (type $generated@@654) $generated@@66)) ($generated@@83 $generated@@652 ($generated@@446 $generated@@653 $generated@@654))) (and (and ($generated@@83 ($generated@@335 $generated@@652) ($generated@@271 $generated@@653)) ($generated@@83 ($generated@@379 $generated@@652) ($generated@@271 $generated@@654))) ($generated@@83 ($generated@@420 $generated@@652) ($generated@@271 ($generated@@158 $generated@@653 $generated@@654)))))
 :pattern ( ($generated@@83 $generated@@652 ($generated@@446 $generated@@653 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@2) ($generated@@83 $generated@@655 $generated@@46))
 :pattern ( ($generated@@83 $generated@@655 $generated@@46))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@3) ($generated@@83 $generated@@656 $generated@@47))
 :pattern ( ($generated@@83 $generated@@656 $generated@@47))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@4) ($generated@@83 $generated@@657 $generated@@44))
 :pattern ( ($generated@@83 $generated@@657 $generated@@44))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@485) ($generated@@83 $generated@@658 $generated@@45))
 :pattern ( ($generated@@83 $generated@@658 $generated@@45))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@81) ($generated@@83 $generated@@659 $generated@@48))
 :pattern ( ($generated@@83 $generated@@659 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () Int)
(declare-fun $generated@@665 (T@U) Bool)
(assert  (and (and (= (type $generated@@660) ($generated@@191 $generated@@79 $generated@@4)) (= (type $generated@@661) $generated@@79)) (= (type $generated@@662) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@666  (=> (= $generated@@660 ($generated@@190 $generated@@661 $generated@@662 $generated@@60 false)) (=> (and (and ($generated@@149 ($generated@@8 $generated@@663) $generated@@85 $generated@@662) ($generated@@173 $generated@@663)) (and ($generated@@149 ($generated@@8 $generated@@664) $generated@@85 $generated@@662) ($generated@@173 $generated@@664))) (=> (and (and (and ($generated@@149 ($generated@@8 $generated@@664) $generated@@85 $generated@@662) ($generated@@173 $generated@@664)) (and ($generated@@149 ($generated@@8 $generated@@663) $generated@@85 $generated@@662) ($generated@@173 $generated@@663))) (and (and ($generated@@173 $generated@@663) ($generated@@173 $generated@@664)) (and ($generated@@173 $generated@@664) ($generated@@173 $generated@@663)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@86 ($generated@@245 ($generated@@172 $generated@@663) ($generated@@172 $generated@@664)) ($generated@@245 ($generated@@172 $generated@@664) ($generated@@172 $generated@@663)))) (=> ($generated@@86 ($generated@@245 ($generated@@172 $generated@@663) ($generated@@172 $generated@@664)) ($generated@@245 ($generated@@172 $generated@@664) ($generated@@172 $generated@@663))) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@260 $generated@@663 $generated@@664) ($generated@@260 $generated@@664 $generated@@663))))))))))
(let (($generated@@667  (=> (and ($generated@@77 $generated@@662) ($generated@@665 $generated@@662)) (=> (and (and (<= ($generated@@174 1) $generated@@663) (<= ($generated@@174 1) $generated@@664)) (and (= 5 $generated@@74) (= (ControlFlow 0 4) 2))) $generated@@666))))
$generated@@667)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 () Int)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 () T@U)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@T) T@U)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@89 (T@U) Int)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@149 (T@U T@U T@U) Bool)
(declare-fun $generated@@150 (Int) T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@172 (Int) T@U)
(declare-fun $generated@@173 (Int) Bool)
(declare-fun $generated@@174 (Int) Int)
(declare-fun $generated@@175 (Int Int) Bool)
(declare-fun $generated@@176 (Int Int) Bool)
(declare-fun $generated@@177 (T@U Int Int) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) T@U)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@260 (Int Int) Int)
(declare-fun $generated@@261 (Int Int) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@279 (T@U T@U T@U) Bool)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@300 (Int Int) Int)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@309 (T@U) Int)
(declare-fun $generated@@310 (T@T) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@U T@U) T@U)
(declare-fun $generated@@461 (T@T) T@U)
(declare-fun $generated@@485 () T@T)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@533 (T@U Int) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@573 (T@U) Int)
(declare-fun $generated@@574 (T@U) Int)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@646 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@96 $generated@@97)) 11)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@78 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@78 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@78 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@78 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@78 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@69 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@80)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@69 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 14)) (forall (($generated@@140 T@U) ) (! (let (($generated@@141 (type $generated@@140)))
(= (type ($generated@@76 $generated@@140)) $generated@@141))
 :pattern ( ($generated@@76 $generated@@140))
))) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@84 $generated@@142)) $generated@@66)
 :pattern ( ($generated@@84 $generated@@142))
))) (= (type $generated@@85) $generated@@66)) (forall (($generated@@143 T@T) ) (! (= (type ($generated@@87 $generated@@143)) ($generated@@78 $generated@@143 $generated@@4))
 :pattern ( ($generated@@87 $generated@@143))
))))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@145) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 ($generated@@76 $generated@@145)) (and (not (= 3 $generated@@74)) (and (and ($generated@@77 $generated@@144) ($generated@@83 $generated@@145 ($generated@@84 $generated@@85))) (not ($generated@@86 $generated@@145 ($generated@@87 $generated@@81))))))) (and ($generated@@88 ($generated@@76 $generated@@145)) (= ($generated@@75 ($generated@@76 $generated@@145)) (let (($generated@@146 ($generated@@89 ($generated@@76 $generated@@145))))
$generated@@146))))
 :weight 3
 :pattern ( ($generated@@75 ($generated@@76 $generated@@145)) ($generated@@77 $generated@@144))
))))
(assert (forall (($generated@@148 T@U) ) (! (= (type ($generated@@147 $generated@@148)) $generated@@67)
 :pattern ( ($generated@@147 $generated@@148))
)))
(assert (= ($generated@@147 $generated@@44) $generated@@49))
(assert (= ($generated@@147 $generated@@45) $generated@@50))
(assert (= ($generated@@147 $generated@@46) $generated@@51))
(assert (= ($generated@@147 $generated@@47) $generated@@52))
(assert (= ($generated@@147 $generated@@48) $generated@@53))
(assert (forall (($generated@@151 Int) ) (! (= (type ($generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@2) (= (type $generated@@153) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@149 $generated@@152 ($generated@@150 0) $generated@@153))
 :pattern ( ($generated@@149 $generated@@152 ($generated@@150 0) $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@2) (= (type $generated@@155) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@149 $generated@@154 $generated@@85 $generated@@155))
 :pattern ( ($generated@@149 $generated@@154 $generated@@85 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@83 $generated@@156 ($generated@@150 0)))
 :pattern ( ($generated@@83 $generated@@156 ($generated@@150 0)))
)))
(assert  (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@160 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@158 $generated@@160 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@66) (= (type $generated@@163) $generated@@66)) (= (type $generated@@164) $generated@@159)) ($generated@@83 $generated@@164 ($generated@@158 $generated@@162 $generated@@163))) ($generated@@157 $generated@@164))
 :pattern ( ($generated@@157 $generated@@164) ($generated@@83 $generated@@164 ($generated@@158 $generated@@162 $generated@@163)))
)))
(assert  (and (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@81)
 :pattern ( ($generated@@166 $generated@@168))
)) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@81)
 :pattern ( ($generated@@167 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@159) (= (type $generated@@171) $generated@@159)) true) (= ($generated@@165 $generated@@170 $generated@@171)  (and (= ($generated@@166 $generated@@170) ($generated@@166 $generated@@171)) (= ($generated@@167 $generated@@170) ($generated@@167 $generated@@171)))))
 :pattern ( ($generated@@165 $generated@@170 $generated@@171))
)))
(assert  (and (forall (($generated@@178 Int) ) (! (= (type ($generated@@172 $generated@@178)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@172 $generated@@178))
)) (forall (($generated@@179 T@U) ($generated@@180 Int) ($generated@@181 Int) ) (! (= (type ($generated@@177 $generated@@179 $generated@@180 $generated@@181)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@177 $generated@@179 $generated@@180 $generated@@181))
))))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@182 Int) ) (!  (=> (or ($generated@@173 $generated@@182) (and (not (= 2 $generated@@74)) (<= ($generated@@174 1) $generated@@182))) (and (forall (($generated@@183 Int) ) (!  (=> (<= ($generated@@174 1) $generated@@183) (=> (<= $generated@@183 $generated@@182) ($generated@@176 $generated@@183 $generated@@182)))
 :pattern ( ($generated@@175 $generated@@183 $generated@@182))
)) (= ($generated@@172 $generated@@182) ($generated@@177 $generated@@85 $generated@@182 $generated@@182))))
 :pattern ( ($generated@@172 $generated@@182))
))))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@66)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@188) $generated@@66)) ($generated@@83 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@83 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@195 $generated@@196)) 16)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@193 ($generated@@191 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@191 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@189 $generated@@201 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@189 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 (type $generated@@208)))
(let (($generated@@210 (type $generated@@206)))
(= (type ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@191 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@193 (type $generated@@211))))
 (=> (= (type $generated@@214) $generated@@215) (= ($generated@@189 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@212 $generated@@213) $generated@@214)))
 :weight 0
))) (and (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@189 ($generated@@194 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@189 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@189 ($generated@@194 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@189 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or true (= ($generated@@189 ($generated@@194 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@189 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@191 $generated@@79 $generated@@4))
 :pattern ( ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@69 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@79) (= (type $generated@@239) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@240) ($generated@@68 $generated@@4))) (= (type $generated@@242) $generated@@79)) (= (type $generated@@243) ($generated@@68 $generated@@244))) (= ($generated@@0 ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@90 (type $generated@@246))))
(= (type ($generated@@245 $generated@@246 $generated@@247)) ($generated@@78 $generated@@248 $generated@@4)))
 :pattern ( ($generated@@245 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@90 (type $generated@@249))))
 (=> (and (= (type $generated@@249) ($generated@@78 $generated@@251 $generated@@4)) (= (type $generated@@250) ($generated@@78 $generated@@251 $generated@@4))) (= ($generated@@245 ($generated@@245 $generated@@249 $generated@@250) $generated@@250) ($generated@@245 $generated@@249 $generated@@250))))
 :pattern ( ($generated@@245 ($generated@@245 $generated@@249 $generated@@250) $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (! (= (type ($generated@@252 $generated@@254 $generated@@255)) $generated@@159)
 :pattern ( ($generated@@252 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) $generated@@66) (= (type $generated@@257) $generated@@66)) (= (type $generated@@258) $generated@@81)) (= (type $generated@@259) $generated@@81)) (= ($generated@@83 ($generated@@252 $generated@@258 $generated@@259) ($generated@@158 $generated@@256 $generated@@257))  (and ($generated@@253 $generated@@258 $generated@@256) ($generated@@253 $generated@@259 $generated@@257))))
 :pattern ( ($generated@@83 ($generated@@252 $generated@@258 $generated@@259) ($generated@@158 $generated@@256 $generated@@257)))
)))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@262 Int) ($generated@@263 Int) ) (!  (=> (or ($generated@@261 $generated@@262 $generated@@263) (and (not (= 4 $generated@@74)) (and (<= ($generated@@174 1) $generated@@262) (<= ($generated@@174 1) $generated@@263)))) (and (and (and ($generated@@173 $generated@@262) ($generated@@173 $generated@@263)) (let (($generated@@264 ($generated@@245 ($generated@@172 $generated@@262) ($generated@@172 $generated@@263))))
($generated@@82 $generated@@264))) (= ($generated@@260 $generated@@262 $generated@@263) (let (($generated@@265 ($generated@@245 ($generated@@172 $generated@@262) ($generated@@172 $generated@@263))))
($generated@@75 $generated@@265)))))
 :pattern ( ($generated@@260 $generated@@262 $generated@@263))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@159) (= (type $generated@@267) $generated@@159)) (= ($generated@@165 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@165 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@269) $generated@@66)) (= ($generated@@83 $generated@@268 ($generated@@84 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@81) ($generated@@0 ($generated@@92 $generated@@268 $generated@@270))) ($generated@@253 $generated@@270 $generated@@269))
 :pattern ( ($generated@@92 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@83 $generated@@268 ($generated@@84 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@66)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@274) $generated@@66)) (= ($generated@@83 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@81) ($generated@@0 ($generated@@92 $generated@@273 $generated@@275))) ($generated@@253 $generated@@275 $generated@@274))
 :pattern ( ($generated@@92 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@83 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@276 Int) ) (! (= ($generated@@174 $generated@@276) $generated@@276)
 :pattern ( ($generated@@174 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (! (= ($generated@@76 $generated@@277) $generated@@277)
 :pattern ( ($generated@@76 $generated@@277))
)))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) ($generated@@78 $generated@@81 $generated@@4)) (or ($generated@@82 $generated@@278) (and (not (= 3 $generated@@74)) (and ($generated@@83 $generated@@278 ($generated@@84 $generated@@85)) (not ($generated@@86 $generated@@278 ($generated@@87 $generated@@81))))))) (<= ($generated@@174 1) ($generated@@75 $generated@@278)))
 :pattern ( ($generated@@75 $generated@@278))
))))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) $generated@@66) (= (type $generated@@281) $generated@@66)) (= (type $generated@@282) $generated@@81)) (= (type $generated@@283) $generated@@81)) (= (type $generated@@284) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@77 $generated@@284)) (= ($generated@@149 ($generated@@252 $generated@@282 $generated@@283) ($generated@@158 $generated@@280 $generated@@281) $generated@@284)  (and ($generated@@279 $generated@@282 $generated@@280 $generated@@284) ($generated@@279 $generated@@283 $generated@@281 $generated@@284))))
 :pattern ( ($generated@@149 ($generated@@252 $generated@@282 $generated@@283) ($generated@@158 $generated@@280 $generated@@281) $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@70)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@159) (= ($generated@@157 $generated@@287) (= ($generated@@285 $generated@@287) $generated@@61)))
 :pattern ( ($generated@@157 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@159) ($generated@@157 $generated@@288)) (exists (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (and (and (= (type $generated@@289) $generated@@81) (= (type $generated@@290) $generated@@81)) (= $generated@@288 ($generated@@252 $generated@@289 $generated@@290)))
 :no-pattern (type $generated@@289)
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
)))
 :pattern ( ($generated@@157 $generated@@288))
)))
(assert  (and (and (forall (($generated@@295 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@295)) 17)) (forall (($generated@@296 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@293 $generated@@296))
))) (forall (($generated@@297 T@T) ) (! (= (type ($generated@@291 $generated@@297)) ($generated@@293 $generated@@297))
 :pattern ( ($generated@@291 $generated@@297))
))))
(assert (forall (($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@298)) 0)
 :pattern ( ($generated@@291 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@2) (= ($generated@@83 $generated@@299 $generated@@85) (<= ($generated@@174 1) ($generated $generated@@299))))
 :pattern ( ($generated@@83 $generated@@299 $generated@@85))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@301 Int) ($generated@@302 Int) ) (!  (=> (or ($generated@@176 ($generated@@174 $generated@@301) ($generated@@174 $generated@@302)) (and (not (= 1 $generated@@74)) (and (<= ($generated@@174 1) $generated@@301) (<= ($generated@@174 1) $generated@@302)))) (= ($generated@@175 ($generated@@174 $generated@@301) ($generated@@174 $generated@@302)) (exists (($generated@@303 Int) ) (! (= ($generated@@300 ($generated@@174 $generated@@301) $generated@@303) ($generated@@174 $generated@@302))
 :pattern ( ($generated@@300 $generated@@301 $generated@@303))
))))
 :weight 3
 :pattern ( ($generated@@175 ($generated@@174 $generated@@301) ($generated@@174 $generated@@302)))
))))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@81)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@66) (= (type $generated@@308) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@279 ($generated@@304 $generated@@306) $generated@@307 $generated@@308) ($generated@@149 $generated@@306 $generated@@307 $generated@@308)))
 :pattern ( ($generated@@279 ($generated@@304 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@311 T@T) ) (! (= (type ($generated@@310 $generated@@311)) ($generated@@78 $generated@@311 $generated@@2))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@90 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@78 $generated@@313 $generated@@2)) (and (= (= ($generated@@309 $generated@@312) 0) (= $generated@@312 ($generated@@310 $generated@@313))) (=> (not (= ($generated@@309 $generated@@312) 0)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) (< 0 ($generated ($generated@@92 $generated@@312 $generated@@314))))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) ($generated@@78 $generated@@81 $generated@@4)) ($generated@@88 $generated@@315)) (and ($generated@@0 ($generated@@92 $generated@@315 ($generated@@304 ($generated@@8 ($generated@@89 $generated@@315))))) (forall (($generated@@316 T@U) ) (!  (=> (and (and (= (type $generated@@316) $generated@@2) true) ($generated@@0 ($generated@@92 $generated@@315 ($generated@@304 $generated@@316)))) (<= ($generated $generated@@316) ($generated@@89 $generated@@315)))
 :pattern ( ($generated@@92 $generated@@315 ($generated@@304 $generated@@316)))
))))
 :pattern ( ($generated@@89 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 18)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@78 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@92 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@92 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 19)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@92 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@92 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@90 (type $generated@@353))))
 (=> (and (= (type $generated@@353) ($generated@@78 $generated@@355 $generated@@4)) (= (type $generated@@354) ($generated@@78 $generated@@355 $generated@@4))) (= ($generated@@86 $generated@@353 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (= ($generated@@0 ($generated@@92 $generated@@353 $generated@@356)) ($generated@@0 ($generated@@92 $generated@@354 $generated@@356))))
 :pattern ( ($generated@@92 $generated@@353 $generated@@356))
 :pattern ( ($generated@@92 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@86 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@90 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@78 $generated@@358 $generated@@2)) (= ($generated@@185 $generated@@357) (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@358) (and (<= 0 ($generated ($generated@@92 $generated@@357 $generated@@359))) (<= ($generated ($generated@@92 $generated@@357 $generated@@359)) ($generated@@309 $generated@@357))))
 :pattern ( ($generated@@92 $generated@@357 $generated@@359))
)))))
 :pattern ( ($generated@@185 $generated@@357))
)))
(assert (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@360 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@81) ($generated@@253 $generated@@363 $generated@@85)) (and (= ($generated@@304 ($generated@@360 $generated@@2 $generated@@363)) $generated@@363) ($generated@@83 ($generated@@360 $generated@@2 $generated@@363) $generated@@85)))
 :pattern ( ($generated@@253 $generated@@363 $generated@@85))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@321 (type $generated@@364))))
(let (($generated@@366 ($generated@@320 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@319 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@318 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@92 ($generated@@317 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@317 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@321 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@78 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@321 (type $generated@@371))))
(let (($generated@@373 ($generated@@320 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@319 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@318 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@92 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@339 (type $generated@@375))))
(let (($generated@@377 ($generated@@338 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@337 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@336 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@92 ($generated@@335 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@335 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@339 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@78 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@339 (type $generated@@382))))
(let (($generated@@384 ($generated@@338 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@337 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@336 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@92 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@386 Int) ($generated@@387 Int) ) (!  (=> (or ($generated@@261 $generated@@386 $generated@@387) (and (not (= 4 $generated@@74)) (and (<= ($generated@@174 1) $generated@@386) (<= ($generated@@174 1) $generated@@387)))) (<= ($generated@@174 1) ($generated@@260 $generated@@386 $generated@@387)))
 :pattern ( ($generated@@260 $generated@@386 $generated@@387))
))))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@388 Int) ) (!  (=> (or ($generated@@173 ($generated@@174 $generated@@388)) (and (not (= 2 $generated@@74)) (<= ($generated@@174 1) $generated@@388))) (and (forall (($generated@@389 Int) ) (!  (=> (<= ($generated@@174 1) $generated@@389) (=> (<= $generated@@389 ($generated@@174 $generated@@388)) ($generated@@176 $generated@@389 ($generated@@174 $generated@@388))))
 :pattern ( ($generated@@175 $generated@@389 $generated@@388))
)) (= ($generated@@172 ($generated@@174 $generated@@388)) ($generated@@177 $generated@@85 ($generated@@174 $generated@@388) ($generated@@174 $generated@@388)))))
 :weight 3
 :pattern ( ($generated@@172 ($generated@@174 $generated@@388)))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@391) $generated@@66)) (= ($generated@@83 $generated@@390 ($generated@@184 $generated@@391)) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@81) (< 0 ($generated ($generated@@92 $generated@@390 $generated@@392)))) ($generated@@253 $generated@@392 $generated@@391))
 :pattern ( ($generated@@92 $generated@@390 $generated@@392))
))))
 :pattern ( ($generated@@83 $generated@@390 ($generated@@184 $generated@@391)))
)))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@393 Int) ) (!  (=> (or ($generated@@173 $generated@@393) (and (not (= 2 $generated@@74)) (<= ($generated@@174 1) $generated@@393))) ($generated@@83 ($generated@@172 $generated@@393) ($generated@@84 $generated@@85)))
 :pattern ( ($generated@@172 $generated@@393))
))))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@394 Int) ($generated@@395 Int) ) (!  (=> (or ($generated@@261 ($generated@@174 $generated@@394) ($generated@@174 $generated@@395)) (and (not (= 4 $generated@@74)) (and (<= ($generated@@174 1) $generated@@394) (<= ($generated@@174 1) $generated@@395)))) (and (and (and ($generated@@173 ($generated@@174 $generated@@394)) ($generated@@173 ($generated@@174 $generated@@395))) (let (($generated@@396 ($generated@@245 ($generated@@172 ($generated@@174 $generated@@394)) ($generated@@172 ($generated@@174 $generated@@395)))))
($generated@@82 $generated@@396))) (= ($generated@@260 ($generated@@174 $generated@@394) ($generated@@174 $generated@@395)) (let (($generated@@397 ($generated@@245 ($generated@@172 ($generated@@174 $generated@@394)) ($generated@@172 ($generated@@174 $generated@@395)))))
($generated@@75 $generated@@397)))))
 :weight 3
 :pattern ( ($generated@@260 ($generated@@174 $generated@@394) ($generated@@174 $generated@@395)))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
 (=> (and (= (type $generated@@398) ($generated@@78 $generated@@401 $generated@@4)) (= (type $generated@@399) ($generated@@78 $generated@@401 $generated@@4))) (= ($generated@@0 ($generated@@92 ($generated@@245 $generated@@398 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@92 $generated@@398 $generated@@400)) ($generated@@0 ($generated@@92 $generated@@399 $generated@@400))))))
 :pattern ( ($generated@@92 ($generated@@245 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@402 ($generated@@84 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@81) ($generated@@0 ($generated@@92 $generated@@402 $generated@@405))) ($generated@@279 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@92 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@149 $generated@@402 ($generated@@84 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@407) $generated@@66)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@406 ($generated@@271 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@81) ($generated@@0 ($generated@@92 $generated@@406 $generated@@409))) ($generated@@279 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@92 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@149 $generated@@406 ($generated@@271 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(= ($generated ($generated@@92 ($generated@@310 $generated@@411) $generated@@410)) 0))
 :pattern ( (let (($generated@@411 (type $generated@@410)))
($generated@@92 ($generated@@310 $generated@@411) $generated@@410)))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@321 (type $generated@@415))))
(let (($generated@@417 ($generated@@320 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@78 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@419) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@92 ($generated@@317 $generated@@418) ($generated@@166 ($generated@@360 $generated@@159 $generated@@419)))) (= ($generated@@92 ($generated@@413 $generated@@418) ($generated@@166 ($generated@@360 $generated@@159 $generated@@419))) ($generated@@167 ($generated@@360 $generated@@159 $generated@@419))))))
 :pattern ( ($generated@@92 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert  (and (forall (($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@422)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@420 $generated@@422))
)) (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@339 (type $generated@@423))))
(let (($generated@@425 ($generated@@338 (type $generated@@423))))
(= (type ($generated@@421 $generated@@423)) ($generated@@78 $generated@@425 $generated@@424))))
 :pattern ( ($generated@@421 $generated@@423))
))))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@427) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@420 $generated@@426) $generated@@427))  (and ($generated@@0 ($generated@@92 ($generated@@335 $generated@@426) ($generated@@166 ($generated@@360 $generated@@159 $generated@@427)))) (= ($generated@@92 ($generated@@421 $generated@@426) ($generated@@166 ($generated@@360 $generated@@159 $generated@@427))) ($generated@@167 ($generated@@360 $generated@@159 $generated@@427))))))
 :pattern ( ($generated@@92 ($generated@@420 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
(let (($generated@@431 ($generated@@320 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@319 $generated@@431 $generated@@430)) (= ($generated@@0 ($generated@@92 ($generated@@368 $generated@@428) $generated@@429)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) (and ($generated@@0 ($generated@@92 ($generated@@317 $generated@@428) $generated@@432)) (= $generated@@429 ($generated@@92 ($generated@@413 $generated@@428) $generated@@432))))
 :pattern ( ($generated@@92 ($generated@@317 $generated@@428) $generated@@432))
 :pattern ( ($generated@@92 ($generated@@413 $generated@@428) $generated@@432))
))))))
 :pattern ( ($generated@@92 ($generated@@368 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(let (($generated@@436 ($generated@@338 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@337 $generated@@436 $generated@@435)) (= ($generated@@0 ($generated@@92 ($generated@@379 $generated@@433) $generated@@434)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@436) (and ($generated@@0 ($generated@@92 ($generated@@335 $generated@@433) $generated@@437)) (= $generated@@434 ($generated@@92 ($generated@@421 $generated@@433) $generated@@437))))
 :pattern ( ($generated@@92 ($generated@@335 $generated@@433) $generated@@437))
 :pattern ( ($generated@@92 ($generated@@421 $generated@@433) $generated@@437))
))))))
 :pattern ( ($generated@@92 ($generated@@379 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@66)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@442) $generated@@66)) (= (type $generated@@443) $generated@@66)) (= (type $generated@@444) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@317 $generated@@441) $generated@@445))) (and ($generated@@279 ($generated@@92 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@279 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@92 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@92 ($generated@@317 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@149 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@447 $generated@@448)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (= (type $generated@@449) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@450) $generated@@66)) (= (type $generated@@451) $generated@@66)) (= (type $generated@@452) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452) (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@335 $generated@@449) $generated@@453))) (and ($generated@@279 ($generated@@92 ($generated@@421 $generated@@449) $generated@@453) $generated@@451 $generated@@452) ($generated@@279 $generated@@453 $generated@@450 $generated@@452)))
 :pattern ( ($generated@@92 ($generated@@421 $generated@@449) $generated@@453))
 :pattern ( ($generated@@92 ($generated@@335 $generated@@449) $generated@@453))
))))
 :pattern ( ($generated@@149 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@90 (type $generated@@454))))
 (=> (and (and (= (type $generated@@454) ($generated@@78 $generated@@456 $generated@@4)) (= (type $generated@@455) ($generated@@78 $generated@@456 $generated@@4))) ($generated@@86 $generated@@454 $generated@@455)) (= $generated@@454 $generated@@455)))
 :pattern ( ($generated@@86 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 Int) ($generated@@459 Int) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@460) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@177 $generated@@457 $generated@@458 $generated@@459) $generated@@460))  (and ($generated@@253 $generated@@460 $generated@@457) (and (<= ($generated ($generated@@360 $generated@@2 $generated@@460)) $generated@@458) ($generated@@175 ($generated ($generated@@360 $generated@@2 $generated@@460)) $generated@@459)))))
 :pattern ( ($generated@@92 ($generated@@177 $generated@@457 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@462 T@T) ) (! (= (type ($generated@@461 $generated@@462)) ($generated@@78 $generated@@462 $generated@@4))
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@339 (type $generated@@463))))
(let (($generated@@465 ($generated@@338 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@337 $generated@@465 $generated@@464)) (= (= $generated@@463 ($generated@@336 $generated@@465 $generated@@464)) (= ($generated@@335 $generated@@463) ($generated@@461 $generated@@465))))))
 :pattern ( ($generated@@335 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@339 (type $generated@@466))))
(let (($generated@@468 ($generated@@338 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@337 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@336 $generated@@468 $generated@@467)) (= ($generated@@379 $generated@@466) ($generated@@461 $generated@@467))))))
 :pattern ( ($generated@@379 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@339 (type $generated@@469))))
(let (($generated@@471 ($generated@@338 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@337 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@336 $generated@@471 $generated@@470)) (= ($generated@@420 $generated@@469) ($generated@@461 $generated@@81))))))
 :pattern ( ($generated@@420 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@321 (type $generated@@472))))
(let (($generated@@474 ($generated@@320 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@319 $generated@@474 $generated@@473)) (or (= $generated@@472 ($generated@@318 $generated@@474 $generated@@473)) (exists (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (and (and (= (type $generated@@475) $generated@@81) (= (type $generated@@476) $generated@@81)) ($generated@@0 ($generated@@92 ($generated@@412 $generated@@472) ($generated@@304 ($generated@@252 $generated@@475 $generated@@476)))))
 :no-pattern (type $generated@@475)
 :no-pattern (type $generated@@476)
 :no-pattern ($generated $generated@@475)
 :no-pattern ($generated@@0 $generated@@475)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
))))))
 :pattern ( ($generated@@412 $generated@@472))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@339 (type $generated@@477))))
(let (($generated@@479 ($generated@@338 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@337 $generated@@479 $generated@@478)) (or (= $generated@@477 ($generated@@336 $generated@@479 $generated@@478)) (exists (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (and (and (= (type $generated@@480) $generated@@81) (= (type $generated@@481) $generated@@81)) ($generated@@0 ($generated@@92 ($generated@@420 $generated@@477) ($generated@@304 ($generated@@252 $generated@@480 $generated@@481)))))
 :no-pattern (type $generated@@480)
 :no-pattern (type $generated@@481)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
))))))
 :pattern ( ($generated@@420 $generated@@477))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@81) ($generated@@253 $generated@@482 $generated@@46)) (and (= ($generated@@304 ($generated@@360 $generated@@2 $generated@@482)) $generated@@482) ($generated@@83 ($generated@@360 $generated@@2 $generated@@482) $generated@@46)))
 :pattern ( ($generated@@253 $generated@@482 $generated@@46))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@81) ($generated@@253 $generated@@483 $generated@@47)) (and (= ($generated@@304 ($generated@@360 $generated@@3 $generated@@483)) $generated@@483) ($generated@@83 ($generated@@360 $generated@@3 $generated@@483) $generated@@47)))
 :pattern ( ($generated@@253 $generated@@483 $generated@@47))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@81) ($generated@@253 $generated@@484 $generated@@44)) (and (= ($generated@@304 ($generated@@360 $generated@@4 $generated@@484)) $generated@@484) ($generated@@83 ($generated@@360 $generated@@4 $generated@@484) $generated@@44)))
 :pattern ( ($generated@@253 $generated@@484 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@485) 20))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@81) ($generated@@253 $generated@@486 $generated@@45)) (and (= ($generated@@304 ($generated@@360 $generated@@485 $generated@@486)) $generated@@486) ($generated@@83 ($generated@@360 $generated@@485 $generated@@486) $generated@@45)))
 :pattern ( ($generated@@253 $generated@@486 $generated@@45))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@66) (= ($generated@@253 ($generated@@304 $generated@@487) $generated@@488) ($generated@@83 $generated@@487 $generated@@488)))
 :pattern ( ($generated@@253 ($generated@@304 $generated@@487) $generated@@488))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@489 Int) ($generated@@490 Int) ) (!  (=> (or ($generated@@176 $generated@@489 $generated@@490) (and (not (= 1 $generated@@74)) (and (<= ($generated@@174 1) $generated@@489) (<= ($generated@@174 1) $generated@@490)))) (= ($generated@@175 $generated@@489 $generated@@490) (exists (($generated@@491 Int) ) (! (= ($generated@@300 $generated@@489 $generated@@491) $generated@@490)
 :pattern ( ($generated@@300 $generated@@489 $generated@@491))
))))
 :pattern ( ($generated@@175 $generated@@489 $generated@@490))
))))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@90 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@78 $generated@@493 $generated@@2)) (<= 0 ($generated@@309 $generated@@492))))
 :pattern ( ($generated@@309 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@294 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@293 $generated@@495)) (<= 0 ($generated@@292 $generated@@494))))
 :pattern ( ($generated@@292 $generated@@494))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@496 Int) ($generated@@497 Int) ) (!  (=> (or ($generated@@176 $generated@@496 $generated@@497) (and (not (= 1 $generated@@74)) (and (<= ($generated@@174 1) $generated@@496) (<= ($generated@@174 1) $generated@@497)))) true)
 :pattern ( ($generated@@175 $generated@@496 $generated@@497))
))))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@66) (= (type $generated@@501) $generated@@66)) (= ($generated@@498 ($generated@@438 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@438 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@66)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@66) (= (type $generated@@505) $generated@@66)) (= ($generated@@502 ($generated@@438 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@438 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@66) (= (type $generated@@507) $generated@@66)) (= ($generated@@147 ($generated@@438 $generated@@506 $generated@@507)) $generated@@58))
 :pattern ( ($generated@@438 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@66)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@66) (= (type $generated@@511) $generated@@66)) (= ($generated@@508 ($generated@@446 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@446 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@66)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@66) (= (type $generated@@515) $generated@@66)) (= ($generated@@512 ($generated@@446 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@446 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@66) (= (type $generated@@517) $generated@@66)) (= ($generated@@147 ($generated@@446 $generated@@516 $generated@@517)) $generated@@59))
 :pattern ( ($generated@@446 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@81) (= (type $generated@@519) $generated@@81)) (= ($generated@@285 ($generated@@252 $generated@@518 $generated@@519)) $generated@@61))
 :pattern ( ($generated@@252 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@66)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@66) (= (type $generated@@523) $generated@@66)) (= ($generated@@520 ($generated@@158 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@158 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@66)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= ($generated@@524 ($generated@@158 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@158 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@81) (= (type $generated@@529) $generated@@81)) (= ($generated@@166 ($generated@@252 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@252 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@81) (= (type $generated@@531) $generated@@81)) (= ($generated@@167 ($generated@@252 $generated@@530 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@252 $generated@@530 $generated@@531))
)))
(assert  (and (forall (($generated@@534 T@U) ) (! (= (type ($generated@@532 $generated@@534)) $generated@@66)
 :pattern ( ($generated@@532 $generated@@534))
)) (forall (($generated@@535 T@U) ($generated@@536 Int) ) (! (let (($generated@@537 ($generated@@294 (type $generated@@535))))
(= (type ($generated@@533 $generated@@535 $generated@@536)) $generated@@537))
 :pattern ( ($generated@@533 $generated@@535 $generated@@536))
))))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@293 $generated@@81)) (= (type $generated@@539) $generated@@66)) (= (type $generated@@540) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@538 ($generated@@532 $generated@@539) $generated@@540) (forall (($generated@@541 Int) ) (!  (=> (and (<= 0 $generated@@541) (< $generated@@541 ($generated@@292 $generated@@538))) ($generated@@279 ($generated@@533 $generated@@538 $generated@@541) $generated@@539 $generated@@540))
 :pattern ( ($generated@@533 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@149 $generated@@538 ($generated@@532 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@543 Int) ) (! (= ($generated@@542 ($generated@@150 $generated@@543)) $generated@@543)
 :pattern ( ($generated@@150 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@66)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@66) (= ($generated@@544 ($generated@@84 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@84 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@66) (= ($generated@@147 ($generated@@84 $generated@@547)) $generated@@54))
 :pattern ( ($generated@@84 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@66)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@66) (= ($generated@@548 ($generated@@271 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@271 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@66) (= ($generated@@147 ($generated@@271 $generated@@551)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@66)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@66) (= ($generated@@552 ($generated@@184 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@184 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@66) (= ($generated@@147 ($generated@@184 $generated@@555)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@66)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@66) (= ($generated@@556 ($generated@@532 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@532 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@66) (= ($generated@@147 ($generated@@532 $generated@@559)) $generated@@57))
 :pattern ( ($generated@@532 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
(= ($generated@@360 $generated@@561 ($generated@@304 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@304 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@563) $generated@@66)) (= (type $generated@@564) $generated@@66)) (= ($generated@@83 $generated@@562 ($generated@@438 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@317 $generated@@562) $generated@@565))) (and ($generated@@253 ($generated@@92 ($generated@@413 $generated@@562) $generated@@565) $generated@@564) ($generated@@253 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@92 ($generated@@413 $generated@@562) $generated@@565))
 :pattern ( ($generated@@92 ($generated@@317 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@83 $generated@@562 ($generated@@438 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@567) $generated@@66)) (= (type $generated@@568) $generated@@66)) (= ($generated@@83 $generated@@566 ($generated@@446 $generated@@567 $generated@@568)) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@335 $generated@@566) $generated@@569))) (and ($generated@@253 ($generated@@92 ($generated@@421 $generated@@566) $generated@@569) $generated@@568) ($generated@@253 $generated@@569 $generated@@567)))
 :pattern ( ($generated@@92 ($generated@@421 $generated@@566) $generated@@569))
 :pattern ( ($generated@@92 ($generated@@335 $generated@@566) $generated@@569))
))))
 :pattern ( ($generated@@83 $generated@@566 ($generated@@446 $generated@@567 $generated@@568)))
)))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@571) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 $generated@@571) (and (not (= 3 $generated@@74)) (and (and ($generated@@77 $generated@@570) ($generated@@83 $generated@@571 ($generated@@84 $generated@@85))) (not ($generated@@86 $generated@@571 ($generated@@87 $generated@@81))))))) (and ($generated@@88 $generated@@571) (= ($generated@@75 $generated@@571) (let (($generated@@572 ($generated@@89 $generated@@571)))
$generated@@572))))
 :pattern ( ($generated@@75 $generated@@571) ($generated@@77 $generated@@570))
))))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@81) (= (type $generated@@576) $generated@@81)) (< ($generated@@573 $generated@@575) ($generated@@574 ($generated@@252 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@252 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@81) (= (type $generated@@578) $generated@@81)) (< ($generated@@573 $generated@@578) ($generated@@574 ($generated@@252 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@252 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@90 (type $generated@@579))))
 (=> (and (= (type $generated@@579) ($generated@@78 $generated@@581 $generated@@4)) (= (type $generated@@580) ($generated@@78 $generated@@581 $generated@@4))) (= ($generated@@245 $generated@@579 ($generated@@245 $generated@@579 $generated@@580)) ($generated@@245 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@245 $generated@@579 ($generated@@245 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@81) (= (type $generated@@583) $generated@@66)) (= (type $generated@@584) $generated@@66)) ($generated@@253 $generated@@582 ($generated@@438 $generated@@583 $generated@@584))) (and (= ($generated@@304 ($generated@@360 ($generated@@319 $generated@@81 $generated@@81) $generated@@582)) $generated@@582) ($generated@@83 ($generated@@360 ($generated@@319 $generated@@81 $generated@@81) $generated@@582) ($generated@@438 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@253 $generated@@582 ($generated@@438 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@81) (= (type $generated@@586) $generated@@66)) (= (type $generated@@587) $generated@@66)) ($generated@@253 $generated@@585 ($generated@@446 $generated@@586 $generated@@587))) (and (= ($generated@@304 ($generated@@360 ($generated@@337 $generated@@81 $generated@@81) $generated@@585)) $generated@@585) ($generated@@83 ($generated@@360 ($generated@@337 $generated@@81 $generated@@81) $generated@@585) ($generated@@446 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@253 $generated@@585 ($generated@@446 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@66) (= (type $generated@@589) $generated@@66)) (= (type $generated@@590) $generated@@81)) ($generated@@253 $generated@@590 ($generated@@158 $generated@@588 $generated@@589))) (and (= ($generated@@304 ($generated@@360 $generated@@159 $generated@@590)) $generated@@590) ($generated@@83 ($generated@@360 $generated@@159 $generated@@590) ($generated@@158 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@253 $generated@@590 ($generated@@158 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@591)))
 (not ($generated@@0 ($generated@@92 ($generated@@87 $generated@@592) $generated@@591))))
 :pattern ( (let (($generated@@592 (type $generated@@591)))
($generated@@92 ($generated@@87 $generated@@592) $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@593)))
 (not ($generated@@0 ($generated@@92 ($generated@@461 $generated@@594) $generated@@593))))
 :pattern ( (let (($generated@@594 (type $generated@@593)))
($generated@@92 ($generated@@461 $generated@@594) $generated@@593)))
)))
(assert (forall (($generated@@596 T@U) ) (! (= (type ($generated@@595 $generated@@596)) $generated@@71)
 :pattern ( ($generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@66) (= (type $generated@@598) $generated@@66)) (and (= ($generated@@147 ($generated@@158 $generated@@597 $generated@@598)) $generated@@62) (= ($generated@@595 ($generated@@158 $generated@@597 $generated@@598)) $generated@@64)))
 :pattern ( ($generated@@158 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 Int) ($generated@@600 Int) ) (! (= ($generated@@300 $generated@@599 $generated@@600) (* $generated@@599 $generated@@600))
 :pattern ( ($generated@@300 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@159) (= ($generated@@573 ($generated@@304 $generated@@601)) ($generated@@574 $generated@@601)))
 :pattern ( ($generated@@573 ($generated@@304 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@81) ($generated@@253 $generated@@602 ($generated@@150 0))) (and (= ($generated@@304 ($generated@@360 $generated@@2 $generated@@602)) $generated@@602) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@602) ($generated@@150 0))))
 :pattern ( ($generated@@253 $generated@@602 ($generated@@150 0)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@81) (= (type $generated@@604) $generated@@66)) ($generated@@253 $generated@@603 ($generated@@84 $generated@@604))) (and (= ($generated@@304 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@603)) $generated@@603) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@603) ($generated@@84 $generated@@604))))
 :pattern ( ($generated@@253 $generated@@603 ($generated@@84 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@81) (= (type $generated@@606) $generated@@66)) ($generated@@253 $generated@@605 ($generated@@271 $generated@@606))) (and (= ($generated@@304 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@605)) $generated@@605) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@605) ($generated@@271 $generated@@606))))
 :pattern ( ($generated@@253 $generated@@605 ($generated@@271 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@81) (= (type $generated@@608) $generated@@66)) ($generated@@253 $generated@@607 ($generated@@184 $generated@@608))) (and (= ($generated@@304 ($generated@@360 ($generated@@78 $generated@@81 $generated@@2) $generated@@607)) $generated@@607) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@2) $generated@@607) ($generated@@184 $generated@@608))))
 :pattern ( ($generated@@253 $generated@@607 ($generated@@184 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@81) (= (type $generated@@610) $generated@@66)) ($generated@@253 $generated@@609 ($generated@@532 $generated@@610))) (and (= ($generated@@304 ($generated@@360 ($generated@@293 $generated@@81) $generated@@609)) $generated@@609) ($generated@@83 ($generated@@360 ($generated@@293 $generated@@81) $generated@@609) ($generated@@532 $generated@@610))))
 :pattern ( ($generated@@253 $generated@@609 ($generated@@532 $generated@@610)))
)))
(assert (= ($generated@@147 $generated@@85) $generated@@63))
(assert (= ($generated@@595 $generated@@85) $generated@@65))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@611) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@612) $generated@@66)) (= (type $generated@@613) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@611 ($generated@@184 $generated@@612) $generated@@613) (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@81) (< 0 ($generated ($generated@@92 $generated@@611 $generated@@614)))) ($generated@@279 $generated@@614 $generated@@612 $generated@@613))
 :pattern ( ($generated@@92 $generated@@611 $generated@@614))
))))
 :pattern ( ($generated@@149 $generated@@611 ($generated@@184 $generated@@612) $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@159) (= (type $generated@@616) $generated@@66)) (= (type $generated@@617) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@77 $generated@@617) (and ($generated@@157 $generated@@615) (exists (($generated@@618 T@U) ) (!  (and (= (type $generated@@618) $generated@@66) ($generated@@149 $generated@@615 ($generated@@158 $generated@@616 $generated@@618) $generated@@617))
 :pattern ( ($generated@@149 $generated@@615 ($generated@@158 $generated@@616 $generated@@618) $generated@@617))
))))) ($generated@@279 ($generated@@166 $generated@@615) $generated@@616 $generated@@617))
 :pattern ( ($generated@@279 ($generated@@166 $generated@@615) $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) $generated@@159) (= (type $generated@@620) $generated@@66)) (= (type $generated@@621) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@77 $generated@@621) (and ($generated@@157 $generated@@619) (exists (($generated@@622 T@U) ) (!  (and (= (type $generated@@622) $generated@@66) ($generated@@149 $generated@@619 ($generated@@158 $generated@@622 $generated@@620) $generated@@621))
 :pattern ( ($generated@@149 $generated@@619 ($generated@@158 $generated@@622 $generated@@620) $generated@@621))
))))) ($generated@@279 ($generated@@167 $generated@@619) $generated@@620 $generated@@621))
 :pattern ( ($generated@@279 ($generated@@167 $generated@@619) $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@81) (= (type $generated@@624) $generated@@81)) (= ($generated@@252 ($generated@@76 $generated@@623) ($generated@@76 $generated@@624)) ($generated@@76 ($generated@@252 $generated@@623 $generated@@624))))
 :pattern ( ($generated@@252 ($generated@@76 $generated@@623) ($generated@@76 $generated@@624)))
)))
(assert (forall (($generated@@625 Int) ) (! (= ($generated@@304 ($generated@@8 ($generated@@174 $generated@@625))) ($generated@@76 ($generated@@304 ($generated@@8 $generated@@625))))
 :pattern ( ($generated@@304 ($generated@@8 ($generated@@174 $generated@@625))))
)))
(assert (forall (($generated@@626 T@U) ) (! (= ($generated@@304 ($generated@@76 $generated@@626)) ($generated@@76 ($generated@@304 $generated@@626)))
 :pattern ( ($generated@@304 ($generated@@76 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (! (let (($generated@@628 ($generated@@294 (type $generated@@627))))
 (=> (and (= (type $generated@@627) ($generated@@293 $generated@@628)) (= ($generated@@292 $generated@@627) 0)) (= $generated@@627 ($generated@@291 $generated@@628))))
 :pattern ( ($generated@@292 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (! (let (($generated@@632 (type $generated@@630)))
 (=> (and (and (= (type $generated@@629) ($generated@@78 $generated@@632 $generated@@2)) (= (type $generated@@631) $generated@@2)) (<= 0 ($generated $generated@@631))) (= ($generated@@309 ($generated@@93 $generated@@629 $generated@@630 $generated@@631)) (+ (- ($generated@@309 $generated@@629) ($generated ($generated@@92 $generated@@629 $generated@@630))) ($generated $generated@@631)))))
 :pattern ( ($generated@@309 ($generated@@93 $generated@@629 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@634) $generated@@2)) ($generated@@149 $generated@@634 $generated@@46 $generated@@633))
 :pattern ( ($generated@@149 $generated@@634 $generated@@46 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@636) $generated@@3)) ($generated@@149 $generated@@636 $generated@@47 $generated@@635))
 :pattern ( ($generated@@149 $generated@@636 $generated@@47 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@638) $generated@@4)) ($generated@@149 $generated@@638 $generated@@44 $generated@@637))
 :pattern ( ($generated@@149 $generated@@638 $generated@@44 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@640) $generated@@485)) ($generated@@149 $generated@@640 $generated@@45 $generated@@639))
 :pattern ( ($generated@@149 $generated@@640 $generated@@45 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@642) $generated@@81)) ($generated@@149 $generated@@642 $generated@@48 $generated@@641))
 :pattern ( ($generated@@149 $generated@@642 $generated@@48 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@293 $generated@@81)) (= (type $generated@@644) $generated@@66)) (= ($generated@@83 $generated@@643 ($generated@@532 $generated@@644)) (forall (($generated@@645 Int) ) (!  (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@292 $generated@@643))) ($generated@@253 ($generated@@533 $generated@@643 $generated@@645) $generated@@644))
 :pattern ( ($generated@@533 $generated@@643 $generated@@645))
))))
 :pattern ( ($generated@@83 $generated@@643 ($generated@@532 $generated@@644)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 Int) ) (!  (=> (= (type $generated@@647) ($generated@@293 $generated@@81)) (=> (and (<= 0 $generated@@648) (< $generated@@648 ($generated@@292 $generated@@647))) (< ($generated@@574 ($generated@@360 $generated@@159 ($generated@@533 $generated@@647 $generated@@648))) ($generated@@646 $generated@@647))))
 :pattern ( ($generated@@574 ($generated@@360 $generated@@159 ($generated@@533 $generated@@647 $generated@@648))))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@650) $generated@@66)) (= (type $generated@@651) $generated@@66)) ($generated@@83 $generated@@649 ($generated@@438 $generated@@650 $generated@@651))) (and (and ($generated@@83 ($generated@@317 $generated@@649) ($generated@@84 $generated@@650)) ($generated@@83 ($generated@@368 $generated@@649) ($generated@@84 $generated@@651))) ($generated@@83 ($generated@@412 $generated@@649) ($generated@@84 ($generated@@158 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@83 $generated@@649 ($generated@@438 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@653) $generated@@66)) (= (type $generated@@654) $generated@@66)) ($generated@@83 $generated@@652 ($generated@@446 $generated@@653 $generated@@654))) (and (and ($generated@@83 ($generated@@335 $generated@@652) ($generated@@271 $generated@@653)) ($generated@@83 ($generated@@379 $generated@@652) ($generated@@271 $generated@@654))) ($generated@@83 ($generated@@420 $generated@@652) ($generated@@271 ($generated@@158 $generated@@653 $generated@@654)))))
 :pattern ( ($generated@@83 $generated@@652 ($generated@@446 $generated@@653 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@2) ($generated@@83 $generated@@655 $generated@@46))
 :pattern ( ($generated@@83 $generated@@655 $generated@@46))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@3) ($generated@@83 $generated@@656 $generated@@47))
 :pattern ( ($generated@@83 $generated@@656 $generated@@47))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@4) ($generated@@83 $generated@@657 $generated@@44))
 :pattern ( ($generated@@83 $generated@@657 $generated@@44))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@485) ($generated@@83 $generated@@658 $generated@@45))
 :pattern ( ($generated@@83 $generated@@658 $generated@@45))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@81) ($generated@@83 $generated@@659 $generated@@48))
 :pattern ( ($generated@@83 $generated@@659 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 (T@U) Bool)
(declare-fun $generated@@665 () Int)
(assert  (and (and (and (= (type $generated@@660) ($generated@@191 $generated@@79 $generated@@4)) (= (type $generated@@661) $generated@@79)) (= (type $generated@@662) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@663) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@666  (=> (= $generated@@660 ($generated@@190 $generated@@661 $generated@@662 $generated@@60 false)) (=> (and (and ($generated@@77 $generated@@663) ($generated@@664 $generated@@663)) ($generated@@173 $generated@@665)) (=> (and (and (and ($generated@@0 ($generated@@92 ($generated@@172 $generated@@665) ($generated@@304 ($generated@@8 $generated@@665)))) (= $generated@@662 $generated@@663)) (and ($generated@@149 ($generated@@8 $generated@@665) $generated@@85 $generated@@663) ($generated@@173 $generated@@665))) (and (and ($generated@@149 ($generated@@8 $generated@@665) $generated@@85 $generated@@663) ($generated@@173 $generated@@665)) (and ($generated@@173 $generated@@665) ($generated@@173 $generated@@665)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@0 ($generated@@92 ($generated@@245 ($generated@@172 $generated@@665) ($generated@@172 $generated@@665)) ($generated@@304 ($generated@@8 $generated@@665))))) (=> ($generated@@0 ($generated@@92 ($generated@@245 ($generated@@172 $generated@@665) ($generated@@172 $generated@@665)) ($generated@@304 ($generated@@8 $generated@@665)))) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@260 $generated@@665 $generated@@665) $generated@@665)))))))))
(let (($generated@@667  (=> (and (and (and ($generated@@77 $generated@@662) ($generated@@664 $generated@@662)) (<= ($generated@@174 1) $generated@@665)) (and (= 5 $generated@@74) (= (ControlFlow 0 4) 2))) $generated@@666)))
$generated@@667)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 () Int)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 () T@U)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@T) T@U)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@89 (T@U) Int)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@149 (T@U T@U T@U) Bool)
(declare-fun $generated@@150 (Int) T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@172 (Int) T@U)
(declare-fun $generated@@173 (Int) Bool)
(declare-fun $generated@@174 (Int) Int)
(declare-fun $generated@@175 (Int Int) Bool)
(declare-fun $generated@@176 (Int Int) Bool)
(declare-fun $generated@@177 (T@U Int Int) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) T@U)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@260 (Int Int) Int)
(declare-fun $generated@@261 (Int Int) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@279 (T@U T@U T@U) Bool)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@300 (Int Int) Int)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@309 (T@U) Int)
(declare-fun $generated@@310 (T@T) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@U T@U) T@U)
(declare-fun $generated@@461 (T@T) T@U)
(declare-fun $generated@@485 () T@T)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@533 (T@U Int) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@573 (T@U) Int)
(declare-fun $generated@@574 (T@U) Int)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@646 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@96 $generated@@97)) 11)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@78 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@78 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@78 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@78 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@78 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@69 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@80)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@69 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 14)) (forall (($generated@@140 T@U) ) (! (let (($generated@@141 (type $generated@@140)))
(= (type ($generated@@76 $generated@@140)) $generated@@141))
 :pattern ( ($generated@@76 $generated@@140))
))) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@84 $generated@@142)) $generated@@66)
 :pattern ( ($generated@@84 $generated@@142))
))) (= (type $generated@@85) $generated@@66)) (forall (($generated@@143 T@T) ) (! (= (type ($generated@@87 $generated@@143)) ($generated@@78 $generated@@143 $generated@@4))
 :pattern ( ($generated@@87 $generated@@143))
))))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@145) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 ($generated@@76 $generated@@145)) (and (not (= 3 $generated@@74)) (and (and ($generated@@77 $generated@@144) ($generated@@83 $generated@@145 ($generated@@84 $generated@@85))) (not ($generated@@86 $generated@@145 ($generated@@87 $generated@@81))))))) (and ($generated@@88 ($generated@@76 $generated@@145)) (= ($generated@@75 ($generated@@76 $generated@@145)) (let (($generated@@146 ($generated@@89 ($generated@@76 $generated@@145))))
$generated@@146))))
 :weight 3
 :pattern ( ($generated@@75 ($generated@@76 $generated@@145)) ($generated@@77 $generated@@144))
))))
(assert (forall (($generated@@148 T@U) ) (! (= (type ($generated@@147 $generated@@148)) $generated@@67)
 :pattern ( ($generated@@147 $generated@@148))
)))
(assert (= ($generated@@147 $generated@@44) $generated@@49))
(assert (= ($generated@@147 $generated@@45) $generated@@50))
(assert (= ($generated@@147 $generated@@46) $generated@@51))
(assert (= ($generated@@147 $generated@@47) $generated@@52))
(assert (= ($generated@@147 $generated@@48) $generated@@53))
(assert (forall (($generated@@151 Int) ) (! (= (type ($generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@2) (= (type $generated@@153) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@149 $generated@@152 ($generated@@150 0) $generated@@153))
 :pattern ( ($generated@@149 $generated@@152 ($generated@@150 0) $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@2) (= (type $generated@@155) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@149 $generated@@154 $generated@@85 $generated@@155))
 :pattern ( ($generated@@149 $generated@@154 $generated@@85 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@83 $generated@@156 ($generated@@150 0)))
 :pattern ( ($generated@@83 $generated@@156 ($generated@@150 0)))
)))
(assert  (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@160 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@158 $generated@@160 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@66) (= (type $generated@@163) $generated@@66)) (= (type $generated@@164) $generated@@159)) ($generated@@83 $generated@@164 ($generated@@158 $generated@@162 $generated@@163))) ($generated@@157 $generated@@164))
 :pattern ( ($generated@@157 $generated@@164) ($generated@@83 $generated@@164 ($generated@@158 $generated@@162 $generated@@163)))
)))
(assert  (and (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@81)
 :pattern ( ($generated@@166 $generated@@168))
)) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@81)
 :pattern ( ($generated@@167 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@159) (= (type $generated@@171) $generated@@159)) true) (= ($generated@@165 $generated@@170 $generated@@171)  (and (= ($generated@@166 $generated@@170) ($generated@@166 $generated@@171)) (= ($generated@@167 $generated@@170) ($generated@@167 $generated@@171)))))
 :pattern ( ($generated@@165 $generated@@170 $generated@@171))
)))
(assert  (and (forall (($generated@@178 Int) ) (! (= (type ($generated@@172 $generated@@178)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@172 $generated@@178))
)) (forall (($generated@@179 T@U) ($generated@@180 Int) ($generated@@181 Int) ) (! (= (type ($generated@@177 $generated@@179 $generated@@180 $generated@@181)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@177 $generated@@179 $generated@@180 $generated@@181))
))))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@182 Int) ) (!  (=> (or ($generated@@173 $generated@@182) (and (not (= 2 $generated@@74)) (<= ($generated@@174 1) $generated@@182))) (and (forall (($generated@@183 Int) ) (!  (=> (<= ($generated@@174 1) $generated@@183) (=> (<= $generated@@183 $generated@@182) ($generated@@176 $generated@@183 $generated@@182)))
 :pattern ( ($generated@@175 $generated@@183 $generated@@182))
)) (= ($generated@@172 $generated@@182) ($generated@@177 $generated@@85 $generated@@182 $generated@@182))))
 :pattern ( ($generated@@172 $generated@@182))
))))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@66)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@188) $generated@@66)) ($generated@@83 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@83 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@195 $generated@@196)) 16)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@193 ($generated@@191 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@191 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@189 $generated@@201 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@189 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 (type $generated@@208)))
(let (($generated@@210 (type $generated@@206)))
(= (type ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@191 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@193 (type $generated@@211))))
 (=> (= (type $generated@@214) $generated@@215) (= ($generated@@189 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@212 $generated@@213) $generated@@214)))
 :weight 0
))) (and (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@189 ($generated@@194 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@189 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@189 ($generated@@194 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@189 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or true (= ($generated@@189 ($generated@@194 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@189 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@191 $generated@@79 $generated@@4))
 :pattern ( ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@69 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@79) (= (type $generated@@239) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@240) ($generated@@68 $generated@@4))) (= (type $generated@@242) $generated@@79)) (= (type $generated@@243) ($generated@@68 $generated@@244))) (= ($generated@@0 ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@90 (type $generated@@246))))
(= (type ($generated@@245 $generated@@246 $generated@@247)) ($generated@@78 $generated@@248 $generated@@4)))
 :pattern ( ($generated@@245 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@90 (type $generated@@249))))
 (=> (and (= (type $generated@@249) ($generated@@78 $generated@@251 $generated@@4)) (= (type $generated@@250) ($generated@@78 $generated@@251 $generated@@4))) (= ($generated@@245 ($generated@@245 $generated@@249 $generated@@250) $generated@@250) ($generated@@245 $generated@@249 $generated@@250))))
 :pattern ( ($generated@@245 ($generated@@245 $generated@@249 $generated@@250) $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (! (= (type ($generated@@252 $generated@@254 $generated@@255)) $generated@@159)
 :pattern ( ($generated@@252 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) $generated@@66) (= (type $generated@@257) $generated@@66)) (= (type $generated@@258) $generated@@81)) (= (type $generated@@259) $generated@@81)) (= ($generated@@83 ($generated@@252 $generated@@258 $generated@@259) ($generated@@158 $generated@@256 $generated@@257))  (and ($generated@@253 $generated@@258 $generated@@256) ($generated@@253 $generated@@259 $generated@@257))))
 :pattern ( ($generated@@83 ($generated@@252 $generated@@258 $generated@@259) ($generated@@158 $generated@@256 $generated@@257)))
)))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@262 Int) ($generated@@263 Int) ) (!  (=> (or ($generated@@261 $generated@@262 $generated@@263) (and (not (= 4 $generated@@74)) (and (<= ($generated@@174 1) $generated@@262) (<= ($generated@@174 1) $generated@@263)))) (and (and (and ($generated@@173 $generated@@262) ($generated@@173 $generated@@263)) (let (($generated@@264 ($generated@@245 ($generated@@172 $generated@@262) ($generated@@172 $generated@@263))))
($generated@@82 $generated@@264))) (= ($generated@@260 $generated@@262 $generated@@263) (let (($generated@@265 ($generated@@245 ($generated@@172 $generated@@262) ($generated@@172 $generated@@263))))
($generated@@75 $generated@@265)))))
 :pattern ( ($generated@@260 $generated@@262 $generated@@263))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@159) (= (type $generated@@267) $generated@@159)) (= ($generated@@165 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@165 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@269) $generated@@66)) (= ($generated@@83 $generated@@268 ($generated@@84 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@81) ($generated@@0 ($generated@@92 $generated@@268 $generated@@270))) ($generated@@253 $generated@@270 $generated@@269))
 :pattern ( ($generated@@92 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@83 $generated@@268 ($generated@@84 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@66)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@274) $generated@@66)) (= ($generated@@83 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@81) ($generated@@0 ($generated@@92 $generated@@273 $generated@@275))) ($generated@@253 $generated@@275 $generated@@274))
 :pattern ( ($generated@@92 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@83 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@276 Int) ) (! (= ($generated@@174 $generated@@276) $generated@@276)
 :pattern ( ($generated@@174 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (! (= ($generated@@76 $generated@@277) $generated@@277)
 :pattern ( ($generated@@76 $generated@@277))
)))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) ($generated@@78 $generated@@81 $generated@@4)) (or ($generated@@82 $generated@@278) (and (not (= 3 $generated@@74)) (and ($generated@@83 $generated@@278 ($generated@@84 $generated@@85)) (not ($generated@@86 $generated@@278 ($generated@@87 $generated@@81))))))) (<= ($generated@@174 1) ($generated@@75 $generated@@278)))
 :pattern ( ($generated@@75 $generated@@278))
))))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) $generated@@66) (= (type $generated@@281) $generated@@66)) (= (type $generated@@282) $generated@@81)) (= (type $generated@@283) $generated@@81)) (= (type $generated@@284) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@77 $generated@@284)) (= ($generated@@149 ($generated@@252 $generated@@282 $generated@@283) ($generated@@158 $generated@@280 $generated@@281) $generated@@284)  (and ($generated@@279 $generated@@282 $generated@@280 $generated@@284) ($generated@@279 $generated@@283 $generated@@281 $generated@@284))))
 :pattern ( ($generated@@149 ($generated@@252 $generated@@282 $generated@@283) ($generated@@158 $generated@@280 $generated@@281) $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@70)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@159) (= ($generated@@157 $generated@@287) (= ($generated@@285 $generated@@287) $generated@@61)))
 :pattern ( ($generated@@157 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@159) ($generated@@157 $generated@@288)) (exists (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (and (and (= (type $generated@@289) $generated@@81) (= (type $generated@@290) $generated@@81)) (= $generated@@288 ($generated@@252 $generated@@289 $generated@@290)))
 :no-pattern (type $generated@@289)
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
)))
 :pattern ( ($generated@@157 $generated@@288))
)))
(assert  (and (and (forall (($generated@@295 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@295)) 17)) (forall (($generated@@296 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@293 $generated@@296))
))) (forall (($generated@@297 T@T) ) (! (= (type ($generated@@291 $generated@@297)) ($generated@@293 $generated@@297))
 :pattern ( ($generated@@291 $generated@@297))
))))
(assert (forall (($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@298)) 0)
 :pattern ( ($generated@@291 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@2) (= ($generated@@83 $generated@@299 $generated@@85) (<= ($generated@@174 1) ($generated $generated@@299))))
 :pattern ( ($generated@@83 $generated@@299 $generated@@85))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@301 Int) ($generated@@302 Int) ) (!  (=> (or ($generated@@176 ($generated@@174 $generated@@301) ($generated@@174 $generated@@302)) (and (not (= 1 $generated@@74)) (and (<= ($generated@@174 1) $generated@@301) (<= ($generated@@174 1) $generated@@302)))) (= ($generated@@175 ($generated@@174 $generated@@301) ($generated@@174 $generated@@302)) (exists (($generated@@303 Int) ) (! (= ($generated@@300 ($generated@@174 $generated@@301) $generated@@303) ($generated@@174 $generated@@302))
 :pattern ( ($generated@@300 $generated@@301 $generated@@303))
))))
 :weight 3
 :pattern ( ($generated@@175 ($generated@@174 $generated@@301) ($generated@@174 $generated@@302)))
))))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@81)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@66) (= (type $generated@@308) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@279 ($generated@@304 $generated@@306) $generated@@307 $generated@@308) ($generated@@149 $generated@@306 $generated@@307 $generated@@308)))
 :pattern ( ($generated@@279 ($generated@@304 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@311 T@T) ) (! (= (type ($generated@@310 $generated@@311)) ($generated@@78 $generated@@311 $generated@@2))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@90 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@78 $generated@@313 $generated@@2)) (and (= (= ($generated@@309 $generated@@312) 0) (= $generated@@312 ($generated@@310 $generated@@313))) (=> (not (= ($generated@@309 $generated@@312) 0)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) (< 0 ($generated ($generated@@92 $generated@@312 $generated@@314))))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) ($generated@@78 $generated@@81 $generated@@4)) ($generated@@88 $generated@@315)) (and ($generated@@0 ($generated@@92 $generated@@315 ($generated@@304 ($generated@@8 ($generated@@89 $generated@@315))))) (forall (($generated@@316 T@U) ) (!  (=> (and (and (= (type $generated@@316) $generated@@2) true) ($generated@@0 ($generated@@92 $generated@@315 ($generated@@304 $generated@@316)))) (<= ($generated $generated@@316) ($generated@@89 $generated@@315)))
 :pattern ( ($generated@@92 $generated@@315 ($generated@@304 $generated@@316)))
))))
 :pattern ( ($generated@@89 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 18)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@78 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@92 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@92 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 19)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@92 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@92 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@90 (type $generated@@353))))
 (=> (and (= (type $generated@@353) ($generated@@78 $generated@@355 $generated@@4)) (= (type $generated@@354) ($generated@@78 $generated@@355 $generated@@4))) (= ($generated@@86 $generated@@353 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (= ($generated@@0 ($generated@@92 $generated@@353 $generated@@356)) ($generated@@0 ($generated@@92 $generated@@354 $generated@@356))))
 :pattern ( ($generated@@92 $generated@@353 $generated@@356))
 :pattern ( ($generated@@92 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@86 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@90 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@78 $generated@@358 $generated@@2)) (= ($generated@@185 $generated@@357) (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@358) (and (<= 0 ($generated ($generated@@92 $generated@@357 $generated@@359))) (<= ($generated ($generated@@92 $generated@@357 $generated@@359)) ($generated@@309 $generated@@357))))
 :pattern ( ($generated@@92 $generated@@357 $generated@@359))
)))))
 :pattern ( ($generated@@185 $generated@@357))
)))
(assert (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@360 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@81) ($generated@@253 $generated@@363 $generated@@85)) (and (= ($generated@@304 ($generated@@360 $generated@@2 $generated@@363)) $generated@@363) ($generated@@83 ($generated@@360 $generated@@2 $generated@@363) $generated@@85)))
 :pattern ( ($generated@@253 $generated@@363 $generated@@85))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@321 (type $generated@@364))))
(let (($generated@@366 ($generated@@320 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@319 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@318 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@92 ($generated@@317 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@317 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@321 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@78 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@321 (type $generated@@371))))
(let (($generated@@373 ($generated@@320 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@319 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@318 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@92 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@339 (type $generated@@375))))
(let (($generated@@377 ($generated@@338 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@337 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@336 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@92 ($generated@@335 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@335 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@339 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@78 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@339 (type $generated@@382))))
(let (($generated@@384 ($generated@@338 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@337 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@336 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@92 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@386 Int) ($generated@@387 Int) ) (!  (=> (or ($generated@@261 $generated@@386 $generated@@387) (and (not (= 4 $generated@@74)) (and (<= ($generated@@174 1) $generated@@386) (<= ($generated@@174 1) $generated@@387)))) (<= ($generated@@174 1) ($generated@@260 $generated@@386 $generated@@387)))
 :pattern ( ($generated@@260 $generated@@386 $generated@@387))
))))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@388 Int) ) (!  (=> (or ($generated@@173 ($generated@@174 $generated@@388)) (and (not (= 2 $generated@@74)) (<= ($generated@@174 1) $generated@@388))) (and (forall (($generated@@389 Int) ) (!  (=> (<= ($generated@@174 1) $generated@@389) (=> (<= $generated@@389 ($generated@@174 $generated@@388)) ($generated@@176 $generated@@389 ($generated@@174 $generated@@388))))
 :pattern ( ($generated@@175 $generated@@389 $generated@@388))
)) (= ($generated@@172 ($generated@@174 $generated@@388)) ($generated@@177 $generated@@85 ($generated@@174 $generated@@388) ($generated@@174 $generated@@388)))))
 :weight 3
 :pattern ( ($generated@@172 ($generated@@174 $generated@@388)))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@391) $generated@@66)) (= ($generated@@83 $generated@@390 ($generated@@184 $generated@@391)) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@81) (< 0 ($generated ($generated@@92 $generated@@390 $generated@@392)))) ($generated@@253 $generated@@392 $generated@@391))
 :pattern ( ($generated@@92 $generated@@390 $generated@@392))
))))
 :pattern ( ($generated@@83 $generated@@390 ($generated@@184 $generated@@391)))
)))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@393 Int) ) (!  (=> (or ($generated@@173 $generated@@393) (and (not (= 2 $generated@@74)) (<= ($generated@@174 1) $generated@@393))) ($generated@@83 ($generated@@172 $generated@@393) ($generated@@84 $generated@@85)))
 :pattern ( ($generated@@172 $generated@@393))
))))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@394 Int) ($generated@@395 Int) ) (!  (=> (or ($generated@@261 ($generated@@174 $generated@@394) ($generated@@174 $generated@@395)) (and (not (= 4 $generated@@74)) (and (<= ($generated@@174 1) $generated@@394) (<= ($generated@@174 1) $generated@@395)))) (and (and (and ($generated@@173 ($generated@@174 $generated@@394)) ($generated@@173 ($generated@@174 $generated@@395))) (let (($generated@@396 ($generated@@245 ($generated@@172 ($generated@@174 $generated@@394)) ($generated@@172 ($generated@@174 $generated@@395)))))
($generated@@82 $generated@@396))) (= ($generated@@260 ($generated@@174 $generated@@394) ($generated@@174 $generated@@395)) (let (($generated@@397 ($generated@@245 ($generated@@172 ($generated@@174 $generated@@394)) ($generated@@172 ($generated@@174 $generated@@395)))))
($generated@@75 $generated@@397)))))
 :weight 3
 :pattern ( ($generated@@260 ($generated@@174 $generated@@394) ($generated@@174 $generated@@395)))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
 (=> (and (= (type $generated@@398) ($generated@@78 $generated@@401 $generated@@4)) (= (type $generated@@399) ($generated@@78 $generated@@401 $generated@@4))) (= ($generated@@0 ($generated@@92 ($generated@@245 $generated@@398 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@92 $generated@@398 $generated@@400)) ($generated@@0 ($generated@@92 $generated@@399 $generated@@400))))))
 :pattern ( ($generated@@92 ($generated@@245 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@402 ($generated@@84 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@81) ($generated@@0 ($generated@@92 $generated@@402 $generated@@405))) ($generated@@279 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@92 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@149 $generated@@402 ($generated@@84 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@407) $generated@@66)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@406 ($generated@@271 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@81) ($generated@@0 ($generated@@92 $generated@@406 $generated@@409))) ($generated@@279 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@92 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@149 $generated@@406 ($generated@@271 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(= ($generated ($generated@@92 ($generated@@310 $generated@@411) $generated@@410)) 0))
 :pattern ( (let (($generated@@411 (type $generated@@410)))
($generated@@92 ($generated@@310 $generated@@411) $generated@@410)))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@321 (type $generated@@415))))
(let (($generated@@417 ($generated@@320 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@78 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@419) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@92 ($generated@@317 $generated@@418) ($generated@@166 ($generated@@360 $generated@@159 $generated@@419)))) (= ($generated@@92 ($generated@@413 $generated@@418) ($generated@@166 ($generated@@360 $generated@@159 $generated@@419))) ($generated@@167 ($generated@@360 $generated@@159 $generated@@419))))))
 :pattern ( ($generated@@92 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert  (and (forall (($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@422)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@420 $generated@@422))
)) (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@339 (type $generated@@423))))
(let (($generated@@425 ($generated@@338 (type $generated@@423))))
(= (type ($generated@@421 $generated@@423)) ($generated@@78 $generated@@425 $generated@@424))))
 :pattern ( ($generated@@421 $generated@@423))
))))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@427) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@420 $generated@@426) $generated@@427))  (and ($generated@@0 ($generated@@92 ($generated@@335 $generated@@426) ($generated@@166 ($generated@@360 $generated@@159 $generated@@427)))) (= ($generated@@92 ($generated@@421 $generated@@426) ($generated@@166 ($generated@@360 $generated@@159 $generated@@427))) ($generated@@167 ($generated@@360 $generated@@159 $generated@@427))))))
 :pattern ( ($generated@@92 ($generated@@420 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
(let (($generated@@431 ($generated@@320 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@319 $generated@@431 $generated@@430)) (= ($generated@@0 ($generated@@92 ($generated@@368 $generated@@428) $generated@@429)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) (and ($generated@@0 ($generated@@92 ($generated@@317 $generated@@428) $generated@@432)) (= $generated@@429 ($generated@@92 ($generated@@413 $generated@@428) $generated@@432))))
 :pattern ( ($generated@@92 ($generated@@317 $generated@@428) $generated@@432))
 :pattern ( ($generated@@92 ($generated@@413 $generated@@428) $generated@@432))
))))))
 :pattern ( ($generated@@92 ($generated@@368 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(let (($generated@@436 ($generated@@338 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@337 $generated@@436 $generated@@435)) (= ($generated@@0 ($generated@@92 ($generated@@379 $generated@@433) $generated@@434)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@436) (and ($generated@@0 ($generated@@92 ($generated@@335 $generated@@433) $generated@@437)) (= $generated@@434 ($generated@@92 ($generated@@421 $generated@@433) $generated@@437))))
 :pattern ( ($generated@@92 ($generated@@335 $generated@@433) $generated@@437))
 :pattern ( ($generated@@92 ($generated@@421 $generated@@433) $generated@@437))
))))))
 :pattern ( ($generated@@92 ($generated@@379 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@66)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@442) $generated@@66)) (= (type $generated@@443) $generated@@66)) (= (type $generated@@444) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@317 $generated@@441) $generated@@445))) (and ($generated@@279 ($generated@@92 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@279 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@92 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@92 ($generated@@317 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@149 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@447 $generated@@448)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (= (type $generated@@449) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@450) $generated@@66)) (= (type $generated@@451) $generated@@66)) (= (type $generated@@452) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452) (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@335 $generated@@449) $generated@@453))) (and ($generated@@279 ($generated@@92 ($generated@@421 $generated@@449) $generated@@453) $generated@@451 $generated@@452) ($generated@@279 $generated@@453 $generated@@450 $generated@@452)))
 :pattern ( ($generated@@92 ($generated@@421 $generated@@449) $generated@@453))
 :pattern ( ($generated@@92 ($generated@@335 $generated@@449) $generated@@453))
))))
 :pattern ( ($generated@@149 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@90 (type $generated@@454))))
 (=> (and (and (= (type $generated@@454) ($generated@@78 $generated@@456 $generated@@4)) (= (type $generated@@455) ($generated@@78 $generated@@456 $generated@@4))) ($generated@@86 $generated@@454 $generated@@455)) (= $generated@@454 $generated@@455)))
 :pattern ( ($generated@@86 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 Int) ($generated@@459 Int) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@460) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@177 $generated@@457 $generated@@458 $generated@@459) $generated@@460))  (and ($generated@@253 $generated@@460 $generated@@457) (and (<= ($generated ($generated@@360 $generated@@2 $generated@@460)) $generated@@458) ($generated@@175 ($generated ($generated@@360 $generated@@2 $generated@@460)) $generated@@459)))))
 :pattern ( ($generated@@92 ($generated@@177 $generated@@457 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@462 T@T) ) (! (= (type ($generated@@461 $generated@@462)) ($generated@@78 $generated@@462 $generated@@4))
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@339 (type $generated@@463))))
(let (($generated@@465 ($generated@@338 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@337 $generated@@465 $generated@@464)) (= (= $generated@@463 ($generated@@336 $generated@@465 $generated@@464)) (= ($generated@@335 $generated@@463) ($generated@@461 $generated@@465))))))
 :pattern ( ($generated@@335 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@339 (type $generated@@466))))
(let (($generated@@468 ($generated@@338 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@337 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@336 $generated@@468 $generated@@467)) (= ($generated@@379 $generated@@466) ($generated@@461 $generated@@467))))))
 :pattern ( ($generated@@379 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@339 (type $generated@@469))))
(let (($generated@@471 ($generated@@338 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@337 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@336 $generated@@471 $generated@@470)) (= ($generated@@420 $generated@@469) ($generated@@461 $generated@@81))))))
 :pattern ( ($generated@@420 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@321 (type $generated@@472))))
(let (($generated@@474 ($generated@@320 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@319 $generated@@474 $generated@@473)) (or (= $generated@@472 ($generated@@318 $generated@@474 $generated@@473)) (exists (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (and (and (= (type $generated@@475) $generated@@81) (= (type $generated@@476) $generated@@81)) ($generated@@0 ($generated@@92 ($generated@@412 $generated@@472) ($generated@@304 ($generated@@252 $generated@@475 $generated@@476)))))
 :no-pattern (type $generated@@475)
 :no-pattern (type $generated@@476)
 :no-pattern ($generated $generated@@475)
 :no-pattern ($generated@@0 $generated@@475)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
))))))
 :pattern ( ($generated@@412 $generated@@472))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@339 (type $generated@@477))))
(let (($generated@@479 ($generated@@338 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@337 $generated@@479 $generated@@478)) (or (= $generated@@477 ($generated@@336 $generated@@479 $generated@@478)) (exists (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (and (and (= (type $generated@@480) $generated@@81) (= (type $generated@@481) $generated@@81)) ($generated@@0 ($generated@@92 ($generated@@420 $generated@@477) ($generated@@304 ($generated@@252 $generated@@480 $generated@@481)))))
 :no-pattern (type $generated@@480)
 :no-pattern (type $generated@@481)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
))))))
 :pattern ( ($generated@@420 $generated@@477))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@81) ($generated@@253 $generated@@482 $generated@@46)) (and (= ($generated@@304 ($generated@@360 $generated@@2 $generated@@482)) $generated@@482) ($generated@@83 ($generated@@360 $generated@@2 $generated@@482) $generated@@46)))
 :pattern ( ($generated@@253 $generated@@482 $generated@@46))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@81) ($generated@@253 $generated@@483 $generated@@47)) (and (= ($generated@@304 ($generated@@360 $generated@@3 $generated@@483)) $generated@@483) ($generated@@83 ($generated@@360 $generated@@3 $generated@@483) $generated@@47)))
 :pattern ( ($generated@@253 $generated@@483 $generated@@47))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@81) ($generated@@253 $generated@@484 $generated@@44)) (and (= ($generated@@304 ($generated@@360 $generated@@4 $generated@@484)) $generated@@484) ($generated@@83 ($generated@@360 $generated@@4 $generated@@484) $generated@@44)))
 :pattern ( ($generated@@253 $generated@@484 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@485) 20))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@81) ($generated@@253 $generated@@486 $generated@@45)) (and (= ($generated@@304 ($generated@@360 $generated@@485 $generated@@486)) $generated@@486) ($generated@@83 ($generated@@360 $generated@@485 $generated@@486) $generated@@45)))
 :pattern ( ($generated@@253 $generated@@486 $generated@@45))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@66) (= ($generated@@253 ($generated@@304 $generated@@487) $generated@@488) ($generated@@83 $generated@@487 $generated@@488)))
 :pattern ( ($generated@@253 ($generated@@304 $generated@@487) $generated@@488))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@489 Int) ($generated@@490 Int) ) (!  (=> (or ($generated@@176 $generated@@489 $generated@@490) (and (not (= 1 $generated@@74)) (and (<= ($generated@@174 1) $generated@@489) (<= ($generated@@174 1) $generated@@490)))) (= ($generated@@175 $generated@@489 $generated@@490) (exists (($generated@@491 Int) ) (! (= ($generated@@300 $generated@@489 $generated@@491) $generated@@490)
 :pattern ( ($generated@@300 $generated@@489 $generated@@491))
))))
 :pattern ( ($generated@@175 $generated@@489 $generated@@490))
))))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@90 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@78 $generated@@493 $generated@@2)) (<= 0 ($generated@@309 $generated@@492))))
 :pattern ( ($generated@@309 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@294 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@293 $generated@@495)) (<= 0 ($generated@@292 $generated@@494))))
 :pattern ( ($generated@@292 $generated@@494))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@496 Int) ($generated@@497 Int) ) (!  (=> (or ($generated@@176 $generated@@496 $generated@@497) (and (not (= 1 $generated@@74)) (and (<= ($generated@@174 1) $generated@@496) (<= ($generated@@174 1) $generated@@497)))) true)
 :pattern ( ($generated@@175 $generated@@496 $generated@@497))
))))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@66) (= (type $generated@@501) $generated@@66)) (= ($generated@@498 ($generated@@438 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@438 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@66)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@66) (= (type $generated@@505) $generated@@66)) (= ($generated@@502 ($generated@@438 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@438 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@66) (= (type $generated@@507) $generated@@66)) (= ($generated@@147 ($generated@@438 $generated@@506 $generated@@507)) $generated@@58))
 :pattern ( ($generated@@438 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@66)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@66) (= (type $generated@@511) $generated@@66)) (= ($generated@@508 ($generated@@446 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@446 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@66)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@66) (= (type $generated@@515) $generated@@66)) (= ($generated@@512 ($generated@@446 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@446 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@66) (= (type $generated@@517) $generated@@66)) (= ($generated@@147 ($generated@@446 $generated@@516 $generated@@517)) $generated@@59))
 :pattern ( ($generated@@446 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@81) (= (type $generated@@519) $generated@@81)) (= ($generated@@285 ($generated@@252 $generated@@518 $generated@@519)) $generated@@61))
 :pattern ( ($generated@@252 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@66)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@66) (= (type $generated@@523) $generated@@66)) (= ($generated@@520 ($generated@@158 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@158 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@66)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= ($generated@@524 ($generated@@158 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@158 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@81) (= (type $generated@@529) $generated@@81)) (= ($generated@@166 ($generated@@252 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@252 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@81) (= (type $generated@@531) $generated@@81)) (= ($generated@@167 ($generated@@252 $generated@@530 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@252 $generated@@530 $generated@@531))
)))
(assert  (and (forall (($generated@@534 T@U) ) (! (= (type ($generated@@532 $generated@@534)) $generated@@66)
 :pattern ( ($generated@@532 $generated@@534))
)) (forall (($generated@@535 T@U) ($generated@@536 Int) ) (! (let (($generated@@537 ($generated@@294 (type $generated@@535))))
(= (type ($generated@@533 $generated@@535 $generated@@536)) $generated@@537))
 :pattern ( ($generated@@533 $generated@@535 $generated@@536))
))))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@293 $generated@@81)) (= (type $generated@@539) $generated@@66)) (= (type $generated@@540) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@538 ($generated@@532 $generated@@539) $generated@@540) (forall (($generated@@541 Int) ) (!  (=> (and (<= 0 $generated@@541) (< $generated@@541 ($generated@@292 $generated@@538))) ($generated@@279 ($generated@@533 $generated@@538 $generated@@541) $generated@@539 $generated@@540))
 :pattern ( ($generated@@533 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@149 $generated@@538 ($generated@@532 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@543 Int) ) (! (= ($generated@@542 ($generated@@150 $generated@@543)) $generated@@543)
 :pattern ( ($generated@@150 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@66)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@66) (= ($generated@@544 ($generated@@84 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@84 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@66) (= ($generated@@147 ($generated@@84 $generated@@547)) $generated@@54))
 :pattern ( ($generated@@84 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@66)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@66) (= ($generated@@548 ($generated@@271 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@271 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@66) (= ($generated@@147 ($generated@@271 $generated@@551)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@66)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@66) (= ($generated@@552 ($generated@@184 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@184 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@66) (= ($generated@@147 ($generated@@184 $generated@@555)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@66)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@66) (= ($generated@@556 ($generated@@532 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@532 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@66) (= ($generated@@147 ($generated@@532 $generated@@559)) $generated@@57))
 :pattern ( ($generated@@532 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
(= ($generated@@360 $generated@@561 ($generated@@304 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@304 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@563) $generated@@66)) (= (type $generated@@564) $generated@@66)) (= ($generated@@83 $generated@@562 ($generated@@438 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@317 $generated@@562) $generated@@565))) (and ($generated@@253 ($generated@@92 ($generated@@413 $generated@@562) $generated@@565) $generated@@564) ($generated@@253 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@92 ($generated@@413 $generated@@562) $generated@@565))
 :pattern ( ($generated@@92 ($generated@@317 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@83 $generated@@562 ($generated@@438 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@567) $generated@@66)) (= (type $generated@@568) $generated@@66)) (= ($generated@@83 $generated@@566 ($generated@@446 $generated@@567 $generated@@568)) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@335 $generated@@566) $generated@@569))) (and ($generated@@253 ($generated@@92 ($generated@@421 $generated@@566) $generated@@569) $generated@@568) ($generated@@253 $generated@@569 $generated@@567)))
 :pattern ( ($generated@@92 ($generated@@421 $generated@@566) $generated@@569))
 :pattern ( ($generated@@92 ($generated@@335 $generated@@566) $generated@@569))
))))
 :pattern ( ($generated@@83 $generated@@566 ($generated@@446 $generated@@567 $generated@@568)))
)))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@571) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 $generated@@571) (and (not (= 3 $generated@@74)) (and (and ($generated@@77 $generated@@570) ($generated@@83 $generated@@571 ($generated@@84 $generated@@85))) (not ($generated@@86 $generated@@571 ($generated@@87 $generated@@81))))))) (and ($generated@@88 $generated@@571) (= ($generated@@75 $generated@@571) (let (($generated@@572 ($generated@@89 $generated@@571)))
$generated@@572))))
 :pattern ( ($generated@@75 $generated@@571) ($generated@@77 $generated@@570))
))))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@81) (= (type $generated@@576) $generated@@81)) (< ($generated@@573 $generated@@575) ($generated@@574 ($generated@@252 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@252 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@81) (= (type $generated@@578) $generated@@81)) (< ($generated@@573 $generated@@578) ($generated@@574 ($generated@@252 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@252 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@90 (type $generated@@579))))
 (=> (and (= (type $generated@@579) ($generated@@78 $generated@@581 $generated@@4)) (= (type $generated@@580) ($generated@@78 $generated@@581 $generated@@4))) (= ($generated@@245 $generated@@579 ($generated@@245 $generated@@579 $generated@@580)) ($generated@@245 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@245 $generated@@579 ($generated@@245 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@81) (= (type $generated@@583) $generated@@66)) (= (type $generated@@584) $generated@@66)) ($generated@@253 $generated@@582 ($generated@@438 $generated@@583 $generated@@584))) (and (= ($generated@@304 ($generated@@360 ($generated@@319 $generated@@81 $generated@@81) $generated@@582)) $generated@@582) ($generated@@83 ($generated@@360 ($generated@@319 $generated@@81 $generated@@81) $generated@@582) ($generated@@438 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@253 $generated@@582 ($generated@@438 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@81) (= (type $generated@@586) $generated@@66)) (= (type $generated@@587) $generated@@66)) ($generated@@253 $generated@@585 ($generated@@446 $generated@@586 $generated@@587))) (and (= ($generated@@304 ($generated@@360 ($generated@@337 $generated@@81 $generated@@81) $generated@@585)) $generated@@585) ($generated@@83 ($generated@@360 ($generated@@337 $generated@@81 $generated@@81) $generated@@585) ($generated@@446 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@253 $generated@@585 ($generated@@446 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@66) (= (type $generated@@589) $generated@@66)) (= (type $generated@@590) $generated@@81)) ($generated@@253 $generated@@590 ($generated@@158 $generated@@588 $generated@@589))) (and (= ($generated@@304 ($generated@@360 $generated@@159 $generated@@590)) $generated@@590) ($generated@@83 ($generated@@360 $generated@@159 $generated@@590) ($generated@@158 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@253 $generated@@590 ($generated@@158 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@591)))
 (not ($generated@@0 ($generated@@92 ($generated@@87 $generated@@592) $generated@@591))))
 :pattern ( (let (($generated@@592 (type $generated@@591)))
($generated@@92 ($generated@@87 $generated@@592) $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@593)))
 (not ($generated@@0 ($generated@@92 ($generated@@461 $generated@@594) $generated@@593))))
 :pattern ( (let (($generated@@594 (type $generated@@593)))
($generated@@92 ($generated@@461 $generated@@594) $generated@@593)))
)))
(assert (forall (($generated@@596 T@U) ) (! (= (type ($generated@@595 $generated@@596)) $generated@@71)
 :pattern ( ($generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@66) (= (type $generated@@598) $generated@@66)) (and (= ($generated@@147 ($generated@@158 $generated@@597 $generated@@598)) $generated@@62) (= ($generated@@595 ($generated@@158 $generated@@597 $generated@@598)) $generated@@64)))
 :pattern ( ($generated@@158 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 Int) ($generated@@600 Int) ) (! (= ($generated@@300 $generated@@599 $generated@@600) (* $generated@@599 $generated@@600))
 :pattern ( ($generated@@300 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@159) (= ($generated@@573 ($generated@@304 $generated@@601)) ($generated@@574 $generated@@601)))
 :pattern ( ($generated@@573 ($generated@@304 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@81) ($generated@@253 $generated@@602 ($generated@@150 0))) (and (= ($generated@@304 ($generated@@360 $generated@@2 $generated@@602)) $generated@@602) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@602) ($generated@@150 0))))
 :pattern ( ($generated@@253 $generated@@602 ($generated@@150 0)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@81) (= (type $generated@@604) $generated@@66)) ($generated@@253 $generated@@603 ($generated@@84 $generated@@604))) (and (= ($generated@@304 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@603)) $generated@@603) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@603) ($generated@@84 $generated@@604))))
 :pattern ( ($generated@@253 $generated@@603 ($generated@@84 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@81) (= (type $generated@@606) $generated@@66)) ($generated@@253 $generated@@605 ($generated@@271 $generated@@606))) (and (= ($generated@@304 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@605)) $generated@@605) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@605) ($generated@@271 $generated@@606))))
 :pattern ( ($generated@@253 $generated@@605 ($generated@@271 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@81) (= (type $generated@@608) $generated@@66)) ($generated@@253 $generated@@607 ($generated@@184 $generated@@608))) (and (= ($generated@@304 ($generated@@360 ($generated@@78 $generated@@81 $generated@@2) $generated@@607)) $generated@@607) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@2) $generated@@607) ($generated@@184 $generated@@608))))
 :pattern ( ($generated@@253 $generated@@607 ($generated@@184 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@81) (= (type $generated@@610) $generated@@66)) ($generated@@253 $generated@@609 ($generated@@532 $generated@@610))) (and (= ($generated@@304 ($generated@@360 ($generated@@293 $generated@@81) $generated@@609)) $generated@@609) ($generated@@83 ($generated@@360 ($generated@@293 $generated@@81) $generated@@609) ($generated@@532 $generated@@610))))
 :pattern ( ($generated@@253 $generated@@609 ($generated@@532 $generated@@610)))
)))
(assert (= ($generated@@147 $generated@@85) $generated@@63))
(assert (= ($generated@@595 $generated@@85) $generated@@65))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@611) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@612) $generated@@66)) (= (type $generated@@613) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@611 ($generated@@184 $generated@@612) $generated@@613) (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@81) (< 0 ($generated ($generated@@92 $generated@@611 $generated@@614)))) ($generated@@279 $generated@@614 $generated@@612 $generated@@613))
 :pattern ( ($generated@@92 $generated@@611 $generated@@614))
))))
 :pattern ( ($generated@@149 $generated@@611 ($generated@@184 $generated@@612) $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@159) (= (type $generated@@616) $generated@@66)) (= (type $generated@@617) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@77 $generated@@617) (and ($generated@@157 $generated@@615) (exists (($generated@@618 T@U) ) (!  (and (= (type $generated@@618) $generated@@66) ($generated@@149 $generated@@615 ($generated@@158 $generated@@616 $generated@@618) $generated@@617))
 :pattern ( ($generated@@149 $generated@@615 ($generated@@158 $generated@@616 $generated@@618) $generated@@617))
))))) ($generated@@279 ($generated@@166 $generated@@615) $generated@@616 $generated@@617))
 :pattern ( ($generated@@279 ($generated@@166 $generated@@615) $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) $generated@@159) (= (type $generated@@620) $generated@@66)) (= (type $generated@@621) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@77 $generated@@621) (and ($generated@@157 $generated@@619) (exists (($generated@@622 T@U) ) (!  (and (= (type $generated@@622) $generated@@66) ($generated@@149 $generated@@619 ($generated@@158 $generated@@622 $generated@@620) $generated@@621))
 :pattern ( ($generated@@149 $generated@@619 ($generated@@158 $generated@@622 $generated@@620) $generated@@621))
))))) ($generated@@279 ($generated@@167 $generated@@619) $generated@@620 $generated@@621))
 :pattern ( ($generated@@279 ($generated@@167 $generated@@619) $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@81) (= (type $generated@@624) $generated@@81)) (= ($generated@@252 ($generated@@76 $generated@@623) ($generated@@76 $generated@@624)) ($generated@@76 ($generated@@252 $generated@@623 $generated@@624))))
 :pattern ( ($generated@@252 ($generated@@76 $generated@@623) ($generated@@76 $generated@@624)))
)))
(assert (forall (($generated@@625 Int) ) (! (= ($generated@@304 ($generated@@8 ($generated@@174 $generated@@625))) ($generated@@76 ($generated@@304 ($generated@@8 $generated@@625))))
 :pattern ( ($generated@@304 ($generated@@8 ($generated@@174 $generated@@625))))
)))
(assert (forall (($generated@@626 T@U) ) (! (= ($generated@@304 ($generated@@76 $generated@@626)) ($generated@@76 ($generated@@304 $generated@@626)))
 :pattern ( ($generated@@304 ($generated@@76 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (! (let (($generated@@628 ($generated@@294 (type $generated@@627))))
 (=> (and (= (type $generated@@627) ($generated@@293 $generated@@628)) (= ($generated@@292 $generated@@627) 0)) (= $generated@@627 ($generated@@291 $generated@@628))))
 :pattern ( ($generated@@292 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (! (let (($generated@@632 (type $generated@@630)))
 (=> (and (and (= (type $generated@@629) ($generated@@78 $generated@@632 $generated@@2)) (= (type $generated@@631) $generated@@2)) (<= 0 ($generated $generated@@631))) (= ($generated@@309 ($generated@@93 $generated@@629 $generated@@630 $generated@@631)) (+ (- ($generated@@309 $generated@@629) ($generated ($generated@@92 $generated@@629 $generated@@630))) ($generated $generated@@631)))))
 :pattern ( ($generated@@309 ($generated@@93 $generated@@629 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@634) $generated@@2)) ($generated@@149 $generated@@634 $generated@@46 $generated@@633))
 :pattern ( ($generated@@149 $generated@@634 $generated@@46 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@636) $generated@@3)) ($generated@@149 $generated@@636 $generated@@47 $generated@@635))
 :pattern ( ($generated@@149 $generated@@636 $generated@@47 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@638) $generated@@4)) ($generated@@149 $generated@@638 $generated@@44 $generated@@637))
 :pattern ( ($generated@@149 $generated@@638 $generated@@44 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@640) $generated@@485)) ($generated@@149 $generated@@640 $generated@@45 $generated@@639))
 :pattern ( ($generated@@149 $generated@@640 $generated@@45 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@642) $generated@@81)) ($generated@@149 $generated@@642 $generated@@48 $generated@@641))
 :pattern ( ($generated@@149 $generated@@642 $generated@@48 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@293 $generated@@81)) (= (type $generated@@644) $generated@@66)) (= ($generated@@83 $generated@@643 ($generated@@532 $generated@@644)) (forall (($generated@@645 Int) ) (!  (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@292 $generated@@643))) ($generated@@253 ($generated@@533 $generated@@643 $generated@@645) $generated@@644))
 :pattern ( ($generated@@533 $generated@@643 $generated@@645))
))))
 :pattern ( ($generated@@83 $generated@@643 ($generated@@532 $generated@@644)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 Int) ) (!  (=> (= (type $generated@@647) ($generated@@293 $generated@@81)) (=> (and (<= 0 $generated@@648) (< $generated@@648 ($generated@@292 $generated@@647))) (< ($generated@@574 ($generated@@360 $generated@@159 ($generated@@533 $generated@@647 $generated@@648))) ($generated@@646 $generated@@647))))
 :pattern ( ($generated@@574 ($generated@@360 $generated@@159 ($generated@@533 $generated@@647 $generated@@648))))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@650) $generated@@66)) (= (type $generated@@651) $generated@@66)) ($generated@@83 $generated@@649 ($generated@@438 $generated@@650 $generated@@651))) (and (and ($generated@@83 ($generated@@317 $generated@@649) ($generated@@84 $generated@@650)) ($generated@@83 ($generated@@368 $generated@@649) ($generated@@84 $generated@@651))) ($generated@@83 ($generated@@412 $generated@@649) ($generated@@84 ($generated@@158 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@83 $generated@@649 ($generated@@438 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@653) $generated@@66)) (= (type $generated@@654) $generated@@66)) ($generated@@83 $generated@@652 ($generated@@446 $generated@@653 $generated@@654))) (and (and ($generated@@83 ($generated@@335 $generated@@652) ($generated@@271 $generated@@653)) ($generated@@83 ($generated@@379 $generated@@652) ($generated@@271 $generated@@654))) ($generated@@83 ($generated@@420 $generated@@652) ($generated@@271 ($generated@@158 $generated@@653 $generated@@654)))))
 :pattern ( ($generated@@83 $generated@@652 ($generated@@446 $generated@@653 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@2) ($generated@@83 $generated@@655 $generated@@46))
 :pattern ( ($generated@@83 $generated@@655 $generated@@46))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@3) ($generated@@83 $generated@@656 $generated@@47))
 :pattern ( ($generated@@83 $generated@@656 $generated@@47))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@4) ($generated@@83 $generated@@657 $generated@@44))
 :pattern ( ($generated@@83 $generated@@657 $generated@@44))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@485) ($generated@@83 $generated@@658 $generated@@45))
 :pattern ( ($generated@@83 $generated@@658 $generated@@45))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@81) ($generated@@83 $generated@@659 $generated@@48))
 :pattern ( ($generated@@83 $generated@@659 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () Int)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@660) ($generated@@191 $generated@@79 $generated@@4)) (= (type $generated@@661) $generated@@79)) (= (type $generated@@662) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@665) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@667  (=> (and (= $generated@@660 ($generated@@190 $generated@@661 $generated@@662 $generated@@60 false)) (< $generated@@663 $generated@@664)) (=> (and (and (and ($generated@@77 $generated@@665) ($generated@@666 $generated@@665)) (and (= $generated@@662 $generated@@665) ($generated@@149 ($generated@@8 $generated@@663) $generated@@85 $generated@@665))) (and (and ($generated@@149 ($generated@@8 $generated@@664) $generated@@85 $generated@@665) ($generated@@261 $generated@@663 $generated@@664)) (and ($generated@@149 ($generated@@8 $generated@@663) $generated@@85 $generated@@665) (= (ControlFlow 0 2) (- 0 1))))) ($generated@@83 ($generated@@8 (- $generated@@664 $generated@@663)) $generated@@85)))))
(let (($generated@@668  (=> (and ($generated@@77 $generated@@662) ($generated@@666 $generated@@662)) (=> (and (and (<= ($generated@@174 1) $generated@@663) (<= ($generated@@174 1) $generated@@664)) (and (= 5 $generated@@74) (= (ControlFlow 0 3) 2))) $generated@@667))))
$generated@@668)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 () Int)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 () T@U)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@T) T@U)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@89 (T@U) Int)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@149 (T@U T@U T@U) Bool)
(declare-fun $generated@@150 (Int) T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@172 (Int) T@U)
(declare-fun $generated@@173 (Int) Bool)
(declare-fun $generated@@174 (Int) Int)
(declare-fun $generated@@175 (Int Int) Bool)
(declare-fun $generated@@176 (Int Int) Bool)
(declare-fun $generated@@177 (T@U Int Int) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) T@U)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@260 (Int Int) Int)
(declare-fun $generated@@261 (Int Int) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@279 (T@U T@U T@U) Bool)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@300 (Int Int) Int)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@309 (T@U) Int)
(declare-fun $generated@@310 (T@T) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@U T@U) T@U)
(declare-fun $generated@@461 (T@T) T@U)
(declare-fun $generated@@485 () T@T)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@533 (T@U Int) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@573 (T@U) Int)
(declare-fun $generated@@574 (T@U) Int)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@646 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@96 $generated@@97)) 11)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@78 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@78 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@78 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@78 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@78 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@69 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@80)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@69 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 14)) (forall (($generated@@140 T@U) ) (! (let (($generated@@141 (type $generated@@140)))
(= (type ($generated@@76 $generated@@140)) $generated@@141))
 :pattern ( ($generated@@76 $generated@@140))
))) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@84 $generated@@142)) $generated@@66)
 :pattern ( ($generated@@84 $generated@@142))
))) (= (type $generated@@85) $generated@@66)) (forall (($generated@@143 T@T) ) (! (= (type ($generated@@87 $generated@@143)) ($generated@@78 $generated@@143 $generated@@4))
 :pattern ( ($generated@@87 $generated@@143))
))))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@145) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 ($generated@@76 $generated@@145)) (and (not (= 3 $generated@@74)) (and (and ($generated@@77 $generated@@144) ($generated@@83 $generated@@145 ($generated@@84 $generated@@85))) (not ($generated@@86 $generated@@145 ($generated@@87 $generated@@81))))))) (and ($generated@@88 ($generated@@76 $generated@@145)) (= ($generated@@75 ($generated@@76 $generated@@145)) (let (($generated@@146 ($generated@@89 ($generated@@76 $generated@@145))))
$generated@@146))))
 :weight 3
 :pattern ( ($generated@@75 ($generated@@76 $generated@@145)) ($generated@@77 $generated@@144))
))))
(assert (forall (($generated@@148 T@U) ) (! (= (type ($generated@@147 $generated@@148)) $generated@@67)
 :pattern ( ($generated@@147 $generated@@148))
)))
(assert (= ($generated@@147 $generated@@44) $generated@@49))
(assert (= ($generated@@147 $generated@@45) $generated@@50))
(assert (= ($generated@@147 $generated@@46) $generated@@51))
(assert (= ($generated@@147 $generated@@47) $generated@@52))
(assert (= ($generated@@147 $generated@@48) $generated@@53))
(assert (forall (($generated@@151 Int) ) (! (= (type ($generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@2) (= (type $generated@@153) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@149 $generated@@152 ($generated@@150 0) $generated@@153))
 :pattern ( ($generated@@149 $generated@@152 ($generated@@150 0) $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@2) (= (type $generated@@155) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@149 $generated@@154 $generated@@85 $generated@@155))
 :pattern ( ($generated@@149 $generated@@154 $generated@@85 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@83 $generated@@156 ($generated@@150 0)))
 :pattern ( ($generated@@83 $generated@@156 ($generated@@150 0)))
)))
(assert  (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@160 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@158 $generated@@160 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@66) (= (type $generated@@163) $generated@@66)) (= (type $generated@@164) $generated@@159)) ($generated@@83 $generated@@164 ($generated@@158 $generated@@162 $generated@@163))) ($generated@@157 $generated@@164))
 :pattern ( ($generated@@157 $generated@@164) ($generated@@83 $generated@@164 ($generated@@158 $generated@@162 $generated@@163)))
)))
(assert  (and (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@81)
 :pattern ( ($generated@@166 $generated@@168))
)) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@81)
 :pattern ( ($generated@@167 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@159) (= (type $generated@@171) $generated@@159)) true) (= ($generated@@165 $generated@@170 $generated@@171)  (and (= ($generated@@166 $generated@@170) ($generated@@166 $generated@@171)) (= ($generated@@167 $generated@@170) ($generated@@167 $generated@@171)))))
 :pattern ( ($generated@@165 $generated@@170 $generated@@171))
)))
(assert  (and (forall (($generated@@178 Int) ) (! (= (type ($generated@@172 $generated@@178)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@172 $generated@@178))
)) (forall (($generated@@179 T@U) ($generated@@180 Int) ($generated@@181 Int) ) (! (= (type ($generated@@177 $generated@@179 $generated@@180 $generated@@181)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@177 $generated@@179 $generated@@180 $generated@@181))
))))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@182 Int) ) (!  (=> (or ($generated@@173 $generated@@182) (and (not (= 2 $generated@@74)) (<= ($generated@@174 1) $generated@@182))) (and (forall (($generated@@183 Int) ) (!  (=> (<= ($generated@@174 1) $generated@@183) (=> (<= $generated@@183 $generated@@182) ($generated@@176 $generated@@183 $generated@@182)))
 :pattern ( ($generated@@175 $generated@@183 $generated@@182))
)) (= ($generated@@172 $generated@@182) ($generated@@177 $generated@@85 $generated@@182 $generated@@182))))
 :pattern ( ($generated@@172 $generated@@182))
))))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@66)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@188) $generated@@66)) ($generated@@83 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@83 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@195 $generated@@196)) 16)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@193 ($generated@@191 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@191 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@189 $generated@@201 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@189 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 (type $generated@@208)))
(let (($generated@@210 (type $generated@@206)))
(= (type ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@191 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@193 (type $generated@@211))))
 (=> (= (type $generated@@214) $generated@@215) (= ($generated@@189 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@212 $generated@@213) $generated@@214)))
 :weight 0
))) (and (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@189 ($generated@@194 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@189 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@189 ($generated@@194 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@189 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or true (= ($generated@@189 ($generated@@194 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@189 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@191 $generated@@79 $generated@@4))
 :pattern ( ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@69 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@79) (= (type $generated@@239) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@240) ($generated@@68 $generated@@4))) (= (type $generated@@242) $generated@@79)) (= (type $generated@@243) ($generated@@68 $generated@@244))) (= ($generated@@0 ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@90 (type $generated@@246))))
(= (type ($generated@@245 $generated@@246 $generated@@247)) ($generated@@78 $generated@@248 $generated@@4)))
 :pattern ( ($generated@@245 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@90 (type $generated@@249))))
 (=> (and (= (type $generated@@249) ($generated@@78 $generated@@251 $generated@@4)) (= (type $generated@@250) ($generated@@78 $generated@@251 $generated@@4))) (= ($generated@@245 ($generated@@245 $generated@@249 $generated@@250) $generated@@250) ($generated@@245 $generated@@249 $generated@@250))))
 :pattern ( ($generated@@245 ($generated@@245 $generated@@249 $generated@@250) $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (! (= (type ($generated@@252 $generated@@254 $generated@@255)) $generated@@159)
 :pattern ( ($generated@@252 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) $generated@@66) (= (type $generated@@257) $generated@@66)) (= (type $generated@@258) $generated@@81)) (= (type $generated@@259) $generated@@81)) (= ($generated@@83 ($generated@@252 $generated@@258 $generated@@259) ($generated@@158 $generated@@256 $generated@@257))  (and ($generated@@253 $generated@@258 $generated@@256) ($generated@@253 $generated@@259 $generated@@257))))
 :pattern ( ($generated@@83 ($generated@@252 $generated@@258 $generated@@259) ($generated@@158 $generated@@256 $generated@@257)))
)))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@262 Int) ($generated@@263 Int) ) (!  (=> (or ($generated@@261 $generated@@262 $generated@@263) (and (not (= 4 $generated@@74)) (and (<= ($generated@@174 1) $generated@@262) (<= ($generated@@174 1) $generated@@263)))) (and (and (and ($generated@@173 $generated@@262) ($generated@@173 $generated@@263)) (let (($generated@@264 ($generated@@245 ($generated@@172 $generated@@262) ($generated@@172 $generated@@263))))
($generated@@82 $generated@@264))) (= ($generated@@260 $generated@@262 $generated@@263) (let (($generated@@265 ($generated@@245 ($generated@@172 $generated@@262) ($generated@@172 $generated@@263))))
($generated@@75 $generated@@265)))))
 :pattern ( ($generated@@260 $generated@@262 $generated@@263))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@159) (= (type $generated@@267) $generated@@159)) (= ($generated@@165 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@165 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@269) $generated@@66)) (= ($generated@@83 $generated@@268 ($generated@@84 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@81) ($generated@@0 ($generated@@92 $generated@@268 $generated@@270))) ($generated@@253 $generated@@270 $generated@@269))
 :pattern ( ($generated@@92 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@83 $generated@@268 ($generated@@84 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@66)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@274) $generated@@66)) (= ($generated@@83 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@81) ($generated@@0 ($generated@@92 $generated@@273 $generated@@275))) ($generated@@253 $generated@@275 $generated@@274))
 :pattern ( ($generated@@92 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@83 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@276 Int) ) (! (= ($generated@@174 $generated@@276) $generated@@276)
 :pattern ( ($generated@@174 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (! (= ($generated@@76 $generated@@277) $generated@@277)
 :pattern ( ($generated@@76 $generated@@277))
)))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) ($generated@@78 $generated@@81 $generated@@4)) (or ($generated@@82 $generated@@278) (and (not (= 3 $generated@@74)) (and ($generated@@83 $generated@@278 ($generated@@84 $generated@@85)) (not ($generated@@86 $generated@@278 ($generated@@87 $generated@@81))))))) (<= ($generated@@174 1) ($generated@@75 $generated@@278)))
 :pattern ( ($generated@@75 $generated@@278))
))))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) $generated@@66) (= (type $generated@@281) $generated@@66)) (= (type $generated@@282) $generated@@81)) (= (type $generated@@283) $generated@@81)) (= (type $generated@@284) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@77 $generated@@284)) (= ($generated@@149 ($generated@@252 $generated@@282 $generated@@283) ($generated@@158 $generated@@280 $generated@@281) $generated@@284)  (and ($generated@@279 $generated@@282 $generated@@280 $generated@@284) ($generated@@279 $generated@@283 $generated@@281 $generated@@284))))
 :pattern ( ($generated@@149 ($generated@@252 $generated@@282 $generated@@283) ($generated@@158 $generated@@280 $generated@@281) $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@70)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@159) (= ($generated@@157 $generated@@287) (= ($generated@@285 $generated@@287) $generated@@61)))
 :pattern ( ($generated@@157 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@159) ($generated@@157 $generated@@288)) (exists (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (and (and (= (type $generated@@289) $generated@@81) (= (type $generated@@290) $generated@@81)) (= $generated@@288 ($generated@@252 $generated@@289 $generated@@290)))
 :no-pattern (type $generated@@289)
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
)))
 :pattern ( ($generated@@157 $generated@@288))
)))
(assert  (and (and (forall (($generated@@295 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@295)) 17)) (forall (($generated@@296 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@293 $generated@@296))
))) (forall (($generated@@297 T@T) ) (! (= (type ($generated@@291 $generated@@297)) ($generated@@293 $generated@@297))
 :pattern ( ($generated@@291 $generated@@297))
))))
(assert (forall (($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@298)) 0)
 :pattern ( ($generated@@291 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@2) (= ($generated@@83 $generated@@299 $generated@@85) (<= ($generated@@174 1) ($generated $generated@@299))))
 :pattern ( ($generated@@83 $generated@@299 $generated@@85))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@301 Int) ($generated@@302 Int) ) (!  (=> (or ($generated@@176 ($generated@@174 $generated@@301) ($generated@@174 $generated@@302)) (and (not (= 1 $generated@@74)) (and (<= ($generated@@174 1) $generated@@301) (<= ($generated@@174 1) $generated@@302)))) (= ($generated@@175 ($generated@@174 $generated@@301) ($generated@@174 $generated@@302)) (exists (($generated@@303 Int) ) (! (= ($generated@@300 ($generated@@174 $generated@@301) $generated@@303) ($generated@@174 $generated@@302))
 :pattern ( ($generated@@300 $generated@@301 $generated@@303))
))))
 :weight 3
 :pattern ( ($generated@@175 ($generated@@174 $generated@@301) ($generated@@174 $generated@@302)))
))))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@81)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@66) (= (type $generated@@308) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@279 ($generated@@304 $generated@@306) $generated@@307 $generated@@308) ($generated@@149 $generated@@306 $generated@@307 $generated@@308)))
 :pattern ( ($generated@@279 ($generated@@304 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@311 T@T) ) (! (= (type ($generated@@310 $generated@@311)) ($generated@@78 $generated@@311 $generated@@2))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@90 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@78 $generated@@313 $generated@@2)) (and (= (= ($generated@@309 $generated@@312) 0) (= $generated@@312 ($generated@@310 $generated@@313))) (=> (not (= ($generated@@309 $generated@@312) 0)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) (< 0 ($generated ($generated@@92 $generated@@312 $generated@@314))))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) ($generated@@78 $generated@@81 $generated@@4)) ($generated@@88 $generated@@315)) (and ($generated@@0 ($generated@@92 $generated@@315 ($generated@@304 ($generated@@8 ($generated@@89 $generated@@315))))) (forall (($generated@@316 T@U) ) (!  (=> (and (and (= (type $generated@@316) $generated@@2) true) ($generated@@0 ($generated@@92 $generated@@315 ($generated@@304 $generated@@316)))) (<= ($generated $generated@@316) ($generated@@89 $generated@@315)))
 :pattern ( ($generated@@92 $generated@@315 ($generated@@304 $generated@@316)))
))))
 :pattern ( ($generated@@89 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 18)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@78 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@92 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@92 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 19)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@92 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@92 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@90 (type $generated@@353))))
 (=> (and (= (type $generated@@353) ($generated@@78 $generated@@355 $generated@@4)) (= (type $generated@@354) ($generated@@78 $generated@@355 $generated@@4))) (= ($generated@@86 $generated@@353 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (= ($generated@@0 ($generated@@92 $generated@@353 $generated@@356)) ($generated@@0 ($generated@@92 $generated@@354 $generated@@356))))
 :pattern ( ($generated@@92 $generated@@353 $generated@@356))
 :pattern ( ($generated@@92 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@86 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@90 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@78 $generated@@358 $generated@@2)) (= ($generated@@185 $generated@@357) (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@358) (and (<= 0 ($generated ($generated@@92 $generated@@357 $generated@@359))) (<= ($generated ($generated@@92 $generated@@357 $generated@@359)) ($generated@@309 $generated@@357))))
 :pattern ( ($generated@@92 $generated@@357 $generated@@359))
)))))
 :pattern ( ($generated@@185 $generated@@357))
)))
(assert (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@360 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@81) ($generated@@253 $generated@@363 $generated@@85)) (and (= ($generated@@304 ($generated@@360 $generated@@2 $generated@@363)) $generated@@363) ($generated@@83 ($generated@@360 $generated@@2 $generated@@363) $generated@@85)))
 :pattern ( ($generated@@253 $generated@@363 $generated@@85))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@321 (type $generated@@364))))
(let (($generated@@366 ($generated@@320 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@319 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@318 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@92 ($generated@@317 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@317 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@321 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@78 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@321 (type $generated@@371))))
(let (($generated@@373 ($generated@@320 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@319 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@318 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@92 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@339 (type $generated@@375))))
(let (($generated@@377 ($generated@@338 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@337 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@336 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@92 ($generated@@335 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@335 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@339 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@78 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@339 (type $generated@@382))))
(let (($generated@@384 ($generated@@338 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@337 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@336 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@92 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@386 Int) ($generated@@387 Int) ) (!  (=> (or ($generated@@261 $generated@@386 $generated@@387) (and (not (= 4 $generated@@74)) (and (<= ($generated@@174 1) $generated@@386) (<= ($generated@@174 1) $generated@@387)))) (<= ($generated@@174 1) ($generated@@260 $generated@@386 $generated@@387)))
 :pattern ( ($generated@@260 $generated@@386 $generated@@387))
))))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@388 Int) ) (!  (=> (or ($generated@@173 ($generated@@174 $generated@@388)) (and (not (= 2 $generated@@74)) (<= ($generated@@174 1) $generated@@388))) (and (forall (($generated@@389 Int) ) (!  (=> (<= ($generated@@174 1) $generated@@389) (=> (<= $generated@@389 ($generated@@174 $generated@@388)) ($generated@@176 $generated@@389 ($generated@@174 $generated@@388))))
 :pattern ( ($generated@@175 $generated@@389 $generated@@388))
)) (= ($generated@@172 ($generated@@174 $generated@@388)) ($generated@@177 $generated@@85 ($generated@@174 $generated@@388) ($generated@@174 $generated@@388)))))
 :weight 3
 :pattern ( ($generated@@172 ($generated@@174 $generated@@388)))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@391) $generated@@66)) (= ($generated@@83 $generated@@390 ($generated@@184 $generated@@391)) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@81) (< 0 ($generated ($generated@@92 $generated@@390 $generated@@392)))) ($generated@@253 $generated@@392 $generated@@391))
 :pattern ( ($generated@@92 $generated@@390 $generated@@392))
))))
 :pattern ( ($generated@@83 $generated@@390 ($generated@@184 $generated@@391)))
)))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@393 Int) ) (!  (=> (or ($generated@@173 $generated@@393) (and (not (= 2 $generated@@74)) (<= ($generated@@174 1) $generated@@393))) ($generated@@83 ($generated@@172 $generated@@393) ($generated@@84 $generated@@85)))
 :pattern ( ($generated@@172 $generated@@393))
))))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@394 Int) ($generated@@395 Int) ) (!  (=> (or ($generated@@261 ($generated@@174 $generated@@394) ($generated@@174 $generated@@395)) (and (not (= 4 $generated@@74)) (and (<= ($generated@@174 1) $generated@@394) (<= ($generated@@174 1) $generated@@395)))) (and (and (and ($generated@@173 ($generated@@174 $generated@@394)) ($generated@@173 ($generated@@174 $generated@@395))) (let (($generated@@396 ($generated@@245 ($generated@@172 ($generated@@174 $generated@@394)) ($generated@@172 ($generated@@174 $generated@@395)))))
($generated@@82 $generated@@396))) (= ($generated@@260 ($generated@@174 $generated@@394) ($generated@@174 $generated@@395)) (let (($generated@@397 ($generated@@245 ($generated@@172 ($generated@@174 $generated@@394)) ($generated@@172 ($generated@@174 $generated@@395)))))
($generated@@75 $generated@@397)))))
 :weight 3
 :pattern ( ($generated@@260 ($generated@@174 $generated@@394) ($generated@@174 $generated@@395)))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
 (=> (and (= (type $generated@@398) ($generated@@78 $generated@@401 $generated@@4)) (= (type $generated@@399) ($generated@@78 $generated@@401 $generated@@4))) (= ($generated@@0 ($generated@@92 ($generated@@245 $generated@@398 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@92 $generated@@398 $generated@@400)) ($generated@@0 ($generated@@92 $generated@@399 $generated@@400))))))
 :pattern ( ($generated@@92 ($generated@@245 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@402 ($generated@@84 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@81) ($generated@@0 ($generated@@92 $generated@@402 $generated@@405))) ($generated@@279 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@92 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@149 $generated@@402 ($generated@@84 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@407) $generated@@66)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@406 ($generated@@271 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@81) ($generated@@0 ($generated@@92 $generated@@406 $generated@@409))) ($generated@@279 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@92 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@149 $generated@@406 ($generated@@271 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(= ($generated ($generated@@92 ($generated@@310 $generated@@411) $generated@@410)) 0))
 :pattern ( (let (($generated@@411 (type $generated@@410)))
($generated@@92 ($generated@@310 $generated@@411) $generated@@410)))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@321 (type $generated@@415))))
(let (($generated@@417 ($generated@@320 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@78 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@419) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@92 ($generated@@317 $generated@@418) ($generated@@166 ($generated@@360 $generated@@159 $generated@@419)))) (= ($generated@@92 ($generated@@413 $generated@@418) ($generated@@166 ($generated@@360 $generated@@159 $generated@@419))) ($generated@@167 ($generated@@360 $generated@@159 $generated@@419))))))
 :pattern ( ($generated@@92 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert  (and (forall (($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@422)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@420 $generated@@422))
)) (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@339 (type $generated@@423))))
(let (($generated@@425 ($generated@@338 (type $generated@@423))))
(= (type ($generated@@421 $generated@@423)) ($generated@@78 $generated@@425 $generated@@424))))
 :pattern ( ($generated@@421 $generated@@423))
))))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@427) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@420 $generated@@426) $generated@@427))  (and ($generated@@0 ($generated@@92 ($generated@@335 $generated@@426) ($generated@@166 ($generated@@360 $generated@@159 $generated@@427)))) (= ($generated@@92 ($generated@@421 $generated@@426) ($generated@@166 ($generated@@360 $generated@@159 $generated@@427))) ($generated@@167 ($generated@@360 $generated@@159 $generated@@427))))))
 :pattern ( ($generated@@92 ($generated@@420 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
(let (($generated@@431 ($generated@@320 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@319 $generated@@431 $generated@@430)) (= ($generated@@0 ($generated@@92 ($generated@@368 $generated@@428) $generated@@429)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) (and ($generated@@0 ($generated@@92 ($generated@@317 $generated@@428) $generated@@432)) (= $generated@@429 ($generated@@92 ($generated@@413 $generated@@428) $generated@@432))))
 :pattern ( ($generated@@92 ($generated@@317 $generated@@428) $generated@@432))
 :pattern ( ($generated@@92 ($generated@@413 $generated@@428) $generated@@432))
))))))
 :pattern ( ($generated@@92 ($generated@@368 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(let (($generated@@436 ($generated@@338 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@337 $generated@@436 $generated@@435)) (= ($generated@@0 ($generated@@92 ($generated@@379 $generated@@433) $generated@@434)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@436) (and ($generated@@0 ($generated@@92 ($generated@@335 $generated@@433) $generated@@437)) (= $generated@@434 ($generated@@92 ($generated@@421 $generated@@433) $generated@@437))))
 :pattern ( ($generated@@92 ($generated@@335 $generated@@433) $generated@@437))
 :pattern ( ($generated@@92 ($generated@@421 $generated@@433) $generated@@437))
))))))
 :pattern ( ($generated@@92 ($generated@@379 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@66)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@442) $generated@@66)) (= (type $generated@@443) $generated@@66)) (= (type $generated@@444) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@317 $generated@@441) $generated@@445))) (and ($generated@@279 ($generated@@92 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@279 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@92 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@92 ($generated@@317 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@149 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@447 $generated@@448)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (= (type $generated@@449) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@450) $generated@@66)) (= (type $generated@@451) $generated@@66)) (= (type $generated@@452) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452) (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@335 $generated@@449) $generated@@453))) (and ($generated@@279 ($generated@@92 ($generated@@421 $generated@@449) $generated@@453) $generated@@451 $generated@@452) ($generated@@279 $generated@@453 $generated@@450 $generated@@452)))
 :pattern ( ($generated@@92 ($generated@@421 $generated@@449) $generated@@453))
 :pattern ( ($generated@@92 ($generated@@335 $generated@@449) $generated@@453))
))))
 :pattern ( ($generated@@149 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@90 (type $generated@@454))))
 (=> (and (and (= (type $generated@@454) ($generated@@78 $generated@@456 $generated@@4)) (= (type $generated@@455) ($generated@@78 $generated@@456 $generated@@4))) ($generated@@86 $generated@@454 $generated@@455)) (= $generated@@454 $generated@@455)))
 :pattern ( ($generated@@86 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 Int) ($generated@@459 Int) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@460) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@177 $generated@@457 $generated@@458 $generated@@459) $generated@@460))  (and ($generated@@253 $generated@@460 $generated@@457) (and (<= ($generated ($generated@@360 $generated@@2 $generated@@460)) $generated@@458) ($generated@@175 ($generated ($generated@@360 $generated@@2 $generated@@460)) $generated@@459)))))
 :pattern ( ($generated@@92 ($generated@@177 $generated@@457 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@462 T@T) ) (! (= (type ($generated@@461 $generated@@462)) ($generated@@78 $generated@@462 $generated@@4))
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@339 (type $generated@@463))))
(let (($generated@@465 ($generated@@338 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@337 $generated@@465 $generated@@464)) (= (= $generated@@463 ($generated@@336 $generated@@465 $generated@@464)) (= ($generated@@335 $generated@@463) ($generated@@461 $generated@@465))))))
 :pattern ( ($generated@@335 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@339 (type $generated@@466))))
(let (($generated@@468 ($generated@@338 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@337 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@336 $generated@@468 $generated@@467)) (= ($generated@@379 $generated@@466) ($generated@@461 $generated@@467))))))
 :pattern ( ($generated@@379 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@339 (type $generated@@469))))
(let (($generated@@471 ($generated@@338 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@337 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@336 $generated@@471 $generated@@470)) (= ($generated@@420 $generated@@469) ($generated@@461 $generated@@81))))))
 :pattern ( ($generated@@420 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@321 (type $generated@@472))))
(let (($generated@@474 ($generated@@320 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@319 $generated@@474 $generated@@473)) (or (= $generated@@472 ($generated@@318 $generated@@474 $generated@@473)) (exists (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (and (and (= (type $generated@@475) $generated@@81) (= (type $generated@@476) $generated@@81)) ($generated@@0 ($generated@@92 ($generated@@412 $generated@@472) ($generated@@304 ($generated@@252 $generated@@475 $generated@@476)))))
 :no-pattern (type $generated@@475)
 :no-pattern (type $generated@@476)
 :no-pattern ($generated $generated@@475)
 :no-pattern ($generated@@0 $generated@@475)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
))))))
 :pattern ( ($generated@@412 $generated@@472))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@339 (type $generated@@477))))
(let (($generated@@479 ($generated@@338 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@337 $generated@@479 $generated@@478)) (or (= $generated@@477 ($generated@@336 $generated@@479 $generated@@478)) (exists (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (and (and (= (type $generated@@480) $generated@@81) (= (type $generated@@481) $generated@@81)) ($generated@@0 ($generated@@92 ($generated@@420 $generated@@477) ($generated@@304 ($generated@@252 $generated@@480 $generated@@481)))))
 :no-pattern (type $generated@@480)
 :no-pattern (type $generated@@481)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
))))))
 :pattern ( ($generated@@420 $generated@@477))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@81) ($generated@@253 $generated@@482 $generated@@46)) (and (= ($generated@@304 ($generated@@360 $generated@@2 $generated@@482)) $generated@@482) ($generated@@83 ($generated@@360 $generated@@2 $generated@@482) $generated@@46)))
 :pattern ( ($generated@@253 $generated@@482 $generated@@46))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@81) ($generated@@253 $generated@@483 $generated@@47)) (and (= ($generated@@304 ($generated@@360 $generated@@3 $generated@@483)) $generated@@483) ($generated@@83 ($generated@@360 $generated@@3 $generated@@483) $generated@@47)))
 :pattern ( ($generated@@253 $generated@@483 $generated@@47))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@81) ($generated@@253 $generated@@484 $generated@@44)) (and (= ($generated@@304 ($generated@@360 $generated@@4 $generated@@484)) $generated@@484) ($generated@@83 ($generated@@360 $generated@@4 $generated@@484) $generated@@44)))
 :pattern ( ($generated@@253 $generated@@484 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@485) 20))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@81) ($generated@@253 $generated@@486 $generated@@45)) (and (= ($generated@@304 ($generated@@360 $generated@@485 $generated@@486)) $generated@@486) ($generated@@83 ($generated@@360 $generated@@485 $generated@@486) $generated@@45)))
 :pattern ( ($generated@@253 $generated@@486 $generated@@45))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@66) (= ($generated@@253 ($generated@@304 $generated@@487) $generated@@488) ($generated@@83 $generated@@487 $generated@@488)))
 :pattern ( ($generated@@253 ($generated@@304 $generated@@487) $generated@@488))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@489 Int) ($generated@@490 Int) ) (!  (=> (or ($generated@@176 $generated@@489 $generated@@490) (and (not (= 1 $generated@@74)) (and (<= ($generated@@174 1) $generated@@489) (<= ($generated@@174 1) $generated@@490)))) (= ($generated@@175 $generated@@489 $generated@@490) (exists (($generated@@491 Int) ) (! (= ($generated@@300 $generated@@489 $generated@@491) $generated@@490)
 :pattern ( ($generated@@300 $generated@@489 $generated@@491))
))))
 :pattern ( ($generated@@175 $generated@@489 $generated@@490))
))))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@90 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@78 $generated@@493 $generated@@2)) (<= 0 ($generated@@309 $generated@@492))))
 :pattern ( ($generated@@309 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@294 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@293 $generated@@495)) (<= 0 ($generated@@292 $generated@@494))))
 :pattern ( ($generated@@292 $generated@@494))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@496 Int) ($generated@@497 Int) ) (!  (=> (or ($generated@@176 $generated@@496 $generated@@497) (and (not (= 1 $generated@@74)) (and (<= ($generated@@174 1) $generated@@496) (<= ($generated@@174 1) $generated@@497)))) true)
 :pattern ( ($generated@@175 $generated@@496 $generated@@497))
))))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@66) (= (type $generated@@501) $generated@@66)) (= ($generated@@498 ($generated@@438 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@438 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@66)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@66) (= (type $generated@@505) $generated@@66)) (= ($generated@@502 ($generated@@438 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@438 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@66) (= (type $generated@@507) $generated@@66)) (= ($generated@@147 ($generated@@438 $generated@@506 $generated@@507)) $generated@@58))
 :pattern ( ($generated@@438 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@66)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@66) (= (type $generated@@511) $generated@@66)) (= ($generated@@508 ($generated@@446 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@446 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@66)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@66) (= (type $generated@@515) $generated@@66)) (= ($generated@@512 ($generated@@446 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@446 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@66) (= (type $generated@@517) $generated@@66)) (= ($generated@@147 ($generated@@446 $generated@@516 $generated@@517)) $generated@@59))
 :pattern ( ($generated@@446 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@81) (= (type $generated@@519) $generated@@81)) (= ($generated@@285 ($generated@@252 $generated@@518 $generated@@519)) $generated@@61))
 :pattern ( ($generated@@252 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@66)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@66) (= (type $generated@@523) $generated@@66)) (= ($generated@@520 ($generated@@158 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@158 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@66)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= ($generated@@524 ($generated@@158 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@158 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@81) (= (type $generated@@529) $generated@@81)) (= ($generated@@166 ($generated@@252 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@252 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@81) (= (type $generated@@531) $generated@@81)) (= ($generated@@167 ($generated@@252 $generated@@530 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@252 $generated@@530 $generated@@531))
)))
(assert  (and (forall (($generated@@534 T@U) ) (! (= (type ($generated@@532 $generated@@534)) $generated@@66)
 :pattern ( ($generated@@532 $generated@@534))
)) (forall (($generated@@535 T@U) ($generated@@536 Int) ) (! (let (($generated@@537 ($generated@@294 (type $generated@@535))))
(= (type ($generated@@533 $generated@@535 $generated@@536)) $generated@@537))
 :pattern ( ($generated@@533 $generated@@535 $generated@@536))
))))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@293 $generated@@81)) (= (type $generated@@539) $generated@@66)) (= (type $generated@@540) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@538 ($generated@@532 $generated@@539) $generated@@540) (forall (($generated@@541 Int) ) (!  (=> (and (<= 0 $generated@@541) (< $generated@@541 ($generated@@292 $generated@@538))) ($generated@@279 ($generated@@533 $generated@@538 $generated@@541) $generated@@539 $generated@@540))
 :pattern ( ($generated@@533 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@149 $generated@@538 ($generated@@532 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@543 Int) ) (! (= ($generated@@542 ($generated@@150 $generated@@543)) $generated@@543)
 :pattern ( ($generated@@150 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@66)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@66) (= ($generated@@544 ($generated@@84 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@84 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@66) (= ($generated@@147 ($generated@@84 $generated@@547)) $generated@@54))
 :pattern ( ($generated@@84 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@66)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@66) (= ($generated@@548 ($generated@@271 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@271 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@66) (= ($generated@@147 ($generated@@271 $generated@@551)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@66)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@66) (= ($generated@@552 ($generated@@184 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@184 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@66) (= ($generated@@147 ($generated@@184 $generated@@555)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@66)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@66) (= ($generated@@556 ($generated@@532 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@532 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@66) (= ($generated@@147 ($generated@@532 $generated@@559)) $generated@@57))
 :pattern ( ($generated@@532 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
(= ($generated@@360 $generated@@561 ($generated@@304 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@304 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@563) $generated@@66)) (= (type $generated@@564) $generated@@66)) (= ($generated@@83 $generated@@562 ($generated@@438 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@317 $generated@@562) $generated@@565))) (and ($generated@@253 ($generated@@92 ($generated@@413 $generated@@562) $generated@@565) $generated@@564) ($generated@@253 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@92 ($generated@@413 $generated@@562) $generated@@565))
 :pattern ( ($generated@@92 ($generated@@317 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@83 $generated@@562 ($generated@@438 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@567) $generated@@66)) (= (type $generated@@568) $generated@@66)) (= ($generated@@83 $generated@@566 ($generated@@446 $generated@@567 $generated@@568)) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@335 $generated@@566) $generated@@569))) (and ($generated@@253 ($generated@@92 ($generated@@421 $generated@@566) $generated@@569) $generated@@568) ($generated@@253 $generated@@569 $generated@@567)))
 :pattern ( ($generated@@92 ($generated@@421 $generated@@566) $generated@@569))
 :pattern ( ($generated@@92 ($generated@@335 $generated@@566) $generated@@569))
))))
 :pattern ( ($generated@@83 $generated@@566 ($generated@@446 $generated@@567 $generated@@568)))
)))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@571) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 $generated@@571) (and (not (= 3 $generated@@74)) (and (and ($generated@@77 $generated@@570) ($generated@@83 $generated@@571 ($generated@@84 $generated@@85))) (not ($generated@@86 $generated@@571 ($generated@@87 $generated@@81))))))) (and ($generated@@88 $generated@@571) (= ($generated@@75 $generated@@571) (let (($generated@@572 ($generated@@89 $generated@@571)))
$generated@@572))))
 :pattern ( ($generated@@75 $generated@@571) ($generated@@77 $generated@@570))
))))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@81) (= (type $generated@@576) $generated@@81)) (< ($generated@@573 $generated@@575) ($generated@@574 ($generated@@252 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@252 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@81) (= (type $generated@@578) $generated@@81)) (< ($generated@@573 $generated@@578) ($generated@@574 ($generated@@252 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@252 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@90 (type $generated@@579))))
 (=> (and (= (type $generated@@579) ($generated@@78 $generated@@581 $generated@@4)) (= (type $generated@@580) ($generated@@78 $generated@@581 $generated@@4))) (= ($generated@@245 $generated@@579 ($generated@@245 $generated@@579 $generated@@580)) ($generated@@245 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@245 $generated@@579 ($generated@@245 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@81) (= (type $generated@@583) $generated@@66)) (= (type $generated@@584) $generated@@66)) ($generated@@253 $generated@@582 ($generated@@438 $generated@@583 $generated@@584))) (and (= ($generated@@304 ($generated@@360 ($generated@@319 $generated@@81 $generated@@81) $generated@@582)) $generated@@582) ($generated@@83 ($generated@@360 ($generated@@319 $generated@@81 $generated@@81) $generated@@582) ($generated@@438 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@253 $generated@@582 ($generated@@438 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@81) (= (type $generated@@586) $generated@@66)) (= (type $generated@@587) $generated@@66)) ($generated@@253 $generated@@585 ($generated@@446 $generated@@586 $generated@@587))) (and (= ($generated@@304 ($generated@@360 ($generated@@337 $generated@@81 $generated@@81) $generated@@585)) $generated@@585) ($generated@@83 ($generated@@360 ($generated@@337 $generated@@81 $generated@@81) $generated@@585) ($generated@@446 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@253 $generated@@585 ($generated@@446 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@66) (= (type $generated@@589) $generated@@66)) (= (type $generated@@590) $generated@@81)) ($generated@@253 $generated@@590 ($generated@@158 $generated@@588 $generated@@589))) (and (= ($generated@@304 ($generated@@360 $generated@@159 $generated@@590)) $generated@@590) ($generated@@83 ($generated@@360 $generated@@159 $generated@@590) ($generated@@158 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@253 $generated@@590 ($generated@@158 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@591)))
 (not ($generated@@0 ($generated@@92 ($generated@@87 $generated@@592) $generated@@591))))
 :pattern ( (let (($generated@@592 (type $generated@@591)))
($generated@@92 ($generated@@87 $generated@@592) $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@593)))
 (not ($generated@@0 ($generated@@92 ($generated@@461 $generated@@594) $generated@@593))))
 :pattern ( (let (($generated@@594 (type $generated@@593)))
($generated@@92 ($generated@@461 $generated@@594) $generated@@593)))
)))
(assert (forall (($generated@@596 T@U) ) (! (= (type ($generated@@595 $generated@@596)) $generated@@71)
 :pattern ( ($generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@66) (= (type $generated@@598) $generated@@66)) (and (= ($generated@@147 ($generated@@158 $generated@@597 $generated@@598)) $generated@@62) (= ($generated@@595 ($generated@@158 $generated@@597 $generated@@598)) $generated@@64)))
 :pattern ( ($generated@@158 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 Int) ($generated@@600 Int) ) (! (= ($generated@@300 $generated@@599 $generated@@600) (* $generated@@599 $generated@@600))
 :pattern ( ($generated@@300 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@159) (= ($generated@@573 ($generated@@304 $generated@@601)) ($generated@@574 $generated@@601)))
 :pattern ( ($generated@@573 ($generated@@304 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@81) ($generated@@253 $generated@@602 ($generated@@150 0))) (and (= ($generated@@304 ($generated@@360 $generated@@2 $generated@@602)) $generated@@602) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@602) ($generated@@150 0))))
 :pattern ( ($generated@@253 $generated@@602 ($generated@@150 0)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@81) (= (type $generated@@604) $generated@@66)) ($generated@@253 $generated@@603 ($generated@@84 $generated@@604))) (and (= ($generated@@304 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@603)) $generated@@603) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@603) ($generated@@84 $generated@@604))))
 :pattern ( ($generated@@253 $generated@@603 ($generated@@84 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@81) (= (type $generated@@606) $generated@@66)) ($generated@@253 $generated@@605 ($generated@@271 $generated@@606))) (and (= ($generated@@304 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@605)) $generated@@605) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@605) ($generated@@271 $generated@@606))))
 :pattern ( ($generated@@253 $generated@@605 ($generated@@271 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@81) (= (type $generated@@608) $generated@@66)) ($generated@@253 $generated@@607 ($generated@@184 $generated@@608))) (and (= ($generated@@304 ($generated@@360 ($generated@@78 $generated@@81 $generated@@2) $generated@@607)) $generated@@607) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@2) $generated@@607) ($generated@@184 $generated@@608))))
 :pattern ( ($generated@@253 $generated@@607 ($generated@@184 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@81) (= (type $generated@@610) $generated@@66)) ($generated@@253 $generated@@609 ($generated@@532 $generated@@610))) (and (= ($generated@@304 ($generated@@360 ($generated@@293 $generated@@81) $generated@@609)) $generated@@609) ($generated@@83 ($generated@@360 ($generated@@293 $generated@@81) $generated@@609) ($generated@@532 $generated@@610))))
 :pattern ( ($generated@@253 $generated@@609 ($generated@@532 $generated@@610)))
)))
(assert (= ($generated@@147 $generated@@85) $generated@@63))
(assert (= ($generated@@595 $generated@@85) $generated@@65))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@611) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@612) $generated@@66)) (= (type $generated@@613) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@611 ($generated@@184 $generated@@612) $generated@@613) (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@81) (< 0 ($generated ($generated@@92 $generated@@611 $generated@@614)))) ($generated@@279 $generated@@614 $generated@@612 $generated@@613))
 :pattern ( ($generated@@92 $generated@@611 $generated@@614))
))))
 :pattern ( ($generated@@149 $generated@@611 ($generated@@184 $generated@@612) $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@159) (= (type $generated@@616) $generated@@66)) (= (type $generated@@617) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@77 $generated@@617) (and ($generated@@157 $generated@@615) (exists (($generated@@618 T@U) ) (!  (and (= (type $generated@@618) $generated@@66) ($generated@@149 $generated@@615 ($generated@@158 $generated@@616 $generated@@618) $generated@@617))
 :pattern ( ($generated@@149 $generated@@615 ($generated@@158 $generated@@616 $generated@@618) $generated@@617))
))))) ($generated@@279 ($generated@@166 $generated@@615) $generated@@616 $generated@@617))
 :pattern ( ($generated@@279 ($generated@@166 $generated@@615) $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) $generated@@159) (= (type $generated@@620) $generated@@66)) (= (type $generated@@621) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@77 $generated@@621) (and ($generated@@157 $generated@@619) (exists (($generated@@622 T@U) ) (!  (and (= (type $generated@@622) $generated@@66) ($generated@@149 $generated@@619 ($generated@@158 $generated@@622 $generated@@620) $generated@@621))
 :pattern ( ($generated@@149 $generated@@619 ($generated@@158 $generated@@622 $generated@@620) $generated@@621))
))))) ($generated@@279 ($generated@@167 $generated@@619) $generated@@620 $generated@@621))
 :pattern ( ($generated@@279 ($generated@@167 $generated@@619) $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@81) (= (type $generated@@624) $generated@@81)) (= ($generated@@252 ($generated@@76 $generated@@623) ($generated@@76 $generated@@624)) ($generated@@76 ($generated@@252 $generated@@623 $generated@@624))))
 :pattern ( ($generated@@252 ($generated@@76 $generated@@623) ($generated@@76 $generated@@624)))
)))
(assert (forall (($generated@@625 Int) ) (! (= ($generated@@304 ($generated@@8 ($generated@@174 $generated@@625))) ($generated@@76 ($generated@@304 ($generated@@8 $generated@@625))))
 :pattern ( ($generated@@304 ($generated@@8 ($generated@@174 $generated@@625))))
)))
(assert (forall (($generated@@626 T@U) ) (! (= ($generated@@304 ($generated@@76 $generated@@626)) ($generated@@76 ($generated@@304 $generated@@626)))
 :pattern ( ($generated@@304 ($generated@@76 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (! (let (($generated@@628 ($generated@@294 (type $generated@@627))))
 (=> (and (= (type $generated@@627) ($generated@@293 $generated@@628)) (= ($generated@@292 $generated@@627) 0)) (= $generated@@627 ($generated@@291 $generated@@628))))
 :pattern ( ($generated@@292 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (! (let (($generated@@632 (type $generated@@630)))
 (=> (and (and (= (type $generated@@629) ($generated@@78 $generated@@632 $generated@@2)) (= (type $generated@@631) $generated@@2)) (<= 0 ($generated $generated@@631))) (= ($generated@@309 ($generated@@93 $generated@@629 $generated@@630 $generated@@631)) (+ (- ($generated@@309 $generated@@629) ($generated ($generated@@92 $generated@@629 $generated@@630))) ($generated $generated@@631)))))
 :pattern ( ($generated@@309 ($generated@@93 $generated@@629 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@634) $generated@@2)) ($generated@@149 $generated@@634 $generated@@46 $generated@@633))
 :pattern ( ($generated@@149 $generated@@634 $generated@@46 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@636) $generated@@3)) ($generated@@149 $generated@@636 $generated@@47 $generated@@635))
 :pattern ( ($generated@@149 $generated@@636 $generated@@47 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@638) $generated@@4)) ($generated@@149 $generated@@638 $generated@@44 $generated@@637))
 :pattern ( ($generated@@149 $generated@@638 $generated@@44 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@640) $generated@@485)) ($generated@@149 $generated@@640 $generated@@45 $generated@@639))
 :pattern ( ($generated@@149 $generated@@640 $generated@@45 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@642) $generated@@81)) ($generated@@149 $generated@@642 $generated@@48 $generated@@641))
 :pattern ( ($generated@@149 $generated@@642 $generated@@48 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@293 $generated@@81)) (= (type $generated@@644) $generated@@66)) (= ($generated@@83 $generated@@643 ($generated@@532 $generated@@644)) (forall (($generated@@645 Int) ) (!  (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@292 $generated@@643))) ($generated@@253 ($generated@@533 $generated@@643 $generated@@645) $generated@@644))
 :pattern ( ($generated@@533 $generated@@643 $generated@@645))
))))
 :pattern ( ($generated@@83 $generated@@643 ($generated@@532 $generated@@644)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 Int) ) (!  (=> (= (type $generated@@647) ($generated@@293 $generated@@81)) (=> (and (<= 0 $generated@@648) (< $generated@@648 ($generated@@292 $generated@@647))) (< ($generated@@574 ($generated@@360 $generated@@159 ($generated@@533 $generated@@647 $generated@@648))) ($generated@@646 $generated@@647))))
 :pattern ( ($generated@@574 ($generated@@360 $generated@@159 ($generated@@533 $generated@@647 $generated@@648))))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@650) $generated@@66)) (= (type $generated@@651) $generated@@66)) ($generated@@83 $generated@@649 ($generated@@438 $generated@@650 $generated@@651))) (and (and ($generated@@83 ($generated@@317 $generated@@649) ($generated@@84 $generated@@650)) ($generated@@83 ($generated@@368 $generated@@649) ($generated@@84 $generated@@651))) ($generated@@83 ($generated@@412 $generated@@649) ($generated@@84 ($generated@@158 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@83 $generated@@649 ($generated@@438 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@653) $generated@@66)) (= (type $generated@@654) $generated@@66)) ($generated@@83 $generated@@652 ($generated@@446 $generated@@653 $generated@@654))) (and (and ($generated@@83 ($generated@@335 $generated@@652) ($generated@@271 $generated@@653)) ($generated@@83 ($generated@@379 $generated@@652) ($generated@@271 $generated@@654))) ($generated@@83 ($generated@@420 $generated@@652) ($generated@@271 ($generated@@158 $generated@@653 $generated@@654)))))
 :pattern ( ($generated@@83 $generated@@652 ($generated@@446 $generated@@653 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@2) ($generated@@83 $generated@@655 $generated@@46))
 :pattern ( ($generated@@83 $generated@@655 $generated@@46))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@3) ($generated@@83 $generated@@656 $generated@@47))
 :pattern ( ($generated@@83 $generated@@656 $generated@@47))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@4) ($generated@@83 $generated@@657 $generated@@44))
 :pattern ( ($generated@@83 $generated@@657 $generated@@44))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@485) ($generated@@83 $generated@@658 $generated@@45))
 :pattern ( ($generated@@83 $generated@@658 $generated@@45))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@81) ($generated@@83 $generated@@659 $generated@@48))
 :pattern ( ($generated@@83 $generated@@659 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@660 () Int)
(declare-fun $generated@@661 () Int)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () Int)
(declare-fun $generated@@665 () Int)
(declare-fun $generated@@666 () Int)
(declare-fun $generated@@667 () Int)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () Int)
(declare-fun $generated@@670 () Int)
(declare-fun $generated@@671 () Int)
(declare-fun $generated@@672 () Int)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () Int)
(declare-fun $generated@@675 () Int)
(declare-fun $generated@@676 () Int)
(declare-fun $generated@@677 () Int)
(declare-fun $generated@@678 () Int)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () Int)
(declare-fun $generated@@681 () Int)
(declare-fun $generated@@682 () Int)
(declare-fun $generated@@683 () Int)
(declare-fun $generated@@684 () Int)
(declare-fun $generated@@685 () Int)
(declare-fun $generated@@686 () Int)
(declare-fun $generated@@687 () Int)
(declare-fun $generated@@688 () Int)
(declare-fun $generated@@689 () Int)
(declare-fun $generated@@690 () Int)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () Int)
(declare-fun $generated@@693 () Int)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () Int)
(declare-fun $generated@@698 (T@U) Bool)
(declare-fun $generated@@699 () Int)
(declare-fun $generated@@700 () Int)
(declare-fun $generated@@701 () Int)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () Int)
(declare-fun $generated@@704 () Int)
(assert  (and (and (and (and (= (type $generated@@679) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@673) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@695) ($generated@@191 $generated@@79 $generated@@4))) (= (type $generated@@696) $generated@@79)) (= (type $generated@@702) ($generated@@78 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 60) (let (($generated@@705  (=> (and (and (= $generated@@660 ($generated@@300 $generated@@661 (+ $generated@@662 $generated@@663))) (= (ControlFlow 0 43) (- 0 42))) ($generated@@176 $generated@@661 $generated@@660)) (or ($generated@@175 $generated@@661 $generated@@660) (exists (($generated@@706 Int) ) (! (= ($generated@@300 $generated@@661 $generated@@706) $generated@@660)
 :pattern ( ($generated@@300 $generated@@661 $generated@@706))
))))))
(let (($generated@@707  (=> (= $generated@@664 ($generated@@300 $generated@@661 $generated@@662)) (=> (and (<= ($generated@@174 1) $generated@@664) (= $generated@@665 ($generated@@300 $generated@@661 $generated@@663))) (=> (and (and (<= ($generated@@174 1) $generated@@665) (= $generated@@666 (+ ($generated@@300 $generated@@661 $generated@@662) ($generated@@300 $generated@@661 $generated@@663)))) (and (<= ($generated@@174 1) $generated@@666) (= $generated@@667 (+ $generated@@662 $generated@@663)))) (and (=> (= (ControlFlow 0 39) (- 0 41)) (<= ($generated@@174 1) $generated@@667)) (=> (<= ($generated@@174 1) $generated@@667) (=> (= $generated@@668 ($generated@@300 $generated@@661 (+ $generated@@662 $generated@@663))) (and (=> (= (ControlFlow 0 39) (- 0 40)) (<= ($generated@@174 1) $generated@@668)) (=> (<= ($generated@@174 1) $generated@@668) (=> (= (ControlFlow 0 39) (- 0 38)) (= (+ ($generated@@300 $generated@@661 $generated@@662) ($generated@@300 $generated@@661 $generated@@663)) ($generated@@300 $generated@@661 (+ $generated@@662 $generated@@663))))))))))))))
(let (($generated@@708  (=> (= $generated@@669 ($generated@@300 $generated@@661 $generated@@662)) (and (=> (= (ControlFlow 0 34) (- 0 37)) (<= ($generated@@174 1) $generated@@669)) (=> (<= ($generated@@174 1) $generated@@669) (=> (= $generated@@670 ($generated@@300 $generated@@661 $generated@@663)) (and (=> (= (ControlFlow 0 34) (- 0 36)) (<= ($generated@@174 1) $generated@@670)) (=> (<= ($generated@@174 1) $generated@@670) (=> (= $generated@@671 (+ ($generated@@300 $generated@@661 $generated@@662) ($generated@@300 $generated@@661 $generated@@663))) (and (=> (= (ControlFlow 0 34) (- 0 35)) (<= ($generated@@174 1) $generated@@671)) (=> (<= ($generated@@174 1) $generated@@671) (=> (= (ControlFlow 0 34) (- 0 33)) (= (+ $generated@@672 (- $generated@@660 $generated@@672)) (+ ($generated@@300 $generated@@661 $generated@@662) ($generated@@300 $generated@@661 $generated@@663)))))))))))))))
(let (($generated@@709  (=> (= (ControlFlow 0 32) (- 0 31)) (= $generated@@660 (+ $generated@@672 (- $generated@@660 $generated@@672))))))
(let (($generated@@710 true))
(let (($generated@@711  (=> ($generated@@175 $generated@@661 $generated@@660) (=> (and ($generated@@149 ($generated@@8 $generated@@672) $generated@@85 $generated@@673) ($generated@@173 $generated@@672)) (=> (and (and ($generated@@149 ($generated@@8 $generated@@660) $generated@@85 $generated@@673) ($generated@@173 $generated@@660)) (and ($generated@@173 $generated@@672) ($generated@@173 $generated@@660))) (and (=> (= (ControlFlow 0 28) (- 0 29)) ($generated@@0 ($generated@@92 ($generated@@245 ($generated@@172 $generated@@672) ($generated@@172 $generated@@660)) ($generated@@304 ($generated@@8 $generated@@661))))) (=> ($generated@@0 ($generated@@92 ($generated@@245 ($generated@@172 $generated@@672) ($generated@@172 $generated@@660)) ($generated@@304 ($generated@@8 $generated@@661)))) (=> (= (ControlFlow 0 28) (- 0 27)) (<= $generated@@661 $generated@@674)))))))))
(let (($generated@@712  (and (=> (= (ControlFlow 0 44) (- 0 45)) (or (and ($generated@@83 ($generated@@8 ($generated@@174 1)) $generated@@85) (= ($generated@@300 $generated@@661 ($generated@@174 1)) (- $generated@@660 $generated@@672))) (or (and ($generated@@83 ($generated@@8 ($generated@@174 0)) $generated@@85) (= ($generated@@300 $generated@@661 ($generated@@174 0)) (- $generated@@660 $generated@@672))) (exists (($generated@@713 Int) )  (and (<= ($generated@@174 1) $generated@@713) (= ($generated@@300 $generated@@661 $generated@@713) (- $generated@@660 $generated@@672))))))) (=> (or (and ($generated@@83 ($generated@@8 ($generated@@174 1)) $generated@@85) (= ($generated@@300 $generated@@661 ($generated@@174 1)) (- $generated@@660 $generated@@672))) (or (and ($generated@@83 ($generated@@8 ($generated@@174 0)) $generated@@85) (= ($generated@@300 $generated@@661 ($generated@@174 0)) (- $generated@@660 $generated@@672))) (exists (($generated@@714 Int) )  (and (<= ($generated@@174 1) $generated@@714) (= ($generated@@300 $generated@@661 $generated@@714) (- $generated@@660 $generated@@672)))))) (=> (and (<= ($generated@@174 1) $generated@@663) (= ($generated@@300 $generated@@661 $generated@@663) (- $generated@@660 $generated@@672))) (=> (and (and ($generated@@149 ($generated@@8 $generated@@661) $generated@@85 $generated@@673) ($generated@@149 ($generated@@8 $generated@@660) $generated@@85 $generated@@673)) (and ($generated@@176 $generated@@661 $generated@@660) ($generated@@176 $generated@@661 $generated@@660))) (and (and (and (and (and (=> (= (ControlFlow 0 44) 28) $generated@@711) (=> (= (ControlFlow 0 44) 30) $generated@@710)) (=> (= (ControlFlow 0 44) 32) $generated@@709)) (=> (= (ControlFlow 0 44) 34) $generated@@708)) (=> (= (ControlFlow 0 44) 39) $generated@@707)) (=> (= (ControlFlow 0 44) 43) $generated@@705))))))))
(let (($generated@@715  (=> (and (< $generated@@675 ($generated@@174 1)) (= (ControlFlow 0 48) 44)) $generated@@712)))
(let (($generated@@716  (=> (and (<= ($generated@@174 1) $generated@@675) (= $generated@@676 ($generated@@300 $generated@@661 $generated@@675))) (and (=> (= (ControlFlow 0 46) (- 0 47)) (<= ($generated@@174 1) $generated@@676)) (=> (<= ($generated@@174 1) $generated@@676) (=> (= (ControlFlow 0 46) 44) $generated@@712))))))
(let (($generated@@717  (and (=> (= (ControlFlow 0 49) (- 0 50)) (or (and ($generated@@83 ($generated@@8 ($generated@@174 1)) $generated@@85) (= ($generated@@300 $generated@@661 ($generated@@174 1)) $generated@@672)) (or (and ($generated@@83 ($generated@@8 ($generated@@174 0)) $generated@@85) (= ($generated@@300 $generated@@661 ($generated@@174 0)) $generated@@672)) (exists (($generated@@718 Int) )  (and (<= ($generated@@174 1) $generated@@718) (= ($generated@@300 $generated@@661 $generated@@718) $generated@@672)))))) (=> (or (and ($generated@@83 ($generated@@8 ($generated@@174 1)) $generated@@85) (= ($generated@@300 $generated@@661 ($generated@@174 1)) $generated@@672)) (or (and ($generated@@83 ($generated@@8 ($generated@@174 0)) $generated@@85) (= ($generated@@300 $generated@@661 ($generated@@174 0)) $generated@@672)) (exists (($generated@@719 Int) )  (and (<= ($generated@@174 1) $generated@@719) (= ($generated@@300 $generated@@661 $generated@@719) $generated@@672))))) (=> (and (<= ($generated@@174 1) $generated@@662) (= ($generated@@300 $generated@@661 $generated@@662) $generated@@672)) (and (=> (= (ControlFlow 0 49) 46) $generated@@716) (=> (= (ControlFlow 0 49) 48) $generated@@715)))))))
(let (($generated@@720  (=> (and (< $generated@@677 ($generated@@174 1)) (= (ControlFlow 0 53) 49)) $generated@@717)))
(let (($generated@@721  (=> (and (<= ($generated@@174 1) $generated@@677) (= $generated@@678 ($generated@@300 $generated@@661 $generated@@677))) (and (=> (= (ControlFlow 0 51) (- 0 52)) (<= ($generated@@174 1) $generated@@678)) (=> (<= ($generated@@174 1) $generated@@678) (=> (= (ControlFlow 0 51) 49) $generated@@717))))))
(let (($generated@@722 true))
(let (($generated@@723  (=> (and (<= ($generated@@174 1) $generated@@661) ($generated@@0 ($generated@@92 $generated@@679 ($generated@@304 ($generated@@8 $generated@@661))))) (and (and (=> (= (ControlFlow 0 54) 26) $generated@@722) (=> (= (ControlFlow 0 54) 51) $generated@@721)) (=> (= (ControlFlow 0 54) 53) $generated@@720)))))
(let (($generated@@724  (=> (= (ControlFlow 0 24) (- 0 23)) (= ($generated@@260 $generated@@672 $generated@@660) ($generated@@260 $generated@@672 (- $generated@@660 $generated@@672))))))
(let (($generated@@725  (=> (and (forall (($generated@@726 T@U) ) (!  (=> (= (type $generated@@726) $generated@@2) (=> (and (<= ($generated@@174 1) ($generated $generated@@726)) ($generated@@0 ($generated@@92 $generated@@679 ($generated@@304 $generated@@726)))) (<= ($generated $generated@@726) $generated@@674)))
 :pattern ( ($generated@@92 $generated@@679 ($generated@@304 $generated@@726)))
)) (= (ControlFlow 0 25) 24)) $generated@@724)))
(let (($generated@@727  (=> ($generated@@175 $generated@@674 (- $generated@@660 $generated@@672)) (=> (and ($generated@@149 ($generated@@8 $generated@@672) $generated@@85 $generated@@673) ($generated@@173 $generated@@672)) (and (=> (= (ControlFlow 0 55) (- 0 57)) ($generated@@83 ($generated@@8 (- $generated@@660 $generated@@672)) $generated@@85)) (=> ($generated@@83 ($generated@@8 (- $generated@@660 $generated@@672)) $generated@@85) (=> (= $generated@@680 (- $generated@@660 $generated@@672)) (=> (and ($generated@@149 ($generated@@8 $generated@@680) $generated@@85 $generated@@673) ($generated@@173 (- $generated@@660 $generated@@672))) (=> (and (and ($generated@@173 $generated@@672) ($generated@@173 (- $generated@@660 $generated@@672))) (= $generated@@679 ($generated@@245 ($generated@@172 $generated@@672) ($generated@@172 (- $generated@@660 $generated@@672))))) (and (=> (= (ControlFlow 0 55) (- 0 56)) ($generated@@0 ($generated@@92 $generated@@679 ($generated@@304 ($generated@@8 $generated@@674))))) (=> ($generated@@0 ($generated@@92 $generated@@679 ($generated@@304 ($generated@@8 $generated@@674)))) (and (=> (= (ControlFlow 0 55) 54) $generated@@723) (=> (= (ControlFlow 0 55) 25) $generated@@725)))))))))))))
(let (($generated@@728  (=> (and (and (= (- $generated@@660 $generated@@672) ($generated@@300 $generated@@674 (- $generated@@681 $generated@@682))) (= (ControlFlow 0 12) (- 0 11))) ($generated@@176 $generated@@674 (- $generated@@660 $generated@@672))) (or ($generated@@175 $generated@@674 (- $generated@@660 $generated@@672)) (exists (($generated@@729 Int) ) (! (= ($generated@@300 $generated@@674 $generated@@729) (- $generated@@660 $generated@@672))
 :pattern ( ($generated@@300 $generated@@674 $generated@@729))
))))))
(let (($generated@@730  (=> (= $generated@@683 ($generated@@300 $generated@@674 $generated@@681)) (=> (and (<= ($generated@@174 1) $generated@@683) (= $generated@@684 ($generated@@300 $generated@@674 $generated@@682))) (=> (and (and (<= ($generated@@174 1) $generated@@684) (= $generated@@685 (- ($generated@@300 $generated@@674 $generated@@681) ($generated@@300 $generated@@674 $generated@@682)))) (and (<= ($generated@@174 1) $generated@@685) (= $generated@@686 (- $generated@@681 $generated@@682)))) (and (=> (= (ControlFlow 0 8) (- 0 10)) (<= ($generated@@174 1) $generated@@686)) (=> (<= ($generated@@174 1) $generated@@686) (=> (= $generated@@687 ($generated@@300 $generated@@674 (- $generated@@681 $generated@@682))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (<= ($generated@@174 1) $generated@@687)) (=> (<= ($generated@@174 1) $generated@@687) (=> (= (ControlFlow 0 8) (- 0 7)) (= (- ($generated@@300 $generated@@674 $generated@@681) ($generated@@300 $generated@@674 $generated@@682)) ($generated@@300 $generated@@674 (- $generated@@681 $generated@@682))))))))))))))
(let (($generated@@731  (=> (= $generated@@688 ($generated@@300 $generated@@674 $generated@@681)) (and (=> (= (ControlFlow 0 3) (- 0 6)) (<= ($generated@@174 1) $generated@@688)) (=> (<= ($generated@@174 1) $generated@@688) (=> (= $generated@@689 ($generated@@300 $generated@@674 $generated@@682)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (<= ($generated@@174 1) $generated@@689)) (=> (<= ($generated@@174 1) $generated@@689) (=> (= $generated@@690 (- ($generated@@300 $generated@@674 $generated@@681) ($generated@@300 $generated@@674 $generated@@682))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (<= ($generated@@174 1) $generated@@690)) (=> (<= ($generated@@174 1) $generated@@690) (=> (= (ControlFlow 0 3) (- 0 2)) (= (- $generated@@660 $generated@@672) (- ($generated@@300 $generated@@674 $generated@@681) ($generated@@300 $generated@@674 $generated@@682)))))))))))))))
(let (($generated@@732 true))
(let (($generated@@733  (and (=> (= (ControlFlow 0 13) (- 0 14)) (or (and ($generated@@83 ($generated@@8 ($generated@@174 1)) $generated@@85) (= ($generated@@300 $generated@@674 ($generated@@174 1)) $generated@@660)) (or (and ($generated@@83 ($generated@@8 ($generated@@174 0)) $generated@@85) (= ($generated@@300 $generated@@674 ($generated@@174 0)) $generated@@660)) (exists (($generated@@734 Int) )  (and (<= ($generated@@174 1) $generated@@734) (= ($generated@@300 $generated@@674 $generated@@734) $generated@@660)))))) (=> (or (and ($generated@@83 ($generated@@8 ($generated@@174 1)) $generated@@85) (= ($generated@@300 $generated@@674 ($generated@@174 1)) $generated@@660)) (or (and ($generated@@83 ($generated@@8 ($generated@@174 0)) $generated@@85) (= ($generated@@300 $generated@@674 ($generated@@174 0)) $generated@@660)) (exists (($generated@@735 Int) )  (and (<= ($generated@@174 1) $generated@@735) (= ($generated@@300 $generated@@674 $generated@@735) $generated@@660))))) (=> (and (<= ($generated@@174 1) $generated@@681) (= ($generated@@300 $generated@@674 $generated@@681) $generated@@660)) (and (and (and (=> (= (ControlFlow 0 13) 1) $generated@@732) (=> (= (ControlFlow 0 13) 3) $generated@@731)) (=> (= (ControlFlow 0 13) 8) $generated@@730)) (=> (= (ControlFlow 0 13) 12) $generated@@728)))))))
(let (($generated@@736  (=> (and (< $generated@@691 ($generated@@174 1)) (= (ControlFlow 0 17) 13)) $generated@@733)))
(let (($generated@@737  (=> (and (<= ($generated@@174 1) $generated@@691) (= $generated@@692 ($generated@@300 $generated@@674 $generated@@691))) (and (=> (= (ControlFlow 0 15) (- 0 16)) (<= ($generated@@174 1) $generated@@692)) (=> (<= ($generated@@174 1) $generated@@692) (=> (= (ControlFlow 0 15) 13) $generated@@733))))))
(let (($generated@@738  (and (=> (= (ControlFlow 0 18) (- 0 19)) (or (and ($generated@@83 ($generated@@8 ($generated@@174 1)) $generated@@85) (= ($generated@@300 $generated@@674 ($generated@@174 1)) $generated@@672)) (or (and ($generated@@83 ($generated@@8 ($generated@@174 0)) $generated@@85) (= ($generated@@300 $generated@@674 ($generated@@174 0)) $generated@@672)) (exists (($generated@@739 Int) )  (and (<= ($generated@@174 1) $generated@@739) (= ($generated@@300 $generated@@674 $generated@@739) $generated@@672)))))) (=> (or (and ($generated@@83 ($generated@@8 ($generated@@174 1)) $generated@@85) (= ($generated@@300 $generated@@674 ($generated@@174 1)) $generated@@672)) (or (and ($generated@@83 ($generated@@8 ($generated@@174 0)) $generated@@85) (= ($generated@@300 $generated@@674 ($generated@@174 0)) $generated@@672)) (exists (($generated@@740 Int) )  (and (<= ($generated@@174 1) $generated@@740) (= ($generated@@300 $generated@@674 $generated@@740) $generated@@672))))) (=> (and (<= ($generated@@174 1) $generated@@682) (= ($generated@@300 $generated@@674 $generated@@682) $generated@@672)) (and (=> (= (ControlFlow 0 18) 15) $generated@@737) (=> (= (ControlFlow 0 18) 17) $generated@@736)))))))
(let (($generated@@741  (=> (and (< $generated@@693 ($generated@@174 1)) (= (ControlFlow 0 22) 18)) $generated@@738)))
(let (($generated@@742  (=> (and (<= ($generated@@174 1) $generated@@693) (= $generated@@694 ($generated@@300 $generated@@674 $generated@@693))) (and (=> (= (ControlFlow 0 20) (- 0 21)) (<= ($generated@@174 1) $generated@@694)) (=> (<= ($generated@@174 1) $generated@@694) (=> (= (ControlFlow 0 20) 18) $generated@@738))))))
(let (($generated@@743  (=> (= $generated@@695 ($generated@@190 $generated@@696 $generated@@673 $generated@@60 false)) (=> (and ($generated@@149 ($generated@@8 $generated@@672) $generated@@85 $generated@@673) ($generated@@149 ($generated@@8 $generated@@660) $generated@@85 $generated@@673)) (=> (and (and ($generated@@261 $generated@@672 $generated@@660) ($generated@@261 $generated@@672 $generated@@660)) (and (= $generated@@674 ($generated@@260 $generated@@672 $generated@@660)) ($generated@@149 ($generated@@8 $generated@@674) $generated@@85 $generated@@673))) (and (=> (= (ControlFlow 0 58) (- 0 59)) ($generated@@83 ($generated@@8 (- $generated@@660 $generated@@672)) $generated@@85)) (=> ($generated@@83 ($generated@@8 (- $generated@@660 $generated@@672)) $generated@@85) (=> (and (and (= $generated@@697 (- $generated@@660 $generated@@672)) ($generated@@149 ($generated@@8 $generated@@697) $generated@@85 $generated@@673)) (and ($generated@@176 $generated@@674 (- $generated@@660 $generated@@672)) ($generated@@176 $generated@@674 (- $generated@@660 $generated@@672)))) (and (and (=> (= (ControlFlow 0 58) 55) $generated@@727) (=> (= (ControlFlow 0 58) 20) $generated@@742)) (=> (= (ControlFlow 0 58) 22) $generated@@741))))))))))
(let (($generated@@744  (=> (and ($generated@@77 $generated@@673) ($generated@@698 $generated@@673)) (=> (and (and (and (<= ($generated@@174 1) $generated@@672) (<= ($generated@@174 1) $generated@@660)) (and (<= ($generated@@174 1) $generated@@699) true)) (and (and (<= ($generated@@174 1) $generated@@700) true) (and (<= ($generated@@174 1) $generated@@701) true))) (=> (and (and (and (and ($generated@@83 $generated@@702 ($generated@@84 $generated@@85)) ($generated@@149 $generated@@702 ($generated@@84 $generated@@85) $generated@@673)) true) (and (<= ($generated@@174 1) $generated@@703) true)) (and (and (and (<= ($generated@@174 1) $generated@@704) true) (= 5 $generated@@74)) (and (< $generated@@672 $generated@@660) (= (ControlFlow 0 60) 58)))) $generated@@743)))))
$generated@@744))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 () Int)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 () T@U)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@T) T@U)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@89 (T@U) Int)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@149 (T@U T@U T@U) Bool)
(declare-fun $generated@@150 (Int) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@176 (Int) T@U)
(declare-fun $generated@@177 (Int) Bool)
(declare-fun $generated@@178 (Int) Int)
(declare-fun $generated@@179 (Int Int) Bool)
(declare-fun $generated@@180 (Int Int) Bool)
(declare-fun $generated@@181 (T@U Int Int) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@193 (T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@195 (T@T T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@256 (T@U T@U) T@U)
(declare-fun $generated@@257 (T@U T@U) Bool)
(declare-fun $generated@@264 (Int Int) Int)
(declare-fun $generated@@265 (Int Int) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@283 (T@U T@U T@U) Bool)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@304 (Int Int) Int)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@321 (T@U) Int)
(declare-fun $generated@@322 (T@T) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@T) T@U)
(declare-fun $generated@@349 (T@T T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@372 (T@T T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@450 (T@U T@U) T@U)
(declare-fun $generated@@458 (T@U T@U) T@U)
(declare-fun $generated@@476 (T@T) T@U)
(declare-fun $generated@@500 () T@T)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@548 (T@U Int) T@U)
(declare-fun $generated@@557 (T@U) Int)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@588 (T@U) Int)
(declare-fun $generated@@589 (T@U) Int)
(declare-fun $generated@@610 (T@U) T@U)
(declare-fun $generated@@661 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@96 $generated@@97)) 11)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@78 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@78 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@78 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@78 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@78 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@69 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@80)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@69 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 14)) (forall (($generated@@140 T@U) ) (! (let (($generated@@141 (type $generated@@140)))
(= (type ($generated@@76 $generated@@140)) $generated@@141))
 :pattern ( ($generated@@76 $generated@@140))
))) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@84 $generated@@142)) $generated@@66)
 :pattern ( ($generated@@84 $generated@@142))
))) (= (type $generated@@85) $generated@@66)) (forall (($generated@@143 T@T) ) (! (= (type ($generated@@87 $generated@@143)) ($generated@@78 $generated@@143 $generated@@4))
 :pattern ( ($generated@@87 $generated@@143))
))))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@145) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 ($generated@@76 $generated@@145)) (and (not (= 3 $generated@@74)) (and (and ($generated@@77 $generated@@144) ($generated@@83 $generated@@145 ($generated@@84 $generated@@85))) (not ($generated@@86 $generated@@145 ($generated@@87 $generated@@81))))))) (and ($generated@@88 ($generated@@76 $generated@@145)) (= ($generated@@75 ($generated@@76 $generated@@145)) (let (($generated@@146 ($generated@@89 ($generated@@76 $generated@@145))))
$generated@@146))))
 :weight 3
 :pattern ( ($generated@@75 ($generated@@76 $generated@@145)) ($generated@@77 $generated@@144))
))))
(assert (forall (($generated@@148 T@U) ) (! (= (type ($generated@@147 $generated@@148)) $generated@@67)
 :pattern ( ($generated@@147 $generated@@148))
)))
(assert (= ($generated@@147 $generated@@44) $generated@@49))
(assert (= ($generated@@147 $generated@@45) $generated@@50))
(assert (= ($generated@@147 $generated@@46) $generated@@51))
(assert (= ($generated@@147 $generated@@47) $generated@@52))
(assert (= ($generated@@147 $generated@@48) $generated@@53))
(assert (forall (($generated@@151 Int) ) (! (= (type ($generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@2) (= (type $generated@@153) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@149 $generated@@152 ($generated@@150 0) $generated@@153))
 :pattern ( ($generated@@149 $generated@@152 ($generated@@150 0) $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@156) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@154 $generated@@155 $generated@@156)) (forall (($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@79) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@155 $generated@@157) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@60))
)))
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@2) (= (type $generated@@159) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@149 $generated@@158 $generated@@85 $generated@@159))
 :pattern ( ($generated@@149 $generated@@158 $generated@@85 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@2) ($generated@@83 $generated@@160 ($generated@@150 0)))
 :pattern ( ($generated@@83 $generated@@160 ($generated@@150 0)))
)))
(assert  (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@66)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@66) (= (type $generated@@167) $generated@@66)) (= (type $generated@@168) $generated@@163)) ($generated@@83 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@83 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@81)
 :pattern ( ($generated@@170 $generated@@172))
)) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@81)
 :pattern ( ($generated@@171 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@163) (= (type $generated@@175) $generated@@163)) true) (= ($generated@@169 $generated@@174 $generated@@175)  (and (= ($generated@@170 $generated@@174) ($generated@@170 $generated@@175)) (= ($generated@@171 $generated@@174) ($generated@@171 $generated@@175)))))
 :pattern ( ($generated@@169 $generated@@174 $generated@@175))
)))
(assert  (and (forall (($generated@@182 Int) ) (! (= (type ($generated@@176 $generated@@182)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@176 $generated@@182))
)) (forall (($generated@@183 T@U) ($generated@@184 Int) ($generated@@185 Int) ) (! (= (type ($generated@@181 $generated@@183 $generated@@184 $generated@@185)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@181 $generated@@183 $generated@@184 $generated@@185))
))))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@186 Int) ) (!  (=> (or ($generated@@177 $generated@@186) (and (not (= 2 $generated@@74)) (<= ($generated@@178 1) $generated@@186))) (and (forall (($generated@@187 Int) ) (!  (=> (<= ($generated@@178 1) $generated@@187) (=> (<= $generated@@187 $generated@@186) ($generated@@180 $generated@@187 $generated@@186)))
 :pattern ( ($generated@@179 $generated@@187 $generated@@186))
)) (= ($generated@@176 $generated@@186) ($generated@@181 $generated@@85 $generated@@186 $generated@@186))))
 :pattern ( ($generated@@176 $generated@@186))
))))
(assert (forall (($generated@@190 T@U) ) (! (= (type ($generated@@188 $generated@@190)) $generated@@66)
 :pattern ( ($generated@@188 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@191) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@192) $generated@@66)) ($generated@@83 $generated@@191 ($generated@@188 $generated@@192))) ($generated@@189 $generated@@191))
 :pattern ( ($generated@@83 $generated@@191 ($generated@@188 $generated@@192)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@199 $generated@@200)) 16)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@201 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@195 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@197 ($generated@@195 $generated@@203 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@195 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@197 (type $generated@@205))))
(= (type ($generated@@193 $generated@@205 $generated@@206 $generated@@207)) $generated@@208))
 :pattern ( ($generated@@193 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(let (($generated@@214 (type $generated@@210)))
(= (type ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@195 $generated@@214 $generated@@213))))
 :pattern ( ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@197 (type $generated@@215))))
 (=> (= (type $generated@@218) $generated@@219) (= ($generated@@193 ($generated@@198 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@216 $generated@@217) $generated@@218)))
 :weight 0
))) (and (and (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@193 ($generated@@198 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@193 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@193 ($generated@@198 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@193 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or true (= ($generated@@193 ($generated@@198 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@193 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ) (! (= (type ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241)) ($generated@@195 $generated@@79 $generated@@4))
 :pattern ( ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 Bool) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@69 (type $generated@@247))))
 (=> (and (and (and (and (= (type $generated@@242) $generated@@79) (= (type $generated@@243) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@244) ($generated@@68 $generated@@4))) (= (type $generated@@246) $generated@@79)) (= (type $generated@@247) ($generated@@68 $generated@@248))) (= ($generated@@0 ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))  (=> (and (not (= $generated@@246 $generated@@242)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@243 $generated@@246) $generated@@244))) $generated@@245))))
 :pattern ( ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@90 (type $generated@@250))))
(= (type ($generated@@249 $generated@@250 $generated@@251)) ($generated@@78 $generated@@252 $generated@@4)))
 :pattern ( ($generated@@249 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (! (let (($generated@@255 ($generated@@90 (type $generated@@253))))
 (=> (and (= (type $generated@@253) ($generated@@78 $generated@@255 $generated@@4)) (= (type $generated@@254) ($generated@@78 $generated@@255 $generated@@4))) (= ($generated@@249 ($generated@@249 $generated@@253 $generated@@254) $generated@@254) ($generated@@249 $generated@@253 $generated@@254))))
 :pattern ( ($generated@@249 ($generated@@249 $generated@@253 $generated@@254) $generated@@254))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (= (type ($generated@@256 $generated@@258 $generated@@259)) $generated@@163)
 :pattern ( ($generated@@256 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (= (type $generated@@260) $generated@@66) (= (type $generated@@261) $generated@@66)) (= (type $generated@@262) $generated@@81)) (= (type $generated@@263) $generated@@81)) (= ($generated@@83 ($generated@@256 $generated@@262 $generated@@263) ($generated@@162 $generated@@260 $generated@@261))  (and ($generated@@257 $generated@@262 $generated@@260) ($generated@@257 $generated@@263 $generated@@261))))
 :pattern ( ($generated@@83 ($generated@@256 $generated@@262 $generated@@263) ($generated@@162 $generated@@260 $generated@@261)))
)))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@266 Int) ($generated@@267 Int) ) (!  (=> (or ($generated@@265 $generated@@266 $generated@@267) (and (not (= 4 $generated@@74)) (and (<= ($generated@@178 1) $generated@@266) (<= ($generated@@178 1) $generated@@267)))) (and (and (and ($generated@@177 $generated@@266) ($generated@@177 $generated@@267)) (let (($generated@@268 ($generated@@249 ($generated@@176 $generated@@266) ($generated@@176 $generated@@267))))
($generated@@82 $generated@@268))) (= ($generated@@264 $generated@@266 $generated@@267) (let (($generated@@269 ($generated@@249 ($generated@@176 $generated@@266) ($generated@@176 $generated@@267))))
($generated@@75 $generated@@269)))))
 :pattern ( ($generated@@264 $generated@@266 $generated@@267))
))))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@163) (= (type $generated@@271) $generated@@163)) (= ($generated@@169 $generated@@270 $generated@@271) (= $generated@@270 $generated@@271)))
 :pattern ( ($generated@@169 $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@273) $generated@@66)) (= ($generated@@83 $generated@@272 ($generated@@84 $generated@@273)) (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@81) ($generated@@0 ($generated@@92 $generated@@272 $generated@@274))) ($generated@@257 $generated@@274 $generated@@273))
 :pattern ( ($generated@@92 $generated@@272 $generated@@274))
))))
 :pattern ( ($generated@@83 $generated@@272 ($generated@@84 $generated@@273)))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@66)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@278) $generated@@66)) (= ($generated@@83 $generated@@277 ($generated@@275 $generated@@278)) (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@81) ($generated@@0 ($generated@@92 $generated@@277 $generated@@279))) ($generated@@257 $generated@@279 $generated@@278))
 :pattern ( ($generated@@92 $generated@@277 $generated@@279))
))))
 :pattern ( ($generated@@83 $generated@@277 ($generated@@275 $generated@@278)))
)))
(assert (forall (($generated@@280 Int) ) (! (= ($generated@@178 $generated@@280) $generated@@280)
 :pattern ( ($generated@@178 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (! (= ($generated@@76 $generated@@281) $generated@@281)
 :pattern ( ($generated@@76 $generated@@281))
)))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) ($generated@@78 $generated@@81 $generated@@4)) (or ($generated@@82 $generated@@282) (and (not (= 3 $generated@@74)) (and ($generated@@83 $generated@@282 ($generated@@84 $generated@@85)) (not ($generated@@86 $generated@@282 ($generated@@87 $generated@@81))))))) (<= ($generated@@178 1) ($generated@@75 $generated@@282)))
 :pattern ( ($generated@@75 $generated@@282))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@284) $generated@@66) (= (type $generated@@285) $generated@@66)) (= (type $generated@@286) $generated@@81)) (= (type $generated@@287) $generated@@81)) (= (type $generated@@288) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@77 $generated@@288)) (= ($generated@@149 ($generated@@256 $generated@@286 $generated@@287) ($generated@@162 $generated@@284 $generated@@285) $generated@@288)  (and ($generated@@283 $generated@@286 $generated@@284 $generated@@288) ($generated@@283 $generated@@287 $generated@@285 $generated@@288))))
 :pattern ( ($generated@@149 ($generated@@256 $generated@@286 $generated@@287) ($generated@@162 $generated@@284 $generated@@285) $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@70)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@163) (= ($generated@@161 $generated@@291) (= ($generated@@289 $generated@@291) $generated@@61)))
 :pattern ( ($generated@@161 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@163) ($generated@@161 $generated@@292)) (exists (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (and (and (= (type $generated@@293) $generated@@81) (= (type $generated@@294) $generated@@81)) (= $generated@@292 ($generated@@256 $generated@@293 $generated@@294)))
 :no-pattern (type $generated@@293)
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
)))
 :pattern ( ($generated@@161 $generated@@292))
)))
(assert  (and (and (forall (($generated@@299 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@299)) 17)) (forall (($generated@@300 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@300)) $generated@@300)
 :pattern ( ($generated@@297 $generated@@300))
))) (forall (($generated@@301 T@T) ) (! (= (type ($generated@@295 $generated@@301)) ($generated@@297 $generated@@301))
 :pattern ( ($generated@@295 $generated@@301))
))))
(assert (forall (($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@302)) 0)
 :pattern ( ($generated@@295 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (= (type $generated@@303) $generated@@2) (= ($generated@@83 $generated@@303 $generated@@85) (<= ($generated@@178 1) ($generated $generated@@303))))
 :pattern ( ($generated@@83 $generated@@303 $generated@@85))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@305 Int) ($generated@@306 Int) ) (!  (=> (or ($generated@@180 ($generated@@178 $generated@@305) ($generated@@178 $generated@@306)) (and (not (= 1 $generated@@74)) (and (<= ($generated@@178 1) $generated@@305) (<= ($generated@@178 1) $generated@@306)))) (= ($generated@@179 ($generated@@178 $generated@@305) ($generated@@178 $generated@@306)) (exists (($generated@@307 Int) ) (! (= ($generated@@304 ($generated@@178 $generated@@305) $generated@@307) ($generated@@178 $generated@@306))
 :pattern ( ($generated@@304 $generated@@305 $generated@@307))
))))
 :weight 3
 :pattern ( ($generated@@179 ($generated@@178 $generated@@305) ($generated@@178 $generated@@306)))
))))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@81)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@66) (= (type $generated@@312) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@283 ($generated@@308 $generated@@310) $generated@@311 $generated@@312) ($generated@@149 $generated@@310 $generated@@311 $generated@@312)))
 :pattern ( ($generated@@283 ($generated@@308 $generated@@310) $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@313) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@314) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@315) $generated@@81)) (= (type $generated@@316) $generated@@66)) ($generated@@154 $generated@@313 $generated@@314)) ($generated@@283 $generated@@315 $generated@@316 $generated@@313)) ($generated@@283 $generated@@315 $generated@@316 $generated@@314))
 :pattern ( ($generated@@154 $generated@@313 $generated@@314) ($generated@@283 $generated@@315 $generated@@316 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@317) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@318) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@320) $generated@@66)) ($generated@@154 $generated@@317 $generated@@318)) ($generated@@149 $generated@@319 $generated@@320 $generated@@317)) ($generated@@149 $generated@@319 $generated@@320 $generated@@318))
 :pattern ( ($generated@@154 $generated@@317 $generated@@318) ($generated@@149 $generated@@319 $generated@@320 $generated@@317))
)))
(assert (forall (($generated@@323 T@T) ) (! (= (type ($generated@@322 $generated@@323)) ($generated@@78 $generated@@323 $generated@@2))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@90 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@78 $generated@@325 $generated@@2)) (and (= (= ($generated@@321 $generated@@324) 0) (= $generated@@324 ($generated@@322 $generated@@325))) (=> (not (= ($generated@@321 $generated@@324) 0)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) (< 0 ($generated ($generated@@92 $generated@@324 $generated@@326))))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@78 $generated@@81 $generated@@4)) ($generated@@88 $generated@@327)) (and ($generated@@0 ($generated@@92 $generated@@327 ($generated@@308 ($generated@@8 ($generated@@89 $generated@@327))))) (forall (($generated@@328 T@U) ) (!  (=> (and (and (= (type $generated@@328) $generated@@2) true) ($generated@@0 ($generated@@92 $generated@@327 ($generated@@308 $generated@@328)))) (<= ($generated $generated@@328) ($generated@@89 $generated@@327)))
 :pattern ( ($generated@@92 $generated@@327 ($generated@@308 $generated@@328)))
))))
 :pattern ( ($generated@@89 $generated@@327))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 18)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@78 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@92 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@92 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert  (and (and (and (and (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (= ($generated@@1 ($generated@@349 $generated@@352 $generated@@353)) 19)) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@349 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@351 ($generated@@349 $generated@@356 $generated@@357)) $generated@@357)
 :pattern ( ($generated@@349 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@350 (type $generated@@358))))
(= (type ($generated@@347 $generated@@358)) ($generated@@78 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@358))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= (type ($generated@@348 $generated@@360 $generated@@361)) ($generated@@349 $generated@@360 $generated@@361))
 :pattern ( ($generated@@348 $generated@@360 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@T) ) (! (let (($generated@@364 (type $generated@@362)))
 (not ($generated@@0 ($generated@@92 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362))))
 :pattern ( (let (($generated@@364 (type $generated@@362)))
($generated@@92 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362)))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@90 (type $generated@@365))))
 (=> (and (= (type $generated@@365) ($generated@@78 $generated@@367 $generated@@4)) (= (type $generated@@366) ($generated@@78 $generated@@367 $generated@@4))) (= ($generated@@86 $generated@@365 $generated@@366) (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@367) (= ($generated@@0 ($generated@@92 $generated@@365 $generated@@368)) ($generated@@0 ($generated@@92 $generated@@366 $generated@@368))))
 :pattern ( ($generated@@92 $generated@@365 $generated@@368))
 :pattern ( ($generated@@92 $generated@@366 $generated@@368))
)))))
 :pattern ( ($generated@@86 $generated@@365 $generated@@366))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@90 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@78 $generated@@370 $generated@@2)) (= ($generated@@189 $generated@@369) (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@370) (and (<= 0 ($generated ($generated@@92 $generated@@369 $generated@@371))) (<= ($generated ($generated@@92 $generated@@369 $generated@@371)) ($generated@@321 $generated@@369))))
 :pattern ( ($generated@@92 $generated@@369 $generated@@371))
)))))
 :pattern ( ($generated@@189 $generated@@369))
)))
(assert (forall (($generated@@373 T@T) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@373)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@81) ($generated@@257 $generated@@375 $generated@@85)) (and (= ($generated@@308 ($generated@@372 $generated@@2 $generated@@375)) $generated@@375) ($generated@@83 ($generated@@372 $generated@@2 $generated@@375) $generated@@85)))
 :pattern ( ($generated@@257 $generated@@375 $generated@@85))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@333 (type $generated@@376))))
(let (($generated@@378 ($generated@@332 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@331 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@330 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) ($generated@@0 ($generated@@92 ($generated@@329 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@329 $generated@@376))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@333 (type $generated@@381))))
(= (type ($generated@@380 $generated@@381)) ($generated@@78 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@333 (type $generated@@383))))
(let (($generated@@385 ($generated@@332 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@331 $generated@@385 $generated@@384)) (or (= $generated@@383 ($generated@@330 $generated@@385 $generated@@384)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@384) ($generated@@0 ($generated@@92 ($generated@@380 $generated@@383) $generated@@386)))
 :no-pattern (type $generated@@386)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
))))))
 :pattern ( ($generated@@380 $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@351 (type $generated@@387))))
(let (($generated@@389 ($generated@@350 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@349 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@348 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) ($generated@@0 ($generated@@92 ($generated@@347 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@347 $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@351 (type $generated@@392))))
(= (type ($generated@@391 $generated@@392)) ($generated@@78 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@351 (type $generated@@394))))
(let (($generated@@396 ($generated@@350 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@349 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@348 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@395) ($generated@@0 ($generated@@92 ($generated@@391 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@391 $generated@@394))
)))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@398 Int) ($generated@@399 Int) ) (!  (=> (or ($generated@@265 $generated@@398 $generated@@399) (and (not (= 4 $generated@@74)) (and (<= ($generated@@178 1) $generated@@398) (<= ($generated@@178 1) $generated@@399)))) (<= ($generated@@178 1) ($generated@@264 $generated@@398 $generated@@399)))
 :pattern ( ($generated@@264 $generated@@398 $generated@@399))
))))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@400 Int) ) (!  (=> (or ($generated@@177 ($generated@@178 $generated@@400)) (and (not (= 2 $generated@@74)) (<= ($generated@@178 1) $generated@@400))) (and (forall (($generated@@401 Int) ) (!  (=> (<= ($generated@@178 1) $generated@@401) (=> (<= $generated@@401 ($generated@@178 $generated@@400)) ($generated@@180 $generated@@401 ($generated@@178 $generated@@400))))
 :pattern ( ($generated@@179 $generated@@401 $generated@@400))
)) (= ($generated@@176 ($generated@@178 $generated@@400)) ($generated@@181 $generated@@85 ($generated@@178 $generated@@400) ($generated@@178 $generated@@400)))))
 :weight 3
 :pattern ( ($generated@@176 ($generated@@178 $generated@@400)))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@403) $generated@@66)) (= ($generated@@83 $generated@@402 ($generated@@188 $generated@@403)) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@81) (< 0 ($generated ($generated@@92 $generated@@402 $generated@@404)))) ($generated@@257 $generated@@404 $generated@@403))
 :pattern ( ($generated@@92 $generated@@402 $generated@@404))
))))
 :pattern ( ($generated@@83 $generated@@402 ($generated@@188 $generated@@403)))
)))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@405 Int) ) (!  (=> (or ($generated@@177 $generated@@405) (and (not (= 2 $generated@@74)) (<= ($generated@@178 1) $generated@@405))) ($generated@@83 ($generated@@176 $generated@@405) ($generated@@84 $generated@@85)))
 :pattern ( ($generated@@176 $generated@@405))
))))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@406 Int) ($generated@@407 Int) ) (!  (=> (or ($generated@@265 ($generated@@178 $generated@@406) ($generated@@178 $generated@@407)) (and (not (= 4 $generated@@74)) (and (<= ($generated@@178 1) $generated@@406) (<= ($generated@@178 1) $generated@@407)))) (and (and (and ($generated@@177 ($generated@@178 $generated@@406)) ($generated@@177 ($generated@@178 $generated@@407))) (let (($generated@@408 ($generated@@249 ($generated@@176 ($generated@@178 $generated@@406)) ($generated@@176 ($generated@@178 $generated@@407)))))
($generated@@82 $generated@@408))) (= ($generated@@264 ($generated@@178 $generated@@406) ($generated@@178 $generated@@407)) (let (($generated@@409 ($generated@@249 ($generated@@176 ($generated@@178 $generated@@406)) ($generated@@176 ($generated@@178 $generated@@407)))))
($generated@@75 $generated@@409)))))
 :weight 3
 :pattern ( ($generated@@264 ($generated@@178 $generated@@406) ($generated@@178 $generated@@407)))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
 (=> (and (= (type $generated@@410) ($generated@@78 $generated@@413 $generated@@4)) (= (type $generated@@411) ($generated@@78 $generated@@413 $generated@@4))) (= ($generated@@0 ($generated@@92 ($generated@@249 $generated@@410 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@92 $generated@@410 $generated@@412)) ($generated@@0 ($generated@@92 $generated@@411 $generated@@412))))))
 :pattern ( ($generated@@92 ($generated@@249 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (= (type $generated@@414) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@415) $generated@@66)) (= (type $generated@@416) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@414 ($generated@@84 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@81) ($generated@@0 ($generated@@92 $generated@@414 $generated@@417))) ($generated@@283 $generated@@417 $generated@@415 $generated@@416))
 :pattern ( ($generated@@92 $generated@@414 $generated@@417))
))))
 :pattern ( ($generated@@149 $generated@@414 ($generated@@84 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@419) $generated@@66)) (= (type $generated@@420) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@418 ($generated@@275 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@81) ($generated@@0 ($generated@@92 $generated@@418 $generated@@421))) ($generated@@283 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@92 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@149 $generated@@418 ($generated@@275 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(= ($generated ($generated@@92 ($generated@@322 $generated@@423) $generated@@422)) 0))
 :pattern ( (let (($generated@@423 (type $generated@@422)))
($generated@@92 ($generated@@322 $generated@@423) $generated@@422)))
)))
(assert  (and (forall (($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@426)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@424 $generated@@426))
)) (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@333 (type $generated@@427))))
(let (($generated@@429 ($generated@@332 (type $generated@@427))))
(= (type ($generated@@425 $generated@@427)) ($generated@@78 $generated@@429 $generated@@428))))
 :pattern ( ($generated@@425 $generated@@427))
))))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) ($generated@@331 $generated@@81 $generated@@81)) (= (type $generated@@431) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@424 $generated@@430) $generated@@431))  (and ($generated@@0 ($generated@@92 ($generated@@329 $generated@@430) ($generated@@170 ($generated@@372 $generated@@163 $generated@@431)))) (= ($generated@@92 ($generated@@425 $generated@@430) ($generated@@170 ($generated@@372 $generated@@163 $generated@@431))) ($generated@@171 ($generated@@372 $generated@@163 $generated@@431))))))
 :pattern ( ($generated@@92 ($generated@@424 $generated@@430) $generated@@431))
)))
(assert  (and (forall (($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@434)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@432 $generated@@434))
)) (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@351 (type $generated@@435))))
(let (($generated@@437 ($generated@@350 (type $generated@@435))))
(= (type ($generated@@433 $generated@@435)) ($generated@@78 $generated@@437 $generated@@436))))
 :pattern ( ($generated@@433 $generated@@435))
))))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) ($generated@@349 $generated@@81 $generated@@81)) (= (type $generated@@439) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@432 $generated@@438) $generated@@439))  (and ($generated@@0 ($generated@@92 ($generated@@347 $generated@@438) ($generated@@170 ($generated@@372 $generated@@163 $generated@@439)))) (= ($generated@@92 ($generated@@433 $generated@@438) ($generated@@170 ($generated@@372 $generated@@163 $generated@@439))) ($generated@@171 ($generated@@372 $generated@@163 $generated@@439))))))
 :pattern ( ($generated@@92 ($generated@@432 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (let (($generated@@442 (type $generated@@441)))
(let (($generated@@443 ($generated@@332 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@331 $generated@@443 $generated@@442)) (= ($generated@@0 ($generated@@92 ($generated@@380 $generated@@440) $generated@@441)) (exists (($generated@@444 T@U) ) (!  (and (= (type $generated@@444) $generated@@443) (and ($generated@@0 ($generated@@92 ($generated@@329 $generated@@440) $generated@@444)) (= $generated@@441 ($generated@@92 ($generated@@425 $generated@@440) $generated@@444))))
 :pattern ( ($generated@@92 ($generated@@329 $generated@@440) $generated@@444))
 :pattern ( ($generated@@92 ($generated@@425 $generated@@440) $generated@@444))
))))))
 :pattern ( ($generated@@92 ($generated@@380 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@446)))
(let (($generated@@448 ($generated@@350 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@349 $generated@@448 $generated@@447)) (= ($generated@@0 ($generated@@92 ($generated@@391 $generated@@445) $generated@@446)) (exists (($generated@@449 T@U) ) (!  (and (= (type $generated@@449) $generated@@448) (and ($generated@@0 ($generated@@92 ($generated@@347 $generated@@445) $generated@@449)) (= $generated@@446 ($generated@@92 ($generated@@433 $generated@@445) $generated@@449))))
 :pattern ( ($generated@@92 ($generated@@347 $generated@@445) $generated@@449))
 :pattern ( ($generated@@92 ($generated@@433 $generated@@445) $generated@@449))
))))))
 :pattern ( ($generated@@92 ($generated@@391 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (= (type ($generated@@450 $generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@450 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (and (= (type $generated@@453) ($generated@@331 $generated@@81 $generated@@81)) (= (type $generated@@454) $generated@@66)) (= (type $generated@@455) $generated@@66)) (= (type $generated@@456) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456) (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@329 $generated@@453) $generated@@457))) (and ($generated@@283 ($generated@@92 ($generated@@425 $generated@@453) $generated@@457) $generated@@455 $generated@@456) ($generated@@283 $generated@@457 $generated@@454 $generated@@456)))
 :pattern ( ($generated@@92 ($generated@@425 $generated@@453) $generated@@457))
 :pattern ( ($generated@@92 ($generated@@329 $generated@@453) $generated@@457))
))))
 :pattern ( ($generated@@149 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (! (= (type ($generated@@458 $generated@@459 $generated@@460)) $generated@@66)
 :pattern ( ($generated@@458 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (and (= (type $generated@@461) ($generated@@349 $generated@@81 $generated@@81)) (= (type $generated@@462) $generated@@66)) (= (type $generated@@463) $generated@@66)) (= (type $generated@@464) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@461 ($generated@@458 $generated@@462 $generated@@463) $generated@@464) (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@347 $generated@@461) $generated@@465))) (and ($generated@@283 ($generated@@92 ($generated@@433 $generated@@461) $generated@@465) $generated@@463 $generated@@464) ($generated@@283 $generated@@465 $generated@@462 $generated@@464)))
 :pattern ( ($generated@@92 ($generated@@433 $generated@@461) $generated@@465))
 :pattern ( ($generated@@92 ($generated@@347 $generated@@461) $generated@@465))
))))
 :pattern ( ($generated@@149 $generated@@461 ($generated@@458 $generated@@462 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@90 (type $generated@@466))))
 (=> (and (and (= (type $generated@@466) ($generated@@78 $generated@@468 $generated@@4)) (= (type $generated@@467) ($generated@@78 $generated@@468 $generated@@4))) ($generated@@86 $generated@@466 $generated@@467)) (= $generated@@466 $generated@@467)))
 :pattern ( ($generated@@86 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 Int) ($generated@@471 Int) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@472) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@181 $generated@@469 $generated@@470 $generated@@471) $generated@@472))  (and ($generated@@257 $generated@@472 $generated@@469) (and (<= ($generated ($generated@@372 $generated@@2 $generated@@472)) $generated@@470) ($generated@@179 ($generated ($generated@@372 $generated@@2 $generated@@472)) $generated@@471)))))
 :pattern ( ($generated@@92 ($generated@@181 $generated@@469 $generated@@470 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@473) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@474) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@475) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@473 $generated@@475))) (and ($generated@@154 $generated@@473 $generated@@474) ($generated@@154 $generated@@474 $generated@@475))) ($generated@@154 $generated@@473 $generated@@475))
 :pattern ( ($generated@@154 $generated@@473 $generated@@474) ($generated@@154 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@T) ) (! (= (type ($generated@@476 $generated@@477)) ($generated@@78 $generated@@477 $generated@@4))
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@351 (type $generated@@478))))
(let (($generated@@480 ($generated@@350 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@349 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@348 $generated@@480 $generated@@479)) (= ($generated@@347 $generated@@478) ($generated@@476 $generated@@480))))))
 :pattern ( ($generated@@347 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@351 (type $generated@@481))))
(let (($generated@@483 ($generated@@350 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@349 $generated@@483 $generated@@482)) (= (= $generated@@481 ($generated@@348 $generated@@483 $generated@@482)) (= ($generated@@391 $generated@@481) ($generated@@476 $generated@@482))))))
 :pattern ( ($generated@@391 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@351 (type $generated@@484))))
(let (($generated@@486 ($generated@@350 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@349 $generated@@486 $generated@@485)) (= (= $generated@@484 ($generated@@348 $generated@@486 $generated@@485)) (= ($generated@@432 $generated@@484) ($generated@@476 $generated@@81))))))
 :pattern ( ($generated@@432 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@333 (type $generated@@487))))
(let (($generated@@489 ($generated@@332 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@331 $generated@@489 $generated@@488)) (or (= $generated@@487 ($generated@@330 $generated@@489 $generated@@488)) (exists (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (and (and (= (type $generated@@490) $generated@@81) (= (type $generated@@491) $generated@@81)) ($generated@@0 ($generated@@92 ($generated@@424 $generated@@487) ($generated@@308 ($generated@@256 $generated@@490 $generated@@491)))))
 :no-pattern (type $generated@@490)
 :no-pattern (type $generated@@491)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
))))))
 :pattern ( ($generated@@424 $generated@@487))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@351 (type $generated@@492))))
(let (($generated@@494 ($generated@@350 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@349 $generated@@494 $generated@@493)) (or (= $generated@@492 ($generated@@348 $generated@@494 $generated@@493)) (exists (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (and (and (= (type $generated@@495) $generated@@81) (= (type $generated@@496) $generated@@81)) ($generated@@0 ($generated@@92 ($generated@@432 $generated@@492) ($generated@@308 ($generated@@256 $generated@@495 $generated@@496)))))
 :no-pattern (type $generated@@495)
 :no-pattern (type $generated@@496)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
 :no-pattern ($generated $generated@@496)
 :no-pattern ($generated@@0 $generated@@496)
))))))
 :pattern ( ($generated@@432 $generated@@492))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@81) ($generated@@257 $generated@@497 $generated@@46)) (and (= ($generated@@308 ($generated@@372 $generated@@2 $generated@@497)) $generated@@497) ($generated@@83 ($generated@@372 $generated@@2 $generated@@497) $generated@@46)))
 :pattern ( ($generated@@257 $generated@@497 $generated@@46))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@81) ($generated@@257 $generated@@498 $generated@@47)) (and (= ($generated@@308 ($generated@@372 $generated@@3 $generated@@498)) $generated@@498) ($generated@@83 ($generated@@372 $generated@@3 $generated@@498) $generated@@47)))
 :pattern ( ($generated@@257 $generated@@498 $generated@@47))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@81) ($generated@@257 $generated@@499 $generated@@44)) (and (= ($generated@@308 ($generated@@372 $generated@@4 $generated@@499)) $generated@@499) ($generated@@83 ($generated@@372 $generated@@4 $generated@@499) $generated@@44)))
 :pattern ( ($generated@@257 $generated@@499 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@500) 20))
(assert (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@81) ($generated@@257 $generated@@501 $generated@@45)) (and (= ($generated@@308 ($generated@@372 $generated@@500 $generated@@501)) $generated@@501) ($generated@@83 ($generated@@372 $generated@@500 $generated@@501) $generated@@45)))
 :pattern ( ($generated@@257 $generated@@501 $generated@@45))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@257 ($generated@@308 $generated@@502) $generated@@503) ($generated@@83 $generated@@502 $generated@@503)))
 :pattern ( ($generated@@257 ($generated@@308 $generated@@502) $generated@@503))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@504 Int) ($generated@@505 Int) ) (!  (=> (or ($generated@@180 $generated@@504 $generated@@505) (and (not (= 1 $generated@@74)) (and (<= ($generated@@178 1) $generated@@504) (<= ($generated@@178 1) $generated@@505)))) (= ($generated@@179 $generated@@504 $generated@@505) (exists (($generated@@506 Int) ) (! (= ($generated@@304 $generated@@504 $generated@@506) $generated@@505)
 :pattern ( ($generated@@304 $generated@@504 $generated@@506))
))))
 :pattern ( ($generated@@179 $generated@@504 $generated@@505))
))))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@90 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@78 $generated@@508 $generated@@2)) (<= 0 ($generated@@321 $generated@@507))))
 :pattern ( ($generated@@321 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@298 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@297 $generated@@510)) (<= 0 ($generated@@296 $generated@@509))))
 :pattern ( ($generated@@296 $generated@@509))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@511 Int) ($generated@@512 Int) ) (!  (=> (or ($generated@@180 $generated@@511 $generated@@512) (and (not (= 1 $generated@@74)) (and (<= ($generated@@178 1) $generated@@511) (<= ($generated@@178 1) $generated@@512)))) true)
 :pattern ( ($generated@@179 $generated@@511 $generated@@512))
))))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@66)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@66) (= (type $generated@@516) $generated@@66)) (= ($generated@@513 ($generated@@450 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@450 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@66)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@66) (= (type $generated@@520) $generated@@66)) (= ($generated@@517 ($generated@@450 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@450 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@66) (= (type $generated@@522) $generated@@66)) (= ($generated@@147 ($generated@@450 $generated@@521 $generated@@522)) $generated@@58))
 :pattern ( ($generated@@450 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@66)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@66) (= (type $generated@@526) $generated@@66)) (= ($generated@@523 ($generated@@458 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@458 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@66)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@66) (= (type $generated@@530) $generated@@66)) (= ($generated@@527 ($generated@@458 $generated@@529 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@458 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@66) (= (type $generated@@532) $generated@@66)) (= ($generated@@147 ($generated@@458 $generated@@531 $generated@@532)) $generated@@59))
 :pattern ( ($generated@@458 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@81) (= (type $generated@@534) $generated@@81)) (= ($generated@@289 ($generated@@256 $generated@@533 $generated@@534)) $generated@@61))
 :pattern ( ($generated@@256 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@66)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@66) (= (type $generated@@538) $generated@@66)) (= ($generated@@535 ($generated@@162 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@162 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@66)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@66) (= (type $generated@@542) $generated@@66)) (= ($generated@@539 ($generated@@162 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@162 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@81) (= (type $generated@@544) $generated@@81)) (= ($generated@@170 ($generated@@256 $generated@@543 $generated@@544)) $generated@@543))
 :pattern ( ($generated@@256 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@81) (= (type $generated@@546) $generated@@81)) (= ($generated@@171 ($generated@@256 $generated@@545 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@256 $generated@@545 $generated@@546))
)))
(assert  (and (forall (($generated@@549 T@U) ) (! (= (type ($generated@@547 $generated@@549)) $generated@@66)
 :pattern ( ($generated@@547 $generated@@549))
)) (forall (($generated@@550 T@U) ($generated@@551 Int) ) (! (let (($generated@@552 ($generated@@298 (type $generated@@550))))
(= (type ($generated@@548 $generated@@550 $generated@@551)) $generated@@552))
 :pattern ( ($generated@@548 $generated@@550 $generated@@551))
))))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@297 $generated@@81)) (= (type $generated@@554) $generated@@66)) (= (type $generated@@555) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@553 ($generated@@547 $generated@@554) $generated@@555) (forall (($generated@@556 Int) ) (!  (=> (and (<= 0 $generated@@556) (< $generated@@556 ($generated@@296 $generated@@553))) ($generated@@283 ($generated@@548 $generated@@553 $generated@@556) $generated@@554 $generated@@555))
 :pattern ( ($generated@@548 $generated@@553 $generated@@556))
))))
 :pattern ( ($generated@@149 $generated@@553 ($generated@@547 $generated@@554) $generated@@555))
)))
(assert (forall (($generated@@558 Int) ) (! (= ($generated@@557 ($generated@@150 $generated@@558)) $generated@@558)
 :pattern ( ($generated@@150 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@66)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@66) (= ($generated@@559 ($generated@@84 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@84 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@66) (= ($generated@@147 ($generated@@84 $generated@@562)) $generated@@54))
 :pattern ( ($generated@@84 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@66)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@66) (= ($generated@@563 ($generated@@275 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@275 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@66) (= ($generated@@147 ($generated@@275 $generated@@566)) $generated@@55))
 :pattern ( ($generated@@275 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@66)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@66) (= ($generated@@567 ($generated@@188 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@188 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@66) (= ($generated@@147 ($generated@@188 $generated@@570)) $generated@@56))
 :pattern ( ($generated@@188 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@66)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@66) (= ($generated@@571 ($generated@@547 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@547 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@66) (= ($generated@@147 ($generated@@547 $generated@@574)) $generated@@57))
 :pattern ( ($generated@@547 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
(= ($generated@@372 $generated@@576 ($generated@@308 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@308 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@331 $generated@@81 $generated@@81)) (= (type $generated@@578) $generated@@66)) (= (type $generated@@579) $generated@@66)) (= ($generated@@83 $generated@@577 ($generated@@450 $generated@@578 $generated@@579)) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@329 $generated@@577) $generated@@580))) (and ($generated@@257 ($generated@@92 ($generated@@425 $generated@@577) $generated@@580) $generated@@579) ($generated@@257 $generated@@580 $generated@@578)))
 :pattern ( ($generated@@92 ($generated@@425 $generated@@577) $generated@@580))
 :pattern ( ($generated@@92 ($generated@@329 $generated@@577) $generated@@580))
))))
 :pattern ( ($generated@@83 $generated@@577 ($generated@@450 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@349 $generated@@81 $generated@@81)) (= (type $generated@@582) $generated@@66)) (= (type $generated@@583) $generated@@66)) (= ($generated@@83 $generated@@581 ($generated@@458 $generated@@582 $generated@@583)) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@347 $generated@@581) $generated@@584))) (and ($generated@@257 ($generated@@92 ($generated@@433 $generated@@581) $generated@@584) $generated@@583) ($generated@@257 $generated@@584 $generated@@582)))
 :pattern ( ($generated@@92 ($generated@@433 $generated@@581) $generated@@584))
 :pattern ( ($generated@@92 ($generated@@347 $generated@@581) $generated@@584))
))))
 :pattern ( ($generated@@83 $generated@@581 ($generated@@458 $generated@@582 $generated@@583)))
)))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@586) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 $generated@@586) (and (not (= 3 $generated@@74)) (and (and ($generated@@77 $generated@@585) ($generated@@83 $generated@@586 ($generated@@84 $generated@@85))) (not ($generated@@86 $generated@@586 ($generated@@87 $generated@@81))))))) (and ($generated@@88 $generated@@586) (= ($generated@@75 $generated@@586) (let (($generated@@587 ($generated@@89 $generated@@586)))
$generated@@587))))
 :pattern ( ($generated@@75 $generated@@586) ($generated@@77 $generated@@585))
))))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@81) (= (type $generated@@591) $generated@@81)) (< ($generated@@588 $generated@@590) ($generated@@589 ($generated@@256 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@256 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@81) (= (type $generated@@593) $generated@@81)) (< ($generated@@588 $generated@@593) ($generated@@589 ($generated@@256 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@256 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (! (let (($generated@@596 ($generated@@90 (type $generated@@594))))
 (=> (and (= (type $generated@@594) ($generated@@78 $generated@@596 $generated@@4)) (= (type $generated@@595) ($generated@@78 $generated@@596 $generated@@4))) (= ($generated@@249 $generated@@594 ($generated@@249 $generated@@594 $generated@@595)) ($generated@@249 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@249 $generated@@594 ($generated@@249 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@81) (= (type $generated@@598) $generated@@66)) (= (type $generated@@599) $generated@@66)) ($generated@@257 $generated@@597 ($generated@@450 $generated@@598 $generated@@599))) (and (= ($generated@@308 ($generated@@372 ($generated@@331 $generated@@81 $generated@@81) $generated@@597)) $generated@@597) ($generated@@83 ($generated@@372 ($generated@@331 $generated@@81 $generated@@81) $generated@@597) ($generated@@450 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@257 $generated@@597 ($generated@@450 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@81) (= (type $generated@@601) $generated@@66)) (= (type $generated@@602) $generated@@66)) ($generated@@257 $generated@@600 ($generated@@458 $generated@@601 $generated@@602))) (and (= ($generated@@308 ($generated@@372 ($generated@@349 $generated@@81 $generated@@81) $generated@@600)) $generated@@600) ($generated@@83 ($generated@@372 ($generated@@349 $generated@@81 $generated@@81) $generated@@600) ($generated@@458 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@257 $generated@@600 ($generated@@458 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@66) (= (type $generated@@604) $generated@@66)) (= (type $generated@@605) $generated@@81)) ($generated@@257 $generated@@605 ($generated@@162 $generated@@603 $generated@@604))) (and (= ($generated@@308 ($generated@@372 $generated@@163 $generated@@605)) $generated@@605) ($generated@@83 ($generated@@372 $generated@@163 $generated@@605) ($generated@@162 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@257 $generated@@605 ($generated@@162 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@606)))
 (not ($generated@@0 ($generated@@92 ($generated@@87 $generated@@607) $generated@@606))))
 :pattern ( (let (($generated@@607 (type $generated@@606)))
($generated@@92 ($generated@@87 $generated@@607) $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@608)))
 (not ($generated@@0 ($generated@@92 ($generated@@476 $generated@@609) $generated@@608))))
 :pattern ( (let (($generated@@609 (type $generated@@608)))
($generated@@92 ($generated@@476 $generated@@609) $generated@@608)))
)))
(assert (forall (($generated@@611 T@U) ) (! (= (type ($generated@@610 $generated@@611)) $generated@@71)
 :pattern ( ($generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@66) (= (type $generated@@613) $generated@@66)) (and (= ($generated@@147 ($generated@@162 $generated@@612 $generated@@613)) $generated@@62) (= ($generated@@610 ($generated@@162 $generated@@612 $generated@@613)) $generated@@64)))
 :pattern ( ($generated@@162 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 Int) ($generated@@615 Int) ) (! (= ($generated@@304 $generated@@614 $generated@@615) (* $generated@@614 $generated@@615))
 :pattern ( ($generated@@304 $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@163) (= ($generated@@588 ($generated@@308 $generated@@616)) ($generated@@589 $generated@@616)))
 :pattern ( ($generated@@588 ($generated@@308 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@81) ($generated@@257 $generated@@617 ($generated@@150 0))) (and (= ($generated@@308 ($generated@@372 $generated@@2 $generated@@617)) $generated@@617) ($generated@@83 ($generated@@372 ($generated@@78 $generated@@81 $generated@@4) $generated@@617) ($generated@@150 0))))
 :pattern ( ($generated@@257 $generated@@617 ($generated@@150 0)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@81) (= (type $generated@@619) $generated@@66)) ($generated@@257 $generated@@618 ($generated@@84 $generated@@619))) (and (= ($generated@@308 ($generated@@372 ($generated@@78 $generated@@81 $generated@@4) $generated@@618)) $generated@@618) ($generated@@83 ($generated@@372 ($generated@@78 $generated@@81 $generated@@4) $generated@@618) ($generated@@84 $generated@@619))))
 :pattern ( ($generated@@257 $generated@@618 ($generated@@84 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@81) (= (type $generated@@621) $generated@@66)) ($generated@@257 $generated@@620 ($generated@@275 $generated@@621))) (and (= ($generated@@308 ($generated@@372 ($generated@@78 $generated@@81 $generated@@4) $generated@@620)) $generated@@620) ($generated@@83 ($generated@@372 ($generated@@78 $generated@@81 $generated@@4) $generated@@620) ($generated@@275 $generated@@621))))
 :pattern ( ($generated@@257 $generated@@620 ($generated@@275 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@81) (= (type $generated@@623) $generated@@66)) ($generated@@257 $generated@@622 ($generated@@188 $generated@@623))) (and (= ($generated@@308 ($generated@@372 ($generated@@78 $generated@@81 $generated@@2) $generated@@622)) $generated@@622) ($generated@@83 ($generated@@372 ($generated@@78 $generated@@81 $generated@@2) $generated@@622) ($generated@@188 $generated@@623))))
 :pattern ( ($generated@@257 $generated@@622 ($generated@@188 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@81) (= (type $generated@@625) $generated@@66)) ($generated@@257 $generated@@624 ($generated@@547 $generated@@625))) (and (= ($generated@@308 ($generated@@372 ($generated@@297 $generated@@81) $generated@@624)) $generated@@624) ($generated@@83 ($generated@@372 ($generated@@297 $generated@@81) $generated@@624) ($generated@@547 $generated@@625))))
 :pattern ( ($generated@@257 $generated@@624 ($generated@@547 $generated@@625)))
)))
(assert (= ($generated@@147 $generated@@85) $generated@@63))
(assert (= ($generated@@610 $generated@@85) $generated@@65))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@626) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@627) $generated@@66)) (= (type $generated@@628) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@626 ($generated@@188 $generated@@627) $generated@@628) (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@81) (< 0 ($generated ($generated@@92 $generated@@626 $generated@@629)))) ($generated@@283 $generated@@629 $generated@@627 $generated@@628))
 :pattern ( ($generated@@92 $generated@@626 $generated@@629))
))))
 :pattern ( ($generated@@149 $generated@@626 ($generated@@188 $generated@@627) $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) $generated@@163) (= (type $generated@@631) $generated@@66)) (= (type $generated@@632) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@77 $generated@@632) (and ($generated@@161 $generated@@630) (exists (($generated@@633 T@U) ) (!  (and (= (type $generated@@633) $generated@@66) ($generated@@149 $generated@@630 ($generated@@162 $generated@@631 $generated@@633) $generated@@632))
 :pattern ( ($generated@@149 $generated@@630 ($generated@@162 $generated@@631 $generated@@633) $generated@@632))
))))) ($generated@@283 ($generated@@170 $generated@@630) $generated@@631 $generated@@632))
 :pattern ( ($generated@@283 ($generated@@170 $generated@@630) $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@163) (= (type $generated@@635) $generated@@66)) (= (type $generated@@636) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@77 $generated@@636) (and ($generated@@161 $generated@@634) (exists (($generated@@637 T@U) ) (!  (and (= (type $generated@@637) $generated@@66) ($generated@@149 $generated@@634 ($generated@@162 $generated@@637 $generated@@635) $generated@@636))
 :pattern ( ($generated@@149 $generated@@634 ($generated@@162 $generated@@637 $generated@@635) $generated@@636))
))))) ($generated@@283 ($generated@@171 $generated@@634) $generated@@635 $generated@@636))
 :pattern ( ($generated@@283 ($generated@@171 $generated@@634) $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@81) (= (type $generated@@639) $generated@@81)) (= ($generated@@256 ($generated@@76 $generated@@638) ($generated@@76 $generated@@639)) ($generated@@76 ($generated@@256 $generated@@638 $generated@@639))))
 :pattern ( ($generated@@256 ($generated@@76 $generated@@638) ($generated@@76 $generated@@639)))
)))
(assert (forall (($generated@@640 Int) ) (! (= ($generated@@308 ($generated@@8 ($generated@@178 $generated@@640))) ($generated@@76 ($generated@@308 ($generated@@8 $generated@@640))))
 :pattern ( ($generated@@308 ($generated@@8 ($generated@@178 $generated@@640))))
)))
(assert (forall (($generated@@641 T@U) ) (! (= ($generated@@308 ($generated@@76 $generated@@641)) ($generated@@76 ($generated@@308 $generated@@641)))
 :pattern ( ($generated@@308 ($generated@@76 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ) (! (let (($generated@@643 ($generated@@298 (type $generated@@642))))
 (=> (and (= (type $generated@@642) ($generated@@297 $generated@@643)) (= ($generated@@296 $generated@@642) 0)) (= $generated@@642 ($generated@@295 $generated@@643))))
 :pattern ( ($generated@@296 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (! (let (($generated@@647 (type $generated@@645)))
 (=> (and (and (= (type $generated@@644) ($generated@@78 $generated@@647 $generated@@2)) (= (type $generated@@646) $generated@@2)) (<= 0 ($generated $generated@@646))) (= ($generated@@321 ($generated@@93 $generated@@644 $generated@@645 $generated@@646)) (+ (- ($generated@@321 $generated@@644) ($generated ($generated@@92 $generated@@644 $generated@@645))) ($generated $generated@@646)))))
 :pattern ( ($generated@@321 ($generated@@93 $generated@@644 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@649) $generated@@2)) ($generated@@149 $generated@@649 $generated@@46 $generated@@648))
 :pattern ( ($generated@@149 $generated@@649 $generated@@46 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@651) $generated@@3)) ($generated@@149 $generated@@651 $generated@@47 $generated@@650))
 :pattern ( ($generated@@149 $generated@@651 $generated@@47 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@653) $generated@@4)) ($generated@@149 $generated@@653 $generated@@44 $generated@@652))
 :pattern ( ($generated@@149 $generated@@653 $generated@@44 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@655) $generated@@500)) ($generated@@149 $generated@@655 $generated@@45 $generated@@654))
 :pattern ( ($generated@@149 $generated@@655 $generated@@45 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@657) $generated@@81)) ($generated@@149 $generated@@657 $generated@@48 $generated@@656))
 :pattern ( ($generated@@149 $generated@@657 $generated@@48 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@297 $generated@@81)) (= (type $generated@@659) $generated@@66)) (= ($generated@@83 $generated@@658 ($generated@@547 $generated@@659)) (forall (($generated@@660 Int) ) (!  (=> (and (<= 0 $generated@@660) (< $generated@@660 ($generated@@296 $generated@@658))) ($generated@@257 ($generated@@548 $generated@@658 $generated@@660) $generated@@659))
 :pattern ( ($generated@@548 $generated@@658 $generated@@660))
))))
 :pattern ( ($generated@@83 $generated@@658 ($generated@@547 $generated@@659)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 Int) ) (!  (=> (= (type $generated@@662) ($generated@@297 $generated@@81)) (=> (and (<= 0 $generated@@663) (< $generated@@663 ($generated@@296 $generated@@662))) (< ($generated@@589 ($generated@@372 $generated@@163 ($generated@@548 $generated@@662 $generated@@663))) ($generated@@661 $generated@@662))))
 :pattern ( ($generated@@589 ($generated@@372 $generated@@163 ($generated@@548 $generated@@662 $generated@@663))))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@664) ($generated@@331 $generated@@81 $generated@@81)) (= (type $generated@@665) $generated@@66)) (= (type $generated@@666) $generated@@66)) ($generated@@83 $generated@@664 ($generated@@450 $generated@@665 $generated@@666))) (and (and ($generated@@83 ($generated@@329 $generated@@664) ($generated@@84 $generated@@665)) ($generated@@83 ($generated@@380 $generated@@664) ($generated@@84 $generated@@666))) ($generated@@83 ($generated@@424 $generated@@664) ($generated@@84 ($generated@@162 $generated@@665 $generated@@666)))))
 :pattern ( ($generated@@83 $generated@@664 ($generated@@450 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) ($generated@@349 $generated@@81 $generated@@81)) (= (type $generated@@668) $generated@@66)) (= (type $generated@@669) $generated@@66)) ($generated@@83 $generated@@667 ($generated@@458 $generated@@668 $generated@@669))) (and (and ($generated@@83 ($generated@@347 $generated@@667) ($generated@@275 $generated@@668)) ($generated@@83 ($generated@@391 $generated@@667) ($generated@@275 $generated@@669))) ($generated@@83 ($generated@@432 $generated@@667) ($generated@@275 ($generated@@162 $generated@@668 $generated@@669)))))
 :pattern ( ($generated@@83 $generated@@667 ($generated@@458 $generated@@668 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@2) ($generated@@83 $generated@@670 $generated@@46))
 :pattern ( ($generated@@83 $generated@@670 $generated@@46))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@3) ($generated@@83 $generated@@671 $generated@@47))
 :pattern ( ($generated@@83 $generated@@671 $generated@@47))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@4) ($generated@@83 $generated@@672 $generated@@44))
 :pattern ( ($generated@@83 $generated@@672 $generated@@44))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@500) ($generated@@83 $generated@@673 $generated@@45))
 :pattern ( ($generated@@83 $generated@@673 $generated@@45))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@81) ($generated@@83 $generated@@674 $generated@@48))
 :pattern ( ($generated@@83 $generated@@674 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@675 () Int)
(declare-fun $generated@@676 () Int)
(declare-fun $generated@@677 () Int)
(declare-fun $generated@@678 () Int)
(declare-fun $generated@@679 () Int)
(declare-fun $generated@@680 () Bool)
(declare-fun $generated@@681 () Int)
(declare-fun $generated@@682 () Int)
(declare-fun $generated@@683 () Int)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 (T@U) Bool)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () Int)
(declare-fun $generated@@688 () Int)
(declare-fun $generated@@689 () Int)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () Int)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () Int)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () Int)
(declare-fun $generated@@701 () Int)
(declare-fun $generated@@702 () Int)
(declare-fun $generated@@703 () Int)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@696) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@686) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@694) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@692) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@690) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@684) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@697) $generated@@79)) (= (type $generated@@698) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@699) ($generated@@195 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 35) (let (($generated@@704  (and (=> (= (ControlFlow 0 20) (- 0 22)) (or (<= 0 $generated@@675) (= (+ $generated@@676 $generated@@677) $generated@@675))) (=> (or (<= 0 $generated@@675) (= (+ $generated@@676 $generated@@677) $generated@@675)) (and (=> (= (ControlFlow 0 20) (- 0 21)) (< (+ $generated@@676 $generated@@677) $generated@@675)) (=> (< (+ $generated@@676 $generated@@677) $generated@@675) (=> (and (and (and ($generated@@265 $generated@@676 $generated@@677) ($generated@@265 $generated@@678 $generated@@679)) (= (ControlFlow 0 20) (- 0 19))) $generated@@680) (= ($generated@@264 $generated@@676 $generated@@677) ($generated@@264 $generated@@678 $generated@@679)))))))))
(let (($generated@@705  (=> (= ($generated@@264 $generated@@681 $generated@@682) ($generated@@264 (- $generated@@681 $generated@@682) $generated@@682)) (and (=> (= (ControlFlow 0 26) (- 0 27)) ($generated@@83 ($generated@@8 (- $generated@@681 $generated@@682)) $generated@@85)) (=> ($generated@@83 ($generated@@8 (- $generated@@681 $generated@@682)) $generated@@85) (=> (and (and (= $generated@@683 (- $generated@@681 $generated@@682)) (= $generated@@676 $generated@@683)) (and (= $generated@@677 $generated@@682) (= (ControlFlow 0 26) 20))) $generated@@704))))))
(let (($generated@@706  (=> (< $generated@@681 $generated@@682) (and (=> (= (ControlFlow 0 23) (- 0 25)) (< $generated@@681 $generated@@682)) (=> (< $generated@@681 $generated@@682) (=> (and ($generated@@77 $generated@@684) ($generated@@685 $generated@@684)) (=> (and (and ($generated@@265 $generated@@681 $generated@@682) ($generated@@265 $generated@@681 (- $generated@@682 $generated@@681))) (and (= ($generated@@264 $generated@@681 $generated@@682) ($generated@@264 $generated@@681 (- $generated@@682 $generated@@681))) (= $generated@@686 $generated@@684))) (and (=> (= (ControlFlow 0 23) (- 0 24)) ($generated@@83 ($generated@@8 (- $generated@@682 $generated@@681)) $generated@@85)) (=> ($generated@@83 ($generated@@8 (- $generated@@682 $generated@@681)) $generated@@85) (=> (and (and (= $generated@@687 (- $generated@@682 $generated@@681)) (= $generated@@676 $generated@@681)) (and (= $generated@@677 $generated@@687) (= (ControlFlow 0 23) 20))) $generated@@704))))))))))
(let (($generated@@707  (=> (and ($generated@@149 ($generated@@8 $generated@@682) $generated@@85 $generated@@686) ($generated@@83 ($generated@@8 (- $generated@@681 $generated@@682)) $generated@@85)) (=> (and (and (= $generated@@688 (- $generated@@681 $generated@@682)) ($generated@@149 ($generated@@8 $generated@@688) $generated@@85 $generated@@686)) (and ($generated@@265 $generated@@682 (- $generated@@681 $generated@@682)) ($generated@@265 $generated@@682 (- $generated@@681 $generated@@682)))) (and (=> (= (ControlFlow 0 16) (- 0 18)) ($generated@@83 ($generated@@8 (- $generated@@681 $generated@@682)) $generated@@85)) (=> ($generated@@83 ($generated@@8 (- $generated@@681 $generated@@682)) $generated@@85) (=> (= $generated@@689 (- $generated@@681 $generated@@682)) (=> (and ($generated@@77 $generated@@690) ($generated@@685 $generated@@690)) (=> (and (and ($generated@@265 $generated@@682 $generated@@689) ($generated@@265 $generated@@689 $generated@@682)) (and (= ($generated@@264 $generated@@682 $generated@@689) ($generated@@264 $generated@@689 $generated@@682)) (= $generated@@686 $generated@@690))) (and (=> (= (ControlFlow 0 16) (- 0 17)) ($generated@@83 ($generated@@8 (- $generated@@681 $generated@@682)) $generated@@85)) (=> ($generated@@83 ($generated@@8 (- $generated@@681 $generated@@682)) $generated@@85) (=> (and (= $generated@@691 (- $generated@@681 $generated@@682)) ($generated@@149 ($generated@@8 $generated@@691) $generated@@85 $generated@@690)) (=> (and (and ($generated@@149 ($generated@@8 $generated@@682) $generated@@85 $generated@@690) ($generated@@265 (- $generated@@681 $generated@@682) $generated@@682)) (and ($generated@@265 (- $generated@@681 $generated@@682) $generated@@682) (= (ControlFlow 0 16) (- 0 15)))) (= ($generated@@264 $generated@@682 (- $generated@@681 $generated@@682)) ($generated@@264 (- $generated@@681 $generated@@682) $generated@@682)))))))))))))))
(let (($generated@@708  (=> (and (and ($generated@@149 ($generated@@8 $generated@@682) $generated@@85 $generated@@686) ($generated@@149 ($generated@@8 $generated@@681) $generated@@85 $generated@@686)) (and ($generated@@265 $generated@@682 $generated@@681) ($generated@@265 $generated@@682 $generated@@681))) (and (=> (= (ControlFlow 0 12) (- 0 14)) (< $generated@@682 $generated@@681)) (=> (< $generated@@682 $generated@@681) (=> (and ($generated@@77 $generated@@692) ($generated@@685 $generated@@692)) (=> (and (and (and ($generated@@265 $generated@@682 $generated@@681) ($generated@@265 $generated@@682 (- $generated@@681 $generated@@682))) (= ($generated@@264 $generated@@682 $generated@@681) ($generated@@264 $generated@@682 (- $generated@@681 $generated@@682)))) (and (= $generated@@686 $generated@@692) ($generated@@149 ($generated@@8 $generated@@682) $generated@@85 $generated@@692))) (and (=> (= (ControlFlow 0 12) (- 0 13)) ($generated@@83 ($generated@@8 (- $generated@@681 $generated@@682)) $generated@@85)) (=> ($generated@@83 ($generated@@8 (- $generated@@681 $generated@@682)) $generated@@85) (=> (= $generated@@693 (- $generated@@681 $generated@@682)) (=> (and (and ($generated@@149 ($generated@@8 $generated@@693) $generated@@85 $generated@@692) ($generated@@265 $generated@@682 (- $generated@@681 $generated@@682))) (and ($generated@@265 $generated@@682 (- $generated@@681 $generated@@682)) (= (ControlFlow 0 12) (- 0 11)))) (= ($generated@@264 $generated@@682 $generated@@681) ($generated@@264 $generated@@682 (- $generated@@681 $generated@@682))))))))))))))
(let (($generated@@709  (=> (and ($generated@@149 ($generated@@8 $generated@@681) $generated@@85 $generated@@686) ($generated@@149 ($generated@@8 $generated@@682) $generated@@85 $generated@@686)) (=> (and (and ($generated@@265 $generated@@681 $generated@@682) ($generated@@265 $generated@@681 $generated@@682)) (and ($generated@@77 $generated@@694) ($generated@@685 $generated@@694))) (=> (and (and (and (and ($generated@@265 $generated@@681 $generated@@682) ($generated@@265 $generated@@682 $generated@@681)) (= ($generated@@264 $generated@@681 $generated@@682) ($generated@@264 $generated@@682 $generated@@681))) (and (= $generated@@686 $generated@@694) ($generated@@149 ($generated@@8 $generated@@682) $generated@@85 $generated@@694))) (and (and ($generated@@149 ($generated@@8 $generated@@681) $generated@@85 $generated@@694) ($generated@@265 $generated@@682 $generated@@681)) (and ($generated@@265 $generated@@682 $generated@@681) (= (ControlFlow 0 10) (- 0 9))))) (= ($generated@@264 $generated@@681 $generated@@682) ($generated@@264 $generated@@682 $generated@@681)))))))
(let (($generated@@710 true))
(let (($generated@@711  (=> (< $generated@@682 $generated@@681) (and (and (and (and (=> (= (ControlFlow 0 28) 8) $generated@@710) (=> (= (ControlFlow 0 28) 10) $generated@@709)) (=> (= (ControlFlow 0 28) 12) $generated@@708)) (=> (= (ControlFlow 0 28) 16) $generated@@707)) (=> (= (ControlFlow 0 28) 26) $generated@@705)))))
(let (($generated@@712  (=> (= (ControlFlow 0 4) (- 0 3)) (= $generated@@695 ($generated@@264 $generated@@678 $generated@@679)))))
(let (($generated@@713  (=> (and (and (and ($generated@@77 $generated@@696) ($generated@@685 $generated@@696)) ($generated@@265 $generated@@681 $generated@@681)) (and (and (= ($generated@@264 $generated@@681 $generated@@681) $generated@@681) (= $generated@@686 $generated@@696)) (and (= $generated@@695 $generated@@681) (= (ControlFlow 0 5) 4)))) $generated@@712)))
(let (($generated@@714  (=> (and (and (<= $generated@@682 $generated@@681) (<= $generated@@681 $generated@@682)) (= (ControlFlow 0 7) 5)) $generated@@713)))
(let (($generated@@715  (=> (and ($generated@@0 ($generated@@76 ($generated@@11 true))) (= $generated@@675 (+ $generated@@681 $generated@@682))) (and (and (=> (= (ControlFlow 0 29) 23) $generated@@706) (=> (= (ControlFlow 0 29) 28) $generated@@711)) (=> (= (ControlFlow 0 29) 7) $generated@@714)))))
(let (($generated@@716  (=> (and (not ($generated@@0 ($generated@@76 ($generated@@11 true)))) (= (ControlFlow 0 6) 5)) $generated@@713)))
(let (($generated@@717  (=> $generated@@680 (and (=> (= (ControlFlow 0 30) 6) $generated@@716) (=> (= (ControlFlow 0 30) 29) $generated@@715)))))
(let (($generated@@718 true))
(let (($generated@@719  (and (=> (= (ControlFlow 0 31) 2) $generated@@718) (=> (= (ControlFlow 0 31) 30) $generated@@717))))
(let (($generated@@720 true))
(let (($generated@@721  (=> (<= ($generated@@178 1) $generated@@681) (=> (and (and ($generated@@77 $generated@@686) ($generated@@685 $generated@@686)) (<= ($generated@@178 1) $generated@@682)) (=> (and (and (and (not false) (=> $generated@@680 (and ($generated@@265 $generated@@681 $generated@@682) ($generated@@265 $generated@@678 $generated@@679)))) (and (=> $generated@@680 (= ($generated@@264 $generated@@681 $generated@@682) ($generated@@264 $generated@@678 $generated@@679))) (forall (($generated@@722 T@U) ) (!  (=> (= (type $generated@@722) $generated@@79) (=> (and (not (= $generated@@722 $generated@@697)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@698 $generated@@722) $generated@@60))) (= ($generated@@92 $generated@@686 $generated@@722) ($generated@@92 $generated@@698 $generated@@722))))
 :pattern ( ($generated@@92 $generated@@686 $generated@@722))
)))) (and (and ($generated@@154 $generated@@698 $generated@@686) (forall (($generated@@723 T@U) ($generated@@724 T@U) ) (! (let (($generated@@725 ($generated@@69 (type $generated@@724))))
 (=> (and (and (= (type $generated@@723) $generated@@79) (= (type $generated@@724) ($generated@@68 $generated@@725))) (and (not (= $generated@@723 $generated@@697)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@698 $generated@@723) $generated@@60)))) (or (= ($generated@@94 ($generated@@92 $generated@@686 $generated@@723) $generated@@724) ($generated@@94 ($generated@@92 $generated@@698 $generated@@723) $generated@@724)) ($generated@@0 ($generated@@193 $generated@@699 $generated@@723 $generated@@724)))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@686 $generated@@723) $generated@@724))
))) (and (<= (+ $generated@@681 $generated@@682) $generated@@700) (=> (= (+ $generated@@681 $generated@@682) $generated@@700) true)))) (and (=> (= (ControlFlow 0 32) 1) $generated@@720) (=> (= (ControlFlow 0 32) 31) $generated@@719)))))))
(let (($generated@@726  (=> (and (= $generated@@699 ($generated@@194 $generated@@697 $generated@@698 $generated@@60 false)) (= $generated@@700 (+ $generated@@678 $generated@@679))) (and (=> (= (ControlFlow 0 33) (- 0 34)) (=> $generated@@680 (= ($generated@@264 $generated@@678 $generated@@679) ($generated@@264 $generated@@678 $generated@@679)))) (=> (=> $generated@@680 (= ($generated@@264 $generated@@678 $generated@@679) ($generated@@264 $generated@@678 $generated@@679))) (=> (= (ControlFlow 0 33) 32) $generated@@721))))))
(let (($generated@@727  (=> (and (and ($generated@@77 $generated@@698) ($generated@@685 $generated@@698)) (<= ($generated@@178 1) $generated@@678)) (=> (and (and (and (<= ($generated@@178 1) $generated@@679) (<= ($generated@@178 1) $generated@@701)) (and (<= ($generated@@178 1) $generated@@702) true)) (and (and (<= ($generated@@178 1) $generated@@703) true) (and (= 6 $generated@@74) (= (ControlFlow 0 35) 33)))) $generated@@726))))
$generated@@727)))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 () Int)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 () T@U)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@T) T@U)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@89 (T@U) Int)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@149 (T@U T@U T@U) Bool)
(declare-fun $generated@@150 (Int) T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@172 (Int) T@U)
(declare-fun $generated@@173 (Int) Bool)
(declare-fun $generated@@174 (Int) Int)
(declare-fun $generated@@175 (Int Int) Bool)
(declare-fun $generated@@176 (Int Int) Bool)
(declare-fun $generated@@177 (T@U Int Int) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) T@U)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@260 (Int Int) Int)
(declare-fun $generated@@261 (Int Int) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@279 (T@U T@U T@U) Bool)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@300 (Int Int) Int)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@309 (T@U) Int)
(declare-fun $generated@@310 (T@T) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@U T@U) T@U)
(declare-fun $generated@@461 (T@T) T@U)
(declare-fun $generated@@485 () T@T)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@533 (T@U Int) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@573 (T@U) Int)
(declare-fun $generated@@574 (T@U) Int)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@646 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@96 $generated@@97)) 11)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@78 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@78 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@78 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@78 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@78 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@69 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@80)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@69 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 14)) (forall (($generated@@140 T@U) ) (! (let (($generated@@141 (type $generated@@140)))
(= (type ($generated@@76 $generated@@140)) $generated@@141))
 :pattern ( ($generated@@76 $generated@@140))
))) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@84 $generated@@142)) $generated@@66)
 :pattern ( ($generated@@84 $generated@@142))
))) (= (type $generated@@85) $generated@@66)) (forall (($generated@@143 T@T) ) (! (= (type ($generated@@87 $generated@@143)) ($generated@@78 $generated@@143 $generated@@4))
 :pattern ( ($generated@@87 $generated@@143))
))))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@145) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 ($generated@@76 $generated@@145)) (and (not (= 3 $generated@@74)) (and (and ($generated@@77 $generated@@144) ($generated@@83 $generated@@145 ($generated@@84 $generated@@85))) (not ($generated@@86 $generated@@145 ($generated@@87 $generated@@81))))))) (and ($generated@@88 ($generated@@76 $generated@@145)) (= ($generated@@75 ($generated@@76 $generated@@145)) (let (($generated@@146 ($generated@@89 ($generated@@76 $generated@@145))))
$generated@@146))))
 :weight 3
 :pattern ( ($generated@@75 ($generated@@76 $generated@@145)) ($generated@@77 $generated@@144))
))))
(assert (forall (($generated@@148 T@U) ) (! (= (type ($generated@@147 $generated@@148)) $generated@@67)
 :pattern ( ($generated@@147 $generated@@148))
)))
(assert (= ($generated@@147 $generated@@44) $generated@@49))
(assert (= ($generated@@147 $generated@@45) $generated@@50))
(assert (= ($generated@@147 $generated@@46) $generated@@51))
(assert (= ($generated@@147 $generated@@47) $generated@@52))
(assert (= ($generated@@147 $generated@@48) $generated@@53))
(assert (forall (($generated@@151 Int) ) (! (= (type ($generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@2) (= (type $generated@@153) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@149 $generated@@152 ($generated@@150 0) $generated@@153))
 :pattern ( ($generated@@149 $generated@@152 ($generated@@150 0) $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@2) (= (type $generated@@155) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@149 $generated@@154 $generated@@85 $generated@@155))
 :pattern ( ($generated@@149 $generated@@154 $generated@@85 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@83 $generated@@156 ($generated@@150 0)))
 :pattern ( ($generated@@83 $generated@@156 ($generated@@150 0)))
)))
(assert  (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@160 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@158 $generated@@160 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@66) (= (type $generated@@163) $generated@@66)) (= (type $generated@@164) $generated@@159)) ($generated@@83 $generated@@164 ($generated@@158 $generated@@162 $generated@@163))) ($generated@@157 $generated@@164))
 :pattern ( ($generated@@157 $generated@@164) ($generated@@83 $generated@@164 ($generated@@158 $generated@@162 $generated@@163)))
)))
(assert  (and (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@81)
 :pattern ( ($generated@@166 $generated@@168))
)) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@81)
 :pattern ( ($generated@@167 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@159) (= (type $generated@@171) $generated@@159)) true) (= ($generated@@165 $generated@@170 $generated@@171)  (and (= ($generated@@166 $generated@@170) ($generated@@166 $generated@@171)) (= ($generated@@167 $generated@@170) ($generated@@167 $generated@@171)))))
 :pattern ( ($generated@@165 $generated@@170 $generated@@171))
)))
(assert  (and (forall (($generated@@178 Int) ) (! (= (type ($generated@@172 $generated@@178)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@172 $generated@@178))
)) (forall (($generated@@179 T@U) ($generated@@180 Int) ($generated@@181 Int) ) (! (= (type ($generated@@177 $generated@@179 $generated@@180 $generated@@181)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@177 $generated@@179 $generated@@180 $generated@@181))
))))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@182 Int) ) (!  (=> (or ($generated@@173 $generated@@182) (and (not (= 2 $generated@@74)) (<= ($generated@@174 1) $generated@@182))) (and (forall (($generated@@183 Int) ) (!  (=> (<= ($generated@@174 1) $generated@@183) (=> (<= $generated@@183 $generated@@182) ($generated@@176 $generated@@183 $generated@@182)))
 :pattern ( ($generated@@175 $generated@@183 $generated@@182))
)) (= ($generated@@172 $generated@@182) ($generated@@177 $generated@@85 $generated@@182 $generated@@182))))
 :pattern ( ($generated@@172 $generated@@182))
))))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@66)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@188) $generated@@66)) ($generated@@83 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@83 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@195 $generated@@196)) 16)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@193 ($generated@@191 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@191 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@189 $generated@@201 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@189 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 (type $generated@@208)))
(let (($generated@@210 (type $generated@@206)))
(= (type ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@191 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@193 (type $generated@@211))))
 (=> (= (type $generated@@214) $generated@@215) (= ($generated@@189 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@212 $generated@@213) $generated@@214)))
 :weight 0
))) (and (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@189 ($generated@@194 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@189 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@189 ($generated@@194 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@189 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or true (= ($generated@@189 ($generated@@194 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@189 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@191 $generated@@79 $generated@@4))
 :pattern ( ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@69 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@79) (= (type $generated@@239) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@240) ($generated@@68 $generated@@4))) (= (type $generated@@242) $generated@@79)) (= (type $generated@@243) ($generated@@68 $generated@@244))) (= ($generated@@0 ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@90 (type $generated@@246))))
(= (type ($generated@@245 $generated@@246 $generated@@247)) ($generated@@78 $generated@@248 $generated@@4)))
 :pattern ( ($generated@@245 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@90 (type $generated@@249))))
 (=> (and (= (type $generated@@249) ($generated@@78 $generated@@251 $generated@@4)) (= (type $generated@@250) ($generated@@78 $generated@@251 $generated@@4))) (= ($generated@@245 ($generated@@245 $generated@@249 $generated@@250) $generated@@250) ($generated@@245 $generated@@249 $generated@@250))))
 :pattern ( ($generated@@245 ($generated@@245 $generated@@249 $generated@@250) $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (! (= (type ($generated@@252 $generated@@254 $generated@@255)) $generated@@159)
 :pattern ( ($generated@@252 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) $generated@@66) (= (type $generated@@257) $generated@@66)) (= (type $generated@@258) $generated@@81)) (= (type $generated@@259) $generated@@81)) (= ($generated@@83 ($generated@@252 $generated@@258 $generated@@259) ($generated@@158 $generated@@256 $generated@@257))  (and ($generated@@253 $generated@@258 $generated@@256) ($generated@@253 $generated@@259 $generated@@257))))
 :pattern ( ($generated@@83 ($generated@@252 $generated@@258 $generated@@259) ($generated@@158 $generated@@256 $generated@@257)))
)))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@262 Int) ($generated@@263 Int) ) (!  (=> (or ($generated@@261 $generated@@262 $generated@@263) (and (not (= 4 $generated@@74)) (and (<= ($generated@@174 1) $generated@@262) (<= ($generated@@174 1) $generated@@263)))) (and (and (and ($generated@@173 $generated@@262) ($generated@@173 $generated@@263)) (let (($generated@@264 ($generated@@245 ($generated@@172 $generated@@262) ($generated@@172 $generated@@263))))
($generated@@82 $generated@@264))) (= ($generated@@260 $generated@@262 $generated@@263) (let (($generated@@265 ($generated@@245 ($generated@@172 $generated@@262) ($generated@@172 $generated@@263))))
($generated@@75 $generated@@265)))))
 :pattern ( ($generated@@260 $generated@@262 $generated@@263))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@159) (= (type $generated@@267) $generated@@159)) (= ($generated@@165 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@165 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@269) $generated@@66)) (= ($generated@@83 $generated@@268 ($generated@@84 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@81) ($generated@@0 ($generated@@92 $generated@@268 $generated@@270))) ($generated@@253 $generated@@270 $generated@@269))
 :pattern ( ($generated@@92 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@83 $generated@@268 ($generated@@84 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@66)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@274) $generated@@66)) (= ($generated@@83 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@81) ($generated@@0 ($generated@@92 $generated@@273 $generated@@275))) ($generated@@253 $generated@@275 $generated@@274))
 :pattern ( ($generated@@92 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@83 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@276 Int) ) (! (= ($generated@@174 $generated@@276) $generated@@276)
 :pattern ( ($generated@@174 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (! (= ($generated@@76 $generated@@277) $generated@@277)
 :pattern ( ($generated@@76 $generated@@277))
)))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) ($generated@@78 $generated@@81 $generated@@4)) (or ($generated@@82 $generated@@278) (and (not (= 3 $generated@@74)) (and ($generated@@83 $generated@@278 ($generated@@84 $generated@@85)) (not ($generated@@86 $generated@@278 ($generated@@87 $generated@@81))))))) (<= ($generated@@174 1) ($generated@@75 $generated@@278)))
 :pattern ( ($generated@@75 $generated@@278))
))))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) $generated@@66) (= (type $generated@@281) $generated@@66)) (= (type $generated@@282) $generated@@81)) (= (type $generated@@283) $generated@@81)) (= (type $generated@@284) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@77 $generated@@284)) (= ($generated@@149 ($generated@@252 $generated@@282 $generated@@283) ($generated@@158 $generated@@280 $generated@@281) $generated@@284)  (and ($generated@@279 $generated@@282 $generated@@280 $generated@@284) ($generated@@279 $generated@@283 $generated@@281 $generated@@284))))
 :pattern ( ($generated@@149 ($generated@@252 $generated@@282 $generated@@283) ($generated@@158 $generated@@280 $generated@@281) $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@70)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@159) (= ($generated@@157 $generated@@287) (= ($generated@@285 $generated@@287) $generated@@61)))
 :pattern ( ($generated@@157 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@159) ($generated@@157 $generated@@288)) (exists (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (and (and (= (type $generated@@289) $generated@@81) (= (type $generated@@290) $generated@@81)) (= $generated@@288 ($generated@@252 $generated@@289 $generated@@290)))
 :no-pattern (type $generated@@289)
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
)))
 :pattern ( ($generated@@157 $generated@@288))
)))
(assert  (and (and (forall (($generated@@295 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@295)) 17)) (forall (($generated@@296 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@293 $generated@@296))
))) (forall (($generated@@297 T@T) ) (! (= (type ($generated@@291 $generated@@297)) ($generated@@293 $generated@@297))
 :pattern ( ($generated@@291 $generated@@297))
))))
(assert (forall (($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@298)) 0)
 :pattern ( ($generated@@291 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@2) (= ($generated@@83 $generated@@299 $generated@@85) (<= ($generated@@174 1) ($generated $generated@@299))))
 :pattern ( ($generated@@83 $generated@@299 $generated@@85))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@301 Int) ($generated@@302 Int) ) (!  (=> (or ($generated@@176 ($generated@@174 $generated@@301) ($generated@@174 $generated@@302)) (and (not (= 1 $generated@@74)) (and (<= ($generated@@174 1) $generated@@301) (<= ($generated@@174 1) $generated@@302)))) (= ($generated@@175 ($generated@@174 $generated@@301) ($generated@@174 $generated@@302)) (exists (($generated@@303 Int) ) (! (= ($generated@@300 ($generated@@174 $generated@@301) $generated@@303) ($generated@@174 $generated@@302))
 :pattern ( ($generated@@300 $generated@@301 $generated@@303))
))))
 :weight 3
 :pattern ( ($generated@@175 ($generated@@174 $generated@@301) ($generated@@174 $generated@@302)))
))))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@81)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@66) (= (type $generated@@308) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@279 ($generated@@304 $generated@@306) $generated@@307 $generated@@308) ($generated@@149 $generated@@306 $generated@@307 $generated@@308)))
 :pattern ( ($generated@@279 ($generated@@304 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@311 T@T) ) (! (= (type ($generated@@310 $generated@@311)) ($generated@@78 $generated@@311 $generated@@2))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@90 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@78 $generated@@313 $generated@@2)) (and (= (= ($generated@@309 $generated@@312) 0) (= $generated@@312 ($generated@@310 $generated@@313))) (=> (not (= ($generated@@309 $generated@@312) 0)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) (< 0 ($generated ($generated@@92 $generated@@312 $generated@@314))))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) ($generated@@78 $generated@@81 $generated@@4)) ($generated@@88 $generated@@315)) (and ($generated@@0 ($generated@@92 $generated@@315 ($generated@@304 ($generated@@8 ($generated@@89 $generated@@315))))) (forall (($generated@@316 T@U) ) (!  (=> (and (and (= (type $generated@@316) $generated@@2) true) ($generated@@0 ($generated@@92 $generated@@315 ($generated@@304 $generated@@316)))) (<= ($generated $generated@@316) ($generated@@89 $generated@@315)))
 :pattern ( ($generated@@92 $generated@@315 ($generated@@304 $generated@@316)))
))))
 :pattern ( ($generated@@89 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 18)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@78 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@92 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@92 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 19)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@92 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@92 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@90 (type $generated@@353))))
 (=> (and (= (type $generated@@353) ($generated@@78 $generated@@355 $generated@@4)) (= (type $generated@@354) ($generated@@78 $generated@@355 $generated@@4))) (= ($generated@@86 $generated@@353 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (= ($generated@@0 ($generated@@92 $generated@@353 $generated@@356)) ($generated@@0 ($generated@@92 $generated@@354 $generated@@356))))
 :pattern ( ($generated@@92 $generated@@353 $generated@@356))
 :pattern ( ($generated@@92 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@86 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@90 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@78 $generated@@358 $generated@@2)) (= ($generated@@185 $generated@@357) (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@358) (and (<= 0 ($generated ($generated@@92 $generated@@357 $generated@@359))) (<= ($generated ($generated@@92 $generated@@357 $generated@@359)) ($generated@@309 $generated@@357))))
 :pattern ( ($generated@@92 $generated@@357 $generated@@359))
)))))
 :pattern ( ($generated@@185 $generated@@357))
)))
(assert (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@360 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@81) ($generated@@253 $generated@@363 $generated@@85)) (and (= ($generated@@304 ($generated@@360 $generated@@2 $generated@@363)) $generated@@363) ($generated@@83 ($generated@@360 $generated@@2 $generated@@363) $generated@@85)))
 :pattern ( ($generated@@253 $generated@@363 $generated@@85))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@321 (type $generated@@364))))
(let (($generated@@366 ($generated@@320 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@319 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@318 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@92 ($generated@@317 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@317 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@321 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@78 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@321 (type $generated@@371))))
(let (($generated@@373 ($generated@@320 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@319 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@318 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@92 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@339 (type $generated@@375))))
(let (($generated@@377 ($generated@@338 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@337 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@336 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@92 ($generated@@335 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@335 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@339 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@78 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@339 (type $generated@@382))))
(let (($generated@@384 ($generated@@338 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@337 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@336 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@92 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@386 Int) ($generated@@387 Int) ) (!  (=> (or ($generated@@261 $generated@@386 $generated@@387) (and (not (= 4 $generated@@74)) (and (<= ($generated@@174 1) $generated@@386) (<= ($generated@@174 1) $generated@@387)))) (<= ($generated@@174 1) ($generated@@260 $generated@@386 $generated@@387)))
 :pattern ( ($generated@@260 $generated@@386 $generated@@387))
))))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@388 Int) ) (!  (=> (or ($generated@@173 ($generated@@174 $generated@@388)) (and (not (= 2 $generated@@74)) (<= ($generated@@174 1) $generated@@388))) (and (forall (($generated@@389 Int) ) (!  (=> (<= ($generated@@174 1) $generated@@389) (=> (<= $generated@@389 ($generated@@174 $generated@@388)) ($generated@@176 $generated@@389 ($generated@@174 $generated@@388))))
 :pattern ( ($generated@@175 $generated@@389 $generated@@388))
)) (= ($generated@@172 ($generated@@174 $generated@@388)) ($generated@@177 $generated@@85 ($generated@@174 $generated@@388) ($generated@@174 $generated@@388)))))
 :weight 3
 :pattern ( ($generated@@172 ($generated@@174 $generated@@388)))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@391) $generated@@66)) (= ($generated@@83 $generated@@390 ($generated@@184 $generated@@391)) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@81) (< 0 ($generated ($generated@@92 $generated@@390 $generated@@392)))) ($generated@@253 $generated@@392 $generated@@391))
 :pattern ( ($generated@@92 $generated@@390 $generated@@392))
))))
 :pattern ( ($generated@@83 $generated@@390 ($generated@@184 $generated@@391)))
)))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@393 Int) ) (!  (=> (or ($generated@@173 $generated@@393) (and (not (= 2 $generated@@74)) (<= ($generated@@174 1) $generated@@393))) ($generated@@83 ($generated@@172 $generated@@393) ($generated@@84 $generated@@85)))
 :pattern ( ($generated@@172 $generated@@393))
))))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@394 Int) ($generated@@395 Int) ) (!  (=> (or ($generated@@261 ($generated@@174 $generated@@394) ($generated@@174 $generated@@395)) (and (not (= 4 $generated@@74)) (and (<= ($generated@@174 1) $generated@@394) (<= ($generated@@174 1) $generated@@395)))) (and (and (and ($generated@@173 ($generated@@174 $generated@@394)) ($generated@@173 ($generated@@174 $generated@@395))) (let (($generated@@396 ($generated@@245 ($generated@@172 ($generated@@174 $generated@@394)) ($generated@@172 ($generated@@174 $generated@@395)))))
($generated@@82 $generated@@396))) (= ($generated@@260 ($generated@@174 $generated@@394) ($generated@@174 $generated@@395)) (let (($generated@@397 ($generated@@245 ($generated@@172 ($generated@@174 $generated@@394)) ($generated@@172 ($generated@@174 $generated@@395)))))
($generated@@75 $generated@@397)))))
 :weight 3
 :pattern ( ($generated@@260 ($generated@@174 $generated@@394) ($generated@@174 $generated@@395)))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
 (=> (and (= (type $generated@@398) ($generated@@78 $generated@@401 $generated@@4)) (= (type $generated@@399) ($generated@@78 $generated@@401 $generated@@4))) (= ($generated@@0 ($generated@@92 ($generated@@245 $generated@@398 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@92 $generated@@398 $generated@@400)) ($generated@@0 ($generated@@92 $generated@@399 $generated@@400))))))
 :pattern ( ($generated@@92 ($generated@@245 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@402 ($generated@@84 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@81) ($generated@@0 ($generated@@92 $generated@@402 $generated@@405))) ($generated@@279 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@92 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@149 $generated@@402 ($generated@@84 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@407) $generated@@66)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@406 ($generated@@271 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@81) ($generated@@0 ($generated@@92 $generated@@406 $generated@@409))) ($generated@@279 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@92 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@149 $generated@@406 ($generated@@271 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(= ($generated ($generated@@92 ($generated@@310 $generated@@411) $generated@@410)) 0))
 :pattern ( (let (($generated@@411 (type $generated@@410)))
($generated@@92 ($generated@@310 $generated@@411) $generated@@410)))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@321 (type $generated@@415))))
(let (($generated@@417 ($generated@@320 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@78 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@419) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@92 ($generated@@317 $generated@@418) ($generated@@166 ($generated@@360 $generated@@159 $generated@@419)))) (= ($generated@@92 ($generated@@413 $generated@@418) ($generated@@166 ($generated@@360 $generated@@159 $generated@@419))) ($generated@@167 ($generated@@360 $generated@@159 $generated@@419))))))
 :pattern ( ($generated@@92 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert  (and (forall (($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@422)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@420 $generated@@422))
)) (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@339 (type $generated@@423))))
(let (($generated@@425 ($generated@@338 (type $generated@@423))))
(= (type ($generated@@421 $generated@@423)) ($generated@@78 $generated@@425 $generated@@424))))
 :pattern ( ($generated@@421 $generated@@423))
))))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@427) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@420 $generated@@426) $generated@@427))  (and ($generated@@0 ($generated@@92 ($generated@@335 $generated@@426) ($generated@@166 ($generated@@360 $generated@@159 $generated@@427)))) (= ($generated@@92 ($generated@@421 $generated@@426) ($generated@@166 ($generated@@360 $generated@@159 $generated@@427))) ($generated@@167 ($generated@@360 $generated@@159 $generated@@427))))))
 :pattern ( ($generated@@92 ($generated@@420 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
(let (($generated@@431 ($generated@@320 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@319 $generated@@431 $generated@@430)) (= ($generated@@0 ($generated@@92 ($generated@@368 $generated@@428) $generated@@429)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) (and ($generated@@0 ($generated@@92 ($generated@@317 $generated@@428) $generated@@432)) (= $generated@@429 ($generated@@92 ($generated@@413 $generated@@428) $generated@@432))))
 :pattern ( ($generated@@92 ($generated@@317 $generated@@428) $generated@@432))
 :pattern ( ($generated@@92 ($generated@@413 $generated@@428) $generated@@432))
))))))
 :pattern ( ($generated@@92 ($generated@@368 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(let (($generated@@436 ($generated@@338 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@337 $generated@@436 $generated@@435)) (= ($generated@@0 ($generated@@92 ($generated@@379 $generated@@433) $generated@@434)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@436) (and ($generated@@0 ($generated@@92 ($generated@@335 $generated@@433) $generated@@437)) (= $generated@@434 ($generated@@92 ($generated@@421 $generated@@433) $generated@@437))))
 :pattern ( ($generated@@92 ($generated@@335 $generated@@433) $generated@@437))
 :pattern ( ($generated@@92 ($generated@@421 $generated@@433) $generated@@437))
))))))
 :pattern ( ($generated@@92 ($generated@@379 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@66)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@442) $generated@@66)) (= (type $generated@@443) $generated@@66)) (= (type $generated@@444) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@317 $generated@@441) $generated@@445))) (and ($generated@@279 ($generated@@92 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@279 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@92 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@92 ($generated@@317 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@149 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@447 $generated@@448)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (= (type $generated@@449) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@450) $generated@@66)) (= (type $generated@@451) $generated@@66)) (= (type $generated@@452) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452) (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@335 $generated@@449) $generated@@453))) (and ($generated@@279 ($generated@@92 ($generated@@421 $generated@@449) $generated@@453) $generated@@451 $generated@@452) ($generated@@279 $generated@@453 $generated@@450 $generated@@452)))
 :pattern ( ($generated@@92 ($generated@@421 $generated@@449) $generated@@453))
 :pattern ( ($generated@@92 ($generated@@335 $generated@@449) $generated@@453))
))))
 :pattern ( ($generated@@149 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@90 (type $generated@@454))))
 (=> (and (and (= (type $generated@@454) ($generated@@78 $generated@@456 $generated@@4)) (= (type $generated@@455) ($generated@@78 $generated@@456 $generated@@4))) ($generated@@86 $generated@@454 $generated@@455)) (= $generated@@454 $generated@@455)))
 :pattern ( ($generated@@86 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 Int) ($generated@@459 Int) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@460) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@177 $generated@@457 $generated@@458 $generated@@459) $generated@@460))  (and ($generated@@253 $generated@@460 $generated@@457) (and (<= ($generated ($generated@@360 $generated@@2 $generated@@460)) $generated@@458) ($generated@@175 ($generated ($generated@@360 $generated@@2 $generated@@460)) $generated@@459)))))
 :pattern ( ($generated@@92 ($generated@@177 $generated@@457 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@462 T@T) ) (! (= (type ($generated@@461 $generated@@462)) ($generated@@78 $generated@@462 $generated@@4))
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@339 (type $generated@@463))))
(let (($generated@@465 ($generated@@338 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@337 $generated@@465 $generated@@464)) (= (= $generated@@463 ($generated@@336 $generated@@465 $generated@@464)) (= ($generated@@335 $generated@@463) ($generated@@461 $generated@@465))))))
 :pattern ( ($generated@@335 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@339 (type $generated@@466))))
(let (($generated@@468 ($generated@@338 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@337 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@336 $generated@@468 $generated@@467)) (= ($generated@@379 $generated@@466) ($generated@@461 $generated@@467))))))
 :pattern ( ($generated@@379 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@339 (type $generated@@469))))
(let (($generated@@471 ($generated@@338 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@337 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@336 $generated@@471 $generated@@470)) (= ($generated@@420 $generated@@469) ($generated@@461 $generated@@81))))))
 :pattern ( ($generated@@420 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@321 (type $generated@@472))))
(let (($generated@@474 ($generated@@320 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@319 $generated@@474 $generated@@473)) (or (= $generated@@472 ($generated@@318 $generated@@474 $generated@@473)) (exists (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (and (and (= (type $generated@@475) $generated@@81) (= (type $generated@@476) $generated@@81)) ($generated@@0 ($generated@@92 ($generated@@412 $generated@@472) ($generated@@304 ($generated@@252 $generated@@475 $generated@@476)))))
 :no-pattern (type $generated@@475)
 :no-pattern (type $generated@@476)
 :no-pattern ($generated $generated@@475)
 :no-pattern ($generated@@0 $generated@@475)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
))))))
 :pattern ( ($generated@@412 $generated@@472))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@339 (type $generated@@477))))
(let (($generated@@479 ($generated@@338 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@337 $generated@@479 $generated@@478)) (or (= $generated@@477 ($generated@@336 $generated@@479 $generated@@478)) (exists (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (and (and (= (type $generated@@480) $generated@@81) (= (type $generated@@481) $generated@@81)) ($generated@@0 ($generated@@92 ($generated@@420 $generated@@477) ($generated@@304 ($generated@@252 $generated@@480 $generated@@481)))))
 :no-pattern (type $generated@@480)
 :no-pattern (type $generated@@481)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
))))))
 :pattern ( ($generated@@420 $generated@@477))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@81) ($generated@@253 $generated@@482 $generated@@46)) (and (= ($generated@@304 ($generated@@360 $generated@@2 $generated@@482)) $generated@@482) ($generated@@83 ($generated@@360 $generated@@2 $generated@@482) $generated@@46)))
 :pattern ( ($generated@@253 $generated@@482 $generated@@46))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@81) ($generated@@253 $generated@@483 $generated@@47)) (and (= ($generated@@304 ($generated@@360 $generated@@3 $generated@@483)) $generated@@483) ($generated@@83 ($generated@@360 $generated@@3 $generated@@483) $generated@@47)))
 :pattern ( ($generated@@253 $generated@@483 $generated@@47))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@81) ($generated@@253 $generated@@484 $generated@@44)) (and (= ($generated@@304 ($generated@@360 $generated@@4 $generated@@484)) $generated@@484) ($generated@@83 ($generated@@360 $generated@@4 $generated@@484) $generated@@44)))
 :pattern ( ($generated@@253 $generated@@484 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@485) 20))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@81) ($generated@@253 $generated@@486 $generated@@45)) (and (= ($generated@@304 ($generated@@360 $generated@@485 $generated@@486)) $generated@@486) ($generated@@83 ($generated@@360 $generated@@485 $generated@@486) $generated@@45)))
 :pattern ( ($generated@@253 $generated@@486 $generated@@45))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@66) (= ($generated@@253 ($generated@@304 $generated@@487) $generated@@488) ($generated@@83 $generated@@487 $generated@@488)))
 :pattern ( ($generated@@253 ($generated@@304 $generated@@487) $generated@@488))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@489 Int) ($generated@@490 Int) ) (!  (=> (or ($generated@@176 $generated@@489 $generated@@490) (and (not (= 1 $generated@@74)) (and (<= ($generated@@174 1) $generated@@489) (<= ($generated@@174 1) $generated@@490)))) (= ($generated@@175 $generated@@489 $generated@@490) (exists (($generated@@491 Int) ) (! (= ($generated@@300 $generated@@489 $generated@@491) $generated@@490)
 :pattern ( ($generated@@300 $generated@@489 $generated@@491))
))))
 :pattern ( ($generated@@175 $generated@@489 $generated@@490))
))))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@90 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@78 $generated@@493 $generated@@2)) (<= 0 ($generated@@309 $generated@@492))))
 :pattern ( ($generated@@309 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@294 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@293 $generated@@495)) (<= 0 ($generated@@292 $generated@@494))))
 :pattern ( ($generated@@292 $generated@@494))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@496 Int) ($generated@@497 Int) ) (!  (=> (or ($generated@@176 $generated@@496 $generated@@497) (and (not (= 1 $generated@@74)) (and (<= ($generated@@174 1) $generated@@496) (<= ($generated@@174 1) $generated@@497)))) true)
 :pattern ( ($generated@@175 $generated@@496 $generated@@497))
))))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@66) (= (type $generated@@501) $generated@@66)) (= ($generated@@498 ($generated@@438 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@438 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@66)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@66) (= (type $generated@@505) $generated@@66)) (= ($generated@@502 ($generated@@438 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@438 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@66) (= (type $generated@@507) $generated@@66)) (= ($generated@@147 ($generated@@438 $generated@@506 $generated@@507)) $generated@@58))
 :pattern ( ($generated@@438 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@66)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@66) (= (type $generated@@511) $generated@@66)) (= ($generated@@508 ($generated@@446 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@446 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@66)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@66) (= (type $generated@@515) $generated@@66)) (= ($generated@@512 ($generated@@446 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@446 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@66) (= (type $generated@@517) $generated@@66)) (= ($generated@@147 ($generated@@446 $generated@@516 $generated@@517)) $generated@@59))
 :pattern ( ($generated@@446 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@81) (= (type $generated@@519) $generated@@81)) (= ($generated@@285 ($generated@@252 $generated@@518 $generated@@519)) $generated@@61))
 :pattern ( ($generated@@252 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@66)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@66) (= (type $generated@@523) $generated@@66)) (= ($generated@@520 ($generated@@158 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@158 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@66)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= ($generated@@524 ($generated@@158 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@158 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@81) (= (type $generated@@529) $generated@@81)) (= ($generated@@166 ($generated@@252 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@252 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@81) (= (type $generated@@531) $generated@@81)) (= ($generated@@167 ($generated@@252 $generated@@530 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@252 $generated@@530 $generated@@531))
)))
(assert  (and (forall (($generated@@534 T@U) ) (! (= (type ($generated@@532 $generated@@534)) $generated@@66)
 :pattern ( ($generated@@532 $generated@@534))
)) (forall (($generated@@535 T@U) ($generated@@536 Int) ) (! (let (($generated@@537 ($generated@@294 (type $generated@@535))))
(= (type ($generated@@533 $generated@@535 $generated@@536)) $generated@@537))
 :pattern ( ($generated@@533 $generated@@535 $generated@@536))
))))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@293 $generated@@81)) (= (type $generated@@539) $generated@@66)) (= (type $generated@@540) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@538 ($generated@@532 $generated@@539) $generated@@540) (forall (($generated@@541 Int) ) (!  (=> (and (<= 0 $generated@@541) (< $generated@@541 ($generated@@292 $generated@@538))) ($generated@@279 ($generated@@533 $generated@@538 $generated@@541) $generated@@539 $generated@@540))
 :pattern ( ($generated@@533 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@149 $generated@@538 ($generated@@532 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@543 Int) ) (! (= ($generated@@542 ($generated@@150 $generated@@543)) $generated@@543)
 :pattern ( ($generated@@150 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@66)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@66) (= ($generated@@544 ($generated@@84 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@84 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@66) (= ($generated@@147 ($generated@@84 $generated@@547)) $generated@@54))
 :pattern ( ($generated@@84 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@66)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@66) (= ($generated@@548 ($generated@@271 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@271 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@66) (= ($generated@@147 ($generated@@271 $generated@@551)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@66)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@66) (= ($generated@@552 ($generated@@184 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@184 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@66) (= ($generated@@147 ($generated@@184 $generated@@555)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@66)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@66) (= ($generated@@556 ($generated@@532 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@532 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@66) (= ($generated@@147 ($generated@@532 $generated@@559)) $generated@@57))
 :pattern ( ($generated@@532 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
(= ($generated@@360 $generated@@561 ($generated@@304 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@304 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@563) $generated@@66)) (= (type $generated@@564) $generated@@66)) (= ($generated@@83 $generated@@562 ($generated@@438 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@317 $generated@@562) $generated@@565))) (and ($generated@@253 ($generated@@92 ($generated@@413 $generated@@562) $generated@@565) $generated@@564) ($generated@@253 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@92 ($generated@@413 $generated@@562) $generated@@565))
 :pattern ( ($generated@@92 ($generated@@317 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@83 $generated@@562 ($generated@@438 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@567) $generated@@66)) (= (type $generated@@568) $generated@@66)) (= ($generated@@83 $generated@@566 ($generated@@446 $generated@@567 $generated@@568)) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@335 $generated@@566) $generated@@569))) (and ($generated@@253 ($generated@@92 ($generated@@421 $generated@@566) $generated@@569) $generated@@568) ($generated@@253 $generated@@569 $generated@@567)))
 :pattern ( ($generated@@92 ($generated@@421 $generated@@566) $generated@@569))
 :pattern ( ($generated@@92 ($generated@@335 $generated@@566) $generated@@569))
))))
 :pattern ( ($generated@@83 $generated@@566 ($generated@@446 $generated@@567 $generated@@568)))
)))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@571) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 $generated@@571) (and (not (= 3 $generated@@74)) (and (and ($generated@@77 $generated@@570) ($generated@@83 $generated@@571 ($generated@@84 $generated@@85))) (not ($generated@@86 $generated@@571 ($generated@@87 $generated@@81))))))) (and ($generated@@88 $generated@@571) (= ($generated@@75 $generated@@571) (let (($generated@@572 ($generated@@89 $generated@@571)))
$generated@@572))))
 :pattern ( ($generated@@75 $generated@@571) ($generated@@77 $generated@@570))
))))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@81) (= (type $generated@@576) $generated@@81)) (< ($generated@@573 $generated@@575) ($generated@@574 ($generated@@252 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@252 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@81) (= (type $generated@@578) $generated@@81)) (< ($generated@@573 $generated@@578) ($generated@@574 ($generated@@252 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@252 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@90 (type $generated@@579))))
 (=> (and (= (type $generated@@579) ($generated@@78 $generated@@581 $generated@@4)) (= (type $generated@@580) ($generated@@78 $generated@@581 $generated@@4))) (= ($generated@@245 $generated@@579 ($generated@@245 $generated@@579 $generated@@580)) ($generated@@245 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@245 $generated@@579 ($generated@@245 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@81) (= (type $generated@@583) $generated@@66)) (= (type $generated@@584) $generated@@66)) ($generated@@253 $generated@@582 ($generated@@438 $generated@@583 $generated@@584))) (and (= ($generated@@304 ($generated@@360 ($generated@@319 $generated@@81 $generated@@81) $generated@@582)) $generated@@582) ($generated@@83 ($generated@@360 ($generated@@319 $generated@@81 $generated@@81) $generated@@582) ($generated@@438 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@253 $generated@@582 ($generated@@438 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@81) (= (type $generated@@586) $generated@@66)) (= (type $generated@@587) $generated@@66)) ($generated@@253 $generated@@585 ($generated@@446 $generated@@586 $generated@@587))) (and (= ($generated@@304 ($generated@@360 ($generated@@337 $generated@@81 $generated@@81) $generated@@585)) $generated@@585) ($generated@@83 ($generated@@360 ($generated@@337 $generated@@81 $generated@@81) $generated@@585) ($generated@@446 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@253 $generated@@585 ($generated@@446 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@66) (= (type $generated@@589) $generated@@66)) (= (type $generated@@590) $generated@@81)) ($generated@@253 $generated@@590 ($generated@@158 $generated@@588 $generated@@589))) (and (= ($generated@@304 ($generated@@360 $generated@@159 $generated@@590)) $generated@@590) ($generated@@83 ($generated@@360 $generated@@159 $generated@@590) ($generated@@158 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@253 $generated@@590 ($generated@@158 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@591)))
 (not ($generated@@0 ($generated@@92 ($generated@@87 $generated@@592) $generated@@591))))
 :pattern ( (let (($generated@@592 (type $generated@@591)))
($generated@@92 ($generated@@87 $generated@@592) $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@593)))
 (not ($generated@@0 ($generated@@92 ($generated@@461 $generated@@594) $generated@@593))))
 :pattern ( (let (($generated@@594 (type $generated@@593)))
($generated@@92 ($generated@@461 $generated@@594) $generated@@593)))
)))
(assert (forall (($generated@@596 T@U) ) (! (= (type ($generated@@595 $generated@@596)) $generated@@71)
 :pattern ( ($generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@66) (= (type $generated@@598) $generated@@66)) (and (= ($generated@@147 ($generated@@158 $generated@@597 $generated@@598)) $generated@@62) (= ($generated@@595 ($generated@@158 $generated@@597 $generated@@598)) $generated@@64)))
 :pattern ( ($generated@@158 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 Int) ($generated@@600 Int) ) (! (= ($generated@@300 $generated@@599 $generated@@600) (* $generated@@599 $generated@@600))
 :pattern ( ($generated@@300 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@159) (= ($generated@@573 ($generated@@304 $generated@@601)) ($generated@@574 $generated@@601)))
 :pattern ( ($generated@@573 ($generated@@304 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@81) ($generated@@253 $generated@@602 ($generated@@150 0))) (and (= ($generated@@304 ($generated@@360 $generated@@2 $generated@@602)) $generated@@602) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@602) ($generated@@150 0))))
 :pattern ( ($generated@@253 $generated@@602 ($generated@@150 0)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@81) (= (type $generated@@604) $generated@@66)) ($generated@@253 $generated@@603 ($generated@@84 $generated@@604))) (and (= ($generated@@304 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@603)) $generated@@603) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@603) ($generated@@84 $generated@@604))))
 :pattern ( ($generated@@253 $generated@@603 ($generated@@84 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@81) (= (type $generated@@606) $generated@@66)) ($generated@@253 $generated@@605 ($generated@@271 $generated@@606))) (and (= ($generated@@304 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@605)) $generated@@605) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@605) ($generated@@271 $generated@@606))))
 :pattern ( ($generated@@253 $generated@@605 ($generated@@271 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@81) (= (type $generated@@608) $generated@@66)) ($generated@@253 $generated@@607 ($generated@@184 $generated@@608))) (and (= ($generated@@304 ($generated@@360 ($generated@@78 $generated@@81 $generated@@2) $generated@@607)) $generated@@607) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@2) $generated@@607) ($generated@@184 $generated@@608))))
 :pattern ( ($generated@@253 $generated@@607 ($generated@@184 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@81) (= (type $generated@@610) $generated@@66)) ($generated@@253 $generated@@609 ($generated@@532 $generated@@610))) (and (= ($generated@@304 ($generated@@360 ($generated@@293 $generated@@81) $generated@@609)) $generated@@609) ($generated@@83 ($generated@@360 ($generated@@293 $generated@@81) $generated@@609) ($generated@@532 $generated@@610))))
 :pattern ( ($generated@@253 $generated@@609 ($generated@@532 $generated@@610)))
)))
(assert (= ($generated@@147 $generated@@85) $generated@@63))
(assert (= ($generated@@595 $generated@@85) $generated@@65))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@611) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@612) $generated@@66)) (= (type $generated@@613) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@611 ($generated@@184 $generated@@612) $generated@@613) (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@81) (< 0 ($generated ($generated@@92 $generated@@611 $generated@@614)))) ($generated@@279 $generated@@614 $generated@@612 $generated@@613))
 :pattern ( ($generated@@92 $generated@@611 $generated@@614))
))))
 :pattern ( ($generated@@149 $generated@@611 ($generated@@184 $generated@@612) $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@159) (= (type $generated@@616) $generated@@66)) (= (type $generated@@617) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@77 $generated@@617) (and ($generated@@157 $generated@@615) (exists (($generated@@618 T@U) ) (!  (and (= (type $generated@@618) $generated@@66) ($generated@@149 $generated@@615 ($generated@@158 $generated@@616 $generated@@618) $generated@@617))
 :pattern ( ($generated@@149 $generated@@615 ($generated@@158 $generated@@616 $generated@@618) $generated@@617))
))))) ($generated@@279 ($generated@@166 $generated@@615) $generated@@616 $generated@@617))
 :pattern ( ($generated@@279 ($generated@@166 $generated@@615) $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) $generated@@159) (= (type $generated@@620) $generated@@66)) (= (type $generated@@621) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@77 $generated@@621) (and ($generated@@157 $generated@@619) (exists (($generated@@622 T@U) ) (!  (and (= (type $generated@@622) $generated@@66) ($generated@@149 $generated@@619 ($generated@@158 $generated@@622 $generated@@620) $generated@@621))
 :pattern ( ($generated@@149 $generated@@619 ($generated@@158 $generated@@622 $generated@@620) $generated@@621))
))))) ($generated@@279 ($generated@@167 $generated@@619) $generated@@620 $generated@@621))
 :pattern ( ($generated@@279 ($generated@@167 $generated@@619) $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@81) (= (type $generated@@624) $generated@@81)) (= ($generated@@252 ($generated@@76 $generated@@623) ($generated@@76 $generated@@624)) ($generated@@76 ($generated@@252 $generated@@623 $generated@@624))))
 :pattern ( ($generated@@252 ($generated@@76 $generated@@623) ($generated@@76 $generated@@624)))
)))
(assert (forall (($generated@@625 Int) ) (! (= ($generated@@304 ($generated@@8 ($generated@@174 $generated@@625))) ($generated@@76 ($generated@@304 ($generated@@8 $generated@@625))))
 :pattern ( ($generated@@304 ($generated@@8 ($generated@@174 $generated@@625))))
)))
(assert (forall (($generated@@626 T@U) ) (! (= ($generated@@304 ($generated@@76 $generated@@626)) ($generated@@76 ($generated@@304 $generated@@626)))
 :pattern ( ($generated@@304 ($generated@@76 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (! (let (($generated@@628 ($generated@@294 (type $generated@@627))))
 (=> (and (= (type $generated@@627) ($generated@@293 $generated@@628)) (= ($generated@@292 $generated@@627) 0)) (= $generated@@627 ($generated@@291 $generated@@628))))
 :pattern ( ($generated@@292 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (! (let (($generated@@632 (type $generated@@630)))
 (=> (and (and (= (type $generated@@629) ($generated@@78 $generated@@632 $generated@@2)) (= (type $generated@@631) $generated@@2)) (<= 0 ($generated $generated@@631))) (= ($generated@@309 ($generated@@93 $generated@@629 $generated@@630 $generated@@631)) (+ (- ($generated@@309 $generated@@629) ($generated ($generated@@92 $generated@@629 $generated@@630))) ($generated $generated@@631)))))
 :pattern ( ($generated@@309 ($generated@@93 $generated@@629 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@634) $generated@@2)) ($generated@@149 $generated@@634 $generated@@46 $generated@@633))
 :pattern ( ($generated@@149 $generated@@634 $generated@@46 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@636) $generated@@3)) ($generated@@149 $generated@@636 $generated@@47 $generated@@635))
 :pattern ( ($generated@@149 $generated@@636 $generated@@47 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@638) $generated@@4)) ($generated@@149 $generated@@638 $generated@@44 $generated@@637))
 :pattern ( ($generated@@149 $generated@@638 $generated@@44 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@640) $generated@@485)) ($generated@@149 $generated@@640 $generated@@45 $generated@@639))
 :pattern ( ($generated@@149 $generated@@640 $generated@@45 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@642) $generated@@81)) ($generated@@149 $generated@@642 $generated@@48 $generated@@641))
 :pattern ( ($generated@@149 $generated@@642 $generated@@48 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@293 $generated@@81)) (= (type $generated@@644) $generated@@66)) (= ($generated@@83 $generated@@643 ($generated@@532 $generated@@644)) (forall (($generated@@645 Int) ) (!  (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@292 $generated@@643))) ($generated@@253 ($generated@@533 $generated@@643 $generated@@645) $generated@@644))
 :pattern ( ($generated@@533 $generated@@643 $generated@@645))
))))
 :pattern ( ($generated@@83 $generated@@643 ($generated@@532 $generated@@644)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 Int) ) (!  (=> (= (type $generated@@647) ($generated@@293 $generated@@81)) (=> (and (<= 0 $generated@@648) (< $generated@@648 ($generated@@292 $generated@@647))) (< ($generated@@574 ($generated@@360 $generated@@159 ($generated@@533 $generated@@647 $generated@@648))) ($generated@@646 $generated@@647))))
 :pattern ( ($generated@@574 ($generated@@360 $generated@@159 ($generated@@533 $generated@@647 $generated@@648))))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@650) $generated@@66)) (= (type $generated@@651) $generated@@66)) ($generated@@83 $generated@@649 ($generated@@438 $generated@@650 $generated@@651))) (and (and ($generated@@83 ($generated@@317 $generated@@649) ($generated@@84 $generated@@650)) ($generated@@83 ($generated@@368 $generated@@649) ($generated@@84 $generated@@651))) ($generated@@83 ($generated@@412 $generated@@649) ($generated@@84 ($generated@@158 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@83 $generated@@649 ($generated@@438 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@653) $generated@@66)) (= (type $generated@@654) $generated@@66)) ($generated@@83 $generated@@652 ($generated@@446 $generated@@653 $generated@@654))) (and (and ($generated@@83 ($generated@@335 $generated@@652) ($generated@@271 $generated@@653)) ($generated@@83 ($generated@@379 $generated@@652) ($generated@@271 $generated@@654))) ($generated@@83 ($generated@@420 $generated@@652) ($generated@@271 ($generated@@158 $generated@@653 $generated@@654)))))
 :pattern ( ($generated@@83 $generated@@652 ($generated@@446 $generated@@653 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@2) ($generated@@83 $generated@@655 $generated@@46))
 :pattern ( ($generated@@83 $generated@@655 $generated@@46))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@3) ($generated@@83 $generated@@656 $generated@@47))
 :pattern ( ($generated@@83 $generated@@656 $generated@@47))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@4) ($generated@@83 $generated@@657 $generated@@44))
 :pattern ( ($generated@@83 $generated@@657 $generated@@44))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@485) ($generated@@83 $generated@@658 $generated@@45))
 :pattern ( ($generated@@83 $generated@@658 $generated@@45))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@81) ($generated@@83 $generated@@659 $generated@@48))
 :pattern ( ($generated@@83 $generated@@659 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () Int)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@660) ($generated@@191 $generated@@79 $generated@@4)) (= (type $generated@@661) $generated@@79)) (= (type $generated@@662) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@665) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@667  (=> (and (= $generated@@660 ($generated@@190 $generated@@661 $generated@@662 $generated@@60 false)) (< $generated@@663 $generated@@664)) (=> (and (and (and ($generated@@77 $generated@@665) ($generated@@666 $generated@@665)) (and (= $generated@@662 $generated@@665) ($generated@@149 ($generated@@8 $generated@@664) $generated@@85 $generated@@665))) (and (and ($generated@@149 ($generated@@8 $generated@@663) $generated@@85 $generated@@665) ($generated@@261 $generated@@664 $generated@@663)) (and ($generated@@149 ($generated@@8 $generated@@663) $generated@@85 $generated@@665) (= (ControlFlow 0 2) (- 0 1))))) ($generated@@83 ($generated@@8 (- $generated@@664 $generated@@663)) $generated@@85)))))
(let (($generated@@668  (=> (and ($generated@@77 $generated@@662) ($generated@@666 $generated@@662)) (=> (and (and (<= ($generated@@174 1) $generated@@663) (<= ($generated@@174 1) $generated@@664)) (and (= 6 $generated@@74) (= (ControlFlow 0 3) 2))) $generated@@667))))
$generated@@668)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 () Int)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 () T@U)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@T) T@U)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@89 (T@U) Int)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@149 (T@U T@U T@U) Bool)
(declare-fun $generated@@150 (Int) T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@172 (Int) T@U)
(declare-fun $generated@@173 (Int) Bool)
(declare-fun $generated@@174 (Int) Int)
(declare-fun $generated@@175 (Int Int) Bool)
(declare-fun $generated@@176 (Int Int) Bool)
(declare-fun $generated@@177 (T@U Int Int) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@191 (T@T T@T) T@T)
(declare-fun $generated@@192 (T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) T@U)
(declare-fun $generated@@253 (T@U T@U) Bool)
(declare-fun $generated@@260 (Int Int) Int)
(declare-fun $generated@@261 (Int Int) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@279 (T@U T@U T@U) Bool)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@292 (T@U) Int)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@300 (Int Int) Int)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@309 (T@U) Int)
(declare-fun $generated@@310 (T@T) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@412 (T@U) T@U)
(declare-fun $generated@@413 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@438 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@U T@U) T@U)
(declare-fun $generated@@461 (T@T) T@U)
(declare-fun $generated@@485 () T@T)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@533 (T@U Int) T@U)
(declare-fun $generated@@542 (T@U) Int)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@548 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@573 (T@U) Int)
(declare-fun $generated@@574 (T@U) Int)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@646 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@96 $generated@@97)) 11)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@78 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@78 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@78 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@78 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@78 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@69 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@80)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@69 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 14)) (forall (($generated@@140 T@U) ) (! (let (($generated@@141 (type $generated@@140)))
(= (type ($generated@@76 $generated@@140)) $generated@@141))
 :pattern ( ($generated@@76 $generated@@140))
))) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@84 $generated@@142)) $generated@@66)
 :pattern ( ($generated@@84 $generated@@142))
))) (= (type $generated@@85) $generated@@66)) (forall (($generated@@143 T@T) ) (! (= (type ($generated@@87 $generated@@143)) ($generated@@78 $generated@@143 $generated@@4))
 :pattern ( ($generated@@87 $generated@@143))
))))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@145) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 ($generated@@76 $generated@@145)) (and (not (= 3 $generated@@74)) (and (and ($generated@@77 $generated@@144) ($generated@@83 $generated@@145 ($generated@@84 $generated@@85))) (not ($generated@@86 $generated@@145 ($generated@@87 $generated@@81))))))) (and ($generated@@88 ($generated@@76 $generated@@145)) (= ($generated@@75 ($generated@@76 $generated@@145)) (let (($generated@@146 ($generated@@89 ($generated@@76 $generated@@145))))
$generated@@146))))
 :weight 3
 :pattern ( ($generated@@75 ($generated@@76 $generated@@145)) ($generated@@77 $generated@@144))
))))
(assert (forall (($generated@@148 T@U) ) (! (= (type ($generated@@147 $generated@@148)) $generated@@67)
 :pattern ( ($generated@@147 $generated@@148))
)))
(assert (= ($generated@@147 $generated@@44) $generated@@49))
(assert (= ($generated@@147 $generated@@45) $generated@@50))
(assert (= ($generated@@147 $generated@@46) $generated@@51))
(assert (= ($generated@@147 $generated@@47) $generated@@52))
(assert (= ($generated@@147 $generated@@48) $generated@@53))
(assert (forall (($generated@@151 Int) ) (! (= (type ($generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@2) (= (type $generated@@153) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@149 $generated@@152 ($generated@@150 0) $generated@@153))
 :pattern ( ($generated@@149 $generated@@152 ($generated@@150 0) $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (= (type $generated@@154) $generated@@2) (= (type $generated@@155) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@149 $generated@@154 $generated@@85 $generated@@155))
 :pattern ( ($generated@@149 $generated@@154 $generated@@85 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@83 $generated@@156 ($generated@@150 0)))
 :pattern ( ($generated@@83 $generated@@156 ($generated@@150 0)))
)))
(assert  (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@160 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@158 $generated@@160 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@66) (= (type $generated@@163) $generated@@66)) (= (type $generated@@164) $generated@@159)) ($generated@@83 $generated@@164 ($generated@@158 $generated@@162 $generated@@163))) ($generated@@157 $generated@@164))
 :pattern ( ($generated@@157 $generated@@164) ($generated@@83 $generated@@164 ($generated@@158 $generated@@162 $generated@@163)))
)))
(assert  (and (forall (($generated@@168 T@U) ) (! (= (type ($generated@@166 $generated@@168)) $generated@@81)
 :pattern ( ($generated@@166 $generated@@168))
)) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@81)
 :pattern ( ($generated@@167 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) $generated@@159) (= (type $generated@@171) $generated@@159)) true) (= ($generated@@165 $generated@@170 $generated@@171)  (and (= ($generated@@166 $generated@@170) ($generated@@166 $generated@@171)) (= ($generated@@167 $generated@@170) ($generated@@167 $generated@@171)))))
 :pattern ( ($generated@@165 $generated@@170 $generated@@171))
)))
(assert  (and (forall (($generated@@178 Int) ) (! (= (type ($generated@@172 $generated@@178)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@172 $generated@@178))
)) (forall (($generated@@179 T@U) ($generated@@180 Int) ($generated@@181 Int) ) (! (= (type ($generated@@177 $generated@@179 $generated@@180 $generated@@181)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@177 $generated@@179 $generated@@180 $generated@@181))
))))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@182 Int) ) (!  (=> (or ($generated@@173 $generated@@182) (and (not (= 2 $generated@@74)) (<= ($generated@@174 1) $generated@@182))) (and (forall (($generated@@183 Int) ) (!  (=> (<= ($generated@@174 1) $generated@@183) (=> (<= $generated@@183 $generated@@182) ($generated@@176 $generated@@183 $generated@@182)))
 :pattern ( ($generated@@175 $generated@@183 $generated@@182))
)) (= ($generated@@172 $generated@@182) ($generated@@177 $generated@@85 $generated@@182 $generated@@182))))
 :pattern ( ($generated@@172 $generated@@182))
))))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@66)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@188) $generated@@66)) ($generated@@83 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@83 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (= ($generated@@1 ($generated@@191 $generated@@195 $generated@@196)) 16)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@192 ($generated@@191 $generated@@197 $generated@@198)) $generated@@197)
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@193 ($generated@@191 $generated@@199 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@191 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@193 (type $generated@@201))))
(= (type ($generated@@189 $generated@@201 $generated@@202 $generated@@203)) $generated@@204))
 :pattern ( ($generated@@189 $generated@@201 $generated@@202 $generated@@203))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 (type $generated@@208)))
(let (($generated@@210 (type $generated@@206)))
(= (type ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@191 $generated@@210 $generated@@209))))
 :pattern ( ($generated@@194 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@193 (type $generated@@211))))
 (=> (= (type $generated@@214) $generated@@215) (= ($generated@@189 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@212 $generated@@213) $generated@@214)))
 :weight 0
))) (and (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@189 ($generated@@194 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@189 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
)) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@189 ($generated@@194 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@189 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or true (= ($generated@@189 ($generated@@194 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@189 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Bool) ) (! (= (type ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@191 $generated@@79 $generated@@4))
 :pattern ( ($generated@@190 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@69 (type $generated@@243))))
 (=> (and (and (and (and (= (type $generated@@238) $generated@@79) (= (type $generated@@239) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@240) ($generated@@68 $generated@@4))) (= (type $generated@@242) $generated@@79)) (= (type $generated@@243) ($generated@@68 $generated@@244))) (= ($generated@@0 ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))  (=> (and (not (= $generated@@242 $generated@@238)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@239 $generated@@242) $generated@@240))) $generated@@241))))
 :pattern ( ($generated@@189 ($generated@@190 $generated@@238 $generated@@239 $generated@@240 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@90 (type $generated@@246))))
(= (type ($generated@@245 $generated@@246 $generated@@247)) ($generated@@78 $generated@@248 $generated@@4)))
 :pattern ( ($generated@@245 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@90 (type $generated@@249))))
 (=> (and (= (type $generated@@249) ($generated@@78 $generated@@251 $generated@@4)) (= (type $generated@@250) ($generated@@78 $generated@@251 $generated@@4))) (= ($generated@@245 ($generated@@245 $generated@@249 $generated@@250) $generated@@250) ($generated@@245 $generated@@249 $generated@@250))))
 :pattern ( ($generated@@245 ($generated@@245 $generated@@249 $generated@@250) $generated@@250))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (! (= (type ($generated@@252 $generated@@254 $generated@@255)) $generated@@159)
 :pattern ( ($generated@@252 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) $generated@@66) (= (type $generated@@257) $generated@@66)) (= (type $generated@@258) $generated@@81)) (= (type $generated@@259) $generated@@81)) (= ($generated@@83 ($generated@@252 $generated@@258 $generated@@259) ($generated@@158 $generated@@256 $generated@@257))  (and ($generated@@253 $generated@@258 $generated@@256) ($generated@@253 $generated@@259 $generated@@257))))
 :pattern ( ($generated@@83 ($generated@@252 $generated@@258 $generated@@259) ($generated@@158 $generated@@256 $generated@@257)))
)))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@262 Int) ($generated@@263 Int) ) (!  (=> (or ($generated@@261 $generated@@262 $generated@@263) (and (not (= 4 $generated@@74)) (and (<= ($generated@@174 1) $generated@@262) (<= ($generated@@174 1) $generated@@263)))) (and (and (and ($generated@@173 $generated@@262) ($generated@@173 $generated@@263)) (let (($generated@@264 ($generated@@245 ($generated@@172 $generated@@262) ($generated@@172 $generated@@263))))
($generated@@82 $generated@@264))) (= ($generated@@260 $generated@@262 $generated@@263) (let (($generated@@265 ($generated@@245 ($generated@@172 $generated@@262) ($generated@@172 $generated@@263))))
($generated@@75 $generated@@265)))))
 :pattern ( ($generated@@260 $generated@@262 $generated@@263))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) $generated@@159) (= (type $generated@@267) $generated@@159)) (= ($generated@@165 $generated@@266 $generated@@267) (= $generated@@266 $generated@@267)))
 :pattern ( ($generated@@165 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@269) $generated@@66)) (= ($generated@@83 $generated@@268 ($generated@@84 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@81) ($generated@@0 ($generated@@92 $generated@@268 $generated@@270))) ($generated@@253 $generated@@270 $generated@@269))
 :pattern ( ($generated@@92 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@83 $generated@@268 ($generated@@84 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@66)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@274) $generated@@66)) (= ($generated@@83 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@81) ($generated@@0 ($generated@@92 $generated@@273 $generated@@275))) ($generated@@253 $generated@@275 $generated@@274))
 :pattern ( ($generated@@92 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@83 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@276 Int) ) (! (= ($generated@@174 $generated@@276) $generated@@276)
 :pattern ( ($generated@@174 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (! (= ($generated@@76 $generated@@277) $generated@@277)
 :pattern ( ($generated@@76 $generated@@277))
)))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) ($generated@@78 $generated@@81 $generated@@4)) (or ($generated@@82 $generated@@278) (and (not (= 3 $generated@@74)) (and ($generated@@83 $generated@@278 ($generated@@84 $generated@@85)) (not ($generated@@86 $generated@@278 ($generated@@87 $generated@@81))))))) (<= ($generated@@174 1) ($generated@@75 $generated@@278)))
 :pattern ( ($generated@@75 $generated@@278))
))))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) $generated@@66) (= (type $generated@@281) $generated@@66)) (= (type $generated@@282) $generated@@81)) (= (type $generated@@283) $generated@@81)) (= (type $generated@@284) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@77 $generated@@284)) (= ($generated@@149 ($generated@@252 $generated@@282 $generated@@283) ($generated@@158 $generated@@280 $generated@@281) $generated@@284)  (and ($generated@@279 $generated@@282 $generated@@280 $generated@@284) ($generated@@279 $generated@@283 $generated@@281 $generated@@284))))
 :pattern ( ($generated@@149 ($generated@@252 $generated@@282 $generated@@283) ($generated@@158 $generated@@280 $generated@@281) $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@70)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@159) (= ($generated@@157 $generated@@287) (= ($generated@@285 $generated@@287) $generated@@61)))
 :pattern ( ($generated@@157 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@159) ($generated@@157 $generated@@288)) (exists (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (and (and (= (type $generated@@289) $generated@@81) (= (type $generated@@290) $generated@@81)) (= $generated@@288 ($generated@@252 $generated@@289 $generated@@290)))
 :no-pattern (type $generated@@289)
 :no-pattern (type $generated@@290)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
 :no-pattern ($generated $generated@@290)
 :no-pattern ($generated@@0 $generated@@290)
)))
 :pattern ( ($generated@@157 $generated@@288))
)))
(assert  (and (and (forall (($generated@@295 T@T) ) (= ($generated@@1 ($generated@@293 $generated@@295)) 17)) (forall (($generated@@296 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@293 $generated@@296))
))) (forall (($generated@@297 T@T) ) (! (= (type ($generated@@291 $generated@@297)) ($generated@@293 $generated@@297))
 :pattern ( ($generated@@291 $generated@@297))
))))
(assert (forall (($generated@@298 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@298)) 0)
 :pattern ( ($generated@@291 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@2) (= ($generated@@83 $generated@@299 $generated@@85) (<= ($generated@@174 1) ($generated $generated@@299))))
 :pattern ( ($generated@@83 $generated@@299 $generated@@85))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@301 Int) ($generated@@302 Int) ) (!  (=> (or ($generated@@176 ($generated@@174 $generated@@301) ($generated@@174 $generated@@302)) (and (not (= 1 $generated@@74)) (and (<= ($generated@@174 1) $generated@@301) (<= ($generated@@174 1) $generated@@302)))) (= ($generated@@175 ($generated@@174 $generated@@301) ($generated@@174 $generated@@302)) (exists (($generated@@303 Int) ) (! (= ($generated@@300 ($generated@@174 $generated@@301) $generated@@303) ($generated@@174 $generated@@302))
 :pattern ( ($generated@@300 $generated@@301 $generated@@303))
))))
 :weight 3
 :pattern ( ($generated@@175 ($generated@@174 $generated@@301) ($generated@@174 $generated@@302)))
))))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@81)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@66) (= (type $generated@@308) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@279 ($generated@@304 $generated@@306) $generated@@307 $generated@@308) ($generated@@149 $generated@@306 $generated@@307 $generated@@308)))
 :pattern ( ($generated@@279 ($generated@@304 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@311 T@T) ) (! (= (type ($generated@@310 $generated@@311)) ($generated@@78 $generated@@311 $generated@@2))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@90 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@78 $generated@@313 $generated@@2)) (and (= (= ($generated@@309 $generated@@312) 0) (= $generated@@312 ($generated@@310 $generated@@313))) (=> (not (= ($generated@@309 $generated@@312) 0)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) (< 0 ($generated ($generated@@92 $generated@@312 $generated@@314))))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) ($generated@@78 $generated@@81 $generated@@4)) ($generated@@88 $generated@@315)) (and ($generated@@0 ($generated@@92 $generated@@315 ($generated@@304 ($generated@@8 ($generated@@89 $generated@@315))))) (forall (($generated@@316 T@U) ) (!  (=> (and (and (= (type $generated@@316) $generated@@2) true) ($generated@@0 ($generated@@92 $generated@@315 ($generated@@304 $generated@@316)))) (<= ($generated $generated@@316) ($generated@@89 $generated@@315)))
 :pattern ( ($generated@@92 $generated@@315 ($generated@@304 $generated@@316)))
))))
 :pattern ( ($generated@@89 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 18)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@78 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@92 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@92 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 19)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@92 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@92 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@90 (type $generated@@353))))
 (=> (and (= (type $generated@@353) ($generated@@78 $generated@@355 $generated@@4)) (= (type $generated@@354) ($generated@@78 $generated@@355 $generated@@4))) (= ($generated@@86 $generated@@353 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (= ($generated@@0 ($generated@@92 $generated@@353 $generated@@356)) ($generated@@0 ($generated@@92 $generated@@354 $generated@@356))))
 :pattern ( ($generated@@92 $generated@@353 $generated@@356))
 :pattern ( ($generated@@92 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@86 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@90 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@78 $generated@@358 $generated@@2)) (= ($generated@@185 $generated@@357) (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@358) (and (<= 0 ($generated ($generated@@92 $generated@@357 $generated@@359))) (<= ($generated ($generated@@92 $generated@@357 $generated@@359)) ($generated@@309 $generated@@357))))
 :pattern ( ($generated@@92 $generated@@357 $generated@@359))
)))))
 :pattern ( ($generated@@185 $generated@@357))
)))
(assert (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@360 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@81) ($generated@@253 $generated@@363 $generated@@85)) (and (= ($generated@@304 ($generated@@360 $generated@@2 $generated@@363)) $generated@@363) ($generated@@83 ($generated@@360 $generated@@2 $generated@@363) $generated@@85)))
 :pattern ( ($generated@@253 $generated@@363 $generated@@85))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@321 (type $generated@@364))))
(let (($generated@@366 ($generated@@320 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@319 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@318 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@92 ($generated@@317 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@317 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@321 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@78 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@321 (type $generated@@371))))
(let (($generated@@373 ($generated@@320 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@319 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@318 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@92 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@339 (type $generated@@375))))
(let (($generated@@377 ($generated@@338 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@337 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@336 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@92 ($generated@@335 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@335 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@339 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@78 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@339 (type $generated@@382))))
(let (($generated@@384 ($generated@@338 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@337 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@336 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@92 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@386 Int) ($generated@@387 Int) ) (!  (=> (or ($generated@@261 $generated@@386 $generated@@387) (and (not (= 4 $generated@@74)) (and (<= ($generated@@174 1) $generated@@386) (<= ($generated@@174 1) $generated@@387)))) (<= ($generated@@174 1) ($generated@@260 $generated@@386 $generated@@387)))
 :pattern ( ($generated@@260 $generated@@386 $generated@@387))
))))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@388 Int) ) (!  (=> (or ($generated@@173 ($generated@@174 $generated@@388)) (and (not (= 2 $generated@@74)) (<= ($generated@@174 1) $generated@@388))) (and (forall (($generated@@389 Int) ) (!  (=> (<= ($generated@@174 1) $generated@@389) (=> (<= $generated@@389 ($generated@@174 $generated@@388)) ($generated@@176 $generated@@389 ($generated@@174 $generated@@388))))
 :pattern ( ($generated@@175 $generated@@389 $generated@@388))
)) (= ($generated@@172 ($generated@@174 $generated@@388)) ($generated@@177 $generated@@85 ($generated@@174 $generated@@388) ($generated@@174 $generated@@388)))))
 :weight 3
 :pattern ( ($generated@@172 ($generated@@174 $generated@@388)))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@390) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@391) $generated@@66)) (= ($generated@@83 $generated@@390 ($generated@@184 $generated@@391)) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@81) (< 0 ($generated ($generated@@92 $generated@@390 $generated@@392)))) ($generated@@253 $generated@@392 $generated@@391))
 :pattern ( ($generated@@92 $generated@@390 $generated@@392))
))))
 :pattern ( ($generated@@83 $generated@@390 ($generated@@184 $generated@@391)))
)))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@393 Int) ) (!  (=> (or ($generated@@173 $generated@@393) (and (not (= 2 $generated@@74)) (<= ($generated@@174 1) $generated@@393))) ($generated@@83 ($generated@@172 $generated@@393) ($generated@@84 $generated@@85)))
 :pattern ( ($generated@@172 $generated@@393))
))))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@394 Int) ($generated@@395 Int) ) (!  (=> (or ($generated@@261 ($generated@@174 $generated@@394) ($generated@@174 $generated@@395)) (and (not (= 4 $generated@@74)) (and (<= ($generated@@174 1) $generated@@394) (<= ($generated@@174 1) $generated@@395)))) (and (and (and ($generated@@173 ($generated@@174 $generated@@394)) ($generated@@173 ($generated@@174 $generated@@395))) (let (($generated@@396 ($generated@@245 ($generated@@172 ($generated@@174 $generated@@394)) ($generated@@172 ($generated@@174 $generated@@395)))))
($generated@@82 $generated@@396))) (= ($generated@@260 ($generated@@174 $generated@@394) ($generated@@174 $generated@@395)) (let (($generated@@397 ($generated@@245 ($generated@@172 ($generated@@174 $generated@@394)) ($generated@@172 ($generated@@174 $generated@@395)))))
($generated@@75 $generated@@397)))))
 :weight 3
 :pattern ( ($generated@@260 ($generated@@174 $generated@@394) ($generated@@174 $generated@@395)))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
 (=> (and (= (type $generated@@398) ($generated@@78 $generated@@401 $generated@@4)) (= (type $generated@@399) ($generated@@78 $generated@@401 $generated@@4))) (= ($generated@@0 ($generated@@92 ($generated@@245 $generated@@398 $generated@@399) $generated@@400))  (and ($generated@@0 ($generated@@92 $generated@@398 $generated@@400)) ($generated@@0 ($generated@@92 $generated@@399 $generated@@400))))))
 :pattern ( ($generated@@92 ($generated@@245 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@402 ($generated@@84 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@81) ($generated@@0 ($generated@@92 $generated@@402 $generated@@405))) ($generated@@279 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@92 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@149 $generated@@402 ($generated@@84 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@407) $generated@@66)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@406 ($generated@@271 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@81) ($generated@@0 ($generated@@92 $generated@@406 $generated@@409))) ($generated@@279 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@92 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@149 $generated@@406 ($generated@@271 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(= ($generated ($generated@@92 ($generated@@310 $generated@@411) $generated@@410)) 0))
 :pattern ( (let (($generated@@411 (type $generated@@410)))
($generated@@92 ($generated@@310 $generated@@411) $generated@@410)))
)))
(assert  (and (forall (($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@414)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@412 $generated@@414))
)) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@321 (type $generated@@415))))
(let (($generated@@417 ($generated@@320 (type $generated@@415))))
(= (type ($generated@@413 $generated@@415)) ($generated@@78 $generated@@417 $generated@@416))))
 :pattern ( ($generated@@413 $generated@@415))
))))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@418) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@419) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@412 $generated@@418) $generated@@419))  (and ($generated@@0 ($generated@@92 ($generated@@317 $generated@@418) ($generated@@166 ($generated@@360 $generated@@159 $generated@@419)))) (= ($generated@@92 ($generated@@413 $generated@@418) ($generated@@166 ($generated@@360 $generated@@159 $generated@@419))) ($generated@@167 ($generated@@360 $generated@@159 $generated@@419))))))
 :pattern ( ($generated@@92 ($generated@@412 $generated@@418) $generated@@419))
)))
(assert  (and (forall (($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@422)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@420 $generated@@422))
)) (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@339 (type $generated@@423))))
(let (($generated@@425 ($generated@@338 (type $generated@@423))))
(= (type ($generated@@421 $generated@@423)) ($generated@@78 $generated@@425 $generated@@424))))
 :pattern ( ($generated@@421 $generated@@423))
))))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@427) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@420 $generated@@426) $generated@@427))  (and ($generated@@0 ($generated@@92 ($generated@@335 $generated@@426) ($generated@@166 ($generated@@360 $generated@@159 $generated@@427)))) (= ($generated@@92 ($generated@@421 $generated@@426) ($generated@@166 ($generated@@360 $generated@@159 $generated@@427))) ($generated@@167 ($generated@@360 $generated@@159 $generated@@427))))))
 :pattern ( ($generated@@92 ($generated@@420 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (let (($generated@@430 (type $generated@@429)))
(let (($generated@@431 ($generated@@320 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@319 $generated@@431 $generated@@430)) (= ($generated@@0 ($generated@@92 ($generated@@368 $generated@@428) $generated@@429)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@431) (and ($generated@@0 ($generated@@92 ($generated@@317 $generated@@428) $generated@@432)) (= $generated@@429 ($generated@@92 ($generated@@413 $generated@@428) $generated@@432))))
 :pattern ( ($generated@@92 ($generated@@317 $generated@@428) $generated@@432))
 :pattern ( ($generated@@92 ($generated@@413 $generated@@428) $generated@@432))
))))))
 :pattern ( ($generated@@92 ($generated@@368 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(let (($generated@@436 ($generated@@338 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@337 $generated@@436 $generated@@435)) (= ($generated@@0 ($generated@@92 ($generated@@379 $generated@@433) $generated@@434)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@436) (and ($generated@@0 ($generated@@92 ($generated@@335 $generated@@433) $generated@@437)) (= $generated@@434 ($generated@@92 ($generated@@421 $generated@@433) $generated@@437))))
 :pattern ( ($generated@@92 ($generated@@335 $generated@@433) $generated@@437))
 :pattern ( ($generated@@92 ($generated@@421 $generated@@433) $generated@@437))
))))))
 :pattern ( ($generated@@92 ($generated@@379 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (! (= (type ($generated@@438 $generated@@439 $generated@@440)) $generated@@66)
 :pattern ( ($generated@@438 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (and (= (type $generated@@441) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@442) $generated@@66)) (= (type $generated@@443) $generated@@66)) (= (type $generated@@444) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444) (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@317 $generated@@441) $generated@@445))) (and ($generated@@279 ($generated@@92 ($generated@@413 $generated@@441) $generated@@445) $generated@@443 $generated@@444) ($generated@@279 $generated@@445 $generated@@442 $generated@@444)))
 :pattern ( ($generated@@92 ($generated@@413 $generated@@441) $generated@@445))
 :pattern ( ($generated@@92 ($generated@@317 $generated@@441) $generated@@445))
))))
 :pattern ( ($generated@@149 $generated@@441 ($generated@@438 $generated@@442 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (= (type ($generated@@446 $generated@@447 $generated@@448)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (and (and (= (type $generated@@449) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@450) $generated@@66)) (= (type $generated@@451) $generated@@66)) (= (type $generated@@452) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452) (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@335 $generated@@449) $generated@@453))) (and ($generated@@279 ($generated@@92 ($generated@@421 $generated@@449) $generated@@453) $generated@@451 $generated@@452) ($generated@@279 $generated@@453 $generated@@450 $generated@@452)))
 :pattern ( ($generated@@92 ($generated@@421 $generated@@449) $generated@@453))
 :pattern ( ($generated@@92 ($generated@@335 $generated@@449) $generated@@453))
))))
 :pattern ( ($generated@@149 $generated@@449 ($generated@@446 $generated@@450 $generated@@451) $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@90 (type $generated@@454))))
 (=> (and (and (= (type $generated@@454) ($generated@@78 $generated@@456 $generated@@4)) (= (type $generated@@455) ($generated@@78 $generated@@456 $generated@@4))) ($generated@@86 $generated@@454 $generated@@455)) (= $generated@@454 $generated@@455)))
 :pattern ( ($generated@@86 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 Int) ($generated@@459 Int) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@460) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@177 $generated@@457 $generated@@458 $generated@@459) $generated@@460))  (and ($generated@@253 $generated@@460 $generated@@457) (and (<= ($generated ($generated@@360 $generated@@2 $generated@@460)) $generated@@458) ($generated@@175 ($generated ($generated@@360 $generated@@2 $generated@@460)) $generated@@459)))))
 :pattern ( ($generated@@92 ($generated@@177 $generated@@457 $generated@@458 $generated@@459) $generated@@460))
)))
(assert (forall (($generated@@462 T@T) ) (! (= (type ($generated@@461 $generated@@462)) ($generated@@78 $generated@@462 $generated@@4))
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@339 (type $generated@@463))))
(let (($generated@@465 ($generated@@338 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@337 $generated@@465 $generated@@464)) (= (= $generated@@463 ($generated@@336 $generated@@465 $generated@@464)) (= ($generated@@335 $generated@@463) ($generated@@461 $generated@@465))))))
 :pattern ( ($generated@@335 $generated@@463))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@339 (type $generated@@466))))
(let (($generated@@468 ($generated@@338 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@337 $generated@@468 $generated@@467)) (= (= $generated@@466 ($generated@@336 $generated@@468 $generated@@467)) (= ($generated@@379 $generated@@466) ($generated@@461 $generated@@467))))))
 :pattern ( ($generated@@379 $generated@@466))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@339 (type $generated@@469))))
(let (($generated@@471 ($generated@@338 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@337 $generated@@471 $generated@@470)) (= (= $generated@@469 ($generated@@336 $generated@@471 $generated@@470)) (= ($generated@@420 $generated@@469) ($generated@@461 $generated@@81))))))
 :pattern ( ($generated@@420 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@321 (type $generated@@472))))
(let (($generated@@474 ($generated@@320 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@319 $generated@@474 $generated@@473)) (or (= $generated@@472 ($generated@@318 $generated@@474 $generated@@473)) (exists (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (and (and (= (type $generated@@475) $generated@@81) (= (type $generated@@476) $generated@@81)) ($generated@@0 ($generated@@92 ($generated@@412 $generated@@472) ($generated@@304 ($generated@@252 $generated@@475 $generated@@476)))))
 :no-pattern (type $generated@@475)
 :no-pattern (type $generated@@476)
 :no-pattern ($generated $generated@@475)
 :no-pattern ($generated@@0 $generated@@475)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
))))))
 :pattern ( ($generated@@412 $generated@@472))
)))
(assert (forall (($generated@@477 T@U) ) (! (let (($generated@@478 ($generated@@339 (type $generated@@477))))
(let (($generated@@479 ($generated@@338 (type $generated@@477))))
 (=> (= (type $generated@@477) ($generated@@337 $generated@@479 $generated@@478)) (or (= $generated@@477 ($generated@@336 $generated@@479 $generated@@478)) (exists (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (and (and (= (type $generated@@480) $generated@@81) (= (type $generated@@481) $generated@@81)) ($generated@@0 ($generated@@92 ($generated@@420 $generated@@477) ($generated@@304 ($generated@@252 $generated@@480 $generated@@481)))))
 :no-pattern (type $generated@@480)
 :no-pattern (type $generated@@481)
 :no-pattern ($generated $generated@@480)
 :no-pattern ($generated@@0 $generated@@480)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
))))))
 :pattern ( ($generated@@420 $generated@@477))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@81) ($generated@@253 $generated@@482 $generated@@46)) (and (= ($generated@@304 ($generated@@360 $generated@@2 $generated@@482)) $generated@@482) ($generated@@83 ($generated@@360 $generated@@2 $generated@@482) $generated@@46)))
 :pattern ( ($generated@@253 $generated@@482 $generated@@46))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@81) ($generated@@253 $generated@@483 $generated@@47)) (and (= ($generated@@304 ($generated@@360 $generated@@3 $generated@@483)) $generated@@483) ($generated@@83 ($generated@@360 $generated@@3 $generated@@483) $generated@@47)))
 :pattern ( ($generated@@253 $generated@@483 $generated@@47))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@81) ($generated@@253 $generated@@484 $generated@@44)) (and (= ($generated@@304 ($generated@@360 $generated@@4 $generated@@484)) $generated@@484) ($generated@@83 ($generated@@360 $generated@@4 $generated@@484) $generated@@44)))
 :pattern ( ($generated@@253 $generated@@484 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@485) 20))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@81) ($generated@@253 $generated@@486 $generated@@45)) (and (= ($generated@@304 ($generated@@360 $generated@@485 $generated@@486)) $generated@@486) ($generated@@83 ($generated@@360 $generated@@485 $generated@@486) $generated@@45)))
 :pattern ( ($generated@@253 $generated@@486 $generated@@45))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@66) (= ($generated@@253 ($generated@@304 $generated@@487) $generated@@488) ($generated@@83 $generated@@487 $generated@@488)))
 :pattern ( ($generated@@253 ($generated@@304 $generated@@487) $generated@@488))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@489 Int) ($generated@@490 Int) ) (!  (=> (or ($generated@@176 $generated@@489 $generated@@490) (and (not (= 1 $generated@@74)) (and (<= ($generated@@174 1) $generated@@489) (<= ($generated@@174 1) $generated@@490)))) (= ($generated@@175 $generated@@489 $generated@@490) (exists (($generated@@491 Int) ) (! (= ($generated@@300 $generated@@489 $generated@@491) $generated@@490)
 :pattern ( ($generated@@300 $generated@@489 $generated@@491))
))))
 :pattern ( ($generated@@175 $generated@@489 $generated@@490))
))))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@90 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@78 $generated@@493 $generated@@2)) (<= 0 ($generated@@309 $generated@@492))))
 :pattern ( ($generated@@309 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (let (($generated@@495 ($generated@@294 (type $generated@@494))))
 (=> (= (type $generated@@494) ($generated@@293 $generated@@495)) (<= 0 ($generated@@292 $generated@@494))))
 :pattern ( ($generated@@292 $generated@@494))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@496 Int) ($generated@@497 Int) ) (!  (=> (or ($generated@@176 $generated@@496 $generated@@497) (and (not (= 1 $generated@@74)) (and (<= ($generated@@174 1) $generated@@496) (<= ($generated@@174 1) $generated@@497)))) true)
 :pattern ( ($generated@@175 $generated@@496 $generated@@497))
))))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@66)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@66) (= (type $generated@@501) $generated@@66)) (= ($generated@@498 ($generated@@438 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@438 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@66)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@66) (= (type $generated@@505) $generated@@66)) (= ($generated@@502 ($generated@@438 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@438 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@66) (= (type $generated@@507) $generated@@66)) (= ($generated@@147 ($generated@@438 $generated@@506 $generated@@507)) $generated@@58))
 :pattern ( ($generated@@438 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@66)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@66) (= (type $generated@@511) $generated@@66)) (= ($generated@@508 ($generated@@446 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@446 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@66)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@66) (= (type $generated@@515) $generated@@66)) (= ($generated@@512 ($generated@@446 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@446 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@66) (= (type $generated@@517) $generated@@66)) (= ($generated@@147 ($generated@@446 $generated@@516 $generated@@517)) $generated@@59))
 :pattern ( ($generated@@446 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@81) (= (type $generated@@519) $generated@@81)) (= ($generated@@285 ($generated@@252 $generated@@518 $generated@@519)) $generated@@61))
 :pattern ( ($generated@@252 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@66)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@66) (= (type $generated@@523) $generated@@66)) (= ($generated@@520 ($generated@@158 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@158 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@66)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= ($generated@@524 ($generated@@158 $generated@@526 $generated@@527)) $generated@@527))
 :pattern ( ($generated@@158 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@81) (= (type $generated@@529) $generated@@81)) (= ($generated@@166 ($generated@@252 $generated@@528 $generated@@529)) $generated@@528))
 :pattern ( ($generated@@252 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@81) (= (type $generated@@531) $generated@@81)) (= ($generated@@167 ($generated@@252 $generated@@530 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@252 $generated@@530 $generated@@531))
)))
(assert  (and (forall (($generated@@534 T@U) ) (! (= (type ($generated@@532 $generated@@534)) $generated@@66)
 :pattern ( ($generated@@532 $generated@@534))
)) (forall (($generated@@535 T@U) ($generated@@536 Int) ) (! (let (($generated@@537 ($generated@@294 (type $generated@@535))))
(= (type ($generated@@533 $generated@@535 $generated@@536)) $generated@@537))
 :pattern ( ($generated@@533 $generated@@535 $generated@@536))
))))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@293 $generated@@81)) (= (type $generated@@539) $generated@@66)) (= (type $generated@@540) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@538 ($generated@@532 $generated@@539) $generated@@540) (forall (($generated@@541 Int) ) (!  (=> (and (<= 0 $generated@@541) (< $generated@@541 ($generated@@292 $generated@@538))) ($generated@@279 ($generated@@533 $generated@@538 $generated@@541) $generated@@539 $generated@@540))
 :pattern ( ($generated@@533 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@149 $generated@@538 ($generated@@532 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@543 Int) ) (! (= ($generated@@542 ($generated@@150 $generated@@543)) $generated@@543)
 :pattern ( ($generated@@150 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@66)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@66) (= ($generated@@544 ($generated@@84 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@84 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@66) (= ($generated@@147 ($generated@@84 $generated@@547)) $generated@@54))
 :pattern ( ($generated@@84 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (! (= (type ($generated@@548 $generated@@549)) $generated@@66)
 :pattern ( ($generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@66) (= ($generated@@548 ($generated@@271 $generated@@550)) $generated@@550))
 :pattern ( ($generated@@271 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@66) (= ($generated@@147 ($generated@@271 $generated@@551)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (= (type ($generated@@552 $generated@@553)) $generated@@66)
 :pattern ( ($generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@66) (= ($generated@@552 ($generated@@184 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@184 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@66) (= ($generated@@147 ($generated@@184 $generated@@555)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@66)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@66) (= ($generated@@556 ($generated@@532 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@532 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@66) (= ($generated@@147 ($generated@@532 $generated@@559)) $generated@@57))
 :pattern ( ($generated@@532 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
(= ($generated@@360 $generated@@561 ($generated@@304 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@304 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@563) $generated@@66)) (= (type $generated@@564) $generated@@66)) (= ($generated@@83 $generated@@562 ($generated@@438 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@317 $generated@@562) $generated@@565))) (and ($generated@@253 ($generated@@92 ($generated@@413 $generated@@562) $generated@@565) $generated@@564) ($generated@@253 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@92 ($generated@@413 $generated@@562) $generated@@565))
 :pattern ( ($generated@@92 ($generated@@317 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@83 $generated@@562 ($generated@@438 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@567) $generated@@66)) (= (type $generated@@568) $generated@@66)) (= ($generated@@83 $generated@@566 ($generated@@446 $generated@@567 $generated@@568)) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@335 $generated@@566) $generated@@569))) (and ($generated@@253 ($generated@@92 ($generated@@421 $generated@@566) $generated@@569) $generated@@568) ($generated@@253 $generated@@569 $generated@@567)))
 :pattern ( ($generated@@92 ($generated@@421 $generated@@566) $generated@@569))
 :pattern ( ($generated@@92 ($generated@@335 $generated@@566) $generated@@569))
))))
 :pattern ( ($generated@@83 $generated@@566 ($generated@@446 $generated@@567 $generated@@568)))
)))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@571) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 $generated@@571) (and (not (= 3 $generated@@74)) (and (and ($generated@@77 $generated@@570) ($generated@@83 $generated@@571 ($generated@@84 $generated@@85))) (not ($generated@@86 $generated@@571 ($generated@@87 $generated@@81))))))) (and ($generated@@88 $generated@@571) (= ($generated@@75 $generated@@571) (let (($generated@@572 ($generated@@89 $generated@@571)))
$generated@@572))))
 :pattern ( ($generated@@75 $generated@@571) ($generated@@77 $generated@@570))
))))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@81) (= (type $generated@@576) $generated@@81)) (< ($generated@@573 $generated@@575) ($generated@@574 ($generated@@252 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@252 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@81) (= (type $generated@@578) $generated@@81)) (< ($generated@@573 $generated@@578) ($generated@@574 ($generated@@252 $generated@@577 $generated@@578))))
 :pattern ( ($generated@@252 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 ($generated@@90 (type $generated@@579))))
 (=> (and (= (type $generated@@579) ($generated@@78 $generated@@581 $generated@@4)) (= (type $generated@@580) ($generated@@78 $generated@@581 $generated@@4))) (= ($generated@@245 $generated@@579 ($generated@@245 $generated@@579 $generated@@580)) ($generated@@245 $generated@@579 $generated@@580))))
 :pattern ( ($generated@@245 $generated@@579 ($generated@@245 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@81) (= (type $generated@@583) $generated@@66)) (= (type $generated@@584) $generated@@66)) ($generated@@253 $generated@@582 ($generated@@438 $generated@@583 $generated@@584))) (and (= ($generated@@304 ($generated@@360 ($generated@@319 $generated@@81 $generated@@81) $generated@@582)) $generated@@582) ($generated@@83 ($generated@@360 ($generated@@319 $generated@@81 $generated@@81) $generated@@582) ($generated@@438 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@253 $generated@@582 ($generated@@438 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@81) (= (type $generated@@586) $generated@@66)) (= (type $generated@@587) $generated@@66)) ($generated@@253 $generated@@585 ($generated@@446 $generated@@586 $generated@@587))) (and (= ($generated@@304 ($generated@@360 ($generated@@337 $generated@@81 $generated@@81) $generated@@585)) $generated@@585) ($generated@@83 ($generated@@360 ($generated@@337 $generated@@81 $generated@@81) $generated@@585) ($generated@@446 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@253 $generated@@585 ($generated@@446 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@66) (= (type $generated@@589) $generated@@66)) (= (type $generated@@590) $generated@@81)) ($generated@@253 $generated@@590 ($generated@@158 $generated@@588 $generated@@589))) (and (= ($generated@@304 ($generated@@360 $generated@@159 $generated@@590)) $generated@@590) ($generated@@83 ($generated@@360 $generated@@159 $generated@@590) ($generated@@158 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@253 $generated@@590 ($generated@@158 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ) (! (let (($generated@@592 (type $generated@@591)))
 (not ($generated@@0 ($generated@@92 ($generated@@87 $generated@@592) $generated@@591))))
 :pattern ( (let (($generated@@592 (type $generated@@591)))
($generated@@92 ($generated@@87 $generated@@592) $generated@@591)))
)))
(assert (forall (($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@593)))
 (not ($generated@@0 ($generated@@92 ($generated@@461 $generated@@594) $generated@@593))))
 :pattern ( (let (($generated@@594 (type $generated@@593)))
($generated@@92 ($generated@@461 $generated@@594) $generated@@593)))
)))
(assert (forall (($generated@@596 T@U) ) (! (= (type ($generated@@595 $generated@@596)) $generated@@71)
 :pattern ( ($generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@66) (= (type $generated@@598) $generated@@66)) (and (= ($generated@@147 ($generated@@158 $generated@@597 $generated@@598)) $generated@@62) (= ($generated@@595 ($generated@@158 $generated@@597 $generated@@598)) $generated@@64)))
 :pattern ( ($generated@@158 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 Int) ($generated@@600 Int) ) (! (= ($generated@@300 $generated@@599 $generated@@600) (* $generated@@599 $generated@@600))
 :pattern ( ($generated@@300 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@159) (= ($generated@@573 ($generated@@304 $generated@@601)) ($generated@@574 $generated@@601)))
 :pattern ( ($generated@@573 ($generated@@304 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@81) ($generated@@253 $generated@@602 ($generated@@150 0))) (and (= ($generated@@304 ($generated@@360 $generated@@2 $generated@@602)) $generated@@602) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@602) ($generated@@150 0))))
 :pattern ( ($generated@@253 $generated@@602 ($generated@@150 0)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@81) (= (type $generated@@604) $generated@@66)) ($generated@@253 $generated@@603 ($generated@@84 $generated@@604))) (and (= ($generated@@304 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@603)) $generated@@603) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@603) ($generated@@84 $generated@@604))))
 :pattern ( ($generated@@253 $generated@@603 ($generated@@84 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@81) (= (type $generated@@606) $generated@@66)) ($generated@@253 $generated@@605 ($generated@@271 $generated@@606))) (and (= ($generated@@304 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@605)) $generated@@605) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@4) $generated@@605) ($generated@@271 $generated@@606))))
 :pattern ( ($generated@@253 $generated@@605 ($generated@@271 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (= (type $generated@@607) $generated@@81) (= (type $generated@@608) $generated@@66)) ($generated@@253 $generated@@607 ($generated@@184 $generated@@608))) (and (= ($generated@@304 ($generated@@360 ($generated@@78 $generated@@81 $generated@@2) $generated@@607)) $generated@@607) ($generated@@83 ($generated@@360 ($generated@@78 $generated@@81 $generated@@2) $generated@@607) ($generated@@184 $generated@@608))))
 :pattern ( ($generated@@253 $generated@@607 ($generated@@184 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@81) (= (type $generated@@610) $generated@@66)) ($generated@@253 $generated@@609 ($generated@@532 $generated@@610))) (and (= ($generated@@304 ($generated@@360 ($generated@@293 $generated@@81) $generated@@609)) $generated@@609) ($generated@@83 ($generated@@360 ($generated@@293 $generated@@81) $generated@@609) ($generated@@532 $generated@@610))))
 :pattern ( ($generated@@253 $generated@@609 ($generated@@532 $generated@@610)))
)))
(assert (= ($generated@@147 $generated@@85) $generated@@63))
(assert (= ($generated@@595 $generated@@85) $generated@@65))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@611) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@612) $generated@@66)) (= (type $generated@@613) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@611 ($generated@@184 $generated@@612) $generated@@613) (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@81) (< 0 ($generated ($generated@@92 $generated@@611 $generated@@614)))) ($generated@@279 $generated@@614 $generated@@612 $generated@@613))
 :pattern ( ($generated@@92 $generated@@611 $generated@@614))
))))
 :pattern ( ($generated@@149 $generated@@611 ($generated@@184 $generated@@612) $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@159) (= (type $generated@@616) $generated@@66)) (= (type $generated@@617) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@77 $generated@@617) (and ($generated@@157 $generated@@615) (exists (($generated@@618 T@U) ) (!  (and (= (type $generated@@618) $generated@@66) ($generated@@149 $generated@@615 ($generated@@158 $generated@@616 $generated@@618) $generated@@617))
 :pattern ( ($generated@@149 $generated@@615 ($generated@@158 $generated@@616 $generated@@618) $generated@@617))
))))) ($generated@@279 ($generated@@166 $generated@@615) $generated@@616 $generated@@617))
 :pattern ( ($generated@@279 ($generated@@166 $generated@@615) $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) $generated@@159) (= (type $generated@@620) $generated@@66)) (= (type $generated@@621) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@77 $generated@@621) (and ($generated@@157 $generated@@619) (exists (($generated@@622 T@U) ) (!  (and (= (type $generated@@622) $generated@@66) ($generated@@149 $generated@@619 ($generated@@158 $generated@@622 $generated@@620) $generated@@621))
 :pattern ( ($generated@@149 $generated@@619 ($generated@@158 $generated@@622 $generated@@620) $generated@@621))
))))) ($generated@@279 ($generated@@167 $generated@@619) $generated@@620 $generated@@621))
 :pattern ( ($generated@@279 ($generated@@167 $generated@@619) $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@81) (= (type $generated@@624) $generated@@81)) (= ($generated@@252 ($generated@@76 $generated@@623) ($generated@@76 $generated@@624)) ($generated@@76 ($generated@@252 $generated@@623 $generated@@624))))
 :pattern ( ($generated@@252 ($generated@@76 $generated@@623) ($generated@@76 $generated@@624)))
)))
(assert (forall (($generated@@625 Int) ) (! (= ($generated@@304 ($generated@@8 ($generated@@174 $generated@@625))) ($generated@@76 ($generated@@304 ($generated@@8 $generated@@625))))
 :pattern ( ($generated@@304 ($generated@@8 ($generated@@174 $generated@@625))))
)))
(assert (forall (($generated@@626 T@U) ) (! (= ($generated@@304 ($generated@@76 $generated@@626)) ($generated@@76 ($generated@@304 $generated@@626)))
 :pattern ( ($generated@@304 ($generated@@76 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (! (let (($generated@@628 ($generated@@294 (type $generated@@627))))
 (=> (and (= (type $generated@@627) ($generated@@293 $generated@@628)) (= ($generated@@292 $generated@@627) 0)) (= $generated@@627 ($generated@@291 $generated@@628))))
 :pattern ( ($generated@@292 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (! (let (($generated@@632 (type $generated@@630)))
 (=> (and (and (= (type $generated@@629) ($generated@@78 $generated@@632 $generated@@2)) (= (type $generated@@631) $generated@@2)) (<= 0 ($generated $generated@@631))) (= ($generated@@309 ($generated@@93 $generated@@629 $generated@@630 $generated@@631)) (+ (- ($generated@@309 $generated@@629) ($generated ($generated@@92 $generated@@629 $generated@@630))) ($generated $generated@@631)))))
 :pattern ( ($generated@@309 ($generated@@93 $generated@@629 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@634) $generated@@2)) ($generated@@149 $generated@@634 $generated@@46 $generated@@633))
 :pattern ( ($generated@@149 $generated@@634 $generated@@46 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@636) $generated@@3)) ($generated@@149 $generated@@636 $generated@@47 $generated@@635))
 :pattern ( ($generated@@149 $generated@@636 $generated@@47 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@638) $generated@@4)) ($generated@@149 $generated@@638 $generated@@44 $generated@@637))
 :pattern ( ($generated@@149 $generated@@638 $generated@@44 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@640) $generated@@485)) ($generated@@149 $generated@@640 $generated@@45 $generated@@639))
 :pattern ( ($generated@@149 $generated@@640 $generated@@45 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@642) $generated@@81)) ($generated@@149 $generated@@642 $generated@@48 $generated@@641))
 :pattern ( ($generated@@149 $generated@@642 $generated@@48 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) ($generated@@293 $generated@@81)) (= (type $generated@@644) $generated@@66)) (= ($generated@@83 $generated@@643 ($generated@@532 $generated@@644)) (forall (($generated@@645 Int) ) (!  (=> (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@292 $generated@@643))) ($generated@@253 ($generated@@533 $generated@@643 $generated@@645) $generated@@644))
 :pattern ( ($generated@@533 $generated@@643 $generated@@645))
))))
 :pattern ( ($generated@@83 $generated@@643 ($generated@@532 $generated@@644)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 Int) ) (!  (=> (= (type $generated@@647) ($generated@@293 $generated@@81)) (=> (and (<= 0 $generated@@648) (< $generated@@648 ($generated@@292 $generated@@647))) (< ($generated@@574 ($generated@@360 $generated@@159 ($generated@@533 $generated@@647 $generated@@648))) ($generated@@646 $generated@@647))))
 :pattern ( ($generated@@574 ($generated@@360 $generated@@159 ($generated@@533 $generated@@647 $generated@@648))))
)))
(assert (forall (($generated@@649 T@U) ($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (and (= (type $generated@@649) ($generated@@319 $generated@@81 $generated@@81)) (= (type $generated@@650) $generated@@66)) (= (type $generated@@651) $generated@@66)) ($generated@@83 $generated@@649 ($generated@@438 $generated@@650 $generated@@651))) (and (and ($generated@@83 ($generated@@317 $generated@@649) ($generated@@84 $generated@@650)) ($generated@@83 ($generated@@368 $generated@@649) ($generated@@84 $generated@@651))) ($generated@@83 ($generated@@412 $generated@@649) ($generated@@84 ($generated@@158 $generated@@650 $generated@@651)))))
 :pattern ( ($generated@@83 $generated@@649 ($generated@@438 $generated@@650 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (and (and (= (type $generated@@652) ($generated@@337 $generated@@81 $generated@@81)) (= (type $generated@@653) $generated@@66)) (= (type $generated@@654) $generated@@66)) ($generated@@83 $generated@@652 ($generated@@446 $generated@@653 $generated@@654))) (and (and ($generated@@83 ($generated@@335 $generated@@652) ($generated@@271 $generated@@653)) ($generated@@83 ($generated@@379 $generated@@652) ($generated@@271 $generated@@654))) ($generated@@83 ($generated@@420 $generated@@652) ($generated@@271 ($generated@@158 $generated@@653 $generated@@654)))))
 :pattern ( ($generated@@83 $generated@@652 ($generated@@446 $generated@@653 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@2) ($generated@@83 $generated@@655 $generated@@46))
 :pattern ( ($generated@@83 $generated@@655 $generated@@46))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@3) ($generated@@83 $generated@@656 $generated@@47))
 :pattern ( ($generated@@83 $generated@@656 $generated@@47))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@4) ($generated@@83 $generated@@657 $generated@@44))
 :pattern ( ($generated@@83 $generated@@657 $generated@@44))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@485) ($generated@@83 $generated@@658 $generated@@45))
 :pattern ( ($generated@@83 $generated@@658 $generated@@45))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@81) ($generated@@83 $generated@@659 $generated@@48))
 :pattern ( ($generated@@83 $generated@@659 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@660 () Int)
(declare-fun $generated@@661 () Int)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () Int)
(declare-fun $generated@@665 () Int)
(declare-fun $generated@@666 () Int)
(declare-fun $generated@@667 () Int)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () Int)
(declare-fun $generated@@670 () Int)
(declare-fun $generated@@671 () Int)
(declare-fun $generated@@672 () Int)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () Int)
(declare-fun $generated@@675 () Int)
(declare-fun $generated@@676 () Int)
(declare-fun $generated@@677 () Int)
(declare-fun $generated@@678 () Int)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () Int)
(declare-fun $generated@@681 () Int)
(declare-fun $generated@@682 () Int)
(declare-fun $generated@@683 () Int)
(declare-fun $generated@@684 () Int)
(declare-fun $generated@@685 () Int)
(declare-fun $generated@@686 () Int)
(declare-fun $generated@@687 () Int)
(declare-fun $generated@@688 () Int)
(declare-fun $generated@@689 () Int)
(declare-fun $generated@@690 () Int)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () Int)
(declare-fun $generated@@693 () Int)
(declare-fun $generated@@694 () Int)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 (T@U) Bool)
(declare-fun $generated@@699 () Int)
(declare-fun $generated@@700 () Int)
(declare-fun $generated@@701 () Int)
(declare-fun $generated@@702 () Int)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () Int)
(declare-fun $generated@@705 () Int)
(assert  (and (and (and (and (and (= (type $generated@@679) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@673) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@695) ($generated@@191 $generated@@79 $generated@@4))) (= (type $generated@@696) $generated@@79)) (= (type $generated@@697) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@703) ($generated@@78 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 60) (let (($generated@@706  (=> (and (and (= $generated@@660 ($generated@@300 $generated@@661 (+ $generated@@662 $generated@@663))) (= (ControlFlow 0 43) (- 0 42))) ($generated@@176 $generated@@661 $generated@@660)) (or ($generated@@175 $generated@@661 $generated@@660) (exists (($generated@@707 Int) ) (! (= ($generated@@300 $generated@@661 $generated@@707) $generated@@660)
 :pattern ( ($generated@@300 $generated@@661 $generated@@707))
))))))
(let (($generated@@708  (=> (= $generated@@664 ($generated@@300 $generated@@661 $generated@@662)) (=> (and (<= ($generated@@174 1) $generated@@664) (= $generated@@665 ($generated@@300 $generated@@661 $generated@@663))) (=> (and (and (<= ($generated@@174 1) $generated@@665) (= $generated@@666 (+ ($generated@@300 $generated@@661 $generated@@662) ($generated@@300 $generated@@661 $generated@@663)))) (and (<= ($generated@@174 1) $generated@@666) (= $generated@@667 (+ $generated@@662 $generated@@663)))) (and (=> (= (ControlFlow 0 39) (- 0 41)) (<= ($generated@@174 1) $generated@@667)) (=> (<= ($generated@@174 1) $generated@@667) (=> (= $generated@@668 ($generated@@300 $generated@@661 (+ $generated@@662 $generated@@663))) (and (=> (= (ControlFlow 0 39) (- 0 40)) (<= ($generated@@174 1) $generated@@668)) (=> (<= ($generated@@174 1) $generated@@668) (=> (= (ControlFlow 0 39) (- 0 38)) (= (+ ($generated@@300 $generated@@661 $generated@@662) ($generated@@300 $generated@@661 $generated@@663)) ($generated@@300 $generated@@661 (+ $generated@@662 $generated@@663))))))))))))))
(let (($generated@@709  (=> (= $generated@@669 ($generated@@300 $generated@@661 $generated@@662)) (and (=> (= (ControlFlow 0 34) (- 0 37)) (<= ($generated@@174 1) $generated@@669)) (=> (<= ($generated@@174 1) $generated@@669) (=> (= $generated@@670 ($generated@@300 $generated@@661 $generated@@663)) (and (=> (= (ControlFlow 0 34) (- 0 36)) (<= ($generated@@174 1) $generated@@670)) (=> (<= ($generated@@174 1) $generated@@670) (=> (= $generated@@671 (+ ($generated@@300 $generated@@661 $generated@@662) ($generated@@300 $generated@@661 $generated@@663))) (and (=> (= (ControlFlow 0 34) (- 0 35)) (<= ($generated@@174 1) $generated@@671)) (=> (<= ($generated@@174 1) $generated@@671) (=> (= (ControlFlow 0 34) (- 0 33)) (= (+ $generated@@672 (- $generated@@660 $generated@@672)) (+ ($generated@@300 $generated@@661 $generated@@662) ($generated@@300 $generated@@661 $generated@@663)))))))))))))))
(let (($generated@@710  (=> (= (ControlFlow 0 32) (- 0 31)) (= $generated@@660 (+ $generated@@672 (- $generated@@660 $generated@@672))))))
(let (($generated@@711 true))
(let (($generated@@712  (=> ($generated@@175 $generated@@661 $generated@@660) (=> (and ($generated@@149 ($generated@@8 $generated@@672) $generated@@85 $generated@@673) ($generated@@173 $generated@@672)) (=> (and (and ($generated@@149 ($generated@@8 $generated@@660) $generated@@85 $generated@@673) ($generated@@173 $generated@@660)) (and ($generated@@173 $generated@@672) ($generated@@173 $generated@@660))) (and (=> (= (ControlFlow 0 28) (- 0 29)) ($generated@@0 ($generated@@92 ($generated@@245 ($generated@@172 $generated@@672) ($generated@@172 $generated@@660)) ($generated@@304 ($generated@@8 $generated@@661))))) (=> ($generated@@0 ($generated@@92 ($generated@@245 ($generated@@172 $generated@@672) ($generated@@172 $generated@@660)) ($generated@@304 ($generated@@8 $generated@@661)))) (=> (= (ControlFlow 0 28) (- 0 27)) (<= $generated@@661 $generated@@674)))))))))
(let (($generated@@713  (and (=> (= (ControlFlow 0 44) (- 0 45)) (or (and ($generated@@83 ($generated@@8 ($generated@@174 1)) $generated@@85) (= ($generated@@300 $generated@@661 ($generated@@174 1)) (- $generated@@660 $generated@@672))) (or (and ($generated@@83 ($generated@@8 ($generated@@174 0)) $generated@@85) (= ($generated@@300 $generated@@661 ($generated@@174 0)) (- $generated@@660 $generated@@672))) (exists (($generated@@714 Int) )  (and (<= ($generated@@174 1) $generated@@714) (= ($generated@@300 $generated@@661 $generated@@714) (- $generated@@660 $generated@@672))))))) (=> (or (and ($generated@@83 ($generated@@8 ($generated@@174 1)) $generated@@85) (= ($generated@@300 $generated@@661 ($generated@@174 1)) (- $generated@@660 $generated@@672))) (or (and ($generated@@83 ($generated@@8 ($generated@@174 0)) $generated@@85) (= ($generated@@300 $generated@@661 ($generated@@174 0)) (- $generated@@660 $generated@@672))) (exists (($generated@@715 Int) )  (and (<= ($generated@@174 1) $generated@@715) (= ($generated@@300 $generated@@661 $generated@@715) (- $generated@@660 $generated@@672)))))) (=> (and (<= ($generated@@174 1) $generated@@663) (= ($generated@@300 $generated@@661 $generated@@663) (- $generated@@660 $generated@@672))) (=> (and (and ($generated@@149 ($generated@@8 $generated@@661) $generated@@85 $generated@@673) ($generated@@149 ($generated@@8 $generated@@660) $generated@@85 $generated@@673)) (and ($generated@@176 $generated@@661 $generated@@660) ($generated@@176 $generated@@661 $generated@@660))) (and (and (and (and (and (=> (= (ControlFlow 0 44) 28) $generated@@712) (=> (= (ControlFlow 0 44) 30) $generated@@711)) (=> (= (ControlFlow 0 44) 32) $generated@@710)) (=> (= (ControlFlow 0 44) 34) $generated@@709)) (=> (= (ControlFlow 0 44) 39) $generated@@708)) (=> (= (ControlFlow 0 44) 43) $generated@@706))))))))
(let (($generated@@716  (=> (and (< $generated@@675 ($generated@@174 1)) (= (ControlFlow 0 48) 44)) $generated@@713)))
(let (($generated@@717  (=> (and (<= ($generated@@174 1) $generated@@675) (= $generated@@676 ($generated@@300 $generated@@661 $generated@@675))) (and (=> (= (ControlFlow 0 46) (- 0 47)) (<= ($generated@@174 1) $generated@@676)) (=> (<= ($generated@@174 1) $generated@@676) (=> (= (ControlFlow 0 46) 44) $generated@@713))))))
(let (($generated@@718  (and (=> (= (ControlFlow 0 49) (- 0 50)) (or (and ($generated@@83 ($generated@@8 ($generated@@174 1)) $generated@@85) (= ($generated@@300 $generated@@661 ($generated@@174 1)) $generated@@672)) (or (and ($generated@@83 ($generated@@8 ($generated@@174 0)) $generated@@85) (= ($generated@@300 $generated@@661 ($generated@@174 0)) $generated@@672)) (exists (($generated@@719 Int) )  (and (<= ($generated@@174 1) $generated@@719) (= ($generated@@300 $generated@@661 $generated@@719) $generated@@672)))))) (=> (or (and ($generated@@83 ($generated@@8 ($generated@@174 1)) $generated@@85) (= ($generated@@300 $generated@@661 ($generated@@174 1)) $generated@@672)) (or (and ($generated@@83 ($generated@@8 ($generated@@174 0)) $generated@@85) (= ($generated@@300 $generated@@661 ($generated@@174 0)) $generated@@672)) (exists (($generated@@720 Int) )  (and (<= ($generated@@174 1) $generated@@720) (= ($generated@@300 $generated@@661 $generated@@720) $generated@@672))))) (=> (and (<= ($generated@@174 1) $generated@@662) (= ($generated@@300 $generated@@661 $generated@@662) $generated@@672)) (and (=> (= (ControlFlow 0 49) 46) $generated@@717) (=> (= (ControlFlow 0 49) 48) $generated@@716)))))))
(let (($generated@@721  (=> (and (< $generated@@677 ($generated@@174 1)) (= (ControlFlow 0 53) 49)) $generated@@718)))
(let (($generated@@722  (=> (and (<= ($generated@@174 1) $generated@@677) (= $generated@@678 ($generated@@300 $generated@@661 $generated@@677))) (and (=> (= (ControlFlow 0 51) (- 0 52)) (<= ($generated@@174 1) $generated@@678)) (=> (<= ($generated@@174 1) $generated@@678) (=> (= (ControlFlow 0 51) 49) $generated@@718))))))
(let (($generated@@723 true))
(let (($generated@@724  (=> (and (<= ($generated@@174 1) $generated@@661) ($generated@@0 ($generated@@92 $generated@@679 ($generated@@304 ($generated@@8 $generated@@661))))) (and (and (=> (= (ControlFlow 0 54) 26) $generated@@723) (=> (= (ControlFlow 0 54) 51) $generated@@722)) (=> (= (ControlFlow 0 54) 53) $generated@@721)))))
(let (($generated@@725  (=> (= (ControlFlow 0 24) (- 0 23)) (= ($generated@@260 $generated@@660 $generated@@672) ($generated@@260 $generated@@672 (- $generated@@660 $generated@@672))))))
(let (($generated@@726  (=> (and (forall (($generated@@727 T@U) ) (!  (=> (= (type $generated@@727) $generated@@2) (=> (and (<= ($generated@@174 1) ($generated $generated@@727)) ($generated@@0 ($generated@@92 $generated@@679 ($generated@@304 $generated@@727)))) (<= ($generated $generated@@727) $generated@@674)))
 :pattern ( ($generated@@92 $generated@@679 ($generated@@304 $generated@@727)))
)) (= (ControlFlow 0 25) 24)) $generated@@725)))
(let (($generated@@728  (=> ($generated@@175 $generated@@674 (- $generated@@660 $generated@@672)) (=> (and ($generated@@149 ($generated@@8 $generated@@672) $generated@@85 $generated@@673) ($generated@@173 $generated@@672)) (and (=> (= (ControlFlow 0 55) (- 0 57)) ($generated@@83 ($generated@@8 (- $generated@@660 $generated@@672)) $generated@@85)) (=> ($generated@@83 ($generated@@8 (- $generated@@660 $generated@@672)) $generated@@85) (=> (= $generated@@680 (- $generated@@660 $generated@@672)) (=> (and ($generated@@149 ($generated@@8 $generated@@680) $generated@@85 $generated@@673) ($generated@@173 (- $generated@@660 $generated@@672))) (=> (and (and ($generated@@173 $generated@@672) ($generated@@173 (- $generated@@660 $generated@@672))) (= $generated@@679 ($generated@@245 ($generated@@172 $generated@@672) ($generated@@172 (- $generated@@660 $generated@@672))))) (and (=> (= (ControlFlow 0 55) (- 0 56)) ($generated@@0 ($generated@@92 $generated@@679 ($generated@@304 ($generated@@8 $generated@@674))))) (=> ($generated@@0 ($generated@@92 $generated@@679 ($generated@@304 ($generated@@8 $generated@@674)))) (and (=> (= (ControlFlow 0 55) 54) $generated@@724) (=> (= (ControlFlow 0 55) 25) $generated@@726)))))))))))))
(let (($generated@@729  (=> (and (and (= (- $generated@@660 $generated@@672) ($generated@@300 $generated@@674 (- $generated@@681 $generated@@682))) (= (ControlFlow 0 12) (- 0 11))) ($generated@@176 $generated@@674 (- $generated@@660 $generated@@672))) (or ($generated@@175 $generated@@674 (- $generated@@660 $generated@@672)) (exists (($generated@@730 Int) ) (! (= ($generated@@300 $generated@@674 $generated@@730) (- $generated@@660 $generated@@672))
 :pattern ( ($generated@@300 $generated@@674 $generated@@730))
))))))
(let (($generated@@731  (=> (= $generated@@683 ($generated@@300 $generated@@674 $generated@@681)) (=> (and (<= ($generated@@174 1) $generated@@683) (= $generated@@684 ($generated@@300 $generated@@674 $generated@@682))) (=> (and (and (<= ($generated@@174 1) $generated@@684) (= $generated@@685 (- ($generated@@300 $generated@@674 $generated@@681) ($generated@@300 $generated@@674 $generated@@682)))) (and (<= ($generated@@174 1) $generated@@685) (= $generated@@686 (- $generated@@681 $generated@@682)))) (and (=> (= (ControlFlow 0 8) (- 0 10)) (<= ($generated@@174 1) $generated@@686)) (=> (<= ($generated@@174 1) $generated@@686) (=> (= $generated@@687 ($generated@@300 $generated@@674 (- $generated@@681 $generated@@682))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (<= ($generated@@174 1) $generated@@687)) (=> (<= ($generated@@174 1) $generated@@687) (=> (= (ControlFlow 0 8) (- 0 7)) (= (- ($generated@@300 $generated@@674 $generated@@681) ($generated@@300 $generated@@674 $generated@@682)) ($generated@@300 $generated@@674 (- $generated@@681 $generated@@682))))))))))))))
(let (($generated@@732  (=> (= $generated@@688 ($generated@@300 $generated@@674 $generated@@681)) (and (=> (= (ControlFlow 0 3) (- 0 6)) (<= ($generated@@174 1) $generated@@688)) (=> (<= ($generated@@174 1) $generated@@688) (=> (= $generated@@689 ($generated@@300 $generated@@674 $generated@@682)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (<= ($generated@@174 1) $generated@@689)) (=> (<= ($generated@@174 1) $generated@@689) (=> (= $generated@@690 (- ($generated@@300 $generated@@674 $generated@@681) ($generated@@300 $generated@@674 $generated@@682))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (<= ($generated@@174 1) $generated@@690)) (=> (<= ($generated@@174 1) $generated@@690) (=> (= (ControlFlow 0 3) (- 0 2)) (= (- $generated@@660 $generated@@672) (- ($generated@@300 $generated@@674 $generated@@681) ($generated@@300 $generated@@674 $generated@@682)))))))))))))))
(let (($generated@@733 true))
(let (($generated@@734  (and (=> (= (ControlFlow 0 13) (- 0 14)) (or (and ($generated@@83 ($generated@@8 ($generated@@174 1)) $generated@@85) (= ($generated@@300 $generated@@674 ($generated@@174 1)) $generated@@660)) (or (and ($generated@@83 ($generated@@8 ($generated@@174 0)) $generated@@85) (= ($generated@@300 $generated@@674 ($generated@@174 0)) $generated@@660)) (exists (($generated@@735 Int) )  (and (<= ($generated@@174 1) $generated@@735) (= ($generated@@300 $generated@@674 $generated@@735) $generated@@660)))))) (=> (or (and ($generated@@83 ($generated@@8 ($generated@@174 1)) $generated@@85) (= ($generated@@300 $generated@@674 ($generated@@174 1)) $generated@@660)) (or (and ($generated@@83 ($generated@@8 ($generated@@174 0)) $generated@@85) (= ($generated@@300 $generated@@674 ($generated@@174 0)) $generated@@660)) (exists (($generated@@736 Int) )  (and (<= ($generated@@174 1) $generated@@736) (= ($generated@@300 $generated@@674 $generated@@736) $generated@@660))))) (=> (and (<= ($generated@@174 1) $generated@@681) (= ($generated@@300 $generated@@674 $generated@@681) $generated@@660)) (and (and (and (=> (= (ControlFlow 0 13) 1) $generated@@733) (=> (= (ControlFlow 0 13) 3) $generated@@732)) (=> (= (ControlFlow 0 13) 8) $generated@@731)) (=> (= (ControlFlow 0 13) 12) $generated@@729)))))))
(let (($generated@@737  (=> (and (< $generated@@691 ($generated@@174 1)) (= (ControlFlow 0 17) 13)) $generated@@734)))
(let (($generated@@738  (=> (and (<= ($generated@@174 1) $generated@@691) (= $generated@@692 ($generated@@300 $generated@@674 $generated@@691))) (and (=> (= (ControlFlow 0 15) (- 0 16)) (<= ($generated@@174 1) $generated@@692)) (=> (<= ($generated@@174 1) $generated@@692) (=> (= (ControlFlow 0 15) 13) $generated@@734))))))
(let (($generated@@739  (and (=> (= (ControlFlow 0 18) (- 0 19)) (or (and ($generated@@83 ($generated@@8 ($generated@@174 1)) $generated@@85) (= ($generated@@300 $generated@@674 ($generated@@174 1)) $generated@@672)) (or (and ($generated@@83 ($generated@@8 ($generated@@174 0)) $generated@@85) (= ($generated@@300 $generated@@674 ($generated@@174 0)) $generated@@672)) (exists (($generated@@740 Int) )  (and (<= ($generated@@174 1) $generated@@740) (= ($generated@@300 $generated@@674 $generated@@740) $generated@@672)))))) (=> (or (and ($generated@@83 ($generated@@8 ($generated@@174 1)) $generated@@85) (= ($generated@@300 $generated@@674 ($generated@@174 1)) $generated@@672)) (or (and ($generated@@83 ($generated@@8 ($generated@@174 0)) $generated@@85) (= ($generated@@300 $generated@@674 ($generated@@174 0)) $generated@@672)) (exists (($generated@@741 Int) )  (and (<= ($generated@@174 1) $generated@@741) (= ($generated@@300 $generated@@674 $generated@@741) $generated@@672))))) (=> (and (<= ($generated@@174 1) $generated@@682) (= ($generated@@300 $generated@@674 $generated@@682) $generated@@672)) (and (=> (= (ControlFlow 0 18) 15) $generated@@738) (=> (= (ControlFlow 0 18) 17) $generated@@737)))))))
(let (($generated@@742  (=> (and (< $generated@@693 ($generated@@174 1)) (= (ControlFlow 0 22) 18)) $generated@@739)))
(let (($generated@@743  (=> (and (<= ($generated@@174 1) $generated@@693) (= $generated@@694 ($generated@@300 $generated@@674 $generated@@693))) (and (=> (= (ControlFlow 0 20) (- 0 21)) (<= ($generated@@174 1) $generated@@694)) (=> (<= ($generated@@174 1) $generated@@694) (=> (= (ControlFlow 0 20) 18) $generated@@739))))))
(let (($generated@@744  (=> (= $generated@@695 ($generated@@190 $generated@@696 $generated@@697 $generated@@60 false)) (=> (and (and ($generated@@77 $generated@@673) ($generated@@698 $generated@@673)) (and ($generated@@261 $generated@@672 $generated@@660) ($generated@@261 $generated@@660 $generated@@672))) (=> (and (and (and (= ($generated@@260 $generated@@672 $generated@@660) ($generated@@260 $generated@@660 $generated@@672)) (= $generated@@697 $generated@@673)) (and ($generated@@149 ($generated@@8 $generated@@672) $generated@@85 $generated@@673) ($generated@@149 ($generated@@8 $generated@@660) $generated@@85 $generated@@673))) (and (and ($generated@@261 $generated@@672 $generated@@660) ($generated@@261 $generated@@672 $generated@@660)) (and (= $generated@@674 ($generated@@260 $generated@@672 $generated@@660)) ($generated@@149 ($generated@@8 $generated@@674) $generated@@85 $generated@@673)))) (and (=> (= (ControlFlow 0 58) (- 0 59)) ($generated@@83 ($generated@@8 (- $generated@@660 $generated@@672)) $generated@@85)) (=> ($generated@@83 ($generated@@8 (- $generated@@660 $generated@@672)) $generated@@85) (=> (and (and (= $generated@@699 (- $generated@@660 $generated@@672)) ($generated@@149 ($generated@@8 $generated@@699) $generated@@85 $generated@@673)) (and ($generated@@176 $generated@@674 (- $generated@@660 $generated@@672)) ($generated@@176 $generated@@674 (- $generated@@660 $generated@@672)))) (and (and (=> (= (ControlFlow 0 58) 55) $generated@@728) (=> (= (ControlFlow 0 58) 20) $generated@@743)) (=> (= (ControlFlow 0 58) 22) $generated@@742))))))))))
(let (($generated@@745  (=> (and ($generated@@77 $generated@@697) ($generated@@698 $generated@@697)) (=> (and (and (and (<= ($generated@@174 1) $generated@@672) (<= ($generated@@174 1) $generated@@660)) (and (<= ($generated@@174 1) $generated@@700) true)) (and (and (<= ($generated@@174 1) $generated@@701) true) (and (<= ($generated@@174 1) $generated@@702) true))) (=> (and (and (and (and ($generated@@83 $generated@@703 ($generated@@84 $generated@@85)) ($generated@@149 $generated@@703 ($generated@@84 $generated@@85) $generated@@697)) true) (and (<= ($generated@@174 1) $generated@@704) true)) (and (and (and (<= ($generated@@174 1) $generated@@705) true) (= 6 $generated@@74)) (and (< $generated@@672 $generated@@660) (= (ControlFlow 0 60) 58)))) $generated@@744)))))
$generated@@745))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 () Int)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 () T@U)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@T) T@U)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@89 (T@U) Int)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@149 (T@U T@U T@U) Bool)
(declare-fun $generated@@150 (Int) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@176 (Int) T@U)
(declare-fun $generated@@177 (Int) Bool)
(declare-fun $generated@@178 (Int) Int)
(declare-fun $generated@@179 (Int Int) Bool)
(declare-fun $generated@@180 (Int Int) Bool)
(declare-fun $generated@@181 (T@U Int Int) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@193 (T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@195 (T@T T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@256 (T@U T@U) T@U)
(declare-fun $generated@@257 (T@U T@U) Bool)
(declare-fun $generated@@264 (Int Int) Int)
(declare-fun $generated@@265 (Int Int) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@283 (T@U T@U T@U) Bool)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@304 (Int Int) Int)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@321 (T@U) Int)
(declare-fun $generated@@322 (T@T) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@T) T@U)
(declare-fun $generated@@349 (T@T T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@372 (T@T T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@450 (T@U T@U) T@U)
(declare-fun $generated@@458 (T@U T@U) T@U)
(declare-fun $generated@@476 (T@T) T@U)
(declare-fun $generated@@500 () T@T)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@548 (T@U Int) T@U)
(declare-fun $generated@@557 (T@U) Int)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@588 (T@U) Int)
(declare-fun $generated@@589 (T@U) Int)
(declare-fun $generated@@610 (T@U) T@U)
(declare-fun $generated@@661 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@96 $generated@@97)) 11)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@78 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@78 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@78 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@78 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@78 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@69 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@80)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@69 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 14)) (forall (($generated@@140 T@U) ) (! (let (($generated@@141 (type $generated@@140)))
(= (type ($generated@@76 $generated@@140)) $generated@@141))
 :pattern ( ($generated@@76 $generated@@140))
))) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@84 $generated@@142)) $generated@@66)
 :pattern ( ($generated@@84 $generated@@142))
))) (= (type $generated@@85) $generated@@66)) (forall (($generated@@143 T@T) ) (! (= (type ($generated@@87 $generated@@143)) ($generated@@78 $generated@@143 $generated@@4))
 :pattern ( ($generated@@87 $generated@@143))
))))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@145) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 ($generated@@76 $generated@@145)) (and (not (= 3 $generated@@74)) (and (and ($generated@@77 $generated@@144) ($generated@@83 $generated@@145 ($generated@@84 $generated@@85))) (not ($generated@@86 $generated@@145 ($generated@@87 $generated@@81))))))) (and ($generated@@88 ($generated@@76 $generated@@145)) (= ($generated@@75 ($generated@@76 $generated@@145)) (let (($generated@@146 ($generated@@89 ($generated@@76 $generated@@145))))
$generated@@146))))
 :weight 3
 :pattern ( ($generated@@75 ($generated@@76 $generated@@145)) ($generated@@77 $generated@@144))
))))
(assert (forall (($generated@@148 T@U) ) (! (= (type ($generated@@147 $generated@@148)) $generated@@67)
 :pattern ( ($generated@@147 $generated@@148))
)))
(assert (= ($generated@@147 $generated@@44) $generated@@49))
(assert (= ($generated@@147 $generated@@45) $generated@@50))
(assert (= ($generated@@147 $generated@@46) $generated@@51))
(assert (= ($generated@@147 $generated@@47) $generated@@52))
(assert (= ($generated@@147 $generated@@48) $generated@@53))
(assert (forall (($generated@@151 Int) ) (! (= (type ($generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@2) (= (type $generated@@153) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@149 $generated@@152 ($generated@@150 0) $generated@@153))
 :pattern ( ($generated@@149 $generated@@152 ($generated@@150 0) $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@156) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@154 $generated@@155 $generated@@156)) (forall (($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@79) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@155 $generated@@157) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@60))
)))
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@2) (= (type $generated@@159) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@149 $generated@@158 $generated@@85 $generated@@159))
 :pattern ( ($generated@@149 $generated@@158 $generated@@85 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@2) ($generated@@83 $generated@@160 ($generated@@150 0)))
 :pattern ( ($generated@@83 $generated@@160 ($generated@@150 0)))
)))
(assert  (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@66)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@66) (= (type $generated@@167) $generated@@66)) (= (type $generated@@168) $generated@@163)) ($generated@@83 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@83 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@81)
 :pattern ( ($generated@@170 $generated@@172))
)) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@81)
 :pattern ( ($generated@@171 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@163) (= (type $generated@@175) $generated@@163)) true) (= ($generated@@169 $generated@@174 $generated@@175)  (and (= ($generated@@170 $generated@@174) ($generated@@170 $generated@@175)) (= ($generated@@171 $generated@@174) ($generated@@171 $generated@@175)))))
 :pattern ( ($generated@@169 $generated@@174 $generated@@175))
)))
(assert  (and (forall (($generated@@182 Int) ) (! (= (type ($generated@@176 $generated@@182)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@176 $generated@@182))
)) (forall (($generated@@183 T@U) ($generated@@184 Int) ($generated@@185 Int) ) (! (= (type ($generated@@181 $generated@@183 $generated@@184 $generated@@185)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@181 $generated@@183 $generated@@184 $generated@@185))
))))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@186 Int) ) (!  (=> (or ($generated@@177 $generated@@186) (and (not (= 2 $generated@@74)) (<= ($generated@@178 1) $generated@@186))) (and (forall (($generated@@187 Int) ) (!  (=> (<= ($generated@@178 1) $generated@@187) (=> (<= $generated@@187 $generated@@186) ($generated@@180 $generated@@187 $generated@@186)))
 :pattern ( ($generated@@179 $generated@@187 $generated@@186))
)) (= ($generated@@176 $generated@@186) ($generated@@181 $generated@@85 $generated@@186 $generated@@186))))
 :pattern ( ($generated@@176 $generated@@186))
))))
(assert (forall (($generated@@190 T@U) ) (! (= (type ($generated@@188 $generated@@190)) $generated@@66)
 :pattern ( ($generated@@188 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@191) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@192) $generated@@66)) ($generated@@83 $generated@@191 ($generated@@188 $generated@@192))) ($generated@@189 $generated@@191))
 :pattern ( ($generated@@83 $generated@@191 ($generated@@188 $generated@@192)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@199 $generated@@200)) 16)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@201 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@195 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@197 ($generated@@195 $generated@@203 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@195 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@197 (type $generated@@205))))
(= (type ($generated@@193 $generated@@205 $generated@@206 $generated@@207)) $generated@@208))
 :pattern ( ($generated@@193 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(let (($generated@@214 (type $generated@@210)))
(= (type ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@195 $generated@@214 $generated@@213))))
 :pattern ( ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@197 (type $generated@@215))))
 (=> (= (type $generated@@218) $generated@@219) (= ($generated@@193 ($generated@@198 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@216 $generated@@217) $generated@@218)))
 :weight 0
))) (and (and (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@193 ($generated@@198 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@193 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@193 ($generated@@198 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@193 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or true (= ($generated@@193 ($generated@@198 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@193 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ) (! (= (type ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241)) ($generated@@195 $generated@@79 $generated@@4))
 :pattern ( ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 Bool) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@69 (type $generated@@247))))
 (=> (and (and (and (and (= (type $generated@@242) $generated@@79) (= (type $generated@@243) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@244) ($generated@@68 $generated@@4))) (= (type $generated@@246) $generated@@79)) (= (type $generated@@247) ($generated@@68 $generated@@248))) (= ($generated@@0 ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))  (=> (and (not (= $generated@@246 $generated@@242)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@243 $generated@@246) $generated@@244))) $generated@@245))))
 :pattern ( ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@90 (type $generated@@250))))
(= (type ($generated@@249 $generated@@250 $generated@@251)) ($generated@@78 $generated@@252 $generated@@4)))
 :pattern ( ($generated@@249 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (! (let (($generated@@255 ($generated@@90 (type $generated@@253))))
 (=> (and (= (type $generated@@253) ($generated@@78 $generated@@255 $generated@@4)) (= (type $generated@@254) ($generated@@78 $generated@@255 $generated@@4))) (= ($generated@@249 ($generated@@249 $generated@@253 $generated@@254) $generated@@254) ($generated@@249 $generated@@253 $generated@@254))))
 :pattern ( ($generated@@249 ($generated@@249 $generated@@253 $generated@@254) $generated@@254))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (= (type ($generated@@256 $generated@@258 $generated@@259)) $generated@@163)
 :pattern ( ($generated@@256 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (= (type $generated@@260) $generated@@66) (= (type $generated@@261) $generated@@66)) (= (type $generated@@262) $generated@@81)) (= (type $generated@@263) $generated@@81)) (= ($generated@@83 ($generated@@256 $generated@@262 $generated@@263) ($generated@@162 $generated@@260 $generated@@261))  (and ($generated@@257 $generated@@262 $generated@@260) ($generated@@257 $generated@@263 $generated@@261))))
 :pattern ( ($generated@@83 ($generated@@256 $generated@@262 $generated@@263) ($generated@@162 $generated@@260 $generated@@261)))
)))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@266 Int) ($generated@@267 Int) ) (!  (=> (or ($generated@@265 $generated@@266 $generated@@267) (and (not (= 4 $generated@@74)) (and (<= ($generated@@178 1) $generated@@266) (<= ($generated@@178 1) $generated@@267)))) (and (and (and ($generated@@177 $generated@@266) ($generated@@177 $generated@@267)) (let (($generated@@268 ($generated@@249 ($generated@@176 $generated@@266) ($generated@@176 $generated@@267))))
($generated@@82 $generated@@268))) (= ($generated@@264 $generated@@266 $generated@@267) (let (($generated@@269 ($generated@@249 ($generated@@176 $generated@@266) ($generated@@176 $generated@@267))))
($generated@@75 $generated@@269)))))
 :pattern ( ($generated@@264 $generated@@266 $generated@@267))
))))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@163) (= (type $generated@@271) $generated@@163)) (= ($generated@@169 $generated@@270 $generated@@271) (= $generated@@270 $generated@@271)))
 :pattern ( ($generated@@169 $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@273) $generated@@66)) (= ($generated@@83 $generated@@272 ($generated@@84 $generated@@273)) (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@81) ($generated@@0 ($generated@@92 $generated@@272 $generated@@274))) ($generated@@257 $generated@@274 $generated@@273))
 :pattern ( ($generated@@92 $generated@@272 $generated@@274))
))))
 :pattern ( ($generated@@83 $generated@@272 ($generated@@84 $generated@@273)))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@66)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@278) $generated@@66)) (= ($generated@@83 $generated@@277 ($generated@@275 $generated@@278)) (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@81) ($generated@@0 ($generated@@92 $generated@@277 $generated@@279))) ($generated@@257 $generated@@279 $generated@@278))
 :pattern ( ($generated@@92 $generated@@277 $generated@@279))
))))
 :pattern ( ($generated@@83 $generated@@277 ($generated@@275 $generated@@278)))
)))
(assert (forall (($generated@@280 Int) ) (! (= ($generated@@178 $generated@@280) $generated@@280)
 :pattern ( ($generated@@178 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (! (= ($generated@@76 $generated@@281) $generated@@281)
 :pattern ( ($generated@@76 $generated@@281))
)))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) ($generated@@78 $generated@@81 $generated@@4)) (or ($generated@@82 $generated@@282) (and (not (= 3 $generated@@74)) (and ($generated@@83 $generated@@282 ($generated@@84 $generated@@85)) (not ($generated@@86 $generated@@282 ($generated@@87 $generated@@81))))))) (<= ($generated@@178 1) ($generated@@75 $generated@@282)))
 :pattern ( ($generated@@75 $generated@@282))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@284) $generated@@66) (= (type $generated@@285) $generated@@66)) (= (type $generated@@286) $generated@@81)) (= (type $generated@@287) $generated@@81)) (= (type $generated@@288) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@77 $generated@@288)) (= ($generated@@149 ($generated@@256 $generated@@286 $generated@@287) ($generated@@162 $generated@@284 $generated@@285) $generated@@288)  (and ($generated@@283 $generated@@286 $generated@@284 $generated@@288) ($generated@@283 $generated@@287 $generated@@285 $generated@@288))))
 :pattern ( ($generated@@149 ($generated@@256 $generated@@286 $generated@@287) ($generated@@162 $generated@@284 $generated@@285) $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@70)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@163) (= ($generated@@161 $generated@@291) (= ($generated@@289 $generated@@291) $generated@@61)))
 :pattern ( ($generated@@161 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@163) ($generated@@161 $generated@@292)) (exists (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (and (and (= (type $generated@@293) $generated@@81) (= (type $generated@@294) $generated@@81)) (= $generated@@292 ($generated@@256 $generated@@293 $generated@@294)))
 :no-pattern (type $generated@@293)
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
)))
 :pattern ( ($generated@@161 $generated@@292))
)))
(assert  (and (and (forall (($generated@@299 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@299)) 17)) (forall (($generated@@300 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@300)) $generated@@300)
 :pattern ( ($generated@@297 $generated@@300))
))) (forall (($generated@@301 T@T) ) (! (= (type ($generated@@295 $generated@@301)) ($generated@@297 $generated@@301))
 :pattern ( ($generated@@295 $generated@@301))
))))
(assert (forall (($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@302)) 0)
 :pattern ( ($generated@@295 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (= (type $generated@@303) $generated@@2) (= ($generated@@83 $generated@@303 $generated@@85) (<= ($generated@@178 1) ($generated $generated@@303))))
 :pattern ( ($generated@@83 $generated@@303 $generated@@85))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@305 Int) ($generated@@306 Int) ) (!  (=> (or ($generated@@180 ($generated@@178 $generated@@305) ($generated@@178 $generated@@306)) (and (not (= 1 $generated@@74)) (and (<= ($generated@@178 1) $generated@@305) (<= ($generated@@178 1) $generated@@306)))) (= ($generated@@179 ($generated@@178 $generated@@305) ($generated@@178 $generated@@306)) (exists (($generated@@307 Int) ) (! (= ($generated@@304 ($generated@@178 $generated@@305) $generated@@307) ($generated@@178 $generated@@306))
 :pattern ( ($generated@@304 $generated@@305 $generated@@307))
))))
 :weight 3
 :pattern ( ($generated@@179 ($generated@@178 $generated@@305) ($generated@@178 $generated@@306)))
))))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@81)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@66) (= (type $generated@@312) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@283 ($generated@@308 $generated@@310) $generated@@311 $generated@@312) ($generated@@149 $generated@@310 $generated@@311 $generated@@312)))
 :pattern ( ($generated@@283 ($generated@@308 $generated@@310) $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@313) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@314) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@315) $generated@@81)) (= (type $generated@@316) $generated@@66)) ($generated@@154 $generated@@313 $generated@@314)) ($generated@@283 $generated@@315 $generated@@316 $generated@@313)) ($generated@@283 $generated@@315 $generated@@316 $generated@@314))
 :pattern ( ($generated@@154 $generated@@313 $generated@@314) ($generated@@283 $generated@@315 $generated@@316 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@317) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@318) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@320) $generated@@66)) ($generated@@154 $generated@@317 $generated@@318)) ($generated@@149 $generated@@319 $generated@@320 $generated@@317)) ($generated@@149 $generated@@319 $generated@@320 $generated@@318))
 :pattern ( ($generated@@154 $generated@@317 $generated@@318) ($generated@@149 $generated@@319 $generated@@320 $generated@@317))
)))
(assert (forall (($generated@@323 T@T) ) (! (= (type ($generated@@322 $generated@@323)) ($generated@@78 $generated@@323 $generated@@2))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@90 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@78 $generated@@325 $generated@@2)) (and (= (= ($generated@@321 $generated@@324) 0) (= $generated@@324 ($generated@@322 $generated@@325))) (=> (not (= ($generated@@321 $generated@@324) 0)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) (< 0 ($generated ($generated@@92 $generated@@324 $generated@@326))))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@78 $generated@@81 $generated@@4)) ($generated@@88 $generated@@327)) (and ($generated@@0 ($generated@@92 $generated@@327 ($generated@@308 ($generated@@8 ($generated@@89 $generated@@327))))) (forall (($generated@@328 T@U) ) (!  (=> (and (and (= (type $generated@@328) $generated@@2) true) ($generated@@0 ($generated@@92 $generated@@327 ($generated@@308 $generated@@328)))) (<= ($generated $generated@@328) ($generated@@89 $generated@@327)))
 :pattern ( ($generated@@92 $generated@@327 ($generated@@308 $generated@@328)))
))))
 :pattern ( ($generated@@89 $generated@@327))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 18)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@78 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@92 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@92 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert  (and (and (and (and (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (= ($generated@@1 ($generated@@349 $generated@@352 $generated@@353)) 19)) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@349 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@351 ($generated@@349 $generated@@356 $generated@@357)) $generated@@357)
 :pattern ( ($generated@@349 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@350 (type $generated@@358))))
(= (type ($generated@@347 $generated@@358)) ($generated@@78 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@358))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= (type ($generated@@348 $generated@@360 $generated@@361)) ($generated@@349 $generated@@360 $generated@@361))
 :pattern ( ($generated@@348 $generated@@360 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@T) ) (! (let (($generated@@364 (type $generated@@362)))
 (not ($generated@@0 ($generated@@92 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362))))
 :pattern ( (let (($generated@@364 (type $generated@@362)))
($generated@@92 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362)))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@90 (type $generated@@365))))
 (=> (and (= (type $generated@@365) ($generated@@78 $generated@@367 $generated@@4)) (= (type $generated@@366) ($generated@@78 $generated@@367 $generated@@4))) (= ($generated@@86 $generated@@365 $generated@@366) (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@367) (= ($generated@@0 ($generated@@92 $generated@@365 $generated@@368)) ($generated@@0 ($generated@@92 $generated@@366 $generated@@368))))
 :pattern ( ($generated@@92 $generated@@365 $generated@@368))
 :pattern ( ($generated@@92 $generated@@366 $generated@@368))
)))))
 :pattern ( ($generated@@86 $generated@@365 $generated@@366))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@90 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@78 $generated@@370 $generated@@2)) (= ($generated@@189 $generated@@369) (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@370) (and (<= 0 ($generated ($generated@@92 $generated@@369 $generated@@371))) (<= ($generated ($generated@@92 $generated@@369 $generated@@371)) ($generated@@321 $generated@@369))))
 :pattern ( ($generated@@92 $generated@@369 $generated@@371))
)))))
 :pattern ( ($generated@@189 $generated@@369))
)))
(assert (forall (($generated@@373 T@T) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@373)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@81) ($generated@@257 $generated@@375 $generated@@85)) (and (= ($generated@@308 ($generated@@372 $generated@@2 $generated@@375)) $generated@@375) ($generated@@83 ($generated@@372 $generated@@2 $generated@@375) $generated@@85)))
 :pattern ( ($generated@@257 $generated@@375 $generated@@85))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@333 (type $generated@@376))))
(let (($generated@@378 ($generated@@332 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@331 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@330 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) ($generated@@0 ($generated@@92 ($generated@@329 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@329 $generated@@376))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@333 (type $generated@@381))))
(= (type ($generated@@380 $generated@@381)) ($generated@@78 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@333 (type $generated@@383))))
(let (($generated@@385 ($generated@@332 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@331 $generated@@385 $generated@@384)) (or (= $generated@@383 ($generated@@330 $generated@@385 $generated@@384)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@384) ($generated@@0 ($generated@@92 ($generated@@380 $generated@@383) $generated@@386)))
 :no-pattern (type $generated@@386)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
))))))
 :pattern ( ($generated@@380 $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@351 (type $generated@@387))))
(let (($generated@@389 ($generated@@350 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@349 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@348 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) ($generated@@0 ($generated@@92 ($generated@@347 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@347 $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@351 (type $generated@@392))))
(= (type ($generated@@391 $generated@@392)) ($generated@@78 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@351 (type $generated@@394))))
(let (($generated@@396 ($generated@@350 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@349 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@348 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@395) ($generated@@0 ($generated@@92 ($generated@@391 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@391 $generated@@394))
)))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@398 Int) ($generated@@399 Int) ) (!  (=> (or ($generated@@265 $generated@@398 $generated@@399) (and (not (= 4 $generated@@74)) (and (<= ($generated@@178 1) $generated@@398) (<= ($generated@@178 1) $generated@@399)))) (<= ($generated@@178 1) ($generated@@264 $generated@@398 $generated@@399)))
 :pattern ( ($generated@@264 $generated@@398 $generated@@399))
))))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@400 Int) ) (!  (=> (or ($generated@@177 ($generated@@178 $generated@@400)) (and (not (= 2 $generated@@74)) (<= ($generated@@178 1) $generated@@400))) (and (forall (($generated@@401 Int) ) (!  (=> (<= ($generated@@178 1) $generated@@401) (=> (<= $generated@@401 ($generated@@178 $generated@@400)) ($generated@@180 $generated@@401 ($generated@@178 $generated@@400))))
 :pattern ( ($generated@@179 $generated@@401 $generated@@400))
)) (= ($generated@@176 ($generated@@178 $generated@@400)) ($generated@@181 $generated@@85 ($generated@@178 $generated@@400) ($generated@@178 $generated@@400)))))
 :weight 3
 :pattern ( ($generated@@176 ($generated@@178 $generated@@400)))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@403) $generated@@66)) (= ($generated@@83 $generated@@402 ($generated@@188 $generated@@403)) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@81) (< 0 ($generated ($generated@@92 $generated@@402 $generated@@404)))) ($generated@@257 $generated@@404 $generated@@403))
 :pattern ( ($generated@@92 $generated@@402 $generated@@404))
))))
 :pattern ( ($generated@@83 $generated@@402 ($generated@@188 $generated@@403)))
)))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@405 Int) ) (!  (=> (or ($generated@@177 $generated@@405) (and (not (= 2 $generated@@74)) (<= ($generated@@178 1) $generated@@405))) ($generated@@83 ($generated@@176 $generated@@405) ($generated@@84 $generated@@85)))
 :pattern ( ($generated@@176 $generated@@405))
))))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@406 Int) ($generated@@407 Int) ) (!  (=> (or ($generated@@265 ($generated@@178 $generated@@406) ($generated@@178 $generated@@407)) (and (not (= 4 $generated@@74)) (and (<= ($generated@@178 1) $generated@@406) (<= ($generated@@178 1) $generated@@407)))) (and (and (and ($generated@@177 ($generated@@178 $generated@@406)) ($generated@@177 ($generated@@178 $generated@@407))) (let (($generated@@408 ($generated@@249 ($generated@@176 ($generated@@178 $generated@@406)) ($generated@@176 ($generated@@178 $generated@@407)))))
($generated@@82 $generated@@408))) (= ($generated@@264 ($generated@@178 $generated@@406) ($generated@@178 $generated@@407)) (let (($generated@@409 ($generated@@249 ($generated@@176 ($generated@@178 $generated@@406)) ($generated@@176 ($generated@@178 $generated@@407)))))
($generated@@75 $generated@@409)))))
 :weight 3
 :pattern ( ($generated@@264 ($generated@@178 $generated@@406) ($generated@@178 $generated@@407)))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
 (=> (and (= (type $generated@@410) ($generated@@78 $generated@@413 $generated@@4)) (= (type $generated@@411) ($generated@@78 $generated@@413 $generated@@4))) (= ($generated@@0 ($generated@@92 ($generated@@249 $generated@@410 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@92 $generated@@410 $generated@@412)) ($generated@@0 ($generated@@92 $generated@@411 $generated@@412))))))
 :pattern ( ($generated@@92 ($generated@@249 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (= (type $generated@@414) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@415) $generated@@66)) (= (type $generated@@416) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@414 ($generated@@84 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@81) ($generated@@0 ($generated@@92 $generated@@414 $generated@@417))) ($generated@@283 $generated@@417 $generated@@415 $generated@@416))
 :pattern ( ($generated@@92 $generated@@414 $generated@@417))
))))
 :pattern ( ($generated@@149 $generated@@414 ($generated@@84 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@419) $generated@@66)) (= (type $generated@@420) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@418 ($generated@@275 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@81) ($generated@@0 ($generated@@92 $generated@@418 $generated@@421))) ($generated@@283 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@92 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@149 $generated@@418 ($generated@@275 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(= ($generated ($generated@@92 ($generated@@322 $generated@@423) $generated@@422)) 0))
 :pattern ( (let (($generated@@423 (type $generated@@422)))
($generated@@92 ($generated@@322 $generated@@423) $generated@@422)))
)))
(assert  (and (forall (($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@426)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@424 $generated@@426))
)) (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@333 (type $generated@@427))))
(let (($generated@@429 ($generated@@332 (type $generated@@427))))
(= (type ($generated@@425 $generated@@427)) ($generated@@78 $generated@@429 $generated@@428))))
 :pattern ( ($generated@@425 $generated@@427))
))))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) ($generated@@331 $generated@@81 $generated@@81)) (= (type $generated@@431) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@424 $generated@@430) $generated@@431))  (and ($generated@@0 ($generated@@92 ($generated@@329 $generated@@430) ($generated@@170 ($generated@@372 $generated@@163 $generated@@431)))) (= ($generated@@92 ($generated@@425 $generated@@430) ($generated@@170 ($generated@@372 $generated@@163 $generated@@431))) ($generated@@171 ($generated@@372 $generated@@163 $generated@@431))))))
 :pattern ( ($generated@@92 ($generated@@424 $generated@@430) $generated@@431))
)))
(assert  (and (forall (($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@434)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@432 $generated@@434))
)) (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@351 (type $generated@@435))))
(let (($generated@@437 ($generated@@350 (type $generated@@435))))
(= (type ($generated@@433 $generated@@435)) ($generated@@78 $generated@@437 $generated@@436))))
 :pattern ( ($generated@@433 $generated@@435))
))))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) ($generated@@349 $generated@@81 $generated@@81)) (= (type $generated@@439) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@432 $generated@@438) $generated@@439))  (and ($generated@@0 ($generated@@92 ($generated@@347 $generated@@438) ($generated@@170 ($generated@@372 $generated@@163 $generated@@439)))) (= ($generated@@92 ($generated@@433 $generated@@438) ($generated@@170 ($generated@@372 $generated@@163 $generated@@439))) ($generated@@171 ($generated@@372 $generated@@163 $generated@@439))))))
 :pattern ( ($generated@@92 ($generated@@432 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (let (($generated@@442 (type $generated@@441)))
(let (($generated@@443 ($generated@@332 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@331 $generated@@443 $generated@@442)) (= ($generated@@0 ($generated@@92 ($generated@@380 $generated@@440) $generated@@441)) (exists (($generated@@444 T@U) ) (!  (and (= (type $generated@@444) $generated@@443) (and ($generated@@0 ($generated@@92 ($generated@@329 $generated@@440) $generated@@444)) (= $generated@@441 ($generated@@92 ($generated@@425 $generated@@440) $generated@@444))))
 :pattern ( ($generated@@92 ($generated@@329 $generated@@440) $generated@@444))
 :pattern ( ($generated@@92 ($generated@@425 $generated@@440) $generated@@444))
))))))
 :pattern ( ($generated@@92 ($generated@@380 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@446)))
(let (($generated@@448 ($generated@@350 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@349 $generated@@448 $generated@@447)) (= ($generated@@0 ($generated@@92 ($generated@@391 $generated@@445) $generated@@446)) (exists (($generated@@449 T@U) ) (!  (and (= (type $generated@@449) $generated@@448) (and ($generated@@0 ($generated@@92 ($generated@@347 $generated@@445) $generated@@449)) (= $generated@@446 ($generated@@92 ($generated@@433 $generated@@445) $generated@@449))))
 :pattern ( ($generated@@92 ($generated@@347 $generated@@445) $generated@@449))
 :pattern ( ($generated@@92 ($generated@@433 $generated@@445) $generated@@449))
))))))
 :pattern ( ($generated@@92 ($generated@@391 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (= (type ($generated@@450 $generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@450 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (and (= (type $generated@@453) ($generated@@331 $generated@@81 $generated@@81)) (= (type $generated@@454) $generated@@66)) (= (type $generated@@455) $generated@@66)) (= (type $generated@@456) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456) (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@329 $generated@@453) $generated@@457))) (and ($generated@@283 ($generated@@92 ($generated@@425 $generated@@453) $generated@@457) $generated@@455 $generated@@456) ($generated@@283 $generated@@457 $generated@@454 $generated@@456)))
 :pattern ( ($generated@@92 ($generated@@425 $generated@@453) $generated@@457))
 :pattern ( ($generated@@92 ($generated@@329 $generated@@453) $generated@@457))
))))
 :pattern ( ($generated@@149 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (! (= (type ($generated@@458 $generated@@459 $generated@@460)) $generated@@66)
 :pattern ( ($generated@@458 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (and (= (type $generated@@461) ($generated@@349 $generated@@81 $generated@@81)) (= (type $generated@@462) $generated@@66)) (= (type $generated@@463) $generated@@66)) (= (type $generated@@464) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@461 ($generated@@458 $generated@@462 $generated@@463) $generated@@464) (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@347 $generated@@461) $generated@@465))) (and ($generated@@283 ($generated@@92 ($generated@@433 $generated@@461) $generated@@465) $generated@@463 $generated@@464) ($generated@@283 $generated@@465 $generated@@462 $generated@@464)))
 :pattern ( ($generated@@92 ($generated@@433 $generated@@461) $generated@@465))
 :pattern ( ($generated@@92 ($generated@@347 $generated@@461) $generated@@465))
))))
 :pattern ( ($generated@@149 $generated@@461 ($generated@@458 $generated@@462 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@90 (type $generated@@466))))
 (=> (and (and (= (type $generated@@466) ($generated@@78 $generated@@468 $generated@@4)) (= (type $generated@@467) ($generated@@78 $generated@@468 $generated@@4))) ($generated@@86 $generated@@466 $generated@@467)) (= $generated@@466 $generated@@467)))
 :pattern ( ($generated@@86 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 Int) ($generated@@471 Int) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@472) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@181 $generated@@469 $generated@@470 $generated@@471) $generated@@472))  (and ($generated@@257 $generated@@472 $generated@@469) (and (<= ($generated ($generated@@372 $generated@@2 $generated@@472)) $generated@@470) ($generated@@179 ($generated ($generated@@372 $generated@@2 $generated@@472)) $generated@@471)))))
 :pattern ( ($generated@@92 ($generated@@181 $generated@@469 $generated@@470 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@473) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@474) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@475) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@473 $generated@@475))) (and ($generated@@154 $generated@@473 $generated@@474) ($generated@@154 $generated@@474 $generated@@475))) ($generated@@154 $generated@@473 $generated@@475))
 :pattern ( ($generated@@154 $generated@@473 $generated@@474) ($generated@@154 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@T) ) (! (= (type ($generated@@476 $generated@@477)) ($generated@@78 $generated@@477 $generated@@4))
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@351 (type $generated@@478))))
(let (($generated@@480 ($generated@@350 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@349 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@348 $generated@@480 $generated@@479)) (= ($generated@@347 $generated@@478) ($generated@@476 $generated@@480))))))
 :pattern ( ($generated@@347 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@351 (type $generated@@481))))
(let (($generated@@483 ($generated@@350 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@349 $generated@@483 $generated@@482)) (= (= $generated@@481 ($generated@@348 $generated@@483 $generated@@482)) (= ($generated@@391 $generated@@481) ($generated@@476 $generated@@482))))))
 :pattern ( ($generated@@391 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@351 (type $generated@@484))))
(let (($generated@@486 ($generated@@350 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@349 $generated@@486 $generated@@485)) (= (= $generated@@484 ($generated@@348 $generated@@486 $generated@@485)) (= ($generated@@432 $generated@@484) ($generated@@476 $generated@@81))))))
 :pattern ( ($generated@@432 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@333 (type $generated@@487))))
(let (($generated@@489 ($generated@@332 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@331 $generated@@489 $generated@@488)) (or (= $generated@@487 ($generated@@330 $generated@@489 $generated@@488)) (exists (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (and (and (= (type $generated@@490) $generated@@81) (= (type $generated@@491) $generated@@81)) ($generated@@0 ($generated@@92 ($generated@@424 $generated@@487) ($generated@@308 ($generated@@256 $generated@@490 $generated@@491)))))
 :no-pattern (type $generated@@490)
 :no-pattern (type $generated@@491)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
))))))
 :pattern ( ($generated@@424 $generated@@487))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@351 (type $generated@@492))))
(let (($generated@@494 ($generated@@350 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@349 $generated@@494 $generated@@493)) (or (= $generated@@492 ($generated@@348 $generated@@494 $generated@@493)) (exists (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (and (and (= (type $generated@@495) $generated@@81) (= (type $generated@@496) $generated@@81)) ($generated@@0 ($generated@@92 ($generated@@432 $generated@@492) ($generated@@308 ($generated@@256 $generated@@495 $generated@@496)))))
 :no-pattern (type $generated@@495)
 :no-pattern (type $generated@@496)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
 :no-pattern ($generated $generated@@496)
 :no-pattern ($generated@@0 $generated@@496)
))))))
 :pattern ( ($generated@@432 $generated@@492))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@81) ($generated@@257 $generated@@497 $generated@@46)) (and (= ($generated@@308 ($generated@@372 $generated@@2 $generated@@497)) $generated@@497) ($generated@@83 ($generated@@372 $generated@@2 $generated@@497) $generated@@46)))
 :pattern ( ($generated@@257 $generated@@497 $generated@@46))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@81) ($generated@@257 $generated@@498 $generated@@47)) (and (= ($generated@@308 ($generated@@372 $generated@@3 $generated@@498)) $generated@@498) ($generated@@83 ($generated@@372 $generated@@3 $generated@@498) $generated@@47)))
 :pattern ( ($generated@@257 $generated@@498 $generated@@47))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@81) ($generated@@257 $generated@@499 $generated@@44)) (and (= ($generated@@308 ($generated@@372 $generated@@4 $generated@@499)) $generated@@499) ($generated@@83 ($generated@@372 $generated@@4 $generated@@499) $generated@@44)))
 :pattern ( ($generated@@257 $generated@@499 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@500) 20))
(assert (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@81) ($generated@@257 $generated@@501 $generated@@45)) (and (= ($generated@@308 ($generated@@372 $generated@@500 $generated@@501)) $generated@@501) ($generated@@83 ($generated@@372 $generated@@500 $generated@@501) $generated@@45)))
 :pattern ( ($generated@@257 $generated@@501 $generated@@45))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@257 ($generated@@308 $generated@@502) $generated@@503) ($generated@@83 $generated@@502 $generated@@503)))
 :pattern ( ($generated@@257 ($generated@@308 $generated@@502) $generated@@503))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@504 Int) ($generated@@505 Int) ) (!  (=> (or ($generated@@180 $generated@@504 $generated@@505) (and (not (= 1 $generated@@74)) (and (<= ($generated@@178 1) $generated@@504) (<= ($generated@@178 1) $generated@@505)))) (= ($generated@@179 $generated@@504 $generated@@505) (exists (($generated@@506 Int) ) (! (= ($generated@@304 $generated@@504 $generated@@506) $generated@@505)
 :pattern ( ($generated@@304 $generated@@504 $generated@@506))
))))
 :pattern ( ($generated@@179 $generated@@504 $generated@@505))
))))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@90 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@78 $generated@@508 $generated@@2)) (<= 0 ($generated@@321 $generated@@507))))
 :pattern ( ($generated@@321 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@298 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@297 $generated@@510)) (<= 0 ($generated@@296 $generated@@509))))
 :pattern ( ($generated@@296 $generated@@509))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@511 Int) ($generated@@512 Int) ) (!  (=> (or ($generated@@180 $generated@@511 $generated@@512) (and (not (= 1 $generated@@74)) (and (<= ($generated@@178 1) $generated@@511) (<= ($generated@@178 1) $generated@@512)))) true)
 :pattern ( ($generated@@179 $generated@@511 $generated@@512))
))))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@66)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@66) (= (type $generated@@516) $generated@@66)) (= ($generated@@513 ($generated@@450 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@450 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@66)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@66) (= (type $generated@@520) $generated@@66)) (= ($generated@@517 ($generated@@450 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@450 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@66) (= (type $generated@@522) $generated@@66)) (= ($generated@@147 ($generated@@450 $generated@@521 $generated@@522)) $generated@@58))
 :pattern ( ($generated@@450 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@66)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@66) (= (type $generated@@526) $generated@@66)) (= ($generated@@523 ($generated@@458 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@458 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@66)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@66) (= (type $generated@@530) $generated@@66)) (= ($generated@@527 ($generated@@458 $generated@@529 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@458 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@66) (= (type $generated@@532) $generated@@66)) (= ($generated@@147 ($generated@@458 $generated@@531 $generated@@532)) $generated@@59))
 :pattern ( ($generated@@458 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@81) (= (type $generated@@534) $generated@@81)) (= ($generated@@289 ($generated@@256 $generated@@533 $generated@@534)) $generated@@61))
 :pattern ( ($generated@@256 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@66)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@66) (= (type $generated@@538) $generated@@66)) (= ($generated@@535 ($generated@@162 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@162 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@66)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@66) (= (type $generated@@542) $generated@@66)) (= ($generated@@539 ($generated@@162 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@162 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@81) (= (type $generated@@544) $generated@@81)) (= ($generated@@170 ($generated@@256 $generated@@543 $generated@@544)) $generated@@543))
 :pattern ( ($generated@@256 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@81) (= (type $generated@@546) $generated@@81)) (= ($generated@@171 ($generated@@256 $generated@@545 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@256 $generated@@545 $generated@@546))
)))
(assert  (and (forall (($generated@@549 T@U) ) (! (= (type ($generated@@547 $generated@@549)) $generated@@66)
 :pattern ( ($generated@@547 $generated@@549))
)) (forall (($generated@@550 T@U) ($generated@@551 Int) ) (! (let (($generated@@552 ($generated@@298 (type $generated@@550))))
(= (type ($generated@@548 $generated@@550 $generated@@551)) $generated@@552))
 :pattern ( ($generated@@548 $generated@@550 $generated@@551))
))))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@297 $generated@@81)) (= (type $generated@@554) $generated@@66)) (= (type $generated@@555) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@553 ($generated@@547 $generated@@554) $generated@@555) (forall (($generated@@556 Int) ) (!  (=> (and (<= 0 $generated@@556) (< $generated@@556 ($generated@@296 $generated@@553))) ($generated@@283 ($generated@@548 $generated@@553 $generated@@556) $generated@@554 $generated@@555))
 :pattern ( ($generated@@548 $generated@@553 $generated@@556))
))))
 :pattern ( ($generated@@149 $generated@@553 ($generated@@547 $generated@@554) $generated@@555))
)))
(assert (forall (($generated@@558 Int) ) (! (= ($generated@@557 ($generated@@150 $generated@@558)) $generated@@558)
 :pattern ( ($generated@@150 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@66)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@66) (= ($generated@@559 ($generated@@84 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@84 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@66) (= ($generated@@147 ($generated@@84 $generated@@562)) $generated@@54))
 :pattern ( ($generated@@84 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@66)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@66) (= ($generated@@563 ($generated@@275 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@275 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@66) (= ($generated@@147 ($generated@@275 $generated@@566)) $generated@@55))
 :pattern ( ($generated@@275 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@66)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@66) (= ($generated@@567 ($generated@@188 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@188 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@66) (= ($generated@@147 ($generated@@188 $generated@@570)) $generated@@56))
 :pattern ( ($generated@@188 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@66)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@66) (= ($generated@@571 ($generated@@547 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@547 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@66) (= ($generated@@147 ($generated@@547 $generated@@574)) $generated@@57))
 :pattern ( ($generated@@547 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
(= ($generated@@372 $generated@@576 ($generated@@308 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@308 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@331 $generated@@81 $generated@@81)) (= (type $generated@@578) $generated@@66)) (= (type $generated@@579) $generated@@66)) (= ($generated@@83 $generated@@577 ($generated@@450 $generated@@578 $generated@@579)) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@329 $generated@@577) $generated@@580))) (and ($generated@@257 ($generated@@92 ($generated@@425 $generated@@577) $generated@@580) $generated@@579) ($generated@@257 $generated@@580 $generated@@578)))
 :pattern ( ($generated@@92 ($generated@@425 $generated@@577) $generated@@580))
 :pattern ( ($generated@@92 ($generated@@329 $generated@@577) $generated@@580))
))))
 :pattern ( ($generated@@83 $generated@@577 ($generated@@450 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@349 $generated@@81 $generated@@81)) (= (type $generated@@582) $generated@@66)) (= (type $generated@@583) $generated@@66)) (= ($generated@@83 $generated@@581 ($generated@@458 $generated@@582 $generated@@583)) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@347 $generated@@581) $generated@@584))) (and ($generated@@257 ($generated@@92 ($generated@@433 $generated@@581) $generated@@584) $generated@@583) ($generated@@257 $generated@@584 $generated@@582)))
 :pattern ( ($generated@@92 ($generated@@433 $generated@@581) $generated@@584))
 :pattern ( ($generated@@92 ($generated@@347 $generated@@581) $generated@@584))
))))
 :pattern ( ($generated@@83 $generated@@581 ($generated@@458 $generated@@582 $generated@@583)))
)))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@586) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 $generated@@586) (and (not (= 3 $generated@@74)) (and (and ($generated@@77 $generated@@585) ($generated@@83 $generated@@586 ($generated@@84 $generated@@85))) (not ($generated@@86 $generated@@586 ($generated@@87 $generated@@81))))))) (and ($generated@@88 $generated@@586) (= ($generated@@75 $generated@@586) (let (($generated@@587 ($generated@@89 $generated@@586)))
$generated@@587))))
 :pattern ( ($generated@@75 $generated@@586) ($generated@@77 $generated@@585))
))))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@81) (= (type $generated@@591) $generated@@81)) (< ($generated@@588 $generated@@590) ($generated@@589 ($generated@@256 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@256 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@81) (= (type $generated@@593) $generated@@81)) (< ($generated@@588 $generated@@593) ($generated@@589 ($generated@@256 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@256 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (! (let (($generated@@596 ($generated@@90 (type $generated@@594))))
 (=> (and (= (type $generated@@594) ($generated@@78 $generated@@596 $generated@@4)) (= (type $generated@@595) ($generated@@78 $generated@@596 $generated@@4))) (= ($generated@@249 $generated@@594 ($generated@@249 $generated@@594 $generated@@595)) ($generated@@249 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@249 $generated@@594 ($generated@@249 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@81) (= (type $generated@@598) $generated@@66)) (= (type $generated@@599) $generated@@66)) ($generated@@257 $generated@@597 ($generated@@450 $generated@@598 $generated@@599))) (and (= ($generated@@308 ($generated@@372 ($generated@@331 $generated@@81 $generated@@81) $generated@@597)) $generated@@597) ($generated@@83 ($generated@@372 ($generated@@331 $generated@@81 $generated@@81) $generated@@597) ($generated@@450 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@257 $generated@@597 ($generated@@450 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@81) (= (type $generated@@601) $generated@@66)) (= (type $generated@@602) $generated@@66)) ($generated@@257 $generated@@600 ($generated@@458 $generated@@601 $generated@@602))) (and (= ($generated@@308 ($generated@@372 ($generated@@349 $generated@@81 $generated@@81) $generated@@600)) $generated@@600) ($generated@@83 ($generated@@372 ($generated@@349 $generated@@81 $generated@@81) $generated@@600) ($generated@@458 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@257 $generated@@600 ($generated@@458 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@66) (= (type $generated@@604) $generated@@66)) (= (type $generated@@605) $generated@@81)) ($generated@@257 $generated@@605 ($generated@@162 $generated@@603 $generated@@604))) (and (= ($generated@@308 ($generated@@372 $generated@@163 $generated@@605)) $generated@@605) ($generated@@83 ($generated@@372 $generated@@163 $generated@@605) ($generated@@162 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@257 $generated@@605 ($generated@@162 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@606)))
 (not ($generated@@0 ($generated@@92 ($generated@@87 $generated@@607) $generated@@606))))
 :pattern ( (let (($generated@@607 (type $generated@@606)))
($generated@@92 ($generated@@87 $generated@@607) $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@608)))
 (not ($generated@@0 ($generated@@92 ($generated@@476 $generated@@609) $generated@@608))))
 :pattern ( (let (($generated@@609 (type $generated@@608)))
($generated@@92 ($generated@@476 $generated@@609) $generated@@608)))
)))
(assert (forall (($generated@@611 T@U) ) (! (= (type ($generated@@610 $generated@@611)) $generated@@71)
 :pattern ( ($generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@66) (= (type $generated@@613) $generated@@66)) (and (= ($generated@@147 ($generated@@162 $generated@@612 $generated@@613)) $generated@@62) (= ($generated@@610 ($generated@@162 $generated@@612 $generated@@613)) $generated@@64)))
 :pattern ( ($generated@@162 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 Int) ($generated@@615 Int) ) (! (= ($generated@@304 $generated@@614 $generated@@615) (* $generated@@614 $generated@@615))
 :pattern ( ($generated@@304 $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@163) (= ($generated@@588 ($generated@@308 $generated@@616)) ($generated@@589 $generated@@616)))
 :pattern ( ($generated@@588 ($generated@@308 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@81) ($generated@@257 $generated@@617 ($generated@@150 0))) (and (= ($generated@@308 ($generated@@372 $generated@@2 $generated@@617)) $generated@@617) ($generated@@83 ($generated@@372 ($generated@@78 $generated@@81 $generated@@4) $generated@@617) ($generated@@150 0))))
 :pattern ( ($generated@@257 $generated@@617 ($generated@@150 0)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@81) (= (type $generated@@619) $generated@@66)) ($generated@@257 $generated@@618 ($generated@@84 $generated@@619))) (and (= ($generated@@308 ($generated@@372 ($generated@@78 $generated@@81 $generated@@4) $generated@@618)) $generated@@618) ($generated@@83 ($generated@@372 ($generated@@78 $generated@@81 $generated@@4) $generated@@618) ($generated@@84 $generated@@619))))
 :pattern ( ($generated@@257 $generated@@618 ($generated@@84 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@81) (= (type $generated@@621) $generated@@66)) ($generated@@257 $generated@@620 ($generated@@275 $generated@@621))) (and (= ($generated@@308 ($generated@@372 ($generated@@78 $generated@@81 $generated@@4) $generated@@620)) $generated@@620) ($generated@@83 ($generated@@372 ($generated@@78 $generated@@81 $generated@@4) $generated@@620) ($generated@@275 $generated@@621))))
 :pattern ( ($generated@@257 $generated@@620 ($generated@@275 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@81) (= (type $generated@@623) $generated@@66)) ($generated@@257 $generated@@622 ($generated@@188 $generated@@623))) (and (= ($generated@@308 ($generated@@372 ($generated@@78 $generated@@81 $generated@@2) $generated@@622)) $generated@@622) ($generated@@83 ($generated@@372 ($generated@@78 $generated@@81 $generated@@2) $generated@@622) ($generated@@188 $generated@@623))))
 :pattern ( ($generated@@257 $generated@@622 ($generated@@188 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@81) (= (type $generated@@625) $generated@@66)) ($generated@@257 $generated@@624 ($generated@@547 $generated@@625))) (and (= ($generated@@308 ($generated@@372 ($generated@@297 $generated@@81) $generated@@624)) $generated@@624) ($generated@@83 ($generated@@372 ($generated@@297 $generated@@81) $generated@@624) ($generated@@547 $generated@@625))))
 :pattern ( ($generated@@257 $generated@@624 ($generated@@547 $generated@@625)))
)))
(assert (= ($generated@@147 $generated@@85) $generated@@63))
(assert (= ($generated@@610 $generated@@85) $generated@@65))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@626) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@627) $generated@@66)) (= (type $generated@@628) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@626 ($generated@@188 $generated@@627) $generated@@628) (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@81) (< 0 ($generated ($generated@@92 $generated@@626 $generated@@629)))) ($generated@@283 $generated@@629 $generated@@627 $generated@@628))
 :pattern ( ($generated@@92 $generated@@626 $generated@@629))
))))
 :pattern ( ($generated@@149 $generated@@626 ($generated@@188 $generated@@627) $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) $generated@@163) (= (type $generated@@631) $generated@@66)) (= (type $generated@@632) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@77 $generated@@632) (and ($generated@@161 $generated@@630) (exists (($generated@@633 T@U) ) (!  (and (= (type $generated@@633) $generated@@66) ($generated@@149 $generated@@630 ($generated@@162 $generated@@631 $generated@@633) $generated@@632))
 :pattern ( ($generated@@149 $generated@@630 ($generated@@162 $generated@@631 $generated@@633) $generated@@632))
))))) ($generated@@283 ($generated@@170 $generated@@630) $generated@@631 $generated@@632))
 :pattern ( ($generated@@283 ($generated@@170 $generated@@630) $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@163) (= (type $generated@@635) $generated@@66)) (= (type $generated@@636) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@77 $generated@@636) (and ($generated@@161 $generated@@634) (exists (($generated@@637 T@U) ) (!  (and (= (type $generated@@637) $generated@@66) ($generated@@149 $generated@@634 ($generated@@162 $generated@@637 $generated@@635) $generated@@636))
 :pattern ( ($generated@@149 $generated@@634 ($generated@@162 $generated@@637 $generated@@635) $generated@@636))
))))) ($generated@@283 ($generated@@171 $generated@@634) $generated@@635 $generated@@636))
 :pattern ( ($generated@@283 ($generated@@171 $generated@@634) $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@81) (= (type $generated@@639) $generated@@81)) (= ($generated@@256 ($generated@@76 $generated@@638) ($generated@@76 $generated@@639)) ($generated@@76 ($generated@@256 $generated@@638 $generated@@639))))
 :pattern ( ($generated@@256 ($generated@@76 $generated@@638) ($generated@@76 $generated@@639)))
)))
(assert (forall (($generated@@640 Int) ) (! (= ($generated@@308 ($generated@@8 ($generated@@178 $generated@@640))) ($generated@@76 ($generated@@308 ($generated@@8 $generated@@640))))
 :pattern ( ($generated@@308 ($generated@@8 ($generated@@178 $generated@@640))))
)))
(assert (forall (($generated@@641 T@U) ) (! (= ($generated@@308 ($generated@@76 $generated@@641)) ($generated@@76 ($generated@@308 $generated@@641)))
 :pattern ( ($generated@@308 ($generated@@76 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ) (! (let (($generated@@643 ($generated@@298 (type $generated@@642))))
 (=> (and (= (type $generated@@642) ($generated@@297 $generated@@643)) (= ($generated@@296 $generated@@642) 0)) (= $generated@@642 ($generated@@295 $generated@@643))))
 :pattern ( ($generated@@296 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (! (let (($generated@@647 (type $generated@@645)))
 (=> (and (and (= (type $generated@@644) ($generated@@78 $generated@@647 $generated@@2)) (= (type $generated@@646) $generated@@2)) (<= 0 ($generated $generated@@646))) (= ($generated@@321 ($generated@@93 $generated@@644 $generated@@645 $generated@@646)) (+ (- ($generated@@321 $generated@@644) ($generated ($generated@@92 $generated@@644 $generated@@645))) ($generated $generated@@646)))))
 :pattern ( ($generated@@321 ($generated@@93 $generated@@644 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@649) $generated@@2)) ($generated@@149 $generated@@649 $generated@@46 $generated@@648))
 :pattern ( ($generated@@149 $generated@@649 $generated@@46 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@651) $generated@@3)) ($generated@@149 $generated@@651 $generated@@47 $generated@@650))
 :pattern ( ($generated@@149 $generated@@651 $generated@@47 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@653) $generated@@4)) ($generated@@149 $generated@@653 $generated@@44 $generated@@652))
 :pattern ( ($generated@@149 $generated@@653 $generated@@44 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@655) $generated@@500)) ($generated@@149 $generated@@655 $generated@@45 $generated@@654))
 :pattern ( ($generated@@149 $generated@@655 $generated@@45 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@657) $generated@@81)) ($generated@@149 $generated@@657 $generated@@48 $generated@@656))
 :pattern ( ($generated@@149 $generated@@657 $generated@@48 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@297 $generated@@81)) (= (type $generated@@659) $generated@@66)) (= ($generated@@83 $generated@@658 ($generated@@547 $generated@@659)) (forall (($generated@@660 Int) ) (!  (=> (and (<= 0 $generated@@660) (< $generated@@660 ($generated@@296 $generated@@658))) ($generated@@257 ($generated@@548 $generated@@658 $generated@@660) $generated@@659))
 :pattern ( ($generated@@548 $generated@@658 $generated@@660))
))))
 :pattern ( ($generated@@83 $generated@@658 ($generated@@547 $generated@@659)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 Int) ) (!  (=> (= (type $generated@@662) ($generated@@297 $generated@@81)) (=> (and (<= 0 $generated@@663) (< $generated@@663 ($generated@@296 $generated@@662))) (< ($generated@@589 ($generated@@372 $generated@@163 ($generated@@548 $generated@@662 $generated@@663))) ($generated@@661 $generated@@662))))
 :pattern ( ($generated@@589 ($generated@@372 $generated@@163 ($generated@@548 $generated@@662 $generated@@663))))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@664) ($generated@@331 $generated@@81 $generated@@81)) (= (type $generated@@665) $generated@@66)) (= (type $generated@@666) $generated@@66)) ($generated@@83 $generated@@664 ($generated@@450 $generated@@665 $generated@@666))) (and (and ($generated@@83 ($generated@@329 $generated@@664) ($generated@@84 $generated@@665)) ($generated@@83 ($generated@@380 $generated@@664) ($generated@@84 $generated@@666))) ($generated@@83 ($generated@@424 $generated@@664) ($generated@@84 ($generated@@162 $generated@@665 $generated@@666)))))
 :pattern ( ($generated@@83 $generated@@664 ($generated@@450 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) ($generated@@349 $generated@@81 $generated@@81)) (= (type $generated@@668) $generated@@66)) (= (type $generated@@669) $generated@@66)) ($generated@@83 $generated@@667 ($generated@@458 $generated@@668 $generated@@669))) (and (and ($generated@@83 ($generated@@347 $generated@@667) ($generated@@275 $generated@@668)) ($generated@@83 ($generated@@391 $generated@@667) ($generated@@275 $generated@@669))) ($generated@@83 ($generated@@432 $generated@@667) ($generated@@275 ($generated@@162 $generated@@668 $generated@@669)))))
 :pattern ( ($generated@@83 $generated@@667 ($generated@@458 $generated@@668 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@2) ($generated@@83 $generated@@670 $generated@@46))
 :pattern ( ($generated@@83 $generated@@670 $generated@@46))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@3) ($generated@@83 $generated@@671 $generated@@47))
 :pattern ( ($generated@@83 $generated@@671 $generated@@47))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@4) ($generated@@83 $generated@@672 $generated@@44))
 :pattern ( ($generated@@83 $generated@@672 $generated@@44))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@500) ($generated@@83 $generated@@673 $generated@@45))
 :pattern ( ($generated@@83 $generated@@673 $generated@@45))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@81) ($generated@@83 $generated@@674 $generated@@48))
 :pattern ( ($generated@@83 $generated@@674 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@675 () Int)
(declare-fun $generated@@676 () Int)
(declare-fun $generated@@677 () Int)
(declare-fun $generated@@678 () Int)
(declare-fun $generated@@679 () Int)
(declare-fun $generated@@680 () Bool)
(declare-fun $generated@@681 () Int)
(declare-fun $generated@@682 () Int)
(declare-fun $generated@@683 () Int)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 (T@U) Bool)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () Int)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () Int)
(declare-fun $generated@@692 () Int)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () Int)
(declare-fun $generated@@698 () Int)
(declare-fun $generated@@699 () Int)
(declare-fun $generated@@700 () Int)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@693) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@686) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@689) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@690) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@684) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@687) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@694) $generated@@79)) (= (type $generated@@695) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@696) ($generated@@195 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 25) (let (($generated@@701  (and (=> (= (ControlFlow 0 9) (- 0 11)) (or (<= 0 $generated@@675) (= (+ $generated@@676 $generated@@677) $generated@@675))) (=> (or (<= 0 $generated@@675) (= (+ $generated@@676 $generated@@677) $generated@@675)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (< (+ $generated@@676 $generated@@677) $generated@@675)) (=> (< (+ $generated@@676 $generated@@677) $generated@@675) (=> (and (and (and ($generated@@265 $generated@@676 $generated@@677) ($generated@@265 $generated@@678 $generated@@679)) (= (ControlFlow 0 9) (- 0 8))) $generated@@680) (= ($generated@@264 $generated@@676 $generated@@677) ($generated@@264 $generated@@678 $generated@@679)))))))))
(let (($generated@@702  (=> (< $generated@@681 $generated@@682) (and (=> (= (ControlFlow 0 15) (- 0 18)) ($generated@@83 ($generated@@8 (- $generated@@682 $generated@@681)) $generated@@85)) (=> ($generated@@83 ($generated@@8 (- $generated@@682 $generated@@681)) $generated@@85) (=> (= $generated@@683 (- $generated@@682 $generated@@681)) (=> (and ($generated@@77 $generated@@684) ($generated@@685 $generated@@684)) (=> (and (and ($generated@@265 $generated@@683 $generated@@681) ($generated@@265 $generated@@681 $generated@@683)) (and (= ($generated@@264 $generated@@683 $generated@@681) ($generated@@264 $generated@@681 $generated@@683)) (= $generated@@686 $generated@@684))) (and (=> (= (ControlFlow 0 15) (- 0 17)) (< $generated@@681 $generated@@682)) (=> (< $generated@@681 $generated@@682) (=> (and ($generated@@77 $generated@@687) ($generated@@685 $generated@@687)) (=> (and (and ($generated@@265 $generated@@682 $generated@@681) ($generated@@265 $generated@@681 (- $generated@@682 $generated@@681))) (and (= ($generated@@264 $generated@@682 $generated@@681) ($generated@@264 $generated@@681 (- $generated@@682 $generated@@681))) (= $generated@@684 $generated@@687))) (and (=> (= (ControlFlow 0 15) (- 0 16)) ($generated@@83 ($generated@@8 (- $generated@@682 $generated@@681)) $generated@@85)) (=> ($generated@@83 ($generated@@8 (- $generated@@682 $generated@@681)) $generated@@85) (=> (and (and (= $generated@@688 (- $generated@@682 $generated@@681)) (= $generated@@676 $generated@@688)) (and (= $generated@@677 $generated@@681) (= (ControlFlow 0 15) 9))) $generated@@701)))))))))))))))
(let (($generated@@703  (=> (< $generated@@682 $generated@@681) (and (=> (= (ControlFlow 0 12) (- 0 14)) (< $generated@@682 $generated@@681)) (=> (< $generated@@682 $generated@@681) (=> (and (and ($generated@@77 $generated@@689) ($generated@@685 $generated@@689)) (and ($generated@@265 $generated@@681 $generated@@682) ($generated@@265 $generated@@682 (- $generated@@681 $generated@@682)))) (=> (and (and (and (= ($generated@@264 $generated@@681 $generated@@682) ($generated@@264 $generated@@682 (- $generated@@681 $generated@@682))) (= $generated@@686 $generated@@689)) (and ($generated@@77 $generated@@690) ($generated@@685 $generated@@690))) (and (and ($generated@@265 $generated@@681 $generated@@682) ($generated@@265 $generated@@682 $generated@@681)) (and (= ($generated@@264 $generated@@681 $generated@@682) ($generated@@264 $generated@@682 $generated@@681)) (= $generated@@689 $generated@@690)))) (and (=> (= (ControlFlow 0 12) (- 0 13)) ($generated@@83 ($generated@@8 (- $generated@@681 $generated@@682)) $generated@@85)) (=> ($generated@@83 ($generated@@8 (- $generated@@681 $generated@@682)) $generated@@85) (=> (and (and (= $generated@@691 (- $generated@@681 $generated@@682)) (= $generated@@676 $generated@@682)) (and (= $generated@@677 $generated@@691) (= (ControlFlow 0 12) 9))) $generated@@701))))))))))
(let (($generated@@704  (=> (= (ControlFlow 0 4) (- 0 3)) (= $generated@@692 ($generated@@264 $generated@@678 $generated@@679)))))
(let (($generated@@705  (=> (and (and (and ($generated@@77 $generated@@693) ($generated@@685 $generated@@693)) ($generated@@265 $generated@@682 $generated@@682)) (and (and (= ($generated@@264 $generated@@682 $generated@@682) $generated@@682) (= $generated@@686 $generated@@693)) (and (= $generated@@692 $generated@@682) (= (ControlFlow 0 5) 4)))) $generated@@704)))
(let (($generated@@706  (=> (and (and (<= $generated@@681 $generated@@682) (<= $generated@@682 $generated@@681)) (= (ControlFlow 0 7) 5)) $generated@@705)))
(let (($generated@@707  (=> (and ($generated@@0 ($generated@@76 ($generated@@11 true))) (= $generated@@675 (+ $generated@@682 $generated@@681))) (and (and (=> (= (ControlFlow 0 19) 12) $generated@@703) (=> (= (ControlFlow 0 19) 15) $generated@@702)) (=> (= (ControlFlow 0 19) 7) $generated@@706)))))
(let (($generated@@708  (=> (and (not ($generated@@0 ($generated@@76 ($generated@@11 true)))) (= (ControlFlow 0 6) 5)) $generated@@705)))
(let (($generated@@709  (=> $generated@@680 (and (=> (= (ControlFlow 0 20) 6) $generated@@708) (=> (= (ControlFlow 0 20) 19) $generated@@707)))))
(let (($generated@@710 true))
(let (($generated@@711  (and (=> (= (ControlFlow 0 21) 2) $generated@@710) (=> (= (ControlFlow 0 21) 20) $generated@@709))))
(let (($generated@@712 true))
(let (($generated@@713  (=> (and (and ($generated@@77 $generated@@686) ($generated@@685 $generated@@686)) (and (<= ($generated@@178 1) $generated@@682) (<= ($generated@@178 1) $generated@@681))) (=> (and (and (and (not false) (=> $generated@@680 (and ($generated@@265 $generated@@682 $generated@@681) ($generated@@265 $generated@@678 $generated@@679)))) (and (=> $generated@@680 (= ($generated@@264 $generated@@682 $generated@@681) ($generated@@264 $generated@@678 $generated@@679))) (forall (($generated@@714 T@U) ) (!  (=> (= (type $generated@@714) $generated@@79) (=> (and (not (= $generated@@714 $generated@@694)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@695 $generated@@714) $generated@@60))) (= ($generated@@92 $generated@@686 $generated@@714) ($generated@@92 $generated@@695 $generated@@714))))
 :pattern ( ($generated@@92 $generated@@686 $generated@@714))
)))) (and (and ($generated@@154 $generated@@695 $generated@@686) (forall (($generated@@715 T@U) ($generated@@716 T@U) ) (! (let (($generated@@717 ($generated@@69 (type $generated@@716))))
 (=> (and (and (= (type $generated@@715) $generated@@79) (= (type $generated@@716) ($generated@@68 $generated@@717))) (and (not (= $generated@@715 $generated@@694)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@695 $generated@@715) $generated@@60)))) (or (= ($generated@@94 ($generated@@92 $generated@@686 $generated@@715) $generated@@716) ($generated@@94 ($generated@@92 $generated@@695 $generated@@715) $generated@@716)) ($generated@@0 ($generated@@193 $generated@@696 $generated@@715 $generated@@716)))))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@686 $generated@@715) $generated@@716))
))) (and (<= (+ $generated@@682 $generated@@681) $generated@@697) (=> (= (+ $generated@@682 $generated@@681) $generated@@697) true)))) (and (=> (= (ControlFlow 0 22) 1) $generated@@712) (=> (= (ControlFlow 0 22) 21) $generated@@711))))))
(let (($generated@@718  (=> (and (= $generated@@696 ($generated@@194 $generated@@694 $generated@@695 $generated@@60 false)) (= $generated@@697 (+ $generated@@678 $generated@@679))) (and (=> (= (ControlFlow 0 23) (- 0 24)) (=> $generated@@680 (= ($generated@@264 $generated@@678 $generated@@679) ($generated@@264 $generated@@678 $generated@@679)))) (=> (=> $generated@@680 (= ($generated@@264 $generated@@678 $generated@@679) ($generated@@264 $generated@@678 $generated@@679))) (=> (= (ControlFlow 0 23) 22) $generated@@713))))))
(let (($generated@@719  (=> (and (and ($generated@@77 $generated@@695) ($generated@@685 $generated@@695)) (<= ($generated@@178 1) $generated@@678)) (=> (and (and (and (<= ($generated@@178 1) $generated@@679) (<= ($generated@@178 1) $generated@@698)) (and (<= ($generated@@178 1) $generated@@699) true)) (and (and (<= ($generated@@178 1) $generated@@700) true) (and (= 7 $generated@@74) (= (ControlFlow 0 25) 23)))) $generated@@718))))
$generated@@719))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@144 (T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@259 (T@T) T@U)
(declare-fun $generated@@260 (T@U) Int)
(declare-fun $generated@@261 (T@T) T@T)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@U)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@326 (T@T T@U) T@U)
(declare-fun $generated@@334 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@580 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and (= (type $generated@@135) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@134 $generated@@135 $generated@@136)) (forall (($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@79) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@135 $generated@@137) $generated@@60))) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60)))
 :pattern ( ($generated@@85 ($generated@@83 $generated@@136 $generated@@137) $generated@@60))
)))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (= (type $generated@@138) $generated@@66))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@76 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@2) ($generated@@141 $generated@@142 ($generated@@77 0)))
 :pattern ( ($generated@@141 $generated@@142 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@145) 14) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@146 $generated@@147)) $generated@@66)
 :pattern ( ($generated@@144 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (and (= (type $generated@@148) $generated@@66) (= (type $generated@@149) $generated@@66)) (= (type $generated@@150) $generated@@145)) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149))) ($generated@@143 $generated@@150))
 :pattern ( ($generated@@143 $generated@@150) ($generated@@141 $generated@@150 ($generated@@144 $generated@@148 $generated@@149)))
)))
(assert  (and (and (= ($generated@@1 $generated@@154) 15) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@152 $generated@@155))
))) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@154)
 :pattern ( ($generated@@153 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) $generated@@145) (= (type $generated@@158) $generated@@145)) true) (= ($generated@@151 $generated@@157 $generated@@158)  (and (= ($generated@@152 $generated@@157) ($generated@@152 $generated@@158)) (= ($generated@@153 $generated@@157) ($generated@@153 $generated@@158)))))
 :pattern ( ($generated@@151 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ) (! (= (type ($generated@@159 $generated@@161)) $generated@@66)
 :pattern ( ($generated@@159 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (= (type $generated@@162) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@163) $generated@@66)) ($generated@@141 $generated@@162 ($generated@@159 $generated@@163))) ($generated@@160 $generated@@162))
 :pattern ( ($generated@@141 $generated@@162 ($generated@@159 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@1 ($generated@@166 $generated@@170 $generated@@171)) 16)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@167 ($generated@@166 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@166 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@168 ($generated@@166 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@166 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 ($generated@@168 (type $generated@@176))))
(= (type ($generated@@164 $generated@@176 $generated@@177 $generated@@178)) $generated@@179))
 :pattern ( ($generated@@164 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 (type $generated@@183)))
(let (($generated@@185 (type $generated@@181)))
(= (type ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183)) ($generated@@166 $generated@@185 $generated@@184))))
 :pattern ( ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@183))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@168 (type $generated@@186))))
 (=> (= (type $generated@@189) $generated@@190) (= ($generated@@164 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@187 $generated@@188) $generated@@189)))
 :weight 0
))) (and (and (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@164 ($generated@@169 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@164 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@200 $generated@@202) (= ($generated@@164 ($generated@@169 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@164 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or true (= ($generated@@164 ($generated@@169 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@164 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ) (! (= (type ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@166 $generated@@79 $generated@@4))
 :pattern ( ($generated@@165 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@69 (type $generated@@218))))
 (=> (and (and (and (and (= (type $generated@@213) $generated@@79) (= (type $generated@@214) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@215) ($generated@@68 $generated@@4))) (= (type $generated@@217) $generated@@79)) (= (type $generated@@218) ($generated@@68 $generated@@219))) (= ($generated@@0 ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))  (=> (and (not (= $generated@@217 $generated@@213)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@214 $generated@@217) $generated@@215))) $generated@@216))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@213 $generated@@214 $generated@@215 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= (type ($generated@@220 $generated@@222 $generated@@223)) $generated@@145)
 :pattern ( ($generated@@220 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (and (and (= (type $generated@@224) $generated@@66) (= (type $generated@@225) $generated@@66)) (= (type $generated@@226) $generated@@154)) (= (type $generated@@227) $generated@@154)) (= ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225))  (and ($generated@@221 $generated@@226 $generated@@224) ($generated@@221 $generated@@227 $generated@@225))))
 :pattern ( ($generated@@141 ($generated@@220 $generated@@226 $generated@@227) ($generated@@144 $generated@@224 $generated@@225)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@145) (= (type $generated@@229) $generated@@145)) (= ($generated@@151 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@151 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@66)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@233) $generated@@66)) (= ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@154) ($generated@@0 ($generated@@83 $generated@@232 $generated@@234))) ($generated@@221 $generated@@234 $generated@@233))
 :pattern ( ($generated@@83 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@141 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@66)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@238) $generated@@66)) (= ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@154) ($generated@@0 ($generated@@83 $generated@@237 $generated@@239))) ($generated@@221 $generated@@239 $generated@@238))
 :pattern ( ($generated@@83 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@141 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@66) (= (type $generated@@249) $generated@@66)) (= (type $generated@@250) $generated@@154)) (= (type $generated@@251) $generated@@154)) (= (type $generated@@252) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@246 $generated@@252)) (= ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@76 ($generated@@220 $generated@@250 $generated@@251) ($generated@@144 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@70)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@145) (= ($generated@@143 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@61)))
 :pattern ( ($generated@@143 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@143 $generated@@256)) (exists (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (and (and (= (type $generated@@257) $generated@@154) (= (type $generated@@258) $generated@@154)) (= $generated@@256 ($generated@@220 $generated@@257 $generated@@258)))
 :no-pattern (type $generated@@257)
 :no-pattern (type $generated@@258)
 :no-pattern ($generated $generated@@257)
 :no-pattern ($generated@@0 $generated@@257)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
)))
 :pattern ( ($generated@@143 $generated@@256))
)))
(assert  (and (and (forall (($generated@@263 T@T) ) (= ($generated@@1 ($generated@@261 $generated@@263)) 17)) (forall (($generated@@264 T@T) ) (! (= ($generated@@262 ($generated@@261 $generated@@264)) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
))) (forall (($generated@@265 T@T) ) (! (= (type ($generated@@259 $generated@@265)) ($generated@@261 $generated@@265))
 :pattern ( ($generated@@259 $generated@@265))
))))
(assert (forall (($generated@@266 T@T) ) (! (= ($generated@@260 ($generated@@259 $generated@@266)) 0)
 :pattern ( ($generated@@259 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@2) (= ($generated@@141 $generated@@267 $generated@@138) (<= ($generated@@240 1) ($generated $generated@@267))))
 :pattern ( ($generated@@141 $generated@@267 $generated@@138))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@154)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@66) (= (type $generated@@272) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272) ($generated@@76 $generated@@270 $generated@@271 $generated@@272)))
 :pattern ( ($generated@@247 ($generated@@268 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@273) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@274) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@275) $generated@@154)) (= (type $generated@@276) $generated@@66)) ($generated@@134 $generated@@273 $generated@@274)) ($generated@@247 $generated@@275 $generated@@276 $generated@@273)) ($generated@@247 $generated@@275 $generated@@276 $generated@@274))
 :pattern ( ($generated@@134 $generated@@273 $generated@@274) ($generated@@247 $generated@@275 $generated@@276 $generated@@273))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@277) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@278) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@280) $generated@@66)) ($generated@@134 $generated@@277 $generated@@278)) ($generated@@76 $generated@@279 $generated@@280 $generated@@277)) ($generated@@76 $generated@@279 $generated@@280 $generated@@278))
 :pattern ( ($generated@@134 $generated@@277 $generated@@278) ($generated@@76 $generated@@279 $generated@@280 $generated@@277))
)))
(assert (forall (($generated@@283 T@T) ) (! (= (type ($generated@@282 $generated@@283)) ($generated@@78 $generated@@283 $generated@@2))
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (! (let (($generated@@285 ($generated@@81 (type $generated@@284))))
 (=> (= (type $generated@@284) ($generated@@78 $generated@@285 $generated@@2)) (and (= (= ($generated@@281 $generated@@284) 0) (= $generated@@284 ($generated@@282 $generated@@285))) (=> (not (= ($generated@@281 $generated@@284) 0)) (exists (($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@285) (< 0 ($generated ($generated@@83 $generated@@284 $generated@@286))))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
))))))
 :pattern ( ($generated@@281 $generated@@284))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 18)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@78 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@83 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@78 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@83 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@81 (type $generated@@323))))
 (=> (= (type $generated@@323) ($generated@@78 $generated@@324 $generated@@2)) (= ($generated@@160 $generated@@323) (forall (($generated@@325 T@U) ) (!  (=> (= (type $generated@@325) $generated@@324) (and (<= 0 ($generated ($generated@@83 $generated@@323 $generated@@325))) (<= ($generated ($generated@@83 $generated@@323 $generated@@325)) ($generated@@281 $generated@@323))))
 :pattern ( ($generated@@83 $generated@@323 $generated@@325))
)))))
 :pattern ( ($generated@@160 $generated@@323))
)))
(assert (forall (($generated@@327 T@T) ($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@326 $generated@@327 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@154) ($generated@@221 $generated@@329 $generated@@138)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@329)) $generated@@329) ($generated@@141 ($generated@@326 $generated@@2 $generated@@329) $generated@@138)))
 :pattern ( ($generated@@221 $generated@@329 $generated@@138))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@291 (type $generated@@330))))
(let (($generated@@332 ($generated@@290 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@289 $generated@@332 $generated@@331)) (or (= $generated@@330 ($generated@@288 $generated@@332 $generated@@331)) (exists (($generated@@333 T@U) ) (!  (and (= (type $generated@@333) $generated@@332) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@330) $generated@@333)))
 :no-pattern (type $generated@@333)
 :no-pattern ($generated $generated@@333)
 :no-pattern ($generated@@0 $generated@@333)
))))))
 :pattern ( ($generated@@287 $generated@@330))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@291 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335)) ($generated@@78 $generated@@336 $generated@@4)))
 :pattern ( ($generated@@334 $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@291 (type $generated@@337))))
(let (($generated@@339 ($generated@@290 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@289 $generated@@339 $generated@@338)) (or (= $generated@@337 ($generated@@288 $generated@@339 $generated@@338)) (exists (($generated@@340 T@U) ) (!  (and (= (type $generated@@340) $generated@@338) ($generated@@0 ($generated@@83 ($generated@@334 $generated@@337) $generated@@340)))
 :no-pattern (type $generated@@340)
 :no-pattern ($generated $generated@@340)
 :no-pattern ($generated@@0 $generated@@340)
))))))
 :pattern ( ($generated@@334 $generated@@337))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@309 (type $generated@@341))))
(let (($generated@@343 ($generated@@308 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@307 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@306 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@343) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@305 $generated@@341))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@309 (type $generated@@346))))
(= (type ($generated@@345 $generated@@346)) ($generated@@78 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@309 (type $generated@@348))))
(let (($generated@@350 ($generated@@308 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@307 $generated@@350 $generated@@349)) (or (= $generated@@348 ($generated@@306 $generated@@350 $generated@@349)) (exists (($generated@@351 T@U) ) (!  (and (= (type $generated@@351) $generated@@349) ($generated@@0 ($generated@@83 ($generated@@345 $generated@@348) $generated@@351)))
 :no-pattern (type $generated@@351)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
))))))
 :pattern ( ($generated@@345 $generated@@348))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@353) $generated@@66)) (= ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)) (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@352 $generated@@354)))) ($generated@@221 $generated@@354 $generated@@353))
 :pattern ( ($generated@@83 $generated@@352 $generated@@354))
))))
 :pattern ( ($generated@@141 $generated@@352 ($generated@@159 $generated@@353)))
)))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (= (type $generated@@355) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@356) $generated@@66)) (= (type $generated@@357) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@154) ($generated@@0 ($generated@@83 $generated@@355 $generated@@358))) ($generated@@247 $generated@@358 $generated@@356 $generated@@357))
 :pattern ( ($generated@@83 $generated@@355 $generated@@358))
))))
 :pattern ( ($generated@@76 $generated@@355 ($generated@@230 $generated@@356) $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@78 $generated@@154 $generated@@4)) (= (type $generated@@360) $generated@@66)) (= (type $generated@@361) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@154) ($generated@@0 ($generated@@83 $generated@@359 $generated@@362))) ($generated@@247 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@83 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@76 $generated@@359 ($generated@@235 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 (type $generated@@363)))
(= ($generated ($generated@@83 ($generated@@282 $generated@@364) $generated@@363)) 0))
 :pattern ( (let (($generated@@364 (type $generated@@363)))
($generated@@83 ($generated@@282 $generated@@364) $generated@@363)))
)))
(assert  (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@365 $generated@@367)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@365 $generated@@367))
)) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@291 (type $generated@@368))))
(let (($generated@@370 ($generated@@290 (type $generated@@368))))
(= (type ($generated@@366 $generated@@368)) ($generated@@78 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@366 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@372) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372)))) (= ($generated@@83 ($generated@@366 $generated@@371) ($generated@@152 ($generated@@326 $generated@@145 $generated@@372))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@372))))))
 :pattern ( ($generated@@83 ($generated@@365 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@78 $generated@@154 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@309 (type $generated@@376))))
(let (($generated@@378 ($generated@@308 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@78 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@380) $generated@@154)) (= ($generated@@0 ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380)))) (= ($generated@@83 ($generated@@374 $generated@@379) ($generated@@152 ($generated@@326 $generated@@145 $generated@@380))) ($generated@@153 ($generated@@326 $generated@@145 $generated@@380))))))
 :pattern ( ($generated@@83 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@290 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@289 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@83 ($generated@@334 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@83 ($generated@@287 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@381) $generated@@385))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@83 ($generated@@334 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@308 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@307 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@83 ($generated@@345 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@83 ($generated@@305 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@386) $generated@@390))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@83 ($generated@@345 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@66)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@395) $generated@@66)) (= (type $generated@@396) $generated@@66)) (= (type $generated@@397) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))) (and ($generated@@247 ($generated@@83 ($generated@@366 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@247 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@394) $generated@@398))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@76 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@66)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@403) $generated@@66)) (= (type $generated@@404) $generated@@66)) (= (type $generated@@405) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))) (and ($generated@@247 ($generated@@83 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@247 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@76 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@408) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@409) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@407 $generated@@409))) (and ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))) ($generated@@134 $generated@@407 $generated@@409))
 :pattern ( ($generated@@134 $generated@@407 $generated@@408) ($generated@@134 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@78 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@309 (type $generated@@412))))
(let (($generated@@414 ($generated@@308 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@307 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@306 $generated@@414 $generated@@413)) (= ($generated@@305 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@305 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@309 (type $generated@@415))))
(let (($generated@@417 ($generated@@308 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@307 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@306 $generated@@417 $generated@@416)) (= ($generated@@345 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@345 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@309 (type $generated@@418))))
(let (($generated@@420 ($generated@@308 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@307 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@306 $generated@@420 $generated@@419)) (= ($generated@@373 $generated@@418) ($generated@@410 $generated@@154))))))
 :pattern ( ($generated@@373 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@291 (type $generated@@421))))
(let (($generated@@423 ($generated@@290 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@289 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@288 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@154) (= (type $generated@@425) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@365 $generated@@421) ($generated@@268 ($generated@@220 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@365 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@309 (type $generated@@426))))
(let (($generated@@428 ($generated@@308 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@307 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@306 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@154) (= (type $generated@@430) $generated@@154)) ($generated@@0 ($generated@@83 ($generated@@373 $generated@@426) ($generated@@268 ($generated@@220 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@154) ($generated@@221 $generated@@431 $generated@@46)) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@431)) $generated@@431) ($generated@@141 ($generated@@326 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@221 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@154) ($generated@@221 $generated@@432 $generated@@47)) (and (= ($generated@@268 ($generated@@326 $generated@@3 $generated@@432)) $generated@@432) ($generated@@141 ($generated@@326 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@221 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@154) ($generated@@221 $generated@@433 $generated@@44)) (and (= ($generated@@268 ($generated@@326 $generated@@4 $generated@@433)) $generated@@433) ($generated@@141 ($generated@@326 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@221 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@154) ($generated@@221 $generated@@435 $generated@@45)) (and (= ($generated@@268 ($generated@@326 $generated@@434 $generated@@435)) $generated@@435) ($generated@@141 ($generated@@326 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@221 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@66) (= ($generated@@221 ($generated@@268 $generated@@436) $generated@@437) ($generated@@141 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@221 ($generated@@268 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@81 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@78 $generated@@439 $generated@@2)) (<= 0 ($generated@@281 $generated@@438))))
 :pattern ( ($generated@@281 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@262 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@261 $generated@@441)) (<= 0 ($generated@@260 $generated@@440))))
 :pattern ( ($generated@@260 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@66)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@66) (= (type $generated@@445) $generated@@66)) (= ($generated@@442 ($generated@@391 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@391 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@66)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@66) (= (type $generated@@449) $generated@@66)) (= ($generated@@446 ($generated@@391 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@391 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@66) (= (type $generated@@451) $generated@@66)) (= ($generated@@74 ($generated@@391 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@66)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@66) (= (type $generated@@455) $generated@@66)) (= ($generated@@452 ($generated@@399 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@66)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@66) (= (type $generated@@459) $generated@@66)) (= ($generated@@456 ($generated@@399 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@399 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@66) (= (type $generated@@461) $generated@@66)) (= ($generated@@74 ($generated@@399 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@154) (= (type $generated@@463) $generated@@154)) (= ($generated@@253 ($generated@@220 $generated@@462 $generated@@463)) $generated@@61))
 :pattern ( ($generated@@220 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@66)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@66) (= (type $generated@@467) $generated@@66)) (= ($generated@@464 ($generated@@144 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@144 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@66)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@66) (= (type $generated@@471) $generated@@66)) (= ($generated@@468 ($generated@@144 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@144 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@154) (= (type $generated@@473) $generated@@154)) (= ($generated@@152 ($generated@@220 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@220 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@154) (= (type $generated@@475) $generated@@154)) (= ($generated@@153 ($generated@@220 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@220 $generated@@474 $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@262 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@261 $generated@@154)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@260 $generated@@482))) ($generated@@247 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@77 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@77 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@488 ($generated@@230 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@230 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@74 ($generated@@230 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@235 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@235 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@235 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@159 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@159 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@159 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@159 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@326 $generated@@505 ($generated@@268 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@268 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) $generated@@66)) (= ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))) (and ($generated@@221 ($generated@@83 ($generated@@366 $generated@@506) $generated@@509) $generated@@508) ($generated@@221 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@83 ($generated@@366 $generated@@506) $generated@@509))
 :pattern ( ($generated@@83 ($generated@@287 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@141 $generated@@506 ($generated@@391 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@154) ($generated@@0 ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))) (and ($generated@@221 ($generated@@83 ($generated@@374 $generated@@510) $generated@@513) $generated@@512) ($generated@@221 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@374 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@305 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@141 $generated@@510 ($generated@@399 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@154) (= (type $generated@@517) $generated@@154)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@220 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@220 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@154) (= (type $generated@@519) $generated@@154)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@220 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@220 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (and (= (type $generated@@520) $generated@@154) (= (type $generated@@521) $generated@@66)) (= (type $generated@@522) $generated@@66)) ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522))) (and (= ($generated@@268 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520)) $generated@@520) ($generated@@141 ($generated@@326 ($generated@@289 $generated@@154 $generated@@154) $generated@@520) ($generated@@391 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@221 $generated@@520 ($generated@@391 $generated@@521 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@154) (= (type $generated@@524) $generated@@66)) (= (type $generated@@525) $generated@@66)) ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525))) (and (= ($generated@@268 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523)) $generated@@523) ($generated@@141 ($generated@@326 ($generated@@307 $generated@@154 $generated@@154) $generated@@523) ($generated@@399 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@221 $generated@@523 ($generated@@399 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@66) (= (type $generated@@527) $generated@@66)) (= (type $generated@@528) $generated@@154)) ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527))) (and (= ($generated@@268 ($generated@@326 $generated@@145 $generated@@528)) $generated@@528) ($generated@@141 ($generated@@326 $generated@@145 $generated@@528) ($generated@@144 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@221 $generated@@528 ($generated@@144 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ) (! (let (($generated@@530 (type $generated@@529)))
 (not ($generated@@0 ($generated@@83 ($generated@@410 $generated@@530) $generated@@529))))
 :pattern ( (let (($generated@@530 (type $generated@@529)))
($generated@@83 ($generated@@410 $generated@@530) $generated@@529)))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@71)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@66) (= (type $generated@@534) $generated@@66)) (and (= ($generated@@74 ($generated@@144 $generated@@533 $generated@@534)) $generated@@62) (= ($generated@@531 ($generated@@144 $generated@@533 $generated@@534)) $generated@@64)))
 :pattern ( ($generated@@144 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@145) (= ($generated@@514 ($generated@@268 $generated@@535)) ($generated@@515 $generated@@535)))
 :pattern ( ($generated@@514 ($generated@@268 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@154) ($generated@@221 $generated@@536 ($generated@@77 0))) (and (= ($generated@@268 ($generated@@326 $generated@@2 $generated@@536)) $generated@@536) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@536) ($generated@@77 0))))
 :pattern ( ($generated@@221 $generated@@536 ($generated@@77 0)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@537) $generated@@154) (= (type $generated@@538) $generated@@66)) ($generated@@221 $generated@@537 ($generated@@230 $generated@@538))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@537)) $generated@@537) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@537) ($generated@@230 $generated@@538))))
 :pattern ( ($generated@@221 $generated@@537 ($generated@@230 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@154) (= (type $generated@@540) $generated@@66)) ($generated@@221 $generated@@539 ($generated@@235 $generated@@540))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539)) $generated@@539) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@4) $generated@@539) ($generated@@235 $generated@@540))))
 :pattern ( ($generated@@221 $generated@@539 ($generated@@235 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@154) (= (type $generated@@542) $generated@@66)) ($generated@@221 $generated@@541 ($generated@@159 $generated@@542))) (and (= ($generated@@268 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@541)) $generated@@541) ($generated@@141 ($generated@@326 ($generated@@78 $generated@@154 $generated@@2) $generated@@541) ($generated@@159 $generated@@542))))
 :pattern ( ($generated@@221 $generated@@541 ($generated@@159 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@154) (= (type $generated@@544) $generated@@66)) ($generated@@221 $generated@@543 ($generated@@476 $generated@@544))) (and (= ($generated@@268 ($generated@@326 ($generated@@261 $generated@@154) $generated@@543)) $generated@@543) ($generated@@141 ($generated@@326 ($generated@@261 $generated@@154) $generated@@543) ($generated@@476 $generated@@544))))
 :pattern ( ($generated@@221 $generated@@543 ($generated@@476 $generated@@544)))
)))
(assert (= ($generated@@74 $generated@@138) $generated@@63))
(assert (= ($generated@@531 $generated@@138) $generated@@65))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@78 $generated@@154 $generated@@2)) (= (type $generated@@546) $generated@@66)) (= (type $generated@@547) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@545 ($generated@@159 $generated@@546) $generated@@547) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@154) (< 0 ($generated ($generated@@83 $generated@@545 $generated@@548)))) ($generated@@247 $generated@@548 $generated@@546 $generated@@547))
 :pattern ( ($generated@@83 $generated@@545 $generated@@548))
))))
 :pattern ( ($generated@@76 $generated@@545 ($generated@@159 $generated@@546) $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@145) (= (type $generated@@550) $generated@@66)) (= (type $generated@@551) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@551) (and ($generated@@143 $generated@@549) (exists (($generated@@552 T@U) ) (!  (and (= (type $generated@@552) $generated@@66) ($generated@@76 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
 :pattern ( ($generated@@76 $generated@@549 ($generated@@144 $generated@@550 $generated@@552) $generated@@551))
))))) ($generated@@247 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
 :pattern ( ($generated@@247 ($generated@@152 $generated@@549) $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@145) (= (type $generated@@554) $generated@@66)) (= (type $generated@@555) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@246 $generated@@555) (and ($generated@@143 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@66) ($generated@@76 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
 :pattern ( ($generated@@76 $generated@@553 ($generated@@144 $generated@@556 $generated@@554) $generated@@555))
))))) ($generated@@247 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@247 ($generated@@153 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@154) (= (type $generated@@558) $generated@@154)) (= ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)) ($generated@@242 ($generated@@220 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@220 ($generated@@242 $generated@@557) ($generated@@242 $generated@@558)))
)))
(assert (forall (($generated@@559 Int) ) (! (= ($generated@@268 ($generated@@8 ($generated@@240 $generated@@559))) ($generated@@242 ($generated@@268 ($generated@@8 $generated@@559))))
 :pattern ( ($generated@@268 ($generated@@8 ($generated@@240 $generated@@559))))
)))
(assert (forall (($generated@@560 T@U) ) (! (= ($generated@@268 ($generated@@242 $generated@@560)) ($generated@@242 ($generated@@268 $generated@@560)))
 :pattern ( ($generated@@268 ($generated@@242 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@262 (type $generated@@561))))
 (=> (and (= (type $generated@@561) ($generated@@261 $generated@@562)) (= ($generated@@260 $generated@@561) 0)) (= $generated@@561 ($generated@@259 $generated@@562))))
 :pattern ( ($generated@@260 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@564)))
 (=> (and (and (= (type $generated@@563) ($generated@@78 $generated@@566 $generated@@2)) (= (type $generated@@565) $generated@@2)) (<= 0 ($generated $generated@@565))) (= ($generated@@281 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)) (+ (- ($generated@@281 $generated@@563) ($generated ($generated@@83 $generated@@563 $generated@@564))) ($generated $generated@@565)))))
 :pattern ( ($generated@@281 ($generated@@84 $generated@@563 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@568) $generated@@2)) ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
 :pattern ( ($generated@@76 $generated@@568 $generated@@46 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@570) $generated@@3)) ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
 :pattern ( ($generated@@76 $generated@@570 $generated@@47 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@572) $generated@@4)) ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
 :pattern ( ($generated@@76 $generated@@572 $generated@@44 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@574) $generated@@434)) ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
 :pattern ( ($generated@@76 $generated@@574 $generated@@45 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@576) $generated@@154)) ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
 :pattern ( ($generated@@76 $generated@@576 $generated@@48 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@261 $generated@@154)) (= (type $generated@@578) $generated@@66)) (= ($generated@@141 $generated@@577 ($generated@@476 $generated@@578)) (forall (($generated@@579 Int) ) (!  (=> (and (<= 0 $generated@@579) (< $generated@@579 ($generated@@260 $generated@@577))) ($generated@@221 ($generated@@477 $generated@@577 $generated@@579) $generated@@578))
 :pattern ( ($generated@@477 $generated@@577 $generated@@579))
))))
 :pattern ( ($generated@@141 $generated@@577 ($generated@@476 $generated@@578)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 Int) ) (!  (=> (= (type $generated@@581) ($generated@@261 $generated@@154)) (=> (and (<= 0 $generated@@582) (< $generated@@582 ($generated@@260 $generated@@581))) (< ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@581 $generated@@582))) ($generated@@580 $generated@@581))))
 :pattern ( ($generated@@515 ($generated@@326 $generated@@145 ($generated@@477 $generated@@581 $generated@@582))))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) ($generated@@289 $generated@@154 $generated@@154)) (= (type $generated@@584) $generated@@66)) (= (type $generated@@585) $generated@@66)) ($generated@@141 $generated@@583 ($generated@@391 $generated@@584 $generated@@585))) (and (and ($generated@@141 ($generated@@287 $generated@@583) ($generated@@230 $generated@@584)) ($generated@@141 ($generated@@334 $generated@@583) ($generated@@230 $generated@@585))) ($generated@@141 ($generated@@365 $generated@@583) ($generated@@230 ($generated@@144 $generated@@584 $generated@@585)))))
 :pattern ( ($generated@@141 $generated@@583 ($generated@@391 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) ($generated@@307 $generated@@154 $generated@@154)) (= (type $generated@@587) $generated@@66)) (= (type $generated@@588) $generated@@66)) ($generated@@141 $generated@@586 ($generated@@399 $generated@@587 $generated@@588))) (and (and ($generated@@141 ($generated@@305 $generated@@586) ($generated@@235 $generated@@587)) ($generated@@141 ($generated@@345 $generated@@586) ($generated@@235 $generated@@588))) ($generated@@141 ($generated@@373 $generated@@586) ($generated@@235 ($generated@@144 $generated@@587 $generated@@588)))))
 :pattern ( ($generated@@141 $generated@@586 ($generated@@399 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@2) ($generated@@141 $generated@@589 $generated@@46))
 :pattern ( ($generated@@141 $generated@@589 $generated@@46))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@3) ($generated@@141 $generated@@590 $generated@@47))
 :pattern ( ($generated@@141 $generated@@590 $generated@@47))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@4) ($generated@@141 $generated@@591 $generated@@44))
 :pattern ( ($generated@@141 $generated@@591 $generated@@44))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@434) ($generated@@141 $generated@@592 $generated@@45))
 :pattern ( ($generated@@141 $generated@@592 $generated@@45))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@154) ($generated@@141 $generated@@593 $generated@@48))
 :pattern ( ($generated@@141 $generated@@593 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 (T@U) Bool)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () Int)
(declare-fun $generated@@611 () Int)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () Int)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@594) ($generated@@166 $generated@@79 $generated@@4)) (= (type $generated@@595) $generated@@79)) (= (type $generated@@596) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@599) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@603) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@606) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@609) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@612) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@615) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@618  (=> (= $generated@@594 ($generated@@165 $generated@@595 $generated@@596 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 15)) ($generated@@141 ($generated@@8 ($generated@@240 15)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 15)) $generated@@138) (=> (= $generated@@597 ($generated@@240 15)) (and (=> (= (ControlFlow 0 2) (- 0 14)) ($generated@@141 ($generated@@8 ($generated@@240 9)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 9)) $generated@@138) (=> (= $generated@@598 ($generated@@240 9)) (=> (and (and ($generated@@246 $generated@@599) ($generated@@600 $generated@@599)) (and (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@79) (=> (and (not (= $generated@@619 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@596 $generated@@619) $generated@@60))) (= ($generated@@83 $generated@@599 $generated@@619) ($generated@@83 $generated@@596 $generated@@619))))
 :pattern ( ($generated@@83 $generated@@599 $generated@@619))
)) ($generated@@134 $generated@@596 $generated@@599))) (and (=> (= (ControlFlow 0 2) (- 0 13)) ($generated@@141 ($generated@@8 ($generated@@240 14)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 14)) $generated@@138) (=> (= $generated@@601 ($generated@@240 14)) (and (=> (= (ControlFlow 0 2) (- 0 12)) ($generated@@141 ($generated@@8 ($generated@@240 22)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 22)) $generated@@138) (=> (= $generated@@602 ($generated@@240 22)) (=> (and (and ($generated@@246 $generated@@603) ($generated@@600 $generated@@603)) (and (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@79) (=> (and (not (= $generated@@620 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@599 $generated@@620) $generated@@60))) (= ($generated@@83 $generated@@603 $generated@@620) ($generated@@83 $generated@@599 $generated@@620))))
 :pattern ( ($generated@@83 $generated@@603 $generated@@620))
)) ($generated@@134 $generated@@599 $generated@@603))) (and (=> (= (ControlFlow 0 2) (- 0 11)) ($generated@@141 ($generated@@8 ($generated@@240 371)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 371)) $generated@@138) (=> (= $generated@@604 ($generated@@240 371)) (and (=> (= (ControlFlow 0 2) (- 0 10)) ($generated@@141 ($generated@@8 ($generated@@240 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 1)) $generated@@138) (=> (= $generated@@605 ($generated@@240 1)) (=> (and (and ($generated@@246 $generated@@606) ($generated@@600 $generated@@606)) (and (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@79) (=> (and (not (= $generated@@621 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@603 $generated@@621) $generated@@60))) (= ($generated@@83 $generated@@606 $generated@@621) ($generated@@83 $generated@@603 $generated@@621))))
 :pattern ( ($generated@@83 $generated@@606 $generated@@621))
)) ($generated@@134 $generated@@603 $generated@@606))) (and (=> (= (ControlFlow 0 2) (- 0 9)) ($generated@@141 ($generated@@8 ($generated@@240 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 1)) $generated@@138) (=> (= $generated@@607 ($generated@@240 1)) (and (=> (= (ControlFlow 0 2) (- 0 8)) ($generated@@141 ($generated@@8 ($generated@@240 2)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 2)) $generated@@138) (=> (= $generated@@608 ($generated@@240 2)) (=> (and (and ($generated@@246 $generated@@609) ($generated@@600 $generated@@609)) (and (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@79) (=> (and (not (= $generated@@622 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@606 $generated@@622) $generated@@60))) (= ($generated@@83 $generated@@609 $generated@@622) ($generated@@83 $generated@@606 $generated@@622))))
 :pattern ( ($generated@@83 $generated@@609 $generated@@622))
)) ($generated@@134 $generated@@606 $generated@@609))) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@141 ($generated@@8 ($generated@@240 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 1)) $generated@@138) (=> (= $generated@@610 ($generated@@240 1)) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@141 ($generated@@8 ($generated@@240 1)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 1)) $generated@@138) (=> (= $generated@@611 ($generated@@240 1)) (=> (and (and ($generated@@246 $generated@@612) ($generated@@600 $generated@@612)) (and (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@79) (=> (and (not (= $generated@@623 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@609 $generated@@623) $generated@@60))) (= ($generated@@83 $generated@@612 $generated@@623) ($generated@@83 $generated@@609 $generated@@623))))
 :pattern ( ($generated@@83 $generated@@612 $generated@@623))
)) ($generated@@134 $generated@@609 $generated@@612))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@141 ($generated@@8 ($generated@@240 13)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 13)) $generated@@138) (=> (= $generated@@613 ($generated@@240 13)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@141 ($generated@@8 ($generated@@240 13)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 13)) $generated@@138) (=> (= $generated@@614 ($generated@@240 13)) (=> (and (and ($generated@@246 $generated@@615) ($generated@@600 $generated@@615)) (and (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@79) (=> (and (not (= $generated@@624 $generated@@595)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@612 $generated@@624) $generated@@60))) (= ($generated@@83 $generated@@615 $generated@@624) ($generated@@83 $generated@@612 $generated@@624))))
 :pattern ( ($generated@@83 $generated@@615 $generated@@624))
)) ($generated@@134 $generated@@612 $generated@@615))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@141 ($generated@@8 ($generated@@240 60)) $generated@@138)) (=> ($generated@@141 ($generated@@8 ($generated@@240 60)) $generated@@138) (=> (and (= $generated@@616 ($generated@@240 60)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@141 ($generated@@8 ($generated@@240 60)) $generated@@138)))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@625  (=> (and (and ($generated@@246 $generated@@596) ($generated@@600 $generated@@596)) (and (= 8 $generated@@617) (= (ControlFlow 0 16) 2))) $generated@@618)))
$generated@@625)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 () Int)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 () T@U)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@T) T@U)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@89 (T@U) Int)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@149 (T@U T@U T@U) Bool)
(declare-fun $generated@@150 (Int) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@176 (Int) T@U)
(declare-fun $generated@@177 (Int) Bool)
(declare-fun $generated@@178 (Int) Int)
(declare-fun $generated@@179 (Int Int) Bool)
(declare-fun $generated@@180 (Int Int) Bool)
(declare-fun $generated@@181 (T@U Int Int) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@193 (T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@195 (T@T T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@256 (T@U T@U) T@U)
(declare-fun $generated@@257 (T@U T@U) Bool)
(declare-fun $generated@@264 (Int Int) Int)
(declare-fun $generated@@265 (Int Int) Bool)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@283 (T@U T@U T@U) Bool)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@304 (Int Int) Int)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@321 (T@U) Int)
(declare-fun $generated@@322 (T@T) T@U)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@330 (T@T T@T) T@U)
(declare-fun $generated@@331 (T@T T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@T) T@U)
(declare-fun $generated@@349 (T@T T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@351 (T@T) T@T)
(declare-fun $generated@@372 (T@T T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@450 (T@U T@U) T@U)
(declare-fun $generated@@458 (T@U T@U) T@U)
(declare-fun $generated@@476 (T@T) T@U)
(declare-fun $generated@@500 () T@T)
(declare-fun $generated@@513 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@548 (T@U Int) T@U)
(declare-fun $generated@@557 (T@U) Int)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@567 (T@U) T@U)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@588 (T@U) Int)
(declare-fun $generated@@589 (T@U) Int)
(declare-fun $generated@@610 (T@U) T@U)
(declare-fun $generated@@661 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@61) $generated@@70)) (= (type $generated@@62) $generated@@67)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@96 $generated@@97)) 11)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@78 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@78 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@78 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@78 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@78 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@69 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@80)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@69 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 14)) (forall (($generated@@140 T@U) ) (! (let (($generated@@141 (type $generated@@140)))
(= (type ($generated@@76 $generated@@140)) $generated@@141))
 :pattern ( ($generated@@76 $generated@@140))
))) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@84 $generated@@142)) $generated@@66)
 :pattern ( ($generated@@84 $generated@@142))
))) (= (type $generated@@85) $generated@@66)) (forall (($generated@@143 T@T) ) (! (= (type ($generated@@87 $generated@@143)) ($generated@@78 $generated@@143 $generated@@4))
 :pattern ( ($generated@@87 $generated@@143))
))))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@145) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 ($generated@@76 $generated@@145)) (and (not (= 3 $generated@@74)) (and (and ($generated@@77 $generated@@144) ($generated@@83 $generated@@145 ($generated@@84 $generated@@85))) (not ($generated@@86 $generated@@145 ($generated@@87 $generated@@81))))))) (and ($generated@@88 ($generated@@76 $generated@@145)) (= ($generated@@75 ($generated@@76 $generated@@145)) (let (($generated@@146 ($generated@@89 ($generated@@76 $generated@@145))))
$generated@@146))))
 :weight 3
 :pattern ( ($generated@@75 ($generated@@76 $generated@@145)) ($generated@@77 $generated@@144))
))))
(assert (forall (($generated@@148 T@U) ) (! (= (type ($generated@@147 $generated@@148)) $generated@@67)
 :pattern ( ($generated@@147 $generated@@148))
)))
(assert (= ($generated@@147 $generated@@44) $generated@@49))
(assert (= ($generated@@147 $generated@@45) $generated@@50))
(assert (= ($generated@@147 $generated@@46) $generated@@51))
(assert (= ($generated@@147 $generated@@47) $generated@@52))
(assert (= ($generated@@147 $generated@@48) $generated@@53))
(assert (forall (($generated@@151 Int) ) (! (= (type ($generated@@150 $generated@@151)) $generated@@66)
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@2) (= (type $generated@@153) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@149 $generated@@152 ($generated@@150 0) $generated@@153))
 :pattern ( ($generated@@149 $generated@@152 ($generated@@150 0) $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and (= (type $generated@@155) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@156) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@154 $generated@@155 $generated@@156)) (forall (($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@79) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@155 $generated@@157) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@156 $generated@@157) $generated@@60))
)))
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@158) $generated@@2) (= (type $generated@@159) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@149 $generated@@158 $generated@@85 $generated@@159))
 :pattern ( ($generated@@149 $generated@@158 $generated@@85 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> (= (type $generated@@160) $generated@@2) ($generated@@83 $generated@@160 ($generated@@150 0)))
 :pattern ( ($generated@@83 $generated@@160 ($generated@@150 0)))
)))
(assert  (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@66)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@66) (= (type $generated@@167) $generated@@66)) (= (type $generated@@168) $generated@@163)) ($generated@@83 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@83 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@81)
 :pattern ( ($generated@@170 $generated@@172))
)) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@81)
 :pattern ( ($generated@@171 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) $generated@@163) (= (type $generated@@175) $generated@@163)) true) (= ($generated@@169 $generated@@174 $generated@@175)  (and (= ($generated@@170 $generated@@174) ($generated@@170 $generated@@175)) (= ($generated@@171 $generated@@174) ($generated@@171 $generated@@175)))))
 :pattern ( ($generated@@169 $generated@@174 $generated@@175))
)))
(assert  (and (forall (($generated@@182 Int) ) (! (= (type ($generated@@176 $generated@@182)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@176 $generated@@182))
)) (forall (($generated@@183 T@U) ($generated@@184 Int) ($generated@@185 Int) ) (! (= (type ($generated@@181 $generated@@183 $generated@@184 $generated@@185)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@181 $generated@@183 $generated@@184 $generated@@185))
))))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@186 Int) ) (!  (=> (or ($generated@@177 $generated@@186) (and (not (= 2 $generated@@74)) (<= ($generated@@178 1) $generated@@186))) (and (forall (($generated@@187 Int) ) (!  (=> (<= ($generated@@178 1) $generated@@187) (=> (<= $generated@@187 $generated@@186) ($generated@@180 $generated@@187 $generated@@186)))
 :pattern ( ($generated@@179 $generated@@187 $generated@@186))
)) (= ($generated@@176 $generated@@186) ($generated@@181 $generated@@85 $generated@@186 $generated@@186))))
 :pattern ( ($generated@@176 $generated@@186))
))))
(assert (forall (($generated@@190 T@U) ) (! (= (type ($generated@@188 $generated@@190)) $generated@@66)
 :pattern ( ($generated@@188 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and (and (= (type $generated@@191) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@192) $generated@@66)) ($generated@@83 $generated@@191 ($generated@@188 $generated@@192))) ($generated@@189 $generated@@191))
 :pattern ( ($generated@@83 $generated@@191 ($generated@@188 $generated@@192)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@199 $generated@@200)) 16)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@201 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@195 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@197 ($generated@@195 $generated@@203 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@195 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@197 (type $generated@@205))))
(= (type ($generated@@193 $generated@@205 $generated@@206 $generated@@207)) $generated@@208))
 :pattern ( ($generated@@193 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(let (($generated@@214 (type $generated@@210)))
(= (type ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@195 $generated@@214 $generated@@213))))
 :pattern ( ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@197 (type $generated@@215))))
 (=> (= (type $generated@@218) $generated@@219) (= ($generated@@193 ($generated@@198 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@216 $generated@@217) $generated@@218)))
 :weight 0
))) (and (and (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@193 ($generated@@198 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@193 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@193 ($generated@@198 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@193 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or true (= ($generated@@193 ($generated@@198 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@193 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ) (! (= (type ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241)) ($generated@@195 $generated@@79 $generated@@4))
 :pattern ( ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 Bool) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@69 (type $generated@@247))))
 (=> (and (and (and (and (= (type $generated@@242) $generated@@79) (= (type $generated@@243) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@244) ($generated@@68 $generated@@4))) (= (type $generated@@246) $generated@@79)) (= (type $generated@@247) ($generated@@68 $generated@@248))) (= ($generated@@0 ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))  (=> (and (not (= $generated@@246 $generated@@242)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@243 $generated@@246) $generated@@244))) $generated@@245))))
 :pattern ( ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (! (let (($generated@@252 ($generated@@90 (type $generated@@250))))
(= (type ($generated@@249 $generated@@250 $generated@@251)) ($generated@@78 $generated@@252 $generated@@4)))
 :pattern ( ($generated@@249 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (! (let (($generated@@255 ($generated@@90 (type $generated@@253))))
 (=> (and (= (type $generated@@253) ($generated@@78 $generated@@255 $generated@@4)) (= (type $generated@@254) ($generated@@78 $generated@@255 $generated@@4))) (= ($generated@@249 ($generated@@249 $generated@@253 $generated@@254) $generated@@254) ($generated@@249 $generated@@253 $generated@@254))))
 :pattern ( ($generated@@249 ($generated@@249 $generated@@253 $generated@@254) $generated@@254))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (= (type ($generated@@256 $generated@@258 $generated@@259)) $generated@@163)
 :pattern ( ($generated@@256 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (= (type $generated@@260) $generated@@66) (= (type $generated@@261) $generated@@66)) (= (type $generated@@262) $generated@@81)) (= (type $generated@@263) $generated@@81)) (= ($generated@@83 ($generated@@256 $generated@@262 $generated@@263) ($generated@@162 $generated@@260 $generated@@261))  (and ($generated@@257 $generated@@262 $generated@@260) ($generated@@257 $generated@@263 $generated@@261))))
 :pattern ( ($generated@@83 ($generated@@256 $generated@@262 $generated@@263) ($generated@@162 $generated@@260 $generated@@261)))
)))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@266 Int) ($generated@@267 Int) ) (!  (=> (or ($generated@@265 $generated@@266 $generated@@267) (and (not (= 4 $generated@@74)) (and (<= ($generated@@178 1) $generated@@266) (<= ($generated@@178 1) $generated@@267)))) (and (and (and ($generated@@177 $generated@@266) ($generated@@177 $generated@@267)) (let (($generated@@268 ($generated@@249 ($generated@@176 $generated@@266) ($generated@@176 $generated@@267))))
($generated@@82 $generated@@268))) (= ($generated@@264 $generated@@266 $generated@@267) (let (($generated@@269 ($generated@@249 ($generated@@176 $generated@@266) ($generated@@176 $generated@@267))))
($generated@@75 $generated@@269)))))
 :pattern ( ($generated@@264 $generated@@266 $generated@@267))
))))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@163) (= (type $generated@@271) $generated@@163)) (= ($generated@@169 $generated@@270 $generated@@271) (= $generated@@270 $generated@@271)))
 :pattern ( ($generated@@169 $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@273) $generated@@66)) (= ($generated@@83 $generated@@272 ($generated@@84 $generated@@273)) (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@81) ($generated@@0 ($generated@@92 $generated@@272 $generated@@274))) ($generated@@257 $generated@@274 $generated@@273))
 :pattern ( ($generated@@92 $generated@@272 $generated@@274))
))))
 :pattern ( ($generated@@83 $generated@@272 ($generated@@84 $generated@@273)))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@66)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@278) $generated@@66)) (= ($generated@@83 $generated@@277 ($generated@@275 $generated@@278)) (forall (($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@81) ($generated@@0 ($generated@@92 $generated@@277 $generated@@279))) ($generated@@257 $generated@@279 $generated@@278))
 :pattern ( ($generated@@92 $generated@@277 $generated@@279))
))))
 :pattern ( ($generated@@83 $generated@@277 ($generated@@275 $generated@@278)))
)))
(assert (forall (($generated@@280 Int) ) (! (= ($generated@@178 $generated@@280) $generated@@280)
 :pattern ( ($generated@@178 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (! (= ($generated@@76 $generated@@281) $generated@@281)
 :pattern ( ($generated@@76 $generated@@281))
)))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) ($generated@@78 $generated@@81 $generated@@4)) (or ($generated@@82 $generated@@282) (and (not (= 3 $generated@@74)) (and ($generated@@83 $generated@@282 ($generated@@84 $generated@@85)) (not ($generated@@86 $generated@@282 ($generated@@87 $generated@@81))))))) (<= ($generated@@178 1) ($generated@@75 $generated@@282)))
 :pattern ( ($generated@@75 $generated@@282))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@284) $generated@@66) (= (type $generated@@285) $generated@@66)) (= (type $generated@@286) $generated@@81)) (= (type $generated@@287) $generated@@81)) (= (type $generated@@288) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@77 $generated@@288)) (= ($generated@@149 ($generated@@256 $generated@@286 $generated@@287) ($generated@@162 $generated@@284 $generated@@285) $generated@@288)  (and ($generated@@283 $generated@@286 $generated@@284 $generated@@288) ($generated@@283 $generated@@287 $generated@@285 $generated@@288))))
 :pattern ( ($generated@@149 ($generated@@256 $generated@@286 $generated@@287) ($generated@@162 $generated@@284 $generated@@285) $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@70)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@163) (= ($generated@@161 $generated@@291) (= ($generated@@289 $generated@@291) $generated@@61)))
 :pattern ( ($generated@@161 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@163) ($generated@@161 $generated@@292)) (exists (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (and (and (= (type $generated@@293) $generated@@81) (= (type $generated@@294) $generated@@81)) (= $generated@@292 ($generated@@256 $generated@@293 $generated@@294)))
 :no-pattern (type $generated@@293)
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
)))
 :pattern ( ($generated@@161 $generated@@292))
)))
(assert  (and (and (forall (($generated@@299 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@299)) 17)) (forall (($generated@@300 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@300)) $generated@@300)
 :pattern ( ($generated@@297 $generated@@300))
))) (forall (($generated@@301 T@T) ) (! (= (type ($generated@@295 $generated@@301)) ($generated@@297 $generated@@301))
 :pattern ( ($generated@@295 $generated@@301))
))))
(assert (forall (($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@302)) 0)
 :pattern ( ($generated@@295 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (= (type $generated@@303) $generated@@2) (= ($generated@@83 $generated@@303 $generated@@85) (<= ($generated@@178 1) ($generated $generated@@303))))
 :pattern ( ($generated@@83 $generated@@303 $generated@@85))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@305 Int) ($generated@@306 Int) ) (!  (=> (or ($generated@@180 ($generated@@178 $generated@@305) ($generated@@178 $generated@@306)) (and (not (= 1 $generated@@74)) (and (<= ($generated@@178 1) $generated@@305) (<= ($generated@@178 1) $generated@@306)))) (= ($generated@@179 ($generated@@178 $generated@@305) ($generated@@178 $generated@@306)) (exists (($generated@@307 Int) ) (! (= ($generated@@304 ($generated@@178 $generated@@305) $generated@@307) ($generated@@178 $generated@@306))
 :pattern ( ($generated@@304 $generated@@305 $generated@@307))
))))
 :weight 3
 :pattern ( ($generated@@179 ($generated@@178 $generated@@305) ($generated@@178 $generated@@306)))
))))
(assert (forall (($generated@@309 T@U) ) (! (= (type ($generated@@308 $generated@@309)) $generated@@81)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@66) (= (type $generated@@312) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@283 ($generated@@308 $generated@@310) $generated@@311 $generated@@312) ($generated@@149 $generated@@310 $generated@@311 $generated@@312)))
 :pattern ( ($generated@@283 ($generated@@308 $generated@@310) $generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@313) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@314) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@315) $generated@@81)) (= (type $generated@@316) $generated@@66)) ($generated@@154 $generated@@313 $generated@@314)) ($generated@@283 $generated@@315 $generated@@316 $generated@@313)) ($generated@@283 $generated@@315 $generated@@316 $generated@@314))
 :pattern ( ($generated@@154 $generated@@313 $generated@@314) ($generated@@283 $generated@@315 $generated@@316 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@317) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@318) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@320) $generated@@66)) ($generated@@154 $generated@@317 $generated@@318)) ($generated@@149 $generated@@319 $generated@@320 $generated@@317)) ($generated@@149 $generated@@319 $generated@@320 $generated@@318))
 :pattern ( ($generated@@154 $generated@@317 $generated@@318) ($generated@@149 $generated@@319 $generated@@320 $generated@@317))
)))
(assert (forall (($generated@@323 T@T) ) (! (= (type ($generated@@322 $generated@@323)) ($generated@@78 $generated@@323 $generated@@2))
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@90 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@78 $generated@@325 $generated@@2)) (and (= (= ($generated@@321 $generated@@324) 0) (= $generated@@324 ($generated@@322 $generated@@325))) (=> (not (= ($generated@@321 $generated@@324) 0)) (exists (($generated@@326 T@U) ) (!  (and (= (type $generated@@326) $generated@@325) (< 0 ($generated ($generated@@92 $generated@@324 $generated@@326))))
 :no-pattern (type $generated@@326)
 :no-pattern ($generated $generated@@326)
 :no-pattern ($generated@@0 $generated@@326)
))))))
 :pattern ( ($generated@@321 $generated@@324))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@78 $generated@@81 $generated@@4)) ($generated@@88 $generated@@327)) (and ($generated@@0 ($generated@@92 $generated@@327 ($generated@@308 ($generated@@8 ($generated@@89 $generated@@327))))) (forall (($generated@@328 T@U) ) (!  (=> (and (and (= (type $generated@@328) $generated@@2) true) ($generated@@0 ($generated@@92 $generated@@327 ($generated@@308 $generated@@328)))) (<= ($generated $generated@@328) ($generated@@89 $generated@@327)))
 :pattern ( ($generated@@92 $generated@@327 ($generated@@308 $generated@@328)))
))))
 :pattern ( ($generated@@89 $generated@@327))
)))
(assert  (and (and (and (and (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (= ($generated@@1 ($generated@@331 $generated@@334 $generated@@335)) 18)) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@332 ($generated@@331 $generated@@336 $generated@@337)) $generated@@336)
 :pattern ( ($generated@@331 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@333 ($generated@@331 $generated@@338 $generated@@339)) $generated@@339)
 :pattern ( ($generated@@331 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@332 (type $generated@@340))))
(= (type ($generated@@329 $generated@@340)) ($generated@@78 $generated@@341 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@340))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= (type ($generated@@330 $generated@@342 $generated@@343)) ($generated@@331 $generated@@342 $generated@@343))
 :pattern ( ($generated@@330 $generated@@342 $generated@@343))
))))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@T) ) (! (let (($generated@@346 (type $generated@@344)))
 (not ($generated@@0 ($generated@@92 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344))))
 :pattern ( (let (($generated@@346 (type $generated@@344)))
($generated@@92 ($generated@@329 ($generated@@330 $generated@@346 $generated@@345)) $generated@@344)))
)))
(assert  (and (and (and (and (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (= ($generated@@1 ($generated@@349 $generated@@352 $generated@@353)) 19)) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@350 ($generated@@349 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@349 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (! (= ($generated@@351 ($generated@@349 $generated@@356 $generated@@357)) $generated@@357)
 :pattern ( ($generated@@349 $generated@@356 $generated@@357))
))) (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@350 (type $generated@@358))))
(= (type ($generated@@347 $generated@@358)) ($generated@@78 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@358))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= (type ($generated@@348 $generated@@360 $generated@@361)) ($generated@@349 $generated@@360 $generated@@361))
 :pattern ( ($generated@@348 $generated@@360 $generated@@361))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@T) ) (! (let (($generated@@364 (type $generated@@362)))
 (not ($generated@@0 ($generated@@92 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362))))
 :pattern ( (let (($generated@@364 (type $generated@@362)))
($generated@@92 ($generated@@347 ($generated@@348 $generated@@364 $generated@@363)) $generated@@362)))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@90 (type $generated@@365))))
 (=> (and (= (type $generated@@365) ($generated@@78 $generated@@367 $generated@@4)) (= (type $generated@@366) ($generated@@78 $generated@@367 $generated@@4))) (= ($generated@@86 $generated@@365 $generated@@366) (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@367) (= ($generated@@0 ($generated@@92 $generated@@365 $generated@@368)) ($generated@@0 ($generated@@92 $generated@@366 $generated@@368))))
 :pattern ( ($generated@@92 $generated@@365 $generated@@368))
 :pattern ( ($generated@@92 $generated@@366 $generated@@368))
)))))
 :pattern ( ($generated@@86 $generated@@365 $generated@@366))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@90 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@78 $generated@@370 $generated@@2)) (= ($generated@@189 $generated@@369) (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@370) (and (<= 0 ($generated ($generated@@92 $generated@@369 $generated@@371))) (<= ($generated ($generated@@92 $generated@@369 $generated@@371)) ($generated@@321 $generated@@369))))
 :pattern ( ($generated@@92 $generated@@369 $generated@@371))
)))))
 :pattern ( ($generated@@189 $generated@@369))
)))
(assert (forall (($generated@@373 T@T) ($generated@@374 T@U) ) (! (= (type ($generated@@372 $generated@@373 $generated@@374)) $generated@@373)
 :pattern ( ($generated@@372 $generated@@373 $generated@@374))
)))
(assert (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@81) ($generated@@257 $generated@@375 $generated@@85)) (and (= ($generated@@308 ($generated@@372 $generated@@2 $generated@@375)) $generated@@375) ($generated@@83 ($generated@@372 $generated@@2 $generated@@375) $generated@@85)))
 :pattern ( ($generated@@257 $generated@@375 $generated@@85))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@333 (type $generated@@376))))
(let (($generated@@378 ($generated@@332 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@331 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@330 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) ($generated@@0 ($generated@@92 ($generated@@329 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@329 $generated@@376))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@333 (type $generated@@381))))
(= (type ($generated@@380 $generated@@381)) ($generated@@78 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@333 (type $generated@@383))))
(let (($generated@@385 ($generated@@332 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@331 $generated@@385 $generated@@384)) (or (= $generated@@383 ($generated@@330 $generated@@385 $generated@@384)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@384) ($generated@@0 ($generated@@92 ($generated@@380 $generated@@383) $generated@@386)))
 :no-pattern (type $generated@@386)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
))))))
 :pattern ( ($generated@@380 $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@351 (type $generated@@387))))
(let (($generated@@389 ($generated@@350 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@349 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@348 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) ($generated@@0 ($generated@@92 ($generated@@347 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@347 $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@351 (type $generated@@392))))
(= (type ($generated@@391 $generated@@392)) ($generated@@78 $generated@@393 $generated@@4)))
 :pattern ( ($generated@@391 $generated@@392))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@351 (type $generated@@394))))
(let (($generated@@396 ($generated@@350 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@349 $generated@@396 $generated@@395)) (or (= $generated@@394 ($generated@@348 $generated@@396 $generated@@395)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@395) ($generated@@0 ($generated@@92 ($generated@@391 $generated@@394) $generated@@397)))
 :no-pattern (type $generated@@397)
 :no-pattern ($generated $generated@@397)
 :no-pattern ($generated@@0 $generated@@397)
))))))
 :pattern ( ($generated@@391 $generated@@394))
)))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@398 Int) ($generated@@399 Int) ) (!  (=> (or ($generated@@265 $generated@@398 $generated@@399) (and (not (= 4 $generated@@74)) (and (<= ($generated@@178 1) $generated@@398) (<= ($generated@@178 1) $generated@@399)))) (<= ($generated@@178 1) ($generated@@264 $generated@@398 $generated@@399)))
 :pattern ( ($generated@@264 $generated@@398 $generated@@399))
))))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@400 Int) ) (!  (=> (or ($generated@@177 ($generated@@178 $generated@@400)) (and (not (= 2 $generated@@74)) (<= ($generated@@178 1) $generated@@400))) (and (forall (($generated@@401 Int) ) (!  (=> (<= ($generated@@178 1) $generated@@401) (=> (<= $generated@@401 ($generated@@178 $generated@@400)) ($generated@@180 $generated@@401 ($generated@@178 $generated@@400))))
 :pattern ( ($generated@@179 $generated@@401 $generated@@400))
)) (= ($generated@@176 ($generated@@178 $generated@@400)) ($generated@@181 $generated@@85 ($generated@@178 $generated@@400) ($generated@@178 $generated@@400)))))
 :weight 3
 :pattern ( ($generated@@176 ($generated@@178 $generated@@400)))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@403) $generated@@66)) (= ($generated@@83 $generated@@402 ($generated@@188 $generated@@403)) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@81) (< 0 ($generated ($generated@@92 $generated@@402 $generated@@404)))) ($generated@@257 $generated@@404 $generated@@403))
 :pattern ( ($generated@@92 $generated@@402 $generated@@404))
))))
 :pattern ( ($generated@@83 $generated@@402 ($generated@@188 $generated@@403)))
)))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@405 Int) ) (!  (=> (or ($generated@@177 $generated@@405) (and (not (= 2 $generated@@74)) (<= ($generated@@178 1) $generated@@405))) ($generated@@83 ($generated@@176 $generated@@405) ($generated@@84 $generated@@85)))
 :pattern ( ($generated@@176 $generated@@405))
))))
(assert  (=> (<= 4 $generated@@74) (forall (($generated@@406 Int) ($generated@@407 Int) ) (!  (=> (or ($generated@@265 ($generated@@178 $generated@@406) ($generated@@178 $generated@@407)) (and (not (= 4 $generated@@74)) (and (<= ($generated@@178 1) $generated@@406) (<= ($generated@@178 1) $generated@@407)))) (and (and (and ($generated@@177 ($generated@@178 $generated@@406)) ($generated@@177 ($generated@@178 $generated@@407))) (let (($generated@@408 ($generated@@249 ($generated@@176 ($generated@@178 $generated@@406)) ($generated@@176 ($generated@@178 $generated@@407)))))
($generated@@82 $generated@@408))) (= ($generated@@264 ($generated@@178 $generated@@406) ($generated@@178 $generated@@407)) (let (($generated@@409 ($generated@@249 ($generated@@176 ($generated@@178 $generated@@406)) ($generated@@176 ($generated@@178 $generated@@407)))))
($generated@@75 $generated@@409)))))
 :weight 3
 :pattern ( ($generated@@264 ($generated@@178 $generated@@406) ($generated@@178 $generated@@407)))
))))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
 (=> (and (= (type $generated@@410) ($generated@@78 $generated@@413 $generated@@4)) (= (type $generated@@411) ($generated@@78 $generated@@413 $generated@@4))) (= ($generated@@0 ($generated@@92 ($generated@@249 $generated@@410 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@92 $generated@@410 $generated@@412)) ($generated@@0 ($generated@@92 $generated@@411 $generated@@412))))))
 :pattern ( ($generated@@92 ($generated@@249 $generated@@410 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (and (= (type $generated@@414) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@415) $generated@@66)) (= (type $generated@@416) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@414 ($generated@@84 $generated@@415) $generated@@416) (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@81) ($generated@@0 ($generated@@92 $generated@@414 $generated@@417))) ($generated@@283 $generated@@417 $generated@@415 $generated@@416))
 :pattern ( ($generated@@92 $generated@@414 $generated@@417))
))))
 :pattern ( ($generated@@149 $generated@@414 ($generated@@84 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (= (type $generated@@418) ($generated@@78 $generated@@81 $generated@@4)) (= (type $generated@@419) $generated@@66)) (= (type $generated@@420) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@418 ($generated@@275 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@81) ($generated@@0 ($generated@@92 $generated@@418 $generated@@421))) ($generated@@283 $generated@@421 $generated@@419 $generated@@420))
 :pattern ( ($generated@@92 $generated@@418 $generated@@421))
))))
 :pattern ( ($generated@@149 $generated@@418 ($generated@@275 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 (type $generated@@422)))
(= ($generated ($generated@@92 ($generated@@322 $generated@@423) $generated@@422)) 0))
 :pattern ( (let (($generated@@423 (type $generated@@422)))
($generated@@92 ($generated@@322 $generated@@423) $generated@@422)))
)))
(assert  (and (forall (($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@426)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@424 $generated@@426))
)) (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@333 (type $generated@@427))))
(let (($generated@@429 ($generated@@332 (type $generated@@427))))
(= (type ($generated@@425 $generated@@427)) ($generated@@78 $generated@@429 $generated@@428))))
 :pattern ( ($generated@@425 $generated@@427))
))))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) ($generated@@331 $generated@@81 $generated@@81)) (= (type $generated@@431) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@424 $generated@@430) $generated@@431))  (and ($generated@@0 ($generated@@92 ($generated@@329 $generated@@430) ($generated@@170 ($generated@@372 $generated@@163 $generated@@431)))) (= ($generated@@92 ($generated@@425 $generated@@430) ($generated@@170 ($generated@@372 $generated@@163 $generated@@431))) ($generated@@171 ($generated@@372 $generated@@163 $generated@@431))))))
 :pattern ( ($generated@@92 ($generated@@424 $generated@@430) $generated@@431))
)))
(assert  (and (forall (($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@434)) ($generated@@78 $generated@@81 $generated@@4))
 :pattern ( ($generated@@432 $generated@@434))
)) (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@351 (type $generated@@435))))
(let (($generated@@437 ($generated@@350 (type $generated@@435))))
(= (type ($generated@@433 $generated@@435)) ($generated@@78 $generated@@437 $generated@@436))))
 :pattern ( ($generated@@433 $generated@@435))
))))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) ($generated@@349 $generated@@81 $generated@@81)) (= (type $generated@@439) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@432 $generated@@438) $generated@@439))  (and ($generated@@0 ($generated@@92 ($generated@@347 $generated@@438) ($generated@@170 ($generated@@372 $generated@@163 $generated@@439)))) (= ($generated@@92 ($generated@@433 $generated@@438) ($generated@@170 ($generated@@372 $generated@@163 $generated@@439))) ($generated@@171 ($generated@@372 $generated@@163 $generated@@439))))))
 :pattern ( ($generated@@92 ($generated@@432 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (let (($generated@@442 (type $generated@@441)))
(let (($generated@@443 ($generated@@332 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@331 $generated@@443 $generated@@442)) (= ($generated@@0 ($generated@@92 ($generated@@380 $generated@@440) $generated@@441)) (exists (($generated@@444 T@U) ) (!  (and (= (type $generated@@444) $generated@@443) (and ($generated@@0 ($generated@@92 ($generated@@329 $generated@@440) $generated@@444)) (= $generated@@441 ($generated@@92 ($generated@@425 $generated@@440) $generated@@444))))
 :pattern ( ($generated@@92 ($generated@@329 $generated@@440) $generated@@444))
 :pattern ( ($generated@@92 ($generated@@425 $generated@@440) $generated@@444))
))))))
 :pattern ( ($generated@@92 ($generated@@380 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@446)))
(let (($generated@@448 ($generated@@350 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@349 $generated@@448 $generated@@447)) (= ($generated@@0 ($generated@@92 ($generated@@391 $generated@@445) $generated@@446)) (exists (($generated@@449 T@U) ) (!  (and (= (type $generated@@449) $generated@@448) (and ($generated@@0 ($generated@@92 ($generated@@347 $generated@@445) $generated@@449)) (= $generated@@446 ($generated@@92 ($generated@@433 $generated@@445) $generated@@449))))
 :pattern ( ($generated@@92 ($generated@@347 $generated@@445) $generated@@449))
 :pattern ( ($generated@@92 ($generated@@433 $generated@@445) $generated@@449))
))))))
 :pattern ( ($generated@@92 ($generated@@391 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (! (= (type ($generated@@450 $generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@450 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (and (and (= (type $generated@@453) ($generated@@331 $generated@@81 $generated@@81)) (= (type $generated@@454) $generated@@66)) (= (type $generated@@455) $generated@@66)) (= (type $generated@@456) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456) (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@329 $generated@@453) $generated@@457))) (and ($generated@@283 ($generated@@92 ($generated@@425 $generated@@453) $generated@@457) $generated@@455 $generated@@456) ($generated@@283 $generated@@457 $generated@@454 $generated@@456)))
 :pattern ( ($generated@@92 ($generated@@425 $generated@@453) $generated@@457))
 :pattern ( ($generated@@92 ($generated@@329 $generated@@453) $generated@@457))
))))
 :pattern ( ($generated@@149 $generated@@453 ($generated@@450 $generated@@454 $generated@@455) $generated@@456))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (! (= (type ($generated@@458 $generated@@459 $generated@@460)) $generated@@66)
 :pattern ( ($generated@@458 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (and (= (type $generated@@461) ($generated@@349 $generated@@81 $generated@@81)) (= (type $generated@@462) $generated@@66)) (= (type $generated@@463) $generated@@66)) (= (type $generated@@464) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@461 ($generated@@458 $generated@@462 $generated@@463) $generated@@464) (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@347 $generated@@461) $generated@@465))) (and ($generated@@283 ($generated@@92 ($generated@@433 $generated@@461) $generated@@465) $generated@@463 $generated@@464) ($generated@@283 $generated@@465 $generated@@462 $generated@@464)))
 :pattern ( ($generated@@92 ($generated@@433 $generated@@461) $generated@@465))
 :pattern ( ($generated@@92 ($generated@@347 $generated@@461) $generated@@465))
))))
 :pattern ( ($generated@@149 $generated@@461 ($generated@@458 $generated@@462 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@90 (type $generated@@466))))
 (=> (and (and (= (type $generated@@466) ($generated@@78 $generated@@468 $generated@@4)) (= (type $generated@@467) ($generated@@78 $generated@@468 $generated@@4))) ($generated@@86 $generated@@466 $generated@@467)) (= $generated@@466 $generated@@467)))
 :pattern ( ($generated@@86 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 Int) ($generated@@471 Int) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@472) $generated@@81)) (= ($generated@@0 ($generated@@92 ($generated@@181 $generated@@469 $generated@@470 $generated@@471) $generated@@472))  (and ($generated@@257 $generated@@472 $generated@@469) (and (<= ($generated ($generated@@372 $generated@@2 $generated@@472)) $generated@@470) ($generated@@179 ($generated ($generated@@372 $generated@@2 $generated@@472)) $generated@@471)))))
 :pattern ( ($generated@@92 ($generated@@181 $generated@@469 $generated@@470 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@473) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@474) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@475) ($generated@@78 $generated@@79 $generated@@80))) (not (= $generated@@473 $generated@@475))) (and ($generated@@154 $generated@@473 $generated@@474) ($generated@@154 $generated@@474 $generated@@475))) ($generated@@154 $generated@@473 $generated@@475))
 :pattern ( ($generated@@154 $generated@@473 $generated@@474) ($generated@@154 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@T) ) (! (= (type ($generated@@476 $generated@@477)) ($generated@@78 $generated@@477 $generated@@4))
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@351 (type $generated@@478))))
(let (($generated@@480 ($generated@@350 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@349 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@348 $generated@@480 $generated@@479)) (= ($generated@@347 $generated@@478) ($generated@@476 $generated@@480))))))
 :pattern ( ($generated@@347 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@351 (type $generated@@481))))
(let (($generated@@483 ($generated@@350 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@349 $generated@@483 $generated@@482)) (= (= $generated@@481 ($generated@@348 $generated@@483 $generated@@482)) (= ($generated@@391 $generated@@481) ($generated@@476 $generated@@482))))))
 :pattern ( ($generated@@391 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@351 (type $generated@@484))))
(let (($generated@@486 ($generated@@350 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@349 $generated@@486 $generated@@485)) (= (= $generated@@484 ($generated@@348 $generated@@486 $generated@@485)) (= ($generated@@432 $generated@@484) ($generated@@476 $generated@@81))))))
 :pattern ( ($generated@@432 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@333 (type $generated@@487))))
(let (($generated@@489 ($generated@@332 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@331 $generated@@489 $generated@@488)) (or (= $generated@@487 ($generated@@330 $generated@@489 $generated@@488)) (exists (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (and (and (= (type $generated@@490) $generated@@81) (= (type $generated@@491) $generated@@81)) ($generated@@0 ($generated@@92 ($generated@@424 $generated@@487) ($generated@@308 ($generated@@256 $generated@@490 $generated@@491)))))
 :no-pattern (type $generated@@490)
 :no-pattern (type $generated@@491)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
))))))
 :pattern ( ($generated@@424 $generated@@487))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@351 (type $generated@@492))))
(let (($generated@@494 ($generated@@350 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@349 $generated@@494 $generated@@493)) (or (= $generated@@492 ($generated@@348 $generated@@494 $generated@@493)) (exists (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (and (and (= (type $generated@@495) $generated@@81) (= (type $generated@@496) $generated@@81)) ($generated@@0 ($generated@@92 ($generated@@432 $generated@@492) ($generated@@308 ($generated@@256 $generated@@495 $generated@@496)))))
 :no-pattern (type $generated@@495)
 :no-pattern (type $generated@@496)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
 :no-pattern ($generated $generated@@496)
 :no-pattern ($generated@@0 $generated@@496)
))))))
 :pattern ( ($generated@@432 $generated@@492))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@81) ($generated@@257 $generated@@497 $generated@@46)) (and (= ($generated@@308 ($generated@@372 $generated@@2 $generated@@497)) $generated@@497) ($generated@@83 ($generated@@372 $generated@@2 $generated@@497) $generated@@46)))
 :pattern ( ($generated@@257 $generated@@497 $generated@@46))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@81) ($generated@@257 $generated@@498 $generated@@47)) (and (= ($generated@@308 ($generated@@372 $generated@@3 $generated@@498)) $generated@@498) ($generated@@83 ($generated@@372 $generated@@3 $generated@@498) $generated@@47)))
 :pattern ( ($generated@@257 $generated@@498 $generated@@47))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@81) ($generated@@257 $generated@@499 $generated@@44)) (and (= ($generated@@308 ($generated@@372 $generated@@4 $generated@@499)) $generated@@499) ($generated@@83 ($generated@@372 $generated@@4 $generated@@499) $generated@@44)))
 :pattern ( ($generated@@257 $generated@@499 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@500) 20))
(assert (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@81) ($generated@@257 $generated@@501 $generated@@45)) (and (= ($generated@@308 ($generated@@372 $generated@@500 $generated@@501)) $generated@@501) ($generated@@83 ($generated@@372 $generated@@500 $generated@@501) $generated@@45)))
 :pattern ( ($generated@@257 $generated@@501 $generated@@45))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@257 ($generated@@308 $generated@@502) $generated@@503) ($generated@@83 $generated@@502 $generated@@503)))
 :pattern ( ($generated@@257 ($generated@@308 $generated@@502) $generated@@503))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@504 Int) ($generated@@505 Int) ) (!  (=> (or ($generated@@180 $generated@@504 $generated@@505) (and (not (= 1 $generated@@74)) (and (<= ($generated@@178 1) $generated@@504) (<= ($generated@@178 1) $generated@@505)))) (= ($generated@@179 $generated@@504 $generated@@505) (exists (($generated@@506 Int) ) (! (= ($generated@@304 $generated@@504 $generated@@506) $generated@@505)
 :pattern ( ($generated@@304 $generated@@504 $generated@@506))
))))
 :pattern ( ($generated@@179 $generated@@504 $generated@@505))
))))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 ($generated@@90 (type $generated@@507))))
 (=> (= (type $generated@@507) ($generated@@78 $generated@@508 $generated@@2)) (<= 0 ($generated@@321 $generated@@507))))
 :pattern ( ($generated@@321 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@298 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@297 $generated@@510)) (<= 0 ($generated@@296 $generated@@509))))
 :pattern ( ($generated@@296 $generated@@509))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@511 Int) ($generated@@512 Int) ) (!  (=> (or ($generated@@180 $generated@@511 $generated@@512) (and (not (= 1 $generated@@74)) (and (<= ($generated@@178 1) $generated@@511) (<= ($generated@@178 1) $generated@@512)))) true)
 :pattern ( ($generated@@179 $generated@@511 $generated@@512))
))))
(assert (forall (($generated@@514 T@U) ) (! (= (type ($generated@@513 $generated@@514)) $generated@@66)
 :pattern ( ($generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@66) (= (type $generated@@516) $generated@@66)) (= ($generated@@513 ($generated@@450 $generated@@515 $generated@@516)) $generated@@515))
 :pattern ( ($generated@@450 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@66)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@66) (= (type $generated@@520) $generated@@66)) (= ($generated@@517 ($generated@@450 $generated@@519 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@450 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@66) (= (type $generated@@522) $generated@@66)) (= ($generated@@147 ($generated@@450 $generated@@521 $generated@@522)) $generated@@58))
 :pattern ( ($generated@@450 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@66)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@66) (= (type $generated@@526) $generated@@66)) (= ($generated@@523 ($generated@@458 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@458 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@66)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@66) (= (type $generated@@530) $generated@@66)) (= ($generated@@527 ($generated@@458 $generated@@529 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@458 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@66) (= (type $generated@@532) $generated@@66)) (= ($generated@@147 ($generated@@458 $generated@@531 $generated@@532)) $generated@@59))
 :pattern ( ($generated@@458 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@81) (= (type $generated@@534) $generated@@81)) (= ($generated@@289 ($generated@@256 $generated@@533 $generated@@534)) $generated@@61))
 :pattern ( ($generated@@256 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@66)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@66) (= (type $generated@@538) $generated@@66)) (= ($generated@@535 ($generated@@162 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@162 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@66)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@66) (= (type $generated@@542) $generated@@66)) (= ($generated@@539 ($generated@@162 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@162 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@81) (= (type $generated@@544) $generated@@81)) (= ($generated@@170 ($generated@@256 $generated@@543 $generated@@544)) $generated@@543))
 :pattern ( ($generated@@256 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@81) (= (type $generated@@546) $generated@@81)) (= ($generated@@171 ($generated@@256 $generated@@545 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@256 $generated@@545 $generated@@546))
)))
(assert  (and (forall (($generated@@549 T@U) ) (! (= (type ($generated@@547 $generated@@549)) $generated@@66)
 :pattern ( ($generated@@547 $generated@@549))
)) (forall (($generated@@550 T@U) ($generated@@551 Int) ) (! (let (($generated@@552 ($generated@@298 (type $generated@@550))))
(= (type ($generated@@548 $generated@@550 $generated@@551)) $generated@@552))
 :pattern ( ($generated@@548 $generated@@550 $generated@@551))
))))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@553) ($generated@@297 $generated@@81)) (= (type $generated@@554) $generated@@66)) (= (type $generated@@555) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@553 ($generated@@547 $generated@@554) $generated@@555) (forall (($generated@@556 Int) ) (!  (=> (and (<= 0 $generated@@556) (< $generated@@556 ($generated@@296 $generated@@553))) ($generated@@283 ($generated@@548 $generated@@553 $generated@@556) $generated@@554 $generated@@555))
 :pattern ( ($generated@@548 $generated@@553 $generated@@556))
))))
 :pattern ( ($generated@@149 $generated@@553 ($generated@@547 $generated@@554) $generated@@555))
)))
(assert (forall (($generated@@558 Int) ) (! (= ($generated@@557 ($generated@@150 $generated@@558)) $generated@@558)
 :pattern ( ($generated@@150 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@66)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@66) (= ($generated@@559 ($generated@@84 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@84 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@66) (= ($generated@@147 ($generated@@84 $generated@@562)) $generated@@54))
 :pattern ( ($generated@@84 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@66)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@66) (= ($generated@@563 ($generated@@275 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@275 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@66) (= ($generated@@147 ($generated@@275 $generated@@566)) $generated@@55))
 :pattern ( ($generated@@275 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ) (! (= (type ($generated@@567 $generated@@568)) $generated@@66)
 :pattern ( ($generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@66) (= ($generated@@567 ($generated@@188 $generated@@569)) $generated@@569))
 :pattern ( ($generated@@188 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@66) (= ($generated@@147 ($generated@@188 $generated@@570)) $generated@@56))
 :pattern ( ($generated@@188 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@66)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@66) (= ($generated@@571 ($generated@@547 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@547 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@66) (= ($generated@@147 ($generated@@547 $generated@@574)) $generated@@57))
 :pattern ( ($generated@@547 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@575)))
(= ($generated@@372 $generated@@576 ($generated@@308 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@308 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@577) ($generated@@331 $generated@@81 $generated@@81)) (= (type $generated@@578) $generated@@66)) (= (type $generated@@579) $generated@@66)) (= ($generated@@83 $generated@@577 ($generated@@450 $generated@@578 $generated@@579)) (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@329 $generated@@577) $generated@@580))) (and ($generated@@257 ($generated@@92 ($generated@@425 $generated@@577) $generated@@580) $generated@@579) ($generated@@257 $generated@@580 $generated@@578)))
 :pattern ( ($generated@@92 ($generated@@425 $generated@@577) $generated@@580))
 :pattern ( ($generated@@92 ($generated@@329 $generated@@577) $generated@@580))
))))
 :pattern ( ($generated@@83 $generated@@577 ($generated@@450 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@349 $generated@@81 $generated@@81)) (= (type $generated@@582) $generated@@66)) (= (type $generated@@583) $generated@@66)) (= ($generated@@83 $generated@@581 ($generated@@458 $generated@@582 $generated@@583)) (forall (($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@81) ($generated@@0 ($generated@@92 ($generated@@347 $generated@@581) $generated@@584))) (and ($generated@@257 ($generated@@92 ($generated@@433 $generated@@581) $generated@@584) $generated@@583) ($generated@@257 $generated@@584 $generated@@582)))
 :pattern ( ($generated@@92 ($generated@@433 $generated@@581) $generated@@584))
 :pattern ( ($generated@@92 ($generated@@347 $generated@@581) $generated@@584))
))))
 :pattern ( ($generated@@83 $generated@@581 ($generated@@458 $generated@@582 $generated@@583)))
)))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@586) ($generated@@78 $generated@@81 $generated@@4))) (or ($generated@@82 $generated@@586) (and (not (= 3 $generated@@74)) (and (and ($generated@@77 $generated@@585) ($generated@@83 $generated@@586 ($generated@@84 $generated@@85))) (not ($generated@@86 $generated@@586 ($generated@@87 $generated@@81))))))) (and ($generated@@88 $generated@@586) (= ($generated@@75 $generated@@586) (let (($generated@@587 ($generated@@89 $generated@@586)))
$generated@@587))))
 :pattern ( ($generated@@75 $generated@@586) ($generated@@77 $generated@@585))
))))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@81) (= (type $generated@@591) $generated@@81)) (< ($generated@@588 $generated@@590) ($generated@@589 ($generated@@256 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@256 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@81) (= (type $generated@@593) $generated@@81)) (< ($generated@@588 $generated@@593) ($generated@@589 ($generated@@256 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@256 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (! (let (($generated@@596 ($generated@@90 (type $generated@@594))))
 (=> (and (= (type $generated@@594) ($generated@@78 $generated@@596 $generated@@4)) (= (type $generated@@595) ($generated@@78 $generated@@596 $generated@@4))) (= ($generated@@249 $generated@@594 ($generated@@249 $generated@@594 $generated@@595)) ($generated@@249 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@249 $generated@@594 ($generated@@249 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) $generated@@81) (= (type $generated@@598) $generated@@66)) (= (type $generated@@599) $generated@@66)) ($generated@@257 $generated@@597 ($generated@@450 $generated@@598 $generated@@599))) (and (= ($generated@@308 ($generated@@372 ($generated@@331 $generated@@81 $generated@@81) $generated@@597)) $generated@@597) ($generated@@83 ($generated@@372 ($generated@@331 $generated@@81 $generated@@81) $generated@@597) ($generated@@450 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@257 $generated@@597 ($generated@@450 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@81) (= (type $generated@@601) $generated@@66)) (= (type $generated@@602) $generated@@66)) ($generated@@257 $generated@@600 ($generated@@458 $generated@@601 $generated@@602))) (and (= ($generated@@308 ($generated@@372 ($generated@@349 $generated@@81 $generated@@81) $generated@@600)) $generated@@600) ($generated@@83 ($generated@@372 ($generated@@349 $generated@@81 $generated@@81) $generated@@600) ($generated@@458 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@257 $generated@@600 ($generated@@458 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@66) (= (type $generated@@604) $generated@@66)) (= (type $generated@@605) $generated@@81)) ($generated@@257 $generated@@605 ($generated@@162 $generated@@603 $generated@@604))) (and (= ($generated@@308 ($generated@@372 $generated@@163 $generated@@605)) $generated@@605) ($generated@@83 ($generated@@372 $generated@@163 $generated@@605) ($generated@@162 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@257 $generated@@605 ($generated@@162 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@606)))
 (not ($generated@@0 ($generated@@92 ($generated@@87 $generated@@607) $generated@@606))))
 :pattern ( (let (($generated@@607 (type $generated@@606)))
($generated@@92 ($generated@@87 $generated@@607) $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@608)))
 (not ($generated@@0 ($generated@@92 ($generated@@476 $generated@@609) $generated@@608))))
 :pattern ( (let (($generated@@609 (type $generated@@608)))
($generated@@92 ($generated@@476 $generated@@609) $generated@@608)))
)))
(assert (forall (($generated@@611 T@U) ) (! (= (type ($generated@@610 $generated@@611)) $generated@@71)
 :pattern ( ($generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@66) (= (type $generated@@613) $generated@@66)) (and (= ($generated@@147 ($generated@@162 $generated@@612 $generated@@613)) $generated@@62) (= ($generated@@610 ($generated@@162 $generated@@612 $generated@@613)) $generated@@64)))
 :pattern ( ($generated@@162 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 Int) ($generated@@615 Int) ) (! (= ($generated@@304 $generated@@614 $generated@@615) (* $generated@@614 $generated@@615))
 :pattern ( ($generated@@304 $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@163) (= ($generated@@588 ($generated@@308 $generated@@616)) ($generated@@589 $generated@@616)))
 :pattern ( ($generated@@588 ($generated@@308 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@81) ($generated@@257 $generated@@617 ($generated@@150 0))) (and (= ($generated@@308 ($generated@@372 $generated@@2 $generated@@617)) $generated@@617) ($generated@@83 ($generated@@372 ($generated@@78 $generated@@81 $generated@@4) $generated@@617) ($generated@@150 0))))
 :pattern ( ($generated@@257 $generated@@617 ($generated@@150 0)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@81) (= (type $generated@@619) $generated@@66)) ($generated@@257 $generated@@618 ($generated@@84 $generated@@619))) (and (= ($generated@@308 ($generated@@372 ($generated@@78 $generated@@81 $generated@@4) $generated@@618)) $generated@@618) ($generated@@83 ($generated@@372 ($generated@@78 $generated@@81 $generated@@4) $generated@@618) ($generated@@84 $generated@@619))))
 :pattern ( ($generated@@257 $generated@@618 ($generated@@84 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@81) (= (type $generated@@621) $generated@@66)) ($generated@@257 $generated@@620 ($generated@@275 $generated@@621))) (and (= ($generated@@308 ($generated@@372 ($generated@@78 $generated@@81 $generated@@4) $generated@@620)) $generated@@620) ($generated@@83 ($generated@@372 ($generated@@78 $generated@@81 $generated@@4) $generated@@620) ($generated@@275 $generated@@621))))
 :pattern ( ($generated@@257 $generated@@620 ($generated@@275 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@81) (= (type $generated@@623) $generated@@66)) ($generated@@257 $generated@@622 ($generated@@188 $generated@@623))) (and (= ($generated@@308 ($generated@@372 ($generated@@78 $generated@@81 $generated@@2) $generated@@622)) $generated@@622) ($generated@@83 ($generated@@372 ($generated@@78 $generated@@81 $generated@@2) $generated@@622) ($generated@@188 $generated@@623))))
 :pattern ( ($generated@@257 $generated@@622 ($generated@@188 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@81) (= (type $generated@@625) $generated@@66)) ($generated@@257 $generated@@624 ($generated@@547 $generated@@625))) (and (= ($generated@@308 ($generated@@372 ($generated@@297 $generated@@81) $generated@@624)) $generated@@624) ($generated@@83 ($generated@@372 ($generated@@297 $generated@@81) $generated@@624) ($generated@@547 $generated@@625))))
 :pattern ( ($generated@@257 $generated@@624 ($generated@@547 $generated@@625)))
)))
(assert (= ($generated@@147 $generated@@85) $generated@@63))
(assert (= ($generated@@610 $generated@@85) $generated@@65))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@626) ($generated@@78 $generated@@81 $generated@@2)) (= (type $generated@@627) $generated@@66)) (= (type $generated@@628) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@149 $generated@@626 ($generated@@188 $generated@@627) $generated@@628) (forall (($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@629) $generated@@81) (< 0 ($generated ($generated@@92 $generated@@626 $generated@@629)))) ($generated@@283 $generated@@629 $generated@@627 $generated@@628))
 :pattern ( ($generated@@92 $generated@@626 $generated@@629))
))))
 :pattern ( ($generated@@149 $generated@@626 ($generated@@188 $generated@@627) $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) $generated@@163) (= (type $generated@@631) $generated@@66)) (= (type $generated@@632) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@77 $generated@@632) (and ($generated@@161 $generated@@630) (exists (($generated@@633 T@U) ) (!  (and (= (type $generated@@633) $generated@@66) ($generated@@149 $generated@@630 ($generated@@162 $generated@@631 $generated@@633) $generated@@632))
 :pattern ( ($generated@@149 $generated@@630 ($generated@@162 $generated@@631 $generated@@633) $generated@@632))
))))) ($generated@@283 ($generated@@170 $generated@@630) $generated@@631 $generated@@632))
 :pattern ( ($generated@@283 ($generated@@170 $generated@@630) $generated@@631 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) $generated@@163) (= (type $generated@@635) $generated@@66)) (= (type $generated@@636) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@77 $generated@@636) (and ($generated@@161 $generated@@634) (exists (($generated@@637 T@U) ) (!  (and (= (type $generated@@637) $generated@@66) ($generated@@149 $generated@@634 ($generated@@162 $generated@@637 $generated@@635) $generated@@636))
 :pattern ( ($generated@@149 $generated@@634 ($generated@@162 $generated@@637 $generated@@635) $generated@@636))
))))) ($generated@@283 ($generated@@171 $generated@@634) $generated@@635 $generated@@636))
 :pattern ( ($generated@@283 ($generated@@171 $generated@@634) $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) $generated@@81) (= (type $generated@@639) $generated@@81)) (= ($generated@@256 ($generated@@76 $generated@@638) ($generated@@76 $generated@@639)) ($generated@@76 ($generated@@256 $generated@@638 $generated@@639))))
 :pattern ( ($generated@@256 ($generated@@76 $generated@@638) ($generated@@76 $generated@@639)))
)))
(assert (forall (($generated@@640 Int) ) (! (= ($generated@@308 ($generated@@8 ($generated@@178 $generated@@640))) ($generated@@76 ($generated@@308 ($generated@@8 $generated@@640))))
 :pattern ( ($generated@@308 ($generated@@8 ($generated@@178 $generated@@640))))
)))
(assert (forall (($generated@@641 T@U) ) (! (= ($generated@@308 ($generated@@76 $generated@@641)) ($generated@@76 ($generated@@308 $generated@@641)))
 :pattern ( ($generated@@308 ($generated@@76 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ) (! (let (($generated@@643 ($generated@@298 (type $generated@@642))))
 (=> (and (= (type $generated@@642) ($generated@@297 $generated@@643)) (= ($generated@@296 $generated@@642) 0)) (= $generated@@642 ($generated@@295 $generated@@643))))
 :pattern ( ($generated@@296 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (! (let (($generated@@647 (type $generated@@645)))
 (=> (and (and (= (type $generated@@644) ($generated@@78 $generated@@647 $generated@@2)) (= (type $generated@@646) $generated@@2)) (<= 0 ($generated $generated@@646))) (= ($generated@@321 ($generated@@93 $generated@@644 $generated@@645 $generated@@646)) (+ (- ($generated@@321 $generated@@644) ($generated ($generated@@92 $generated@@644 $generated@@645))) ($generated $generated@@646)))))
 :pattern ( ($generated@@321 ($generated@@93 $generated@@644 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@649) $generated@@2)) ($generated@@149 $generated@@649 $generated@@46 $generated@@648))
 :pattern ( ($generated@@149 $generated@@649 $generated@@46 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@651) $generated@@3)) ($generated@@149 $generated@@651 $generated@@47 $generated@@650))
 :pattern ( ($generated@@149 $generated@@651 $generated@@47 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@653) $generated@@4)) ($generated@@149 $generated@@653 $generated@@44 $generated@@652))
 :pattern ( ($generated@@149 $generated@@653 $generated@@44 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@655) $generated@@500)) ($generated@@149 $generated@@655 $generated@@45 $generated@@654))
 :pattern ( ($generated@@149 $generated@@655 $generated@@45 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@657) $generated@@81)) ($generated@@149 $generated@@657 $generated@@48 $generated@@656))
 :pattern ( ($generated@@149 $generated@@657 $generated@@48 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@297 $generated@@81)) (= (type $generated@@659) $generated@@66)) (= ($generated@@83 $generated@@658 ($generated@@547 $generated@@659)) (forall (($generated@@660 Int) ) (!  (=> (and (<= 0 $generated@@660) (< $generated@@660 ($generated@@296 $generated@@658))) ($generated@@257 ($generated@@548 $generated@@658 $generated@@660) $generated@@659))
 :pattern ( ($generated@@548 $generated@@658 $generated@@660))
))))
 :pattern ( ($generated@@83 $generated@@658 ($generated@@547 $generated@@659)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 Int) ) (!  (=> (= (type $generated@@662) ($generated@@297 $generated@@81)) (=> (and (<= 0 $generated@@663) (< $generated@@663 ($generated@@296 $generated@@662))) (< ($generated@@589 ($generated@@372 $generated@@163 ($generated@@548 $generated@@662 $generated@@663))) ($generated@@661 $generated@@662))))
 :pattern ( ($generated@@589 ($generated@@372 $generated@@163 ($generated@@548 $generated@@662 $generated@@663))))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@664) ($generated@@331 $generated@@81 $generated@@81)) (= (type $generated@@665) $generated@@66)) (= (type $generated@@666) $generated@@66)) ($generated@@83 $generated@@664 ($generated@@450 $generated@@665 $generated@@666))) (and (and ($generated@@83 ($generated@@329 $generated@@664) ($generated@@84 $generated@@665)) ($generated@@83 ($generated@@380 $generated@@664) ($generated@@84 $generated@@666))) ($generated@@83 ($generated@@424 $generated@@664) ($generated@@84 ($generated@@162 $generated@@665 $generated@@666)))))
 :pattern ( ($generated@@83 $generated@@664 ($generated@@450 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) ($generated@@349 $generated@@81 $generated@@81)) (= (type $generated@@668) $generated@@66)) (= (type $generated@@669) $generated@@66)) ($generated@@83 $generated@@667 ($generated@@458 $generated@@668 $generated@@669))) (and (and ($generated@@83 ($generated@@347 $generated@@667) ($generated@@275 $generated@@668)) ($generated@@83 ($generated@@391 $generated@@667) ($generated@@275 $generated@@669))) ($generated@@83 ($generated@@432 $generated@@667) ($generated@@275 ($generated@@162 $generated@@668 $generated@@669)))))
 :pattern ( ($generated@@83 $generated@@667 ($generated@@458 $generated@@668 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@2) ($generated@@83 $generated@@670 $generated@@46))
 :pattern ( ($generated@@83 $generated@@670 $generated@@46))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@3) ($generated@@83 $generated@@671 $generated@@47))
 :pattern ( ($generated@@83 $generated@@671 $generated@@47))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@4) ($generated@@83 $generated@@672 $generated@@44))
 :pattern ( ($generated@@83 $generated@@672 $generated@@44))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@500) ($generated@@83 $generated@@673 $generated@@45))
 :pattern ( ($generated@@83 $generated@@673 $generated@@45))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@81) ($generated@@83 $generated@@674 $generated@@48))
 :pattern ( ($generated@@83 $generated@@674 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
