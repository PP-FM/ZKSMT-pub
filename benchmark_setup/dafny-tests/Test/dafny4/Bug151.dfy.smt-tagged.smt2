(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@236 (T@U T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@248 (T@T) T@U)
(declare-fun $generated@@249 (T@U) Int)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@268 (T@T T@T) T@U)
(declare-fun $generated@@269 (T@T T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@303 (T@U T@U) Bool)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@347 (T@T T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@375 (T@U T@U) T@U)
(declare-fun $generated@@383 (T@U T@U) T@U)
(declare-fun $generated@@394 (T@T) T@U)
(declare-fun $generated@@418 () T@T)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@461 (T@U Int) T@U)
(declare-fun $generated@@470 (T@U) Int)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@504 (T@U T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@569 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (let (($generated@@233 (type $generated@@232)))
(= (type ($generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= ($generated@@231 $generated@@234) $generated@@234)
 :pattern ( ($generated@@231 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@237) $generated@@64) (= (type $generated@@238) $generated@@64)) (= (type $generated@@239) $generated@@145)) (= (type $generated@@240) $generated@@145)) (= (type $generated@@241) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@235 $generated@@241)) (= ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241)  (and ($generated@@236 $generated@@239 $generated@@237 $generated@@241) ($generated@@236 $generated@@240 $generated@@238 $generated@@241))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@68)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (!  (=> (= (type $generated@@244) $generated@@136) (= ($generated@@134 $generated@@244) (= ($generated@@242 $generated@@244) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@136) ($generated@@134 $generated@@245)) (exists (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (and (and (= (type $generated@@246) $generated@@145) (= (type $generated@@247) $generated@@145)) (= $generated@@245 ($generated@@211 $generated@@246 $generated@@247)))
 :no-pattern (type $generated@@246)
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@246)
 :no-pattern ($generated@@0 $generated@@246)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
)))
 :pattern ( ($generated@@134 $generated@@245))
)))
(assert  (and (and (forall (($generated@@252 T@T) ) (= ($generated@@1 ($generated@@250 $generated@@252)) 17)) (forall (($generated@@253 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@253)) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
))) (forall (($generated@@254 T@T) ) (! (= (type ($generated@@248 $generated@@254)) ($generated@@250 $generated@@254))
 :pattern ( ($generated@@248 $generated@@254))
))))
(assert (forall (($generated@@255 T@T) ) (! (= ($generated@@249 ($generated@@248 $generated@@255)) 0)
 :pattern ( ($generated@@248 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@145)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@64) (= (type $generated@@260) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260) ($generated@@74 $generated@@258 $generated@@259 $generated@@260)))
 :pattern ( ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@263 T@T) ) (! (= (type ($generated@@262 $generated@@263)) ($generated@@76 $generated@@263 $generated@@2))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@79 (type $generated@@264))))
 (=> (= (type $generated@@264) ($generated@@76 $generated@@265 $generated@@2)) (and (= (= ($generated@@261 $generated@@264) 0) (= $generated@@264 ($generated@@262 $generated@@265))) (=> (not (= ($generated@@261 $generated@@264) 0)) (exists (($generated@@266 T@U) ) (!  (and (= (type $generated@@266) $generated@@265) (< 0 ($generated ($generated@@81 $generated@@264 $generated@@266))))
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
))))))
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert  (and (and (and (and (forall (($generated@@272 T@T) ($generated@@273 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@272 $generated@@273)) 18)) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@274 $generated@@275)) $generated@@274)
 :pattern ( ($generated@@269 $generated@@274 $generated@@275))
))) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@269 $generated@@276 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@269 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@270 (type $generated@@278))))
(= (type ($generated@@267 $generated@@278)) ($generated@@76 $generated@@279 $generated@@4)))
 :pattern ( ($generated@@267 $generated@@278))
))) (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (! (= (type ($generated@@268 $generated@@280 $generated@@281)) ($generated@@269 $generated@@280 $generated@@281))
 :pattern ( ($generated@@268 $generated@@280 $generated@@281))
))))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@T) ) (! (let (($generated@@284 (type $generated@@282)))
 (not ($generated@@0 ($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282))))
 :pattern ( (let (($generated@@284 (type $generated@@282)))
($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282)))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 19)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@76 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@304))))
 (=> (and (= (type $generated@@304) ($generated@@76 $generated@@306 $generated@@4)) (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@4))) (= ($generated@@303 $generated@@304 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (= ($generated@@0 ($generated@@81 $generated@@304 $generated@@307)) ($generated@@0 ($generated@@81 $generated@@305 $generated@@307))))
 :pattern ( ($generated@@81 $generated@@304 $generated@@307))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@303 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@79 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@76 $generated@@309 $generated@@2)) (= ($generated@@151 $generated@@308) (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@309) (and (<= 0 ($generated ($generated@@81 $generated@@308 $generated@@310))) (<= ($generated ($generated@@81 $generated@@308 $generated@@310)) ($generated@@261 $generated@@308))))
 :pattern ( ($generated@@81 $generated@@308 $generated@@310))
)))))
 :pattern ( ($generated@@151 $generated@@308))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@271 (type $generated@@311))))
(let (($generated@@313 ($generated@@270 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@269 $generated@@313 $generated@@312)) (or (= $generated@@311 ($generated@@268 $generated@@313 $generated@@312)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@311) $generated@@314)))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@267 $generated@@311))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@271 (type $generated@@316))))
(= (type ($generated@@315 $generated@@316)) ($generated@@76 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@271 (type $generated@@318))))
(let (($generated@@320 ($generated@@270 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@269 $generated@@320 $generated@@319)) (or (= $generated@@318 ($generated@@268 $generated@@320 $generated@@319)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@319) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@318) $generated@@321)))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@289 (type $generated@@322))))
(let (($generated@@324 ($generated@@288 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@287 $generated@@324 $generated@@323)) (or (= $generated@@322 ($generated@@286 $generated@@324 $generated@@323)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@322) $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@285 $generated@@322))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@289 (type $generated@@327))))
(= (type ($generated@@326 $generated@@327)) ($generated@@76 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@289 (type $generated@@329))))
(let (($generated@@331 ($generated@@288 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@287 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@286 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@330) ($generated@@0 ($generated@@81 ($generated@@326 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@334) $generated@@64)) (= ($generated@@132 $generated@@333 ($generated@@150 $generated@@334)) (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@333 $generated@@335)))) ($generated@@212 $generated@@335 $generated@@334))
 :pattern ( ($generated@@81 $generated@@333 $generated@@335))
))))
 :pattern ( ($generated@@132 $generated@@333 ($generated@@150 $generated@@334)))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (= (type $generated@@336) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@337) $generated@@64)) (= (type $generated@@338) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@336 ($generated@@221 $generated@@337) $generated@@338) (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@145) ($generated@@0 ($generated@@81 $generated@@336 $generated@@339))) ($generated@@236 $generated@@339 $generated@@337 $generated@@338))
 :pattern ( ($generated@@81 $generated@@336 $generated@@339))
))))
 :pattern ( ($generated@@74 $generated@@336 ($generated@@221 $generated@@337) $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (= (type $generated@@340) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@341) $generated@@64)) (= (type $generated@@342) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@340 ($generated@@226 $generated@@341) $generated@@342) (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@145) ($generated@@0 ($generated@@81 $generated@@340 $generated@@343))) ($generated@@236 $generated@@343 $generated@@341 $generated@@342))
 :pattern ( ($generated@@81 $generated@@340 $generated@@343))
))))
 :pattern ( ($generated@@74 $generated@@340 ($generated@@226 $generated@@341) $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 (type $generated@@344)))
(= ($generated ($generated@@81 ($generated@@262 $generated@@345) $generated@@344)) 0))
 :pattern ( (let (($generated@@345 (type $generated@@344)))
($generated@@81 ($generated@@262 $generated@@345) $generated@@344)))
)))
(assert  (and (and (forall (($generated@@349 T@U) ) (! (= (type ($generated@@346 $generated@@349)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@346 $generated@@349))
)) (forall (($generated@@350 T@T) ($generated@@351 T@U) ) (! (= (type ($generated@@347 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@347 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@271 (type $generated@@352))))
(let (($generated@@354 ($generated@@270 (type $generated@@352))))
(= (type ($generated@@348 $generated@@352)) ($generated@@76 $generated@@354 $generated@@353))))
 :pattern ( ($generated@@348 $generated@@352))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@355) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@356) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@346 $generated@@355) $generated@@356))  (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@355) ($generated@@143 ($generated@@347 $generated@@136 $generated@@356)))) (= ($generated@@81 ($generated@@348 $generated@@355) ($generated@@143 ($generated@@347 $generated@@136 $generated@@356))) ($generated@@144 ($generated@@347 $generated@@136 $generated@@356))))))
 :pattern ( ($generated@@81 ($generated@@346 $generated@@355) $generated@@356))
)))
(assert  (and (forall (($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@359)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@357 $generated@@359))
)) (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@289 (type $generated@@360))))
(let (($generated@@362 ($generated@@288 (type $generated@@360))))
(= (type ($generated@@358 $generated@@360)) ($generated@@76 $generated@@362 $generated@@361))))
 :pattern ( ($generated@@358 $generated@@360))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@364) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@357 $generated@@363) $generated@@364))  (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@363) ($generated@@143 ($generated@@347 $generated@@136 $generated@@364)))) (= ($generated@@81 ($generated@@358 $generated@@363) ($generated@@143 ($generated@@347 $generated@@136 $generated@@364))) ($generated@@144 ($generated@@347 $generated@@136 $generated@@364))))))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(let (($generated@@368 ($generated@@270 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@269 $generated@@368 $generated@@367)) (= ($generated@@0 ($generated@@81 ($generated@@315 $generated@@365) $generated@@366)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@365) $generated@@369)) (= $generated@@366 ($generated@@81 ($generated@@348 $generated@@365) $generated@@369))))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@365) $generated@@369))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@365) $generated@@369))
))))))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (! (let (($generated@@372 (type $generated@@371)))
(let (($generated@@373 ($generated@@288 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@287 $generated@@373 $generated@@372)) (= ($generated@@0 ($generated@@81 ($generated@@326 $generated@@370) $generated@@371)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@370) $generated@@374)) (= $generated@@371 ($generated@@81 ($generated@@358 $generated@@370) $generated@@374))))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@370) $generated@@374))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@370) $generated@@374))
))))))
 :pattern ( ($generated@@81 ($generated@@326 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@376 $generated@@377)) $generated@@64)
 :pattern ( ($generated@@375 $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (and (= (type $generated@@378) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@379) $generated@@64)) (= (type $generated@@380) $generated@@64)) (= (type $generated@@381) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@378 ($generated@@375 $generated@@379 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@378) $generated@@382))) (and ($generated@@236 ($generated@@81 ($generated@@348 $generated@@378) $generated@@382) $generated@@380 $generated@@381) ($generated@@236 $generated@@382 $generated@@379 $generated@@381)))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@378) $generated@@382))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@378) $generated@@382))
))))
 :pattern ( ($generated@@74 $generated@@378 ($generated@@375 $generated@@379 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@384 $generated@@385)) $generated@@64)
 :pattern ( ($generated@@383 $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (and (= (type $generated@@386) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@386) $generated@@390))) (and ($generated@@236 ($generated@@81 ($generated@@358 $generated@@386) $generated@@390) $generated@@388 $generated@@389) ($generated@@236 $generated@@390 $generated@@387 $generated@@389)))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@386) $generated@@390))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@386) $generated@@390))
))))
 :pattern ( ($generated@@74 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@79 (type $generated@@391))))
 (=> (and (and (= (type $generated@@391) ($generated@@76 $generated@@393 $generated@@4)) (= (type $generated@@392) ($generated@@76 $generated@@393 $generated@@4))) ($generated@@303 $generated@@391 $generated@@392)) (= $generated@@391 $generated@@392)))
 :pattern ( ($generated@@303 $generated@@391 $generated@@392))
)))
(assert (forall (($generated@@395 T@T) ) (! (= (type ($generated@@394 $generated@@395)) ($generated@@76 $generated@@395 $generated@@4))
 :pattern ( ($generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@289 (type $generated@@396))))
(let (($generated@@398 ($generated@@288 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@287 $generated@@398 $generated@@397)) (= (= $generated@@396 ($generated@@286 $generated@@398 $generated@@397)) (= ($generated@@285 $generated@@396) ($generated@@394 $generated@@398))))))
 :pattern ( ($generated@@285 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@289 (type $generated@@399))))
(let (($generated@@401 ($generated@@288 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@287 $generated@@401 $generated@@400)) (= (= $generated@@399 ($generated@@286 $generated@@401 $generated@@400)) (= ($generated@@326 $generated@@399) ($generated@@394 $generated@@400))))))
 :pattern ( ($generated@@326 $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@289 (type $generated@@402))))
(let (($generated@@404 ($generated@@288 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@287 $generated@@404 $generated@@403)) (= (= $generated@@402 ($generated@@286 $generated@@404 $generated@@403)) (= ($generated@@357 $generated@@402) ($generated@@394 $generated@@145))))))
 :pattern ( ($generated@@357 $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@271 (type $generated@@405))))
(let (($generated@@407 ($generated@@270 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@269 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@268 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (and (and (= (type $generated@@408) $generated@@145) (= (type $generated@@409) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@346 $generated@@405) ($generated@@256 ($generated@@211 $generated@@408 $generated@@409)))))
 :no-pattern (type $generated@@408)
 :no-pattern (type $generated@@409)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
))))))
 :pattern ( ($generated@@346 $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@289 (type $generated@@410))))
(let (($generated@@412 ($generated@@288 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@287 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@286 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (and (and (= (type $generated@@413) $generated@@145) (= (type $generated@@414) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@357 $generated@@410) ($generated@@256 ($generated@@211 $generated@@413 $generated@@414)))))
 :no-pattern (type $generated@@413)
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@357 $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@145) ($generated@@212 $generated@@415 $generated@@46)) (and (= ($generated@@256 ($generated@@347 $generated@@2 $generated@@415)) $generated@@415) ($generated@@132 ($generated@@347 $generated@@2 $generated@@415) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@415 $generated@@46))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@145) ($generated@@212 $generated@@416 $generated@@47)) (and (= ($generated@@256 ($generated@@347 $generated@@3 $generated@@416)) $generated@@416) ($generated@@132 ($generated@@347 $generated@@3 $generated@@416) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@416 $generated@@47))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@145) ($generated@@212 $generated@@417 $generated@@44)) (and (= ($generated@@256 ($generated@@347 $generated@@4 $generated@@417)) $generated@@417) ($generated@@132 ($generated@@347 $generated@@4 $generated@@417) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@417 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@418) 20))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@145) ($generated@@212 $generated@@419 $generated@@45)) (and (= ($generated@@256 ($generated@@347 $generated@@418 $generated@@419)) $generated@@419) ($generated@@132 ($generated@@347 $generated@@418 $generated@@419) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@419 $generated@@45))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (= (type $generated@@421) $generated@@64) (= ($generated@@212 ($generated@@256 $generated@@420) $generated@@421) ($generated@@132 $generated@@420 $generated@@421)))
 :pattern ( ($generated@@212 ($generated@@256 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@79 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@76 $generated@@423 $generated@@2)) (<= 0 ($generated@@261 $generated@@422))))
 :pattern ( ($generated@@261 $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@251 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@250 $generated@@425)) (<= 0 ($generated@@249 $generated@@424))))
 :pattern ( ($generated@@249 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (= (type ($generated@@426 $generated@@427)) $generated@@64)
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@64) (= (type $generated@@429) $generated@@64)) (= ($generated@@426 ($generated@@375 $generated@@428 $generated@@429)) $generated@@428))
 :pattern ( ($generated@@375 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@64)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@64) (= (type $generated@@433) $generated@@64)) (= ($generated@@430 ($generated@@375 $generated@@432 $generated@@433)) $generated@@433))
 :pattern ( ($generated@@375 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@64) (= (type $generated@@435) $generated@@64)) (= ($generated@@72 ($generated@@375 $generated@@434 $generated@@435)) $generated@@58))
 :pattern ( ($generated@@375 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@64)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@436 ($generated@@383 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@383 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@64)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@440 ($generated@@383 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@383 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@72 ($generated@@383 $generated@@444 $generated@@445)) $generated@@59))
 :pattern ( ($generated@@383 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@145) (= (type $generated@@447) $generated@@145)) (= ($generated@@242 ($generated@@211 $generated@@446 $generated@@447)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@135 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@135 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@135 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@135 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@145) (= (type $generated@@457) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@211 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@145) (= (type $generated@@459) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@211 $generated@@458 $generated@@459))
)))
(assert  (and (forall (($generated@@462 T@U) ) (! (= (type ($generated@@460 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@460 $generated@@462))
)) (forall (($generated@@463 T@U) ($generated@@464 Int) ) (! (let (($generated@@465 ($generated@@251 (type $generated@@463))))
(= (type ($generated@@461 $generated@@463 $generated@@464)) $generated@@465))
 :pattern ( ($generated@@461 $generated@@463 $generated@@464))
))))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (= (type $generated@@466) ($generated@@250 $generated@@145)) (= (type $generated@@467) $generated@@64)) (= (type $generated@@468) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@466 ($generated@@460 $generated@@467) $generated@@468) (forall (($generated@@469 Int) ) (!  (=> (and (<= 0 $generated@@469) (< $generated@@469 ($generated@@249 $generated@@466))) ($generated@@236 ($generated@@461 $generated@@466 $generated@@469) $generated@@467 $generated@@468))
 :pattern ( ($generated@@461 $generated@@466 $generated@@469))
))))
 :pattern ( ($generated@@74 $generated@@466 ($generated@@460 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@471 Int) ) (! (= ($generated@@470 ($generated@@75 $generated@@471)) $generated@@471)
 :pattern ( ($generated@@75 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@64) (= ($generated@@472 ($generated@@221 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@221 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@475)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@64) (= ($generated@@476 ($generated@@226 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@226 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@479)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@64) (= ($generated@@480 ($generated@@150 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@150 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@483)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@64) (= ($generated@@484 ($generated@@460 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@460 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@72 ($generated@@460 $generated@@487)) $generated@@57))
 :pattern ( ($generated@@460 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 (type $generated@@488)))
(= ($generated@@347 $generated@@489 ($generated@@256 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@256 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@491) $generated@@64)) (= (type $generated@@492) $generated@@64)) (= ($generated@@132 $generated@@490 ($generated@@375 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@490) $generated@@493))) (and ($generated@@212 ($generated@@81 ($generated@@348 $generated@@490) $generated@@493) $generated@@492) ($generated@@212 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@490) $generated@@493))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@132 $generated@@490 ($generated@@375 $generated@@491 $generated@@492)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@495) $generated@@64)) (= (type $generated@@496) $generated@@64)) (= ($generated@@132 $generated@@494 ($generated@@383 $generated@@495 $generated@@496)) (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@494) $generated@@497))) (and ($generated@@212 ($generated@@81 ($generated@@358 $generated@@494) $generated@@497) $generated@@496) ($generated@@212 $generated@@497 $generated@@495)))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@494) $generated@@497))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@494) $generated@@497))
))))
 :pattern ( ($generated@@132 $generated@@494 ($generated@@383 $generated@@495 $generated@@496)))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@145) (= (type $generated@@501) $generated@@145)) (< ($generated@@498 $generated@@500) ($generated@@499 ($generated@@211 $generated@@500 $generated@@501))))
 :pattern ( ($generated@@211 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@145) (= (type $generated@@503) $generated@@145)) (< ($generated@@498 $generated@@503) ($generated@@499 ($generated@@211 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@211 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (! (= (type ($generated@@504 $generated@@505 $generated@@506)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@504 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) $generated@@64) (= (type $generated@@508) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@509) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@504 $generated@@507 $generated@@508) $generated@@509))  (and ($generated@@212 $generated@@509 $generated@@507) ($generated@@0 ($generated@@81 $generated@@508 $generated@@509)))))
 :pattern ( ($generated@@81 ($generated@@504 $generated@@507 $generated@@508) $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (and (= (type $generated@@510) $generated@@145) (= (type $generated@@511) $generated@@64)) (= (type $generated@@512) $generated@@64)) ($generated@@212 $generated@@510 ($generated@@375 $generated@@511 $generated@@512))) (and (= ($generated@@256 ($generated@@347 ($generated@@269 $generated@@145 $generated@@145) $generated@@510)) $generated@@510) ($generated@@132 ($generated@@347 ($generated@@269 $generated@@145 $generated@@145) $generated@@510) ($generated@@375 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@212 $generated@@510 ($generated@@375 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@145) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) ($generated@@212 $generated@@513 ($generated@@383 $generated@@514 $generated@@515))) (and (= ($generated@@256 ($generated@@347 ($generated@@287 $generated@@145 $generated@@145) $generated@@513)) $generated@@513) ($generated@@132 ($generated@@347 ($generated@@287 $generated@@145 $generated@@145) $generated@@513) ($generated@@383 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@212 $generated@@513 ($generated@@383 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@64) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@145)) ($generated@@212 $generated@@518 ($generated@@135 $generated@@516 $generated@@517))) (and (= ($generated@@256 ($generated@@347 $generated@@136 $generated@@518)) $generated@@518) ($generated@@132 ($generated@@347 $generated@@136 $generated@@518) ($generated@@135 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@212 $generated@@518 ($generated@@135 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
 (not ($generated@@0 ($generated@@81 ($generated@@394 $generated@@520) $generated@@519))))
 :pattern ( (let (($generated@@520 (type $generated@@519)))
($generated@@81 ($generated@@394 $generated@@520) $generated@@519)))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@69)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@64) (= (type $generated@@524) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@523 $generated@@524)) $generated@@62) (= ($generated@@521 ($generated@@135 $generated@@523 $generated@@524)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@136) (= ($generated@@498 ($generated@@256 $generated@@525)) ($generated@@499 $generated@@525)))
 :pattern ( ($generated@@498 ($generated@@256 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@145) ($generated@@212 $generated@@526 ($generated@@75 0))) (and (= ($generated@@256 ($generated@@347 $generated@@2 $generated@@526)) $generated@@526) ($generated@@132 ($generated@@347 ($generated@@76 $generated@@145 $generated@@4) $generated@@526) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@526 ($generated@@75 0)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@64)) ($generated@@212 $generated@@527 ($generated@@221 $generated@@528))) (and (= ($generated@@256 ($generated@@347 ($generated@@76 $generated@@145 $generated@@4) $generated@@527)) $generated@@527) ($generated@@132 ($generated@@347 ($generated@@76 $generated@@145 $generated@@4) $generated@@527) ($generated@@221 $generated@@528))))
 :pattern ( ($generated@@212 $generated@@527 ($generated@@221 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@529) $generated@@145) (= (type $generated@@530) $generated@@64)) ($generated@@212 $generated@@529 ($generated@@226 $generated@@530))) (and (= ($generated@@256 ($generated@@347 ($generated@@76 $generated@@145 $generated@@4) $generated@@529)) $generated@@529) ($generated@@132 ($generated@@347 ($generated@@76 $generated@@145 $generated@@4) $generated@@529) ($generated@@226 $generated@@530))))
 :pattern ( ($generated@@212 $generated@@529 ($generated@@226 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@145) (= (type $generated@@532) $generated@@64)) ($generated@@212 $generated@@531 ($generated@@150 $generated@@532))) (and (= ($generated@@256 ($generated@@347 ($generated@@76 $generated@@145 $generated@@2) $generated@@531)) $generated@@531) ($generated@@132 ($generated@@347 ($generated@@76 $generated@@145 $generated@@2) $generated@@531) ($generated@@150 $generated@@532))))
 :pattern ( ($generated@@212 $generated@@531 ($generated@@150 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@145) (= (type $generated@@534) $generated@@64)) ($generated@@212 $generated@@533 ($generated@@460 $generated@@534))) (and (= ($generated@@256 ($generated@@347 ($generated@@250 $generated@@145) $generated@@533)) $generated@@533) ($generated@@132 ($generated@@347 ($generated@@250 $generated@@145) $generated@@533) ($generated@@460 $generated@@534))))
 :pattern ( ($generated@@212 $generated@@533 ($generated@@460 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@535 ($generated@@150 $generated@@536) $generated@@537) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@535 $generated@@538)))) ($generated@@236 $generated@@538 $generated@@536 $generated@@537))
 :pattern ( ($generated@@81 $generated@@535 $generated@@538))
))))
 :pattern ( ($generated@@74 $generated@@535 ($generated@@150 $generated@@536) $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@136) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@541) (and ($generated@@134 $generated@@539) (exists (($generated@@542 T@U) ) (!  (and (= (type $generated@@542) $generated@@64) ($generated@@74 $generated@@539 ($generated@@135 $generated@@540 $generated@@542) $generated@@541))
 :pattern ( ($generated@@74 $generated@@539 ($generated@@135 $generated@@540 $generated@@542) $generated@@541))
))))) ($generated@@236 ($generated@@143 $generated@@539) $generated@@540 $generated@@541))
 :pattern ( ($generated@@236 ($generated@@143 $generated@@539) $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@136) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@545) (and ($generated@@134 $generated@@543) (exists (($generated@@546 T@U) ) (!  (and (= (type $generated@@546) $generated@@64) ($generated@@74 $generated@@543 ($generated@@135 $generated@@546 $generated@@544) $generated@@545))
 :pattern ( ($generated@@74 $generated@@543 ($generated@@135 $generated@@546 $generated@@544) $generated@@545))
))))) ($generated@@236 ($generated@@144 $generated@@543) $generated@@544 $generated@@545))
 :pattern ( ($generated@@236 ($generated@@144 $generated@@543) $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@145) (= (type $generated@@548) $generated@@145)) (= ($generated@@211 ($generated@@231 $generated@@547) ($generated@@231 $generated@@548)) ($generated@@231 ($generated@@211 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@211 ($generated@@231 $generated@@547) ($generated@@231 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ) (! (= ($generated@@256 ($generated@@231 $generated@@549)) ($generated@@231 ($generated@@256 $generated@@549)))
 :pattern ( ($generated@@256 ($generated@@231 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@251 (type $generated@@550))))
 (=> (and (= (type $generated@@550) ($generated@@250 $generated@@551)) (= ($generated@@249 $generated@@550) 0)) (= $generated@@550 ($generated@@248 $generated@@551))))
 :pattern ( ($generated@@249 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@553)))
 (=> (and (and (= (type $generated@@552) ($generated@@76 $generated@@555 $generated@@2)) (= (type $generated@@554) $generated@@2)) (<= 0 ($generated $generated@@554))) (= ($generated@@261 ($generated@@82 $generated@@552 $generated@@553 $generated@@554)) (+ (- ($generated@@261 $generated@@552) ($generated ($generated@@81 $generated@@552 $generated@@553))) ($generated $generated@@554)))))
 :pattern ( ($generated@@261 ($generated@@82 $generated@@552 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@557) $generated@@2)) ($generated@@74 $generated@@557 $generated@@46 $generated@@556))
 :pattern ( ($generated@@74 $generated@@557 $generated@@46 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@559) $generated@@3)) ($generated@@74 $generated@@559 $generated@@47 $generated@@558))
 :pattern ( ($generated@@74 $generated@@559 $generated@@47 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@561) $generated@@4)) ($generated@@74 $generated@@561 $generated@@44 $generated@@560))
 :pattern ( ($generated@@74 $generated@@561 $generated@@44 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@563) $generated@@418)) ($generated@@74 $generated@@563 $generated@@45 $generated@@562))
 :pattern ( ($generated@@74 $generated@@563 $generated@@45 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@565) $generated@@145)) ($generated@@74 $generated@@565 $generated@@48 $generated@@564))
 :pattern ( ($generated@@74 $generated@@565 $generated@@48 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@250 $generated@@145)) (= (type $generated@@567) $generated@@64)) (= ($generated@@132 $generated@@566 ($generated@@460 $generated@@567)) (forall (($generated@@568 Int) ) (!  (=> (and (<= 0 $generated@@568) (< $generated@@568 ($generated@@249 $generated@@566))) ($generated@@212 ($generated@@461 $generated@@566 $generated@@568) $generated@@567))
 :pattern ( ($generated@@461 $generated@@566 $generated@@568))
))))
 :pattern ( ($generated@@132 $generated@@566 ($generated@@460 $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 Int) ) (!  (=> (= (type $generated@@570) ($generated@@250 $generated@@145)) (=> (and (<= 0 $generated@@571) (< $generated@@571 ($generated@@249 $generated@@570))) (< ($generated@@499 ($generated@@347 $generated@@136 ($generated@@461 $generated@@570 $generated@@571))) ($generated@@569 $generated@@570))))
 :pattern ( ($generated@@499 ($generated@@347 $generated@@136 ($generated@@461 $generated@@570 $generated@@571))))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) $generated@@64)) ($generated@@132 $generated@@572 ($generated@@375 $generated@@573 $generated@@574))) (and (and ($generated@@132 ($generated@@267 $generated@@572) ($generated@@221 $generated@@573)) ($generated@@132 ($generated@@315 $generated@@572) ($generated@@221 $generated@@574))) ($generated@@132 ($generated@@346 $generated@@572) ($generated@@221 ($generated@@135 $generated@@573 $generated@@574)))))
 :pattern ( ($generated@@132 $generated@@572 ($generated@@375 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@576) $generated@@64)) (= (type $generated@@577) $generated@@64)) ($generated@@132 $generated@@575 ($generated@@383 $generated@@576 $generated@@577))) (and (and ($generated@@132 ($generated@@285 $generated@@575) ($generated@@226 $generated@@576)) ($generated@@132 ($generated@@326 $generated@@575) ($generated@@226 $generated@@577))) ($generated@@132 ($generated@@357 $generated@@575) ($generated@@226 ($generated@@135 $generated@@576 $generated@@577)))))
 :pattern ( ($generated@@132 $generated@@575 ($generated@@383 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@2) ($generated@@132 $generated@@578 $generated@@46))
 :pattern ( ($generated@@132 $generated@@578 $generated@@46))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@3) ($generated@@132 $generated@@579 $generated@@47))
 :pattern ( ($generated@@132 $generated@@579 $generated@@47))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@4) ($generated@@132 $generated@@580 $generated@@44))
 :pattern ( ($generated@@132 $generated@@580 $generated@@44))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@418) ($generated@@132 $generated@@581 $generated@@45))
 :pattern ( ($generated@@132 $generated@@581 $generated@@45))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@145) ($generated@@132 $generated@@582 $generated@@48))
 :pattern ( ($generated@@132 $generated@@582 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@583 () T@U)
(declare-fun $generated@@584 () T@U)
(declare-fun $generated@@585 () T@U)
(declare-fun $generated@@586 () T@U)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 (T@U) Bool)
(declare-fun $generated@@590 () Int)
(assert  (and (and (and (and (and (= (type $generated@@583) $generated@@64) (= (type $generated@@584) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@585) $generated@@145)) (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@587) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@588) $generated@@77)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@591  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@303 ($generated@@504 $generated@@583 $generated@@584) $generated@@584))))
(let (($generated@@592  (=> (and (not ($generated@@0 ($generated@@81 $generated@@584 $generated@@585))) (= (ControlFlow 0 5) 2)) $generated@@591)))
(let (($generated@@593  (=> (and ($generated@@0 ($generated@@81 $generated@@584 $generated@@585)) (= (ControlFlow 0 4) 2)) $generated@@591)))
(let (($generated@@594  (=> (and ($generated@@212 $generated@@585 $generated@@583) ($generated@@236 $generated@@585 $generated@@583 $generated@@586)) (and (=> (= (ControlFlow 0 6) 4) $generated@@593) (=> (= (ControlFlow 0 6) 5) $generated@@592)))))
(let (($generated@@595  (=> (and (not (and ($generated@@212 $generated@@585 $generated@@583) ($generated@@236 $generated@@585 $generated@@583 $generated@@586))) (= (ControlFlow 0 3) 2)) $generated@@591)))
(let (($generated@@596  (=> (= $generated@@587 ($generated@@156 $generated@@588 $generated@@586 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 6) $generated@@594) (=> (= (ControlFlow 0 7) 3) $generated@@595)))))
(let (($generated@@597  (=> (and ($generated@@235 $generated@@586) ($generated@@589 $generated@@586)) (=> (and (and ($generated@@132 $generated@@584 ($generated@@221 $generated@@583)) ($generated@@74 $generated@@584 ($generated@@221 $generated@@583) $generated@@586)) (and (= 0 $generated@@590) (= (ControlFlow 0 8) 7))) $generated@@596))))
$generated@@597))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@236 (T@U T@U T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@248 (T@T) T@U)
(declare-fun $generated@@249 (T@U) Int)
(declare-fun $generated@@250 (T@T) T@T)
(declare-fun $generated@@251 (T@T) T@T)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@268 (T@T T@T) T@U)
(declare-fun $generated@@269 (T@T T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@303 (T@U T@U) Bool)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@347 (T@T T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@375 (T@U T@U) T@U)
(declare-fun $generated@@383 (T@U T@U) T@U)
(declare-fun $generated@@394 (T@T) T@U)
(declare-fun $generated@@418 () T@T)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@430 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@461 (T@U Int) T@U)
(declare-fun $generated@@470 (T@U) Int)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@499 (T@U) Int)
(declare-fun $generated@@504 (T@U T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@569 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (let (($generated@@233 (type $generated@@232)))
(= (type ($generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= ($generated@@231 $generated@@234) $generated@@234)
 :pattern ( ($generated@@231 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@237) $generated@@64) (= (type $generated@@238) $generated@@64)) (= (type $generated@@239) $generated@@145)) (= (type $generated@@240) $generated@@145)) (= (type $generated@@241) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@235 $generated@@241)) (= ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241)  (and ($generated@@236 $generated@@239 $generated@@237 $generated@@241) ($generated@@236 $generated@@240 $generated@@238 $generated@@241))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@239 $generated@@240) ($generated@@135 $generated@@237 $generated@@238) $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (= (type ($generated@@242 $generated@@243)) $generated@@68)
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (!  (=> (= (type $generated@@244) $generated@@136) (= ($generated@@134 $generated@@244) (= ($generated@@242 $generated@@244) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@136) ($generated@@134 $generated@@245)) (exists (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (and (and (= (type $generated@@246) $generated@@145) (= (type $generated@@247) $generated@@145)) (= $generated@@245 ($generated@@211 $generated@@246 $generated@@247)))
 :no-pattern (type $generated@@246)
 :no-pattern (type $generated@@247)
 :no-pattern ($generated $generated@@246)
 :no-pattern ($generated@@0 $generated@@246)
 :no-pattern ($generated $generated@@247)
 :no-pattern ($generated@@0 $generated@@247)
)))
 :pattern ( ($generated@@134 $generated@@245))
)))
(assert  (and (and (forall (($generated@@252 T@T) ) (= ($generated@@1 ($generated@@250 $generated@@252)) 17)) (forall (($generated@@253 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@253)) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
))) (forall (($generated@@254 T@T) ) (! (= (type ($generated@@248 $generated@@254)) ($generated@@250 $generated@@254))
 :pattern ( ($generated@@248 $generated@@254))
))))
(assert (forall (($generated@@255 T@T) ) (! (= ($generated@@249 ($generated@@248 $generated@@255)) 0)
 :pattern ( ($generated@@248 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@145)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@64) (= (type $generated@@260) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260) ($generated@@74 $generated@@258 $generated@@259 $generated@@260)))
 :pattern ( ($generated@@236 ($generated@@256 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@263 T@T) ) (! (= (type ($generated@@262 $generated@@263)) ($generated@@76 $generated@@263 $generated@@2))
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 ($generated@@79 (type $generated@@264))))
 (=> (= (type $generated@@264) ($generated@@76 $generated@@265 $generated@@2)) (and (= (= ($generated@@261 $generated@@264) 0) (= $generated@@264 ($generated@@262 $generated@@265))) (=> (not (= ($generated@@261 $generated@@264) 0)) (exists (($generated@@266 T@U) ) (!  (and (= (type $generated@@266) $generated@@265) (< 0 ($generated ($generated@@81 $generated@@264 $generated@@266))))
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
))))))
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert  (and (and (and (and (forall (($generated@@272 T@T) ($generated@@273 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@272 $generated@@273)) 18)) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@274 $generated@@275)) $generated@@274)
 :pattern ( ($generated@@269 $generated@@274 $generated@@275))
))) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@271 ($generated@@269 $generated@@276 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@269 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@270 (type $generated@@278))))
(= (type ($generated@@267 $generated@@278)) ($generated@@76 $generated@@279 $generated@@4)))
 :pattern ( ($generated@@267 $generated@@278))
))) (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (! (= (type ($generated@@268 $generated@@280 $generated@@281)) ($generated@@269 $generated@@280 $generated@@281))
 :pattern ( ($generated@@268 $generated@@280 $generated@@281))
))))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@T) ) (! (let (($generated@@284 (type $generated@@282)))
 (not ($generated@@0 ($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282))))
 :pattern ( (let (($generated@@284 (type $generated@@282)))
($generated@@81 ($generated@@267 ($generated@@268 $generated@@284 $generated@@283)) $generated@@282)))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 19)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@76 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@81 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@304))))
 (=> (and (= (type $generated@@304) ($generated@@76 $generated@@306 $generated@@4)) (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@4))) (= ($generated@@303 $generated@@304 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (= ($generated@@0 ($generated@@81 $generated@@304 $generated@@307)) ($generated@@0 ($generated@@81 $generated@@305 $generated@@307))))
 :pattern ( ($generated@@81 $generated@@304 $generated@@307))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@303 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@79 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@76 $generated@@309 $generated@@2)) (= ($generated@@151 $generated@@308) (forall (($generated@@310 T@U) ) (!  (=> (= (type $generated@@310) $generated@@309) (and (<= 0 ($generated ($generated@@81 $generated@@308 $generated@@310))) (<= ($generated ($generated@@81 $generated@@308 $generated@@310)) ($generated@@261 $generated@@308))))
 :pattern ( ($generated@@81 $generated@@308 $generated@@310))
)))))
 :pattern ( ($generated@@151 $generated@@308))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@271 (type $generated@@311))))
(let (($generated@@313 ($generated@@270 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@269 $generated@@313 $generated@@312)) (or (= $generated@@311 ($generated@@268 $generated@@313 $generated@@312)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@311) $generated@@314)))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@267 $generated@@311))
)))
(assert (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@271 (type $generated@@316))))
(= (type ($generated@@315 $generated@@316)) ($generated@@76 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@271 (type $generated@@318))))
(let (($generated@@320 ($generated@@270 (type $generated@@318))))
 (=> (= (type $generated@@318) ($generated@@269 $generated@@320 $generated@@319)) (or (= $generated@@318 ($generated@@268 $generated@@320 $generated@@319)) (exists (($generated@@321 T@U) ) (!  (and (= (type $generated@@321) $generated@@319) ($generated@@0 ($generated@@81 ($generated@@315 $generated@@318) $generated@@321)))
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
))))))
 :pattern ( ($generated@@315 $generated@@318))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@289 (type $generated@@322))))
(let (($generated@@324 ($generated@@288 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@287 $generated@@324 $generated@@323)) (or (= $generated@@322 ($generated@@286 $generated@@324 $generated@@323)) (exists (($generated@@325 T@U) ) (!  (and (= (type $generated@@325) $generated@@324) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@322) $generated@@325)))
 :no-pattern (type $generated@@325)
 :no-pattern ($generated $generated@@325)
 :no-pattern ($generated@@0 $generated@@325)
))))))
 :pattern ( ($generated@@285 $generated@@322))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@289 (type $generated@@327))))
(= (type ($generated@@326 $generated@@327)) ($generated@@76 $generated@@328 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@289 (type $generated@@329))))
(let (($generated@@331 ($generated@@288 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@287 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@286 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@330) ($generated@@0 ($generated@@81 ($generated@@326 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@326 $generated@@329))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@333) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@334) $generated@@64)) (= ($generated@@132 $generated@@333 ($generated@@150 $generated@@334)) (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@333 $generated@@335)))) ($generated@@212 $generated@@335 $generated@@334))
 :pattern ( ($generated@@81 $generated@@333 $generated@@335))
))))
 :pattern ( ($generated@@132 $generated@@333 ($generated@@150 $generated@@334)))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ) (!  (=> (and (and (= (type $generated@@336) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@337) $generated@@64)) (= (type $generated@@338) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@336 ($generated@@221 $generated@@337) $generated@@338) (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@145) ($generated@@0 ($generated@@81 $generated@@336 $generated@@339))) ($generated@@236 $generated@@339 $generated@@337 $generated@@338))
 :pattern ( ($generated@@81 $generated@@336 $generated@@339))
))))
 :pattern ( ($generated@@74 $generated@@336 ($generated@@221 $generated@@337) $generated@@338))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (= (type $generated@@340) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@341) $generated@@64)) (= (type $generated@@342) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@340 ($generated@@226 $generated@@341) $generated@@342) (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@145) ($generated@@0 ($generated@@81 $generated@@340 $generated@@343))) ($generated@@236 $generated@@343 $generated@@341 $generated@@342))
 :pattern ( ($generated@@81 $generated@@340 $generated@@343))
))))
 :pattern ( ($generated@@74 $generated@@340 ($generated@@226 $generated@@341) $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 (type $generated@@344)))
(= ($generated ($generated@@81 ($generated@@262 $generated@@345) $generated@@344)) 0))
 :pattern ( (let (($generated@@345 (type $generated@@344)))
($generated@@81 ($generated@@262 $generated@@345) $generated@@344)))
)))
(assert  (and (and (forall (($generated@@349 T@U) ) (! (= (type ($generated@@346 $generated@@349)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@346 $generated@@349))
)) (forall (($generated@@350 T@T) ($generated@@351 T@U) ) (! (= (type ($generated@@347 $generated@@350 $generated@@351)) $generated@@350)
 :pattern ( ($generated@@347 $generated@@350 $generated@@351))
))) (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@271 (type $generated@@352))))
(let (($generated@@354 ($generated@@270 (type $generated@@352))))
(= (type ($generated@@348 $generated@@352)) ($generated@@76 $generated@@354 $generated@@353))))
 :pattern ( ($generated@@348 $generated@@352))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@355) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@356) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@346 $generated@@355) $generated@@356))  (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@355) ($generated@@143 ($generated@@347 $generated@@136 $generated@@356)))) (= ($generated@@81 ($generated@@348 $generated@@355) ($generated@@143 ($generated@@347 $generated@@136 $generated@@356))) ($generated@@144 ($generated@@347 $generated@@136 $generated@@356))))))
 :pattern ( ($generated@@81 ($generated@@346 $generated@@355) $generated@@356))
)))
(assert  (and (forall (($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@359)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@357 $generated@@359))
)) (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@289 (type $generated@@360))))
(let (($generated@@362 ($generated@@288 (type $generated@@360))))
(= (type ($generated@@358 $generated@@360)) ($generated@@76 $generated@@362 $generated@@361))))
 :pattern ( ($generated@@358 $generated@@360))
))))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@363) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@364) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@357 $generated@@363) $generated@@364))  (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@363) ($generated@@143 ($generated@@347 $generated@@136 $generated@@364)))) (= ($generated@@81 ($generated@@358 $generated@@363) ($generated@@143 ($generated@@347 $generated@@136 $generated@@364))) ($generated@@144 ($generated@@347 $generated@@136 $generated@@364))))))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@363) $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ) (! (let (($generated@@367 (type $generated@@366)))
(let (($generated@@368 ($generated@@270 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@269 $generated@@368 $generated@@367)) (= ($generated@@0 ($generated@@81 ($generated@@315 $generated@@365) $generated@@366)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) (and ($generated@@0 ($generated@@81 ($generated@@267 $generated@@365) $generated@@369)) (= $generated@@366 ($generated@@81 ($generated@@348 $generated@@365) $generated@@369))))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@365) $generated@@369))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@365) $generated@@369))
))))))
 :pattern ( ($generated@@81 ($generated@@315 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ($generated@@371 T@U) ) (! (let (($generated@@372 (type $generated@@371)))
(let (($generated@@373 ($generated@@288 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@287 $generated@@373 $generated@@372)) (= ($generated@@0 ($generated@@81 ($generated@@326 $generated@@370) $generated@@371)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) (and ($generated@@0 ($generated@@81 ($generated@@285 $generated@@370) $generated@@374)) (= $generated@@371 ($generated@@81 ($generated@@358 $generated@@370) $generated@@374))))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@370) $generated@@374))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@370) $generated@@374))
))))))
 :pattern ( ($generated@@81 ($generated@@326 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@376 $generated@@377)) $generated@@64)
 :pattern ( ($generated@@375 $generated@@376 $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (and (and (= (type $generated@@378) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@379) $generated@@64)) (= (type $generated@@380) $generated@@64)) (= (type $generated@@381) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@378 ($generated@@375 $generated@@379 $generated@@380) $generated@@381) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@378) $generated@@382))) (and ($generated@@236 ($generated@@81 ($generated@@348 $generated@@378) $generated@@382) $generated@@380 $generated@@381) ($generated@@236 $generated@@382 $generated@@379 $generated@@381)))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@378) $generated@@382))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@378) $generated@@382))
))))
 :pattern ( ($generated@@74 $generated@@378 ($generated@@375 $generated@@379 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@384 $generated@@385)) $generated@@64)
 :pattern ( ($generated@@383 $generated@@384 $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (and (= (type $generated@@386) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@386) $generated@@390))) (and ($generated@@236 ($generated@@81 ($generated@@358 $generated@@386) $generated@@390) $generated@@388 $generated@@389) ($generated@@236 $generated@@390 $generated@@387 $generated@@389)))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@386) $generated@@390))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@386) $generated@@390))
))))
 :pattern ( ($generated@@74 $generated@@386 ($generated@@383 $generated@@387 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@79 (type $generated@@391))))
 (=> (and (and (= (type $generated@@391) ($generated@@76 $generated@@393 $generated@@4)) (= (type $generated@@392) ($generated@@76 $generated@@393 $generated@@4))) ($generated@@303 $generated@@391 $generated@@392)) (= $generated@@391 $generated@@392)))
 :pattern ( ($generated@@303 $generated@@391 $generated@@392))
)))
(assert (forall (($generated@@395 T@T) ) (! (= (type ($generated@@394 $generated@@395)) ($generated@@76 $generated@@395 $generated@@4))
 :pattern ( ($generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@289 (type $generated@@396))))
(let (($generated@@398 ($generated@@288 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@287 $generated@@398 $generated@@397)) (= (= $generated@@396 ($generated@@286 $generated@@398 $generated@@397)) (= ($generated@@285 $generated@@396) ($generated@@394 $generated@@398))))))
 :pattern ( ($generated@@285 $generated@@396))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@289 (type $generated@@399))))
(let (($generated@@401 ($generated@@288 (type $generated@@399))))
 (=> (= (type $generated@@399) ($generated@@287 $generated@@401 $generated@@400)) (= (= $generated@@399 ($generated@@286 $generated@@401 $generated@@400)) (= ($generated@@326 $generated@@399) ($generated@@394 $generated@@400))))))
 :pattern ( ($generated@@326 $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@289 (type $generated@@402))))
(let (($generated@@404 ($generated@@288 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@287 $generated@@404 $generated@@403)) (= (= $generated@@402 ($generated@@286 $generated@@404 $generated@@403)) (= ($generated@@357 $generated@@402) ($generated@@394 $generated@@145))))))
 :pattern ( ($generated@@357 $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@271 (type $generated@@405))))
(let (($generated@@407 ($generated@@270 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@269 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@268 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (and (and (= (type $generated@@408) $generated@@145) (= (type $generated@@409) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@346 $generated@@405) ($generated@@256 ($generated@@211 $generated@@408 $generated@@409)))))
 :no-pattern (type $generated@@408)
 :no-pattern (type $generated@@409)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
))))))
 :pattern ( ($generated@@346 $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@289 (type $generated@@410))))
(let (($generated@@412 ($generated@@288 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@287 $generated@@412 $generated@@411)) (or (= $generated@@410 ($generated@@286 $generated@@412 $generated@@411)) (exists (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (and (and (= (type $generated@@413) $generated@@145) (= (type $generated@@414) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@357 $generated@@410) ($generated@@256 ($generated@@211 $generated@@413 $generated@@414)))))
 :no-pattern (type $generated@@413)
 :no-pattern (type $generated@@414)
 :no-pattern ($generated $generated@@413)
 :no-pattern ($generated@@0 $generated@@413)
 :no-pattern ($generated $generated@@414)
 :no-pattern ($generated@@0 $generated@@414)
))))))
 :pattern ( ($generated@@357 $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@145) ($generated@@212 $generated@@415 $generated@@46)) (and (= ($generated@@256 ($generated@@347 $generated@@2 $generated@@415)) $generated@@415) ($generated@@132 ($generated@@347 $generated@@2 $generated@@415) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@415 $generated@@46))
)))
(assert (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@145) ($generated@@212 $generated@@416 $generated@@47)) (and (= ($generated@@256 ($generated@@347 $generated@@3 $generated@@416)) $generated@@416) ($generated@@132 ($generated@@347 $generated@@3 $generated@@416) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@416 $generated@@47))
)))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@145) ($generated@@212 $generated@@417 $generated@@44)) (and (= ($generated@@256 ($generated@@347 $generated@@4 $generated@@417)) $generated@@417) ($generated@@132 ($generated@@347 $generated@@4 $generated@@417) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@417 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@418) 20))
(assert (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@145) ($generated@@212 $generated@@419 $generated@@45)) (and (= ($generated@@256 ($generated@@347 $generated@@418 $generated@@419)) $generated@@419) ($generated@@132 ($generated@@347 $generated@@418 $generated@@419) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@419 $generated@@45))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (= (type $generated@@421) $generated@@64) (= ($generated@@212 ($generated@@256 $generated@@420) $generated@@421) ($generated@@132 $generated@@420 $generated@@421)))
 :pattern ( ($generated@@212 ($generated@@256 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@79 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@76 $generated@@423 $generated@@2)) (<= 0 ($generated@@261 $generated@@422))))
 :pattern ( ($generated@@261 $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@251 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@250 $generated@@425)) (<= 0 ($generated@@249 $generated@@424))))
 :pattern ( ($generated@@249 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (= (type ($generated@@426 $generated@@427)) $generated@@64)
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@64) (= (type $generated@@429) $generated@@64)) (= ($generated@@426 ($generated@@375 $generated@@428 $generated@@429)) $generated@@428))
 :pattern ( ($generated@@375 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (= (type ($generated@@430 $generated@@431)) $generated@@64)
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@64) (= (type $generated@@433) $generated@@64)) (= ($generated@@430 ($generated@@375 $generated@@432 $generated@@433)) $generated@@433))
 :pattern ( ($generated@@375 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@64) (= (type $generated@@435) $generated@@64)) (= ($generated@@72 ($generated@@375 $generated@@434 $generated@@435)) $generated@@58))
 :pattern ( ($generated@@375 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@64)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@436 ($generated@@383 $generated@@438 $generated@@439)) $generated@@438))
 :pattern ( ($generated@@383 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@64)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@440 ($generated@@383 $generated@@442 $generated@@443)) $generated@@443))
 :pattern ( ($generated@@383 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@72 ($generated@@383 $generated@@444 $generated@@445)) $generated@@59))
 :pattern ( ($generated@@383 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@145) (= (type $generated@@447) $generated@@145)) (= ($generated@@242 ($generated@@211 $generated@@446 $generated@@447)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@135 $generated@@450 $generated@@451)) $generated@@450))
 :pattern ( ($generated@@135 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@135 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@135 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@145) (= (type $generated@@457) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@456 $generated@@457)) $generated@@456))
 :pattern ( ($generated@@211 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@145) (= (type $generated@@459) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@211 $generated@@458 $generated@@459))
)))
(assert  (and (forall (($generated@@462 T@U) ) (! (= (type ($generated@@460 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@460 $generated@@462))
)) (forall (($generated@@463 T@U) ($generated@@464 Int) ) (! (let (($generated@@465 ($generated@@251 (type $generated@@463))))
(= (type ($generated@@461 $generated@@463 $generated@@464)) $generated@@465))
 :pattern ( ($generated@@461 $generated@@463 $generated@@464))
))))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (= (type $generated@@466) ($generated@@250 $generated@@145)) (= (type $generated@@467) $generated@@64)) (= (type $generated@@468) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@466 ($generated@@460 $generated@@467) $generated@@468) (forall (($generated@@469 Int) ) (!  (=> (and (<= 0 $generated@@469) (< $generated@@469 ($generated@@249 $generated@@466))) ($generated@@236 ($generated@@461 $generated@@466 $generated@@469) $generated@@467 $generated@@468))
 :pattern ( ($generated@@461 $generated@@466 $generated@@469))
))))
 :pattern ( ($generated@@74 $generated@@466 ($generated@@460 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@471 Int) ) (! (= ($generated@@470 ($generated@@75 $generated@@471)) $generated@@471)
 :pattern ( ($generated@@75 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@64) (= ($generated@@472 ($generated@@221 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@221 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@475)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@64) (= ($generated@@476 ($generated@@226 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@226 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@479)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@64) (= ($generated@@480 ($generated@@150 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@150 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@483)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@64)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@64) (= ($generated@@484 ($generated@@460 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@460 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@72 ($generated@@460 $generated@@487)) $generated@@57))
 :pattern ( ($generated@@460 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 (type $generated@@488)))
(= ($generated@@347 $generated@@489 ($generated@@256 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@256 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@491) $generated@@64)) (= (type $generated@@492) $generated@@64)) (= ($generated@@132 $generated@@490 ($generated@@375 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@267 $generated@@490) $generated@@493))) (and ($generated@@212 ($generated@@81 ($generated@@348 $generated@@490) $generated@@493) $generated@@492) ($generated@@212 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@81 ($generated@@348 $generated@@490) $generated@@493))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@132 $generated@@490 ($generated@@375 $generated@@491 $generated@@492)))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@495) $generated@@64)) (= (type $generated@@496) $generated@@64)) (= ($generated@@132 $generated@@494 ($generated@@383 $generated@@495 $generated@@496)) (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@285 $generated@@494) $generated@@497))) (and ($generated@@212 ($generated@@81 ($generated@@358 $generated@@494) $generated@@497) $generated@@496) ($generated@@212 $generated@@497 $generated@@495)))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@494) $generated@@497))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@494) $generated@@497))
))))
 :pattern ( ($generated@@132 $generated@@494 ($generated@@383 $generated@@495 $generated@@496)))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@145) (= (type $generated@@501) $generated@@145)) (< ($generated@@498 $generated@@500) ($generated@@499 ($generated@@211 $generated@@500 $generated@@501))))
 :pattern ( ($generated@@211 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@145) (= (type $generated@@503) $generated@@145)) (< ($generated@@498 $generated@@503) ($generated@@499 ($generated@@211 $generated@@502 $generated@@503))))
 :pattern ( ($generated@@211 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (! (= (type ($generated@@504 $generated@@505 $generated@@506)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@504 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) $generated@@64) (= (type $generated@@508) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@509) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@504 $generated@@507 $generated@@508) $generated@@509))  (and ($generated@@212 $generated@@509 $generated@@507) ($generated@@0 ($generated@@81 $generated@@508 $generated@@509)))))
 :pattern ( ($generated@@81 ($generated@@504 $generated@@507 $generated@@508) $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (and (= (type $generated@@510) $generated@@145) (= (type $generated@@511) $generated@@64)) (= (type $generated@@512) $generated@@64)) ($generated@@212 $generated@@510 ($generated@@375 $generated@@511 $generated@@512))) (and (= ($generated@@256 ($generated@@347 ($generated@@269 $generated@@145 $generated@@145) $generated@@510)) $generated@@510) ($generated@@132 ($generated@@347 ($generated@@269 $generated@@145 $generated@@145) $generated@@510) ($generated@@375 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@212 $generated@@510 ($generated@@375 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@145) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) ($generated@@212 $generated@@513 ($generated@@383 $generated@@514 $generated@@515))) (and (= ($generated@@256 ($generated@@347 ($generated@@287 $generated@@145 $generated@@145) $generated@@513)) $generated@@513) ($generated@@132 ($generated@@347 ($generated@@287 $generated@@145 $generated@@145) $generated@@513) ($generated@@383 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@212 $generated@@513 ($generated@@383 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@64) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@145)) ($generated@@212 $generated@@518 ($generated@@135 $generated@@516 $generated@@517))) (and (= ($generated@@256 ($generated@@347 $generated@@136 $generated@@518)) $generated@@518) ($generated@@132 ($generated@@347 $generated@@136 $generated@@518) ($generated@@135 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@212 $generated@@518 ($generated@@135 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 (type $generated@@519)))
 (not ($generated@@0 ($generated@@81 ($generated@@394 $generated@@520) $generated@@519))))
 :pattern ( (let (($generated@@520 (type $generated@@519)))
($generated@@81 ($generated@@394 $generated@@520) $generated@@519)))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@69)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@64) (= (type $generated@@524) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@523 $generated@@524)) $generated@@62) (= ($generated@@521 ($generated@@135 $generated@@523 $generated@@524)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@136) (= ($generated@@498 ($generated@@256 $generated@@525)) ($generated@@499 $generated@@525)))
 :pattern ( ($generated@@498 ($generated@@256 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@145) ($generated@@212 $generated@@526 ($generated@@75 0))) (and (= ($generated@@256 ($generated@@347 $generated@@2 $generated@@526)) $generated@@526) ($generated@@132 ($generated@@347 ($generated@@76 $generated@@145 $generated@@4) $generated@@526) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@526 ($generated@@75 0)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@64)) ($generated@@212 $generated@@527 ($generated@@221 $generated@@528))) (and (= ($generated@@256 ($generated@@347 ($generated@@76 $generated@@145 $generated@@4) $generated@@527)) $generated@@527) ($generated@@132 ($generated@@347 ($generated@@76 $generated@@145 $generated@@4) $generated@@527) ($generated@@221 $generated@@528))))
 :pattern ( ($generated@@212 $generated@@527 ($generated@@221 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@529) $generated@@145) (= (type $generated@@530) $generated@@64)) ($generated@@212 $generated@@529 ($generated@@226 $generated@@530))) (and (= ($generated@@256 ($generated@@347 ($generated@@76 $generated@@145 $generated@@4) $generated@@529)) $generated@@529) ($generated@@132 ($generated@@347 ($generated@@76 $generated@@145 $generated@@4) $generated@@529) ($generated@@226 $generated@@530))))
 :pattern ( ($generated@@212 $generated@@529 ($generated@@226 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@145) (= (type $generated@@532) $generated@@64)) ($generated@@212 $generated@@531 ($generated@@150 $generated@@532))) (and (= ($generated@@256 ($generated@@347 ($generated@@76 $generated@@145 $generated@@2) $generated@@531)) $generated@@531) ($generated@@132 ($generated@@347 ($generated@@76 $generated@@145 $generated@@2) $generated@@531) ($generated@@150 $generated@@532))))
 :pattern ( ($generated@@212 $generated@@531 ($generated@@150 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@533) $generated@@145) (= (type $generated@@534) $generated@@64)) ($generated@@212 $generated@@533 ($generated@@460 $generated@@534))) (and (= ($generated@@256 ($generated@@347 ($generated@@250 $generated@@145) $generated@@533)) $generated@@533) ($generated@@132 ($generated@@347 ($generated@@250 $generated@@145) $generated@@533) ($generated@@460 $generated@@534))))
 :pattern ( ($generated@@212 $generated@@533 ($generated@@460 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@536) $generated@@64)) (= (type $generated@@537) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@535 ($generated@@150 $generated@@536) $generated@@537) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@535 $generated@@538)))) ($generated@@236 $generated@@538 $generated@@536 $generated@@537))
 :pattern ( ($generated@@81 $generated@@535 $generated@@538))
))))
 :pattern ( ($generated@@74 $generated@@535 ($generated@@150 $generated@@536) $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (and (= (type $generated@@539) $generated@@136) (= (type $generated@@540) $generated@@64)) (= (type $generated@@541) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@541) (and ($generated@@134 $generated@@539) (exists (($generated@@542 T@U) ) (!  (and (= (type $generated@@542) $generated@@64) ($generated@@74 $generated@@539 ($generated@@135 $generated@@540 $generated@@542) $generated@@541))
 :pattern ( ($generated@@74 $generated@@539 ($generated@@135 $generated@@540 $generated@@542) $generated@@541))
))))) ($generated@@236 ($generated@@143 $generated@@539) $generated@@540 $generated@@541))
 :pattern ( ($generated@@236 ($generated@@143 $generated@@539) $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) $generated@@136) (= (type $generated@@544) $generated@@64)) (= (type $generated@@545) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@235 $generated@@545) (and ($generated@@134 $generated@@543) (exists (($generated@@546 T@U) ) (!  (and (= (type $generated@@546) $generated@@64) ($generated@@74 $generated@@543 ($generated@@135 $generated@@546 $generated@@544) $generated@@545))
 :pattern ( ($generated@@74 $generated@@543 ($generated@@135 $generated@@546 $generated@@544) $generated@@545))
))))) ($generated@@236 ($generated@@144 $generated@@543) $generated@@544 $generated@@545))
 :pattern ( ($generated@@236 ($generated@@144 $generated@@543) $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@145) (= (type $generated@@548) $generated@@145)) (= ($generated@@211 ($generated@@231 $generated@@547) ($generated@@231 $generated@@548)) ($generated@@231 ($generated@@211 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@211 ($generated@@231 $generated@@547) ($generated@@231 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ) (! (= ($generated@@256 ($generated@@231 $generated@@549)) ($generated@@231 ($generated@@256 $generated@@549)))
 :pattern ( ($generated@@256 ($generated@@231 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (! (let (($generated@@551 ($generated@@251 (type $generated@@550))))
 (=> (and (= (type $generated@@550) ($generated@@250 $generated@@551)) (= ($generated@@249 $generated@@550) 0)) (= $generated@@550 ($generated@@248 $generated@@551))))
 :pattern ( ($generated@@249 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@553)))
 (=> (and (and (= (type $generated@@552) ($generated@@76 $generated@@555 $generated@@2)) (= (type $generated@@554) $generated@@2)) (<= 0 ($generated $generated@@554))) (= ($generated@@261 ($generated@@82 $generated@@552 $generated@@553 $generated@@554)) (+ (- ($generated@@261 $generated@@552) ($generated ($generated@@81 $generated@@552 $generated@@553))) ($generated $generated@@554)))))
 :pattern ( ($generated@@261 ($generated@@82 $generated@@552 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@557) $generated@@2)) ($generated@@74 $generated@@557 $generated@@46 $generated@@556))
 :pattern ( ($generated@@74 $generated@@557 $generated@@46 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@559) $generated@@3)) ($generated@@74 $generated@@559 $generated@@47 $generated@@558))
 :pattern ( ($generated@@74 $generated@@559 $generated@@47 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@561) $generated@@4)) ($generated@@74 $generated@@561 $generated@@44 $generated@@560))
 :pattern ( ($generated@@74 $generated@@561 $generated@@44 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@563) $generated@@418)) ($generated@@74 $generated@@563 $generated@@45 $generated@@562))
 :pattern ( ($generated@@74 $generated@@563 $generated@@45 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@565) $generated@@145)) ($generated@@74 $generated@@565 $generated@@48 $generated@@564))
 :pattern ( ($generated@@74 $generated@@565 $generated@@48 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@250 $generated@@145)) (= (type $generated@@567) $generated@@64)) (= ($generated@@132 $generated@@566 ($generated@@460 $generated@@567)) (forall (($generated@@568 Int) ) (!  (=> (and (<= 0 $generated@@568) (< $generated@@568 ($generated@@249 $generated@@566))) ($generated@@212 ($generated@@461 $generated@@566 $generated@@568) $generated@@567))
 :pattern ( ($generated@@461 $generated@@566 $generated@@568))
))))
 :pattern ( ($generated@@132 $generated@@566 ($generated@@460 $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 Int) ) (!  (=> (= (type $generated@@570) ($generated@@250 $generated@@145)) (=> (and (<= 0 $generated@@571) (< $generated@@571 ($generated@@249 $generated@@570))) (< ($generated@@499 ($generated@@347 $generated@@136 ($generated@@461 $generated@@570 $generated@@571))) ($generated@@569 $generated@@570))))
 :pattern ( ($generated@@499 ($generated@@347 $generated@@136 ($generated@@461 $generated@@570 $generated@@571))))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (and (= (type $generated@@572) ($generated@@269 $generated@@145 $generated@@145)) (= (type $generated@@573) $generated@@64)) (= (type $generated@@574) $generated@@64)) ($generated@@132 $generated@@572 ($generated@@375 $generated@@573 $generated@@574))) (and (and ($generated@@132 ($generated@@267 $generated@@572) ($generated@@221 $generated@@573)) ($generated@@132 ($generated@@315 $generated@@572) ($generated@@221 $generated@@574))) ($generated@@132 ($generated@@346 $generated@@572) ($generated@@221 ($generated@@135 $generated@@573 $generated@@574)))))
 :pattern ( ($generated@@132 $generated@@572 ($generated@@375 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (and (= (type $generated@@575) ($generated@@287 $generated@@145 $generated@@145)) (= (type $generated@@576) $generated@@64)) (= (type $generated@@577) $generated@@64)) ($generated@@132 $generated@@575 ($generated@@383 $generated@@576 $generated@@577))) (and (and ($generated@@132 ($generated@@285 $generated@@575) ($generated@@226 $generated@@576)) ($generated@@132 ($generated@@326 $generated@@575) ($generated@@226 $generated@@577))) ($generated@@132 ($generated@@357 $generated@@575) ($generated@@226 ($generated@@135 $generated@@576 $generated@@577)))))
 :pattern ( ($generated@@132 $generated@@575 ($generated@@383 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@2) ($generated@@132 $generated@@578 $generated@@46))
 :pattern ( ($generated@@132 $generated@@578 $generated@@46))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@3) ($generated@@132 $generated@@579 $generated@@47))
 :pattern ( ($generated@@132 $generated@@579 $generated@@47))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@4) ($generated@@132 $generated@@580 $generated@@44))
 :pattern ( ($generated@@132 $generated@@580 $generated@@44))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@418) ($generated@@132 $generated@@581 $generated@@45))
 :pattern ( ($generated@@132 $generated@@581 $generated@@45))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@145) ($generated@@132 $generated@@582 $generated@@48))
 :pattern ( ($generated@@132 $generated@@582 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@583 () T@U)
(declare-fun $generated@@584 () T@U)
(declare-fun $generated@@585 () T@U)
(declare-fun $generated@@586 () T@U)
(declare-fun $generated@@587 () T@U)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 (T@U) Bool)
(declare-fun $generated@@590 () Int)
(assert  (and (and (and (and (and (= (type $generated@@583) $generated@@64) (= (type $generated@@584) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@585) $generated@@145)) (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@587) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@588) $generated@@77)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@591  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@303 ($generated@@504 $generated@@583 $generated@@584) $generated@@584))))
(let (($generated@@592  (=> (and (not ($generated@@0 ($generated@@81 $generated@@584 $generated@@585))) (= (ControlFlow 0 5) 2)) $generated@@591)))
(let (($generated@@593  (=> (and ($generated@@0 ($generated@@81 $generated@@584 $generated@@585)) (= (ControlFlow 0 4) 2)) $generated@@591)))
(let (($generated@@594  (=> (and ($generated@@212 $generated@@585 $generated@@583) ($generated@@236 $generated@@585 $generated@@583 $generated@@586)) (and (=> (= (ControlFlow 0 6) 4) $generated@@593) (=> (= (ControlFlow 0 6) 5) $generated@@592)))))
(let (($generated@@595  (=> (and (not (and ($generated@@212 $generated@@585 $generated@@583) ($generated@@236 $generated@@585 $generated@@583 $generated@@586))) (= (ControlFlow 0 3) 2)) $generated@@591)))
(let (($generated@@596  (=> (= $generated@@587 ($generated@@156 $generated@@588 $generated@@586 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 6) $generated@@594) (=> (= (ControlFlow 0 7) 3) $generated@@595)))))
(let (($generated@@597  (=> (and ($generated@@235 $generated@@586) ($generated@@589 $generated@@586)) (=> (and (and ($generated@@132 $generated@@584 ($generated@@226 $generated@@583)) ($generated@@74 $generated@@584 ($generated@@226 $generated@@583) $generated@@586)) (and (= 0 $generated@@590) (= (ControlFlow 0 8) 7))) $generated@@596))))
$generated@@597))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 () Int)
(declare-fun $generated@@234 (T@U T@U T@U) T@U)
(declare-fun $generated@@235 (T@T T@T) T@T)
(declare-fun $generated@@236 (T@U T@U T@U) Bool)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@240 (T@T) T@T)
(declare-fun $generated@@241 (T@T) T@T)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@274 (T@U T@U T@U) Bool)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@T T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@T) T@U)
(declare-fun $generated@@439 () T@T)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@U Int) T@U)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@556 (T@U T@U) Bool)
(declare-fun $generated@@595 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (= ($generated@@1 ($generated@@235 $generated@@242 $generated@@243)) 17)) (forall (($generated@@244 T@T) ($generated@@245 T@T) ) (! (= ($generated@@240 ($generated@@235 $generated@@244 $generated@@245)) $generated@@244)
 :pattern ( ($generated@@235 $generated@@244 $generated@@245))
))) (forall (($generated@@246 T@T) ($generated@@247 T@T) ) (! (= ($generated@@241 ($generated@@235 $generated@@246 $generated@@247)) $generated@@247)
 :pattern ( ($generated@@235 $generated@@246 $generated@@247))
))) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (! (= (type ($generated@@234 $generated@@248 $generated@@249 $generated@@250)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@234 $generated@@248 $generated@@249 $generated@@250))
))) (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@237 $generated@@251 $generated@@252)) $generated@@64)
 :pattern ( ($generated@@237 $generated@@251 $generated@@252))
))) (forall (($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@240 (type $generated@@253))))
(= (type ($generated@@238 $generated@@253)) ($generated@@76 $generated@@254 $generated@@4)))
 :pattern ( ($generated@@238 $generated@@253))
))) (forall (($generated@@255 T@U) ) (! (= (type ($generated@@239 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@239 $generated@@255))
))))
(assert  (=> (<= 0 $generated@@233) (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) $generated@@64) (= (type $generated@@257) $generated@@64)) (= (type $generated@@258) ($generated@@235 $generated@@145 $generated@@145))) (or ($generated@@236 $generated@@256 $generated@@257 $generated@@258) (and (not (= 0 $generated@@233)) ($generated@@132 $generated@@258 ($generated@@237 $generated@@256 $generated@@257))))) (and (and (forall (($generated@@259 T@U) ) (!  (=> (and (and (= (type $generated@@259) $generated@@145) ($generated@@224 $generated@@259 $generated@@256)) ($generated@@0 ($generated@@81 ($generated@@234 $generated@@256 $generated@@257 $generated@@258) $generated@@259))) ($generated@@0 ($generated@@81 ($generated@@238 $generated@@258) $generated@@259)))
 :pattern ( ($generated@@81 ($generated@@238 $generated@@258) $generated@@259))
 :pattern ( ($generated@@81 ($generated@@234 $generated@@256 $generated@@257 $generated@@258) $generated@@259))
)) (forall (($generated@@260 T@U) ) (!  (=> (and (and (= (type $generated@@260) $generated@@145) ($generated@@224 $generated@@260 $generated@@256)) ($generated@@0 ($generated@@81 ($generated@@238 $generated@@258) $generated@@260))) ($generated@@0 ($generated@@81 ($generated@@234 $generated@@256 $generated@@257 $generated@@258) $generated@@260)))
 :pattern ( ($generated@@81 ($generated@@234 $generated@@256 $generated@@257 $generated@@258) $generated@@260))
 :pattern ( ($generated@@81 ($generated@@238 $generated@@258) $generated@@260))
))) ($generated@@132 ($generated@@234 $generated@@256 $generated@@257 $generated@@258) ($generated@@239 $generated@@256))))
 :pattern ( ($generated@@234 $generated@@256 $generated@@257 $generated@@258))
))))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@262) $generated@@64)) (= ($generated@@132 $generated@@261 ($generated@@239 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@145) ($generated@@0 ($generated@@81 $generated@@261 $generated@@263))) ($generated@@224 $generated@@263 $generated@@262))
 :pattern ( ($generated@@81 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@132 $generated@@261 ($generated@@239 $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@64)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@267) $generated@@64)) (= ($generated@@132 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@145) ($generated@@0 ($generated@@81 $generated@@266 $generated@@268))) ($generated@@224 $generated@@268 $generated@@267))
 :pattern ( ($generated@@81 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@132 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(= (type ($generated@@269 $generated@@270)) $generated@@271))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= ($generated@@269 $generated@@272) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) $generated@@64) (= (type $generated@@276) $generated@@64)) (= (type $generated@@277) $generated@@145)) (= (type $generated@@278) $generated@@145)) (= (type $generated@@279) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@273 $generated@@279)) (= ($generated@@74 ($generated@@223 $generated@@277 $generated@@278) ($generated@@135 $generated@@275 $generated@@276) $generated@@279)  (and ($generated@@274 $generated@@277 $generated@@275 $generated@@279) ($generated@@274 $generated@@278 $generated@@276 $generated@@279))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@277 $generated@@278) ($generated@@135 $generated@@275 $generated@@276) $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@68)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@136) (= ($generated@@134 $generated@@282) (= ($generated@@280 $generated@@282) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@136) ($generated@@134 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@145) (= (type $generated@@285) $generated@@145)) (= $generated@@283 ($generated@@223 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@134 $generated@@283))
)))
(assert  (and (and (forall (($generated@@290 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@290)) 18)) (forall (($generated@@291 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@288 $generated@@291))
))) (forall (($generated@@292 T@T) ) (! (= (type ($generated@@286 $generated@@292)) ($generated@@288 $generated@@292))
 :pattern ( ($generated@@286 $generated@@292))
))))
(assert (forall (($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@293)) 0)
 :pattern ( ($generated@@286 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@145)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@64) (= (type $generated@@298) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@274 ($generated@@294 $generated@@296) $generated@@297 $generated@@298) ($generated@@74 $generated@@296 $generated@@297 $generated@@298)))
 :pattern ( ($generated@@274 ($generated@@294 $generated@@296) $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@76 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@79 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@76 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@81 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@305 $generated@@306 $generated@@307)) ($generated@@235 $generated@@306 $generated@@307))
 :pattern ( ($generated@@305 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@81 ($generated@@238 ($generated@@305 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@81 ($generated@@238 ($generated@@305 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 19)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@76 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@81 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@81 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@79 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@76 $generated@@330 $generated@@2)) (= ($generated@@151 $generated@@329) (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@330) (and (<= 0 ($generated ($generated@@81 $generated@@329 $generated@@331))) (<= ($generated ($generated@@81 $generated@@329 $generated@@331)) ($generated@@299 $generated@@329))))
 :pattern ( ($generated@@81 $generated@@329 $generated@@331))
)))))
 :pattern ( ($generated@@151 $generated@@329))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@241 (type $generated@@332))))
(let (($generated@@334 ($generated@@240 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@235 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@305 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) ($generated@@0 ($generated@@81 ($generated@@238 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@238 $generated@@332))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@241 (type $generated@@337))))
(= (type ($generated@@336 $generated@@337)) ($generated@@76 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@241 (type $generated@@339))))
(let (($generated@@341 ($generated@@240 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@235 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@305 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@340) ($generated@@0 ($generated@@81 ($generated@@336 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@315 (type $generated@@343))))
(let (($generated@@345 ($generated@@314 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@313 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@312 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@311 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@315 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@76 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@315 (type $generated@@350))))
(let (($generated@@352 ($generated@@314 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@313 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@312 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@81 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@355) $generated@@64)) (= ($generated@@132 $generated@@354 ($generated@@150 $generated@@355)) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@354 $generated@@356)))) ($generated@@224 $generated@@356 $generated@@355))
 :pattern ( ($generated@@81 $generated@@354 $generated@@356))
))))
 :pattern ( ($generated@@132 $generated@@354 ($generated@@150 $generated@@355)))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@358) $generated@@64)) (= (type $generated@@359) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@357 ($generated@@239 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@145) ($generated@@0 ($generated@@81 $generated@@357 $generated@@360))) ($generated@@274 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@81 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@74 $generated@@357 ($generated@@239 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@362) $generated@@64)) (= (type $generated@@363) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@361 ($generated@@264 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@145) ($generated@@0 ($generated@@81 $generated@@361 $generated@@364))) ($generated@@274 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@81 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@74 $generated@@361 ($generated@@264 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(= ($generated ($generated@@81 ($generated@@300 $generated@@366) $generated@@365)) 0))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@81 ($generated@@300 $generated@@366) $generated@@365)))
)))
(assert  (and (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@367 $generated@@370)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@367 $generated@@370))
)) (forall (($generated@@371 T@T) ($generated@@372 T@U) ) (! (= (type ($generated@@368 $generated@@371 $generated@@372)) $generated@@371)
 :pattern ( ($generated@@368 $generated@@371 $generated@@372))
))) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@241 (type $generated@@373))))
(let (($generated@@375 ($generated@@240 (type $generated@@373))))
(= (type ($generated@@369 $generated@@373)) ($generated@@76 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@369 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@235 $generated@@145 $generated@@145)) (= (type $generated@@377) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@367 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@81 ($generated@@238 $generated@@376) ($generated@@143 ($generated@@368 $generated@@136 $generated@@377)))) (= ($generated@@81 ($generated@@369 $generated@@376) ($generated@@143 ($generated@@368 $generated@@136 $generated@@377))) ($generated@@144 ($generated@@368 $generated@@136 $generated@@377))))))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@376) $generated@@377))
)))
(assert  (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@380)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@378 $generated@@380))
)) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@315 (type $generated@@381))))
(let (($generated@@383 ($generated@@314 (type $generated@@381))))
(= (type ($generated@@379 $generated@@381)) ($generated@@76 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@379 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@313 $generated@@145 $generated@@145)) (= (type $generated@@385) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@378 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@81 ($generated@@311 $generated@@384) ($generated@@143 ($generated@@368 $generated@@136 $generated@@385)))) (= ($generated@@81 ($generated@@379 $generated@@384) ($generated@@143 ($generated@@368 $generated@@136 $generated@@385))) ($generated@@144 ($generated@@368 $generated@@136 $generated@@385))))))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@240 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@235 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@81 ($generated@@336 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@81 ($generated@@238 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@81 ($generated@@369 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@81 ($generated@@238 $generated@@386) $generated@@390))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@81 ($generated@@336 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(let (($generated@@394 ($generated@@314 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@313 $generated@@394 $generated@@393)) (= ($generated@@0 ($generated@@81 ($generated@@347 $generated@@391) $generated@@392)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) (and ($generated@@0 ($generated@@81 ($generated@@311 $generated@@391) $generated@@395)) (= $generated@@392 ($generated@@81 ($generated@@379 $generated@@391) $generated@@395))))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@391) $generated@@395))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@391) $generated@@395))
))))))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@235 $generated@@145 $generated@@145)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@396 ($generated@@237 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@238 $generated@@396) $generated@@400))) (and ($generated@@274 ($generated@@81 ($generated@@369 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@274 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@396) $generated@@400))
 :pattern ( ($generated@@81 ($generated@@238 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@74 $generated@@396 ($generated@@237 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@64)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@313 $generated@@145 $generated@@145)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@404) $generated@@408))) (and ($generated@@274 ($generated@@81 ($generated@@379 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@274 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@404) $generated@@408))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@74 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert  (=> (<= 0 $generated@@233) (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) $generated@@64) (= (type $generated@@413) $generated@@64)) (= (type $generated@@414) ($generated@@235 $generated@@145 $generated@@145))) (or ($generated@@236 $generated@@412 $generated@@413 $generated@@414) (and (not (= 0 $generated@@233)) ($generated@@132 $generated@@414 ($generated@@237 $generated@@412 $generated@@413))))) (= ($generated@@234 $generated@@412 $generated@@413 $generated@@414) ($generated@@409 $generated@@412 ($generated@@238 $generated@@414))))
 :pattern ( ($generated@@234 $generated@@412 $generated@@413 $generated@@414))
))))
(assert (forall (($generated@@416 T@T) ) (! (= (type ($generated@@415 $generated@@416)) ($generated@@76 $generated@@416 $generated@@4))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@315 (type $generated@@417))))
(let (($generated@@419 ($generated@@314 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@313 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@312 $generated@@419 $generated@@418)) (= ($generated@@311 $generated@@417) ($generated@@415 $generated@@419))))))
 :pattern ( ($generated@@311 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@315 (type $generated@@420))))
(let (($generated@@422 ($generated@@314 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@313 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@312 $generated@@422 $generated@@421)) (= ($generated@@347 $generated@@420) ($generated@@415 $generated@@421))))))
 :pattern ( ($generated@@347 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@315 (type $generated@@423))))
(let (($generated@@425 ($generated@@314 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@313 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@312 $generated@@425 $generated@@424)) (= ($generated@@378 $generated@@423) ($generated@@415 $generated@@145))))))
 :pattern ( ($generated@@378 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@241 (type $generated@@426))))
(let (($generated@@428 ($generated@@240 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@235 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@305 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@145) (= (type $generated@@430) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@367 $generated@@426) ($generated@@294 ($generated@@223 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@367 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@315 (type $generated@@431))))
(let (($generated@@433 ($generated@@314 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@313 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@312 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (and (and (= (type $generated@@434) $generated@@145) (= (type $generated@@435) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@378 $generated@@431) ($generated@@294 ($generated@@223 $generated@@434 $generated@@435)))))
 :no-pattern (type $generated@@434)
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@378 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@145) ($generated@@224 $generated@@436 $generated@@46)) (and (= ($generated@@294 ($generated@@368 $generated@@2 $generated@@436)) $generated@@436) ($generated@@132 ($generated@@368 $generated@@2 $generated@@436) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@436 $generated@@46))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@145) ($generated@@224 $generated@@437 $generated@@47)) (and (= ($generated@@294 ($generated@@368 $generated@@3 $generated@@437)) $generated@@437) ($generated@@132 ($generated@@368 $generated@@3 $generated@@437) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@437 $generated@@47))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@145) ($generated@@224 $generated@@438 $generated@@44)) (and (= ($generated@@294 ($generated@@368 $generated@@4 $generated@@438)) $generated@@438) ($generated@@132 ($generated@@368 $generated@@4 $generated@@438) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@438 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@439) 20))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) ($generated@@224 $generated@@440 $generated@@45)) (and (= ($generated@@294 ($generated@@368 $generated@@439 $generated@@440)) $generated@@440) ($generated@@132 ($generated@@368 $generated@@439 $generated@@440) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@440 $generated@@45))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (= (type $generated@@442) $generated@@64) (= ($generated@@224 ($generated@@294 $generated@@441) $generated@@442) ($generated@@132 $generated@@441 $generated@@442)))
 :pattern ( ($generated@@224 ($generated@@294 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@79 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@76 $generated@@444 $generated@@2)) (<= 0 ($generated@@299 $generated@@443))))
 :pattern ( ($generated@@299 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@289 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@288 $generated@@446)) (<= 0 ($generated@@287 $generated@@445))))
 :pattern ( ($generated@@287 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@237 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@237 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@237 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@237 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@72 ($generated@@237 $generated@@455 $generated@@456)) $generated@@58))
 :pattern ( ($generated@@237 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@401 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@401 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@401 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@401 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@72 ($generated@@401 $generated@@465 $generated@@466)) $generated@@59))
 :pattern ( ($generated@@401 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@145) (= (type $generated@@468) $generated@@145)) (= ($generated@@280 ($generated@@223 $generated@@467 $generated@@468)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@135 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@135 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@135 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@135 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@145) (= (type $generated@@478) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@223 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@145) (= (type $generated@@480) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@223 $generated@@479 $generated@@480))
)))
(assert  (and (forall (($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@483))
)) (forall (($generated@@484 T@U) ($generated@@485 Int) ) (! (let (($generated@@486 ($generated@@289 (type $generated@@484))))
(= (type ($generated@@482 $generated@@484 $generated@@485)) $generated@@486))
 :pattern ( ($generated@@482 $generated@@484 $generated@@485))
))))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@288 $generated@@145)) (= (type $generated@@488) $generated@@64)) (= (type $generated@@489) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@487 ($generated@@481 $generated@@488) $generated@@489) (forall (($generated@@490 Int) ) (!  (=> (and (<= 0 $generated@@490) (< $generated@@490 ($generated@@287 $generated@@487))) ($generated@@274 ($generated@@482 $generated@@487 $generated@@490) $generated@@488 $generated@@489))
 :pattern ( ($generated@@482 $generated@@487 $generated@@490))
))))
 :pattern ( ($generated@@74 $generated@@487 ($generated@@481 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 Int) ) (! (= ($generated@@491 ($generated@@75 $generated@@492)) $generated@@492)
 :pattern ( ($generated@@75 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@239 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@239 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@239 $generated@@496)) $generated@@54))
 :pattern ( ($generated@@239 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@264 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@264 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@264 $generated@@500)) $generated@@55))
 :pattern ( ($generated@@264 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@150 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@150 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@504)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@505 ($generated@@481 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@481 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@72 ($generated@@481 $generated@@508)) $generated@@57))
 :pattern ( ($generated@@481 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
(= ($generated@@368 $generated@@510 ($generated@@294 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@294 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@235 $generated@@145 $generated@@145)) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@64)) (= ($generated@@132 $generated@@511 ($generated@@237 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@238 $generated@@511) $generated@@514))) (and ($generated@@224 ($generated@@81 ($generated@@369 $generated@@511) $generated@@514) $generated@@513) ($generated@@224 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@511) $generated@@514))
 :pattern ( ($generated@@81 ($generated@@238 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@132 $generated@@511 ($generated@@237 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@313 $generated@@145 $generated@@145)) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) $generated@@64)) (= ($generated@@132 $generated@@515 ($generated@@401 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@515) $generated@@518))) (and ($generated@@224 ($generated@@81 ($generated@@379 $generated@@515) $generated@@518) $generated@@517) ($generated@@224 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@515) $generated@@518))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@132 $generated@@515 ($generated@@401 $generated@@516 $generated@@517)))
)))
(assert  (=> (<= 0 $generated@@233) (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) ($generated@@235 $generated@@145 $generated@@145))) (or ($generated@@236 $generated@@519 $generated@@520 ($generated@@269 $generated@@521)) (and (not (= 0 $generated@@233)) ($generated@@132 $generated@@521 ($generated@@237 $generated@@519 $generated@@520))))) (= ($generated@@234 $generated@@519 $generated@@520 ($generated@@269 $generated@@521)) ($generated@@409 $generated@@519 ($generated@@238 $generated@@521))))
 :weight 3
 :pattern ( ($generated@@234 $generated@@519 $generated@@520 ($generated@@269 $generated@@521)))
))))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@145)) (< ($generated@@522 $generated@@524) ($generated@@523 ($generated@@223 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@223 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@145) (= (type $generated@@527) $generated@@145)) (< ($generated@@522 $generated@@527) ($generated@@523 ($generated@@223 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@223 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@530) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@409 $generated@@528 $generated@@529) $generated@@530))  (and ($generated@@224 $generated@@530 $generated@@528) ($generated@@0 ($generated@@81 $generated@@529 $generated@@530)))))
 :pattern ( ($generated@@81 ($generated@@409 $generated@@528 $generated@@529) $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@145) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@64)) ($generated@@224 $generated@@531 ($generated@@237 $generated@@532 $generated@@533))) (and (= ($generated@@294 ($generated@@368 ($generated@@235 $generated@@145 $generated@@145) $generated@@531)) $generated@@531) ($generated@@132 ($generated@@368 ($generated@@235 $generated@@145 $generated@@145) $generated@@531) ($generated@@237 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@224 $generated@@531 ($generated@@237 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@145) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@64)) ($generated@@224 $generated@@534 ($generated@@401 $generated@@535 $generated@@536))) (and (= ($generated@@294 ($generated@@368 ($generated@@313 $generated@@145 $generated@@145) $generated@@534)) $generated@@534) ($generated@@132 ($generated@@368 ($generated@@313 $generated@@145 $generated@@145) $generated@@534) ($generated@@401 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@224 $generated@@534 ($generated@@401 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@64) (= (type $generated@@538) $generated@@64)) (= (type $generated@@539) $generated@@145)) ($generated@@224 $generated@@539 ($generated@@135 $generated@@537 $generated@@538))) (and (= ($generated@@294 ($generated@@368 $generated@@136 $generated@@539)) $generated@@539) ($generated@@132 ($generated@@368 $generated@@136 $generated@@539) ($generated@@135 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@224 $generated@@539 ($generated@@135 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
 (not ($generated@@0 ($generated@@81 ($generated@@415 $generated@@541) $generated@@540))))
 :pattern ( (let (($generated@@541 (type $generated@@540)))
($generated@@81 ($generated@@415 $generated@@541) $generated@@540)))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@69)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@64) (= (type $generated@@545) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@544 $generated@@545)) $generated@@62) (= ($generated@@542 ($generated@@135 $generated@@544 $generated@@545)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@136) (= ($generated@@522 ($generated@@294 $generated@@546)) ($generated@@523 $generated@@546)))
 :pattern ( ($generated@@522 ($generated@@294 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@145) ($generated@@224 $generated@@547 ($generated@@75 0))) (and (= ($generated@@294 ($generated@@368 $generated@@2 $generated@@547)) $generated@@547) ($generated@@132 ($generated@@368 ($generated@@76 $generated@@145 $generated@@4) $generated@@547) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@547 ($generated@@75 0)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@64)) ($generated@@224 $generated@@548 ($generated@@239 $generated@@549))) (and (= ($generated@@294 ($generated@@368 ($generated@@76 $generated@@145 $generated@@4) $generated@@548)) $generated@@548) ($generated@@132 ($generated@@368 ($generated@@76 $generated@@145 $generated@@4) $generated@@548) ($generated@@239 $generated@@549))))
 :pattern ( ($generated@@224 $generated@@548 ($generated@@239 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@145) (= (type $generated@@551) $generated@@64)) ($generated@@224 $generated@@550 ($generated@@264 $generated@@551))) (and (= ($generated@@294 ($generated@@368 ($generated@@76 $generated@@145 $generated@@4) $generated@@550)) $generated@@550) ($generated@@132 ($generated@@368 ($generated@@76 $generated@@145 $generated@@4) $generated@@550) ($generated@@264 $generated@@551))))
 :pattern ( ($generated@@224 $generated@@550 ($generated@@264 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@64)) ($generated@@224 $generated@@552 ($generated@@150 $generated@@553))) (and (= ($generated@@294 ($generated@@368 ($generated@@76 $generated@@145 $generated@@2) $generated@@552)) $generated@@552) ($generated@@132 ($generated@@368 ($generated@@76 $generated@@145 $generated@@2) $generated@@552) ($generated@@150 $generated@@553))))
 :pattern ( ($generated@@224 $generated@@552 ($generated@@150 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@145) (= (type $generated@@555) $generated@@64)) ($generated@@224 $generated@@554 ($generated@@481 $generated@@555))) (and (= ($generated@@294 ($generated@@368 ($generated@@288 $generated@@145) $generated@@554)) $generated@@554) ($generated@@132 ($generated@@368 ($generated@@288 $generated@@145) $generated@@554) ($generated@@481 $generated@@555))))
 :pattern ( ($generated@@224 $generated@@554 ($generated@@481 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (! (let (($generated@@559 ($generated@@79 (type $generated@@557))))
 (=> (and (= (type $generated@@557) ($generated@@76 $generated@@559 $generated@@4)) (= (type $generated@@558) ($generated@@76 $generated@@559 $generated@@4))) (= ($generated@@556 $generated@@557 $generated@@558) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@559) ($generated@@0 ($generated@@81 $generated@@557 $generated@@560))) ($generated@@0 ($generated@@81 $generated@@558 $generated@@560)))
 :pattern ( ($generated@@81 $generated@@557 $generated@@560))
 :pattern ( ($generated@@81 $generated@@558 $generated@@560))
)))))
 :pattern ( ($generated@@556 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@562) $generated@@64)) (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@561 ($generated@@150 $generated@@562) $generated@@563) (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@561 $generated@@564)))) ($generated@@274 $generated@@564 $generated@@562 $generated@@563))
 :pattern ( ($generated@@81 $generated@@561 $generated@@564))
))))
 :pattern ( ($generated@@74 $generated@@561 ($generated@@150 $generated@@562) $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@136) (= (type $generated@@566) $generated@@64)) (= (type $generated@@567) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@273 $generated@@567) (and ($generated@@134 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@64) ($generated@@74 $generated@@565 ($generated@@135 $generated@@566 $generated@@568) $generated@@567))
 :pattern ( ($generated@@74 $generated@@565 ($generated@@135 $generated@@566 $generated@@568) $generated@@567))
))))) ($generated@@274 ($generated@@143 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@274 ($generated@@143 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@136) (= (type $generated@@570) $generated@@64)) (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@273 $generated@@571) (and ($generated@@134 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@64) ($generated@@74 $generated@@569 ($generated@@135 $generated@@572 $generated@@570) $generated@@571))
 :pattern ( ($generated@@74 $generated@@569 ($generated@@135 $generated@@572 $generated@@570) $generated@@571))
))))) ($generated@@274 ($generated@@144 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@274 ($generated@@144 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@145) (= (type $generated@@574) $generated@@145)) (= ($generated@@223 ($generated@@269 $generated@@573) ($generated@@269 $generated@@574)) ($generated@@269 ($generated@@223 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@223 ($generated@@269 $generated@@573) ($generated@@269 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (! (= ($generated@@294 ($generated@@269 $generated@@575)) ($generated@@269 ($generated@@294 $generated@@575)))
 :pattern ( ($generated@@294 ($generated@@269 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 ($generated@@289 (type $generated@@576))))
 (=> (and (= (type $generated@@576) ($generated@@288 $generated@@577)) (= ($generated@@287 $generated@@576) 0)) (= $generated@@576 ($generated@@286 $generated@@577))))
 :pattern ( ($generated@@287 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@579)))
 (=> (and (and (= (type $generated@@578) ($generated@@76 $generated@@581 $generated@@2)) (= (type $generated@@580) $generated@@2)) (<= 0 ($generated $generated@@580))) (= ($generated@@299 ($generated@@82 $generated@@578 $generated@@579 $generated@@580)) (+ (- ($generated@@299 $generated@@578) ($generated ($generated@@81 $generated@@578 $generated@@579))) ($generated $generated@@580)))))
 :pattern ( ($generated@@299 ($generated@@82 $generated@@578 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@583) $generated@@2)) ($generated@@74 $generated@@583 $generated@@46 $generated@@582))
 :pattern ( ($generated@@74 $generated@@583 $generated@@46 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@585) $generated@@3)) ($generated@@74 $generated@@585 $generated@@47 $generated@@584))
 :pattern ( ($generated@@74 $generated@@585 $generated@@47 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@587) $generated@@4)) ($generated@@74 $generated@@587 $generated@@44 $generated@@586))
 :pattern ( ($generated@@74 $generated@@587 $generated@@44 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@589) $generated@@439)) ($generated@@74 $generated@@589 $generated@@45 $generated@@588))
 :pattern ( ($generated@@74 $generated@@589 $generated@@45 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@591) $generated@@145)) ($generated@@74 $generated@@591 $generated@@48 $generated@@590))
 :pattern ( ($generated@@74 $generated@@591 $generated@@48 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) ($generated@@288 $generated@@145)) (= (type $generated@@593) $generated@@64)) (= ($generated@@132 $generated@@592 ($generated@@481 $generated@@593)) (forall (($generated@@594 Int) ) (!  (=> (and (<= 0 $generated@@594) (< $generated@@594 ($generated@@287 $generated@@592))) ($generated@@224 ($generated@@482 $generated@@592 $generated@@594) $generated@@593))
 :pattern ( ($generated@@482 $generated@@592 $generated@@594))
))))
 :pattern ( ($generated@@132 $generated@@592 ($generated@@481 $generated@@593)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 Int) ) (!  (=> (= (type $generated@@596) ($generated@@288 $generated@@145)) (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@287 $generated@@596))) (< ($generated@@523 ($generated@@368 $generated@@136 ($generated@@482 $generated@@596 $generated@@597))) ($generated@@595 $generated@@596))))
 :pattern ( ($generated@@523 ($generated@@368 $generated@@136 ($generated@@482 $generated@@596 $generated@@597))))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (and (= (type $generated@@598) ($generated@@235 $generated@@145 $generated@@145)) (= (type $generated@@599) $generated@@64)) (= (type $generated@@600) $generated@@64)) ($generated@@132 $generated@@598 ($generated@@237 $generated@@599 $generated@@600))) (and (and ($generated@@132 ($generated@@238 $generated@@598) ($generated@@239 $generated@@599)) ($generated@@132 ($generated@@336 $generated@@598) ($generated@@239 $generated@@600))) ($generated@@132 ($generated@@367 $generated@@598) ($generated@@239 ($generated@@135 $generated@@599 $generated@@600)))))
 :pattern ( ($generated@@132 $generated@@598 ($generated@@237 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@313 $generated@@145 $generated@@145)) (= (type $generated@@602) $generated@@64)) (= (type $generated@@603) $generated@@64)) ($generated@@132 $generated@@601 ($generated@@401 $generated@@602 $generated@@603))) (and (and ($generated@@132 ($generated@@311 $generated@@601) ($generated@@264 $generated@@602)) ($generated@@132 ($generated@@347 $generated@@601) ($generated@@264 $generated@@603))) ($generated@@132 ($generated@@378 $generated@@601) ($generated@@264 ($generated@@135 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@132 $generated@@601 ($generated@@401 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@2) ($generated@@132 $generated@@604 $generated@@46))
 :pattern ( ($generated@@132 $generated@@604 $generated@@46))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@3) ($generated@@132 $generated@@605 $generated@@47))
 :pattern ( ($generated@@132 $generated@@605 $generated@@47))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@4) ($generated@@132 $generated@@606 $generated@@44))
 :pattern ( ($generated@@132 $generated@@606 $generated@@44))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@439) ($generated@@132 $generated@@607 $generated@@45))
 :pattern ( ($generated@@132 $generated@@607 $generated@@45))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@145) ($generated@@132 $generated@@608 $generated@@48))
 :pattern ( ($generated@@132 $generated@@608 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () T@U)
(declare-fun $generated@@619 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@609) ($generated@@235 $generated@@145 $generated@@145)) (= (type $generated@@611) $generated@@64)) (= (type $generated@@612) $generated@@64)) (= (type $generated@@615) $generated@@145)) (= (type $generated@@613) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@616) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@617) $generated@@77)) (= (type $generated@@610) $generated@@145)) (= (type $generated@@614) $generated@@145)) (= (type $generated@@618) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@620 true))
(let (($generated@@621  (=> (and (=> ($generated@@0 ($generated@@81 ($generated@@238 $generated@@609) $generated@@610)) ($generated@@0 ($generated@@81 ($generated@@234 $generated@@611 $generated@@612 $generated@@609) $generated@@610))) (= (ControlFlow 0 13) 10)) $generated@@620)))
(let (($generated@@622  (=> (and ($generated@@0 ($generated@@81 ($generated@@238 $generated@@609) $generated@@610)) ($generated@@74 $generated@@609 ($generated@@237 $generated@@611 $generated@@612) $generated@@613)) (and (=> (= (ControlFlow 0 11) (- 0 12)) (or (= $generated@@609 $generated@@609) (and ($generated@@556 ($generated@@238 $generated@@609) ($generated@@238 $generated@@609)) (not ($generated@@556 ($generated@@238 $generated@@609) ($generated@@238 $generated@@609)))))) (=> (or (= $generated@@609 $generated@@609) (and ($generated@@556 ($generated@@238 $generated@@609) ($generated@@238 $generated@@609)) (not ($generated@@556 ($generated@@238 $generated@@609) ($generated@@238 $generated@@609))))) (=> (or (= $generated@@609 $generated@@609) ($generated@@236 $generated@@611 $generated@@612 $generated@@609)) (=> (and ($generated@@0 ($generated@@81 ($generated@@234 $generated@@611 $generated@@612 $generated@@609) $generated@@610)) (= (ControlFlow 0 11) 10)) $generated@@620)))))))
(let (($generated@@623  (=> (forall (($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@145) ($generated@@224 $generated@@624 $generated@@611)) ($generated@@0 ($generated@@81 ($generated@@234 $generated@@611 $generated@@612 $generated@@609) $generated@@624))) ($generated@@0 ($generated@@81 ($generated@@238 $generated@@609) $generated@@624)))
 :pattern ( ($generated@@81 ($generated@@238 $generated@@609) $generated@@624))
 :pattern ( ($generated@@81 ($generated@@234 $generated@@611 $generated@@612 $generated@@609) $generated@@624))
)) (=> (and ($generated@@224 $generated@@610 $generated@@611) ($generated@@274 $generated@@610 $generated@@611 $generated@@613)) (and (=> (= (ControlFlow 0 14) 11) $generated@@622) (=> (= (ControlFlow 0 14) 13) $generated@@621))))))
(let (($generated@@625  (=> (and (=> ($generated@@0 ($generated@@81 ($generated@@234 $generated@@611 $generated@@612 $generated@@609) $generated@@614)) ($generated@@0 ($generated@@81 ($generated@@238 $generated@@609) $generated@@614))) (= (ControlFlow 0 17) 14)) $generated@@623)))
(let (($generated@@626  (=> ($generated@@74 $generated@@609 ($generated@@237 $generated@@611 $generated@@612) $generated@@613) (and (=> (= (ControlFlow 0 15) (- 0 16)) (or (= $generated@@609 $generated@@609) (and ($generated@@556 ($generated@@238 $generated@@609) ($generated@@238 $generated@@609)) (not ($generated@@556 ($generated@@238 $generated@@609) ($generated@@238 $generated@@609)))))) (=> (or (= $generated@@609 $generated@@609) (and ($generated@@556 ($generated@@238 $generated@@609) ($generated@@238 $generated@@609)) (not ($generated@@556 ($generated@@238 $generated@@609) ($generated@@238 $generated@@609))))) (=> (and (and (or (= $generated@@609 $generated@@609) ($generated@@236 $generated@@611 $generated@@612 $generated@@609)) ($generated@@0 ($generated@@81 ($generated@@234 $generated@@611 $generated@@612 $generated@@609) $generated@@614))) (and ($generated@@0 ($generated@@81 ($generated@@238 $generated@@609) $generated@@614)) (= (ControlFlow 0 15) 14))) $generated@@623))))))
(let (($generated@@627  (=> ($generated@@132 ($generated@@234 $generated@@611 $generated@@612 $generated@@609) ($generated@@239 $generated@@611)) (=> (and ($generated@@224 $generated@@614 $generated@@611) ($generated@@274 $generated@@614 $generated@@611 $generated@@613)) (and (=> (= (ControlFlow 0 18) 15) $generated@@626) (=> (= (ControlFlow 0 18) 17) $generated@@625))))))
(let (($generated@@628  (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@629 T@U) ) (!  (=> (and (and (= (type $generated@@629) $generated@@145) ($generated@@224 $generated@@629 $generated@@611)) ($generated@@0 ($generated@@81 ($generated@@234 $generated@@611 $generated@@612 $generated@@609) $generated@@629))) ($generated@@0 ($generated@@81 ($generated@@238 $generated@@609) $generated@@629)))
 :pattern ( ($generated@@81 ($generated@@238 $generated@@609) $generated@@629))
 :pattern ( ($generated@@81 ($generated@@234 $generated@@611 $generated@@612 $generated@@609) $generated@@629))
))) (=> (forall (($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@630) $generated@@145) ($generated@@224 $generated@@630 $generated@@611)) ($generated@@0 ($generated@@81 ($generated@@234 $generated@@611 $generated@@612 $generated@@609) $generated@@630))) ($generated@@0 ($generated@@81 ($generated@@238 $generated@@609) $generated@@630)))
 :pattern ( ($generated@@81 ($generated@@238 $generated@@609) $generated@@630))
 :pattern ( ($generated@@81 ($generated@@234 $generated@@611 $generated@@612 $generated@@609) $generated@@630))
)) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@631 T@U) ) (!  (=> (and (and (= (type $generated@@631) $generated@@145) ($generated@@224 $generated@@631 $generated@@611)) ($generated@@0 ($generated@@81 ($generated@@238 $generated@@609) $generated@@631))) ($generated@@0 ($generated@@81 ($generated@@234 $generated@@611 $generated@@612 $generated@@609) $generated@@631)))
 :pattern ( ($generated@@81 ($generated@@234 $generated@@611 $generated@@612 $generated@@609) $generated@@631))
 :pattern ( ($generated@@81 ($generated@@238 $generated@@609) $generated@@631))
)))))))
(let (($generated@@632  (=> (= ($generated@@234 $generated@@611 $generated@@612 $generated@@609) ($generated@@409 $generated@@611 ($generated@@238 $generated@@609))) (=> (and ($generated@@132 ($generated@@234 $generated@@611 $generated@@612 $generated@@609) ($generated@@239 $generated@@611)) (= (ControlFlow 0 4) 2)) $generated@@628))))
(let (($generated@@633  (=> (and (not ($generated@@0 ($generated@@81 ($generated@@238 $generated@@609) $generated@@615))) (= (ControlFlow 0 7) 4)) $generated@@632)))
(let (($generated@@634  (=> (and ($generated@@0 ($generated@@81 ($generated@@238 $generated@@609) $generated@@615)) (= (ControlFlow 0 6) 4)) $generated@@632)))
(let (($generated@@635  (=> (and ($generated@@224 $generated@@615 $generated@@611) ($generated@@274 $generated@@615 $generated@@611 $generated@@613)) (and (=> (= (ControlFlow 0 8) 6) $generated@@634) (=> (= (ControlFlow 0 8) 7) $generated@@633)))))
(let (($generated@@636  (=> (and (not (and ($generated@@224 $generated@@615 $generated@@611) ($generated@@274 $generated@@615 $generated@@611 $generated@@613))) (= (ControlFlow 0 5) 4)) $generated@@632)))
(let (($generated@@637  (=> (= $generated@@616 ($generated@@211 $generated@@617 $generated@@613 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 8) $generated@@635) (=> (= (ControlFlow 0 9) 5) $generated@@636)))))
(let (($generated@@638  (=> (= $generated@@618 ($generated@@156 $generated@@617 $generated@@613 $generated@@60 false)) (and (=> (= (ControlFlow 0 19) 18) $generated@@627) (=> (= (ControlFlow 0 19) 9) $generated@@637)))))
(let (($generated@@639  (=> (and (and (and ($generated@@273 $generated@@613) ($generated@@619 $generated@@613)) ($generated@@132 $generated@@609 ($generated@@237 $generated@@611 $generated@@612))) (and (= 0 $generated@@233) (= (ControlFlow 0 20) 19))) $generated@@638)))
$generated@@639)))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 () Int)
(declare-fun $generated@@234 (T@U T@U T@U) T@U)
(declare-fun $generated@@235 (T@T T@T) T@T)
(declare-fun $generated@@236 (T@U T@U T@U) Bool)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@240 (T@T) T@T)
(declare-fun $generated@@241 (T@T) T@T)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Bool)
(declare-fun $generated@@274 (T@U T@U T@U) Bool)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@299 (T@U) Int)
(declare-fun $generated@@300 (T@T) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@T T@T) T@U)
(declare-fun $generated@@307 (T@T T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@323 (T@T T@T) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@T T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@396 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@415 (T@T) T@U)
(declare-fun $generated@@439 () T@T)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@U Int) T@U)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@590 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@242 T@T) ($generated@@243 T@T) ) (= ($generated@@1 ($generated@@235 $generated@@242 $generated@@243)) 17)) (forall (($generated@@244 T@T) ($generated@@245 T@T) ) (! (= ($generated@@240 ($generated@@235 $generated@@244 $generated@@245)) $generated@@244)
 :pattern ( ($generated@@235 $generated@@244 $generated@@245))
))) (forall (($generated@@246 T@T) ($generated@@247 T@T) ) (! (= ($generated@@241 ($generated@@235 $generated@@246 $generated@@247)) $generated@@247)
 :pattern ( ($generated@@235 $generated@@246 $generated@@247))
))) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (! (= (type ($generated@@234 $generated@@248 $generated@@249 $generated@@250)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@234 $generated@@248 $generated@@249 $generated@@250))
))) (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@237 $generated@@251 $generated@@252)) $generated@@64)
 :pattern ( ($generated@@237 $generated@@251 $generated@@252))
))) (forall (($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@240 (type $generated@@253))))
(= (type ($generated@@238 $generated@@253)) ($generated@@76 $generated@@254 $generated@@4)))
 :pattern ( ($generated@@238 $generated@@253))
))) (forall (($generated@@255 T@U) ) (! (= (type ($generated@@239 $generated@@255)) $generated@@64)
 :pattern ( ($generated@@239 $generated@@255))
))))
(assert  (=> (<= 0 $generated@@233) (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) $generated@@64) (= (type $generated@@257) $generated@@64)) (= (type $generated@@258) ($generated@@235 $generated@@145 $generated@@145))) (or ($generated@@236 $generated@@256 $generated@@257 $generated@@258) (and (not (= 0 $generated@@233)) ($generated@@132 $generated@@258 ($generated@@237 $generated@@256 $generated@@257))))) (and (and (forall (($generated@@259 T@U) ) (!  (=> (and (and (= (type $generated@@259) $generated@@145) ($generated@@224 $generated@@259 $generated@@256)) ($generated@@0 ($generated@@81 ($generated@@234 $generated@@256 $generated@@257 $generated@@258) $generated@@259))) ($generated@@0 ($generated@@81 ($generated@@238 $generated@@258) $generated@@259)))
 :pattern ( ($generated@@81 ($generated@@238 $generated@@258) $generated@@259))
 :pattern ( ($generated@@81 ($generated@@234 $generated@@256 $generated@@257 $generated@@258) $generated@@259))
)) (forall (($generated@@260 T@U) ) (!  (=> (and (and (= (type $generated@@260) $generated@@145) ($generated@@224 $generated@@260 $generated@@256)) ($generated@@0 ($generated@@81 ($generated@@238 $generated@@258) $generated@@260))) ($generated@@0 ($generated@@81 ($generated@@234 $generated@@256 $generated@@257 $generated@@258) $generated@@260)))
 :pattern ( ($generated@@81 ($generated@@234 $generated@@256 $generated@@257 $generated@@258) $generated@@260))
 :pattern ( ($generated@@81 ($generated@@238 $generated@@258) $generated@@260))
))) ($generated@@132 ($generated@@234 $generated@@256 $generated@@257 $generated@@258) ($generated@@239 $generated@@256))))
 :pattern ( ($generated@@234 $generated@@256 $generated@@257 $generated@@258))
))))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@64)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@264) $generated@@64)) (= ($generated@@132 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@145) ($generated@@0 ($generated@@81 $generated@@263 $generated@@265))) ($generated@@224 $generated@@265 $generated@@264))
 :pattern ( ($generated@@81 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@132 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@267) $generated@@64)) (= ($generated@@132 $generated@@266 ($generated@@239 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@145) ($generated@@0 ($generated@@81 $generated@@266 $generated@@268))) ($generated@@224 $generated@@268 $generated@@267))
 :pattern ( ($generated@@81 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@132 $generated@@266 ($generated@@239 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (let (($generated@@271 (type $generated@@270)))
(= (type ($generated@@269 $generated@@270)) $generated@@271))
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= ($generated@@269 $generated@@272) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) $generated@@64) (= (type $generated@@276) $generated@@64)) (= (type $generated@@277) $generated@@145)) (= (type $generated@@278) $generated@@145)) (= (type $generated@@279) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@273 $generated@@279)) (= ($generated@@74 ($generated@@223 $generated@@277 $generated@@278) ($generated@@135 $generated@@275 $generated@@276) $generated@@279)  (and ($generated@@274 $generated@@277 $generated@@275 $generated@@279) ($generated@@274 $generated@@278 $generated@@276 $generated@@279))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@277 $generated@@278) ($generated@@135 $generated@@275 $generated@@276) $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@68)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (= (type $generated@@282) $generated@@136) (= ($generated@@134 $generated@@282) (= ($generated@@280 $generated@@282) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@136) ($generated@@134 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@145) (= (type $generated@@285) $generated@@145)) (= $generated@@283 ($generated@@223 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@134 $generated@@283))
)))
(assert  (and (and (forall (($generated@@290 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@290)) 18)) (forall (($generated@@291 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@288 $generated@@291))
))) (forall (($generated@@292 T@T) ) (! (= (type ($generated@@286 $generated@@292)) ($generated@@288 $generated@@292))
 :pattern ( ($generated@@286 $generated@@292))
))))
(assert (forall (($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@293)) 0)
 :pattern ( ($generated@@286 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@145)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@64) (= (type $generated@@298) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@274 ($generated@@294 $generated@@296) $generated@@297 $generated@@298) ($generated@@74 $generated@@296 $generated@@297 $generated@@298)))
 :pattern ( ($generated@@274 ($generated@@294 $generated@@296) $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@301 T@T) ) (! (= (type ($generated@@300 $generated@@301)) ($generated@@76 $generated@@301 $generated@@2))
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (! (let (($generated@@303 ($generated@@79 (type $generated@@302))))
 (=> (= (type $generated@@302) ($generated@@76 $generated@@303 $generated@@2)) (and (= (= ($generated@@299 $generated@@302) 0) (= $generated@@302 ($generated@@300 $generated@@303))) (=> (not (= ($generated@@299 $generated@@302) 0)) (exists (($generated@@304 T@U) ) (!  (and (= (type $generated@@304) $generated@@303) (< 0 ($generated ($generated@@81 $generated@@302 $generated@@304))))
 :no-pattern (type $generated@@304)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
))))))
 :pattern ( ($generated@@299 $generated@@302))
)))
(assert  (and (and (and (and (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (= ($generated@@1 ($generated@@307 $generated@@310 $generated@@311)) 19)) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@308 ($generated@@307 $generated@@312 $generated@@313)) $generated@@312)
 :pattern ( ($generated@@307 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@309 ($generated@@307 $generated@@314 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@307 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@U) ) (! (let (($generated@@317 ($generated@@308 (type $generated@@316))))
(= (type ($generated@@305 $generated@@316)) ($generated@@76 $generated@@317 $generated@@4)))
 :pattern ( ($generated@@305 $generated@@316))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= (type ($generated@@306 $generated@@318 $generated@@319)) ($generated@@307 $generated@@318 $generated@@319))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 T@T) ) (! (let (($generated@@322 (type $generated@@320)))
 (not ($generated@@0 ($generated@@81 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320))))
 :pattern ( (let (($generated@@322 (type $generated@@320)))
($generated@@81 ($generated@@305 ($generated@@306 $generated@@322 $generated@@321)) $generated@@320)))
)))
(assert (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@323 $generated@@324 $generated@@325)) ($generated@@235 $generated@@324 $generated@@325))
 :pattern ( ($generated@@323 $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@81 ($generated@@238 ($generated@@323 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@81 ($generated@@238 ($generated@@323 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@79 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@76 $generated@@330 $generated@@2)) (= ($generated@@151 $generated@@329) (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@330) (and (<= 0 ($generated ($generated@@81 $generated@@329 $generated@@331))) (<= ($generated ($generated@@81 $generated@@329 $generated@@331)) ($generated@@299 $generated@@329))))
 :pattern ( ($generated@@81 $generated@@329 $generated@@331))
)))))
 :pattern ( ($generated@@151 $generated@@329))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@309 (type $generated@@332))))
(let (($generated@@334 ($generated@@308 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@307 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@306 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@305 $generated@@332))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@309 (type $generated@@337))))
(= (type ($generated@@336 $generated@@337)) ($generated@@76 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@309 (type $generated@@339))))
(let (($generated@@341 ($generated@@308 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@307 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@306 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@340) ($generated@@0 ($generated@@81 ($generated@@336 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@241 (type $generated@@343))))
(let (($generated@@345 ($generated@@240 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@235 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@323 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@81 ($generated@@238 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@238 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@241 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@76 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@241 (type $generated@@350))))
(let (($generated@@352 ($generated@@240 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@235 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@323 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@81 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@355) $generated@@64)) (= ($generated@@132 $generated@@354 ($generated@@150 $generated@@355)) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@354 $generated@@356)))) ($generated@@224 $generated@@356 $generated@@355))
 :pattern ( ($generated@@81 $generated@@354 $generated@@356))
))))
 :pattern ( ($generated@@132 $generated@@354 ($generated@@150 $generated@@355)))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@358) $generated@@64)) (= (type $generated@@359) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@357 ($generated@@261 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@145) ($generated@@0 ($generated@@81 $generated@@357 $generated@@360))) ($generated@@274 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@81 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@74 $generated@@357 ($generated@@261 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@362) $generated@@64)) (= (type $generated@@363) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@361 ($generated@@239 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@145) ($generated@@0 ($generated@@81 $generated@@361 $generated@@364))) ($generated@@274 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@81 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@74 $generated@@361 ($generated@@239 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(= ($generated ($generated@@81 ($generated@@300 $generated@@366) $generated@@365)) 0))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@81 ($generated@@300 $generated@@366) $generated@@365)))
)))
(assert  (and (and (forall (($generated@@370 T@U) ) (! (= (type ($generated@@367 $generated@@370)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@367 $generated@@370))
)) (forall (($generated@@371 T@T) ($generated@@372 T@U) ) (! (= (type ($generated@@368 $generated@@371 $generated@@372)) $generated@@371)
 :pattern ( ($generated@@368 $generated@@371 $generated@@372))
))) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@309 (type $generated@@373))))
(let (($generated@@375 ($generated@@308 (type $generated@@373))))
(= (type ($generated@@369 $generated@@373)) ($generated@@76 $generated@@375 $generated@@374))))
 :pattern ( ($generated@@369 $generated@@373))
))))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@376) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@377) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@367 $generated@@376) $generated@@377))  (and ($generated@@0 ($generated@@81 ($generated@@305 $generated@@376) ($generated@@143 ($generated@@368 $generated@@136 $generated@@377)))) (= ($generated@@81 ($generated@@369 $generated@@376) ($generated@@143 ($generated@@368 $generated@@136 $generated@@377))) ($generated@@144 ($generated@@368 $generated@@136 $generated@@377))))))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@376) $generated@@377))
)))
(assert  (and (forall (($generated@@380 T@U) ) (! (= (type ($generated@@378 $generated@@380)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@378 $generated@@380))
)) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@241 (type $generated@@381))))
(let (($generated@@383 ($generated@@240 (type $generated@@381))))
(= (type ($generated@@379 $generated@@381)) ($generated@@76 $generated@@383 $generated@@382))))
 :pattern ( ($generated@@379 $generated@@381))
))))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@235 $generated@@145 $generated@@145)) (= (type $generated@@385) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@378 $generated@@384) $generated@@385))  (and ($generated@@0 ($generated@@81 ($generated@@238 $generated@@384) ($generated@@143 ($generated@@368 $generated@@136 $generated@@385)))) (= ($generated@@81 ($generated@@379 $generated@@384) ($generated@@143 ($generated@@368 $generated@@136 $generated@@385))) ($generated@@144 ($generated@@368 $generated@@136 $generated@@385))))))
 :pattern ( ($generated@@81 ($generated@@378 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@308 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@307 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@81 ($generated@@336 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@81 ($generated@@305 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@81 ($generated@@369 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@386) $generated@@390))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@81 ($generated@@336 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(let (($generated@@394 ($generated@@240 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@235 $generated@@394 $generated@@393)) (= ($generated@@0 ($generated@@81 ($generated@@347 $generated@@391) $generated@@392)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) (and ($generated@@0 ($generated@@81 ($generated@@238 $generated@@391) $generated@@395)) (= $generated@@392 ($generated@@81 ($generated@@379 $generated@@391) $generated@@395))))
 :pattern ( ($generated@@81 ($generated@@238 $generated@@391) $generated@@395))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@391) $generated@@395))
))))))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@397 $generated@@398)) $generated@@64)
 :pattern ( ($generated@@396 $generated@@397 $generated@@398))
)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (= (type $generated@@399) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@400) $generated@@64)) (= (type $generated@@401) $generated@@64)) (= (type $generated@@402) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@399) $generated@@403))) (and ($generated@@274 ($generated@@81 ($generated@@369 $generated@@399) $generated@@403) $generated@@401 $generated@@402) ($generated@@274 $generated@@403 $generated@@400 $generated@@402)))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@399) $generated@@403))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@399) $generated@@403))
))))
 :pattern ( ($generated@@74 $generated@@399 ($generated@@396 $generated@@400 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@235 $generated@@145 $generated@@145)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@404 ($generated@@237 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@238 $generated@@404) $generated@@408))) (and ($generated@@274 ($generated@@81 ($generated@@379 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@274 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@404) $generated@@408))
 :pattern ( ($generated@@81 ($generated@@238 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@74 $generated@@404 ($generated@@237 $generated@@405 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert  (=> (<= 0 $generated@@233) (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) $generated@@64) (= (type $generated@@413) $generated@@64)) (= (type $generated@@414) ($generated@@235 $generated@@145 $generated@@145))) (or ($generated@@236 $generated@@412 $generated@@413 $generated@@414) (and (not (= 0 $generated@@233)) ($generated@@132 $generated@@414 ($generated@@237 $generated@@412 $generated@@413))))) (= ($generated@@234 $generated@@412 $generated@@413 $generated@@414) ($generated@@409 $generated@@412 ($generated@@238 $generated@@414))))
 :pattern ( ($generated@@234 $generated@@412 $generated@@413 $generated@@414))
))))
(assert (forall (($generated@@416 T@T) ) (! (= (type ($generated@@415 $generated@@416)) ($generated@@76 $generated@@416 $generated@@4))
 :pattern ( ($generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@241 (type $generated@@417))))
(let (($generated@@419 ($generated@@240 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@235 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@323 $generated@@419 $generated@@418)) (= ($generated@@238 $generated@@417) ($generated@@415 $generated@@419))))))
 :pattern ( ($generated@@238 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@241 (type $generated@@420))))
(let (($generated@@422 ($generated@@240 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@235 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@323 $generated@@422 $generated@@421)) (= ($generated@@347 $generated@@420) ($generated@@415 $generated@@421))))))
 :pattern ( ($generated@@347 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@241 (type $generated@@423))))
(let (($generated@@425 ($generated@@240 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@235 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@323 $generated@@425 $generated@@424)) (= ($generated@@378 $generated@@423) ($generated@@415 $generated@@145))))))
 :pattern ( ($generated@@378 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@309 (type $generated@@426))))
(let (($generated@@428 ($generated@@308 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@307 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@306 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@145) (= (type $generated@@430) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@367 $generated@@426) ($generated@@294 ($generated@@223 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@367 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@241 (type $generated@@431))))
(let (($generated@@433 ($generated@@240 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@235 $generated@@433 $generated@@432)) (or (= $generated@@431 ($generated@@323 $generated@@433 $generated@@432)) (exists (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (and (and (= (type $generated@@434) $generated@@145) (= (type $generated@@435) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@378 $generated@@431) ($generated@@294 ($generated@@223 $generated@@434 $generated@@435)))))
 :no-pattern (type $generated@@434)
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@378 $generated@@431))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@145) ($generated@@224 $generated@@436 $generated@@46)) (and (= ($generated@@294 ($generated@@368 $generated@@2 $generated@@436)) $generated@@436) ($generated@@132 ($generated@@368 $generated@@2 $generated@@436) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@436 $generated@@46))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@145) ($generated@@224 $generated@@437 $generated@@47)) (and (= ($generated@@294 ($generated@@368 $generated@@3 $generated@@437)) $generated@@437) ($generated@@132 ($generated@@368 $generated@@3 $generated@@437) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@437 $generated@@47))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@145) ($generated@@224 $generated@@438 $generated@@44)) (and (= ($generated@@294 ($generated@@368 $generated@@4 $generated@@438)) $generated@@438) ($generated@@132 ($generated@@368 $generated@@4 $generated@@438) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@438 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@439) 20))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@145) ($generated@@224 $generated@@440 $generated@@45)) (and (= ($generated@@294 ($generated@@368 $generated@@439 $generated@@440)) $generated@@440) ($generated@@132 ($generated@@368 $generated@@439 $generated@@440) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@440 $generated@@45))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (= (type $generated@@442) $generated@@64) (= ($generated@@224 ($generated@@294 $generated@@441) $generated@@442) ($generated@@132 $generated@@441 $generated@@442)))
 :pattern ( ($generated@@224 ($generated@@294 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@79 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@76 $generated@@444 $generated@@2)) (<= 0 ($generated@@299 $generated@@443))))
 :pattern ( ($generated@@299 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@289 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@288 $generated@@446)) (<= 0 ($generated@@287 $generated@@445))))
 :pattern ( ($generated@@287 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@396 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@396 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@396 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@396 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@72 ($generated@@396 $generated@@455 $generated@@456)) $generated@@58))
 :pattern ( ($generated@@396 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@237 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@237 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@237 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@237 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@72 ($generated@@237 $generated@@465 $generated@@466)) $generated@@59))
 :pattern ( ($generated@@237 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@145) (= (type $generated@@468) $generated@@145)) (= ($generated@@280 ($generated@@223 $generated@@467 $generated@@468)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@135 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@135 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@135 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@135 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@145) (= (type $generated@@478) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@223 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@145) (= (type $generated@@480) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@223 $generated@@479 $generated@@480))
)))
(assert  (and (forall (($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@483))
)) (forall (($generated@@484 T@U) ($generated@@485 Int) ) (! (let (($generated@@486 ($generated@@289 (type $generated@@484))))
(= (type ($generated@@482 $generated@@484 $generated@@485)) $generated@@486))
 :pattern ( ($generated@@482 $generated@@484 $generated@@485))
))))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@288 $generated@@145)) (= (type $generated@@488) $generated@@64)) (= (type $generated@@489) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@487 ($generated@@481 $generated@@488) $generated@@489) (forall (($generated@@490 Int) ) (!  (=> (and (<= 0 $generated@@490) (< $generated@@490 ($generated@@287 $generated@@487))) ($generated@@274 ($generated@@482 $generated@@487 $generated@@490) $generated@@488 $generated@@489))
 :pattern ( ($generated@@482 $generated@@487 $generated@@490))
))))
 :pattern ( ($generated@@74 $generated@@487 ($generated@@481 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 Int) ) (! (= ($generated@@491 ($generated@@75 $generated@@492)) $generated@@492)
 :pattern ( ($generated@@75 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@261 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@261 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@261 $generated@@496)) $generated@@54))
 :pattern ( ($generated@@261 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@239 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@239 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@239 $generated@@500)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@150 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@150 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@504)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@505 ($generated@@481 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@481 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@72 ($generated@@481 $generated@@508)) $generated@@57))
 :pattern ( ($generated@@481 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
(= ($generated@@368 $generated@@510 ($generated@@294 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@294 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@64)) (= ($generated@@132 $generated@@511 ($generated@@396 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@305 $generated@@511) $generated@@514))) (and ($generated@@224 ($generated@@81 ($generated@@369 $generated@@511) $generated@@514) $generated@@513) ($generated@@224 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@81 ($generated@@369 $generated@@511) $generated@@514))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@132 $generated@@511 ($generated@@396 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@235 $generated@@145 $generated@@145)) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) $generated@@64)) (= ($generated@@132 $generated@@515 ($generated@@237 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@238 $generated@@515) $generated@@518))) (and ($generated@@224 ($generated@@81 ($generated@@379 $generated@@515) $generated@@518) $generated@@517) ($generated@@224 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@81 ($generated@@379 $generated@@515) $generated@@518))
 :pattern ( ($generated@@81 ($generated@@238 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@132 $generated@@515 ($generated@@237 $generated@@516 $generated@@517)))
)))
(assert  (=> (<= 0 $generated@@233) (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) ($generated@@235 $generated@@145 $generated@@145))) (or ($generated@@236 $generated@@519 $generated@@520 ($generated@@269 $generated@@521)) (and (not (= 0 $generated@@233)) ($generated@@132 $generated@@521 ($generated@@237 $generated@@519 $generated@@520))))) (= ($generated@@234 $generated@@519 $generated@@520 ($generated@@269 $generated@@521)) ($generated@@409 $generated@@519 ($generated@@238 $generated@@521))))
 :weight 3
 :pattern ( ($generated@@234 $generated@@519 $generated@@520 ($generated@@269 $generated@@521)))
))))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@145) (= (type $generated@@525) $generated@@145)) (< ($generated@@522 $generated@@524) ($generated@@523 ($generated@@223 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@223 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@145) (= (type $generated@@527) $generated@@145)) (< ($generated@@522 $generated@@527) ($generated@@523 ($generated@@223 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@223 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@528) $generated@@64) (= (type $generated@@529) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@530) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@409 $generated@@528 $generated@@529) $generated@@530))  (and ($generated@@224 $generated@@530 $generated@@528) ($generated@@0 ($generated@@81 $generated@@529 $generated@@530)))))
 :pattern ( ($generated@@81 ($generated@@409 $generated@@528 $generated@@529) $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@145) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@64)) ($generated@@224 $generated@@531 ($generated@@396 $generated@@532 $generated@@533))) (and (= ($generated@@294 ($generated@@368 ($generated@@307 $generated@@145 $generated@@145) $generated@@531)) $generated@@531) ($generated@@132 ($generated@@368 ($generated@@307 $generated@@145 $generated@@145) $generated@@531) ($generated@@396 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@224 $generated@@531 ($generated@@396 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@145) (= (type $generated@@535) $generated@@64)) (= (type $generated@@536) $generated@@64)) ($generated@@224 $generated@@534 ($generated@@237 $generated@@535 $generated@@536))) (and (= ($generated@@294 ($generated@@368 ($generated@@235 $generated@@145 $generated@@145) $generated@@534)) $generated@@534) ($generated@@132 ($generated@@368 ($generated@@235 $generated@@145 $generated@@145) $generated@@534) ($generated@@237 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@224 $generated@@534 ($generated@@237 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@64) (= (type $generated@@538) $generated@@64)) (= (type $generated@@539) $generated@@145)) ($generated@@224 $generated@@539 ($generated@@135 $generated@@537 $generated@@538))) (and (= ($generated@@294 ($generated@@368 $generated@@136 $generated@@539)) $generated@@539) ($generated@@132 ($generated@@368 $generated@@136 $generated@@539) ($generated@@135 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@224 $generated@@539 ($generated@@135 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
 (not ($generated@@0 ($generated@@81 ($generated@@415 $generated@@541) $generated@@540))))
 :pattern ( (let (($generated@@541 (type $generated@@540)))
($generated@@81 ($generated@@415 $generated@@541) $generated@@540)))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@69)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@64) (= (type $generated@@545) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@544 $generated@@545)) $generated@@62) (= ($generated@@542 ($generated@@135 $generated@@544 $generated@@545)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@136) (= ($generated@@522 ($generated@@294 $generated@@546)) ($generated@@523 $generated@@546)))
 :pattern ( ($generated@@522 ($generated@@294 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@145) ($generated@@224 $generated@@547 ($generated@@75 0))) (and (= ($generated@@294 ($generated@@368 $generated@@2 $generated@@547)) $generated@@547) ($generated@@132 ($generated@@368 ($generated@@76 $generated@@145 $generated@@4) $generated@@547) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@547 ($generated@@75 0)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@64)) ($generated@@224 $generated@@548 ($generated@@261 $generated@@549))) (and (= ($generated@@294 ($generated@@368 ($generated@@76 $generated@@145 $generated@@4) $generated@@548)) $generated@@548) ($generated@@132 ($generated@@368 ($generated@@76 $generated@@145 $generated@@4) $generated@@548) ($generated@@261 $generated@@549))))
 :pattern ( ($generated@@224 $generated@@548 ($generated@@261 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@145) (= (type $generated@@551) $generated@@64)) ($generated@@224 $generated@@550 ($generated@@239 $generated@@551))) (and (= ($generated@@294 ($generated@@368 ($generated@@76 $generated@@145 $generated@@4) $generated@@550)) $generated@@550) ($generated@@132 ($generated@@368 ($generated@@76 $generated@@145 $generated@@4) $generated@@550) ($generated@@239 $generated@@551))))
 :pattern ( ($generated@@224 $generated@@550 ($generated@@239 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@145) (= (type $generated@@553) $generated@@64)) ($generated@@224 $generated@@552 ($generated@@150 $generated@@553))) (and (= ($generated@@294 ($generated@@368 ($generated@@76 $generated@@145 $generated@@2) $generated@@552)) $generated@@552) ($generated@@132 ($generated@@368 ($generated@@76 $generated@@145 $generated@@2) $generated@@552) ($generated@@150 $generated@@553))))
 :pattern ( ($generated@@224 $generated@@552 ($generated@@150 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@145) (= (type $generated@@555) $generated@@64)) ($generated@@224 $generated@@554 ($generated@@481 $generated@@555))) (and (= ($generated@@294 ($generated@@368 ($generated@@288 $generated@@145) $generated@@554)) $generated@@554) ($generated@@132 ($generated@@368 ($generated@@288 $generated@@145) $generated@@554) ($generated@@481 $generated@@555))))
 :pattern ( ($generated@@224 $generated@@554 ($generated@@481 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@556) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@557) $generated@@64)) (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@556 ($generated@@150 $generated@@557) $generated@@558) (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@556 $generated@@559)))) ($generated@@274 $generated@@559 $generated@@557 $generated@@558))
 :pattern ( ($generated@@81 $generated@@556 $generated@@559))
))))
 :pattern ( ($generated@@74 $generated@@556 ($generated@@150 $generated@@557) $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@136) (= (type $generated@@561) $generated@@64)) (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@273 $generated@@562) (and ($generated@@134 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@64) ($generated@@74 $generated@@560 ($generated@@135 $generated@@561 $generated@@563) $generated@@562))
 :pattern ( ($generated@@74 $generated@@560 ($generated@@135 $generated@@561 $generated@@563) $generated@@562))
))))) ($generated@@274 ($generated@@143 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@274 ($generated@@143 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@136) (= (type $generated@@565) $generated@@64)) (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@273 $generated@@566) (and ($generated@@134 $generated@@564) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@64) ($generated@@74 $generated@@564 ($generated@@135 $generated@@567 $generated@@565) $generated@@566))
 :pattern ( ($generated@@74 $generated@@564 ($generated@@135 $generated@@567 $generated@@565) $generated@@566))
))))) ($generated@@274 ($generated@@144 $generated@@564) $generated@@565 $generated@@566))
 :pattern ( ($generated@@274 ($generated@@144 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@145) (= (type $generated@@569) $generated@@145)) (= ($generated@@223 ($generated@@269 $generated@@568) ($generated@@269 $generated@@569)) ($generated@@269 ($generated@@223 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@223 ($generated@@269 $generated@@568) ($generated@@269 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= ($generated@@294 ($generated@@269 $generated@@570)) ($generated@@269 ($generated@@294 $generated@@570)))
 :pattern ( ($generated@@294 ($generated@@269 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@289 (type $generated@@571))))
 (=> (and (= (type $generated@@571) ($generated@@288 $generated@@572)) (= ($generated@@287 $generated@@571) 0)) (= $generated@@571 ($generated@@286 $generated@@572))))
 :pattern ( ($generated@@287 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@574)))
 (=> (and (and (= (type $generated@@573) ($generated@@76 $generated@@576 $generated@@2)) (= (type $generated@@575) $generated@@2)) (<= 0 ($generated $generated@@575))) (= ($generated@@299 ($generated@@82 $generated@@573 $generated@@574 $generated@@575)) (+ (- ($generated@@299 $generated@@573) ($generated ($generated@@81 $generated@@573 $generated@@574))) ($generated $generated@@575)))))
 :pattern ( ($generated@@299 ($generated@@82 $generated@@573 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@2)) ($generated@@74 $generated@@578 $generated@@46 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@46 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@3)) ($generated@@74 $generated@@580 $generated@@47 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@47 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@4)) ($generated@@74 $generated@@582 $generated@@44 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@44 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@439)) ($generated@@74 $generated@@584 $generated@@45 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@45 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@145)) ($generated@@74 $generated@@586 $generated@@48 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@48 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@288 $generated@@145)) (= (type $generated@@588) $generated@@64)) (= ($generated@@132 $generated@@587 ($generated@@481 $generated@@588)) (forall (($generated@@589 Int) ) (!  (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@287 $generated@@587))) ($generated@@224 ($generated@@482 $generated@@587 $generated@@589) $generated@@588))
 :pattern ( ($generated@@482 $generated@@587 $generated@@589))
))))
 :pattern ( ($generated@@132 $generated@@587 ($generated@@481 $generated@@588)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 Int) ) (!  (=> (= (type $generated@@591) ($generated@@288 $generated@@145)) (=> (and (<= 0 $generated@@592) (< $generated@@592 ($generated@@287 $generated@@591))) (< ($generated@@523 ($generated@@368 $generated@@136 ($generated@@482 $generated@@591 $generated@@592))) ($generated@@590 $generated@@591))))
 :pattern ( ($generated@@523 ($generated@@368 $generated@@136 ($generated@@482 $generated@@591 $generated@@592))))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@307 $generated@@145 $generated@@145)) (= (type $generated@@594) $generated@@64)) (= (type $generated@@595) $generated@@64)) ($generated@@132 $generated@@593 ($generated@@396 $generated@@594 $generated@@595))) (and (and ($generated@@132 ($generated@@305 $generated@@593) ($generated@@261 $generated@@594)) ($generated@@132 ($generated@@336 $generated@@593) ($generated@@261 $generated@@595))) ($generated@@132 ($generated@@367 $generated@@593) ($generated@@261 ($generated@@135 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@132 $generated@@593 ($generated@@396 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) ($generated@@235 $generated@@145 $generated@@145)) (= (type $generated@@597) $generated@@64)) (= (type $generated@@598) $generated@@64)) ($generated@@132 $generated@@596 ($generated@@237 $generated@@597 $generated@@598))) (and (and ($generated@@132 ($generated@@238 $generated@@596) ($generated@@239 $generated@@597)) ($generated@@132 ($generated@@347 $generated@@596) ($generated@@239 $generated@@598))) ($generated@@132 ($generated@@378 $generated@@596) ($generated@@239 ($generated@@135 $generated@@597 $generated@@598)))))
 :pattern ( ($generated@@132 $generated@@596 ($generated@@237 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@2) ($generated@@132 $generated@@599 $generated@@46))
 :pattern ( ($generated@@132 $generated@@599 $generated@@46))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@3) ($generated@@132 $generated@@600 $generated@@47))
 :pattern ( ($generated@@132 $generated@@600 $generated@@47))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@4) ($generated@@132 $generated@@601 $generated@@44))
 :pattern ( ($generated@@132 $generated@@601 $generated@@44))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@439) ($generated@@132 $generated@@602 $generated@@45))
 :pattern ( ($generated@@132 $generated@@602 $generated@@45))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@145) ($generated@@132 $generated@@603 $generated@@48))
 :pattern ( ($generated@@132 $generated@@603 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () T@U)
(declare-fun $generated@@614 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@604) ($generated@@235 $generated@@145 $generated@@145)) (= (type $generated@@606) $generated@@64)) (= (type $generated@@607) $generated@@64)) (= (type $generated@@610) $generated@@145)) (= (type $generated@@608) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@611) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@612) $generated@@77)) (= (type $generated@@605) $generated@@145)) (= (type $generated@@609) $generated@@145)) (= (type $generated@@613) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@615 true))
(let (($generated@@616  (=> (and (=> ($generated@@0 ($generated@@81 ($generated@@238 $generated@@604) $generated@@605)) ($generated@@0 ($generated@@81 ($generated@@234 $generated@@606 $generated@@607 $generated@@604) $generated@@605))) (= (ControlFlow 0 13) 10)) $generated@@615)))
(let (($generated@@617  (=> (and ($generated@@0 ($generated@@81 ($generated@@238 $generated@@604) $generated@@605)) ($generated@@74 $generated@@604 ($generated@@237 $generated@@606 $generated@@607) $generated@@608)) (and (=> (= (ControlFlow 0 11) (- 0 12)) (= $generated@@604 $generated@@604)) (=> (= $generated@@604 $generated@@604) (=> (or (= $generated@@604 $generated@@604) ($generated@@236 $generated@@606 $generated@@607 $generated@@604)) (=> (and ($generated@@0 ($generated@@81 ($generated@@234 $generated@@606 $generated@@607 $generated@@604) $generated@@605)) (= (ControlFlow 0 11) 10)) $generated@@615)))))))
(let (($generated@@618  (=> (forall (($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@145) ($generated@@224 $generated@@619 $generated@@606)) ($generated@@0 ($generated@@81 ($generated@@234 $generated@@606 $generated@@607 $generated@@604) $generated@@619))) ($generated@@0 ($generated@@81 ($generated@@238 $generated@@604) $generated@@619)))
 :pattern ( ($generated@@81 ($generated@@238 $generated@@604) $generated@@619))
 :pattern ( ($generated@@81 ($generated@@234 $generated@@606 $generated@@607 $generated@@604) $generated@@619))
)) (=> (and ($generated@@224 $generated@@605 $generated@@606) ($generated@@274 $generated@@605 $generated@@606 $generated@@608)) (and (=> (= (ControlFlow 0 14) 11) $generated@@617) (=> (= (ControlFlow 0 14) 13) $generated@@616))))))
(let (($generated@@620  (=> (and (=> ($generated@@0 ($generated@@81 ($generated@@234 $generated@@606 $generated@@607 $generated@@604) $generated@@609)) ($generated@@0 ($generated@@81 ($generated@@238 $generated@@604) $generated@@609))) (= (ControlFlow 0 17) 14)) $generated@@618)))
(let (($generated@@621  (=> ($generated@@74 $generated@@604 ($generated@@237 $generated@@606 $generated@@607) $generated@@608) (and (=> (= (ControlFlow 0 15) (- 0 16)) (= $generated@@604 $generated@@604)) (=> (= $generated@@604 $generated@@604) (=> (and (and (or (= $generated@@604 $generated@@604) ($generated@@236 $generated@@606 $generated@@607 $generated@@604)) ($generated@@0 ($generated@@81 ($generated@@234 $generated@@606 $generated@@607 $generated@@604) $generated@@609))) (and ($generated@@0 ($generated@@81 ($generated@@238 $generated@@604) $generated@@609)) (= (ControlFlow 0 15) 14))) $generated@@618))))))
(let (($generated@@622  (=> ($generated@@132 ($generated@@234 $generated@@606 $generated@@607 $generated@@604) ($generated@@239 $generated@@606)) (=> (and ($generated@@224 $generated@@609 $generated@@606) ($generated@@274 $generated@@609 $generated@@606 $generated@@608)) (and (=> (= (ControlFlow 0 18) 15) $generated@@621) (=> (= (ControlFlow 0 18) 17) $generated@@620))))))
(let (($generated@@623  (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@145) ($generated@@224 $generated@@624 $generated@@606)) ($generated@@0 ($generated@@81 ($generated@@234 $generated@@606 $generated@@607 $generated@@604) $generated@@624))) ($generated@@0 ($generated@@81 ($generated@@238 $generated@@604) $generated@@624)))
 :pattern ( ($generated@@81 ($generated@@238 $generated@@604) $generated@@624))
 :pattern ( ($generated@@81 ($generated@@234 $generated@@606 $generated@@607 $generated@@604) $generated@@624))
))) (=> (forall (($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@145) ($generated@@224 $generated@@625 $generated@@606)) ($generated@@0 ($generated@@81 ($generated@@234 $generated@@606 $generated@@607 $generated@@604) $generated@@625))) ($generated@@0 ($generated@@81 ($generated@@238 $generated@@604) $generated@@625)))
 :pattern ( ($generated@@81 ($generated@@238 $generated@@604) $generated@@625))
 :pattern ( ($generated@@81 ($generated@@234 $generated@@606 $generated@@607 $generated@@604) $generated@@625))
)) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@626) $generated@@145) ($generated@@224 $generated@@626 $generated@@606)) ($generated@@0 ($generated@@81 ($generated@@238 $generated@@604) $generated@@626))) ($generated@@0 ($generated@@81 ($generated@@234 $generated@@606 $generated@@607 $generated@@604) $generated@@626)))
 :pattern ( ($generated@@81 ($generated@@234 $generated@@606 $generated@@607 $generated@@604) $generated@@626))
 :pattern ( ($generated@@81 ($generated@@238 $generated@@604) $generated@@626))
)))))))
(let (($generated@@627  (=> (= ($generated@@234 $generated@@606 $generated@@607 $generated@@604) ($generated@@409 $generated@@606 ($generated@@238 $generated@@604))) (=> (and ($generated@@132 ($generated@@234 $generated@@606 $generated@@607 $generated@@604) ($generated@@239 $generated@@606)) (= (ControlFlow 0 4) 2)) $generated@@623))))
(let (($generated@@628  (=> (and (not ($generated@@0 ($generated@@81 ($generated@@238 $generated@@604) $generated@@610))) (= (ControlFlow 0 7) 4)) $generated@@627)))
(let (($generated@@629  (=> (and ($generated@@0 ($generated@@81 ($generated@@238 $generated@@604) $generated@@610)) (= (ControlFlow 0 6) 4)) $generated@@627)))
(let (($generated@@630  (=> (and ($generated@@224 $generated@@610 $generated@@606) ($generated@@274 $generated@@610 $generated@@606 $generated@@608)) (and (=> (= (ControlFlow 0 8) 6) $generated@@629) (=> (= (ControlFlow 0 8) 7) $generated@@628)))))
(let (($generated@@631  (=> (and (not (and ($generated@@224 $generated@@610 $generated@@606) ($generated@@274 $generated@@610 $generated@@606 $generated@@608))) (= (ControlFlow 0 5) 4)) $generated@@627)))
(let (($generated@@632  (=> (= $generated@@611 ($generated@@211 $generated@@612 $generated@@608 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 8) $generated@@630) (=> (= (ControlFlow 0 9) 5) $generated@@631)))))
(let (($generated@@633  (=> (= $generated@@613 ($generated@@156 $generated@@612 $generated@@608 $generated@@60 false)) (and (=> (= (ControlFlow 0 19) 18) $generated@@622) (=> (= (ControlFlow 0 19) 9) $generated@@632)))))
(let (($generated@@634  (=> (and (and (and ($generated@@273 $generated@@608) ($generated@@614 $generated@@608)) ($generated@@132 $generated@@604 ($generated@@237 $generated@@606 $generated@@607))) (and (= 0 $generated@@233) (= (ControlFlow 0 20) 19))) $generated@@633)))
$generated@@634)))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 () Int)
(declare-fun $generated@@222 (T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@T T@T) T@T)
(declare-fun $generated@@224 (T@U T@U T@U) Bool)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@228 (T@T) T@T)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@252 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@262 (T@U T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@293 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@317 (T@U T@U) Bool)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@361 (T@T T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@394 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@T) T@U)
(declare-fun $generated@@435 () T@T)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@478 (T@U Int) T@U)
(declare-fun $generated@@487 (T@U) Int)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@586 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@230 T@T) ($generated@@231 T@T) ) (= ($generated@@1 ($generated@@223 $generated@@230 $generated@@231)) 17)) (forall (($generated@@232 T@T) ($generated@@233 T@T) ) (! (= ($generated@@228 ($generated@@223 $generated@@232 $generated@@233)) $generated@@232)
 :pattern ( ($generated@@223 $generated@@232 $generated@@233))
))) (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (! (= ($generated@@229 ($generated@@223 $generated@@234 $generated@@235)) $generated@@235)
 :pattern ( ($generated@@223 $generated@@234 $generated@@235))
))) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@222 $generated@@236 $generated@@237 $generated@@238)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@222 $generated@@236 $generated@@237 $generated@@238))
))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@225 $generated@@239 $generated@@240)) $generated@@64)
 :pattern ( ($generated@@225 $generated@@239 $generated@@240))
))) (forall (($generated@@241 T@U) ) (! (let (($generated@@242 ($generated@@228 (type $generated@@241))))
(= (type ($generated@@226 $generated@@241)) ($generated@@76 $generated@@242 $generated@@4)))
 :pattern ( ($generated@@226 $generated@@241))
))) (forall (($generated@@243 T@U) ) (! (= (type ($generated@@227 $generated@@243)) $generated@@64)
 :pattern ( ($generated@@227 $generated@@243))
))))
(assert  (=> (<= 0 $generated@@221) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@244) $generated@@64) (= (type $generated@@245) $generated@@64)) (= (type $generated@@246) ($generated@@223 $generated@@145 $generated@@145))) (or ($generated@@224 $generated@@244 $generated@@245 $generated@@246) (and (not (= 0 $generated@@221)) ($generated@@132 $generated@@246 ($generated@@225 $generated@@244 $generated@@245))))) (and (and (forall (($generated@@247 T@U) ) (!  (=> (and (and (= (type $generated@@247) $generated@@145) ($generated@@212 $generated@@247 $generated@@244)) ($generated@@0 ($generated@@81 ($generated@@222 $generated@@244 $generated@@245 $generated@@246) $generated@@247))) ($generated@@0 ($generated@@81 ($generated@@226 $generated@@246) $generated@@247)))
 :pattern ( ($generated@@81 ($generated@@226 $generated@@246) $generated@@247))
 :pattern ( ($generated@@81 ($generated@@222 $generated@@244 $generated@@245 $generated@@246) $generated@@247))
)) (forall (($generated@@248 T@U) ) (!  (=> (and (and (= (type $generated@@248) $generated@@145) ($generated@@212 $generated@@248 $generated@@244)) ($generated@@0 ($generated@@81 ($generated@@226 $generated@@246) $generated@@248))) ($generated@@0 ($generated@@81 ($generated@@222 $generated@@244 $generated@@245 $generated@@246) $generated@@248)))
 :pattern ( ($generated@@81 ($generated@@222 $generated@@244 $generated@@245 $generated@@246) $generated@@248))
 :pattern ( ($generated@@81 ($generated@@226 $generated@@246) $generated@@248))
))) ($generated@@132 ($generated@@222 $generated@@244 $generated@@245 $generated@@246) ($generated@@227 $generated@@244))))
 :pattern ( ($generated@@222 $generated@@244 $generated@@245 $generated@@246))
))))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@250) $generated@@64)) (= ($generated@@132 $generated@@249 ($generated@@227 $generated@@250)) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@145) ($generated@@0 ($generated@@81 $generated@@249 $generated@@251))) ($generated@@212 $generated@@251 $generated@@250))
 :pattern ( ($generated@@81 $generated@@249 $generated@@251))
))))
 :pattern ( ($generated@@132 $generated@@249 ($generated@@227 $generated@@250)))
)))
(assert (forall (($generated@@253 T@U) ) (! (= (type ($generated@@252 $generated@@253)) $generated@@64)
 :pattern ( ($generated@@252 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@255) $generated@@64)) (= ($generated@@132 $generated@@254 ($generated@@252 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@0 ($generated@@81 $generated@@254 $generated@@256))) ($generated@@212 $generated@@256 $generated@@255))
 :pattern ( ($generated@@81 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@132 $generated@@254 ($generated@@252 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 (type $generated@@258)))
(= (type ($generated@@257 $generated@@258)) $generated@@259))
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= ($generated@@257 $generated@@260) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@263) $generated@@64) (= (type $generated@@264) $generated@@64)) (= (type $generated@@265) $generated@@145)) (= (type $generated@@266) $generated@@145)) (= (type $generated@@267) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@261 $generated@@267)) (= ($generated@@74 ($generated@@211 $generated@@265 $generated@@266) ($generated@@135 $generated@@263 $generated@@264) $generated@@267)  (and ($generated@@262 $generated@@265 $generated@@263 $generated@@267) ($generated@@262 $generated@@266 $generated@@264 $generated@@267))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@265 $generated@@266) ($generated@@135 $generated@@263 $generated@@264) $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@68)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (= (type $generated@@270) $generated@@136) (= ($generated@@134 $generated@@270) (= ($generated@@268 $generated@@270) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@136) ($generated@@134 $generated@@271)) (exists (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (and (and (= (type $generated@@272) $generated@@145) (= (type $generated@@273) $generated@@145)) (= $generated@@271 ($generated@@211 $generated@@272 $generated@@273)))
 :no-pattern (type $generated@@272)
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
)))
 :pattern ( ($generated@@134 $generated@@271))
)))
(assert  (and (and (forall (($generated@@278 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@278)) 18)) (forall (($generated@@279 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
))) (forall (($generated@@280 T@T) ) (! (= (type ($generated@@274 $generated@@280)) ($generated@@276 $generated@@280))
 :pattern ( ($generated@@274 $generated@@280))
))))
(assert (forall (($generated@@281 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@281)) 0)
 :pattern ( ($generated@@274 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@145)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@64) (= (type $generated@@286) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@262 ($generated@@282 $generated@@284) $generated@@285 $generated@@286) ($generated@@74 $generated@@284 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@262 ($generated@@282 $generated@@284) $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@76 $generated@@289 $generated@@2))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@79 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@76 $generated@@291 $generated@@2)) (and (= (= ($generated@@287 $generated@@290) 0) (= $generated@@290 ($generated@@288 $generated@@291))) (=> (not (= ($generated@@287 $generated@@290) 0)) (exists (($generated@@292 T@U) ) (!  (and (= (type $generated@@292) $generated@@291) (< 0 ($generated ($generated@@81 $generated@@290 $generated@@292))))
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
))))))
 :pattern ( ($generated@@287 $generated@@290))
)))
(assert (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@293 $generated@@294 $generated@@295)) ($generated@@223 $generated@@294 $generated@@295))
 :pattern ( ($generated@@293 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@226 ($generated@@293 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@226 ($generated@@293 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@79 (type $generated@@318))))
 (=> (and (= (type $generated@@318) ($generated@@76 $generated@@320 $generated@@4)) (= (type $generated@@319) ($generated@@76 $generated@@320 $generated@@4))) (= ($generated@@317 $generated@@318 $generated@@319) (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@320) (= ($generated@@0 ($generated@@81 $generated@@318 $generated@@321)) ($generated@@0 ($generated@@81 $generated@@319 $generated@@321))))
 :pattern ( ($generated@@81 $generated@@318 $generated@@321))
 :pattern ( ($generated@@81 $generated@@319 $generated@@321))
)))))
 :pattern ( ($generated@@317 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@79 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@76 $generated@@323 $generated@@2)) (= ($generated@@151 $generated@@322) (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@323) (and (<= 0 ($generated ($generated@@81 $generated@@322 $generated@@324))) (<= ($generated ($generated@@81 $generated@@322 $generated@@324)) ($generated@@287 $generated@@322))))
 :pattern ( ($generated@@81 $generated@@322 $generated@@324))
)))))
 :pattern ( ($generated@@151 $generated@@322))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@229 (type $generated@@325))))
(let (($generated@@327 ($generated@@228 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@223 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@293 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@226 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@226 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@229 (type $generated@@330))))
(= (type ($generated@@329 $generated@@330)) ($generated@@76 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@229 (type $generated@@332))))
(let (($generated@@334 ($generated@@228 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@223 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@293 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@329 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@303 (type $generated@@336))))
(let (($generated@@338 ($generated@@302 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@301 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@300 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@299 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@303 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@303 (type $generated@@343))))
(let (($generated@@345 ($generated@@302 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@301 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@300 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@348) $generated@@64)) (= ($generated@@132 $generated@@347 ($generated@@150 $generated@@348)) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@347 $generated@@349)))) ($generated@@212 $generated@@349 $generated@@348))
 :pattern ( ($generated@@81 $generated@@347 $generated@@349))
))))
 :pattern ( ($generated@@132 $generated@@347 ($generated@@150 $generated@@348)))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (= (type $generated@@350) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@351) $generated@@64)) (= (type $generated@@352) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@350 ($generated@@227 $generated@@351) $generated@@352) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@145) ($generated@@0 ($generated@@81 $generated@@350 $generated@@353))) ($generated@@262 $generated@@353 $generated@@351 $generated@@352))
 :pattern ( ($generated@@81 $generated@@350 $generated@@353))
))))
 :pattern ( ($generated@@74 $generated@@350 ($generated@@227 $generated@@351) $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@355) $generated@@64)) (= (type $generated@@356) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@354 ($generated@@252 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@145) ($generated@@0 ($generated@@81 $generated@@354 $generated@@357))) ($generated@@262 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@81 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@74 $generated@@354 ($generated@@252 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 (type $generated@@358)))
(= ($generated ($generated@@81 ($generated@@288 $generated@@359) $generated@@358)) 0))
 :pattern ( (let (($generated@@359 (type $generated@@358)))
($generated@@81 ($generated@@288 $generated@@359) $generated@@358)))
)))
(assert  (and (and (forall (($generated@@363 T@U) ) (! (= (type ($generated@@360 $generated@@363)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@360 $generated@@363))
)) (forall (($generated@@364 T@T) ($generated@@365 T@U) ) (! (= (type ($generated@@361 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@361 $generated@@364 $generated@@365))
))) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@229 (type $generated@@366))))
(let (($generated@@368 ($generated@@228 (type $generated@@366))))
(= (type ($generated@@362 $generated@@366)) ($generated@@76 $generated@@368 $generated@@367))))
 :pattern ( ($generated@@362 $generated@@366))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@223 $generated@@145 $generated@@145)) (= (type $generated@@370) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@360 $generated@@369) $generated@@370))  (and ($generated@@0 ($generated@@81 ($generated@@226 $generated@@369) ($generated@@143 ($generated@@361 $generated@@136 $generated@@370)))) (= ($generated@@81 ($generated@@362 $generated@@369) ($generated@@143 ($generated@@361 $generated@@136 $generated@@370))) ($generated@@144 ($generated@@361 $generated@@136 $generated@@370))))))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@369) $generated@@370))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@303 (type $generated@@374))))
(let (($generated@@376 ($generated@@302 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@76 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@378) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@377) ($generated@@143 ($generated@@361 $generated@@136 $generated@@378)))) (= ($generated@@81 ($generated@@372 $generated@@377) ($generated@@143 ($generated@@361 $generated@@136 $generated@@378))) ($generated@@144 ($generated@@361 $generated@@136 $generated@@378))))))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@228 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@223 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@81 ($generated@@329 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@81 ($generated@@226 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@81 ($generated@@362 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@81 ($generated@@226 $generated@@379) $generated@@383))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@81 ($generated@@329 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@302 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@301 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@81 ($generated@@340 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@81 ($generated@@372 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@384) $generated@@388))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@81 ($generated@@340 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (and (and (= (type $generated@@389) ($generated@@223 $generated@@145 $generated@@145)) (= (type $generated@@390) $generated@@64)) (= (type $generated@@391) $generated@@64)) (= (type $generated@@392) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@389 ($generated@@225 $generated@@390 $generated@@391) $generated@@392) (forall (($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@226 $generated@@389) $generated@@393))) (and ($generated@@262 ($generated@@81 ($generated@@362 $generated@@389) $generated@@393) $generated@@391 $generated@@392) ($generated@@262 $generated@@393 $generated@@390 $generated@@392)))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@389) $generated@@393))
 :pattern ( ($generated@@81 ($generated@@226 $generated@@389) $generated@@393))
))))
 :pattern ( ($generated@@74 $generated@@389 ($generated@@225 $generated@@390 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@395 $generated@@396)) $generated@@64)
 :pattern ( ($generated@@394 $generated@@395 $generated@@396))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@397) $generated@@401))) (and ($generated@@262 ($generated@@81 ($generated@@372 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@262 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@397) $generated@@401))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@74 $generated@@397 ($generated@@394 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@79 (type $generated@@402))))
 (=> (and (and (= (type $generated@@402) ($generated@@76 $generated@@404 $generated@@4)) (= (type $generated@@403) ($generated@@76 $generated@@404 $generated@@4))) ($generated@@317 $generated@@402 $generated@@403)) (= $generated@@402 $generated@@403)))
 :pattern ( ($generated@@317 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert  (=> (<= 0 $generated@@221) (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) $generated@@64) (= (type $generated@@409) $generated@@64)) (= (type $generated@@410) ($generated@@223 $generated@@145 $generated@@145))) (or ($generated@@224 $generated@@408 $generated@@409 $generated@@410) (and (not (= 0 $generated@@221)) ($generated@@132 $generated@@410 ($generated@@225 $generated@@408 $generated@@409))))) (= ($generated@@222 $generated@@408 $generated@@409 $generated@@410) ($generated@@405 $generated@@408 ($generated@@226 $generated@@410))))
 :pattern ( ($generated@@222 $generated@@408 $generated@@409 $generated@@410))
))))
(assert (forall (($generated@@412 T@T) ) (! (= (type ($generated@@411 $generated@@412)) ($generated@@76 $generated@@412 $generated@@4))
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@303 (type $generated@@413))))
(let (($generated@@415 ($generated@@302 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@301 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@300 $generated@@415 $generated@@414)) (= ($generated@@299 $generated@@413) ($generated@@411 $generated@@415))))))
 :pattern ( ($generated@@299 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@303 (type $generated@@416))))
(let (($generated@@418 ($generated@@302 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@301 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@300 $generated@@418 $generated@@417)) (= ($generated@@340 $generated@@416) ($generated@@411 $generated@@417))))))
 :pattern ( ($generated@@340 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@303 (type $generated@@419))))
(let (($generated@@421 ($generated@@302 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@301 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@300 $generated@@421 $generated@@420)) (= ($generated@@371 $generated@@419) ($generated@@411 $generated@@145))))))
 :pattern ( ($generated@@371 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@229 (type $generated@@422))))
(let (($generated@@424 ($generated@@228 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@223 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@293 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (and (and (= (type $generated@@425) $generated@@145) (= (type $generated@@426) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@360 $generated@@422) ($generated@@282 ($generated@@211 $generated@@425 $generated@@426)))))
 :no-pattern (type $generated@@425)
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@360 $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@303 (type $generated@@427))))
(let (($generated@@429 ($generated@@302 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@301 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@300 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@145) (= (type $generated@@431) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@371 $generated@@427) ($generated@@282 ($generated@@211 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@371 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@145) ($generated@@212 $generated@@432 $generated@@46)) (and (= ($generated@@282 ($generated@@361 $generated@@2 $generated@@432)) $generated@@432) ($generated@@132 ($generated@@361 $generated@@2 $generated@@432) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@432 $generated@@46))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@145) ($generated@@212 $generated@@433 $generated@@47)) (and (= ($generated@@282 ($generated@@361 $generated@@3 $generated@@433)) $generated@@433) ($generated@@132 ($generated@@361 $generated@@3 $generated@@433) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@433 $generated@@47))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@145) ($generated@@212 $generated@@434 $generated@@44)) (and (= ($generated@@282 ($generated@@361 $generated@@4 $generated@@434)) $generated@@434) ($generated@@132 ($generated@@361 $generated@@4 $generated@@434) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@434 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@435) 20))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@145) ($generated@@212 $generated@@436 $generated@@45)) (and (= ($generated@@282 ($generated@@361 $generated@@435 $generated@@436)) $generated@@436) ($generated@@132 ($generated@@361 $generated@@435 $generated@@436) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@436 $generated@@45))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (= (type $generated@@438) $generated@@64) (= ($generated@@212 ($generated@@282 $generated@@437) $generated@@438) ($generated@@132 $generated@@437 $generated@@438)))
 :pattern ( ($generated@@212 ($generated@@282 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@79 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@76 $generated@@440 $generated@@2)) (<= 0 ($generated@@287 $generated@@439))))
 :pattern ( ($generated@@287 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@277 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@276 $generated@@442)) (<= 0 ($generated@@275 $generated@@441))))
 :pattern ( ($generated@@275 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@64)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@443 ($generated@@225 $generated@@445 $generated@@446)) $generated@@445))
 :pattern ( ($generated@@225 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@225 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@225 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@72 ($generated@@225 $generated@@451 $generated@@452)) $generated@@58))
 :pattern ( ($generated@@225 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@394 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@394 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@394 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@394 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@72 ($generated@@394 $generated@@461 $generated@@462)) $generated@@59))
 :pattern ( ($generated@@394 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@145) (= (type $generated@@464) $generated@@145)) (= ($generated@@268 ($generated@@211 $generated@@463 $generated@@464)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@135 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@135 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@135 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@135 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@145) (= (type $generated@@474) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@211 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@145) (= (type $generated@@476) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@211 $generated@@475 $generated@@476))
)))
(assert  (and (forall (($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@479))
)) (forall (($generated@@480 T@U) ($generated@@481 Int) ) (! (let (($generated@@482 ($generated@@277 (type $generated@@480))))
(= (type ($generated@@478 $generated@@480 $generated@@481)) $generated@@482))
 :pattern ( ($generated@@478 $generated@@480 $generated@@481))
))))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (= (type $generated@@483) ($generated@@276 $generated@@145)) (= (type $generated@@484) $generated@@64)) (= (type $generated@@485) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@483 ($generated@@477 $generated@@484) $generated@@485) (forall (($generated@@486 Int) ) (!  (=> (and (<= 0 $generated@@486) (< $generated@@486 ($generated@@275 $generated@@483))) ($generated@@262 ($generated@@478 $generated@@483 $generated@@486) $generated@@484 $generated@@485))
 :pattern ( ($generated@@478 $generated@@483 $generated@@486))
))))
 :pattern ( ($generated@@74 $generated@@483 ($generated@@477 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@488 Int) ) (! (= ($generated@@487 ($generated@@75 $generated@@488)) $generated@@488)
 :pattern ( ($generated@@75 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@227 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@227 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@227 $generated@@492)) $generated@@54))
 :pattern ( ($generated@@227 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@252 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@252 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@252 $generated@@496)) $generated@@55))
 :pattern ( ($generated@@252 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@150 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@150 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@500)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@477 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@477 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@477 $generated@@504)) $generated@@57))
 :pattern ( ($generated@@477 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
(= ($generated@@361 $generated@@506 ($generated@@282 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@282 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@223 $generated@@145 $generated@@145)) (= (type $generated@@508) $generated@@64)) (= (type $generated@@509) $generated@@64)) (= ($generated@@132 $generated@@507 ($generated@@225 $generated@@508 $generated@@509)) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@226 $generated@@507) $generated@@510))) (and ($generated@@212 ($generated@@81 ($generated@@362 $generated@@507) $generated@@510) $generated@@509) ($generated@@212 $generated@@510 $generated@@508)))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@507) $generated@@510))
 :pattern ( ($generated@@81 ($generated@@226 $generated@@507) $generated@@510))
))))
 :pattern ( ($generated@@132 $generated@@507 ($generated@@225 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@64)) (= ($generated@@132 $generated@@511 ($generated@@394 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@511) $generated@@514))) (and ($generated@@212 ($generated@@81 ($generated@@372 $generated@@511) $generated@@514) $generated@@513) ($generated@@212 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@511) $generated@@514))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@132 $generated@@511 ($generated@@394 $generated@@512 $generated@@513)))
)))
(assert  (=> (<= 0 $generated@@221) (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) $generated@@64) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) ($generated@@223 $generated@@145 $generated@@145))) (or ($generated@@224 $generated@@515 $generated@@516 ($generated@@257 $generated@@517)) (and (not (= 0 $generated@@221)) ($generated@@132 $generated@@517 ($generated@@225 $generated@@515 $generated@@516))))) (= ($generated@@222 $generated@@515 $generated@@516 ($generated@@257 $generated@@517)) ($generated@@405 $generated@@515 ($generated@@226 $generated@@517))))
 :weight 3
 :pattern ( ($generated@@222 $generated@@515 $generated@@516 ($generated@@257 $generated@@517)))
))))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@145) (= (type $generated@@521) $generated@@145)) (< ($generated@@518 $generated@@520) ($generated@@519 ($generated@@211 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@211 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@145) (= (type $generated@@523) $generated@@145)) (< ($generated@@518 $generated@@523) ($generated@@519 ($generated@@211 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@211 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) $generated@@64) (= (type $generated@@525) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@526) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@405 $generated@@524 $generated@@525) $generated@@526))  (and ($generated@@212 $generated@@526 $generated@@524) ($generated@@0 ($generated@@81 $generated@@525 $generated@@526)))))
 :pattern ( ($generated@@81 ($generated@@405 $generated@@524 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@64)) ($generated@@212 $generated@@527 ($generated@@225 $generated@@528 $generated@@529))) (and (= ($generated@@282 ($generated@@361 ($generated@@223 $generated@@145 $generated@@145) $generated@@527)) $generated@@527) ($generated@@132 ($generated@@361 ($generated@@223 $generated@@145 $generated@@145) $generated@@527) ($generated@@225 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@212 $generated@@527 ($generated@@225 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@145) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) $generated@@64)) ($generated@@212 $generated@@530 ($generated@@394 $generated@@531 $generated@@532))) (and (= ($generated@@282 ($generated@@361 ($generated@@301 $generated@@145 $generated@@145) $generated@@530)) $generated@@530) ($generated@@132 ($generated@@361 ($generated@@301 $generated@@145 $generated@@145) $generated@@530) ($generated@@394 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@212 $generated@@530 ($generated@@394 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@64) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@145)) ($generated@@212 $generated@@535 ($generated@@135 $generated@@533 $generated@@534))) (and (= ($generated@@282 ($generated@@361 $generated@@136 $generated@@535)) $generated@@535) ($generated@@132 ($generated@@361 $generated@@136 $generated@@535) ($generated@@135 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@212 $generated@@535 ($generated@@135 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
 (not ($generated@@0 ($generated@@81 ($generated@@411 $generated@@537) $generated@@536))))
 :pattern ( (let (($generated@@537 (type $generated@@536)))
($generated@@81 ($generated@@411 $generated@@537) $generated@@536)))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@69)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@540 $generated@@541)) $generated@@62) (= ($generated@@538 ($generated@@135 $generated@@540 $generated@@541)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@136) (= ($generated@@518 ($generated@@282 $generated@@542)) ($generated@@519 $generated@@542)))
 :pattern ( ($generated@@518 ($generated@@282 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@145) ($generated@@212 $generated@@543 ($generated@@75 0))) (and (= ($generated@@282 ($generated@@361 $generated@@2 $generated@@543)) $generated@@543) ($generated@@132 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@543) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@543 ($generated@@75 0)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@64)) ($generated@@212 $generated@@544 ($generated@@227 $generated@@545))) (and (= ($generated@@282 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@544)) $generated@@544) ($generated@@132 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@544) ($generated@@227 $generated@@545))))
 :pattern ( ($generated@@212 $generated@@544 ($generated@@227 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@145) (= (type $generated@@547) $generated@@64)) ($generated@@212 $generated@@546 ($generated@@252 $generated@@547))) (and (= ($generated@@282 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@546)) $generated@@546) ($generated@@132 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@546) ($generated@@252 $generated@@547))))
 :pattern ( ($generated@@212 $generated@@546 ($generated@@252 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@64)) ($generated@@212 $generated@@548 ($generated@@150 $generated@@549))) (and (= ($generated@@282 ($generated@@361 ($generated@@76 $generated@@145 $generated@@2) $generated@@548)) $generated@@548) ($generated@@132 ($generated@@361 ($generated@@76 $generated@@145 $generated@@2) $generated@@548) ($generated@@150 $generated@@549))))
 :pattern ( ($generated@@212 $generated@@548 ($generated@@150 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@145) (= (type $generated@@551) $generated@@64)) ($generated@@212 $generated@@550 ($generated@@477 $generated@@551))) (and (= ($generated@@282 ($generated@@361 ($generated@@276 $generated@@145) $generated@@550)) $generated@@550) ($generated@@132 ($generated@@361 ($generated@@276 $generated@@145) $generated@@550) ($generated@@477 $generated@@551))))
 :pattern ( ($generated@@212 $generated@@550 ($generated@@477 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@553) $generated@@64)) (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@552 ($generated@@150 $generated@@553) $generated@@554) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@552 $generated@@555)))) ($generated@@262 $generated@@555 $generated@@553 $generated@@554))
 :pattern ( ($generated@@81 $generated@@552 $generated@@555))
))))
 :pattern ( ($generated@@74 $generated@@552 ($generated@@150 $generated@@553) $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@136) (= (type $generated@@557) $generated@@64)) (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@261 $generated@@558) (and ($generated@@134 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@64) ($generated@@74 $generated@@556 ($generated@@135 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@74 $generated@@556 ($generated@@135 $generated@@557 $generated@@559) $generated@@558))
))))) ($generated@@262 ($generated@@143 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@262 ($generated@@143 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@136) (= (type $generated@@561) $generated@@64)) (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@261 $generated@@562) (and ($generated@@134 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@64) ($generated@@74 $generated@@560 ($generated@@135 $generated@@563 $generated@@561) $generated@@562))
 :pattern ( ($generated@@74 $generated@@560 ($generated@@135 $generated@@563 $generated@@561) $generated@@562))
))))) ($generated@@262 ($generated@@144 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@262 ($generated@@144 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@145) (= (type $generated@@565) $generated@@145)) (= ($generated@@211 ($generated@@257 $generated@@564) ($generated@@257 $generated@@565)) ($generated@@257 ($generated@@211 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@211 ($generated@@257 $generated@@564) ($generated@@257 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ) (! (= ($generated@@282 ($generated@@257 $generated@@566)) ($generated@@257 ($generated@@282 $generated@@566)))
 :pattern ( ($generated@@282 ($generated@@257 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 ($generated@@277 (type $generated@@567))))
 (=> (and (= (type $generated@@567) ($generated@@276 $generated@@568)) (= ($generated@@275 $generated@@567) 0)) (= $generated@@567 ($generated@@274 $generated@@568))))
 :pattern ( ($generated@@275 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@570)))
 (=> (and (and (= (type $generated@@569) ($generated@@76 $generated@@572 $generated@@2)) (= (type $generated@@571) $generated@@2)) (<= 0 ($generated $generated@@571))) (= ($generated@@287 ($generated@@82 $generated@@569 $generated@@570 $generated@@571)) (+ (- ($generated@@287 $generated@@569) ($generated ($generated@@81 $generated@@569 $generated@@570))) ($generated $generated@@571)))))
 :pattern ( ($generated@@287 ($generated@@82 $generated@@569 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@574) $generated@@2)) ($generated@@74 $generated@@574 $generated@@46 $generated@@573))
 :pattern ( ($generated@@74 $generated@@574 $generated@@46 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@3)) ($generated@@74 $generated@@576 $generated@@47 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@47 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@4)) ($generated@@74 $generated@@578 $generated@@44 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@44 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@435)) ($generated@@74 $generated@@580 $generated@@45 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@45 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@145)) ($generated@@74 $generated@@582 $generated@@48 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@48 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@276 $generated@@145)) (= (type $generated@@584) $generated@@64)) (= ($generated@@132 $generated@@583 ($generated@@477 $generated@@584)) (forall (($generated@@585 Int) ) (!  (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@275 $generated@@583))) ($generated@@212 ($generated@@478 $generated@@583 $generated@@585) $generated@@584))
 :pattern ( ($generated@@478 $generated@@583 $generated@@585))
))))
 :pattern ( ($generated@@132 $generated@@583 ($generated@@477 $generated@@584)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 Int) ) (!  (=> (= (type $generated@@587) ($generated@@276 $generated@@145)) (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@275 $generated@@587))) (< ($generated@@519 ($generated@@361 $generated@@136 ($generated@@478 $generated@@587 $generated@@588))) ($generated@@586 $generated@@587))))
 :pattern ( ($generated@@519 ($generated@@361 $generated@@136 ($generated@@478 $generated@@587 $generated@@588))))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) ($generated@@223 $generated@@145 $generated@@145)) (= (type $generated@@590) $generated@@64)) (= (type $generated@@591) $generated@@64)) ($generated@@132 $generated@@589 ($generated@@225 $generated@@590 $generated@@591))) (and (and ($generated@@132 ($generated@@226 $generated@@589) ($generated@@227 $generated@@590)) ($generated@@132 ($generated@@329 $generated@@589) ($generated@@227 $generated@@591))) ($generated@@132 ($generated@@360 $generated@@589) ($generated@@227 ($generated@@135 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@132 $generated@@589 ($generated@@225 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@64)) ($generated@@132 $generated@@592 ($generated@@394 $generated@@593 $generated@@594))) (and (and ($generated@@132 ($generated@@299 $generated@@592) ($generated@@252 $generated@@593)) ($generated@@132 ($generated@@340 $generated@@592) ($generated@@252 $generated@@594))) ($generated@@132 ($generated@@371 $generated@@592) ($generated@@252 ($generated@@135 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@132 $generated@@592 ($generated@@394 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@2) ($generated@@132 $generated@@595 $generated@@46))
 :pattern ( ($generated@@132 $generated@@595 $generated@@46))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@3) ($generated@@132 $generated@@596 $generated@@47))
 :pattern ( ($generated@@132 $generated@@596 $generated@@47))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@4) ($generated@@132 $generated@@597 $generated@@44))
 :pattern ( ($generated@@132 $generated@@597 $generated@@44))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@435) ($generated@@132 $generated@@598 $generated@@45))
 :pattern ( ($generated@@132 $generated@@598 $generated@@45))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@145) ($generated@@132 $generated@@599 $generated@@48))
 :pattern ( ($generated@@132 $generated@@599 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@600) ($generated@@223 $generated@@145 $generated@@145)) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) $generated@@64)) (= (type $generated@@603) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@604) $generated@@145)) (= (type $generated@@605) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@606) $generated@@77)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@608  (=> (and (and ($generated@@74 $generated@@600 ($generated@@225 $generated@@601 $generated@@602) $generated@@603) ($generated@@224 $generated@@601 $generated@@602 $generated@@600)) (and ($generated@@224 $generated@@601 $generated@@602 $generated@@600) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@317 ($generated@@405 $generated@@601 ($generated@@226 $generated@@600)) ($generated@@222 $generated@@601 $generated@@602 $generated@@600)))))
(let (($generated@@609  (=> (and (not ($generated@@0 ($generated@@81 ($generated@@226 $generated@@600) $generated@@604))) (= (ControlFlow 0 5) 2)) $generated@@608)))
(let (($generated@@610  (=> (and ($generated@@0 ($generated@@81 ($generated@@226 $generated@@600) $generated@@604)) (= (ControlFlow 0 4) 2)) $generated@@608)))
(let (($generated@@611  (=> (and ($generated@@212 $generated@@604 $generated@@601) ($generated@@262 $generated@@604 $generated@@601 $generated@@603)) (and (=> (= (ControlFlow 0 6) 4) $generated@@610) (=> (= (ControlFlow 0 6) 5) $generated@@609)))))
(let (($generated@@612  (=> (and (not (and ($generated@@212 $generated@@604 $generated@@601) ($generated@@262 $generated@@604 $generated@@601 $generated@@603))) (= (ControlFlow 0 3) 2)) $generated@@608)))
(let (($generated@@613  (=> (= $generated@@605 ($generated@@156 $generated@@606 $generated@@603 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 6) $generated@@611) (=> (= (ControlFlow 0 7) 3) $generated@@612)))))
(let (($generated@@614  (=> (and ($generated@@261 $generated@@603) ($generated@@607 $generated@@603)) (=> (and (and ($generated@@132 $generated@@600 ($generated@@225 $generated@@601 $generated@@602)) ($generated@@74 $generated@@600 ($generated@@225 $generated@@601 $generated@@602) $generated@@603)) (and (= 1 $generated@@221) (= (ControlFlow 0 8) 7))) $generated@@613))))
$generated@@614))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 () Int)
(declare-fun $generated@@222 (T@U T@U T@U) T@U)
(declare-fun $generated@@223 (T@T T@T) T@T)
(declare-fun $generated@@224 (T@U T@U T@U) Bool)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@227 (T@U) T@U)
(declare-fun $generated@@228 (T@T) T@T)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@262 (T@U T@U T@U) Bool)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 (T@T T@T) T@U)
(declare-fun $generated@@295 (T@T T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@U T@U) Bool)
(declare-fun $generated@@329 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@360 (T@U) T@U)
(declare-fun $generated@@361 (T@T T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@389 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@T) T@U)
(declare-fun $generated@@435 () T@T)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@478 (T@U Int) T@U)
(declare-fun $generated@@487 (T@U) Int)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@586 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@230 T@T) ($generated@@231 T@T) ) (= ($generated@@1 ($generated@@223 $generated@@230 $generated@@231)) 17)) (forall (($generated@@232 T@T) ($generated@@233 T@T) ) (! (= ($generated@@228 ($generated@@223 $generated@@232 $generated@@233)) $generated@@232)
 :pattern ( ($generated@@223 $generated@@232 $generated@@233))
))) (forall (($generated@@234 T@T) ($generated@@235 T@T) ) (! (= ($generated@@229 ($generated@@223 $generated@@234 $generated@@235)) $generated@@235)
 :pattern ( ($generated@@223 $generated@@234 $generated@@235))
))) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@222 $generated@@236 $generated@@237 $generated@@238)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@222 $generated@@236 $generated@@237 $generated@@238))
))) (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! (= (type ($generated@@225 $generated@@239 $generated@@240)) $generated@@64)
 :pattern ( ($generated@@225 $generated@@239 $generated@@240))
))) (forall (($generated@@241 T@U) ) (! (let (($generated@@242 ($generated@@228 (type $generated@@241))))
(= (type ($generated@@226 $generated@@241)) ($generated@@76 $generated@@242 $generated@@4)))
 :pattern ( ($generated@@226 $generated@@241))
))) (forall (($generated@@243 T@U) ) (! (= (type ($generated@@227 $generated@@243)) $generated@@64)
 :pattern ( ($generated@@227 $generated@@243))
))))
(assert  (=> (<= 0 $generated@@221) (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@244) $generated@@64) (= (type $generated@@245) $generated@@64)) (= (type $generated@@246) ($generated@@223 $generated@@145 $generated@@145))) (or ($generated@@224 $generated@@244 $generated@@245 $generated@@246) (and (not (= 0 $generated@@221)) ($generated@@132 $generated@@246 ($generated@@225 $generated@@244 $generated@@245))))) (and (and (forall (($generated@@247 T@U) ) (!  (=> (and (and (= (type $generated@@247) $generated@@145) ($generated@@212 $generated@@247 $generated@@244)) ($generated@@0 ($generated@@81 ($generated@@222 $generated@@244 $generated@@245 $generated@@246) $generated@@247))) ($generated@@0 ($generated@@81 ($generated@@226 $generated@@246) $generated@@247)))
 :pattern ( ($generated@@81 ($generated@@226 $generated@@246) $generated@@247))
 :pattern ( ($generated@@81 ($generated@@222 $generated@@244 $generated@@245 $generated@@246) $generated@@247))
)) (forall (($generated@@248 T@U) ) (!  (=> (and (and (= (type $generated@@248) $generated@@145) ($generated@@212 $generated@@248 $generated@@244)) ($generated@@0 ($generated@@81 ($generated@@226 $generated@@246) $generated@@248))) ($generated@@0 ($generated@@81 ($generated@@222 $generated@@244 $generated@@245 $generated@@246) $generated@@248)))
 :pattern ( ($generated@@81 ($generated@@222 $generated@@244 $generated@@245 $generated@@246) $generated@@248))
 :pattern ( ($generated@@81 ($generated@@226 $generated@@246) $generated@@248))
))) ($generated@@132 ($generated@@222 $generated@@244 $generated@@245 $generated@@246) ($generated@@227 $generated@@244))))
 :pattern ( ($generated@@222 $generated@@244 $generated@@245 $generated@@246))
))))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@64)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@252) $generated@@64)) (= ($generated@@132 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@145) ($generated@@0 ($generated@@81 $generated@@251 $generated@@253))) ($generated@@212 $generated@@253 $generated@@252))
 :pattern ( ($generated@@81 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@132 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@255) $generated@@64)) (= ($generated@@132 $generated@@254 ($generated@@227 $generated@@255)) (forall (($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@145) ($generated@@0 ($generated@@81 $generated@@254 $generated@@256))) ($generated@@212 $generated@@256 $generated@@255))
 :pattern ( ($generated@@81 $generated@@254 $generated@@256))
))))
 :pattern ( ($generated@@132 $generated@@254 ($generated@@227 $generated@@255)))
)))
(assert (forall (($generated@@258 T@U) ) (! (let (($generated@@259 (type $generated@@258)))
(= (type ($generated@@257 $generated@@258)) $generated@@259))
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= ($generated@@257 $generated@@260) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@263) $generated@@64) (= (type $generated@@264) $generated@@64)) (= (type $generated@@265) $generated@@145)) (= (type $generated@@266) $generated@@145)) (= (type $generated@@267) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@261 $generated@@267)) (= ($generated@@74 ($generated@@211 $generated@@265 $generated@@266) ($generated@@135 $generated@@263 $generated@@264) $generated@@267)  (and ($generated@@262 $generated@@265 $generated@@263 $generated@@267) ($generated@@262 $generated@@266 $generated@@264 $generated@@267))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@265 $generated@@266) ($generated@@135 $generated@@263 $generated@@264) $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@68)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (= (type $generated@@270) $generated@@136) (= ($generated@@134 $generated@@270) (= ($generated@@268 $generated@@270) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@136) ($generated@@134 $generated@@271)) (exists (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (and (and (= (type $generated@@272) $generated@@145) (= (type $generated@@273) $generated@@145)) (= $generated@@271 ($generated@@211 $generated@@272 $generated@@273)))
 :no-pattern (type $generated@@272)
 :no-pattern (type $generated@@273)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
 :no-pattern ($generated $generated@@273)
 :no-pattern ($generated@@0 $generated@@273)
)))
 :pattern ( ($generated@@134 $generated@@271))
)))
(assert  (and (and (forall (($generated@@278 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@278)) 18)) (forall (($generated@@279 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
))) (forall (($generated@@280 T@T) ) (! (= (type ($generated@@274 $generated@@280)) ($generated@@276 $generated@@280))
 :pattern ( ($generated@@274 $generated@@280))
))))
(assert (forall (($generated@@281 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@281)) 0)
 :pattern ( ($generated@@274 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@145)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@64) (= (type $generated@@286) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@262 ($generated@@282 $generated@@284) $generated@@285 $generated@@286) ($generated@@74 $generated@@284 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@262 ($generated@@282 $generated@@284) $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@76 $generated@@289 $generated@@2))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@79 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@76 $generated@@291 $generated@@2)) (and (= (= ($generated@@287 $generated@@290) 0) (= $generated@@290 ($generated@@288 $generated@@291))) (=> (not (= ($generated@@287 $generated@@290) 0)) (exists (($generated@@292 T@U) ) (!  (and (= (type $generated@@292) $generated@@291) (< 0 ($generated ($generated@@81 $generated@@290 $generated@@292))))
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
))))))
 :pattern ( ($generated@@287 $generated@@290))
)))
(assert  (and (and (and (and (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@298 $generated@@299)) 19)) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@295 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@295 $generated@@302 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@295 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@296 (type $generated@@304))))
(= (type ($generated@@293 $generated@@304)) ($generated@@76 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@293 $generated@@304))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@294 $generated@@306 $generated@@307)) ($generated@@295 $generated@@306 $generated@@307))
 :pattern ( ($generated@@294 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@81 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@81 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@311 $generated@@312 $generated@@313)) ($generated@@223 $generated@@312 $generated@@313))
 :pattern ( ($generated@@311 $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@226 ($generated@@311 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@226 ($generated@@311 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@79 (type $generated@@318))))
 (=> (and (= (type $generated@@318) ($generated@@76 $generated@@320 $generated@@4)) (= (type $generated@@319) ($generated@@76 $generated@@320 $generated@@4))) (= ($generated@@317 $generated@@318 $generated@@319) (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@320) (= ($generated@@0 ($generated@@81 $generated@@318 $generated@@321)) ($generated@@0 ($generated@@81 $generated@@319 $generated@@321))))
 :pattern ( ($generated@@81 $generated@@318 $generated@@321))
 :pattern ( ($generated@@81 $generated@@319 $generated@@321))
)))))
 :pattern ( ($generated@@317 $generated@@318 $generated@@319))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@79 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@76 $generated@@323 $generated@@2)) (= ($generated@@151 $generated@@322) (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@323) (and (<= 0 ($generated ($generated@@81 $generated@@322 $generated@@324))) (<= ($generated ($generated@@81 $generated@@322 $generated@@324)) ($generated@@287 $generated@@322))))
 :pattern ( ($generated@@81 $generated@@322 $generated@@324))
)))))
 :pattern ( ($generated@@151 $generated@@322))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@297 (type $generated@@325))))
(let (($generated@@327 ($generated@@296 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@295 $generated@@327 $generated@@326)) (or (= $generated@@325 ($generated@@294 $generated@@327 $generated@@326)) (exists (($generated@@328 T@U) ) (!  (and (= (type $generated@@328) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@293 $generated@@325) $generated@@328)))
 :no-pattern (type $generated@@328)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
))))))
 :pattern ( ($generated@@293 $generated@@325))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@297 (type $generated@@330))))
(= (type ($generated@@329 $generated@@330)) ($generated@@76 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@297 (type $generated@@332))))
(let (($generated@@334 ($generated@@296 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@295 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@294 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@329 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@329 $generated@@332))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@229 (type $generated@@336))))
(let (($generated@@338 ($generated@@228 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@223 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@311 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@81 ($generated@@226 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@226 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@229 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@76 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@229 (type $generated@@343))))
(let (($generated@@345 ($generated@@228 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@223 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@311 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@81 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@348) $generated@@64)) (= ($generated@@132 $generated@@347 ($generated@@150 $generated@@348)) (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@347 $generated@@349)))) ($generated@@212 $generated@@349 $generated@@348))
 :pattern ( ($generated@@81 $generated@@347 $generated@@349))
))))
 :pattern ( ($generated@@132 $generated@@347 ($generated@@150 $generated@@348)))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (and (= (type $generated@@350) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@351) $generated@@64)) (= (type $generated@@352) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@350 ($generated@@249 $generated@@351) $generated@@352) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@145) ($generated@@0 ($generated@@81 $generated@@350 $generated@@353))) ($generated@@262 $generated@@353 $generated@@351 $generated@@352))
 :pattern ( ($generated@@81 $generated@@350 $generated@@353))
))))
 :pattern ( ($generated@@74 $generated@@350 ($generated@@249 $generated@@351) $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@355) $generated@@64)) (= (type $generated@@356) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@354 ($generated@@227 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@145) ($generated@@0 ($generated@@81 $generated@@354 $generated@@357))) ($generated@@262 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@81 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@74 $generated@@354 ($generated@@227 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 (type $generated@@358)))
(= ($generated ($generated@@81 ($generated@@288 $generated@@359) $generated@@358)) 0))
 :pattern ( (let (($generated@@359 (type $generated@@358)))
($generated@@81 ($generated@@288 $generated@@359) $generated@@358)))
)))
(assert  (and (and (forall (($generated@@363 T@U) ) (! (= (type ($generated@@360 $generated@@363)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@360 $generated@@363))
)) (forall (($generated@@364 T@T) ($generated@@365 T@U) ) (! (= (type ($generated@@361 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@361 $generated@@364 $generated@@365))
))) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@297 (type $generated@@366))))
(let (($generated@@368 ($generated@@296 (type $generated@@366))))
(= (type ($generated@@362 $generated@@366)) ($generated@@76 $generated@@368 $generated@@367))))
 :pattern ( ($generated@@362 $generated@@366))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@295 $generated@@145 $generated@@145)) (= (type $generated@@370) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@360 $generated@@369) $generated@@370))  (and ($generated@@0 ($generated@@81 ($generated@@293 $generated@@369) ($generated@@143 ($generated@@361 $generated@@136 $generated@@370)))) (= ($generated@@81 ($generated@@362 $generated@@369) ($generated@@143 ($generated@@361 $generated@@136 $generated@@370))) ($generated@@144 ($generated@@361 $generated@@136 $generated@@370))))))
 :pattern ( ($generated@@81 ($generated@@360 $generated@@369) $generated@@370))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@229 (type $generated@@374))))
(let (($generated@@376 ($generated@@228 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@76 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@223 $generated@@145 $generated@@145)) (= (type $generated@@378) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@81 ($generated@@226 $generated@@377) ($generated@@143 ($generated@@361 $generated@@136 $generated@@378)))) (= ($generated@@81 ($generated@@372 $generated@@377) ($generated@@143 ($generated@@361 $generated@@136 $generated@@378))) ($generated@@144 ($generated@@361 $generated@@136 $generated@@378))))))
 :pattern ( ($generated@@81 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@296 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@295 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@81 ($generated@@329 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@81 ($generated@@293 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@81 ($generated@@362 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@81 ($generated@@293 $generated@@379) $generated@@383))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@81 ($generated@@329 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@228 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@223 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@81 ($generated@@340 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@81 ($generated@@226 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@81 ($generated@@372 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@81 ($generated@@226 $generated@@384) $generated@@388))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@81 ($generated@@340 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@390 $generated@@391)) $generated@@64)
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (and (= (type $generated@@392) ($generated@@295 $generated@@145 $generated@@145)) (= (type $generated@@393) $generated@@64)) (= (type $generated@@394) $generated@@64)) (= (type $generated@@395) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@293 $generated@@392) $generated@@396))) (and ($generated@@262 ($generated@@81 ($generated@@362 $generated@@392) $generated@@396) $generated@@394 $generated@@395) ($generated@@262 $generated@@396 $generated@@393 $generated@@395)))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@392) $generated@@396))
 :pattern ( ($generated@@81 ($generated@@293 $generated@@392) $generated@@396))
))))
 :pattern ( ($generated@@74 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (and (= (type $generated@@397) ($generated@@223 $generated@@145 $generated@@145)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) $generated@@64)) (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@397 ($generated@@225 $generated@@398 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@226 $generated@@397) $generated@@401))) (and ($generated@@262 ($generated@@81 ($generated@@372 $generated@@397) $generated@@401) $generated@@399 $generated@@400) ($generated@@262 $generated@@401 $generated@@398 $generated@@400)))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@397) $generated@@401))
 :pattern ( ($generated@@81 ($generated@@226 $generated@@397) $generated@@401))
))))
 :pattern ( ($generated@@74 $generated@@397 ($generated@@225 $generated@@398 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@79 (type $generated@@402))))
 (=> (and (and (= (type $generated@@402) ($generated@@76 $generated@@404 $generated@@4)) (= (type $generated@@403) ($generated@@76 $generated@@404 $generated@@4))) ($generated@@317 $generated@@402 $generated@@403)) (= $generated@@402 $generated@@403)))
 :pattern ( ($generated@@317 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert  (=> (<= 0 $generated@@221) (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) $generated@@64) (= (type $generated@@409) $generated@@64)) (= (type $generated@@410) ($generated@@223 $generated@@145 $generated@@145))) (or ($generated@@224 $generated@@408 $generated@@409 $generated@@410) (and (not (= 0 $generated@@221)) ($generated@@132 $generated@@410 ($generated@@225 $generated@@408 $generated@@409))))) (= ($generated@@222 $generated@@408 $generated@@409 $generated@@410) ($generated@@405 $generated@@408 ($generated@@226 $generated@@410))))
 :pattern ( ($generated@@222 $generated@@408 $generated@@409 $generated@@410))
))))
(assert (forall (($generated@@412 T@T) ) (! (= (type ($generated@@411 $generated@@412)) ($generated@@76 $generated@@412 $generated@@4))
 :pattern ( ($generated@@411 $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@229 (type $generated@@413))))
(let (($generated@@415 ($generated@@228 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@223 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@311 $generated@@415 $generated@@414)) (= ($generated@@226 $generated@@413) ($generated@@411 $generated@@415))))))
 :pattern ( ($generated@@226 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@229 (type $generated@@416))))
(let (($generated@@418 ($generated@@228 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@223 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@311 $generated@@418 $generated@@417)) (= ($generated@@340 $generated@@416) ($generated@@411 $generated@@417))))))
 :pattern ( ($generated@@340 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@229 (type $generated@@419))))
(let (($generated@@421 ($generated@@228 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@223 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@311 $generated@@421 $generated@@420)) (= ($generated@@371 $generated@@419) ($generated@@411 $generated@@145))))))
 :pattern ( ($generated@@371 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@297 (type $generated@@422))))
(let (($generated@@424 ($generated@@296 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@295 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@294 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (and (and (= (type $generated@@425) $generated@@145) (= (type $generated@@426) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@360 $generated@@422) ($generated@@282 ($generated@@211 $generated@@425 $generated@@426)))))
 :no-pattern (type $generated@@425)
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@360 $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@229 (type $generated@@427))))
(let (($generated@@429 ($generated@@228 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@223 $generated@@429 $generated@@428)) (or (= $generated@@427 ($generated@@311 $generated@@429 $generated@@428)) (exists (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (and (and (= (type $generated@@430) $generated@@145) (= (type $generated@@431) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@371 $generated@@427) ($generated@@282 ($generated@@211 $generated@@430 $generated@@431)))))
 :no-pattern (type $generated@@430)
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@371 $generated@@427))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@145) ($generated@@212 $generated@@432 $generated@@46)) (and (= ($generated@@282 ($generated@@361 $generated@@2 $generated@@432)) $generated@@432) ($generated@@132 ($generated@@361 $generated@@2 $generated@@432) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@432 $generated@@46))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@145) ($generated@@212 $generated@@433 $generated@@47)) (and (= ($generated@@282 ($generated@@361 $generated@@3 $generated@@433)) $generated@@433) ($generated@@132 ($generated@@361 $generated@@3 $generated@@433) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@433 $generated@@47))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@145) ($generated@@212 $generated@@434 $generated@@44)) (and (= ($generated@@282 ($generated@@361 $generated@@4 $generated@@434)) $generated@@434) ($generated@@132 ($generated@@361 $generated@@4 $generated@@434) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@434 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@435) 20))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@145) ($generated@@212 $generated@@436 $generated@@45)) (and (= ($generated@@282 ($generated@@361 $generated@@435 $generated@@436)) $generated@@436) ($generated@@132 ($generated@@361 $generated@@435 $generated@@436) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@436 $generated@@45))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (= (type $generated@@438) $generated@@64) (= ($generated@@212 ($generated@@282 $generated@@437) $generated@@438) ($generated@@132 $generated@@437 $generated@@438)))
 :pattern ( ($generated@@212 ($generated@@282 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@79 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@76 $generated@@440 $generated@@2)) (<= 0 ($generated@@287 $generated@@439))))
 :pattern ( ($generated@@287 $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@277 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@276 $generated@@442)) (<= 0 ($generated@@275 $generated@@441))))
 :pattern ( ($generated@@275 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@64)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@443 ($generated@@389 $generated@@445 $generated@@446)) $generated@@445))
 :pattern ( ($generated@@389 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@389 $generated@@449 $generated@@450)) $generated@@450))
 :pattern ( ($generated@@389 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@72 ($generated@@389 $generated@@451 $generated@@452)) $generated@@58))
 :pattern ( ($generated@@389 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@225 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@225 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@225 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@225 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@72 ($generated@@225 $generated@@461 $generated@@462)) $generated@@59))
 :pattern ( ($generated@@225 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@145) (= (type $generated@@464) $generated@@145)) (= ($generated@@268 ($generated@@211 $generated@@463 $generated@@464)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@135 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@135 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@135 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@135 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@145) (= (type $generated@@474) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@211 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@145) (= (type $generated@@476) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@211 $generated@@475 $generated@@476))
)))
(assert  (and (forall (($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@479))
)) (forall (($generated@@480 T@U) ($generated@@481 Int) ) (! (let (($generated@@482 ($generated@@277 (type $generated@@480))))
(= (type ($generated@@478 $generated@@480 $generated@@481)) $generated@@482))
 :pattern ( ($generated@@478 $generated@@480 $generated@@481))
))))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (= (type $generated@@483) ($generated@@276 $generated@@145)) (= (type $generated@@484) $generated@@64)) (= (type $generated@@485) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@483 ($generated@@477 $generated@@484) $generated@@485) (forall (($generated@@486 Int) ) (!  (=> (and (<= 0 $generated@@486) (< $generated@@486 ($generated@@275 $generated@@483))) ($generated@@262 ($generated@@478 $generated@@483 $generated@@486) $generated@@484 $generated@@485))
 :pattern ( ($generated@@478 $generated@@483 $generated@@486))
))))
 :pattern ( ($generated@@74 $generated@@483 ($generated@@477 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@488 Int) ) (! (= ($generated@@487 ($generated@@75 $generated@@488)) $generated@@488)
 :pattern ( ($generated@@75 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@249 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@249 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@249 $generated@@492)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@227 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@227 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@227 $generated@@496)) $generated@@55))
 :pattern ( ($generated@@227 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@150 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@150 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@500)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@477 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@477 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@477 $generated@@504)) $generated@@57))
 :pattern ( ($generated@@477 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
(= ($generated@@361 $generated@@506 ($generated@@282 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@282 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@295 $generated@@145 $generated@@145)) (= (type $generated@@508) $generated@@64)) (= (type $generated@@509) $generated@@64)) (= ($generated@@132 $generated@@507 ($generated@@389 $generated@@508 $generated@@509)) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@293 $generated@@507) $generated@@510))) (and ($generated@@212 ($generated@@81 ($generated@@362 $generated@@507) $generated@@510) $generated@@509) ($generated@@212 $generated@@510 $generated@@508)))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@507) $generated@@510))
 :pattern ( ($generated@@81 ($generated@@293 $generated@@507) $generated@@510))
))))
 :pattern ( ($generated@@132 $generated@@507 ($generated@@389 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@223 $generated@@145 $generated@@145)) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@64)) (= ($generated@@132 $generated@@511 ($generated@@225 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@226 $generated@@511) $generated@@514))) (and ($generated@@212 ($generated@@81 ($generated@@372 $generated@@511) $generated@@514) $generated@@513) ($generated@@212 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@81 ($generated@@372 $generated@@511) $generated@@514))
 :pattern ( ($generated@@81 ($generated@@226 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@132 $generated@@511 ($generated@@225 $generated@@512 $generated@@513)))
)))
(assert  (=> (<= 0 $generated@@221) (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (and (= (type $generated@@515) $generated@@64) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) ($generated@@223 $generated@@145 $generated@@145))) (or ($generated@@224 $generated@@515 $generated@@516 ($generated@@257 $generated@@517)) (and (not (= 0 $generated@@221)) ($generated@@132 $generated@@517 ($generated@@225 $generated@@515 $generated@@516))))) (= ($generated@@222 $generated@@515 $generated@@516 ($generated@@257 $generated@@517)) ($generated@@405 $generated@@515 ($generated@@226 $generated@@517))))
 :weight 3
 :pattern ( ($generated@@222 $generated@@515 $generated@@516 ($generated@@257 $generated@@517)))
))))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@145) (= (type $generated@@521) $generated@@145)) (< ($generated@@518 $generated@@520) ($generated@@519 ($generated@@211 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@211 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@145) (= (type $generated@@523) $generated@@145)) (< ($generated@@518 $generated@@523) ($generated@@519 ($generated@@211 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@211 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) $generated@@64) (= (type $generated@@525) ($generated@@76 $generated@@145 $generated@@4))) (= (type $generated@@526) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@405 $generated@@524 $generated@@525) $generated@@526))  (and ($generated@@212 $generated@@526 $generated@@524) ($generated@@0 ($generated@@81 $generated@@525 $generated@@526)))))
 :pattern ( ($generated@@81 ($generated@@405 $generated@@524 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@64)) ($generated@@212 $generated@@527 ($generated@@389 $generated@@528 $generated@@529))) (and (= ($generated@@282 ($generated@@361 ($generated@@295 $generated@@145 $generated@@145) $generated@@527)) $generated@@527) ($generated@@132 ($generated@@361 ($generated@@295 $generated@@145 $generated@@145) $generated@@527) ($generated@@389 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@212 $generated@@527 ($generated@@389 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (and (= (type $generated@@530) $generated@@145) (= (type $generated@@531) $generated@@64)) (= (type $generated@@532) $generated@@64)) ($generated@@212 $generated@@530 ($generated@@225 $generated@@531 $generated@@532))) (and (= ($generated@@282 ($generated@@361 ($generated@@223 $generated@@145 $generated@@145) $generated@@530)) $generated@@530) ($generated@@132 ($generated@@361 ($generated@@223 $generated@@145 $generated@@145) $generated@@530) ($generated@@225 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@212 $generated@@530 ($generated@@225 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@64) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) $generated@@145)) ($generated@@212 $generated@@535 ($generated@@135 $generated@@533 $generated@@534))) (and (= ($generated@@282 ($generated@@361 $generated@@136 $generated@@535)) $generated@@535) ($generated@@132 ($generated@@361 $generated@@136 $generated@@535) ($generated@@135 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@212 $generated@@535 ($generated@@135 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ) (! (let (($generated@@537 (type $generated@@536)))
 (not ($generated@@0 ($generated@@81 ($generated@@411 $generated@@537) $generated@@536))))
 :pattern ( (let (($generated@@537 (type $generated@@536)))
($generated@@81 ($generated@@411 $generated@@537) $generated@@536)))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@69)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@64) (= (type $generated@@541) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@540 $generated@@541)) $generated@@62) (= ($generated@@538 ($generated@@135 $generated@@540 $generated@@541)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@136) (= ($generated@@518 ($generated@@282 $generated@@542)) ($generated@@519 $generated@@542)))
 :pattern ( ($generated@@518 ($generated@@282 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@145) ($generated@@212 $generated@@543 ($generated@@75 0))) (and (= ($generated@@282 ($generated@@361 $generated@@2 $generated@@543)) $generated@@543) ($generated@@132 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@543) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@543 ($generated@@75 0)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@64)) ($generated@@212 $generated@@544 ($generated@@249 $generated@@545))) (and (= ($generated@@282 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@544)) $generated@@544) ($generated@@132 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@544) ($generated@@249 $generated@@545))))
 :pattern ( ($generated@@212 $generated@@544 ($generated@@249 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@145) (= (type $generated@@547) $generated@@64)) ($generated@@212 $generated@@546 ($generated@@227 $generated@@547))) (and (= ($generated@@282 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@546)) $generated@@546) ($generated@@132 ($generated@@361 ($generated@@76 $generated@@145 $generated@@4) $generated@@546) ($generated@@227 $generated@@547))))
 :pattern ( ($generated@@212 $generated@@546 ($generated@@227 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@145) (= (type $generated@@549) $generated@@64)) ($generated@@212 $generated@@548 ($generated@@150 $generated@@549))) (and (= ($generated@@282 ($generated@@361 ($generated@@76 $generated@@145 $generated@@2) $generated@@548)) $generated@@548) ($generated@@132 ($generated@@361 ($generated@@76 $generated@@145 $generated@@2) $generated@@548) ($generated@@150 $generated@@549))))
 :pattern ( ($generated@@212 $generated@@548 ($generated@@150 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@145) (= (type $generated@@551) $generated@@64)) ($generated@@212 $generated@@550 ($generated@@477 $generated@@551))) (and (= ($generated@@282 ($generated@@361 ($generated@@276 $generated@@145) $generated@@550)) $generated@@550) ($generated@@132 ($generated@@361 ($generated@@276 $generated@@145) $generated@@550) ($generated@@477 $generated@@551))))
 :pattern ( ($generated@@212 $generated@@550 ($generated@@477 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@553) $generated@@64)) (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@552 ($generated@@150 $generated@@553) $generated@@554) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@552 $generated@@555)))) ($generated@@262 $generated@@555 $generated@@553 $generated@@554))
 :pattern ( ($generated@@81 $generated@@552 $generated@@555))
))))
 :pattern ( ($generated@@74 $generated@@552 ($generated@@150 $generated@@553) $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@136) (= (type $generated@@557) $generated@@64)) (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@261 $generated@@558) (and ($generated@@134 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@64) ($generated@@74 $generated@@556 ($generated@@135 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@74 $generated@@556 ($generated@@135 $generated@@557 $generated@@559) $generated@@558))
))))) ($generated@@262 ($generated@@143 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@262 ($generated@@143 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@136) (= (type $generated@@561) $generated@@64)) (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@261 $generated@@562) (and ($generated@@134 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@64) ($generated@@74 $generated@@560 ($generated@@135 $generated@@563 $generated@@561) $generated@@562))
 :pattern ( ($generated@@74 $generated@@560 ($generated@@135 $generated@@563 $generated@@561) $generated@@562))
))))) ($generated@@262 ($generated@@144 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@262 ($generated@@144 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@145) (= (type $generated@@565) $generated@@145)) (= ($generated@@211 ($generated@@257 $generated@@564) ($generated@@257 $generated@@565)) ($generated@@257 ($generated@@211 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@211 ($generated@@257 $generated@@564) ($generated@@257 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ) (! (= ($generated@@282 ($generated@@257 $generated@@566)) ($generated@@257 ($generated@@282 $generated@@566)))
 :pattern ( ($generated@@282 ($generated@@257 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 ($generated@@277 (type $generated@@567))))
 (=> (and (= (type $generated@@567) ($generated@@276 $generated@@568)) (= ($generated@@275 $generated@@567) 0)) (= $generated@@567 ($generated@@274 $generated@@568))))
 :pattern ( ($generated@@275 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@570)))
 (=> (and (and (= (type $generated@@569) ($generated@@76 $generated@@572 $generated@@2)) (= (type $generated@@571) $generated@@2)) (<= 0 ($generated $generated@@571))) (= ($generated@@287 ($generated@@82 $generated@@569 $generated@@570 $generated@@571)) (+ (- ($generated@@287 $generated@@569) ($generated ($generated@@81 $generated@@569 $generated@@570))) ($generated $generated@@571)))))
 :pattern ( ($generated@@287 ($generated@@82 $generated@@569 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@574) $generated@@2)) ($generated@@74 $generated@@574 $generated@@46 $generated@@573))
 :pattern ( ($generated@@74 $generated@@574 $generated@@46 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@3)) ($generated@@74 $generated@@576 $generated@@47 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@47 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@4)) ($generated@@74 $generated@@578 $generated@@44 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@44 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@435)) ($generated@@74 $generated@@580 $generated@@45 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@45 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@145)) ($generated@@74 $generated@@582 $generated@@48 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@48 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@276 $generated@@145)) (= (type $generated@@584) $generated@@64)) (= ($generated@@132 $generated@@583 ($generated@@477 $generated@@584)) (forall (($generated@@585 Int) ) (!  (=> (and (<= 0 $generated@@585) (< $generated@@585 ($generated@@275 $generated@@583))) ($generated@@212 ($generated@@478 $generated@@583 $generated@@585) $generated@@584))
 :pattern ( ($generated@@478 $generated@@583 $generated@@585))
))))
 :pattern ( ($generated@@132 $generated@@583 ($generated@@477 $generated@@584)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 Int) ) (!  (=> (= (type $generated@@587) ($generated@@276 $generated@@145)) (=> (and (<= 0 $generated@@588) (< $generated@@588 ($generated@@275 $generated@@587))) (< ($generated@@519 ($generated@@361 $generated@@136 ($generated@@478 $generated@@587 $generated@@588))) ($generated@@586 $generated@@587))))
 :pattern ( ($generated@@519 ($generated@@361 $generated@@136 ($generated@@478 $generated@@587 $generated@@588))))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) ($generated@@295 $generated@@145 $generated@@145)) (= (type $generated@@590) $generated@@64)) (= (type $generated@@591) $generated@@64)) ($generated@@132 $generated@@589 ($generated@@389 $generated@@590 $generated@@591))) (and (and ($generated@@132 ($generated@@293 $generated@@589) ($generated@@249 $generated@@590)) ($generated@@132 ($generated@@329 $generated@@589) ($generated@@249 $generated@@591))) ($generated@@132 ($generated@@360 $generated@@589) ($generated@@249 ($generated@@135 $generated@@590 $generated@@591)))))
 :pattern ( ($generated@@132 $generated@@589 ($generated@@389 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) ($generated@@223 $generated@@145 $generated@@145)) (= (type $generated@@593) $generated@@64)) (= (type $generated@@594) $generated@@64)) ($generated@@132 $generated@@592 ($generated@@225 $generated@@593 $generated@@594))) (and (and ($generated@@132 ($generated@@226 $generated@@592) ($generated@@227 $generated@@593)) ($generated@@132 ($generated@@340 $generated@@592) ($generated@@227 $generated@@594))) ($generated@@132 ($generated@@371 $generated@@592) ($generated@@227 ($generated@@135 $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@132 $generated@@592 ($generated@@225 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@2) ($generated@@132 $generated@@595 $generated@@46))
 :pattern ( ($generated@@132 $generated@@595 $generated@@46))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@3) ($generated@@132 $generated@@596 $generated@@47))
 :pattern ( ($generated@@132 $generated@@596 $generated@@47))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@4) ($generated@@132 $generated@@597 $generated@@44))
 :pattern ( ($generated@@132 $generated@@597 $generated@@44))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@435) ($generated@@132 $generated@@598 $generated@@45))
 :pattern ( ($generated@@132 $generated@@598 $generated@@45))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@145) ($generated@@132 $generated@@599 $generated@@48))
 :pattern ( ($generated@@132 $generated@@599 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@600) ($generated@@223 $generated@@145 $generated@@145)) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) $generated@@64)) (= (type $generated@@603) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@604) $generated@@145)) (= (type $generated@@605) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@606) $generated@@77)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@608  (=> (and (and ($generated@@74 $generated@@600 ($generated@@225 $generated@@601 $generated@@602) $generated@@603) ($generated@@224 $generated@@601 $generated@@602 $generated@@600)) (and ($generated@@224 $generated@@601 $generated@@602 $generated@@600) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@317 ($generated@@405 $generated@@601 ($generated@@226 $generated@@600)) ($generated@@222 $generated@@601 $generated@@602 $generated@@600)))))
(let (($generated@@609  (=> (and (not ($generated@@0 ($generated@@81 ($generated@@226 $generated@@600) $generated@@604))) (= (ControlFlow 0 5) 2)) $generated@@608)))
(let (($generated@@610  (=> (and ($generated@@0 ($generated@@81 ($generated@@226 $generated@@600) $generated@@604)) (= (ControlFlow 0 4) 2)) $generated@@608)))
(let (($generated@@611  (=> (and ($generated@@212 $generated@@604 $generated@@601) ($generated@@262 $generated@@604 $generated@@601 $generated@@603)) (and (=> (= (ControlFlow 0 6) 4) $generated@@610) (=> (= (ControlFlow 0 6) 5) $generated@@609)))))
(let (($generated@@612  (=> (and (not (and ($generated@@212 $generated@@604 $generated@@601) ($generated@@262 $generated@@604 $generated@@601 $generated@@603))) (= (ControlFlow 0 3) 2)) $generated@@608)))
(let (($generated@@613  (=> (= $generated@@605 ($generated@@156 $generated@@606 $generated@@603 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 6) $generated@@611) (=> (= (ControlFlow 0 7) 3) $generated@@612)))))
(let (($generated@@614  (=> (and ($generated@@261 $generated@@603) ($generated@@607 $generated@@603)) (=> (and (and ($generated@@132 $generated@@600 ($generated@@225 $generated@@601 $generated@@602)) ($generated@@74 $generated@@600 ($generated@@225 $generated@@601 $generated@@602) $generated@@603)) (and (= 1 $generated@@221) (= (ControlFlow 0 8) 7))) $generated@@613))))
$generated@@614))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
