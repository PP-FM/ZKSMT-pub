(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@168 (T@T T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@225 (T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U) Bool)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@328 (T@T T@U) T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@378 (T@U) T@U)
(declare-fun $generated@@395 (T@U T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@414 (T@T) T@U)
(declare-fun $generated@@438 () T@T)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@482 (T@U Int) T@U)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@584 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and (= (type $generated@@136) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@137) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@135 $generated@@136 $generated@@137)) (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@80) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@136 $generated@@138) $generated@@60))) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60)))
 :pattern ( ($generated@@86 ($generated@@84 $generated@@137 $generated@@138) $generated@@60))
)))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137))
)))
(assert  (and (= (type $generated@@139) $generated@@67) (= (type $generated@@140) $generated@@80)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@80) (= (type $generated@@142) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@141 $generated@@139 $generated@@142)  (or (= $generated@@141 $generated@@140) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@142 $generated@@141) $generated@@60)))))
 :pattern ( ($generated@@77 $generated@@141 $generated@@139 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@143 $generated@@144 ($generated@@78 0)))
 :pattern ( ($generated@@143 $generated@@144 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@147) 14) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@148 $generated@@149)) $generated@@67)
 :pattern ( ($generated@@146 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (and (= (type $generated@@150) $generated@@67) (= (type $generated@@151) $generated@@67)) (= (type $generated@@152) $generated@@147)) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151))) ($generated@@145 $generated@@152))
 :pattern ( ($generated@@145 $generated@@152) ($generated@@143 $generated@@152 ($generated@@146 $generated@@150 $generated@@151)))
)))
(assert  (and (and (= ($generated@@1 $generated@@156) 15) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@154 $generated@@157))
))) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@156)
 :pattern ( ($generated@@155 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@147) (= (type $generated@@160) $generated@@147)) true) (= ($generated@@153 $generated@@159 $generated@@160)  (and (= ($generated@@154 $generated@@159) ($generated@@154 $generated@@160)) (= ($generated@@155 $generated@@159) ($generated@@155 $generated@@160)))))
 :pattern ( ($generated@@153 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@165) $generated@@67)) ($generated@@143 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@143 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (= ($generated@@1 ($generated@@168 $generated@@172 $generated@@173)) 16)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@169 ($generated@@168 $generated@@174 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@170 ($generated@@168 $generated@@176 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@168 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@170 (type $generated@@178))))
(= (type ($generated@@166 $generated@@178 $generated@@179 $generated@@180)) $generated@@181))
 :pattern ( ($generated@@166 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
(let (($generated@@187 (type $generated@@183)))
(= (type ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185)) ($generated@@168 $generated@@187 $generated@@186))))
 :pattern ( ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@170 (type $generated@@188))))
 (=> (= (type $generated@@191) $generated@@192) (= ($generated@@166 ($generated@@171 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@189 $generated@@190) $generated@@191)))
 :weight 0
))) (and (and (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@166 ($generated@@171 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@166 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
)) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@166 ($generated@@171 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@166 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or true (= ($generated@@166 ($generated@@171 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@166 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ) (! (= (type ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@168 $generated@@80 $generated@@4))
 :pattern ( ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@70 (type $generated@@220))))
 (=> (and (and (and (and (= (type $generated@@215) $generated@@80) (= (type $generated@@216) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@217) ($generated@@69 $generated@@4))) (= (type $generated@@219) $generated@@80)) (= (type $generated@@220) ($generated@@69 $generated@@221))) (= ($generated@@0 ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))  (=> (and (not (= $generated@@219 $generated@@215)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@216 $generated@@219) $generated@@217))) $generated@@218))))
 :pattern ( ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))
)))
(assert (= (type $generated@@222) $generated@@67))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@80) (= (type $generated@@224) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@223 $generated@@222 $generated@@224) ($generated@@77 $generated@@223 $generated@@139 $generated@@224)))
 :pattern ( ($generated@@77 $generated@@223 $generated@@222 $generated@@224))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= (type ($generated@@225 $generated@@227 $generated@@228)) $generated@@147)
 :pattern ( ($generated@@225 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (and (and (= (type $generated@@229) $generated@@67) (= (type $generated@@230) $generated@@67)) (= (type $generated@@231) $generated@@156)) (= (type $generated@@232) $generated@@156)) (= ($generated@@143 ($generated@@225 $generated@@231 $generated@@232) ($generated@@146 $generated@@229 $generated@@230))  (and ($generated@@226 $generated@@231 $generated@@229) ($generated@@226 $generated@@232 $generated@@230))))
 :pattern ( ($generated@@143 ($generated@@225 $generated@@231 $generated@@232) ($generated@@146 $generated@@229 $generated@@230)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@147) (= (type $generated@@234) $generated@@147)) (= ($generated@@153 $generated@@233 $generated@@234) (= $generated@@233 $generated@@234)))
 :pattern ( ($generated@@153 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@67)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@238) $generated@@67)) (= ($generated@@143 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@156) ($generated@@0 ($generated@@84 $generated@@237 $generated@@239))) ($generated@@226 $generated@@239 $generated@@238))
 :pattern ( ($generated@@84 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@143 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 T@U) ) (! (= (type ($generated@@240 $generated@@241)) $generated@@67)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@243) $generated@@67)) (= ($generated@@143 $generated@@242 ($generated@@240 $generated@@243)) (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@156) ($generated@@0 ($generated@@84 $generated@@242 $generated@@244))) ($generated@@226 $generated@@244 $generated@@243))
 :pattern ( ($generated@@84 $generated@@242 $generated@@244))
))))
 :pattern ( ($generated@@143 $generated@@242 ($generated@@240 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@67) (= (type $generated@@252) $generated@@67)) (= (type $generated@@253) $generated@@156)) (= (type $generated@@254) $generated@@156)) (= (type $generated@@255) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@249 $generated@@255)) (= ($generated@@77 ($generated@@225 $generated@@253 $generated@@254) ($generated@@146 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@77 ($generated@@225 $generated@@253 $generated@@254) ($generated@@146 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@71)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@147) (= ($generated@@145 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@63)))
 :pattern ( ($generated@@145 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@147) ($generated@@145 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@156) (= (type $generated@@261) $generated@@156)) (= $generated@@259 ($generated@@225 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@145 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@156)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@67) (= (type $generated@@274) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274) ($generated@@77 $generated@@272 $generated@@273 $generated@@274)))
 :pattern ( ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@276) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@277) $generated@@156)) (= (type $generated@@278) $generated@@67)) ($generated@@135 $generated@@275 $generated@@276)) ($generated@@250 $generated@@277 $generated@@278 $generated@@275)) ($generated@@250 $generated@@277 $generated@@278 $generated@@276))
 :pattern ( ($generated@@135 $generated@@275 $generated@@276) ($generated@@250 $generated@@277 $generated@@278 $generated@@275))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@279) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@280) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@282) $generated@@67)) ($generated@@135 $generated@@279 $generated@@280)) ($generated@@77 $generated@@281 $generated@@282 $generated@@279)) ($generated@@77 $generated@@281 $generated@@282 $generated@@280))
 :pattern ( ($generated@@135 $generated@@279 $generated@@280) ($generated@@77 $generated@@281 $generated@@282 $generated@@279))
)))
(assert (forall (($generated@@285 T@T) ) (! (= (type ($generated@@284 $generated@@285)) ($generated@@79 $generated@@285 $generated@@2))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@82 (type $generated@@286))))
 (=> (= (type $generated@@286) ($generated@@79 $generated@@287 $generated@@2)) (and (= (= ($generated@@283 $generated@@286) 0) (= $generated@@286 ($generated@@284 $generated@@287))) (=> (not (= ($generated@@283 $generated@@286) 0)) (exists (($generated@@288 T@U) ) (!  (and (= (type $generated@@288) $generated@@287) (< 0 ($generated ($generated@@84 $generated@@286 $generated@@288))))
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
))))))
 :pattern ( ($generated@@283 $generated@@286))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 18)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@79 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@84 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@84 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 19)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@79 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@84 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@84 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@82 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@79 $generated@@326 $generated@@2)) (= ($generated@@162 $generated@@325) (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@326) (and (<= 0 ($generated ($generated@@84 $generated@@325 $generated@@327))) (<= ($generated ($generated@@84 $generated@@325 $generated@@327)) ($generated@@283 $generated@@325))))
 :pattern ( ($generated@@84 $generated@@325 $generated@@327))
)))))
 :pattern ( ($generated@@162 $generated@@325))
)))
(assert (forall (($generated@@329 T@T) ($generated@@330 T@U) ) (! (= (type ($generated@@328 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@328 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@156) ($generated@@226 $generated@@331 $generated@@139)) (and (= ($generated@@270 ($generated@@328 $generated@@80 $generated@@331)) $generated@@331) ($generated@@143 ($generated@@328 $generated@@80 $generated@@331) $generated@@139)))
 :pattern ( ($generated@@226 $generated@@331 $generated@@139))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@156) ($generated@@226 $generated@@332 $generated@@222)) (and (= ($generated@@270 ($generated@@328 $generated@@80 $generated@@332)) $generated@@332) ($generated@@143 ($generated@@328 $generated@@80 $generated@@332) $generated@@222)))
 :pattern ( ($generated@@226 $generated@@332 $generated@@222))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@80) (= ($generated@@143 $generated@@333 $generated@@222)  (and ($generated@@143 $generated@@333 $generated@@139) (not (= $generated@@333 $generated@@140)))))
 :pattern ( ($generated@@143 $generated@@333 $generated@@222))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@293 (type $generated@@334))))
(let (($generated@@336 ($generated@@292 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@291 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@290 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@336) ($generated@@0 ($generated@@84 ($generated@@289 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@289 $generated@@334))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@293 (type $generated@@339))))
(= (type ($generated@@338 $generated@@339)) ($generated@@79 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@293 (type $generated@@341))))
(let (($generated@@343 ($generated@@292 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@291 $generated@@343 $generated@@342)) (or (= $generated@@341 ($generated@@290 $generated@@343 $generated@@342)) (exists (($generated@@344 T@U) ) (!  (and (= (type $generated@@344) $generated@@342) ($generated@@0 ($generated@@84 ($generated@@338 $generated@@341) $generated@@344)))
 :no-pattern (type $generated@@344)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
))))))
 :pattern ( ($generated@@338 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@311 (type $generated@@345))))
(let (($generated@@347 ($generated@@310 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@309 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@308 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@307 $generated@@345))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@311 (type $generated@@350))))
(= (type ($generated@@349 $generated@@350)) ($generated@@79 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@311 (type $generated@@352))))
(let (($generated@@354 ($generated@@310 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@309 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@308 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@353) ($generated@@0 ($generated@@84 ($generated@@349 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@349 $generated@@352))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@356) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@357) $generated@@67)) (= ($generated@@143 $generated@@356 ($generated@@161 $generated@@357)) (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@356 $generated@@358)))) ($generated@@226 $generated@@358 $generated@@357))
 :pattern ( ($generated@@84 $generated@@356 $generated@@358))
))))
 :pattern ( ($generated@@143 $generated@@356 ($generated@@161 $generated@@357)))
)))
(assert (forall (($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> (and (and (= (type $generated@@359) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@360) $generated@@67)) (= (type $generated@@361) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@359 ($generated@@235 $generated@@360) $generated@@361) (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@156) ($generated@@0 ($generated@@84 $generated@@359 $generated@@362))) ($generated@@250 $generated@@362 $generated@@360 $generated@@361))
 :pattern ( ($generated@@84 $generated@@359 $generated@@362))
))))
 :pattern ( ($generated@@77 $generated@@359 ($generated@@235 $generated@@360) $generated@@361))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (and (= (type $generated@@363) ($generated@@79 $generated@@156 $generated@@4)) (= (type $generated@@364) $generated@@67)) (= (type $generated@@365) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@363 ($generated@@240 $generated@@364) $generated@@365) (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@156) ($generated@@0 ($generated@@84 $generated@@363 $generated@@366))) ($generated@@250 $generated@@366 $generated@@364 $generated@@365))
 :pattern ( ($generated@@84 $generated@@363 $generated@@366))
))))
 :pattern ( ($generated@@77 $generated@@363 ($generated@@240 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 (type $generated@@367)))
(= ($generated ($generated@@84 ($generated@@284 $generated@@368) $generated@@367)) 0))
 :pattern ( (let (($generated@@368 (type $generated@@367)))
($generated@@84 ($generated@@284 $generated@@368) $generated@@367)))
)))
(assert  (and (forall (($generated@@371 T@U) ) (! (= (type ($generated@@369 $generated@@371)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@369 $generated@@371))
)) (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@293 (type $generated@@372))))
(let (($generated@@374 ($generated@@292 (type $generated@@372))))
(= (type ($generated@@370 $generated@@372)) ($generated@@79 $generated@@374 $generated@@373))))
 :pattern ( ($generated@@370 $generated@@372))
))))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@291 $generated@@156 $generated@@156)) (= (type $generated@@376) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@369 $generated@@375) $generated@@376))  (and ($generated@@0 ($generated@@84 ($generated@@289 $generated@@375) ($generated@@154 ($generated@@328 $generated@@147 $generated@@376)))) (= ($generated@@84 ($generated@@370 $generated@@375) ($generated@@154 ($generated@@328 $generated@@147 $generated@@376))) ($generated@@155 ($generated@@328 $generated@@147 $generated@@376))))))
 :pattern ( ($generated@@84 ($generated@@369 $generated@@375) $generated@@376))
)))
(assert  (and (forall (($generated@@379 T@U) ) (! (= (type ($generated@@377 $generated@@379)) ($generated@@79 $generated@@156 $generated@@4))
 :pattern ( ($generated@@377 $generated@@379))
)) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@311 (type $generated@@380))))
(let (($generated@@382 ($generated@@310 (type $generated@@380))))
(= (type ($generated@@378 $generated@@380)) ($generated@@79 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@378 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@309 $generated@@156 $generated@@156)) (= (type $generated@@384) $generated@@156)) (= ($generated@@0 ($generated@@84 ($generated@@377 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@84 ($generated@@307 $generated@@383) ($generated@@154 ($generated@@328 $generated@@147 $generated@@384)))) (= ($generated@@84 ($generated@@378 $generated@@383) ($generated@@154 ($generated@@328 $generated@@147 $generated@@384))) ($generated@@155 ($generated@@328 $generated@@147 $generated@@384))))))
 :pattern ( ($generated@@84 ($generated@@377 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(let (($generated@@388 ($generated@@292 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@291 $generated@@388 $generated@@387)) (= ($generated@@0 ($generated@@84 ($generated@@338 $generated@@385) $generated@@386)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@388) (and ($generated@@0 ($generated@@84 ($generated@@289 $generated@@385) $generated@@389)) (= $generated@@386 ($generated@@84 ($generated@@370 $generated@@385) $generated@@389))))
 :pattern ( ($generated@@84 ($generated@@289 $generated@@385) $generated@@389))
 :pattern ( ($generated@@84 ($generated@@370 $generated@@385) $generated@@389))
))))))
 :pattern ( ($generated@@84 ($generated@@338 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (let (($generated@@392 (type $generated@@391)))
(let (($generated@@393 ($generated@@310 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@309 $generated@@393 $generated@@392)) (= ($generated@@0 ($generated@@84 ($generated@@349 $generated@@390) $generated@@391)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) (and ($generated@@0 ($generated@@84 ($generated@@307 $generated@@390) $generated@@394)) (= $generated@@391 ($generated@@84 ($generated@@378 $generated@@390) $generated@@394))))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@390) $generated@@394))
 :pattern ( ($generated@@84 ($generated@@378 $generated@@390) $generated@@394))
))))))
 :pattern ( ($generated@@84 ($generated@@349 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@396 $generated@@397)) $generated@@67)
 :pattern ( ($generated@@395 $generated@@396 $generated@@397))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@398) ($generated@@291 $generated@@156 $generated@@156)) (= (type $generated@@399) $generated@@67)) (= (type $generated@@400) $generated@@67)) (= (type $generated@@401) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401) (forall (($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@402) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@289 $generated@@398) $generated@@402))) (and ($generated@@250 ($generated@@84 ($generated@@370 $generated@@398) $generated@@402) $generated@@400 $generated@@401) ($generated@@250 $generated@@402 $generated@@399 $generated@@401)))
 :pattern ( ($generated@@84 ($generated@@370 $generated@@398) $generated@@402))
 :pattern ( ($generated@@84 ($generated@@289 $generated@@398) $generated@@402))
))))
 :pattern ( ($generated@@77 $generated@@398 ($generated@@395 $generated@@399 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@67)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@309 $generated@@156 $generated@@156)) (= (type $generated@@407) $generated@@67)) (= (type $generated@@408) $generated@@67)) (= (type $generated@@409) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@406) $generated@@410))) (and ($generated@@250 ($generated@@84 ($generated@@378 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@250 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@84 ($generated@@378 $generated@@406) $generated@@410))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@77 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@411) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@412) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@413) ($generated@@79 $generated@@80 $generated@@81))) (not (= $generated@@411 $generated@@413))) (and ($generated@@135 $generated@@411 $generated@@412) ($generated@@135 $generated@@412 $generated@@413))) ($generated@@135 $generated@@411 $generated@@413))
 :pattern ( ($generated@@135 $generated@@411 $generated@@412) ($generated@@135 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@415 T@T) ) (! (= (type ($generated@@414 $generated@@415)) ($generated@@79 $generated@@415 $generated@@4))
 :pattern ( ($generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@311 (type $generated@@416))))
(let (($generated@@418 ($generated@@310 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@309 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@308 $generated@@418 $generated@@417)) (= ($generated@@307 $generated@@416) ($generated@@414 $generated@@418))))))
 :pattern ( ($generated@@307 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@311 (type $generated@@419))))
(let (($generated@@421 ($generated@@310 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@309 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@308 $generated@@421 $generated@@420)) (= ($generated@@349 $generated@@419) ($generated@@414 $generated@@420))))))
 :pattern ( ($generated@@349 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@311 (type $generated@@422))))
(let (($generated@@424 ($generated@@310 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@309 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@308 $generated@@424 $generated@@423)) (= ($generated@@377 $generated@@422) ($generated@@414 $generated@@156))))))
 :pattern ( ($generated@@377 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@293 (type $generated@@425))))
(let (($generated@@427 ($generated@@292 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@291 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@290 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@156) (= (type $generated@@429) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@369 $generated@@425) ($generated@@270 ($generated@@225 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@369 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@311 (type $generated@@430))))
(let (($generated@@432 ($generated@@310 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@309 $generated@@432 $generated@@431)) (or (= $generated@@430 ($generated@@308 $generated@@432 $generated@@431)) (exists (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (and (and (= (type $generated@@433) $generated@@156) (= (type $generated@@434) $generated@@156)) ($generated@@0 ($generated@@84 ($generated@@377 $generated@@430) ($generated@@270 ($generated@@225 $generated@@433 $generated@@434)))))
 :no-pattern (type $generated@@433)
 :no-pattern (type $generated@@434)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
 :no-pattern ($generated $generated@@434)
 :no-pattern ($generated@@0 $generated@@434)
))))))
 :pattern ( ($generated@@377 $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@156) ($generated@@226 $generated@@435 $generated@@46)) (and (= ($generated@@270 ($generated@@328 $generated@@2 $generated@@435)) $generated@@435) ($generated@@143 ($generated@@328 $generated@@2 $generated@@435) $generated@@46)))
 :pattern ( ($generated@@226 $generated@@435 $generated@@46))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@156) ($generated@@226 $generated@@436 $generated@@47)) (and (= ($generated@@270 ($generated@@328 $generated@@3 $generated@@436)) $generated@@436) ($generated@@143 ($generated@@328 $generated@@3 $generated@@436) $generated@@47)))
 :pattern ( ($generated@@226 $generated@@436 $generated@@47))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@156) ($generated@@226 $generated@@437 $generated@@44)) (and (= ($generated@@270 ($generated@@328 $generated@@4 $generated@@437)) $generated@@437) ($generated@@143 ($generated@@328 $generated@@4 $generated@@437) $generated@@44)))
 :pattern ( ($generated@@226 $generated@@437 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@438) 20))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@156) ($generated@@226 $generated@@439 $generated@@45)) (and (= ($generated@@270 ($generated@@328 $generated@@438 $generated@@439)) $generated@@439) ($generated@@143 ($generated@@328 $generated@@438 $generated@@439) $generated@@45)))
 :pattern ( ($generated@@226 $generated@@439 $generated@@45))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (= (type $generated@@441) $generated@@67) (= ($generated@@226 ($generated@@270 $generated@@440) $generated@@441) ($generated@@143 $generated@@440 $generated@@441)))
 :pattern ( ($generated@@226 ($generated@@270 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@82 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@79 $generated@@443 $generated@@2)) (<= 0 ($generated@@283 $generated@@442))))
 :pattern ( ($generated@@283 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@265 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@264 $generated@@445)) (<= 0 ($generated@@263 $generated@@444))))
 :pattern ( ($generated@@263 $generated@@444))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@67)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@67) (= (type $generated@@449) $generated@@67)) (= ($generated@@446 ($generated@@395 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@395 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@67)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@67) (= (type $generated@@453) $generated@@67)) (= ($generated@@450 ($generated@@395 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@395 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@67) (= (type $generated@@455) $generated@@67)) (= ($generated@@75 ($generated@@395 $generated@@454 $generated@@455)) $generated@@58))
 :pattern ( ($generated@@395 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@67)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@67) (= (type $generated@@459) $generated@@67)) (= ($generated@@456 ($generated@@403 $generated@@458 $generated@@459)) $generated@@458))
 :pattern ( ($generated@@403 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@67)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@67) (= (type $generated@@463) $generated@@67)) (= ($generated@@460 ($generated@@403 $generated@@462 $generated@@463)) $generated@@463))
 :pattern ( ($generated@@403 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@67) (= (type $generated@@465) $generated@@67)) (= ($generated@@75 ($generated@@403 $generated@@464 $generated@@465)) $generated@@59))
 :pattern ( ($generated@@403 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@156) (= (type $generated@@467) $generated@@156)) (= ($generated@@256 ($generated@@225 $generated@@466 $generated@@467)) $generated@@63))
 :pattern ( ($generated@@225 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@67)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@67) (= (type $generated@@471) $generated@@67)) (= ($generated@@468 ($generated@@146 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@146 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@67)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@67) (= (type $generated@@475) $generated@@67)) (= ($generated@@472 ($generated@@146 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@146 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@156) (= (type $generated@@477) $generated@@156)) (= ($generated@@154 ($generated@@225 $generated@@476 $generated@@477)) $generated@@476))
 :pattern ( ($generated@@225 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@156) (= (type $generated@@479) $generated@@156)) (= ($generated@@155 ($generated@@225 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@225 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@80) ($generated@@143 $generated@@480 $generated@@139))
 :pattern ( ($generated@@143 $generated@@480 $generated@@139))
)))
(assert  (and (forall (($generated@@483 T@U) ) (! (= (type ($generated@@481 $generated@@483)) $generated@@67)
 :pattern ( ($generated@@481 $generated@@483))
)) (forall (($generated@@484 T@U) ($generated@@485 Int) ) (! (let (($generated@@486 ($generated@@265 (type $generated@@484))))
(= (type ($generated@@482 $generated@@484 $generated@@485)) $generated@@486))
 :pattern ( ($generated@@482 $generated@@484 $generated@@485))
))))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@264 $generated@@156)) (= (type $generated@@488) $generated@@67)) (= (type $generated@@489) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@487 ($generated@@481 $generated@@488) $generated@@489) (forall (($generated@@490 Int) ) (!  (=> (and (<= 0 $generated@@490) (< $generated@@490 ($generated@@263 $generated@@487))) ($generated@@250 ($generated@@482 $generated@@487 $generated@@490) $generated@@488 $generated@@489))
 :pattern ( ($generated@@482 $generated@@487 $generated@@490))
))))
 :pattern ( ($generated@@77 $generated@@487 ($generated@@481 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 Int) ) (! (= ($generated@@491 ($generated@@78 $generated@@492)) $generated@@492)
 :pattern ( ($generated@@78 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@67)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@67) (= ($generated@@493 ($generated@@235 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@235 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@75 ($generated@@235 $generated@@496)) $generated@@54))
 :pattern ( ($generated@@235 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@67) (= ($generated@@497 ($generated@@240 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@240 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@67) (= ($generated@@75 ($generated@@240 $generated@@500)) $generated@@55))
 :pattern ( ($generated@@240 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@67) (= ($generated@@501 ($generated@@161 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@161 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@75 ($generated@@161 $generated@@504)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@67)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@67) (= ($generated@@505 ($generated@@481 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@481 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@67) (= ($generated@@75 ($generated@@481 $generated@@508)) $generated@@57))
 :pattern ( ($generated@@481 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
(= ($generated@@328 $generated@@510 ($generated@@270 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@270 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@291 $generated@@156 $generated@@156)) (= (type $generated@@512) $generated@@67)) (= (type $generated@@513) $generated@@67)) (= ($generated@@143 $generated@@511 ($generated@@395 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@289 $generated@@511) $generated@@514))) (and ($generated@@226 ($generated@@84 ($generated@@370 $generated@@511) $generated@@514) $generated@@513) ($generated@@226 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@84 ($generated@@370 $generated@@511) $generated@@514))
 :pattern ( ($generated@@84 ($generated@@289 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@143 $generated@@511 ($generated@@395 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@309 $generated@@156 $generated@@156)) (= (type $generated@@516) $generated@@67)) (= (type $generated@@517) $generated@@67)) (= ($generated@@143 $generated@@515 ($generated@@403 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@156) ($generated@@0 ($generated@@84 ($generated@@307 $generated@@515) $generated@@518))) (and ($generated@@226 ($generated@@84 ($generated@@378 $generated@@515) $generated@@518) $generated@@517) ($generated@@226 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@84 ($generated@@378 $generated@@515) $generated@@518))
 :pattern ( ($generated@@84 ($generated@@307 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@143 $generated@@515 ($generated@@403 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@156) (= (type $generated@@522) $generated@@156)) (< ($generated@@519 $generated@@521) ($generated@@520 ($generated@@225 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@225 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@156) (= (type $generated@@524) $generated@@156)) (< ($generated@@519 $generated@@524) ($generated@@520 ($generated@@225 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@225 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@156) (= (type $generated@@526) $generated@@67)) (= (type $generated@@527) $generated@@67)) ($generated@@226 $generated@@525 ($generated@@395 $generated@@526 $generated@@527))) (and (= ($generated@@270 ($generated@@328 ($generated@@291 $generated@@156 $generated@@156) $generated@@525)) $generated@@525) ($generated@@143 ($generated@@328 ($generated@@291 $generated@@156 $generated@@156) $generated@@525) ($generated@@395 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@226 $generated@@525 ($generated@@395 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@156) (= (type $generated@@529) $generated@@67)) (= (type $generated@@530) $generated@@67)) ($generated@@226 $generated@@528 ($generated@@403 $generated@@529 $generated@@530))) (and (= ($generated@@270 ($generated@@328 ($generated@@309 $generated@@156 $generated@@156) $generated@@528)) $generated@@528) ($generated@@143 ($generated@@328 ($generated@@309 $generated@@156 $generated@@156) $generated@@528) ($generated@@403 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@226 $generated@@528 ($generated@@403 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@67) (= (type $generated@@532) $generated@@67)) (= (type $generated@@533) $generated@@156)) ($generated@@226 $generated@@533 ($generated@@146 $generated@@531 $generated@@532))) (and (= ($generated@@270 ($generated@@328 $generated@@147 $generated@@533)) $generated@@533) ($generated@@143 ($generated@@328 $generated@@147 $generated@@533) ($generated@@146 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@226 $generated@@533 ($generated@@146 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
 (not ($generated@@0 ($generated@@84 ($generated@@414 $generated@@535) $generated@@534))))
 :pattern ( (let (($generated@@535 (type $generated@@534)))
($generated@@84 ($generated@@414 $generated@@535) $generated@@534)))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@72)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@67) (= (type $generated@@539) $generated@@67)) (and (= ($generated@@75 ($generated@@146 $generated@@538 $generated@@539)) $generated@@64) (= ($generated@@536 ($generated@@146 $generated@@538 $generated@@539)) $generated@@66)))
 :pattern ( ($generated@@146 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@147) (= ($generated@@519 ($generated@@270 $generated@@540)) ($generated@@520 $generated@@540)))
 :pattern ( ($generated@@519 ($generated@@270 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@156) ($generated@@226 $generated@@541 ($generated@@78 0))) (and (= ($generated@@270 ($generated@@328 $generated@@2 $generated@@541)) $generated@@541) ($generated@@143 ($generated@@328 ($generated@@79 $generated@@156 $generated@@4) $generated@@541) ($generated@@78 0))))
 :pattern ( ($generated@@226 $generated@@541 ($generated@@78 0)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@156) (= (type $generated@@543) $generated@@67)) ($generated@@226 $generated@@542 ($generated@@235 $generated@@543))) (and (= ($generated@@270 ($generated@@328 ($generated@@79 $generated@@156 $generated@@4) $generated@@542)) $generated@@542) ($generated@@143 ($generated@@328 ($generated@@79 $generated@@156 $generated@@4) $generated@@542) ($generated@@235 $generated@@543))))
 :pattern ( ($generated@@226 $generated@@542 ($generated@@235 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@156) (= (type $generated@@545) $generated@@67)) ($generated@@226 $generated@@544 ($generated@@240 $generated@@545))) (and (= ($generated@@270 ($generated@@328 ($generated@@79 $generated@@156 $generated@@4) $generated@@544)) $generated@@544) ($generated@@143 ($generated@@328 ($generated@@79 $generated@@156 $generated@@4) $generated@@544) ($generated@@240 $generated@@545))))
 :pattern ( ($generated@@226 $generated@@544 ($generated@@240 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@156) (= (type $generated@@547) $generated@@67)) ($generated@@226 $generated@@546 ($generated@@161 $generated@@547))) (and (= ($generated@@270 ($generated@@328 ($generated@@79 $generated@@156 $generated@@2) $generated@@546)) $generated@@546) ($generated@@143 ($generated@@328 ($generated@@79 $generated@@156 $generated@@2) $generated@@546) ($generated@@161 $generated@@547))))
 :pattern ( ($generated@@226 $generated@@546 ($generated@@161 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@156) (= (type $generated@@549) $generated@@67)) ($generated@@226 $generated@@548 ($generated@@481 $generated@@549))) (and (= ($generated@@270 ($generated@@328 ($generated@@264 $generated@@156) $generated@@548)) $generated@@548) ($generated@@143 ($generated@@328 ($generated@@264 $generated@@156) $generated@@548) ($generated@@481 $generated@@549))))
 :pattern ( ($generated@@226 $generated@@548 ($generated@@481 $generated@@549)))
)))
(assert (= ($generated@@75 $generated@@139) $generated@@61))
(assert (= ($generated@@536 $generated@@139) $generated@@65))
(assert (= ($generated@@75 $generated@@222) $generated@@62))
(assert (= ($generated@@536 $generated@@222) $generated@@65))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@79 $generated@@156 $generated@@2)) (= (type $generated@@551) $generated@@67)) (= (type $generated@@552) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@550 ($generated@@161 $generated@@551) $generated@@552) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@156) (< 0 ($generated ($generated@@84 $generated@@550 $generated@@553)))) ($generated@@250 $generated@@553 $generated@@551 $generated@@552))
 :pattern ( ($generated@@84 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@77 $generated@@550 ($generated@@161 $generated@@551) $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@147) (= (type $generated@@555) $generated@@67)) (= (type $generated@@556) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@249 $generated@@556) (and ($generated@@145 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@67) ($generated@@77 $generated@@554 ($generated@@146 $generated@@555 $generated@@557) $generated@@556))
 :pattern ( ($generated@@77 $generated@@554 ($generated@@146 $generated@@555 $generated@@557) $generated@@556))
))))) ($generated@@250 ($generated@@154 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@250 ($generated@@154 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@147) (= (type $generated@@559) $generated@@67)) (= (type $generated@@560) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@249 $generated@@560) (and ($generated@@145 $generated@@558) (exists (($generated@@561 T@U) ) (!  (and (= (type $generated@@561) $generated@@67) ($generated@@77 $generated@@558 ($generated@@146 $generated@@561 $generated@@559) $generated@@560))
 :pattern ( ($generated@@77 $generated@@558 ($generated@@146 $generated@@561 $generated@@559) $generated@@560))
))))) ($generated@@250 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
 :pattern ( ($generated@@250 ($generated@@155 $generated@@558) $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@156) (= (type $generated@@563) $generated@@156)) (= ($generated@@225 ($generated@@245 $generated@@562) ($generated@@245 $generated@@563)) ($generated@@245 ($generated@@225 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@225 ($generated@@245 $generated@@562) ($generated@@245 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ) (! (= ($generated@@270 ($generated@@245 $generated@@564)) ($generated@@245 ($generated@@270 $generated@@564)))
 :pattern ( ($generated@@270 ($generated@@245 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@265 (type $generated@@565))))
 (=> (and (= (type $generated@@565) ($generated@@264 $generated@@566)) (= ($generated@@263 $generated@@565) 0)) (= $generated@@565 ($generated@@262 $generated@@566))))
 :pattern ( ($generated@@263 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@568)))
 (=> (and (and (= (type $generated@@567) ($generated@@79 $generated@@570 $generated@@2)) (= (type $generated@@569) $generated@@2)) (<= 0 ($generated $generated@@569))) (= ($generated@@283 ($generated@@85 $generated@@567 $generated@@568 $generated@@569)) (+ (- ($generated@@283 $generated@@567) ($generated ($generated@@84 $generated@@567 $generated@@568))) ($generated $generated@@569)))))
 :pattern ( ($generated@@283 ($generated@@85 $generated@@567 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@572) $generated@@2)) ($generated@@77 $generated@@572 $generated@@46 $generated@@571))
 :pattern ( ($generated@@77 $generated@@572 $generated@@46 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@574) $generated@@3)) ($generated@@77 $generated@@574 $generated@@47 $generated@@573))
 :pattern ( ($generated@@77 $generated@@574 $generated@@47 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@576) $generated@@4)) ($generated@@77 $generated@@576 $generated@@44 $generated@@575))
 :pattern ( ($generated@@77 $generated@@576 $generated@@44 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@578) $generated@@438)) ($generated@@77 $generated@@578 $generated@@45 $generated@@577))
 :pattern ( ($generated@@77 $generated@@578 $generated@@45 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@580) $generated@@156)) ($generated@@77 $generated@@580 $generated@@48 $generated@@579))
 :pattern ( ($generated@@77 $generated@@580 $generated@@48 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@264 $generated@@156)) (= (type $generated@@582) $generated@@67)) (= ($generated@@143 $generated@@581 ($generated@@481 $generated@@582)) (forall (($generated@@583 Int) ) (!  (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@263 $generated@@581))) ($generated@@226 ($generated@@482 $generated@@581 $generated@@583) $generated@@582))
 :pattern ( ($generated@@482 $generated@@581 $generated@@583))
))))
 :pattern ( ($generated@@143 $generated@@581 ($generated@@481 $generated@@582)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 Int) ) (!  (=> (= (type $generated@@585) ($generated@@264 $generated@@156)) (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@263 $generated@@585))) (< ($generated@@520 ($generated@@328 $generated@@147 ($generated@@482 $generated@@585 $generated@@586))) ($generated@@584 $generated@@585))))
 :pattern ( ($generated@@520 ($generated@@328 $generated@@147 ($generated@@482 $generated@@585 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@291 $generated@@156 $generated@@156)) (= (type $generated@@588) $generated@@67)) (= (type $generated@@589) $generated@@67)) ($generated@@143 $generated@@587 ($generated@@395 $generated@@588 $generated@@589))) (and (and ($generated@@143 ($generated@@289 $generated@@587) ($generated@@235 $generated@@588)) ($generated@@143 ($generated@@338 $generated@@587) ($generated@@235 $generated@@589))) ($generated@@143 ($generated@@369 $generated@@587) ($generated@@235 ($generated@@146 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@143 $generated@@587 ($generated@@395 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@309 $generated@@156 $generated@@156)) (= (type $generated@@591) $generated@@67)) (= (type $generated@@592) $generated@@67)) ($generated@@143 $generated@@590 ($generated@@403 $generated@@591 $generated@@592))) (and (and ($generated@@143 ($generated@@307 $generated@@590) ($generated@@240 $generated@@591)) ($generated@@143 ($generated@@349 $generated@@590) ($generated@@240 $generated@@592))) ($generated@@143 ($generated@@377 $generated@@590) ($generated@@240 ($generated@@146 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@143 $generated@@590 ($generated@@403 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@2) ($generated@@143 $generated@@593 $generated@@46))
 :pattern ( ($generated@@143 $generated@@593 $generated@@46))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@3) ($generated@@143 $generated@@594 $generated@@47))
 :pattern ( ($generated@@143 $generated@@594 $generated@@47))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@4) ($generated@@143 $generated@@595 $generated@@44))
 :pattern ( ($generated@@143 $generated@@595 $generated@@44))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@438) ($generated@@143 $generated@@596 $generated@@45))
 :pattern ( ($generated@@143 $generated@@596 $generated@@45))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@156) ($generated@@143 $generated@@597 $generated@@48))
 :pattern ( ($generated@@143 $generated@@597 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 (T@U) Bool)
(declare-fun $generated@@602 () Int)
(assert  (and (and (= (type $generated@@598) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@599) ($generated@@168 $generated@@80 $generated@@4))) (= (type $generated@@600) $generated@@80)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@603  (=> (and (forall (($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@80) ($generated@@143 $generated@@604 $generated@@222)) ($generated@@0 ($generated@@245 ($generated@@11 false))))
 :no-pattern (type $generated@@604)
 :no-pattern ($generated $generated@@604)
 :no-pattern ($generated@@0 $generated@@604)
)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 ($generated@@70 (type $generated@@606))))
 (=> (and (= (type $generated@@605) $generated@@80) (= (type $generated@@606) ($generated@@69 $generated@@607))) (=> (and (and (not (= $generated@@605 $generated@@140)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@598 $generated@@605) $generated@@60))) (and ($generated@@143 $generated@@605 $generated@@222) ($generated@@0 ($generated@@245 ($generated@@11 true))))) ($generated@@0 ($generated@@166 $generated@@599 $generated@@605 $generated@@606)))))
 :no-pattern (type $generated@@605)
 :no-pattern (type $generated@@606)
 :no-pattern ($generated $generated@@605)
 :no-pattern ($generated@@0 $generated@@605)
 :no-pattern ($generated $generated@@606)
 :no-pattern ($generated@@0 $generated@@606)
)))))
(let (($generated@@608  (=> (and (not (and ($generated@@143 $generated@@600 $generated@@222) ($generated@@77 $generated@@600 $generated@@222 $generated@@598))) (= (ControlFlow 0 4) 2)) $generated@@603)))
(let (($generated@@609  (=> (and (and ($generated@@143 $generated@@600 $generated@@222) ($generated@@77 $generated@@600 $generated@@222 $generated@@598)) (= (ControlFlow 0 3) 2)) $generated@@603)))
(let (($generated@@610  (=> (= $generated@@599 ($generated@@167 $generated@@140 $generated@@598 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@609) (=> (= (ControlFlow 0 5) 4) $generated@@608)))))
(let (($generated@@611  (=> (and (and ($generated@@249 $generated@@598) ($generated@@601 $generated@@598)) (and (= 2 $generated@@602) (= (ControlFlow 0 6) 5))) $generated@@610)))
$generated@@611))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
