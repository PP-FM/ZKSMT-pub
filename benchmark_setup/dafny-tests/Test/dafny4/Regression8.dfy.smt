(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@250 (T@T) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 (T@T) T@T)
(declare-fun $generated@@253 (T@T) T@T)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@270 (T@T T@T) T@U)
(declare-fun $generated@@271 (T@T T@T) T@T)
(declare-fun $generated@@272 (T@T) T@T)
(declare-fun $generated@@273 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@288 (T@T T@T) T@U)
(declare-fun $generated@@289 (T@T T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@343 () Int)
(declare-fun $generated@@344 (Int) Int)
(declare-fun $generated@@345 (Int) Bool)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@348 (T@T T@U) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@376 (T@U T@U) T@U)
(declare-fun $generated@@384 (T@U T@U) T@U)
(declare-fun $generated@@392 (T@T) T@U)
(declare-fun $generated@@416 () T@T)
(declare-fun $generated@@424 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@459 (T@U Int) T@U)
(declare-fun $generated@@468 (T@U) Int)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@496 (T@U) Int)
(declare-fun $generated@@497 (T@U) Int)
(declare-fun $generated@@511 (Int Int) T@U)
(declare-fun $generated@@512 (Int Int) Bool)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@568 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@239) $generated@@64) (= (type $generated@@240) $generated@@64)) (= (type $generated@@241) $generated@@145)) (= (type $generated@@242) $generated@@145)) (= (type $generated@@243) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@237 $generated@@243)) (= ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243)  (and ($generated@@238 $generated@@241 $generated@@239 $generated@@243) ($generated@@238 $generated@@242 $generated@@240 $generated@@243))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@241 $generated@@242) ($generated@@135 $generated@@239 $generated@@240) $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (= (type $generated@@246) $generated@@136) (= ($generated@@134 $generated@@246) (= ($generated@@244 $generated@@246) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@136) ($generated@@134 $generated@@247)) (exists (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (and (and (= (type $generated@@248) $generated@@145) (= (type $generated@@249) $generated@@145)) (= $generated@@247 ($generated@@211 $generated@@248 $generated@@249)))
 :no-pattern (type $generated@@248)
 :no-pattern (type $generated@@249)
 :no-pattern ($generated $generated@@248)
 :no-pattern ($generated@@0 $generated@@248)
 :no-pattern ($generated $generated@@249)
 :no-pattern ($generated@@0 $generated@@249)
)))
 :pattern ( ($generated@@134 $generated@@247))
)))
(assert  (and (and (forall (($generated@@254 T@T) ) (= ($generated@@1 ($generated@@252 $generated@@254)) 17)) (forall (($generated@@255 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@255)) $generated@@255)
 :pattern ( ($generated@@252 $generated@@255))
))) (forall (($generated@@256 T@T) ) (! (= (type ($generated@@250 $generated@@256)) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@250 $generated@@256))
))))
(assert (forall (($generated@@257 T@T) ) (! (= ($generated@@251 ($generated@@250 $generated@@257)) 0)
 :pattern ( ($generated@@250 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@145)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@64) (= (type $generated@@262) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262) ($generated@@74 $generated@@260 $generated@@261 $generated@@262)))
 :pattern ( ($generated@@238 ($generated@@258 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@T) ) (! (= (type ($generated@@264 $generated@@265)) ($generated@@76 $generated@@265 $generated@@2))
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 ($generated@@79 (type $generated@@266))))
 (=> (= (type $generated@@266) ($generated@@76 $generated@@267 $generated@@2)) (and (= (= ($generated@@263 $generated@@266) 0) (= $generated@@266 ($generated@@264 $generated@@267))) (=> (not (= ($generated@@263 $generated@@266) 0)) (exists (($generated@@268 T@U) ) (!  (and (= (type $generated@@268) $generated@@267) (< 0 ($generated ($generated@@81 $generated@@266 $generated@@268))))
 :no-pattern (type $generated@@268)
 :no-pattern ($generated $generated@@268)
 :no-pattern ($generated@@0 $generated@@268)
))))))
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert  (and (and (and (and (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (= ($generated@@1 ($generated@@271 $generated@@274 $generated@@275)) 18)) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@272 ($generated@@271 $generated@@276 $generated@@277)) $generated@@276)
 :pattern ( ($generated@@271 $generated@@276 $generated@@277))
))) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@273 ($generated@@271 $generated@@278 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@271 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@272 (type $generated@@280))))
(= (type ($generated@@269 $generated@@280)) ($generated@@76 $generated@@281 $generated@@4)))
 :pattern ( ($generated@@269 $generated@@280))
))) (forall (($generated@@282 T@T) ($generated@@283 T@T) ) (! (= (type ($generated@@270 $generated@@282 $generated@@283)) ($generated@@271 $generated@@282 $generated@@283))
 :pattern ( ($generated@@270 $generated@@282 $generated@@283))
))))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@T) ) (! (let (($generated@@286 (type $generated@@284)))
 (not ($generated@@0 ($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284))))
 :pattern ( (let (($generated@@286 (type $generated@@284)))
($generated@@81 ($generated@@269 ($generated@@270 $generated@@286 $generated@@285)) $generated@@284)))
)))
(assert  (and (and (and (and (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@292 $generated@@293)) 19)) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@294 $generated@@295)) $generated@@294)
 :pattern ( ($generated@@289 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@291 ($generated@@289 $generated@@296 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@289 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@290 (type $generated@@298))))
(= (type ($generated@@287 $generated@@298)) ($generated@@76 $generated@@299 $generated@@4)))
 :pattern ( ($generated@@287 $generated@@298))
))) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= (type ($generated@@288 $generated@@300 $generated@@301)) ($generated@@289 $generated@@300 $generated@@301))
 :pattern ( ($generated@@288 $generated@@300 $generated@@301))
))))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@T) ) (! (let (($generated@@304 (type $generated@@302)))
 (not ($generated@@0 ($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302))))
 :pattern ( (let (($generated@@304 (type $generated@@302)))
($generated@@81 ($generated@@287 ($generated@@288 $generated@@304 $generated@@303)) $generated@@302)))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@79 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@76 $generated@@306 $generated@@2)) (= ($generated@@151 $generated@@305) (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@306) (and (<= 0 ($generated ($generated@@81 $generated@@305 $generated@@307))) (<= ($generated ($generated@@81 $generated@@305 $generated@@307)) ($generated@@263 $generated@@305))))
 :pattern ( ($generated@@81 $generated@@305 $generated@@307))
)))))
 :pattern ( ($generated@@151 $generated@@305))
)))
(assert (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@273 (type $generated@@308))))
(let (($generated@@310 ($generated@@272 (type $generated@@308))))
 (=> (= (type $generated@@308) ($generated@@271 $generated@@310 $generated@@309)) (or (= $generated@@308 ($generated@@270 $generated@@310 $generated@@309)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@308) $generated@@311)))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@269 $generated@@308))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@273 (type $generated@@313))))
(= (type ($generated@@312 $generated@@313)) ($generated@@76 $generated@@314 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@273 (type $generated@@315))))
(let (($generated@@317 ($generated@@272 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@271 $generated@@317 $generated@@316)) (or (= $generated@@315 ($generated@@270 $generated@@317 $generated@@316)) (exists (($generated@@318 T@U) ) (!  (and (= (type $generated@@318) $generated@@316) ($generated@@0 ($generated@@81 ($generated@@312 $generated@@315) $generated@@318)))
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@291 (type $generated@@319))))
(let (($generated@@321 ($generated@@290 (type $generated@@319))))
 (=> (= (type $generated@@319) ($generated@@289 $generated@@321 $generated@@320)) (or (= $generated@@319 ($generated@@288 $generated@@321 $generated@@320)) (exists (($generated@@322 T@U) ) (!  (and (= (type $generated@@322) $generated@@321) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@319) $generated@@322)))
 :no-pattern (type $generated@@322)
 :no-pattern ($generated $generated@@322)
 :no-pattern ($generated@@0 $generated@@322)
))))))
 :pattern ( ($generated@@287 $generated@@319))
)))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@291 (type $generated@@324))))
(= (type ($generated@@323 $generated@@324)) ($generated@@76 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@291 (type $generated@@326))))
(let (($generated@@328 ($generated@@290 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@289 $generated@@328 $generated@@327)) (or (= $generated@@326 ($generated@@288 $generated@@328 $generated@@327)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@327) ($generated@@0 ($generated@@81 ($generated@@323 $generated@@326) $generated@@329)))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@323 $generated@@326))
)))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@330) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@331) $generated@@64)) (= ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)) (forall (($generated@@332 T@U) ) (!  (=> (and (= (type $generated@@332) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@330 $generated@@332)))) ($generated@@212 $generated@@332 $generated@@331))
 :pattern ( ($generated@@81 $generated@@330 $generated@@332))
))))
 :pattern ( ($generated@@132 $generated@@330 ($generated@@150 $generated@@331)))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (= (type $generated@@333) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@334) $generated@@64)) (= (type $generated@@335) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335) (forall (($generated@@336 T@U) ) (!  (=> (and (= (type $generated@@336) $generated@@145) ($generated@@0 ($generated@@81 $generated@@333 $generated@@336))) ($generated@@238 $generated@@336 $generated@@334 $generated@@335))
 :pattern ( ($generated@@81 $generated@@333 $generated@@336))
))))
 :pattern ( ($generated@@74 $generated@@333 ($generated@@221 $generated@@334) $generated@@335))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@338) $generated@@64)) (= (type $generated@@339) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@145) ($generated@@0 ($generated@@81 $generated@@337 $generated@@340))) ($generated@@238 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@81 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@74 $generated@@337 ($generated@@226 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 (type $generated@@341)))
(= ($generated ($generated@@81 ($generated@@264 $generated@@342) $generated@@341)) 0))
 :pattern ( (let (($generated@@342 (type $generated@@341)))
($generated@@81 ($generated@@264 $generated@@342) $generated@@341)))
)))
(assert  (=> (<= 0 $generated@@343) (forall (($generated@@346 Int) ) (!  (=> (or ($generated@@345 $generated@@346) (and (not (= 0 $generated@@343)) (<= ($generated@@231 0) $generated@@346))) true)
 :pattern ( ($generated@@344 $generated@@346))
))))
(assert  (and (and (forall (($generated@@350 T@U) ) (! (= (type ($generated@@347 $generated@@350)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@347 $generated@@350))
)) (forall (($generated@@351 T@T) ($generated@@352 T@U) ) (! (= (type ($generated@@348 $generated@@351 $generated@@352)) $generated@@351)
 :pattern ( ($generated@@348 $generated@@351 $generated@@352))
))) (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@273 (type $generated@@353))))
(let (($generated@@355 ($generated@@272 (type $generated@@353))))
(= (type ($generated@@349 $generated@@353)) ($generated@@76 $generated@@355 $generated@@354))))
 :pattern ( ($generated@@349 $generated@@353))
))))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@356) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@357) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@347 $generated@@356) $generated@@357))  (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@356) ($generated@@143 ($generated@@348 $generated@@136 $generated@@357)))) (= ($generated@@81 ($generated@@349 $generated@@356) ($generated@@143 ($generated@@348 $generated@@136 $generated@@357))) ($generated@@144 ($generated@@348 $generated@@136 $generated@@357))))))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@356) $generated@@357))
)))
(assert  (and (forall (($generated@@360 T@U) ) (! (= (type ($generated@@358 $generated@@360)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@358 $generated@@360))
)) (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@291 (type $generated@@361))))
(let (($generated@@363 ($generated@@290 (type $generated@@361))))
(= (type ($generated@@359 $generated@@361)) ($generated@@76 $generated@@363 $generated@@362))))
 :pattern ( ($generated@@359 $generated@@361))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@365) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@358 $generated@@364) $generated@@365))  (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@364) ($generated@@143 ($generated@@348 $generated@@136 $generated@@365)))) (= ($generated@@81 ($generated@@359 $generated@@364) ($generated@@143 ($generated@@348 $generated@@136 $generated@@365))) ($generated@@144 ($generated@@348 $generated@@136 $generated@@365))))))
 :pattern ( ($generated@@81 ($generated@@358 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (! (let (($generated@@368 (type $generated@@367)))
(let (($generated@@369 ($generated@@272 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@271 $generated@@369 $generated@@368)) (= ($generated@@0 ($generated@@81 ($generated@@312 $generated@@366) $generated@@367)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) (and ($generated@@0 ($generated@@81 ($generated@@269 $generated@@366) $generated@@370)) (= $generated@@367 ($generated@@81 ($generated@@349 $generated@@366) $generated@@370))))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@366) $generated@@370))
 :pattern ( ($generated@@81 ($generated@@349 $generated@@366) $generated@@370))
))))))
 :pattern ( ($generated@@81 ($generated@@312 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(let (($generated@@374 ($generated@@290 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@289 $generated@@374 $generated@@373)) (= ($generated@@0 ($generated@@81 ($generated@@323 $generated@@371) $generated@@372)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@374) (and ($generated@@0 ($generated@@81 ($generated@@287 $generated@@371) $generated@@375)) (= $generated@@372 ($generated@@81 ($generated@@359 $generated@@371) $generated@@375))))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@371) $generated@@375))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@371) $generated@@375))
))))))
 :pattern ( ($generated@@81 ($generated@@323 $generated@@371) $generated@@372))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (! (= (type ($generated@@376 $generated@@377 $generated@@378)) $generated@@64)
 :pattern ( ($generated@@376 $generated@@377 $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (and (= (type $generated@@379) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@380) $generated@@64)) (= (type $generated@@381) $generated@@64)) (= (type $generated@@382) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@379 ($generated@@376 $generated@@380 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@379) $generated@@383))) (and ($generated@@238 ($generated@@81 ($generated@@349 $generated@@379) $generated@@383) $generated@@381 $generated@@382) ($generated@@238 $generated@@383 $generated@@380 $generated@@382)))
 :pattern ( ($generated@@81 ($generated@@349 $generated@@379) $generated@@383))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@379) $generated@@383))
))))
 :pattern ( ($generated@@74 $generated@@379 ($generated@@376 $generated@@380 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@385 $generated@@386)) $generated@@64)
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (and (= (type $generated@@387) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@387) $generated@@391))) (and ($generated@@238 ($generated@@81 ($generated@@359 $generated@@387) $generated@@391) $generated@@389 $generated@@390) ($generated@@238 $generated@@391 $generated@@388 $generated@@390)))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@387) $generated@@391))
))))
 :pattern ( ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@393 T@T) ) (! (= (type ($generated@@392 $generated@@393)) ($generated@@76 $generated@@393 $generated@@4))
 :pattern ( ($generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ) (! (let (($generated@@395 ($generated@@291 (type $generated@@394))))
(let (($generated@@396 ($generated@@290 (type $generated@@394))))
 (=> (= (type $generated@@394) ($generated@@289 $generated@@396 $generated@@395)) (= (= $generated@@394 ($generated@@288 $generated@@396 $generated@@395)) (= ($generated@@287 $generated@@394) ($generated@@392 $generated@@396))))))
 :pattern ( ($generated@@287 $generated@@394))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@291 (type $generated@@397))))
(let (($generated@@399 ($generated@@290 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@289 $generated@@399 $generated@@398)) (= (= $generated@@397 ($generated@@288 $generated@@399 $generated@@398)) (= ($generated@@323 $generated@@397) ($generated@@392 $generated@@398))))))
 :pattern ( ($generated@@323 $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@291 (type $generated@@400))))
(let (($generated@@402 ($generated@@290 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@289 $generated@@402 $generated@@401)) (= (= $generated@@400 ($generated@@288 $generated@@402 $generated@@401)) (= ($generated@@358 $generated@@400) ($generated@@392 $generated@@145))))))
 :pattern ( ($generated@@358 $generated@@400))
)))
(assert (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@273 (type $generated@@403))))
(let (($generated@@405 ($generated@@272 (type $generated@@403))))
 (=> (= (type $generated@@403) ($generated@@271 $generated@@405 $generated@@404)) (or (= $generated@@403 ($generated@@270 $generated@@405 $generated@@404)) (exists (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (and (and (= (type $generated@@406) $generated@@145) (= (type $generated@@407) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@347 $generated@@403) ($generated@@258 ($generated@@211 $generated@@406 $generated@@407)))))
 :no-pattern (type $generated@@406)
 :no-pattern (type $generated@@407)
 :no-pattern ($generated $generated@@406)
 :no-pattern ($generated@@0 $generated@@406)
 :no-pattern ($generated $generated@@407)
 :no-pattern ($generated@@0 $generated@@407)
))))))
 :pattern ( ($generated@@347 $generated@@403))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@291 (type $generated@@408))))
(let (($generated@@410 ($generated@@290 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@289 $generated@@410 $generated@@409)) (or (= $generated@@408 ($generated@@288 $generated@@410 $generated@@409)) (exists (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (and (and (= (type $generated@@411) $generated@@145) (= (type $generated@@412) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@358 $generated@@408) ($generated@@258 ($generated@@211 $generated@@411 $generated@@412)))))
 :no-pattern (type $generated@@411)
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@411)
 :no-pattern ($generated@@0 $generated@@411)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
))))))
 :pattern ( ($generated@@358 $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@145) ($generated@@212 $generated@@413 $generated@@46)) (and (= ($generated@@258 ($generated@@348 $generated@@2 $generated@@413)) $generated@@413) ($generated@@132 ($generated@@348 $generated@@2 $generated@@413) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@413 $generated@@46))
)))
(assert (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@145) ($generated@@212 $generated@@414 $generated@@47)) (and (= ($generated@@258 ($generated@@348 $generated@@3 $generated@@414)) $generated@@414) ($generated@@132 ($generated@@348 $generated@@3 $generated@@414) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@414 $generated@@47))
)))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@145) ($generated@@212 $generated@@415 $generated@@44)) (and (= ($generated@@258 ($generated@@348 $generated@@4 $generated@@415)) $generated@@415) ($generated@@132 ($generated@@348 $generated@@4 $generated@@415) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@415 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@416) 20))
(assert (forall (($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@417) $generated@@145) ($generated@@212 $generated@@417 $generated@@45)) (and (= ($generated@@258 ($generated@@348 $generated@@416 $generated@@417)) $generated@@417) ($generated@@132 ($generated@@348 $generated@@416 $generated@@417) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@417 $generated@@45))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (= (type $generated@@419) $generated@@64) (= ($generated@@212 ($generated@@258 $generated@@418) $generated@@419) ($generated@@132 $generated@@418 $generated@@419)))
 :pattern ( ($generated@@212 ($generated@@258 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@79 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@76 $generated@@421 $generated@@2)) (<= 0 ($generated@@263 $generated@@420))))
 :pattern ( ($generated@@263 $generated@@420))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@253 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@252 $generated@@423)) (<= 0 ($generated@@251 $generated@@422))))
 :pattern ( ($generated@@251 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (= (type ($generated@@424 $generated@@425)) $generated@@64)
 :pattern ( ($generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@64) (= (type $generated@@427) $generated@@64)) (= ($generated@@424 ($generated@@376 $generated@@426 $generated@@427)) $generated@@426))
 :pattern ( ($generated@@376 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (= (type ($generated@@428 $generated@@429)) $generated@@64)
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@64) (= (type $generated@@431) $generated@@64)) (= ($generated@@428 ($generated@@376 $generated@@430 $generated@@431)) $generated@@431))
 :pattern ( ($generated@@376 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@64) (= (type $generated@@433) $generated@@64)) (= ($generated@@72 ($generated@@376 $generated@@432 $generated@@433)) $generated@@58))
 :pattern ( ($generated@@376 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (= (type ($generated@@434 $generated@@435)) $generated@@64)
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@64) (= (type $generated@@437) $generated@@64)) (= ($generated@@434 ($generated@@384 $generated@@436 $generated@@437)) $generated@@436))
 :pattern ( ($generated@@384 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (= (type ($generated@@438 $generated@@439)) $generated@@64)
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@64) (= (type $generated@@441) $generated@@64)) (= ($generated@@438 ($generated@@384 $generated@@440 $generated@@441)) $generated@@441))
 :pattern ( ($generated@@384 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@64) (= (type $generated@@443) $generated@@64)) (= ($generated@@72 ($generated@@384 $generated@@442 $generated@@443)) $generated@@59))
 :pattern ( ($generated@@384 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@145) (= (type $generated@@445) $generated@@145)) (= ($generated@@244 ($generated@@211 $generated@@444 $generated@@445)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@135 $generated@@448 $generated@@449)) $generated@@448))
 :pattern ( ($generated@@135 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@64)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@64) (= (type $generated@@453) $generated@@64)) (= ($generated@@450 ($generated@@135 $generated@@452 $generated@@453)) $generated@@453))
 :pattern ( ($generated@@135 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@145) (= (type $generated@@455) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@211 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@145) (= (type $generated@@457) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@211 $generated@@456 $generated@@457))
)))
(assert  (and (forall (($generated@@460 T@U) ) (! (= (type ($generated@@458 $generated@@460)) $generated@@64)
 :pattern ( ($generated@@458 $generated@@460))
)) (forall (($generated@@461 T@U) ($generated@@462 Int) ) (! (let (($generated@@463 ($generated@@253 (type $generated@@461))))
(= (type ($generated@@459 $generated@@461 $generated@@462)) $generated@@463))
 :pattern ( ($generated@@459 $generated@@461 $generated@@462))
))))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (= (type $generated@@464) ($generated@@252 $generated@@145)) (= (type $generated@@465) $generated@@64)) (= (type $generated@@466) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@464 ($generated@@458 $generated@@465) $generated@@466) (forall (($generated@@467 Int) ) (!  (=> (and (<= 0 $generated@@467) (< $generated@@467 ($generated@@251 $generated@@464))) ($generated@@238 ($generated@@459 $generated@@464 $generated@@467) $generated@@465 $generated@@466))
 :pattern ( ($generated@@459 $generated@@464 $generated@@467))
))))
 :pattern ( ($generated@@74 $generated@@464 ($generated@@458 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@469 Int) ) (! (= ($generated@@468 ($generated@@75 $generated@@469)) $generated@@469)
 :pattern ( ($generated@@75 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@64) (= ($generated@@470 ($generated@@221 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@221 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@473)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@64)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (= (type $generated@@476) $generated@@64) (= ($generated@@474 ($generated@@226 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@226 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (= (type $generated@@477) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@477)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@477))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@64)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@64) (= ($generated@@478 ($generated@@150 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@150 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@481)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@64)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@482 ($generated@@458 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@458 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@72 ($generated@@458 $generated@@485)) $generated@@57))
 :pattern ( ($generated@@458 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 (type $generated@@486)))
(= ($generated@@348 $generated@@487 ($generated@@258 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@258 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (and (= (type $generated@@488) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@489) $generated@@64)) (= (type $generated@@490) $generated@@64)) (= ($generated@@132 $generated@@488 ($generated@@376 $generated@@489 $generated@@490)) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@269 $generated@@488) $generated@@491))) (and ($generated@@212 ($generated@@81 ($generated@@349 $generated@@488) $generated@@491) $generated@@490) ($generated@@212 $generated@@491 $generated@@489)))
 :pattern ( ($generated@@81 ($generated@@349 $generated@@488) $generated@@491))
 :pattern ( ($generated@@81 ($generated@@269 $generated@@488) $generated@@491))
))))
 :pattern ( ($generated@@132 $generated@@488 ($generated@@376 $generated@@489 $generated@@490)))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (and (= (type $generated@@492) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@493) $generated@@64)) (= (type $generated@@494) $generated@@64)) (= ($generated@@132 $generated@@492 ($generated@@384 $generated@@493 $generated@@494)) (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@287 $generated@@492) $generated@@495))) (and ($generated@@212 ($generated@@81 ($generated@@359 $generated@@492) $generated@@495) $generated@@494) ($generated@@212 $generated@@495 $generated@@493)))
 :pattern ( ($generated@@81 ($generated@@359 $generated@@492) $generated@@495))
 :pattern ( ($generated@@81 ($generated@@287 $generated@@492) $generated@@495))
))))
 :pattern ( ($generated@@132 $generated@@492 ($generated@@384 $generated@@493 $generated@@494)))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@145) (= (type $generated@@499) $generated@@145)) (< ($generated@@496 $generated@@498) ($generated@@497 ($generated@@211 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@211 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@145) (= (type $generated@@501) $generated@@145)) (< ($generated@@496 $generated@@501) ($generated@@497 ($generated@@211 $generated@@500 $generated@@501))))
 :pattern ( ($generated@@211 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (and (and (= (type $generated@@502) $generated@@145) (= (type $generated@@503) $generated@@64)) (= (type $generated@@504) $generated@@64)) ($generated@@212 $generated@@502 ($generated@@376 $generated@@503 $generated@@504))) (and (= ($generated@@258 ($generated@@348 ($generated@@271 $generated@@145 $generated@@145) $generated@@502)) $generated@@502) ($generated@@132 ($generated@@348 ($generated@@271 $generated@@145 $generated@@145) $generated@@502) ($generated@@376 $generated@@503 $generated@@504))))
 :pattern ( ($generated@@212 $generated@@502 ($generated@@376 $generated@@503 $generated@@504)))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (and (= (type $generated@@505) $generated@@145) (= (type $generated@@506) $generated@@64)) (= (type $generated@@507) $generated@@64)) ($generated@@212 $generated@@505 ($generated@@384 $generated@@506 $generated@@507))) (and (= ($generated@@258 ($generated@@348 ($generated@@289 $generated@@145 $generated@@145) $generated@@505)) $generated@@505) ($generated@@132 ($generated@@348 ($generated@@289 $generated@@145 $generated@@145) $generated@@505) ($generated@@384 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@212 $generated@@505 ($generated@@384 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (and (= (type $generated@@508) $generated@@64) (= (type $generated@@509) $generated@@64)) (= (type $generated@@510) $generated@@145)) ($generated@@212 $generated@@510 ($generated@@135 $generated@@508 $generated@@509))) (and (= ($generated@@258 ($generated@@348 $generated@@136 $generated@@510)) $generated@@510) ($generated@@132 ($generated@@348 $generated@@136 $generated@@510) ($generated@@135 $generated@@508 $generated@@509))))
 :pattern ( ($generated@@212 $generated@@510 ($generated@@135 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@513 Int) ($generated@@514 Int) ) (! (= (type ($generated@@511 $generated@@513 $generated@@514)) $generated@@136)
 :pattern ( ($generated@@511 $generated@@513 $generated@@514))
)))
(assert  (=> (<= 1 $generated@@343) (forall (($generated@@515 Int) ($generated@@516 Int) ) (!  (=> (or ($generated@@512 $generated@@515 $generated@@516) (and (not (= 1 $generated@@343)) (< $generated@@515 100))) ($generated@@132 ($generated@@511 $generated@@515 $generated@@516) ($generated@@135 $generated@@46 $generated@@46)))
 :pattern ( ($generated@@511 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@517 T@U) ) (! (let (($generated@@518 (type $generated@@517)))
 (not ($generated@@0 ($generated@@81 ($generated@@392 $generated@@518) $generated@@517))))
 :pattern ( (let (($generated@@518 (type $generated@@517)))
($generated@@81 ($generated@@392 $generated@@518) $generated@@517)))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@69)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@64) (= (type $generated@@522) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@521 $generated@@522)) $generated@@62) (= ($generated@@519 ($generated@@135 $generated@@521 $generated@@522)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@136) (= ($generated@@496 ($generated@@258 $generated@@523)) ($generated@@497 $generated@@523)))
 :pattern ( ($generated@@496 ($generated@@258 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@145) ($generated@@212 $generated@@524 ($generated@@75 0))) (and (= ($generated@@258 ($generated@@348 $generated@@2 $generated@@524)) $generated@@524) ($generated@@132 ($generated@@348 ($generated@@76 $generated@@145 $generated@@4) $generated@@524) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@524 ($generated@@75 0)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@525) $generated@@145) (= (type $generated@@526) $generated@@64)) ($generated@@212 $generated@@525 ($generated@@221 $generated@@526))) (and (= ($generated@@258 ($generated@@348 ($generated@@76 $generated@@145 $generated@@4) $generated@@525)) $generated@@525) ($generated@@132 ($generated@@348 ($generated@@76 $generated@@145 $generated@@4) $generated@@525) ($generated@@221 $generated@@526))))
 :pattern ( ($generated@@212 $generated@@525 ($generated@@221 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@527) $generated@@145) (= (type $generated@@528) $generated@@64)) ($generated@@212 $generated@@527 ($generated@@226 $generated@@528))) (and (= ($generated@@258 ($generated@@348 ($generated@@76 $generated@@145 $generated@@4) $generated@@527)) $generated@@527) ($generated@@132 ($generated@@348 ($generated@@76 $generated@@145 $generated@@4) $generated@@527) ($generated@@226 $generated@@528))))
 :pattern ( ($generated@@212 $generated@@527 ($generated@@226 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (= (type $generated@@529) $generated@@145) (= (type $generated@@530) $generated@@64)) ($generated@@212 $generated@@529 ($generated@@150 $generated@@530))) (and (= ($generated@@258 ($generated@@348 ($generated@@76 $generated@@145 $generated@@2) $generated@@529)) $generated@@529) ($generated@@132 ($generated@@348 ($generated@@76 $generated@@145 $generated@@2) $generated@@529) ($generated@@150 $generated@@530))))
 :pattern ( ($generated@@212 $generated@@529 ($generated@@150 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@531) $generated@@145) (= (type $generated@@532) $generated@@64)) ($generated@@212 $generated@@531 ($generated@@458 $generated@@532))) (and (= ($generated@@258 ($generated@@348 ($generated@@252 $generated@@145) $generated@@531)) $generated@@531) ($generated@@132 ($generated@@348 ($generated@@252 $generated@@145) $generated@@531) ($generated@@458 $generated@@532))))
 :pattern ( ($generated@@212 $generated@@531 ($generated@@458 $generated@@532)))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@533) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@533 ($generated@@150 $generated@@534) $generated@@535) (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@533 $generated@@536)))) ($generated@@238 $generated@@536 $generated@@534 $generated@@535))
 :pattern ( ($generated@@81 $generated@@533 $generated@@536))
))))
 :pattern ( ($generated@@74 $generated@@533 ($generated@@150 $generated@@534) $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@136) (= (type $generated@@538) $generated@@64)) (= (type $generated@@539) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@539) (and ($generated@@134 $generated@@537) (exists (($generated@@540 T@U) ) (!  (and (= (type $generated@@540) $generated@@64) ($generated@@74 $generated@@537 ($generated@@135 $generated@@538 $generated@@540) $generated@@539))
 :pattern ( ($generated@@74 $generated@@537 ($generated@@135 $generated@@538 $generated@@540) $generated@@539))
))))) ($generated@@238 ($generated@@143 $generated@@537) $generated@@538 $generated@@539))
 :pattern ( ($generated@@238 ($generated@@143 $generated@@537) $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (and (= (type $generated@@541) $generated@@136) (= (type $generated@@542) $generated@@64)) (= (type $generated@@543) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@237 $generated@@543) (and ($generated@@134 $generated@@541) (exists (($generated@@544 T@U) ) (!  (and (= (type $generated@@544) $generated@@64) ($generated@@74 $generated@@541 ($generated@@135 $generated@@544 $generated@@542) $generated@@543))
 :pattern ( ($generated@@74 $generated@@541 ($generated@@135 $generated@@544 $generated@@542) $generated@@543))
))))) ($generated@@238 ($generated@@144 $generated@@541) $generated@@542 $generated@@543))
 :pattern ( ($generated@@238 ($generated@@144 $generated@@541) $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@145) (= (type $generated@@546) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@545) ($generated@@233 $generated@@546)) ($generated@@233 ($generated@@211 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@545) ($generated@@233 $generated@@546)))
)))
(assert (forall (($generated@@547 Int) ) (! (= ($generated@@258 ($generated@@8 ($generated@@231 $generated@@547))) ($generated@@233 ($generated@@258 ($generated@@8 $generated@@547))))
 :pattern ( ($generated@@258 ($generated@@8 ($generated@@231 $generated@@547))))
)))
(assert (forall (($generated@@548 T@U) ) (! (= ($generated@@258 ($generated@@233 $generated@@548)) ($generated@@233 ($generated@@258 $generated@@548)))
 :pattern ( ($generated@@258 ($generated@@233 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ) (! (let (($generated@@550 ($generated@@253 (type $generated@@549))))
 (=> (and (= (type $generated@@549) ($generated@@252 $generated@@550)) (= ($generated@@251 $generated@@549) 0)) (= $generated@@549 ($generated@@250 $generated@@550))))
 :pattern ( ($generated@@251 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (! (let (($generated@@554 (type $generated@@552)))
 (=> (and (and (= (type $generated@@551) ($generated@@76 $generated@@554 $generated@@2)) (= (type $generated@@553) $generated@@2)) (<= 0 ($generated $generated@@553))) (= ($generated@@263 ($generated@@82 $generated@@551 $generated@@552 $generated@@553)) (+ (- ($generated@@263 $generated@@551) ($generated ($generated@@81 $generated@@551 $generated@@552))) ($generated $generated@@553)))))
 :pattern ( ($generated@@263 ($generated@@82 $generated@@551 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@556) $generated@@2)) ($generated@@74 $generated@@556 $generated@@46 $generated@@555))
 :pattern ( ($generated@@74 $generated@@556 $generated@@46 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@558) $generated@@3)) ($generated@@74 $generated@@558 $generated@@47 $generated@@557))
 :pattern ( ($generated@@74 $generated@@558 $generated@@47 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@560) $generated@@4)) ($generated@@74 $generated@@560 $generated@@44 $generated@@559))
 :pattern ( ($generated@@74 $generated@@560 $generated@@44 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@562) $generated@@416)) ($generated@@74 $generated@@562 $generated@@45 $generated@@561))
 :pattern ( ($generated@@74 $generated@@562 $generated@@45 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@564) $generated@@145)) ($generated@@74 $generated@@564 $generated@@48 $generated@@563))
 :pattern ( ($generated@@74 $generated@@564 $generated@@48 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) ($generated@@252 $generated@@145)) (= (type $generated@@566) $generated@@64)) (= ($generated@@132 $generated@@565 ($generated@@458 $generated@@566)) (forall (($generated@@567 Int) ) (!  (=> (and (<= 0 $generated@@567) (< $generated@@567 ($generated@@251 $generated@@565))) ($generated@@212 ($generated@@459 $generated@@565 $generated@@567) $generated@@566))
 :pattern ( ($generated@@459 $generated@@565 $generated@@567))
))))
 :pattern ( ($generated@@132 $generated@@565 ($generated@@458 $generated@@566)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 Int) ) (!  (=> (= (type $generated@@569) ($generated@@252 $generated@@145)) (=> (and (<= 0 $generated@@570) (< $generated@@570 ($generated@@251 $generated@@569))) (< ($generated@@497 ($generated@@348 $generated@@136 ($generated@@459 $generated@@569 $generated@@570))) ($generated@@568 $generated@@569))))
 :pattern ( ($generated@@497 ($generated@@348 $generated@@136 ($generated@@459 $generated@@569 $generated@@570))))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) ($generated@@271 $generated@@145 $generated@@145)) (= (type $generated@@572) $generated@@64)) (= (type $generated@@573) $generated@@64)) ($generated@@132 $generated@@571 ($generated@@376 $generated@@572 $generated@@573))) (and (and ($generated@@132 ($generated@@269 $generated@@571) ($generated@@221 $generated@@572)) ($generated@@132 ($generated@@312 $generated@@571) ($generated@@221 $generated@@573))) ($generated@@132 ($generated@@347 $generated@@571) ($generated@@221 ($generated@@135 $generated@@572 $generated@@573)))))
 :pattern ( ($generated@@132 $generated@@571 ($generated@@376 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) ($generated@@289 $generated@@145 $generated@@145)) (= (type $generated@@575) $generated@@64)) (= (type $generated@@576) $generated@@64)) ($generated@@132 $generated@@574 ($generated@@384 $generated@@575 $generated@@576))) (and (and ($generated@@132 ($generated@@287 $generated@@574) ($generated@@226 $generated@@575)) ($generated@@132 ($generated@@323 $generated@@574) ($generated@@226 $generated@@576))) ($generated@@132 ($generated@@358 $generated@@574) ($generated@@226 ($generated@@135 $generated@@575 $generated@@576)))))
 :pattern ( ($generated@@132 $generated@@574 ($generated@@384 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@2) ($generated@@132 $generated@@577 $generated@@46))
 :pattern ( ($generated@@132 $generated@@577 $generated@@46))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@3) ($generated@@132 $generated@@578 $generated@@47))
 :pattern ( ($generated@@132 $generated@@578 $generated@@47))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@4) ($generated@@132 $generated@@579 $generated@@44))
 :pattern ( ($generated@@132 $generated@@579 $generated@@44))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@416) ($generated@@132 $generated@@580 $generated@@45))
 :pattern ( ($generated@@132 $generated@@580 $generated@@45))
)))
(assert (forall (($generated@@581 T@U) ) (!  (=> (= (type $generated@@581) $generated@@145) ($generated@@132 $generated@@581 $generated@@48))
 :pattern ( ($generated@@132 $generated@@581 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@582 () T@U)
(declare-fun $generated@@583 () T@U)
(declare-fun $generated@@584 () T@U)
(declare-fun $generated@@585 () Int)
(declare-fun $generated@@586 () Int)
(declare-fun $generated@@587 () Int)
(declare-fun $generated@@588 (T@U) Bool)
(assert  (and (and (= (type $generated@@582) ($generated@@157 $generated@@77 $generated@@4)) (= (type $generated@@583) $generated@@77)) (= (type $generated@@584) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@589  (=> (and (= $generated@@582 ($generated@@156 $generated@@583 $generated@@584 $generated@@60 false)) ($generated@@74 ($generated@@8 $generated@@585) $generated@@46 $generated@@584)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@231 0) $generated@@585)) (=> (and (<= ($generated@@231 0) $generated@@585) ($generated@@345 $generated@@585)) (=> (and (and ($generated@@74 ($generated@@8 $generated@@586) $generated@@46 $generated@@584) (= $generated@@587 ($generated@@344 $generated@@585))) (and ($generated@@74 ($generated@@8 $generated@@587) $generated@@46 $generated@@584) (= (ControlFlow 0 2) (- 0 1)))) (< $generated@@586 100)))))))
(let (($generated@@590  (=> (and (and (and ($generated@@237 $generated@@584) ($generated@@588 $generated@@584)) (<= ($generated@@231 0) $generated@@585)) (and (= 2 $generated@@343) (= (ControlFlow 0 4) 2))) $generated@@589)))
$generated@@590)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
