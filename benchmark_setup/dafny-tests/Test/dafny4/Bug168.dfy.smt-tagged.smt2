(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (Int) T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@172 (T@T T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@246 () Int)
(declare-fun $generated@@247 (T@U) Int)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U) Int)
(declare-fun $generated@@256 (T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (Int) Int)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Bool)
(declare-fun $generated@@282 (T@U T@U T@U) Bool)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@356 (T@T T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@440 (T@T) T@U)
(declare-fun $generated@@464 () T@T)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@627 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@92 $generated@@93)) 12))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@82 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@82 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@82 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@82 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@71 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@84) 14)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@84)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ($generated@@137 T@U) ) (! (= (type ($generated@@79 $generated@@136 $generated@@137)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@136 $generated@@137))
))) (= (type $generated@@80) $generated@@68)))
(assert (forall (($generated@@138 Int) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) $generated@@81) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@140)) (= ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140)  (and ($generated@@78 ($generated@@8 $generated@@138) $generated@@46 $generated@@140) ($generated@@78 $generated@@139 $generated@@80 $generated@@140))))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140))
)))
(assert (forall (($generated@@142 Int) ) (! (= (type ($generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@78 $generated@@143 ($generated@@141 0) $generated@@144))
 :pattern ( ($generated@@78 $generated@@143 ($generated@@141 0) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@141 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@141 0)))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@148 $generated@@149 $generated@@150)) $generated@@68)
 :pattern ( ($generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@68) (= (type $generated@@152) $generated@@68)) (= (type $generated@@153) $generated@@81)) ($generated@@145 $generated@@153 ($generated@@148 $generated@@151 $generated@@152))) ($generated@@147 $generated@@153))
 :pattern ( ($generated@@147 $generated@@153) ($generated@@145 $generated@@153 ($generated@@148 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@81) (= (type $generated@@161) $generated@@81)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert  (and (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@72)
 :pattern ( ($generated@@162 $generated@@164))
)) (= (type $generated@@163) $generated@@81)))
(assert (= ($generated@@162 $generated@@163) $generated@@63))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@68)
 :pattern ( ($generated@@165 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@82 $generated@@157 $generated@@2)) (= (type $generated@@169) $generated@@68)) ($generated@@145 $generated@@168 ($generated@@165 $generated@@169))) ($generated@@166 $generated@@168))
 :pattern ( ($generated@@145 $generated@@168 ($generated@@165 $generated@@169)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (= ($generated@@1 ($generated@@172 $generated@@176 $generated@@177)) 16)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@173 ($generated@@172 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@172 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@174 ($generated@@172 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@172 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@174 (type $generated@@182))))
(= (type ($generated@@170 $generated@@182 $generated@@183 $generated@@184)) $generated@@185))
 :pattern ( ($generated@@170 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 (type $generated@@189)))
(let (($generated@@191 (type $generated@@187)))
(= (type ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189)) ($generated@@172 $generated@@191 $generated@@190))))
 :pattern ( ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@174 (type $generated@@192))))
 (=> (= (type $generated@@195) $generated@@196) (= ($generated@@170 ($generated@@175 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@193 $generated@@194) $generated@@195)))
 :weight 0
))) (and (and (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@170 ($generated@@175 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@170 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@170 ($generated@@175 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@170 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or true (= ($generated@@170 ($generated@@175 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@170 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ) (! (= (type ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@172 $generated@@83 $generated@@4))
 :pattern ( ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@71 (type $generated@@224))))
 (=> (and (and (and (and (= (type $generated@@219) $generated@@83) (= (type $generated@@220) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@221) ($generated@@70 $generated@@4))) (= (type $generated@@223) $generated@@83)) (= (type $generated@@224) ($generated@@70 $generated@@225))) (= ($generated@@0 ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))  (=> (and (not (= $generated@@223 $generated@@219)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@220 $generated@@223) $generated@@221))) $generated@@222))))
 :pattern ( ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@226 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@172 $generated@@83 $generated@@4))
 :pattern ( ($generated@@226 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@71 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@83) (= (type $generated@@232) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@233) ($generated@@70 $generated@@4))) (= (type $generated@@235) $generated@@83)) (= (type $generated@@236) ($generated@@70 $generated@@237))) (= ($generated@@0 ($generated@@170 ($generated@@226 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@170 ($generated@@226 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@81)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@68) (= (type $generated@@243) $generated@@68)) (= (type $generated@@244) $generated@@157)) (= (type $generated@@245) $generated@@157)) (= ($generated@@145 ($generated@@238 $generated@@244 $generated@@245) ($generated@@148 $generated@@242 $generated@@243))  (and ($generated@@239 $generated@@244 $generated@@242) ($generated@@239 $generated@@245 $generated@@243))))
 :pattern ( ($generated@@145 ($generated@@238 $generated@@244 $generated@@245) ($generated@@148 $generated@@242 $generated@@243)))
)))
(assert ($generated@@145 $generated@@163 $generated@@80))
(assert  (=> (<= 1 $generated@@246) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@81) (or ($generated@@248 $generated@@251) (and (not (= 1 $generated@@246)) (and ($generated@@145 $generated@@251 $generated@@80) ($generated@@249 $generated@@251))))) (= ($generated@@247 $generated@@251) (let (($generated@@252 ($generated@@250 $generated@@251)))
$generated@@252)))
 :pattern ( ($generated@@247 $generated@@251))
))))
(assert (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@85 $generated@@253)) ($generated@@78 $generated@@163 $generated@@80 $generated@@253))
 :pattern ( ($generated@@78 $generated@@163 $generated@@80 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@81) (= (type $generated@@255) $generated@@81)) (= ($generated@@154 $generated@@254 $generated@@255) (= $generated@@254 $generated@@255)))
 :pattern ( ($generated@@154 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@81) (= (type $generated@@258) $generated@@81)) (= ($generated@@256 $generated@@257 $generated@@258) (= $generated@@257 $generated@@258)))
 :pattern ( ($generated@@256 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@81)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@261) $generated@@81) (= (type $generated@@262) $generated@@81)) (and ($generated@@249 $generated@@261) ($generated@@249 $generated@@262))) (= ($generated@@256 $generated@@261 $generated@@262)  (and (= ($generated@@250 $generated@@261) ($generated@@250 $generated@@262)) ($generated@@256 ($generated@@259 $generated@@261) ($generated@@259 $generated@@262)))))
 :pattern ( ($generated@@256 $generated@@261 $generated@@262) ($generated@@249 $generated@@261))
 :pattern ( ($generated@@256 $generated@@261 $generated@@262) ($generated@@249 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@68)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@82 $generated@@157 $generated@@4)) (= (type $generated@@266) $generated@@68)) (= ($generated@@145 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@157) ($generated@@0 ($generated@@88 $generated@@265 $generated@@267))) ($generated@@239 $generated@@267 $generated@@266))
 :pattern ( ($generated@@88 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@145 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@68)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@82 $generated@@157 $generated@@4)) (= (type $generated@@271) $generated@@68)) (= ($generated@@145 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@157) ($generated@@0 ($generated@@88 $generated@@270 $generated@@272))) ($generated@@239 $generated@@272 $generated@@271))
 :pattern ( ($generated@@88 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@145 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 Int) ) (! (= ($generated@@273 $generated@@274) $generated@@274)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 (type $generated@@276)))
(= (type ($generated@@275 $generated@@276)) $generated@@277))
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= ($generated@@275 $generated@@278) $generated@@278)
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (= (type $generated@@280) $generated@@81) (= (type $generated@@281) $generated@@81)) (and ($generated@@279 $generated@@280) ($generated@@279 $generated@@281))) (= ($generated@@256 $generated@@280 $generated@@281) true))
 :pattern ( ($generated@@256 $generated@@280 $generated@@281) ($generated@@279 $generated@@280))
 :pattern ( ($generated@@256 $generated@@280 $generated@@281) ($generated@@279 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@283) $generated@@68) (= (type $generated@@284) $generated@@68)) (= (type $generated@@285) $generated@@157)) (= (type $generated@@286) $generated@@157)) (= (type $generated@@287) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@287)) (= ($generated@@78 ($generated@@238 $generated@@285 $generated@@286) ($generated@@148 $generated@@283 $generated@@284) $generated@@287)  (and ($generated@@282 $generated@@285 $generated@@283 $generated@@287) ($generated@@282 $generated@@286 $generated@@284 $generated@@287))))
 :pattern ( ($generated@@78 ($generated@@238 $generated@@285 $generated@@286) ($generated@@148 $generated@@283 $generated@@284) $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@81) (= ($generated@@147 $generated@@288) (= ($generated@@162 $generated@@288) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@81) (= ($generated@@279 $generated@@289) (= ($generated@@162 $generated@@289) $generated@@63)))
 :pattern ( ($generated@@279 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@81) (= ($generated@@249 $generated@@290) (= ($generated@@162 $generated@@290) $generated@@65)))
 :pattern ( ($generated@@249 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@81) ($generated@@147 $generated@@291)) (exists (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (and (and (= (type $generated@@292) $generated@@157) (= (type $generated@@293) $generated@@157)) (= $generated@@291 ($generated@@238 $generated@@292 $generated@@293)))
 :no-pattern (type $generated@@292)
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
)))
 :pattern ( ($generated@@147 $generated@@291))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@81) ($generated@@249 $generated@@294)) (exists (($generated@@295 Int) ($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@81) (= $generated@@294 ($generated@@79 $generated@@295 $generated@@296)))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
)))
 :pattern ( ($generated@@249 $generated@@294))
)))
(assert  (and (and (forall (($generated@@301 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@301)) 17)) (forall (($generated@@302 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@299 $generated@@302))
))) (forall (($generated@@303 T@T) ) (! (= (type ($generated@@297 $generated@@303)) ($generated@@299 $generated@@303))
 :pattern ( ($generated@@297 $generated@@303))
))))
(assert (forall (($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@304)) 0)
 :pattern ( ($generated@@297 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@81) ($generated@@279 $generated@@305)) (= $generated@@305 $generated@@163))
 :pattern ( ($generated@@279 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@157)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@68) (= (type $generated@@310) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@282 ($generated@@306 $generated@@308) $generated@@309 $generated@@310) ($generated@@78 $generated@@308 $generated@@309 $generated@@310)))
 :pattern ( ($generated@@282 ($generated@@306 $generated@@308) $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@313 T@T) ) (! (= (type ($generated@@312 $generated@@313)) ($generated@@82 $generated@@313 $generated@@2))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@86 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@82 $generated@@315 $generated@@2)) (and (= (= ($generated@@311 $generated@@314) 0) (= $generated@@314 ($generated@@312 $generated@@315))) (=> (not (= ($generated@@311 $generated@@314) 0)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) (< 0 ($generated ($generated@@88 $generated@@314 $generated@@316))))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@311 $generated@@314))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 18)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@82 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@88 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@88 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 19)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@82 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@88 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@88 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@86 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@82 $generated@@354 $generated@@2)) (= ($generated@@166 $generated@@353) (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@354) (and (<= 0 ($generated ($generated@@88 $generated@@353 $generated@@355))) (<= ($generated ($generated@@88 $generated@@353 $generated@@355)) ($generated@@311 $generated@@353))))
 :pattern ( ($generated@@88 $generated@@353 $generated@@355))
)))))
 :pattern ( ($generated@@166 $generated@@353))
)))
(assert (forall (($generated@@357 T@T) ($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@357 $generated@@358)) $generated@@357)
 :pattern ( ($generated@@356 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@157) ($generated@@239 $generated@@359 $generated@@80)) (and (= ($generated@@306 ($generated@@356 $generated@@81 $generated@@359)) $generated@@359) ($generated@@145 ($generated@@356 $generated@@81 $generated@@359) $generated@@80)))
 :pattern ( ($generated@@239 $generated@@359 $generated@@80))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@321 (type $generated@@360))))
(let (($generated@@362 ($generated@@320 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@319 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@318 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@88 ($generated@@317 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@317 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@321 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@82 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@321 (type $generated@@367))))
(let (($generated@@369 ($generated@@320 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@319 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@318 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@88 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@339 (type $generated@@371))))
(let (($generated@@373 ($generated@@338 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@337 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@336 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@88 ($generated@@335 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@335 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@339 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@82 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@339 (type $generated@@378))))
(let (($generated@@380 ($generated@@338 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@337 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@336 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@88 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@82 $generated@@157 $generated@@2)) (= (type $generated@@383) $generated@@68)) (= ($generated@@145 $generated@@382 ($generated@@165 $generated@@383)) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@157) (< 0 ($generated ($generated@@88 $generated@@382 $generated@@384)))) ($generated@@239 $generated@@384 $generated@@383))
 :pattern ( ($generated@@88 $generated@@382 $generated@@384))
))))
 :pattern ( ($generated@@145 $generated@@382 ($generated@@165 $generated@@383)))
)))
(assert  (=> (<= 1 $generated@@246) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@81) (or ($generated@@248 ($generated@@275 $generated@@385)) (and (not (= 1 $generated@@246)) (and ($generated@@145 $generated@@385 $generated@@80) ($generated@@0 ($generated@@275 ($generated@@11 ($generated@@249 ($generated@@275 $generated@@385))))))))) (= ($generated@@247 ($generated@@275 $generated@@385)) (let (($generated@@386 ($generated@@250 ($generated@@275 $generated@@385))))
$generated@@386)))
 :weight 3
 :pattern ( ($generated@@247 ($generated@@275 $generated@@385)))
))))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@82 $generated@@157 $generated@@4)) (= (type $generated@@388) $generated@@68)) (= (type $generated@@389) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@387 ($generated@@263 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@157) ($generated@@0 ($generated@@88 $generated@@387 $generated@@390))) ($generated@@282 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@88 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@78 $generated@@387 ($generated@@263 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@82 $generated@@157 $generated@@4)) (= (type $generated@@392) $generated@@68)) (= (type $generated@@393) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@391 ($generated@@268 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@157) ($generated@@0 ($generated@@88 $generated@@391 $generated@@394))) ($generated@@282 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@88 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@78 $generated@@391 ($generated@@268 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(= ($generated ($generated@@88 ($generated@@312 $generated@@396) $generated@@395)) 0))
 :pattern ( (let (($generated@@396 (type $generated@@395)))
($generated@@88 ($generated@@312 $generated@@396) $generated@@395)))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@157 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@321 (type $generated@@400))))
(let (($generated@@402 ($generated@@320 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@319 $generated@@157 $generated@@157)) (= (type $generated@@404) $generated@@157)) (= ($generated@@0 ($generated@@88 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@88 ($generated@@317 $generated@@403) ($generated@@155 ($generated@@356 $generated@@81 $generated@@404)))) (= ($generated@@88 ($generated@@398 $generated@@403) ($generated@@155 ($generated@@356 $generated@@81 $generated@@404))) ($generated@@156 ($generated@@356 $generated@@81 $generated@@404))))))
 :pattern ( ($generated@@88 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert  (and (forall (($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@407)) ($generated@@82 $generated@@157 $generated@@4))
 :pattern ( ($generated@@405 $generated@@407))
)) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@339 (type $generated@@408))))
(let (($generated@@410 ($generated@@338 (type $generated@@408))))
(= (type ($generated@@406 $generated@@408)) ($generated@@82 $generated@@410 $generated@@409))))
 :pattern ( ($generated@@406 $generated@@408))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@337 $generated@@157 $generated@@157)) (= (type $generated@@412) $generated@@157)) (= ($generated@@0 ($generated@@88 ($generated@@405 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@88 ($generated@@335 $generated@@411) ($generated@@155 ($generated@@356 $generated@@81 $generated@@412)))) (= ($generated@@88 ($generated@@406 $generated@@411) ($generated@@155 ($generated@@356 $generated@@81 $generated@@412))) ($generated@@156 ($generated@@356 $generated@@81 $generated@@412))))))
 :pattern ( ($generated@@88 ($generated@@405 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@320 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@319 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@88 ($generated@@364 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@88 ($generated@@317 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@88 ($generated@@398 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@88 ($generated@@317 $generated@@413) $generated@@417))
 :pattern ( ($generated@@88 ($generated@@398 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@88 ($generated@@364 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@338 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@337 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@88 ($generated@@375 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@88 ($generated@@335 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@88 ($generated@@406 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@88 ($generated@@335 $generated@@418) $generated@@422))
 :pattern ( ($generated@@88 ($generated@@406 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@88 ($generated@@375 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@68)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@319 $generated@@157 $generated@@157)) (= (type $generated@@427) $generated@@68)) (= (type $generated@@428) $generated@@68)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@157) ($generated@@0 ($generated@@88 ($generated@@317 $generated@@426) $generated@@430))) (and ($generated@@282 ($generated@@88 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@282 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@88 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@88 ($generated@@317 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@68)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@337 $generated@@157 $generated@@157)) (= (type $generated@@435) $generated@@68)) (= (type $generated@@436) $generated@@68)) (= (type $generated@@437) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@157) ($generated@@0 ($generated@@88 ($generated@@335 $generated@@434) $generated@@438))) (and ($generated@@282 ($generated@@88 ($generated@@406 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@282 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@88 ($generated@@406 $generated@@434) $generated@@438))
 :pattern ( ($generated@@88 ($generated@@335 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@78 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@81) ($generated@@145 $generated@@439 $generated@@80)) (or ($generated@@279 $generated@@439) ($generated@@249 $generated@@439)))
 :pattern ( ($generated@@249 $generated@@439) ($generated@@145 $generated@@439 $generated@@80))
 :pattern ( ($generated@@279 $generated@@439) ($generated@@145 $generated@@439 $generated@@80))
)))
(assert (forall (($generated@@441 T@T) ) (! (= (type ($generated@@440 $generated@@441)) ($generated@@82 $generated@@441 $generated@@4))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@339 (type $generated@@442))))
(let (($generated@@444 ($generated@@338 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@337 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@336 $generated@@444 $generated@@443)) (= ($generated@@335 $generated@@442) ($generated@@440 $generated@@444))))))
 :pattern ( ($generated@@335 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@339 (type $generated@@445))))
(let (($generated@@447 ($generated@@338 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@337 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@336 $generated@@447 $generated@@446)) (= ($generated@@375 $generated@@445) ($generated@@440 $generated@@446))))))
 :pattern ( ($generated@@375 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@339 (type $generated@@448))))
(let (($generated@@450 ($generated@@338 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@337 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@336 $generated@@450 $generated@@449)) (= ($generated@@405 $generated@@448) ($generated@@440 $generated@@157))))))
 :pattern ( ($generated@@405 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@321 (type $generated@@451))))
(let (($generated@@453 ($generated@@320 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@319 $generated@@453 $generated@@452)) (or (= $generated@@451 ($generated@@318 $generated@@453 $generated@@452)) (exists (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (and (and (= (type $generated@@454) $generated@@157) (= (type $generated@@455) $generated@@157)) ($generated@@0 ($generated@@88 ($generated@@397 $generated@@451) ($generated@@306 ($generated@@238 $generated@@454 $generated@@455)))))
 :no-pattern (type $generated@@454)
 :no-pattern (type $generated@@455)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
))))))
 :pattern ( ($generated@@397 $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@339 (type $generated@@456))))
(let (($generated@@458 ($generated@@338 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@337 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@336 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@157) (= (type $generated@@460) $generated@@157)) ($generated@@0 ($generated@@88 ($generated@@405 $generated@@456) ($generated@@306 ($generated@@238 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@405 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@157) ($generated@@239 $generated@@461 $generated@@46)) (and (= ($generated@@306 ($generated@@356 $generated@@2 $generated@@461)) $generated@@461) ($generated@@145 ($generated@@356 $generated@@2 $generated@@461) $generated@@46)))
 :pattern ( ($generated@@239 $generated@@461 $generated@@46))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@157) ($generated@@239 $generated@@462 $generated@@47)) (and (= ($generated@@306 ($generated@@356 $generated@@3 $generated@@462)) $generated@@462) ($generated@@145 ($generated@@356 $generated@@3 $generated@@462) $generated@@47)))
 :pattern ( ($generated@@239 $generated@@462 $generated@@47))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@157) ($generated@@239 $generated@@463 $generated@@44)) (and (= ($generated@@306 ($generated@@356 $generated@@4 $generated@@463)) $generated@@463) ($generated@@145 ($generated@@356 $generated@@4 $generated@@463) $generated@@44)))
 :pattern ( ($generated@@239 $generated@@463 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@464) 20))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@157) ($generated@@239 $generated@@465 $generated@@45)) (and (= ($generated@@306 ($generated@@356 $generated@@464 $generated@@465)) $generated@@465) ($generated@@145 ($generated@@356 $generated@@464 $generated@@465) $generated@@45)))
 :pattern ( ($generated@@239 $generated@@465 $generated@@45))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@68) (= ($generated@@239 ($generated@@306 $generated@@466) $generated@@467) ($generated@@145 $generated@@466 $generated@@467)))
 :pattern ( ($generated@@239 ($generated@@306 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@86 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@82 $generated@@469 $generated@@2)) (<= 0 ($generated@@311 $generated@@468))))
 :pattern ( ($generated@@311 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@300 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@299 $generated@@471)) (<= 0 ($generated@@298 $generated@@470))))
 :pattern ( ($generated@@298 $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@68)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@68) (= (type $generated@@475) $generated@@68)) (= ($generated@@472 ($generated@@423 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@423 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@68)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@68) (= (type $generated@@479) $generated@@68)) (= ($generated@@476 ($generated@@423 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@423 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@68) (= (type $generated@@481) $generated@@68)) (= ($generated@@76 ($generated@@423 $generated@@480 $generated@@481)) $generated@@58))
 :pattern ( ($generated@@423 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@68)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@68) (= (type $generated@@485) $generated@@68)) (= ($generated@@482 ($generated@@431 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@431 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@68) (= (type $generated@@489) $generated@@68)) (= ($generated@@486 ($generated@@431 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@431 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@68) (= (type $generated@@491) $generated@@68)) (= ($generated@@76 ($generated@@431 $generated@@490 $generated@@491)) $generated@@59))
 :pattern ( ($generated@@431 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@157) (= (type $generated@@493) $generated@@157)) (= ($generated@@162 ($generated@@238 $generated@@492 $generated@@493)) $generated@@61))
 :pattern ( ($generated@@238 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@68)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@68) (= (type $generated@@497) $generated@@68)) (= ($generated@@494 ($generated@@148 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@148 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@68)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@68) (= (type $generated@@501) $generated@@68)) (= ($generated@@498 ($generated@@148 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@148 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@157) (= (type $generated@@503) $generated@@157)) (= ($generated@@155 ($generated@@238 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@238 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@157) (= (type $generated@@505) $generated@@157)) (= ($generated@@156 ($generated@@238 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@238 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 Int) ($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@81) (= ($generated@@162 ($generated@@79 $generated@@506 $generated@@507)) $generated@@65))
 :pattern ( ($generated@@79 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 Int) ($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@81) (= ($generated@@250 ($generated@@79 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@79 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 Int) ($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@81) (= ($generated@@259 ($generated@@79 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@79 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@300 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@299 $generated@@157)) (= (type $generated@@519) $generated@@68)) (= (type $generated@@520) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@298 $generated@@518))) ($generated@@282 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@78 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@141 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@141 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@68)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@68) (= ($generated@@524 ($generated@@263 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@263 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@68) (= ($generated@@76 ($generated@@263 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@263 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@68)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@68) (= ($generated@@528 ($generated@@268 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@268 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@68) (= ($generated@@76 ($generated@@268 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@268 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@68)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@68) (= ($generated@@532 ($generated@@165 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@165 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@68) (= ($generated@@76 ($generated@@165 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@165 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@68)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@68) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@68) (= ($generated@@76 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@356 $generated@@541 ($generated@@306 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@306 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@319 $generated@@157 $generated@@157)) (= (type $generated@@543) $generated@@68)) (= (type $generated@@544) $generated@@68)) (= ($generated@@145 $generated@@542 ($generated@@423 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@157) ($generated@@0 ($generated@@88 ($generated@@317 $generated@@542) $generated@@545))) (and ($generated@@239 ($generated@@88 ($generated@@398 $generated@@542) $generated@@545) $generated@@544) ($generated@@239 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@88 ($generated@@398 $generated@@542) $generated@@545))
 :pattern ( ($generated@@88 ($generated@@317 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@145 $generated@@542 ($generated@@423 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@337 $generated@@157 $generated@@157)) (= (type $generated@@547) $generated@@68)) (= (type $generated@@548) $generated@@68)) (= ($generated@@145 $generated@@546 ($generated@@431 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@157) ($generated@@0 ($generated@@88 ($generated@@335 $generated@@546) $generated@@549))) (and ($generated@@239 ($generated@@88 ($generated@@406 $generated@@546) $generated@@549) $generated@@548) ($generated@@239 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@88 ($generated@@406 $generated@@546) $generated@@549))
 :pattern ( ($generated@@88 ($generated@@335 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@145 $generated@@546 ($generated@@431 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@157) (= (type $generated@@553) $generated@@157)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@238 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@238 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@157) (= (type $generated@@555) $generated@@157)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@238 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@238 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 Int) ($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@81) (< ($generated@@551 $generated@@557) ($generated@@551 ($generated@@79 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@79 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@157) (= (type $generated@@559) $generated@@68)) (= (type $generated@@560) $generated@@68)) ($generated@@239 $generated@@558 ($generated@@423 $generated@@559 $generated@@560))) (and (= ($generated@@306 ($generated@@356 ($generated@@319 $generated@@157 $generated@@157) $generated@@558)) $generated@@558) ($generated@@145 ($generated@@356 ($generated@@319 $generated@@157 $generated@@157) $generated@@558) ($generated@@423 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@239 $generated@@558 ($generated@@423 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@157) (= (type $generated@@562) $generated@@68)) (= (type $generated@@563) $generated@@68)) ($generated@@239 $generated@@561 ($generated@@431 $generated@@562 $generated@@563))) (and (= ($generated@@306 ($generated@@356 ($generated@@337 $generated@@157 $generated@@157) $generated@@561)) $generated@@561) ($generated@@145 ($generated@@356 ($generated@@337 $generated@@157 $generated@@157) $generated@@561) ($generated@@431 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@239 $generated@@561 ($generated@@431 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@68) (= (type $generated@@565) $generated@@68)) (= (type $generated@@566) $generated@@157)) ($generated@@239 $generated@@566 ($generated@@148 $generated@@564 $generated@@565))) (and (= ($generated@@306 ($generated@@356 $generated@@81 $generated@@566)) $generated@@566) ($generated@@145 ($generated@@356 $generated@@81 $generated@@566) ($generated@@148 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@239 $generated@@566 ($generated@@148 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@88 ($generated@@440 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@88 ($generated@@440 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@73)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@68) (= (type $generated@@572) $generated@@68)) (and (= ($generated@@76 ($generated@@148 $generated@@571 $generated@@572)) $generated@@62) (= ($generated@@569 ($generated@@148 $generated@@571 $generated@@572)) $generated@@66)))
 :pattern ( ($generated@@148 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@81) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@574) (and ($generated@@249 $generated@@573) ($generated@@78 $generated@@573 $generated@@80 $generated@@574)))) ($generated@@78 ($generated@@8 ($generated@@250 $generated@@573)) $generated@@46 $generated@@574))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@250 $generated@@573)) $generated@@46 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@81) (= ($generated@@550 ($generated@@306 $generated@@575)) ($generated@@551 $generated@@575)))
 :pattern ( ($generated@@550 ($generated@@306 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@157) ($generated@@239 $generated@@576 ($generated@@141 0))) (and (= ($generated@@306 ($generated@@356 $generated@@2 $generated@@576)) $generated@@576) ($generated@@145 ($generated@@356 ($generated@@82 $generated@@157 $generated@@4) $generated@@576) ($generated@@141 0))))
 :pattern ( ($generated@@239 $generated@@576 ($generated@@141 0)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@157) (= (type $generated@@578) $generated@@68)) ($generated@@239 $generated@@577 ($generated@@263 $generated@@578))) (and (= ($generated@@306 ($generated@@356 ($generated@@82 $generated@@157 $generated@@4) $generated@@577)) $generated@@577) ($generated@@145 ($generated@@356 ($generated@@82 $generated@@157 $generated@@4) $generated@@577) ($generated@@263 $generated@@578))))
 :pattern ( ($generated@@239 $generated@@577 ($generated@@263 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@157) (= (type $generated@@580) $generated@@68)) ($generated@@239 $generated@@579 ($generated@@268 $generated@@580))) (and (= ($generated@@306 ($generated@@356 ($generated@@82 $generated@@157 $generated@@4) $generated@@579)) $generated@@579) ($generated@@145 ($generated@@356 ($generated@@82 $generated@@157 $generated@@4) $generated@@579) ($generated@@268 $generated@@580))))
 :pattern ( ($generated@@239 $generated@@579 ($generated@@268 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@157) (= (type $generated@@582) $generated@@68)) ($generated@@239 $generated@@581 ($generated@@165 $generated@@582))) (and (= ($generated@@306 ($generated@@356 ($generated@@82 $generated@@157 $generated@@2) $generated@@581)) $generated@@581) ($generated@@145 ($generated@@356 ($generated@@82 $generated@@157 $generated@@2) $generated@@581) ($generated@@165 $generated@@582))))
 :pattern ( ($generated@@239 $generated@@581 ($generated@@165 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@157) (= (type $generated@@584) $generated@@68)) ($generated@@239 $generated@@583 ($generated@@512 $generated@@584))) (and (= ($generated@@306 ($generated@@356 ($generated@@299 $generated@@157) $generated@@583)) $generated@@583) ($generated@@145 ($generated@@356 ($generated@@299 $generated@@157) $generated@@583) ($generated@@512 $generated@@584))))
 :pattern ( ($generated@@239 $generated@@583 ($generated@@512 $generated@@584)))
)))
(assert (= ($generated@@76 $generated@@80) $generated@@64))
(assert (= ($generated@@569 $generated@@80) $generated@@67))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@82 $generated@@157 $generated@@2)) (= (type $generated@@586) $generated@@68)) (= (type $generated@@587) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@585 ($generated@@165 $generated@@586) $generated@@587) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@157) (< 0 ($generated ($generated@@88 $generated@@585 $generated@@588)))) ($generated@@282 $generated@@588 $generated@@586 $generated@@587))
 :pattern ( ($generated@@88 $generated@@585 $generated@@588))
))))
 :pattern ( ($generated@@78 $generated@@585 ($generated@@165 $generated@@586) $generated@@587))
)))
(assert (= $generated@@163 ($generated@@275 $generated@@163)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@81) (= (type $generated@@590) $generated@@68)) (= (type $generated@@591) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@591) (and ($generated@@147 $generated@@589) (exists (($generated@@592 T@U) ) (!  (and (= (type $generated@@592) $generated@@68) ($generated@@78 $generated@@589 ($generated@@148 $generated@@590 $generated@@592) $generated@@591))
 :pattern ( ($generated@@78 $generated@@589 ($generated@@148 $generated@@590 $generated@@592) $generated@@591))
))))) ($generated@@282 ($generated@@155 $generated@@589) $generated@@590 $generated@@591))
 :pattern ( ($generated@@282 ($generated@@155 $generated@@589) $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@81) (= (type $generated@@594) $generated@@68)) (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@595) (and ($generated@@147 $generated@@593) (exists (($generated@@596 T@U) ) (!  (and (= (type $generated@@596) $generated@@68) ($generated@@78 $generated@@593 ($generated@@148 $generated@@596 $generated@@594) $generated@@595))
 :pattern ( ($generated@@78 $generated@@593 ($generated@@148 $generated@@596 $generated@@594) $generated@@595))
))))) ($generated@@282 ($generated@@156 $generated@@593) $generated@@594 $generated@@595))
 :pattern ( ($generated@@282 ($generated@@156 $generated@@593) $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@81) (= (type $generated@@598) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@598) (and ($generated@@249 $generated@@597) ($generated@@78 $generated@@597 $generated@@80 $generated@@598)))) ($generated@@78 ($generated@@259 $generated@@597) $generated@@80 $generated@@598))
 :pattern ( ($generated@@78 ($generated@@259 $generated@@597) $generated@@80 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@157) (= (type $generated@@600) $generated@@157)) (= ($generated@@238 ($generated@@275 $generated@@599) ($generated@@275 $generated@@600)) ($generated@@275 ($generated@@238 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@238 ($generated@@275 $generated@@599) ($generated@@275 $generated@@600)))
)))
(assert (forall (($generated@@601 Int) ($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@81) (= ($generated@@79 ($generated@@273 $generated@@601) ($generated@@275 $generated@@602)) ($generated@@275 ($generated@@79 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@79 ($generated@@273 $generated@@601) ($generated@@275 $generated@@602)))
)))
(assert (forall (($generated@@603 Int) ) (! (= ($generated@@306 ($generated@@8 ($generated@@273 $generated@@603))) ($generated@@275 ($generated@@306 ($generated@@8 $generated@@603))))
 :pattern ( ($generated@@306 ($generated@@8 ($generated@@273 $generated@@603))))
)))
(assert (forall (($generated@@604 T@U) ) (! (= ($generated@@306 ($generated@@275 $generated@@604)) ($generated@@275 ($generated@@306 $generated@@604)))
 :pattern ( ($generated@@306 ($generated@@275 $generated@@604)))
)))
(assert (forall (($generated@@605 Int) ($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@81) (= ($generated@@145 ($generated@@79 $generated@@605 $generated@@606) $generated@@80)  (and ($generated@@145 ($generated@@8 $generated@@605) $generated@@46) ($generated@@145 $generated@@606 $generated@@80))))
 :pattern ( ($generated@@145 ($generated@@79 $generated@@605 $generated@@606) $generated@@80))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 ($generated@@300 (type $generated@@607))))
 (=> (and (= (type $generated@@607) ($generated@@299 $generated@@608)) (= ($generated@@298 $generated@@607) 0)) (= $generated@@607 ($generated@@297 $generated@@608))))
 :pattern ( ($generated@@298 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@610)))
 (=> (and (and (= (type $generated@@609) ($generated@@82 $generated@@612 $generated@@2)) (= (type $generated@@611) $generated@@2)) (<= 0 ($generated $generated@@611))) (= ($generated@@311 ($generated@@89 $generated@@609 $generated@@610 $generated@@611)) (+ (- ($generated@@311 $generated@@609) ($generated ($generated@@88 $generated@@609 $generated@@610))) ($generated $generated@@611)))))
 :pattern ( ($generated@@311 ($generated@@89 $generated@@609 $generated@@610 $generated@@611)))
)))
(assert  (=> (<= 1 $generated@@246) (forall (($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@81) (or ($generated@@248 $generated@@613) (and (not (= 1 $generated@@246)) (and ($generated@@145 $generated@@613 $generated@@80) ($generated@@249 $generated@@613))))) (= ($generated@@247 $generated@@613) ($generated@@250 $generated@@613)))
 :pattern ( ($generated@@247 $generated@@613))
))))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@615) $generated@@2)) ($generated@@78 $generated@@615 $generated@@46 $generated@@614))
 :pattern ( ($generated@@78 $generated@@615 $generated@@46 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@617) $generated@@3)) ($generated@@78 $generated@@617 $generated@@47 $generated@@616))
 :pattern ( ($generated@@78 $generated@@617 $generated@@47 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@619) $generated@@4)) ($generated@@78 $generated@@619 $generated@@44 $generated@@618))
 :pattern ( ($generated@@78 $generated@@619 $generated@@44 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@621) $generated@@464)) ($generated@@78 $generated@@621 $generated@@45 $generated@@620))
 :pattern ( ($generated@@78 $generated@@621 $generated@@45 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@623) $generated@@157)) ($generated@@78 $generated@@623 $generated@@48 $generated@@622))
 :pattern ( ($generated@@78 $generated@@623 $generated@@48 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@299 $generated@@157)) (= (type $generated@@625) $generated@@68)) (= ($generated@@145 $generated@@624 ($generated@@512 $generated@@625)) (forall (($generated@@626 Int) ) (!  (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@298 $generated@@624))) ($generated@@239 ($generated@@513 $generated@@624 $generated@@626) $generated@@625))
 :pattern ( ($generated@@513 $generated@@624 $generated@@626))
))))
 :pattern ( ($generated@@145 $generated@@624 ($generated@@512 $generated@@625)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 Int) ) (!  (=> (= (type $generated@@628) ($generated@@299 $generated@@157)) (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@298 $generated@@628))) (< ($generated@@551 ($generated@@356 $generated@@81 ($generated@@513 $generated@@628 $generated@@629))) ($generated@@627 $generated@@628))))
 :pattern ( ($generated@@551 ($generated@@356 $generated@@81 ($generated@@513 $generated@@628 $generated@@629))))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@319 $generated@@157 $generated@@157)) (= (type $generated@@631) $generated@@68)) (= (type $generated@@632) $generated@@68)) ($generated@@145 $generated@@630 ($generated@@423 $generated@@631 $generated@@632))) (and (and ($generated@@145 ($generated@@317 $generated@@630) ($generated@@263 $generated@@631)) ($generated@@145 ($generated@@364 $generated@@630) ($generated@@263 $generated@@632))) ($generated@@145 ($generated@@397 $generated@@630) ($generated@@263 ($generated@@148 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@145 $generated@@630 ($generated@@423 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) ($generated@@337 $generated@@157 $generated@@157)) (= (type $generated@@634) $generated@@68)) (= (type $generated@@635) $generated@@68)) ($generated@@145 $generated@@633 ($generated@@431 $generated@@634 $generated@@635))) (and (and ($generated@@145 ($generated@@335 $generated@@633) ($generated@@268 $generated@@634)) ($generated@@145 ($generated@@375 $generated@@633) ($generated@@268 $generated@@635))) ($generated@@145 ($generated@@405 $generated@@633) ($generated@@268 ($generated@@148 $generated@@634 $generated@@635)))))
 :pattern ( ($generated@@145 $generated@@633 ($generated@@431 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@2) ($generated@@145 $generated@@636 $generated@@46))
 :pattern ( ($generated@@145 $generated@@636 $generated@@46))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@3) ($generated@@145 $generated@@637 $generated@@47))
 :pattern ( ($generated@@145 $generated@@637 $generated@@47))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@4) ($generated@@145 $generated@@638 $generated@@44))
 :pattern ( ($generated@@145 $generated@@638 $generated@@44))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@464) ($generated@@145 $generated@@639 $generated@@45))
 :pattern ( ($generated@@145 $generated@@639 $generated@@45))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@157) ($generated@@145 $generated@@640 $generated@@48))
 :pattern ( ($generated@@145 $generated@@640 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@641) $generated@@81) (= (type $generated@@644) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@642) ($generated@@172 $generated@@83 $generated@@4))) (= (type $generated@@643) $generated@@83)) (= (type $generated@@645) $generated@@81)) (= (type $generated@@647) ($generated@@172 $generated@@83 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@649  (=> (= (ControlFlow 0 6) (- 0 5)) (= ($generated@@247 $generated@@641) ($generated@@250 $generated@@641)))))
(let (($generated@@650  (=> (= $generated@@642 ($generated@@226 $generated@@643 $generated@@644 $generated@@60 false)) (=> (and (= $generated@@645 $generated@@641) ($generated@@145 $generated@@645 $generated@@80)) (and (=> (= (ControlFlow 0 7) (- 0 9)) ($generated@@249 $generated@@645)) (=> ($generated@@249 $generated@@645) (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@279 ($generated@@259 $generated@@645))) (=> ($generated@@279 ($generated@@259 $generated@@645)) (=> (and (and (= ($generated@@79 $generated@@646 ($generated@@275 $generated@@163)) $generated@@645) (= ($generated@@247 $generated@@641) $generated@@646)) (and ($generated@@145 ($generated@@8 ($generated@@247 $generated@@641)) $generated@@46) (= (ControlFlow 0 7) 6))) $generated@@649)))))))))
(let (($generated@@651  (=> ($generated@@78 $generated@@641 $generated@@80 $generated@@644) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@249 $generated@@641)) (=> ($generated@@249 $generated@@641) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (= $generated@@641 $generated@@641) (< ($generated@@551 $generated@@641) ($generated@@551 $generated@@641)))) (=> (or (= $generated@@641 $generated@@641) (< ($generated@@551 $generated@@641) ($generated@@551 $generated@@641))) (=> (and (or (= $generated@@641 $generated@@641) ($generated@@248 $generated@@641)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@249 $generated@@641)))))))))
(let (($generated@@652  (=> (and (= $generated@@647 ($generated@@171 $generated@@643 $generated@@644 $generated@@60 false)) ($generated@@249 $generated@@641)) (and (=> (= (ControlFlow 0 10) 2) $generated@@651) (=> (= (ControlFlow 0 10) 7) $generated@@650)))))
(let (($generated@@653  (=> (and (and (and ($generated@@85 $generated@@644) ($generated@@648 $generated@@644)) ($generated@@145 $generated@@641 $generated@@80)) (and (= 1 $generated@@246) (= (ControlFlow 0 11) 10))) $generated@@652)))
$generated@@653))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 7) (- 8))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (Int) T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@172 (T@T T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 (T@U) Int)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@258 () Int)
(declare-fun $generated@@259 (T@U) Int)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (Int) Int)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Bool)
(declare-fun $generated@@282 (T@U T@U T@U) Bool)
(declare-fun $generated@@297 (T@T) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@356 (T@T T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@440 (T@T) T@U)
(declare-fun $generated@@464 () T@T)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@551 (T@U) Int)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@627 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@92 $generated@@93)) 12))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@82 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@82 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@82 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@82 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@71 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@84) 14)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@84)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ($generated@@137 T@U) ) (! (= (type ($generated@@79 $generated@@136 $generated@@137)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@136 $generated@@137))
))) (= (type $generated@@80) $generated@@68)))
(assert (forall (($generated@@138 Int) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) $generated@@81) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@140)) (= ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140)  (and ($generated@@78 ($generated@@8 $generated@@138) $generated@@46 $generated@@140) ($generated@@78 $generated@@139 $generated@@80 $generated@@140))))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140))
)))
(assert (forall (($generated@@142 Int) ) (! (= (type ($generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@78 $generated@@143 ($generated@@141 0) $generated@@144))
 :pattern ( ($generated@@78 $generated@@143 ($generated@@141 0) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@141 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@141 0)))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@148 $generated@@149 $generated@@150)) $generated@@68)
 :pattern ( ($generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@68) (= (type $generated@@152) $generated@@68)) (= (type $generated@@153) $generated@@81)) ($generated@@145 $generated@@153 ($generated@@148 $generated@@151 $generated@@152))) ($generated@@147 $generated@@153))
 :pattern ( ($generated@@147 $generated@@153) ($generated@@145 $generated@@153 ($generated@@148 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@81) (= (type $generated@@161) $generated@@81)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert  (and (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@72)
 :pattern ( ($generated@@162 $generated@@164))
)) (= (type $generated@@163) $generated@@81)))
(assert (= ($generated@@162 $generated@@163) $generated@@63))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@68)
 :pattern ( ($generated@@165 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@82 $generated@@157 $generated@@2)) (= (type $generated@@169) $generated@@68)) ($generated@@145 $generated@@168 ($generated@@165 $generated@@169))) ($generated@@166 $generated@@168))
 :pattern ( ($generated@@145 $generated@@168 ($generated@@165 $generated@@169)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (= ($generated@@1 ($generated@@172 $generated@@176 $generated@@177)) 16)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@173 ($generated@@172 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@172 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@174 ($generated@@172 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@172 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@174 (type $generated@@182))))
(= (type ($generated@@170 $generated@@182 $generated@@183 $generated@@184)) $generated@@185))
 :pattern ( ($generated@@170 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 (type $generated@@189)))
(let (($generated@@191 (type $generated@@187)))
(= (type ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189)) ($generated@@172 $generated@@191 $generated@@190))))
 :pattern ( ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@174 (type $generated@@192))))
 (=> (= (type $generated@@195) $generated@@196) (= ($generated@@170 ($generated@@175 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@193 $generated@@194) $generated@@195)))
 :weight 0
))) (and (and (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@170 ($generated@@175 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@170 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@170 ($generated@@175 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@170 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or true (= ($generated@@170 ($generated@@175 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@170 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ) (! (= (type ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@172 $generated@@83 $generated@@4))
 :pattern ( ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@71 (type $generated@@224))))
 (=> (and (and (and (and (= (type $generated@@219) $generated@@83) (= (type $generated@@220) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@221) ($generated@@70 $generated@@4))) (= (type $generated@@223) $generated@@83)) (= (type $generated@@224) ($generated@@70 $generated@@225))) (= ($generated@@0 ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))  (=> (and (not (= $generated@@223 $generated@@219)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@220 $generated@@223) $generated@@221))) $generated@@222))))
 :pattern ( ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@226 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@172 $generated@@83 $generated@@4))
 :pattern ( ($generated@@226 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@71 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@83) (= (type $generated@@232) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@233) ($generated@@70 $generated@@4))) (= (type $generated@@235) $generated@@83)) (= (type $generated@@236) ($generated@@70 $generated@@237))) (= ($generated@@0 ($generated@@170 ($generated@@226 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@170 ($generated@@226 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@81)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@68) (= (type $generated@@243) $generated@@68)) (= (type $generated@@244) $generated@@157)) (= (type $generated@@245) $generated@@157)) (= ($generated@@145 ($generated@@238 $generated@@244 $generated@@245) ($generated@@148 $generated@@242 $generated@@243))  (and ($generated@@239 $generated@@244 $generated@@242) ($generated@@239 $generated@@245 $generated@@243))))
 :pattern ( ($generated@@145 ($generated@@238 $generated@@244 $generated@@245) ($generated@@148 $generated@@242 $generated@@243)))
)))
(assert ($generated@@145 $generated@@163 $generated@@80))
(assert (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@85 $generated@@246)) ($generated@@78 $generated@@163 $generated@@80 $generated@@246))
 :pattern ( ($generated@@78 $generated@@163 $generated@@80 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@81) (= (type $generated@@248) $generated@@81)) (= ($generated@@154 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@154 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@81) (= (type $generated@@251) $generated@@81)) (= ($generated@@249 $generated@@250 $generated@@251) (= $generated@@250 $generated@@251)))
 :pattern ( ($generated@@249 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@81)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (= (type $generated@@256) $generated@@81) (= (type $generated@@257) $generated@@81)) (and ($generated@@252 $generated@@256) ($generated@@252 $generated@@257))) (= ($generated@@249 $generated@@256 $generated@@257)  (and (= ($generated@@253 $generated@@256) ($generated@@253 $generated@@257)) ($generated@@249 ($generated@@254 $generated@@256) ($generated@@254 $generated@@257)))))
 :pattern ( ($generated@@249 $generated@@256 $generated@@257) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@249 $generated@@256 $generated@@257) ($generated@@252 $generated@@257))
)))
(assert  (=> (<= 1 $generated@@258) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@81) (or ($generated@@260 $generated@@261) (and (not (= 1 $generated@@258)) (and ($generated@@145 $generated@@261 $generated@@80) ($generated@@252 $generated@@261))))) (= ($generated@@259 $generated@@261) (let (($generated@@262 ($generated@@253 $generated@@261)))
$generated@@262)))
 :pattern ( ($generated@@259 $generated@@261))
))))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@68)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@82 $generated@@157 $generated@@4)) (= (type $generated@@266) $generated@@68)) (= ($generated@@145 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@157) ($generated@@0 ($generated@@88 $generated@@265 $generated@@267))) ($generated@@239 $generated@@267 $generated@@266))
 :pattern ( ($generated@@88 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@145 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@68)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@82 $generated@@157 $generated@@4)) (= (type $generated@@271) $generated@@68)) (= ($generated@@145 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@157) ($generated@@0 ($generated@@88 $generated@@270 $generated@@272))) ($generated@@239 $generated@@272 $generated@@271))
 :pattern ( ($generated@@88 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@145 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 Int) ) (! (= ($generated@@273 $generated@@274) $generated@@274)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ) (! (let (($generated@@277 (type $generated@@276)))
(= (type ($generated@@275 $generated@@276)) $generated@@277))
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (= ($generated@@275 $generated@@278) $generated@@278)
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (= (type $generated@@280) $generated@@81) (= (type $generated@@281) $generated@@81)) (and ($generated@@279 $generated@@280) ($generated@@279 $generated@@281))) (= ($generated@@249 $generated@@280 $generated@@281) true))
 :pattern ( ($generated@@249 $generated@@280 $generated@@281) ($generated@@279 $generated@@280))
 :pattern ( ($generated@@249 $generated@@280 $generated@@281) ($generated@@279 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@283) $generated@@68) (= (type $generated@@284) $generated@@68)) (= (type $generated@@285) $generated@@157)) (= (type $generated@@286) $generated@@157)) (= (type $generated@@287) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@287)) (= ($generated@@78 ($generated@@238 $generated@@285 $generated@@286) ($generated@@148 $generated@@283 $generated@@284) $generated@@287)  (and ($generated@@282 $generated@@285 $generated@@283 $generated@@287) ($generated@@282 $generated@@286 $generated@@284 $generated@@287))))
 :pattern ( ($generated@@78 ($generated@@238 $generated@@285 $generated@@286) ($generated@@148 $generated@@283 $generated@@284) $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@81) (= ($generated@@147 $generated@@288) (= ($generated@@162 $generated@@288) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@81) (= ($generated@@279 $generated@@289) (= ($generated@@162 $generated@@289) $generated@@63)))
 :pattern ( ($generated@@279 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@81) (= ($generated@@252 $generated@@290) (= ($generated@@162 $generated@@290) $generated@@65)))
 :pattern ( ($generated@@252 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@81) ($generated@@147 $generated@@291)) (exists (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (and (and (= (type $generated@@292) $generated@@157) (= (type $generated@@293) $generated@@157)) (= $generated@@291 ($generated@@238 $generated@@292 $generated@@293)))
 :no-pattern (type $generated@@292)
 :no-pattern (type $generated@@293)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
)))
 :pattern ( ($generated@@147 $generated@@291))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@81) ($generated@@252 $generated@@294)) (exists (($generated@@295 Int) ($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@81) (= $generated@@294 ($generated@@79 $generated@@295 $generated@@296)))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
)))
 :pattern ( ($generated@@252 $generated@@294))
)))
(assert  (and (and (forall (($generated@@301 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@301)) 17)) (forall (($generated@@302 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@302)) $generated@@302)
 :pattern ( ($generated@@299 $generated@@302))
))) (forall (($generated@@303 T@T) ) (! (= (type ($generated@@297 $generated@@303)) ($generated@@299 $generated@@303))
 :pattern ( ($generated@@297 $generated@@303))
))))
(assert (forall (($generated@@304 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@304)) 0)
 :pattern ( ($generated@@297 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@81) ($generated@@279 $generated@@305)) (= $generated@@305 $generated@@163))
 :pattern ( ($generated@@279 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@157)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@68) (= (type $generated@@310) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@282 ($generated@@306 $generated@@308) $generated@@309 $generated@@310) ($generated@@78 $generated@@308 $generated@@309 $generated@@310)))
 :pattern ( ($generated@@282 ($generated@@306 $generated@@308) $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@313 T@T) ) (! (= (type ($generated@@312 $generated@@313)) ($generated@@82 $generated@@313 $generated@@2))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@86 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@82 $generated@@315 $generated@@2)) (and (= (= ($generated@@311 $generated@@314) 0) (= $generated@@314 ($generated@@312 $generated@@315))) (=> (not (= ($generated@@311 $generated@@314) 0)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) (< 0 ($generated ($generated@@88 $generated@@314 $generated@@316))))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@311 $generated@@314))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 18)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@82 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@88 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@88 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 19)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@82 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@88 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@88 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@86 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@82 $generated@@354 $generated@@2)) (= ($generated@@166 $generated@@353) (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@354) (and (<= 0 ($generated ($generated@@88 $generated@@353 $generated@@355))) (<= ($generated ($generated@@88 $generated@@353 $generated@@355)) ($generated@@311 $generated@@353))))
 :pattern ( ($generated@@88 $generated@@353 $generated@@355))
)))))
 :pattern ( ($generated@@166 $generated@@353))
)))
(assert (forall (($generated@@357 T@T) ($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@357 $generated@@358)) $generated@@357)
 :pattern ( ($generated@@356 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@157) ($generated@@239 $generated@@359 $generated@@80)) (and (= ($generated@@306 ($generated@@356 $generated@@81 $generated@@359)) $generated@@359) ($generated@@145 ($generated@@356 $generated@@81 $generated@@359) $generated@@80)))
 :pattern ( ($generated@@239 $generated@@359 $generated@@80))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@321 (type $generated@@360))))
(let (($generated@@362 ($generated@@320 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@319 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@318 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@88 ($generated@@317 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@317 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@321 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@82 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@321 (type $generated@@367))))
(let (($generated@@369 ($generated@@320 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@319 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@318 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@88 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@339 (type $generated@@371))))
(let (($generated@@373 ($generated@@338 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@337 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@336 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@88 ($generated@@335 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@335 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@339 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@82 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@339 (type $generated@@378))))
(let (($generated@@380 ($generated@@338 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@337 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@336 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@88 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@82 $generated@@157 $generated@@2)) (= (type $generated@@383) $generated@@68)) (= ($generated@@145 $generated@@382 ($generated@@165 $generated@@383)) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@157) (< 0 ($generated ($generated@@88 $generated@@382 $generated@@384)))) ($generated@@239 $generated@@384 $generated@@383))
 :pattern ( ($generated@@88 $generated@@382 $generated@@384))
))))
 :pattern ( ($generated@@145 $generated@@382 ($generated@@165 $generated@@383)))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@385) ($generated@@82 $generated@@157 $generated@@4)) (= (type $generated@@386) $generated@@68)) (= (type $generated@@387) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@385 ($generated@@263 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@157) ($generated@@0 ($generated@@88 $generated@@385 $generated@@388))) ($generated@@282 $generated@@388 $generated@@386 $generated@@387))
 :pattern ( ($generated@@88 $generated@@385 $generated@@388))
))))
 :pattern ( ($generated@@78 $generated@@385 ($generated@@263 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) ($generated@@82 $generated@@157 $generated@@4)) (= (type $generated@@390) $generated@@68)) (= (type $generated@@391) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@389 ($generated@@268 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@157) ($generated@@0 ($generated@@88 $generated@@389 $generated@@392))) ($generated@@282 $generated@@392 $generated@@390 $generated@@391))
 :pattern ( ($generated@@88 $generated@@389 $generated@@392))
))))
 :pattern ( ($generated@@78 $generated@@389 ($generated@@268 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(= ($generated ($generated@@88 ($generated@@312 $generated@@394) $generated@@393)) 0))
 :pattern ( (let (($generated@@394 (type $generated@@393)))
($generated@@88 ($generated@@312 $generated@@394) $generated@@393)))
)))
(assert  (and (forall (($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@397)) ($generated@@82 $generated@@157 $generated@@4))
 :pattern ( ($generated@@395 $generated@@397))
)) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@321 (type $generated@@398))))
(let (($generated@@400 ($generated@@320 (type $generated@@398))))
(= (type ($generated@@396 $generated@@398)) ($generated@@82 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@396 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@319 $generated@@157 $generated@@157)) (= (type $generated@@402) $generated@@157)) (= ($generated@@0 ($generated@@88 ($generated@@395 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@88 ($generated@@317 $generated@@401) ($generated@@155 ($generated@@356 $generated@@81 $generated@@402)))) (= ($generated@@88 ($generated@@396 $generated@@401) ($generated@@155 ($generated@@356 $generated@@81 $generated@@402))) ($generated@@156 ($generated@@356 $generated@@81 $generated@@402))))))
 :pattern ( ($generated@@88 ($generated@@395 $generated@@401) $generated@@402))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@82 $generated@@157 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@339 (type $generated@@406))))
(let (($generated@@408 ($generated@@338 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@82 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@337 $generated@@157 $generated@@157)) (= (type $generated@@410) $generated@@157)) (= ($generated@@0 ($generated@@88 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@88 ($generated@@335 $generated@@409) ($generated@@155 ($generated@@356 $generated@@81 $generated@@410)))) (= ($generated@@88 ($generated@@404 $generated@@409) ($generated@@155 ($generated@@356 $generated@@81 $generated@@410))) ($generated@@156 ($generated@@356 $generated@@81 $generated@@410))))))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(let (($generated@@414 ($generated@@320 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@319 $generated@@414 $generated@@413)) (= ($generated@@0 ($generated@@88 ($generated@@364 $generated@@411) $generated@@412)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) (and ($generated@@0 ($generated@@88 ($generated@@317 $generated@@411) $generated@@415)) (= $generated@@412 ($generated@@88 ($generated@@396 $generated@@411) $generated@@415))))
 :pattern ( ($generated@@88 ($generated@@317 $generated@@411) $generated@@415))
 :pattern ( ($generated@@88 ($generated@@396 $generated@@411) $generated@@415))
))))))
 :pattern ( ($generated@@88 ($generated@@364 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(let (($generated@@419 ($generated@@338 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@337 $generated@@419 $generated@@418)) (= ($generated@@0 ($generated@@88 ($generated@@375 $generated@@416) $generated@@417)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) (and ($generated@@0 ($generated@@88 ($generated@@335 $generated@@416) $generated@@420)) (= $generated@@417 ($generated@@88 ($generated@@404 $generated@@416) $generated@@420))))
 :pattern ( ($generated@@88 ($generated@@335 $generated@@416) $generated@@420))
 :pattern ( ($generated@@88 ($generated@@404 $generated@@416) $generated@@420))
))))))
 :pattern ( ($generated@@88 ($generated@@375 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@68)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@319 $generated@@157 $generated@@157)) (= (type $generated@@425) $generated@@68)) (= (type $generated@@426) $generated@@68)) (= (type $generated@@427) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@157) ($generated@@0 ($generated@@88 ($generated@@317 $generated@@424) $generated@@428))) (and ($generated@@282 ($generated@@88 ($generated@@396 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@282 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@88 ($generated@@396 $generated@@424) $generated@@428))
 :pattern ( ($generated@@88 ($generated@@317 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@78 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@68)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@337 $generated@@157 $generated@@157)) (= (type $generated@@433) $generated@@68)) (= (type $generated@@434) $generated@@68)) (= (type $generated@@435) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@157) ($generated@@0 ($generated@@88 ($generated@@335 $generated@@432) $generated@@436))) (and ($generated@@282 ($generated@@88 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@282 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@88 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@88 ($generated@@335 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@78 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@81) ($generated@@145 $generated@@437 $generated@@80)) (or ($generated@@279 $generated@@437) ($generated@@252 $generated@@437)))
 :pattern ( ($generated@@252 $generated@@437) ($generated@@145 $generated@@437 $generated@@80))
 :pattern ( ($generated@@279 $generated@@437) ($generated@@145 $generated@@437 $generated@@80))
)))
(assert  (=> (<= 1 $generated@@258) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@81) (or ($generated@@260 ($generated@@275 $generated@@438)) (and (not (= 1 $generated@@258)) (and ($generated@@145 $generated@@438 $generated@@80) ($generated@@0 ($generated@@275 ($generated@@11 ($generated@@252 ($generated@@275 $generated@@438))))))))) (= ($generated@@259 ($generated@@275 $generated@@438)) (let (($generated@@439 ($generated@@253 ($generated@@275 $generated@@438))))
$generated@@439)))
 :weight 3
 :pattern ( ($generated@@259 ($generated@@275 $generated@@438)))
))))
(assert (forall (($generated@@441 T@T) ) (! (= (type ($generated@@440 $generated@@441)) ($generated@@82 $generated@@441 $generated@@4))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@339 (type $generated@@442))))
(let (($generated@@444 ($generated@@338 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@337 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@336 $generated@@444 $generated@@443)) (= ($generated@@335 $generated@@442) ($generated@@440 $generated@@444))))))
 :pattern ( ($generated@@335 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@339 (type $generated@@445))))
(let (($generated@@447 ($generated@@338 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@337 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@336 $generated@@447 $generated@@446)) (= ($generated@@375 $generated@@445) ($generated@@440 $generated@@446))))))
 :pattern ( ($generated@@375 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@339 (type $generated@@448))))
(let (($generated@@450 ($generated@@338 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@337 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@336 $generated@@450 $generated@@449)) (= ($generated@@403 $generated@@448) ($generated@@440 $generated@@157))))))
 :pattern ( ($generated@@403 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@321 (type $generated@@451))))
(let (($generated@@453 ($generated@@320 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@319 $generated@@453 $generated@@452)) (or (= $generated@@451 ($generated@@318 $generated@@453 $generated@@452)) (exists (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (and (and (= (type $generated@@454) $generated@@157) (= (type $generated@@455) $generated@@157)) ($generated@@0 ($generated@@88 ($generated@@395 $generated@@451) ($generated@@306 ($generated@@238 $generated@@454 $generated@@455)))))
 :no-pattern (type $generated@@454)
 :no-pattern (type $generated@@455)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
))))))
 :pattern ( ($generated@@395 $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@339 (type $generated@@456))))
(let (($generated@@458 ($generated@@338 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@337 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@336 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@157) (= (type $generated@@460) $generated@@157)) ($generated@@0 ($generated@@88 ($generated@@403 $generated@@456) ($generated@@306 ($generated@@238 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@403 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@157) ($generated@@239 $generated@@461 $generated@@46)) (and (= ($generated@@306 ($generated@@356 $generated@@2 $generated@@461)) $generated@@461) ($generated@@145 ($generated@@356 $generated@@2 $generated@@461) $generated@@46)))
 :pattern ( ($generated@@239 $generated@@461 $generated@@46))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@157) ($generated@@239 $generated@@462 $generated@@47)) (and (= ($generated@@306 ($generated@@356 $generated@@3 $generated@@462)) $generated@@462) ($generated@@145 ($generated@@356 $generated@@3 $generated@@462) $generated@@47)))
 :pattern ( ($generated@@239 $generated@@462 $generated@@47))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@157) ($generated@@239 $generated@@463 $generated@@44)) (and (= ($generated@@306 ($generated@@356 $generated@@4 $generated@@463)) $generated@@463) ($generated@@145 ($generated@@356 $generated@@4 $generated@@463) $generated@@44)))
 :pattern ( ($generated@@239 $generated@@463 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@464) 20))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@157) ($generated@@239 $generated@@465 $generated@@45)) (and (= ($generated@@306 ($generated@@356 $generated@@464 $generated@@465)) $generated@@465) ($generated@@145 ($generated@@356 $generated@@464 $generated@@465) $generated@@45)))
 :pattern ( ($generated@@239 $generated@@465 $generated@@45))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@68) (= ($generated@@239 ($generated@@306 $generated@@466) $generated@@467) ($generated@@145 $generated@@466 $generated@@467)))
 :pattern ( ($generated@@239 ($generated@@306 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@86 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@82 $generated@@469 $generated@@2)) (<= 0 ($generated@@311 $generated@@468))))
 :pattern ( ($generated@@311 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@300 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@299 $generated@@471)) (<= 0 ($generated@@298 $generated@@470))))
 :pattern ( ($generated@@298 $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@68)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@68) (= (type $generated@@475) $generated@@68)) (= ($generated@@472 ($generated@@421 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@421 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@68)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@68) (= (type $generated@@479) $generated@@68)) (= ($generated@@476 ($generated@@421 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@421 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@68) (= (type $generated@@481) $generated@@68)) (= ($generated@@76 ($generated@@421 $generated@@480 $generated@@481)) $generated@@58))
 :pattern ( ($generated@@421 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@68)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@68) (= (type $generated@@485) $generated@@68)) (= ($generated@@482 ($generated@@429 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@429 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@68) (= (type $generated@@489) $generated@@68)) (= ($generated@@486 ($generated@@429 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@429 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@68) (= (type $generated@@491) $generated@@68)) (= ($generated@@76 ($generated@@429 $generated@@490 $generated@@491)) $generated@@59))
 :pattern ( ($generated@@429 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@157) (= (type $generated@@493) $generated@@157)) (= ($generated@@162 ($generated@@238 $generated@@492 $generated@@493)) $generated@@61))
 :pattern ( ($generated@@238 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@68)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@68) (= (type $generated@@497) $generated@@68)) (= ($generated@@494 ($generated@@148 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@148 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@68)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@68) (= (type $generated@@501) $generated@@68)) (= ($generated@@498 ($generated@@148 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@148 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@157) (= (type $generated@@503) $generated@@157)) (= ($generated@@155 ($generated@@238 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@238 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@157) (= (type $generated@@505) $generated@@157)) (= ($generated@@156 ($generated@@238 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@238 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 Int) ($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@81) (= ($generated@@162 ($generated@@79 $generated@@506 $generated@@507)) $generated@@65))
 :pattern ( ($generated@@79 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 Int) ($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@81) (= ($generated@@253 ($generated@@79 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@79 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 Int) ($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@81) (= ($generated@@254 ($generated@@79 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@79 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@300 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@299 $generated@@157)) (= (type $generated@@519) $generated@@68)) (= (type $generated@@520) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@298 $generated@@518))) ($generated@@282 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@78 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@141 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@141 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@68)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@68) (= ($generated@@524 ($generated@@263 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@263 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@68) (= ($generated@@76 ($generated@@263 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@263 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@68)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@68) (= ($generated@@528 ($generated@@268 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@268 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@68) (= ($generated@@76 ($generated@@268 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@268 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@68)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@68) (= ($generated@@532 ($generated@@165 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@165 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@68) (= ($generated@@76 ($generated@@165 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@165 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@68)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@68) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@68) (= ($generated@@76 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
(= ($generated@@356 $generated@@541 ($generated@@306 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@306 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@542) ($generated@@319 $generated@@157 $generated@@157)) (= (type $generated@@543) $generated@@68)) (= (type $generated@@544) $generated@@68)) (= ($generated@@145 $generated@@542 ($generated@@421 $generated@@543 $generated@@544)) (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@157) ($generated@@0 ($generated@@88 ($generated@@317 $generated@@542) $generated@@545))) (and ($generated@@239 ($generated@@88 ($generated@@396 $generated@@542) $generated@@545) $generated@@544) ($generated@@239 $generated@@545 $generated@@543)))
 :pattern ( ($generated@@88 ($generated@@396 $generated@@542) $generated@@545))
 :pattern ( ($generated@@88 ($generated@@317 $generated@@542) $generated@@545))
))))
 :pattern ( ($generated@@145 $generated@@542 ($generated@@421 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@337 $generated@@157 $generated@@157)) (= (type $generated@@547) $generated@@68)) (= (type $generated@@548) $generated@@68)) (= ($generated@@145 $generated@@546 ($generated@@429 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@157) ($generated@@0 ($generated@@88 ($generated@@335 $generated@@546) $generated@@549))) (and ($generated@@239 ($generated@@88 ($generated@@404 $generated@@546) $generated@@549) $generated@@548) ($generated@@239 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@88 ($generated@@404 $generated@@546) $generated@@549))
 :pattern ( ($generated@@88 ($generated@@335 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@145 $generated@@546 ($generated@@429 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@157) (= (type $generated@@553) $generated@@157)) (< ($generated@@550 $generated@@552) ($generated@@551 ($generated@@238 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@238 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@157) (= (type $generated@@555) $generated@@157)) (< ($generated@@550 $generated@@555) ($generated@@551 ($generated@@238 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@238 $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 Int) ($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@81) (< ($generated@@551 $generated@@557) ($generated@@551 ($generated@@79 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@79 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (and (= (type $generated@@558) $generated@@157) (= (type $generated@@559) $generated@@68)) (= (type $generated@@560) $generated@@68)) ($generated@@239 $generated@@558 ($generated@@421 $generated@@559 $generated@@560))) (and (= ($generated@@306 ($generated@@356 ($generated@@319 $generated@@157 $generated@@157) $generated@@558)) $generated@@558) ($generated@@145 ($generated@@356 ($generated@@319 $generated@@157 $generated@@157) $generated@@558) ($generated@@421 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@239 $generated@@558 ($generated@@421 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (and (= (type $generated@@561) $generated@@157) (= (type $generated@@562) $generated@@68)) (= (type $generated@@563) $generated@@68)) ($generated@@239 $generated@@561 ($generated@@429 $generated@@562 $generated@@563))) (and (= ($generated@@306 ($generated@@356 ($generated@@337 $generated@@157 $generated@@157) $generated@@561)) $generated@@561) ($generated@@145 ($generated@@356 ($generated@@337 $generated@@157 $generated@@157) $generated@@561) ($generated@@429 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@239 $generated@@561 ($generated@@429 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@68) (= (type $generated@@565) $generated@@68)) (= (type $generated@@566) $generated@@157)) ($generated@@239 $generated@@566 ($generated@@148 $generated@@564 $generated@@565))) (and (= ($generated@@306 ($generated@@356 $generated@@81 $generated@@566)) $generated@@566) ($generated@@145 ($generated@@356 $generated@@81 $generated@@566) ($generated@@148 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@239 $generated@@566 ($generated@@148 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@567)))
 (not ($generated@@0 ($generated@@88 ($generated@@440 $generated@@568) $generated@@567))))
 :pattern ( (let (($generated@@568 (type $generated@@567)))
($generated@@88 ($generated@@440 $generated@@568) $generated@@567)))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@73)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@68) (= (type $generated@@572) $generated@@68)) (and (= ($generated@@76 ($generated@@148 $generated@@571 $generated@@572)) $generated@@62) (= ($generated@@569 ($generated@@148 $generated@@571 $generated@@572)) $generated@@66)))
 :pattern ( ($generated@@148 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@81) (= (type $generated@@574) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@574) (and ($generated@@252 $generated@@573) ($generated@@78 $generated@@573 $generated@@80 $generated@@574)))) ($generated@@78 ($generated@@8 ($generated@@253 $generated@@573)) $generated@@46 $generated@@574))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@253 $generated@@573)) $generated@@46 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@81) (= ($generated@@550 ($generated@@306 $generated@@575)) ($generated@@551 $generated@@575)))
 :pattern ( ($generated@@550 ($generated@@306 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@157) ($generated@@239 $generated@@576 ($generated@@141 0))) (and (= ($generated@@306 ($generated@@356 $generated@@2 $generated@@576)) $generated@@576) ($generated@@145 ($generated@@356 ($generated@@82 $generated@@157 $generated@@4) $generated@@576) ($generated@@141 0))))
 :pattern ( ($generated@@239 $generated@@576 ($generated@@141 0)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@157) (= (type $generated@@578) $generated@@68)) ($generated@@239 $generated@@577 ($generated@@263 $generated@@578))) (and (= ($generated@@306 ($generated@@356 ($generated@@82 $generated@@157 $generated@@4) $generated@@577)) $generated@@577) ($generated@@145 ($generated@@356 ($generated@@82 $generated@@157 $generated@@4) $generated@@577) ($generated@@263 $generated@@578))))
 :pattern ( ($generated@@239 $generated@@577 ($generated@@263 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@157) (= (type $generated@@580) $generated@@68)) ($generated@@239 $generated@@579 ($generated@@268 $generated@@580))) (and (= ($generated@@306 ($generated@@356 ($generated@@82 $generated@@157 $generated@@4) $generated@@579)) $generated@@579) ($generated@@145 ($generated@@356 ($generated@@82 $generated@@157 $generated@@4) $generated@@579) ($generated@@268 $generated@@580))))
 :pattern ( ($generated@@239 $generated@@579 ($generated@@268 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@157) (= (type $generated@@582) $generated@@68)) ($generated@@239 $generated@@581 ($generated@@165 $generated@@582))) (and (= ($generated@@306 ($generated@@356 ($generated@@82 $generated@@157 $generated@@2) $generated@@581)) $generated@@581) ($generated@@145 ($generated@@356 ($generated@@82 $generated@@157 $generated@@2) $generated@@581) ($generated@@165 $generated@@582))))
 :pattern ( ($generated@@239 $generated@@581 ($generated@@165 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@157) (= (type $generated@@584) $generated@@68)) ($generated@@239 $generated@@583 ($generated@@512 $generated@@584))) (and (= ($generated@@306 ($generated@@356 ($generated@@299 $generated@@157) $generated@@583)) $generated@@583) ($generated@@145 ($generated@@356 ($generated@@299 $generated@@157) $generated@@583) ($generated@@512 $generated@@584))))
 :pattern ( ($generated@@239 $generated@@583 ($generated@@512 $generated@@584)))
)))
(assert (= ($generated@@76 $generated@@80) $generated@@64))
(assert (= ($generated@@569 $generated@@80) $generated@@67))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@82 $generated@@157 $generated@@2)) (= (type $generated@@586) $generated@@68)) (= (type $generated@@587) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@585 ($generated@@165 $generated@@586) $generated@@587) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@157) (< 0 ($generated ($generated@@88 $generated@@585 $generated@@588)))) ($generated@@282 $generated@@588 $generated@@586 $generated@@587))
 :pattern ( ($generated@@88 $generated@@585 $generated@@588))
))))
 :pattern ( ($generated@@78 $generated@@585 ($generated@@165 $generated@@586) $generated@@587))
)))
(assert (= $generated@@163 ($generated@@275 $generated@@163)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@81) (= (type $generated@@590) $generated@@68)) (= (type $generated@@591) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@591) (and ($generated@@147 $generated@@589) (exists (($generated@@592 T@U) ) (!  (and (= (type $generated@@592) $generated@@68) ($generated@@78 $generated@@589 ($generated@@148 $generated@@590 $generated@@592) $generated@@591))
 :pattern ( ($generated@@78 $generated@@589 ($generated@@148 $generated@@590 $generated@@592) $generated@@591))
))))) ($generated@@282 ($generated@@155 $generated@@589) $generated@@590 $generated@@591))
 :pattern ( ($generated@@282 ($generated@@155 $generated@@589) $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@81) (= (type $generated@@594) $generated@@68)) (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@595) (and ($generated@@147 $generated@@593) (exists (($generated@@596 T@U) ) (!  (and (= (type $generated@@596) $generated@@68) ($generated@@78 $generated@@593 ($generated@@148 $generated@@596 $generated@@594) $generated@@595))
 :pattern ( ($generated@@78 $generated@@593 ($generated@@148 $generated@@596 $generated@@594) $generated@@595))
))))) ($generated@@282 ($generated@@156 $generated@@593) $generated@@594 $generated@@595))
 :pattern ( ($generated@@282 ($generated@@156 $generated@@593) $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@81) (= (type $generated@@598) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@598) (and ($generated@@252 $generated@@597) ($generated@@78 $generated@@597 $generated@@80 $generated@@598)))) ($generated@@78 ($generated@@254 $generated@@597) $generated@@80 $generated@@598))
 :pattern ( ($generated@@78 ($generated@@254 $generated@@597) $generated@@80 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@157) (= (type $generated@@600) $generated@@157)) (= ($generated@@238 ($generated@@275 $generated@@599) ($generated@@275 $generated@@600)) ($generated@@275 ($generated@@238 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@238 ($generated@@275 $generated@@599) ($generated@@275 $generated@@600)))
)))
(assert (forall (($generated@@601 Int) ($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@81) (= ($generated@@79 ($generated@@273 $generated@@601) ($generated@@275 $generated@@602)) ($generated@@275 ($generated@@79 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@79 ($generated@@273 $generated@@601) ($generated@@275 $generated@@602)))
)))
(assert (forall (($generated@@603 Int) ) (! (= ($generated@@306 ($generated@@8 ($generated@@273 $generated@@603))) ($generated@@275 ($generated@@306 ($generated@@8 $generated@@603))))
 :pattern ( ($generated@@306 ($generated@@8 ($generated@@273 $generated@@603))))
)))
(assert (forall (($generated@@604 T@U) ) (! (= ($generated@@306 ($generated@@275 $generated@@604)) ($generated@@275 ($generated@@306 $generated@@604)))
 :pattern ( ($generated@@306 ($generated@@275 $generated@@604)))
)))
(assert (forall (($generated@@605 Int) ($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@81) (= ($generated@@145 ($generated@@79 $generated@@605 $generated@@606) $generated@@80)  (and ($generated@@145 ($generated@@8 $generated@@605) $generated@@46) ($generated@@145 $generated@@606 $generated@@80))))
 :pattern ( ($generated@@145 ($generated@@79 $generated@@605 $generated@@606) $generated@@80))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 ($generated@@300 (type $generated@@607))))
 (=> (and (= (type $generated@@607) ($generated@@299 $generated@@608)) (= ($generated@@298 $generated@@607) 0)) (= $generated@@607 ($generated@@297 $generated@@608))))
 :pattern ( ($generated@@298 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@610)))
 (=> (and (and (= (type $generated@@609) ($generated@@82 $generated@@612 $generated@@2)) (= (type $generated@@611) $generated@@2)) (<= 0 ($generated $generated@@611))) (= ($generated@@311 ($generated@@89 $generated@@609 $generated@@610 $generated@@611)) (+ (- ($generated@@311 $generated@@609) ($generated ($generated@@88 $generated@@609 $generated@@610))) ($generated $generated@@611)))))
 :pattern ( ($generated@@311 ($generated@@89 $generated@@609 $generated@@610 $generated@@611)))
)))
(assert  (=> (<= 1 $generated@@258) (forall (($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@613) $generated@@81) (or ($generated@@260 $generated@@613) (and (not (= 1 $generated@@258)) (and ($generated@@145 $generated@@613 $generated@@80) ($generated@@252 $generated@@613))))) (= ($generated@@259 $generated@@613) ($generated@@253 $generated@@613)))
 :pattern ( ($generated@@259 $generated@@613))
))))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@615) $generated@@2)) ($generated@@78 $generated@@615 $generated@@46 $generated@@614))
 :pattern ( ($generated@@78 $generated@@615 $generated@@46 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@617) $generated@@3)) ($generated@@78 $generated@@617 $generated@@47 $generated@@616))
 :pattern ( ($generated@@78 $generated@@617 $generated@@47 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@619) $generated@@4)) ($generated@@78 $generated@@619 $generated@@44 $generated@@618))
 :pattern ( ($generated@@78 $generated@@619 $generated@@44 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@621) $generated@@464)) ($generated@@78 $generated@@621 $generated@@45 $generated@@620))
 :pattern ( ($generated@@78 $generated@@621 $generated@@45 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@623) $generated@@157)) ($generated@@78 $generated@@623 $generated@@48 $generated@@622))
 :pattern ( ($generated@@78 $generated@@623 $generated@@48 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@299 $generated@@157)) (= (type $generated@@625) $generated@@68)) (= ($generated@@145 $generated@@624 ($generated@@512 $generated@@625)) (forall (($generated@@626 Int) ) (!  (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@298 $generated@@624))) ($generated@@239 ($generated@@513 $generated@@624 $generated@@626) $generated@@625))
 :pattern ( ($generated@@513 $generated@@624 $generated@@626))
))))
 :pattern ( ($generated@@145 $generated@@624 ($generated@@512 $generated@@625)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 Int) ) (!  (=> (= (type $generated@@628) ($generated@@299 $generated@@157)) (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@298 $generated@@628))) (< ($generated@@551 ($generated@@356 $generated@@81 ($generated@@513 $generated@@628 $generated@@629))) ($generated@@627 $generated@@628))))
 :pattern ( ($generated@@551 ($generated@@356 $generated@@81 ($generated@@513 $generated@@628 $generated@@629))))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@319 $generated@@157 $generated@@157)) (= (type $generated@@631) $generated@@68)) (= (type $generated@@632) $generated@@68)) ($generated@@145 $generated@@630 ($generated@@421 $generated@@631 $generated@@632))) (and (and ($generated@@145 ($generated@@317 $generated@@630) ($generated@@263 $generated@@631)) ($generated@@145 ($generated@@364 $generated@@630) ($generated@@263 $generated@@632))) ($generated@@145 ($generated@@395 $generated@@630) ($generated@@263 ($generated@@148 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@145 $generated@@630 ($generated@@421 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) ($generated@@337 $generated@@157 $generated@@157)) (= (type $generated@@634) $generated@@68)) (= (type $generated@@635) $generated@@68)) ($generated@@145 $generated@@633 ($generated@@429 $generated@@634 $generated@@635))) (and (and ($generated@@145 ($generated@@335 $generated@@633) ($generated@@268 $generated@@634)) ($generated@@145 ($generated@@375 $generated@@633) ($generated@@268 $generated@@635))) ($generated@@145 ($generated@@403 $generated@@633) ($generated@@268 ($generated@@148 $generated@@634 $generated@@635)))))
 :pattern ( ($generated@@145 $generated@@633 ($generated@@429 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@2) ($generated@@145 $generated@@636 $generated@@46))
 :pattern ( ($generated@@145 $generated@@636 $generated@@46))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@3) ($generated@@145 $generated@@637 $generated@@47))
 :pattern ( ($generated@@145 $generated@@637 $generated@@47))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@4) ($generated@@145 $generated@@638 $generated@@44))
 :pattern ( ($generated@@145 $generated@@638 $generated@@44))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@464) ($generated@@145 $generated@@639 $generated@@45))
 :pattern ( ($generated@@145 $generated@@639 $generated@@45))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@157) ($generated@@145 $generated@@640 $generated@@48))
 :pattern ( ($generated@@145 $generated@@640 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () Int)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@641) $generated@@81) (= (type $generated@@644) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@642) ($generated@@172 $generated@@83 $generated@@4))) (= (type $generated@@643) $generated@@83)) (= (type $generated@@645) $generated@@81)) (= (type $generated@@646) $generated@@81)) (= (type $generated@@648) ($generated@@172 $generated@@83 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@650  (=> (= (ControlFlow 0 6) (- 0 5)) (= ($generated@@259 $generated@@641) ($generated@@253 $generated@@641)))))
(let (($generated@@651  (=> (= $generated@@642 ($generated@@226 $generated@@643 $generated@@644 $generated@@60 false)) (=> (and (and ($generated@@145 $generated@@645 $generated@@80) ($generated@@78 $generated@@645 $generated@@80 $generated@@644)) (and (= $generated@@646 $generated@@641) ($generated@@145 $generated@@646 $generated@@80))) (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@252 $generated@@646)) (=> ($generated@@252 $generated@@646) (=> (and (and (= ($generated@@79 $generated@@647 $generated@@645) $generated@@646) (= ($generated@@259 $generated@@641) $generated@@647)) (and ($generated@@145 ($generated@@8 ($generated@@259 $generated@@641)) $generated@@46) (= (ControlFlow 0 7) 6))) $generated@@650)))))))
(let (($generated@@652  (=> ($generated@@78 $generated@@641 $generated@@80 $generated@@644) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@252 $generated@@641)) (=> ($generated@@252 $generated@@641) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (= $generated@@641 $generated@@641) (< ($generated@@551 $generated@@641) ($generated@@551 $generated@@641)))) (=> (or (= $generated@@641 $generated@@641) (< ($generated@@551 $generated@@641) ($generated@@551 $generated@@641))) (=> (and (or (= $generated@@641 $generated@@641) ($generated@@260 $generated@@641)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@252 $generated@@641)))))))))
(let (($generated@@653  (=> (and (= $generated@@648 ($generated@@171 $generated@@643 $generated@@644 $generated@@60 false)) ($generated@@252 $generated@@641)) (and (=> (= (ControlFlow 0 9) 2) $generated@@652) (=> (= (ControlFlow 0 9) 7) $generated@@651)))))
(let (($generated@@654  (=> (and (and (and ($generated@@85 $generated@@644) ($generated@@649 $generated@@644)) ($generated@@145 $generated@@641 $generated@@80)) (and (= 1 $generated@@258) (= (ControlFlow 0 10) 9))) $generated@@653)))
$generated@@654))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (Int) T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@154 (T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@170 (T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@172 (T@T T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@226 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U T@U) Bool)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 (T@U) Int)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (Int) Int)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@277 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@293 (T@U) Int)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@300 () Int)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@302 (T@U) Bool)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@U)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@318 (T@T T@T) T@U)
(declare-fun $generated@@319 (T@T T@T) T@T)
(declare-fun $generated@@320 (T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@336 (T@T T@T) T@U)
(declare-fun $generated@@337 (T@T T@T) T@T)
(declare-fun $generated@@338 (T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@356 (T@T T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@T) T@U)
(declare-fun $generated@@463 () T@T)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@512 (T@U Int) T@U)
(declare-fun $generated@@521 (T@U) Int)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@550 (T@U) Int)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@627 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 11) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@92 $generated@@93)) 12))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@82 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@82 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@82 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@82 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@71 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@84) 14)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@84)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@71 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ($generated@@137 T@U) ) (! (= (type ($generated@@79 $generated@@136 $generated@@137)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@136 $generated@@137))
))) (= (type $generated@@80) $generated@@68)))
(assert (forall (($generated@@138 Int) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (and (= (type $generated@@139) $generated@@81) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@140)) (= ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140)  (and ($generated@@78 ($generated@@8 $generated@@138) $generated@@46 $generated@@140) ($generated@@78 $generated@@139 $generated@@80 $generated@@140))))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@138 $generated@@139) $generated@@80 $generated@@140))
)))
(assert (forall (($generated@@142 Int) ) (! (= (type ($generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@78 $generated@@143 ($generated@@141 0) $generated@@144))
 :pattern ( ($generated@@78 $generated@@143 ($generated@@141 0) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@141 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@141 0)))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= (type ($generated@@148 $generated@@149 $generated@@150)) $generated@@68)
 :pattern ( ($generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (and (= (type $generated@@151) $generated@@68) (= (type $generated@@152) $generated@@68)) (= (type $generated@@153) $generated@@81)) ($generated@@145 $generated@@153 ($generated@@148 $generated@@151 $generated@@152))) ($generated@@147 $generated@@153))
 :pattern ( ($generated@@147 $generated@@153) ($generated@@145 $generated@@153 ($generated@@148 $generated@@151 $generated@@152)))
)))
(assert  (and (and (= ($generated@@1 $generated@@157) 15) (forall (($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@155 $generated@@158))
))) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@157)
 :pattern ( ($generated@@156 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) $generated@@81) (= (type $generated@@161) $generated@@81)) true) (= ($generated@@154 $generated@@160 $generated@@161)  (and (= ($generated@@155 $generated@@160) ($generated@@155 $generated@@161)) (= ($generated@@156 $generated@@160) ($generated@@156 $generated@@161)))))
 :pattern ( ($generated@@154 $generated@@160 $generated@@161))
)))
(assert  (and (forall (($generated@@164 T@U) ) (! (= (type ($generated@@162 $generated@@164)) $generated@@72)
 :pattern ( ($generated@@162 $generated@@164))
)) (= (type $generated@@163) $generated@@81)))
(assert (= ($generated@@162 $generated@@163) $generated@@63))
(assert (forall (($generated@@167 T@U) ) (! (= (type ($generated@@165 $generated@@167)) $generated@@68)
 :pattern ( ($generated@@165 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) ($generated@@82 $generated@@157 $generated@@2)) (= (type $generated@@169) $generated@@68)) ($generated@@145 $generated@@168 ($generated@@165 $generated@@169))) ($generated@@166 $generated@@168))
 :pattern ( ($generated@@145 $generated@@168 ($generated@@165 $generated@@169)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (= ($generated@@1 ($generated@@172 $generated@@176 $generated@@177)) 16)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@173 ($generated@@172 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@172 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@174 ($generated@@172 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@172 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@174 (type $generated@@182))))
(= (type ($generated@@170 $generated@@182 $generated@@183 $generated@@184)) $generated@@185))
 :pattern ( ($generated@@170 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 (type $generated@@189)))
(let (($generated@@191 (type $generated@@187)))
(= (type ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189)) ($generated@@172 $generated@@191 $generated@@190))))
 :pattern ( ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 ($generated@@174 (type $generated@@192))))
 (=> (= (type $generated@@195) $generated@@196) (= ($generated@@170 ($generated@@175 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@193 $generated@@194) $generated@@195)))
 :weight 0
))) (and (and (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@170 ($generated@@175 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@170 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@170 ($generated@@175 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@170 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or true (= ($generated@@170 ($generated@@175 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@170 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ) (! (= (type ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218)) ($generated@@172 $generated@@83 $generated@@4))
 :pattern ( ($generated@@171 $generated@@215 $generated@@216 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (let (($generated@@225 ($generated@@71 (type $generated@@224))))
 (=> (and (and (and (and (= (type $generated@@219) $generated@@83) (= (type $generated@@220) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@221) ($generated@@70 $generated@@4))) (= (type $generated@@223) $generated@@83)) (= (type $generated@@224) ($generated@@70 $generated@@225))) (= ($generated@@0 ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))  (=> (and (not (= $generated@@223 $generated@@219)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@220 $generated@@223) $generated@@221))) $generated@@222))))
 :pattern ( ($generated@@170 ($generated@@171 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@226 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@172 $generated@@83 $generated@@4))
 :pattern ( ($generated@@226 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@71 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@83) (= (type $generated@@232) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@233) ($generated@@70 $generated@@4))) (= (type $generated@@235) $generated@@83)) (= (type $generated@@236) ($generated@@70 $generated@@237))) (= ($generated@@0 ($generated@@170 ($generated@@226 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@170 ($generated@@226 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@81)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@68) (= (type $generated@@243) $generated@@68)) (= (type $generated@@244) $generated@@157)) (= (type $generated@@245) $generated@@157)) (= ($generated@@145 ($generated@@238 $generated@@244 $generated@@245) ($generated@@148 $generated@@242 $generated@@243))  (and ($generated@@239 $generated@@244 $generated@@242) ($generated@@239 $generated@@245 $generated@@243))))
 :pattern ( ($generated@@145 ($generated@@238 $generated@@244 $generated@@245) ($generated@@148 $generated@@242 $generated@@243)))
)))
(assert ($generated@@145 $generated@@163 $generated@@80))
(assert (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@85 $generated@@246)) ($generated@@78 $generated@@163 $generated@@80 $generated@@246))
 :pattern ( ($generated@@78 $generated@@163 $generated@@80 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@81) (= (type $generated@@248) $generated@@81)) (= ($generated@@154 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@154 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@81) (= (type $generated@@251) $generated@@81)) (= ($generated@@249 $generated@@250 $generated@@251) (= $generated@@250 $generated@@251)))
 :pattern ( ($generated@@249 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@81)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (and (= (type $generated@@256) $generated@@81) (= (type $generated@@257) $generated@@81)) (and ($generated@@252 $generated@@256) ($generated@@252 $generated@@257))) (= ($generated@@249 $generated@@256 $generated@@257)  (and (= ($generated@@253 $generated@@256) ($generated@@253 $generated@@257)) ($generated@@249 ($generated@@254 $generated@@256) ($generated@@254 $generated@@257)))))
 :pattern ( ($generated@@249 $generated@@256 $generated@@257) ($generated@@252 $generated@@256))
 :pattern ( ($generated@@249 $generated@@256 $generated@@257) ($generated@@252 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@68)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@82 $generated@@157 $generated@@4)) (= (type $generated@@261) $generated@@68)) (= ($generated@@145 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@157) ($generated@@0 ($generated@@88 $generated@@260 $generated@@262))) ($generated@@239 $generated@@262 $generated@@261))
 :pattern ( ($generated@@88 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@145 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@68)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@82 $generated@@157 $generated@@4)) (= (type $generated@@266) $generated@@68)) (= ($generated@@145 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@157) ($generated@@0 ($generated@@88 $generated@@265 $generated@@267))) ($generated@@239 $generated@@267 $generated@@266))
 :pattern ( ($generated@@88 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@145 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@269 Int) ) (! (= ($generated@@268 $generated@@269) $generated@@269)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 (type $generated@@271)))
(= (type ($generated@@270 $generated@@271)) $generated@@272))
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@270 $generated@@273) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (= (type $generated@@275) $generated@@81) (= (type $generated@@276) $generated@@81)) (and ($generated@@274 $generated@@275) ($generated@@274 $generated@@276))) (= ($generated@@249 $generated@@275 $generated@@276) true))
 :pattern ( ($generated@@249 $generated@@275 $generated@@276) ($generated@@274 $generated@@275))
 :pattern ( ($generated@@249 $generated@@275 $generated@@276) ($generated@@274 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@278) $generated@@68) (= (type $generated@@279) $generated@@68)) (= (type $generated@@280) $generated@@157)) (= (type $generated@@281) $generated@@157)) (= (type $generated@@282) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@85 $generated@@282)) (= ($generated@@78 ($generated@@238 $generated@@280 $generated@@281) ($generated@@148 $generated@@278 $generated@@279) $generated@@282)  (and ($generated@@277 $generated@@280 $generated@@278 $generated@@282) ($generated@@277 $generated@@281 $generated@@279 $generated@@282))))
 :pattern ( ($generated@@78 ($generated@@238 $generated@@280 $generated@@281) ($generated@@148 $generated@@278 $generated@@279) $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@81) (= ($generated@@147 $generated@@283) (= ($generated@@162 $generated@@283) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@81) (= ($generated@@274 $generated@@284) (= ($generated@@162 $generated@@284) $generated@@63)))
 :pattern ( ($generated@@274 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@81) (= ($generated@@252 $generated@@285) (= ($generated@@162 $generated@@285) $generated@@65)))
 :pattern ( ($generated@@252 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@81) ($generated@@147 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@157) (= (type $generated@@288) $generated@@157)) (= $generated@@286 ($generated@@238 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@147 $generated@@286))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@81) ($generated@@252 $generated@@289)) (exists (($generated@@290 Int) ($generated@@291 T@U) ) (!  (and (= (type $generated@@291) $generated@@81) (= $generated@@289 ($generated@@79 $generated@@290 $generated@@291)))
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
)))
 :pattern ( ($generated@@252 $generated@@289))
)))
(assert  (and (and (forall (($generated@@296 T@T) ) (= ($generated@@1 ($generated@@294 $generated@@296)) 17)) (forall (($generated@@297 T@T) ) (! (= ($generated@@295 ($generated@@294 $generated@@297)) $generated@@297)
 :pattern ( ($generated@@294 $generated@@297))
))) (forall (($generated@@298 T@T) ) (! (= (type ($generated@@292 $generated@@298)) ($generated@@294 $generated@@298))
 :pattern ( ($generated@@292 $generated@@298))
))))
(assert (forall (($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@299)) 0)
 :pattern ( ($generated@@292 $generated@@299))
)))
(assert  (=> (<= 1 $generated@@300) (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@81) (or ($generated@@302 ($generated@@270 $generated@@303)) (and (not (= 1 $generated@@300)) (and ($generated@@145 $generated@@303 $generated@@80) ($generated@@0 ($generated@@270 ($generated@@11  (and ($generated@@252 ($generated@@270 $generated@@303)) ($generated@@274 ($generated@@270 ($generated@@254 ($generated@@270 $generated@@303)))))))))))) (= ($generated@@301 ($generated@@270 $generated@@303)) (let (($generated@@304 ($generated@@253 ($generated@@270 $generated@@303))))
$generated@@304)))
 :weight 3
 :pattern ( ($generated@@301 ($generated@@270 $generated@@303)))
))))
(assert (forall (($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@305) $generated@@81) ($generated@@274 $generated@@305)) (= $generated@@305 $generated@@163))
 :pattern ( ($generated@@274 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@157)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@68) (= (type $generated@@310) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@277 ($generated@@306 $generated@@308) $generated@@309 $generated@@310) ($generated@@78 $generated@@308 $generated@@309 $generated@@310)))
 :pattern ( ($generated@@277 ($generated@@306 $generated@@308) $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@313 T@T) ) (! (= (type ($generated@@312 $generated@@313)) ($generated@@82 $generated@@313 $generated@@2))
 :pattern ( ($generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@86 (type $generated@@314))))
 (=> (= (type $generated@@314) ($generated@@82 $generated@@315 $generated@@2)) (and (= (= ($generated@@311 $generated@@314) 0) (= $generated@@314 ($generated@@312 $generated@@315))) (=> (not (= ($generated@@311 $generated@@314) 0)) (exists (($generated@@316 T@U) ) (!  (and (= (type $generated@@316) $generated@@315) (< 0 ($generated ($generated@@88 $generated@@314 $generated@@316))))
 :no-pattern (type $generated@@316)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
))))))
 :pattern ( ($generated@@311 $generated@@314))
)))
(assert  (and (and (and (and (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (= ($generated@@1 ($generated@@319 $generated@@322 $generated@@323)) 18)) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@320 ($generated@@319 $generated@@324 $generated@@325)) $generated@@324)
 :pattern ( ($generated@@319 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@321 ($generated@@319 $generated@@326 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@319 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@320 (type $generated@@328))))
(= (type ($generated@@317 $generated@@328)) ($generated@@82 $generated@@329 $generated@@4)))
 :pattern ( ($generated@@317 $generated@@328))
))) (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (! (= (type ($generated@@318 $generated@@330 $generated@@331)) ($generated@@319 $generated@@330 $generated@@331))
 :pattern ( ($generated@@318 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@T) ) (! (let (($generated@@334 (type $generated@@332)))
 (not ($generated@@0 ($generated@@88 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332))))
 :pattern ( (let (($generated@@334 (type $generated@@332)))
($generated@@88 ($generated@@317 ($generated@@318 $generated@@334 $generated@@333)) $generated@@332)))
)))
(assert  (and (and (and (and (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (= ($generated@@1 ($generated@@337 $generated@@340 $generated@@341)) 19)) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@338 ($generated@@337 $generated@@342 $generated@@343)) $generated@@342)
 :pattern ( ($generated@@337 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= ($generated@@339 ($generated@@337 $generated@@344 $generated@@345)) $generated@@345)
 :pattern ( ($generated@@337 $generated@@344 $generated@@345))
))) (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@338 (type $generated@@346))))
(= (type ($generated@@335 $generated@@346)) ($generated@@82 $generated@@347 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@346))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= (type ($generated@@336 $generated@@348 $generated@@349)) ($generated@@337 $generated@@348 $generated@@349))
 :pattern ( ($generated@@336 $generated@@348 $generated@@349))
))))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@T) ) (! (let (($generated@@352 (type $generated@@350)))
 (not ($generated@@0 ($generated@@88 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350))))
 :pattern ( (let (($generated@@352 (type $generated@@350)))
($generated@@88 ($generated@@335 ($generated@@336 $generated@@352 $generated@@351)) $generated@@350)))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@86 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@82 $generated@@354 $generated@@2)) (= ($generated@@166 $generated@@353) (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@354) (and (<= 0 ($generated ($generated@@88 $generated@@353 $generated@@355))) (<= ($generated ($generated@@88 $generated@@353 $generated@@355)) ($generated@@311 $generated@@353))))
 :pattern ( ($generated@@88 $generated@@353 $generated@@355))
)))))
 :pattern ( ($generated@@166 $generated@@353))
)))
(assert (forall (($generated@@357 T@T) ($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@357 $generated@@358)) $generated@@357)
 :pattern ( ($generated@@356 $generated@@357 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@157) ($generated@@239 $generated@@359 $generated@@80)) (and (= ($generated@@306 ($generated@@356 $generated@@81 $generated@@359)) $generated@@359) ($generated@@145 ($generated@@356 $generated@@81 $generated@@359) $generated@@80)))
 :pattern ( ($generated@@239 $generated@@359 $generated@@80))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@321 (type $generated@@360))))
(let (($generated@@362 ($generated@@320 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@319 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@318 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@88 ($generated@@317 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@317 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@321 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@82 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@321 (type $generated@@367))))
(let (($generated@@369 ($generated@@320 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@319 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@318 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@88 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@339 (type $generated@@371))))
(let (($generated@@373 ($generated@@338 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@337 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@336 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@88 ($generated@@335 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@335 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@339 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@82 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@339 (type $generated@@378))))
(let (($generated@@380 ($generated@@338 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@337 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@336 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@88 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@82 $generated@@157 $generated@@2)) (= (type $generated@@383) $generated@@68)) (= ($generated@@145 $generated@@382 ($generated@@165 $generated@@383)) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@157) (< 0 ($generated ($generated@@88 $generated@@382 $generated@@384)))) ($generated@@239 $generated@@384 $generated@@383))
 :pattern ( ($generated@@88 $generated@@382 $generated@@384))
))))
 :pattern ( ($generated@@145 $generated@@382 ($generated@@165 $generated@@383)))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@385) ($generated@@82 $generated@@157 $generated@@4)) (= (type $generated@@386) $generated@@68)) (= (type $generated@@387) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@385 ($generated@@258 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@157) ($generated@@0 ($generated@@88 $generated@@385 $generated@@388))) ($generated@@277 $generated@@388 $generated@@386 $generated@@387))
 :pattern ( ($generated@@88 $generated@@385 $generated@@388))
))))
 :pattern ( ($generated@@78 $generated@@385 ($generated@@258 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) ($generated@@82 $generated@@157 $generated@@4)) (= (type $generated@@390) $generated@@68)) (= (type $generated@@391) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@389 ($generated@@263 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@157) ($generated@@0 ($generated@@88 $generated@@389 $generated@@392))) ($generated@@277 $generated@@392 $generated@@390 $generated@@391))
 :pattern ( ($generated@@88 $generated@@389 $generated@@392))
))))
 :pattern ( ($generated@@78 $generated@@389 ($generated@@263 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(= ($generated ($generated@@88 ($generated@@312 $generated@@394) $generated@@393)) 0))
 :pattern ( (let (($generated@@394 (type $generated@@393)))
($generated@@88 ($generated@@312 $generated@@394) $generated@@393)))
)))
(assert  (and (forall (($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@397)) ($generated@@82 $generated@@157 $generated@@4))
 :pattern ( ($generated@@395 $generated@@397))
)) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@321 (type $generated@@398))))
(let (($generated@@400 ($generated@@320 (type $generated@@398))))
(= (type ($generated@@396 $generated@@398)) ($generated@@82 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@396 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@319 $generated@@157 $generated@@157)) (= (type $generated@@402) $generated@@157)) (= ($generated@@0 ($generated@@88 ($generated@@395 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@88 ($generated@@317 $generated@@401) ($generated@@155 ($generated@@356 $generated@@81 $generated@@402)))) (= ($generated@@88 ($generated@@396 $generated@@401) ($generated@@155 ($generated@@356 $generated@@81 $generated@@402))) ($generated@@156 ($generated@@356 $generated@@81 $generated@@402))))))
 :pattern ( ($generated@@88 ($generated@@395 $generated@@401) $generated@@402))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@82 $generated@@157 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@339 (type $generated@@406))))
(let (($generated@@408 ($generated@@338 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@82 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@337 $generated@@157 $generated@@157)) (= (type $generated@@410) $generated@@157)) (= ($generated@@0 ($generated@@88 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@88 ($generated@@335 $generated@@409) ($generated@@155 ($generated@@356 $generated@@81 $generated@@410)))) (= ($generated@@88 ($generated@@404 $generated@@409) ($generated@@155 ($generated@@356 $generated@@81 $generated@@410))) ($generated@@156 ($generated@@356 $generated@@81 $generated@@410))))))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(let (($generated@@414 ($generated@@320 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@319 $generated@@414 $generated@@413)) (= ($generated@@0 ($generated@@88 ($generated@@364 $generated@@411) $generated@@412)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) (and ($generated@@0 ($generated@@88 ($generated@@317 $generated@@411) $generated@@415)) (= $generated@@412 ($generated@@88 ($generated@@396 $generated@@411) $generated@@415))))
 :pattern ( ($generated@@88 ($generated@@317 $generated@@411) $generated@@415))
 :pattern ( ($generated@@88 ($generated@@396 $generated@@411) $generated@@415))
))))))
 :pattern ( ($generated@@88 ($generated@@364 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(let (($generated@@419 ($generated@@338 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@337 $generated@@419 $generated@@418)) (= ($generated@@0 ($generated@@88 ($generated@@375 $generated@@416) $generated@@417)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) (and ($generated@@0 ($generated@@88 ($generated@@335 $generated@@416) $generated@@420)) (= $generated@@417 ($generated@@88 ($generated@@404 $generated@@416) $generated@@420))))
 :pattern ( ($generated@@88 ($generated@@335 $generated@@416) $generated@@420))
 :pattern ( ($generated@@88 ($generated@@404 $generated@@416) $generated@@420))
))))))
 :pattern ( ($generated@@88 ($generated@@375 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@68)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@319 $generated@@157 $generated@@157)) (= (type $generated@@425) $generated@@68)) (= (type $generated@@426) $generated@@68)) (= (type $generated@@427) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@157) ($generated@@0 ($generated@@88 ($generated@@317 $generated@@424) $generated@@428))) (and ($generated@@277 ($generated@@88 ($generated@@396 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@277 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@88 ($generated@@396 $generated@@424) $generated@@428))
 :pattern ( ($generated@@88 ($generated@@317 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@78 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@68)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@337 $generated@@157 $generated@@157)) (= (type $generated@@433) $generated@@68)) (= (type $generated@@434) $generated@@68)) (= (type $generated@@435) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@157) ($generated@@0 ($generated@@88 ($generated@@335 $generated@@432) $generated@@436))) (and ($generated@@277 ($generated@@88 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@277 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@88 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@88 ($generated@@335 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@78 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@81) ($generated@@145 $generated@@437 $generated@@80)) (or ($generated@@274 $generated@@437) ($generated@@252 $generated@@437)))
 :pattern ( ($generated@@252 $generated@@437) ($generated@@145 $generated@@437 $generated@@80))
 :pattern ( ($generated@@274 $generated@@437) ($generated@@145 $generated@@437 $generated@@80))
)))
(assert (forall (($generated@@439 T@T) ) (! (= (type ($generated@@438 $generated@@439)) ($generated@@82 $generated@@439 $generated@@4))
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@339 (type $generated@@440))))
(let (($generated@@442 ($generated@@338 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@337 $generated@@442 $generated@@441)) (= (= $generated@@440 ($generated@@336 $generated@@442 $generated@@441)) (= ($generated@@335 $generated@@440) ($generated@@438 $generated@@442))))))
 :pattern ( ($generated@@335 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@339 (type $generated@@443))))
(let (($generated@@445 ($generated@@338 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@337 $generated@@445 $generated@@444)) (= (= $generated@@443 ($generated@@336 $generated@@445 $generated@@444)) (= ($generated@@375 $generated@@443) ($generated@@438 $generated@@444))))))
 :pattern ( ($generated@@375 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@339 (type $generated@@446))))
(let (($generated@@448 ($generated@@338 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@337 $generated@@448 $generated@@447)) (= (= $generated@@446 ($generated@@336 $generated@@448 $generated@@447)) (= ($generated@@403 $generated@@446) ($generated@@438 $generated@@157))))))
 :pattern ( ($generated@@403 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@321 (type $generated@@449))))
(let (($generated@@451 ($generated@@320 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@319 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@318 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@157) (= (type $generated@@453) $generated@@157)) ($generated@@0 ($generated@@88 ($generated@@395 $generated@@449) ($generated@@306 ($generated@@238 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@395 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@339 (type $generated@@454))))
(let (($generated@@456 ($generated@@338 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@337 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@336 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (and (and (= (type $generated@@457) $generated@@157) (= (type $generated@@458) $generated@@157)) ($generated@@0 ($generated@@88 ($generated@@403 $generated@@454) ($generated@@306 ($generated@@238 $generated@@457 $generated@@458)))))
 :no-pattern (type $generated@@457)
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@403 $generated@@454))
)))
(assert  (=> (<= 1 $generated@@300) (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@81) (or ($generated@@302 $generated@@459) (and (not (= 1 $generated@@300)) (and ($generated@@145 $generated@@459 $generated@@80) (and ($generated@@252 $generated@@459) ($generated@@274 ($generated@@254 $generated@@459))))))) (= ($generated@@301 $generated@@459) ($generated@@253 $generated@@459)))
 :pattern ( ($generated@@301 $generated@@459))
))))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@157) ($generated@@239 $generated@@460 $generated@@46)) (and (= ($generated@@306 ($generated@@356 $generated@@2 $generated@@460)) $generated@@460) ($generated@@145 ($generated@@356 $generated@@2 $generated@@460) $generated@@46)))
 :pattern ( ($generated@@239 $generated@@460 $generated@@46))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@157) ($generated@@239 $generated@@461 $generated@@47)) (and (= ($generated@@306 ($generated@@356 $generated@@3 $generated@@461)) $generated@@461) ($generated@@145 ($generated@@356 $generated@@3 $generated@@461) $generated@@47)))
 :pattern ( ($generated@@239 $generated@@461 $generated@@47))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@157) ($generated@@239 $generated@@462 $generated@@44)) (and (= ($generated@@306 ($generated@@356 $generated@@4 $generated@@462)) $generated@@462) ($generated@@145 ($generated@@356 $generated@@4 $generated@@462) $generated@@44)))
 :pattern ( ($generated@@239 $generated@@462 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@463) 20))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@157) ($generated@@239 $generated@@464 $generated@@45)) (and (= ($generated@@306 ($generated@@356 $generated@@463 $generated@@464)) $generated@@464) ($generated@@145 ($generated@@356 $generated@@463 $generated@@464) $generated@@45)))
 :pattern ( ($generated@@239 $generated@@464 $generated@@45))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (= (type $generated@@466) $generated@@68) (= ($generated@@239 ($generated@@306 $generated@@465) $generated@@466) ($generated@@145 $generated@@465 $generated@@466)))
 :pattern ( ($generated@@239 ($generated@@306 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@86 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@82 $generated@@468 $generated@@2)) (<= 0 ($generated@@311 $generated@@467))))
 :pattern ( ($generated@@311 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@295 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@294 $generated@@470)) (<= 0 ($generated@@293 $generated@@469))))
 :pattern ( ($generated@@293 $generated@@469))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@68)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@68) (= (type $generated@@474) $generated@@68)) (= ($generated@@471 ($generated@@421 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@421 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@68)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@68) (= (type $generated@@478) $generated@@68)) (= ($generated@@475 ($generated@@421 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@421 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@68) (= (type $generated@@480) $generated@@68)) (= ($generated@@76 ($generated@@421 $generated@@479 $generated@@480)) $generated@@58))
 :pattern ( ($generated@@421 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@68)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@68) (= (type $generated@@484) $generated@@68)) (= ($generated@@481 ($generated@@429 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@429 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@68)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@68) (= (type $generated@@488) $generated@@68)) (= ($generated@@485 ($generated@@429 $generated@@487 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@429 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@68) (= (type $generated@@490) $generated@@68)) (= ($generated@@76 ($generated@@429 $generated@@489 $generated@@490)) $generated@@59))
 :pattern ( ($generated@@429 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@157) (= (type $generated@@492) $generated@@157)) (= ($generated@@162 ($generated@@238 $generated@@491 $generated@@492)) $generated@@61))
 :pattern ( ($generated@@238 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@68)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@68) (= (type $generated@@496) $generated@@68)) (= ($generated@@493 ($generated@@148 $generated@@495 $generated@@496)) $generated@@495))
 :pattern ( ($generated@@148 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@68)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@68) (= (type $generated@@500) $generated@@68)) (= ($generated@@497 ($generated@@148 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@148 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@157) (= (type $generated@@502) $generated@@157)) (= ($generated@@155 ($generated@@238 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@238 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@157) (= (type $generated@@504) $generated@@157)) (= ($generated@@156 ($generated@@238 $generated@@503 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@238 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 Int) ($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@81) (= ($generated@@162 ($generated@@79 $generated@@505 $generated@@506)) $generated@@65))
 :pattern ( ($generated@@79 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 Int) ($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@81) (= ($generated@@253 ($generated@@79 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@79 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 Int) ($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@81) (= ($generated@@254 ($generated@@79 $generated@@509 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@79 $generated@@509 $generated@@510))
)))
(assert  (and (forall (($generated@@513 T@U) ) (! (= (type ($generated@@511 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@511 $generated@@513))
)) (forall (($generated@@514 T@U) ($generated@@515 Int) ) (! (let (($generated@@516 ($generated@@295 (type $generated@@514))))
(= (type ($generated@@512 $generated@@514 $generated@@515)) $generated@@516))
 :pattern ( ($generated@@512 $generated@@514 $generated@@515))
))))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@294 $generated@@157)) (= (type $generated@@518) $generated@@68)) (= (type $generated@@519) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@517 ($generated@@511 $generated@@518) $generated@@519) (forall (($generated@@520 Int) ) (!  (=> (and (<= 0 $generated@@520) (< $generated@@520 ($generated@@293 $generated@@517))) ($generated@@277 ($generated@@512 $generated@@517 $generated@@520) $generated@@518 $generated@@519))
 :pattern ( ($generated@@512 $generated@@517 $generated@@520))
))))
 :pattern ( ($generated@@78 $generated@@517 ($generated@@511 $generated@@518) $generated@@519))
)))
(assert (forall (($generated@@522 Int) ) (! (= ($generated@@521 ($generated@@141 $generated@@522)) $generated@@522)
 :pattern ( ($generated@@141 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@68)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@68) (= ($generated@@523 ($generated@@258 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@258 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@68) (= ($generated@@76 ($generated@@258 $generated@@526)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@68)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@68) (= ($generated@@527 ($generated@@263 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@263 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@68) (= ($generated@@76 ($generated@@263 $generated@@530)) $generated@@55))
 :pattern ( ($generated@@263 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@68)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@68) (= ($generated@@531 ($generated@@165 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@165 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@68) (= ($generated@@76 ($generated@@165 $generated@@534)) $generated@@56))
 :pattern ( ($generated@@165 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@68)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@68) (= ($generated@@535 ($generated@@511 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@511 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@68) (= ($generated@@76 ($generated@@511 $generated@@538)) $generated@@57))
 :pattern ( ($generated@@511 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 (type $generated@@539)))
(= ($generated@@356 $generated@@540 ($generated@@306 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@306 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@319 $generated@@157 $generated@@157)) (= (type $generated@@542) $generated@@68)) (= (type $generated@@543) $generated@@68)) (= ($generated@@145 $generated@@541 ($generated@@421 $generated@@542 $generated@@543)) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@157) ($generated@@0 ($generated@@88 ($generated@@317 $generated@@541) $generated@@544))) (and ($generated@@239 ($generated@@88 ($generated@@396 $generated@@541) $generated@@544) $generated@@543) ($generated@@239 $generated@@544 $generated@@542)))
 :pattern ( ($generated@@88 ($generated@@396 $generated@@541) $generated@@544))
 :pattern ( ($generated@@88 ($generated@@317 $generated@@541) $generated@@544))
))))
 :pattern ( ($generated@@145 $generated@@541 ($generated@@421 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@545) ($generated@@337 $generated@@157 $generated@@157)) (= (type $generated@@546) $generated@@68)) (= (type $generated@@547) $generated@@68)) (= ($generated@@145 $generated@@545 ($generated@@429 $generated@@546 $generated@@547)) (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@157) ($generated@@0 ($generated@@88 ($generated@@335 $generated@@545) $generated@@548))) (and ($generated@@239 ($generated@@88 ($generated@@404 $generated@@545) $generated@@548) $generated@@547) ($generated@@239 $generated@@548 $generated@@546)))
 :pattern ( ($generated@@88 ($generated@@404 $generated@@545) $generated@@548))
 :pattern ( ($generated@@88 ($generated@@335 $generated@@545) $generated@@548))
))))
 :pattern ( ($generated@@145 $generated@@545 ($generated@@429 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@157) (= (type $generated@@552) $generated@@157)) (< ($generated@@549 $generated@@551) ($generated@@550 ($generated@@238 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@238 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@157) (= (type $generated@@554) $generated@@157)) (< ($generated@@549 $generated@@554) ($generated@@550 ($generated@@238 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@238 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 Int) ($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@81) (< ($generated@@550 $generated@@556) ($generated@@550 ($generated@@79 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@79 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@157) (= (type $generated@@558) $generated@@68)) (= (type $generated@@559) $generated@@68)) ($generated@@239 $generated@@557 ($generated@@421 $generated@@558 $generated@@559))) (and (= ($generated@@306 ($generated@@356 ($generated@@319 $generated@@157 $generated@@157) $generated@@557)) $generated@@557) ($generated@@145 ($generated@@356 ($generated@@319 $generated@@157 $generated@@157) $generated@@557) ($generated@@421 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@239 $generated@@557 ($generated@@421 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@157) (= (type $generated@@561) $generated@@68)) (= (type $generated@@562) $generated@@68)) ($generated@@239 $generated@@560 ($generated@@429 $generated@@561 $generated@@562))) (and (= ($generated@@306 ($generated@@356 ($generated@@337 $generated@@157 $generated@@157) $generated@@560)) $generated@@560) ($generated@@145 ($generated@@356 ($generated@@337 $generated@@157 $generated@@157) $generated@@560) ($generated@@429 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@239 $generated@@560 ($generated@@429 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@68) (= (type $generated@@564) $generated@@68)) (= (type $generated@@565) $generated@@157)) ($generated@@239 $generated@@565 ($generated@@148 $generated@@563 $generated@@564))) (and (= ($generated@@306 ($generated@@356 $generated@@81 $generated@@565)) $generated@@565) ($generated@@145 ($generated@@356 $generated@@81 $generated@@565) ($generated@@148 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@239 $generated@@565 ($generated@@148 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@566)))
 (not ($generated@@0 ($generated@@88 ($generated@@438 $generated@@567) $generated@@566))))
 :pattern ( (let (($generated@@567 (type $generated@@566)))
($generated@@88 ($generated@@438 $generated@@567) $generated@@566)))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@73)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@68) (= (type $generated@@571) $generated@@68)) (and (= ($generated@@76 ($generated@@148 $generated@@570 $generated@@571)) $generated@@62) (= ($generated@@568 ($generated@@148 $generated@@570 $generated@@571)) $generated@@66)))
 :pattern ( ($generated@@148 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@81) (= (type $generated@@573) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@573) (and ($generated@@252 $generated@@572) ($generated@@78 $generated@@572 $generated@@80 $generated@@573)))) ($generated@@78 ($generated@@8 ($generated@@253 $generated@@572)) $generated@@46 $generated@@573))
 :pattern ( ($generated@@78 ($generated@@8 ($generated@@253 $generated@@572)) $generated@@46 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@81) (= ($generated@@549 ($generated@@306 $generated@@574)) ($generated@@550 $generated@@574)))
 :pattern ( ($generated@@549 ($generated@@306 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@157) ($generated@@239 $generated@@575 ($generated@@141 0))) (and (= ($generated@@306 ($generated@@356 $generated@@2 $generated@@575)) $generated@@575) ($generated@@145 ($generated@@356 ($generated@@82 $generated@@157 $generated@@4) $generated@@575) ($generated@@141 0))))
 :pattern ( ($generated@@239 $generated@@575 ($generated@@141 0)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@157) (= (type $generated@@577) $generated@@68)) ($generated@@239 $generated@@576 ($generated@@258 $generated@@577))) (and (= ($generated@@306 ($generated@@356 ($generated@@82 $generated@@157 $generated@@4) $generated@@576)) $generated@@576) ($generated@@145 ($generated@@356 ($generated@@82 $generated@@157 $generated@@4) $generated@@576) ($generated@@258 $generated@@577))))
 :pattern ( ($generated@@239 $generated@@576 ($generated@@258 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@157) (= (type $generated@@579) $generated@@68)) ($generated@@239 $generated@@578 ($generated@@263 $generated@@579))) (and (= ($generated@@306 ($generated@@356 ($generated@@82 $generated@@157 $generated@@4) $generated@@578)) $generated@@578) ($generated@@145 ($generated@@356 ($generated@@82 $generated@@157 $generated@@4) $generated@@578) ($generated@@263 $generated@@579))))
 :pattern ( ($generated@@239 $generated@@578 ($generated@@263 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@157) (= (type $generated@@581) $generated@@68)) ($generated@@239 $generated@@580 ($generated@@165 $generated@@581))) (and (= ($generated@@306 ($generated@@356 ($generated@@82 $generated@@157 $generated@@2) $generated@@580)) $generated@@580) ($generated@@145 ($generated@@356 ($generated@@82 $generated@@157 $generated@@2) $generated@@580) ($generated@@165 $generated@@581))))
 :pattern ( ($generated@@239 $generated@@580 ($generated@@165 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@157) (= (type $generated@@583) $generated@@68)) ($generated@@239 $generated@@582 ($generated@@511 $generated@@583))) (and (= ($generated@@306 ($generated@@356 ($generated@@294 $generated@@157) $generated@@582)) $generated@@582) ($generated@@145 ($generated@@356 ($generated@@294 $generated@@157) $generated@@582) ($generated@@511 $generated@@583))))
 :pattern ( ($generated@@239 $generated@@582 ($generated@@511 $generated@@583)))
)))
(assert (= ($generated@@76 $generated@@80) $generated@@64))
(assert (= ($generated@@568 $generated@@80) $generated@@67))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@82 $generated@@157 $generated@@2)) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@78 $generated@@584 ($generated@@165 $generated@@585) $generated@@586) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@157) (< 0 ($generated ($generated@@88 $generated@@584 $generated@@587)))) ($generated@@277 $generated@@587 $generated@@585 $generated@@586))
 :pattern ( ($generated@@88 $generated@@584 $generated@@587))
))))
 :pattern ( ($generated@@78 $generated@@584 ($generated@@165 $generated@@585) $generated@@586))
)))
(assert (= $generated@@163 ($generated@@270 $generated@@163)))
(assert  (=> (<= 1 $generated@@300) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@81) (or ($generated@@302 $generated@@588) (and (not (= 1 $generated@@300)) (and ($generated@@145 $generated@@588 $generated@@80) (and ($generated@@252 $generated@@588) ($generated@@274 ($generated@@254 $generated@@588))))))) (= ($generated@@301 $generated@@588) (let (($generated@@589 ($generated@@253 $generated@@588)))
$generated@@589)))
 :pattern ( ($generated@@301 $generated@@588))
))))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@81) (= (type $generated@@591) $generated@@68)) (= (type $generated@@592) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@592) (and ($generated@@147 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@68) ($generated@@78 $generated@@590 ($generated@@148 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@78 $generated@@590 ($generated@@148 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@277 ($generated@@155 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@277 ($generated@@155 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@81) (= (type $generated@@595) $generated@@68)) (= (type $generated@@596) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@596) (and ($generated@@147 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@68) ($generated@@78 $generated@@594 ($generated@@148 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@78 $generated@@594 ($generated@@148 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@277 ($generated@@156 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@277 ($generated@@156 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@81) (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@85 $generated@@599) (and ($generated@@252 $generated@@598) ($generated@@78 $generated@@598 $generated@@80 $generated@@599)))) ($generated@@78 ($generated@@254 $generated@@598) $generated@@80 $generated@@599))
 :pattern ( ($generated@@78 ($generated@@254 $generated@@598) $generated@@80 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@157) (= (type $generated@@601) $generated@@157)) (= ($generated@@238 ($generated@@270 $generated@@600) ($generated@@270 $generated@@601)) ($generated@@270 ($generated@@238 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@238 ($generated@@270 $generated@@600) ($generated@@270 $generated@@601)))
)))
(assert (forall (($generated@@602 Int) ($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@81) (= ($generated@@79 ($generated@@268 $generated@@602) ($generated@@270 $generated@@603)) ($generated@@270 ($generated@@79 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@79 ($generated@@268 $generated@@602) ($generated@@270 $generated@@603)))
)))
(assert (forall (($generated@@604 Int) ) (! (= ($generated@@306 ($generated@@8 ($generated@@268 $generated@@604))) ($generated@@270 ($generated@@306 ($generated@@8 $generated@@604))))
 :pattern ( ($generated@@306 ($generated@@8 ($generated@@268 $generated@@604))))
)))
(assert (forall (($generated@@605 T@U) ) (! (= ($generated@@306 ($generated@@270 $generated@@605)) ($generated@@270 ($generated@@306 $generated@@605)))
 :pattern ( ($generated@@306 ($generated@@270 $generated@@605)))
)))
(assert (forall (($generated@@606 Int) ($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@81) (= ($generated@@145 ($generated@@79 $generated@@606 $generated@@607) $generated@@80)  (and ($generated@@145 ($generated@@8 $generated@@606) $generated@@46) ($generated@@145 $generated@@607 $generated@@80))))
 :pattern ( ($generated@@145 ($generated@@79 $generated@@606 $generated@@607) $generated@@80))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 ($generated@@295 (type $generated@@608))))
 (=> (and (= (type $generated@@608) ($generated@@294 $generated@@609)) (= ($generated@@293 $generated@@608) 0)) (= $generated@@608 ($generated@@292 $generated@@609))))
 :pattern ( ($generated@@293 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (! (let (($generated@@613 (type $generated@@611)))
 (=> (and (and (= (type $generated@@610) ($generated@@82 $generated@@613 $generated@@2)) (= (type $generated@@612) $generated@@2)) (<= 0 ($generated $generated@@612))) (= ($generated@@311 ($generated@@89 $generated@@610 $generated@@611 $generated@@612)) (+ (- ($generated@@311 $generated@@610) ($generated ($generated@@88 $generated@@610 $generated@@611))) ($generated $generated@@612)))))
 :pattern ( ($generated@@311 ($generated@@89 $generated@@610 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@615) $generated@@2)) ($generated@@78 $generated@@615 $generated@@46 $generated@@614))
 :pattern ( ($generated@@78 $generated@@615 $generated@@46 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@617) $generated@@3)) ($generated@@78 $generated@@617 $generated@@47 $generated@@616))
 :pattern ( ($generated@@78 $generated@@617 $generated@@47 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@619) $generated@@4)) ($generated@@78 $generated@@619 $generated@@44 $generated@@618))
 :pattern ( ($generated@@78 $generated@@619 $generated@@44 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@621) $generated@@463)) ($generated@@78 $generated@@621 $generated@@45 $generated@@620))
 :pattern ( ($generated@@78 $generated@@621 $generated@@45 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@623) $generated@@157)) ($generated@@78 $generated@@623 $generated@@48 $generated@@622))
 :pattern ( ($generated@@78 $generated@@623 $generated@@48 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@294 $generated@@157)) (= (type $generated@@625) $generated@@68)) (= ($generated@@145 $generated@@624 ($generated@@511 $generated@@625)) (forall (($generated@@626 Int) ) (!  (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@293 $generated@@624))) ($generated@@239 ($generated@@512 $generated@@624 $generated@@626) $generated@@625))
 :pattern ( ($generated@@512 $generated@@624 $generated@@626))
))))
 :pattern ( ($generated@@145 $generated@@624 ($generated@@511 $generated@@625)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 Int) ) (!  (=> (= (type $generated@@628) ($generated@@294 $generated@@157)) (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@293 $generated@@628))) (< ($generated@@550 ($generated@@356 $generated@@81 ($generated@@512 $generated@@628 $generated@@629))) ($generated@@627 $generated@@628))))
 :pattern ( ($generated@@550 ($generated@@356 $generated@@81 ($generated@@512 $generated@@628 $generated@@629))))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@319 $generated@@157 $generated@@157)) (= (type $generated@@631) $generated@@68)) (= (type $generated@@632) $generated@@68)) ($generated@@145 $generated@@630 ($generated@@421 $generated@@631 $generated@@632))) (and (and ($generated@@145 ($generated@@317 $generated@@630) ($generated@@258 $generated@@631)) ($generated@@145 ($generated@@364 $generated@@630) ($generated@@258 $generated@@632))) ($generated@@145 ($generated@@395 $generated@@630) ($generated@@258 ($generated@@148 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@145 $generated@@630 ($generated@@421 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) ($generated@@337 $generated@@157 $generated@@157)) (= (type $generated@@634) $generated@@68)) (= (type $generated@@635) $generated@@68)) ($generated@@145 $generated@@633 ($generated@@429 $generated@@634 $generated@@635))) (and (and ($generated@@145 ($generated@@335 $generated@@633) ($generated@@263 $generated@@634)) ($generated@@145 ($generated@@375 $generated@@633) ($generated@@263 $generated@@635))) ($generated@@145 ($generated@@403 $generated@@633) ($generated@@263 ($generated@@148 $generated@@634 $generated@@635)))))
 :pattern ( ($generated@@145 $generated@@633 ($generated@@429 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@2) ($generated@@145 $generated@@636 $generated@@46))
 :pattern ( ($generated@@145 $generated@@636 $generated@@46))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@3) ($generated@@145 $generated@@637 $generated@@47))
 :pattern ( ($generated@@145 $generated@@637 $generated@@47))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@4) ($generated@@145 $generated@@638 $generated@@44))
 :pattern ( ($generated@@145 $generated@@638 $generated@@44))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@463) ($generated@@145 $generated@@639 $generated@@45))
 :pattern ( ($generated@@145 $generated@@639 $generated@@45))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@157) ($generated@@145 $generated@@640 $generated@@48))
 :pattern ( ($generated@@145 $generated@@640 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@641) $generated@@81) (= (type $generated@@644) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@642) ($generated@@172 $generated@@83 $generated@@4))) (= (type $generated@@643) $generated@@83)) (= (type $generated@@645) $generated@@81)) (= (type $generated@@647) ($generated@@172 $generated@@83 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@649  (=> (= (ControlFlow 0 7) (- 0 6)) (= ($generated@@301 $generated@@641) ($generated@@253 $generated@@641)))))
(let (($generated@@650  (=> (= $generated@@642 ($generated@@226 $generated@@643 $generated@@644 $generated@@60 false)) (=> (and (= $generated@@645 $generated@@641) ($generated@@145 $generated@@645 $generated@@80)) (and (=> (= (ControlFlow 0 8) (- 0 10)) ($generated@@252 $generated@@645)) (=> ($generated@@252 $generated@@645) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@274 ($generated@@254 $generated@@645))) (=> ($generated@@274 ($generated@@254 $generated@@645)) (=> (and (and (= ($generated@@79 $generated@@646 ($generated@@270 $generated@@163)) $generated@@645) (= ($generated@@301 $generated@@641) $generated@@646)) (and ($generated@@145 ($generated@@8 ($generated@@301 $generated@@641)) $generated@@46) (= (ControlFlow 0 8) 7))) $generated@@649)))))))))
(let (($generated@@651  (=> ($generated@@78 $generated@@641 $generated@@80 $generated@@644) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@252 $generated@@641)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@274 ($generated@@254 $generated@@641))) (=> (and ($generated@@252 $generated@@641) ($generated@@274 ($generated@@254 $generated@@641))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (= $generated@@641 $generated@@641) (< ($generated@@550 $generated@@641) ($generated@@550 $generated@@641)))) (=> (or (= $generated@@641 $generated@@641) (< ($generated@@550 $generated@@641) ($generated@@550 $generated@@641))) (=> (and (or (= $generated@@641 $generated@@641) ($generated@@302 $generated@@641)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@252 $generated@@641))))))))))
(let (($generated@@652  (=> (and (= $generated@@647 ($generated@@171 $generated@@643 $generated@@644 $generated@@60 false)) ($generated@@252 $generated@@641)) (and (=> (= (ControlFlow 0 11) (- 0 12)) ($generated@@252 $generated@@641)) (=> ($generated@@252 $generated@@641) (=> ($generated@@274 ($generated@@254 $generated@@641)) (and (=> (= (ControlFlow 0 11) 2) $generated@@651) (=> (= (ControlFlow 0 11) 8) $generated@@650))))))))
(let (($generated@@653  (=> (and (and (and ($generated@@85 $generated@@644) ($generated@@648 $generated@@644)) ($generated@@145 $generated@@641 $generated@@80)) (and (= 1 $generated@@300) (= (ControlFlow 0 13) 11))) $generated@@652)))
$generated@@653))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
