(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (Int) T@U)
(declare-fun $generated@@85 (T@T T@T) T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@173 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 (T@U) Bool)
(declare-fun $generated@@233 (T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 (T@U) Bool)
(declare-fun $generated@@249 (T@U T@U) Bool)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@255 (T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (Int) Int)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@274 (T@U T@U T@U) Bool)
(declare-fun $generated@@285 (T@T) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@294 (T@U) T@U)
(declare-fun $generated@@307 (T@U) Int)
(declare-fun $generated@@308 (T@T) T@U)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@314 (T@T T@T) T@U)
(declare-fun $generated@@315 (T@T T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 (T@T T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@352 (T@T T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@425 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@U T@U) T@U)
(declare-fun $generated@@444 (T@T) T@U)
(declare-fun $generated@@468 () T@T)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@511 (T@U Int) T@U)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@548 (T@U) Int)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@614 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@75 $generated@@80))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@61) $generated@@77)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@77)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@77)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@77)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@69) $generated@@78)) (= (type $generated@@70) $generated@@78)) (= (type $generated@@71) $generated@@78)) (= (type $generated@@72) $generated@@78)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@74)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (= ($generated@@1 ($generated@@85 $generated@@94 $generated@@95)) 11)) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@88 ($generated@@85 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@85 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@89 ($generated@@85 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@85 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@89 (type $generated@@100))))
(= (type ($generated@@90 $generated@@100 $generated@@101)) $generated@@102))
 :pattern ( ($generated@@90 $generated@@100 $generated@@101))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 (type $generated@@105)))
(let (($generated@@107 (type $generated@@104)))
(= (type ($generated@@91 $generated@@103 $generated@@104 $generated@@105)) ($generated@@85 $generated@@107 $generated@@106))))
 :pattern ( ($generated@@91 $generated@@103 $generated@@104 $generated@@105))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@89 (type $generated@@108))))
 (=> (= (type $generated@@110) $generated@@111) (= ($generated@@90 ($generated@@91 $generated@@108 $generated@@109 $generated@@110) $generated@@109) $generated@@110)))
 :weight 0
))) (and (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@114 $generated@@115) (= ($generated@@90 ($generated@@91 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@90 $generated@@113 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@90 $generated@@117 $generated@@119)))
 :weight 0
)))) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@76 (type $generated@@121))))
(= (type ($generated@@92 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@92 $generated@@120 $generated@@121))
))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= (type ($generated@@93 $generated@@123 $generated@@124 $generated@@125)) $generated@@87)
 :pattern ( ($generated@@93 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@76 (type $generated@@127))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@92 ($generated@@93 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@92 ($generated@@93 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@92 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@92 $generated@@135 $generated@@137)))
 :weight 0
)))) (forall (($generated@@138 Int) ) (! (= (type ($generated@@84 $generated@@138)) $generated@@73)
 :pattern ( ($generated@@84 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
 :pattern ( ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and (= (type $generated@@142) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@143) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@141 $generated@@142 $generated@@143)) (forall (($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@86) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@142 $generated@@144) $generated@@60))) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@143 $generated@@144) $generated@@60)))
 :pattern ( ($generated@@92 ($generated@@90 $generated@@143 $generated@@144) $generated@@60))
)))
 :pattern ( ($generated@@141 $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@84 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@84 0)))
)))
(assert  (and (= ($generated@@1 $generated@@149) 14) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@150 $generated@@151)) $generated@@73)
 :pattern ( ($generated@@148 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@73) (= (type $generated@@153) $generated@@73)) (= (type $generated@@154) $generated@@149)) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153))) ($generated@@147 $generated@@154))
 :pattern ( ($generated@@147 $generated@@154) ($generated@@145 $generated@@154 ($generated@@148 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 15) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@149) (= (type $generated@@162) $generated@@149)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert  (and (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@77)
 :pattern ( ($generated@@163 $generated@@165))
)) (= (type $generated@@164) $generated@@149)))
(assert (= ($generated@@163 $generated@@164) $generated@@63))
(assert (= (type $generated@@166) $generated@@149))
(assert (= ($generated@@163 $generated@@166) $generated@@65))
(assert (= (type $generated@@167) $generated@@149))
(assert (= ($generated@@163 $generated@@167) $generated@@68))
(assert (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@73)
 :pattern ( ($generated@@168 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) ($generated@@85 $generated@@158 $generated@@2)) (= (type $generated@@172) $generated@@73)) ($generated@@145 $generated@@171 ($generated@@168 $generated@@172))) ($generated@@169 $generated@@171))
 :pattern ( ($generated@@145 $generated@@171 ($generated@@168 $generated@@172)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (= ($generated@@1 ($generated@@175 $generated@@179 $generated@@180)) 16)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (! (= ($generated@@176 ($generated@@175 $generated@@181 $generated@@182)) $generated@@181)
 :pattern ( ($generated@@175 $generated@@181 $generated@@182))
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@177 ($generated@@175 $generated@@183 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@175 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@177 (type $generated@@185))))
(= (type ($generated@@173 $generated@@185 $generated@@186 $generated@@187)) $generated@@188))
 :pattern ( ($generated@@173 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 (type $generated@@192)))
(let (($generated@@194 (type $generated@@190)))
(= (type ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192)) ($generated@@175 $generated@@194 $generated@@193))))
 :pattern ( ($generated@@178 $generated@@189 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 ($generated@@177 (type $generated@@195))))
 (=> (= (type $generated@@198) $generated@@199) (= ($generated@@173 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@196 $generated@@197) $generated@@198)))
 :weight 0
))) (and (and (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@173 ($generated@@178 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@173 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@173 ($generated@@178 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@173 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or true (= ($generated@@173 ($generated@@178 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@173 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ) (! (= (type ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@175 $generated@@86 $generated@@4))
 :pattern ( ($generated@@174 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@76 (type $generated@@227))))
 (=> (and (and (and (and (= (type $generated@@222) $generated@@86) (= (type $generated@@223) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@224) ($generated@@75 $generated@@4))) (= (type $generated@@226) $generated@@86)) (= (type $generated@@227) ($generated@@75 $generated@@228))) (= ($generated@@0 ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (not (= $generated@@226 $generated@@222)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@223 $generated@@226) $generated@@224))) $generated@@225))))
 :pattern ( ($generated@@173 ($generated@@174 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert  (and (= (type $generated@@229) $generated@@149) (= (type $generated@@230) $generated@@73)))
(assert  (=> true (=> true ($generated@@145 $generated@@229 $generated@@230))))
(assert (forall (($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@149) ($generated@@145 $generated@@232 $generated@@230)) ($generated@@231 $generated@@232))
 :pattern ( ($generated@@231 $generated@@232) ($generated@@145 $generated@@232 $generated@@230))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= (type ($generated@@233 $generated@@235 $generated@@236)) $generated@@149)
 :pattern ( ($generated@@233 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and (and (= (type $generated@@237) $generated@@73) (= (type $generated@@238) $generated@@73)) (= (type $generated@@239) $generated@@158)) (= (type $generated@@240) $generated@@158)) (= ($generated@@145 ($generated@@233 $generated@@239 $generated@@240) ($generated@@148 $generated@@237 $generated@@238))  (and ($generated@@234 $generated@@239 $generated@@237) ($generated@@234 $generated@@240 $generated@@238))))
 :pattern ( ($generated@@145 ($generated@@233 $generated@@239 $generated@@240) ($generated@@148 $generated@@237 $generated@@238)))
)))
(assert (= (type $generated@@241) $generated@@73))
(assert ($generated@@145 $generated@@164 $generated@@241))
(assert (= (type $generated@@242) $generated@@73))
(assert ($generated@@145 $generated@@166 $generated@@242))
(assert ($generated@@145 $generated@@167 $generated@@230))
(assert (forall (($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@244) ($generated@@85 $generated@@86 $generated@@87)) ($generated@@243 $generated@@244)) ($generated@@83 $generated@@164 $generated@@241 $generated@@244))
 :pattern ( ($generated@@83 $generated@@164 $generated@@241 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@85 $generated@@86 $generated@@87)) ($generated@@243 $generated@@245)) ($generated@@83 $generated@@166 $generated@@242 $generated@@245))
 :pattern ( ($generated@@83 $generated@@166 $generated@@242 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@85 $generated@@86 $generated@@87)) ($generated@@243 $generated@@246)) ($generated@@83 $generated@@167 $generated@@230 $generated@@246))
 :pattern ( ($generated@@83 $generated@@167 $generated@@230 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@149) (= (type $generated@@248) $generated@@149)) (= ($generated@@155 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@155 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@149) (= (type $generated@@251) $generated@@149)) (= ($generated@@249 $generated@@250 $generated@@251) (= $generated@@250 $generated@@251)))
 :pattern ( ($generated@@249 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@149) (= (type $generated@@254) $generated@@149)) (= ($generated@@252 $generated@@253 $generated@@254) (= $generated@@253 $generated@@254)))
 :pattern ( ($generated@@252 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@149) (= (type $generated@@257) $generated@@149)) (= ($generated@@255 $generated@@256 $generated@@257) (= $generated@@256 $generated@@257)))
 :pattern ( ($generated@@255 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@73)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@85 $generated@@158 $generated@@4)) (= (type $generated@@261) $generated@@73)) (= ($generated@@145 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@158) ($generated@@0 ($generated@@90 $generated@@260 $generated@@262))) ($generated@@234 $generated@@262 $generated@@261))
 :pattern ( ($generated@@90 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@145 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@73)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@85 $generated@@158 $generated@@4)) (= (type $generated@@266) $generated@@73)) (= ($generated@@145 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@158) ($generated@@0 ($generated@@90 $generated@@265 $generated@@267))) ($generated@@234 $generated@@267 $generated@@266))
 :pattern ( ($generated@@90 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@145 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@269 Int) ) (! (= ($generated@@268 $generated@@269) $generated@@269)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 (type $generated@@271)))
(= (type ($generated@@270 $generated@@271)) $generated@@272))
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@270 $generated@@273) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@275) $generated@@73) (= (type $generated@@276) $generated@@73)) (= (type $generated@@277) $generated@@158)) (= (type $generated@@278) $generated@@158)) (= (type $generated@@279) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@243 $generated@@279)) (= ($generated@@83 ($generated@@233 $generated@@277 $generated@@278) ($generated@@148 $generated@@275 $generated@@276) $generated@@279)  (and ($generated@@274 $generated@@277 $generated@@275 $generated@@279) ($generated@@274 $generated@@278 $generated@@276 $generated@@279))))
 :pattern ( ($generated@@83 ($generated@@233 $generated@@277 $generated@@278) ($generated@@148 $generated@@275 $generated@@276) $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@149) (= ($generated@@147 $generated@@280) (= ($generated@@163 $generated@@280) $generated@@61)))
 :pattern ( ($generated@@147 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@149) (= ($generated@@231 $generated@@281) (= ($generated@@163 $generated@@281) $generated@@68)))
 :pattern ( ($generated@@231 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@149) ($generated@@147 $generated@@282)) (exists (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (and (and (= (type $generated@@283) $generated@@158) (= (type $generated@@284) $generated@@158)) (= $generated@@282 ($generated@@233 $generated@@283 $generated@@284)))
 :no-pattern (type $generated@@283)
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
)))
 :pattern ( ($generated@@147 $generated@@282))
)))
(assert  (and (and (forall (($generated@@289 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@289)) 17)) (forall (($generated@@290 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@290)) $generated@@290)
 :pattern ( ($generated@@287 $generated@@290))
))) (forall (($generated@@291 T@T) ) (! (= (type ($generated@@285 $generated@@291)) ($generated@@287 $generated@@291))
 :pattern ( ($generated@@285 $generated@@291))
))))
(assert (forall (($generated@@292 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@292)) 0)
 :pattern ( ($generated@@285 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@149) ($generated@@231 $generated@@293)) (= $generated@@293 $generated@@167))
 :pattern ( ($generated@@231 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (! (= (type ($generated@@294 $generated@@295)) $generated@@158)
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@73) (= (type $generated@@298) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@274 ($generated@@294 $generated@@296) $generated@@297 $generated@@298) ($generated@@83 $generated@@296 $generated@@297 $generated@@298)))
 :pattern ( ($generated@@274 ($generated@@294 $generated@@296) $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@299) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@300) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@301) $generated@@158)) (= (type $generated@@302) $generated@@73)) ($generated@@141 $generated@@299 $generated@@300)) ($generated@@274 $generated@@301 $generated@@302 $generated@@299)) ($generated@@274 $generated@@301 $generated@@302 $generated@@300))
 :pattern ( ($generated@@141 $generated@@299 $generated@@300) ($generated@@274 $generated@@301 $generated@@302 $generated@@299))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@303) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@304) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@306) $generated@@73)) ($generated@@141 $generated@@303 $generated@@304)) ($generated@@83 $generated@@305 $generated@@306 $generated@@303)) ($generated@@83 $generated@@305 $generated@@306 $generated@@304))
 :pattern ( ($generated@@141 $generated@@303 $generated@@304) ($generated@@83 $generated@@305 $generated@@306 $generated@@303))
)))
(assert (forall (($generated@@309 T@T) ) (! (= (type ($generated@@308 $generated@@309)) ($generated@@85 $generated@@309 $generated@@2))
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@88 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@85 $generated@@311 $generated@@2)) (and (= (= ($generated@@307 $generated@@310) 0) (= $generated@@310 ($generated@@308 $generated@@311))) (=> (not (= ($generated@@307 $generated@@310) 0)) (exists (($generated@@312 T@U) ) (!  (and (= (type $generated@@312) $generated@@311) (< 0 ($generated ($generated@@90 $generated@@310 $generated@@312))))
 :no-pattern (type $generated@@312)
 :no-pattern ($generated $generated@@312)
 :no-pattern ($generated@@0 $generated@@312)
))))))
 :pattern ( ($generated@@307 $generated@@310))
)))
(assert  (and (and (and (and (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (= ($generated@@1 ($generated@@315 $generated@@318 $generated@@319)) 18)) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@320 $generated@@321)) $generated@@320)
 :pattern ( ($generated@@315 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@317 ($generated@@315 $generated@@322 $generated@@323)) $generated@@323)
 :pattern ( ($generated@@315 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@316 (type $generated@@324))))
(= (type ($generated@@313 $generated@@324)) ($generated@@85 $generated@@325 $generated@@4)))
 :pattern ( ($generated@@313 $generated@@324))
))) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= (type ($generated@@314 $generated@@326 $generated@@327)) ($generated@@315 $generated@@326 $generated@@327))
 :pattern ( ($generated@@314 $generated@@326 $generated@@327))
))))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@T) ) (! (let (($generated@@330 (type $generated@@328)))
 (not ($generated@@0 ($generated@@90 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328))))
 :pattern ( (let (($generated@@330 (type $generated@@328)))
($generated@@90 ($generated@@313 ($generated@@314 $generated@@330 $generated@@329)) $generated@@328)))
)))
(assert  (and (and (and (and (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (= ($generated@@1 ($generated@@333 $generated@@336 $generated@@337)) 19)) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@338 $generated@@339)) $generated@@338)
 :pattern ( ($generated@@333 $generated@@338 $generated@@339))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@335 ($generated@@333 $generated@@340 $generated@@341)) $generated@@341)
 :pattern ( ($generated@@333 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@U) ) (! (let (($generated@@343 ($generated@@334 (type $generated@@342))))
(= (type ($generated@@331 $generated@@342)) ($generated@@85 $generated@@343 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@342))
))) (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (! (= (type ($generated@@332 $generated@@344 $generated@@345)) ($generated@@333 $generated@@344 $generated@@345))
 :pattern ( ($generated@@332 $generated@@344 $generated@@345))
))))
(assert (forall (($generated@@346 T@U) ($generated@@347 T@T) ) (! (let (($generated@@348 (type $generated@@346)))
 (not ($generated@@0 ($generated@@90 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346))))
 :pattern ( (let (($generated@@348 (type $generated@@346)))
($generated@@90 ($generated@@331 ($generated@@332 $generated@@348 $generated@@347)) $generated@@346)))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@88 (type $generated@@349))))
 (=> (= (type $generated@@349) ($generated@@85 $generated@@350 $generated@@2)) (= ($generated@@169 $generated@@349) (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@350) (and (<= 0 ($generated ($generated@@90 $generated@@349 $generated@@351))) (<= ($generated ($generated@@90 $generated@@349 $generated@@351)) ($generated@@307 $generated@@349))))
 :pattern ( ($generated@@90 $generated@@349 $generated@@351))
)))))
 :pattern ( ($generated@@169 $generated@@349))
)))
(assert (forall (($generated@@353 T@T) ($generated@@354 T@U) ) (! (= (type ($generated@@352 $generated@@353 $generated@@354)) $generated@@353)
 :pattern ( ($generated@@352 $generated@@353 $generated@@354))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@158) ($generated@@234 $generated@@355 $generated@@241)) (and (= ($generated@@294 ($generated@@352 $generated@@149 $generated@@355)) $generated@@355) ($generated@@145 ($generated@@352 $generated@@149 $generated@@355) $generated@@241)))
 :pattern ( ($generated@@234 $generated@@355 $generated@@241))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@158) ($generated@@234 $generated@@356 $generated@@242)) (and (= ($generated@@294 ($generated@@352 $generated@@149 $generated@@356)) $generated@@356) ($generated@@145 ($generated@@352 $generated@@149 $generated@@356) $generated@@242)))
 :pattern ( ($generated@@234 $generated@@356 $generated@@242))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@158) ($generated@@234 $generated@@357 $generated@@230)) (and (= ($generated@@294 ($generated@@352 $generated@@149 $generated@@357)) $generated@@357) ($generated@@145 ($generated@@352 $generated@@149 $generated@@357) $generated@@230)))
 :pattern ( ($generated@@234 $generated@@357 $generated@@230))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@317 (type $generated@@358))))
(let (($generated@@360 ($generated@@316 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@315 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@314 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@360) ($generated@@0 ($generated@@90 ($generated@@313 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@313 $generated@@358))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@317 (type $generated@@363))))
(= (type ($generated@@362 $generated@@363)) ($generated@@85 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@317 (type $generated@@365))))
(let (($generated@@367 ($generated@@316 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@315 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@314 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@366) ($generated@@0 ($generated@@90 ($generated@@362 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@335 (type $generated@@369))))
(let (($generated@@371 ($generated@@334 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@333 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@332 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) ($generated@@0 ($generated@@90 ($generated@@331 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@331 $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@335 (type $generated@@374))))
(= (type ($generated@@373 $generated@@374)) ($generated@@85 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@335 (type $generated@@376))))
(let (($generated@@378 ($generated@@334 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@333 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@332 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@377) ($generated@@0 ($generated@@90 ($generated@@373 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@373 $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@85 $generated@@158 $generated@@2)) (= (type $generated@@381) $generated@@73)) (= ($generated@@145 $generated@@380 ($generated@@168 $generated@@381)) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@158) (< 0 ($generated ($generated@@90 $generated@@380 $generated@@382)))) ($generated@@234 $generated@@382 $generated@@381))
 :pattern ( ($generated@@90 $generated@@380 $generated@@382))
))))
 :pattern ( ($generated@@145 $generated@@380 ($generated@@168 $generated@@381)))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@383) $generated@@149) (= (type $generated@@384) $generated@@149)) true) (= ($generated@@249 $generated@@383 $generated@@384) true))
 :pattern ( ($generated@@249 $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (= (type $generated@@385) $generated@@149) (= (type $generated@@386) $generated@@149)) true) (= ($generated@@252 $generated@@385 $generated@@386) true))
 :pattern ( ($generated@@252 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@387) $generated@@149) (= (type $generated@@388) $generated@@149)) true) (= ($generated@@255 $generated@@387 $generated@@388) true))
 :pattern ( ($generated@@255 $generated@@387 $generated@@388))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) ($generated@@85 $generated@@158 $generated@@4)) (= (type $generated@@390) $generated@@73)) (= (type $generated@@391) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@389 ($generated@@258 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@158) ($generated@@0 ($generated@@90 $generated@@389 $generated@@392))) ($generated@@274 $generated@@392 $generated@@390 $generated@@391))
 :pattern ( ($generated@@90 $generated@@389 $generated@@392))
))))
 :pattern ( ($generated@@83 $generated@@389 ($generated@@258 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@85 $generated@@158 $generated@@4)) (= (type $generated@@394) $generated@@73)) (= (type $generated@@395) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@393 ($generated@@263 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@158) ($generated@@0 ($generated@@90 $generated@@393 $generated@@396))) ($generated@@274 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@90 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@83 $generated@@393 ($generated@@263 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(= ($generated ($generated@@90 ($generated@@308 $generated@@398) $generated@@397)) 0))
 :pattern ( (let (($generated@@398 (type $generated@@397)))
($generated@@90 ($generated@@308 $generated@@398) $generated@@397)))
)))
(assert  (and (forall (($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@401)) ($generated@@85 $generated@@158 $generated@@4))
 :pattern ( ($generated@@399 $generated@@401))
)) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@317 (type $generated@@402))))
(let (($generated@@404 ($generated@@316 (type $generated@@402))))
(= (type ($generated@@400 $generated@@402)) ($generated@@85 $generated@@404 $generated@@403))))
 :pattern ( ($generated@@400 $generated@@402))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@315 $generated@@158 $generated@@158)) (= (type $generated@@406) $generated@@158)) (= ($generated@@0 ($generated@@90 ($generated@@399 $generated@@405) $generated@@406))  (and ($generated@@0 ($generated@@90 ($generated@@313 $generated@@405) ($generated@@156 ($generated@@352 $generated@@149 $generated@@406)))) (= ($generated@@90 ($generated@@400 $generated@@405) ($generated@@156 ($generated@@352 $generated@@149 $generated@@406))) ($generated@@157 ($generated@@352 $generated@@149 $generated@@406))))))
 :pattern ( ($generated@@90 ($generated@@399 $generated@@405) $generated@@406))
)))
(assert  (and (forall (($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@409)) ($generated@@85 $generated@@158 $generated@@4))
 :pattern ( ($generated@@407 $generated@@409))
)) (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@335 (type $generated@@410))))
(let (($generated@@412 ($generated@@334 (type $generated@@410))))
(= (type ($generated@@408 $generated@@410)) ($generated@@85 $generated@@412 $generated@@411))))
 :pattern ( ($generated@@408 $generated@@410))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@413) ($generated@@333 $generated@@158 $generated@@158)) (= (type $generated@@414) $generated@@158)) (= ($generated@@0 ($generated@@90 ($generated@@407 $generated@@413) $generated@@414))  (and ($generated@@0 ($generated@@90 ($generated@@331 $generated@@413) ($generated@@156 ($generated@@352 $generated@@149 $generated@@414)))) (= ($generated@@90 ($generated@@408 $generated@@413) ($generated@@156 ($generated@@352 $generated@@149 $generated@@414))) ($generated@@157 ($generated@@352 $generated@@149 $generated@@414))))))
 :pattern ( ($generated@@90 ($generated@@407 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
(let (($generated@@418 ($generated@@316 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@315 $generated@@418 $generated@@417)) (= ($generated@@0 ($generated@@90 ($generated@@362 $generated@@415) $generated@@416)) (exists (($generated@@419 T@U) ) (!  (and (= (type $generated@@419) $generated@@418) (and ($generated@@0 ($generated@@90 ($generated@@313 $generated@@415) $generated@@419)) (= $generated@@416 ($generated@@90 ($generated@@400 $generated@@415) $generated@@419))))
 :pattern ( ($generated@@90 ($generated@@313 $generated@@415) $generated@@419))
 :pattern ( ($generated@@90 ($generated@@400 $generated@@415) $generated@@419))
))))))
 :pattern ( ($generated@@90 ($generated@@362 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@334 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@333 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@90 ($generated@@373 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@90 ($generated@@331 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@90 ($generated@@408 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@90 ($generated@@331 $generated@@420) $generated@@424))
 :pattern ( ($generated@@90 ($generated@@408 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@90 ($generated@@373 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@426 $generated@@427)) $generated@@73)
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (= (type $generated@@428) ($generated@@315 $generated@@158 $generated@@158)) (= (type $generated@@429) $generated@@73)) (= (type $generated@@430) $generated@@73)) (= (type $generated@@431) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@158) ($generated@@0 ($generated@@90 ($generated@@313 $generated@@428) $generated@@432))) (and ($generated@@274 ($generated@@90 ($generated@@400 $generated@@428) $generated@@432) $generated@@430 $generated@@431) ($generated@@274 $generated@@432 $generated@@429 $generated@@431)))
 :pattern ( ($generated@@90 ($generated@@400 $generated@@428) $generated@@432))
 :pattern ( ($generated@@90 ($generated@@313 $generated@@428) $generated@@432))
))))
 :pattern ( ($generated@@83 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@434 $generated@@435)) $generated@@73)
 :pattern ( ($generated@@433 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (and (= (type $generated@@436) ($generated@@333 $generated@@158 $generated@@158)) (= (type $generated@@437) $generated@@73)) (= (type $generated@@438) $generated@@73)) (= (type $generated@@439) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439) (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@158) ($generated@@0 ($generated@@90 ($generated@@331 $generated@@436) $generated@@440))) (and ($generated@@274 ($generated@@90 ($generated@@408 $generated@@436) $generated@@440) $generated@@438 $generated@@439) ($generated@@274 $generated@@440 $generated@@437 $generated@@439)))
 :pattern ( ($generated@@90 ($generated@@408 $generated@@436) $generated@@440))
 :pattern ( ($generated@@90 ($generated@@331 $generated@@436) $generated@@440))
))))
 :pattern ( ($generated@@83 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@441) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@442) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@443) ($generated@@85 $generated@@86 $generated@@87))) (not (= $generated@@441 $generated@@443))) (and ($generated@@141 $generated@@441 $generated@@442) ($generated@@141 $generated@@442 $generated@@443))) ($generated@@141 $generated@@441 $generated@@443))
 :pattern ( ($generated@@141 $generated@@441 $generated@@442) ($generated@@141 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@T) ) (! (= (type ($generated@@444 $generated@@445)) ($generated@@85 $generated@@445 $generated@@4))
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@335 (type $generated@@446))))
(let (($generated@@448 ($generated@@334 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@333 $generated@@448 $generated@@447)) (= (= $generated@@446 ($generated@@332 $generated@@448 $generated@@447)) (= ($generated@@331 $generated@@446) ($generated@@444 $generated@@448))))))
 :pattern ( ($generated@@331 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@335 (type $generated@@449))))
(let (($generated@@451 ($generated@@334 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@333 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@332 $generated@@451 $generated@@450)) (= ($generated@@373 $generated@@449) ($generated@@444 $generated@@450))))))
 :pattern ( ($generated@@373 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@335 (type $generated@@452))))
(let (($generated@@454 ($generated@@334 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@333 $generated@@454 $generated@@453)) (= (= $generated@@452 ($generated@@332 $generated@@454 $generated@@453)) (= ($generated@@407 $generated@@452) ($generated@@444 $generated@@158))))))
 :pattern ( ($generated@@407 $generated@@452))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@317 (type $generated@@455))))
(let (($generated@@457 ($generated@@316 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@315 $generated@@457 $generated@@456)) (or (= $generated@@455 ($generated@@314 $generated@@457 $generated@@456)) (exists (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (and (and (= (type $generated@@458) $generated@@158) (= (type $generated@@459) $generated@@158)) ($generated@@0 ($generated@@90 ($generated@@399 $generated@@455) ($generated@@294 ($generated@@233 $generated@@458 $generated@@459)))))
 :no-pattern (type $generated@@458)
 :no-pattern (type $generated@@459)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
))))))
 :pattern ( ($generated@@399 $generated@@455))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@335 (type $generated@@460))))
(let (($generated@@462 ($generated@@334 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@333 $generated@@462 $generated@@461)) (or (= $generated@@460 ($generated@@332 $generated@@462 $generated@@461)) (exists (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (and (and (= (type $generated@@463) $generated@@158) (= (type $generated@@464) $generated@@158)) ($generated@@0 ($generated@@90 ($generated@@407 $generated@@460) ($generated@@294 ($generated@@233 $generated@@463 $generated@@464)))))
 :no-pattern (type $generated@@463)
 :no-pattern (type $generated@@464)
 :no-pattern ($generated $generated@@463)
 :no-pattern ($generated@@0 $generated@@463)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
))))))
 :pattern ( ($generated@@407 $generated@@460))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@158) ($generated@@234 $generated@@465 $generated@@46)) (and (= ($generated@@294 ($generated@@352 $generated@@2 $generated@@465)) $generated@@465) ($generated@@145 ($generated@@352 $generated@@2 $generated@@465) $generated@@46)))
 :pattern ( ($generated@@234 $generated@@465 $generated@@46))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@158) ($generated@@234 $generated@@466 $generated@@47)) (and (= ($generated@@294 ($generated@@352 $generated@@3 $generated@@466)) $generated@@466) ($generated@@145 ($generated@@352 $generated@@3 $generated@@466) $generated@@47)))
 :pattern ( ($generated@@234 $generated@@466 $generated@@47))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@158) ($generated@@234 $generated@@467 $generated@@44)) (and (= ($generated@@294 ($generated@@352 $generated@@4 $generated@@467)) $generated@@467) ($generated@@145 ($generated@@352 $generated@@4 $generated@@467) $generated@@44)))
 :pattern ( ($generated@@234 $generated@@467 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@468) 20))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@158) ($generated@@234 $generated@@469 $generated@@45)) (and (= ($generated@@294 ($generated@@352 $generated@@468 $generated@@469)) $generated@@469) ($generated@@145 ($generated@@352 $generated@@468 $generated@@469) $generated@@45)))
 :pattern ( ($generated@@234 $generated@@469 $generated@@45))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@73) (= ($generated@@234 ($generated@@294 $generated@@470) $generated@@471) ($generated@@145 $generated@@470 $generated@@471)))
 :pattern ( ($generated@@234 ($generated@@294 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@88 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@85 $generated@@473 $generated@@2)) (<= 0 ($generated@@307 $generated@@472))))
 :pattern ( ($generated@@307 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@288 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@287 $generated@@475)) (<= 0 ($generated@@286 $generated@@474))))
 :pattern ( ($generated@@286 $generated@@474))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@73)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@73) (= (type $generated@@479) $generated@@73)) (= ($generated@@476 ($generated@@425 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@425 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@73)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@73) (= (type $generated@@483) $generated@@73)) (= ($generated@@480 ($generated@@425 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@425 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@73) (= (type $generated@@485) $generated@@73)) (= ($generated@@81 ($generated@@425 $generated@@484 $generated@@485)) $generated@@58))
 :pattern ( ($generated@@425 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@73)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@73) (= (type $generated@@489) $generated@@73)) (= ($generated@@486 ($generated@@433 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@433 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@73)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@73) (= (type $generated@@493) $generated@@73)) (= ($generated@@490 ($generated@@433 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@433 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@73) (= (type $generated@@495) $generated@@73)) (= ($generated@@81 ($generated@@433 $generated@@494 $generated@@495)) $generated@@59))
 :pattern ( ($generated@@433 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@158) (= (type $generated@@497) $generated@@158)) (= ($generated@@163 ($generated@@233 $generated@@496 $generated@@497)) $generated@@61))
 :pattern ( ($generated@@233 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@73)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@73) (= (type $generated@@501) $generated@@73)) (= ($generated@@498 ($generated@@148 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@148 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@73)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@73) (= (type $generated@@505) $generated@@73)) (= ($generated@@502 ($generated@@148 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@148 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@158) (= (type $generated@@507) $generated@@158)) (= ($generated@@156 ($generated@@233 $generated@@506 $generated@@507)) $generated@@506))
 :pattern ( ($generated@@233 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@158) (= (type $generated@@509) $generated@@158)) (= ($generated@@157 ($generated@@233 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@233 $generated@@508 $generated@@509))
)))
(assert  (and (forall (($generated@@512 T@U) ) (! (= (type ($generated@@510 $generated@@512)) $generated@@73)
 :pattern ( ($generated@@510 $generated@@512))
)) (forall (($generated@@513 T@U) ($generated@@514 Int) ) (! (let (($generated@@515 ($generated@@288 (type $generated@@513))))
(= (type ($generated@@511 $generated@@513 $generated@@514)) $generated@@515))
 :pattern ( ($generated@@511 $generated@@513 $generated@@514))
))))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@516) ($generated@@287 $generated@@158)) (= (type $generated@@517) $generated@@73)) (= (type $generated@@518) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@516 ($generated@@510 $generated@@517) $generated@@518) (forall (($generated@@519 Int) ) (!  (=> (and (<= 0 $generated@@519) (< $generated@@519 ($generated@@286 $generated@@516))) ($generated@@274 ($generated@@511 $generated@@516 $generated@@519) $generated@@517 $generated@@518))
 :pattern ( ($generated@@511 $generated@@516 $generated@@519))
))))
 :pattern ( ($generated@@83 $generated@@516 ($generated@@510 $generated@@517) $generated@@518))
)))
(assert (forall (($generated@@521 Int) ) (! (= ($generated@@520 ($generated@@84 $generated@@521)) $generated@@521)
 :pattern ( ($generated@@84 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@73)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@73) (= ($generated@@522 ($generated@@258 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@258 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@73) (= ($generated@@81 ($generated@@258 $generated@@525)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@73)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@73) (= ($generated@@526 ($generated@@263 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@263 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@73) (= ($generated@@81 ($generated@@263 $generated@@529)) $generated@@55))
 :pattern ( ($generated@@263 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@73)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@73) (= ($generated@@530 ($generated@@168 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@168 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@73) (= ($generated@@81 ($generated@@168 $generated@@533)) $generated@@56))
 :pattern ( ($generated@@168 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@73)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@73) (= ($generated@@534 ($generated@@510 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@510 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@73) (= ($generated@@81 ($generated@@510 $generated@@537)) $generated@@57))
 :pattern ( ($generated@@510 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
(= ($generated@@352 $generated@@539 ($generated@@294 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@294 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@315 $generated@@158 $generated@@158)) (= (type $generated@@541) $generated@@73)) (= (type $generated@@542) $generated@@73)) (= ($generated@@145 $generated@@540 ($generated@@425 $generated@@541 $generated@@542)) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@158) ($generated@@0 ($generated@@90 ($generated@@313 $generated@@540) $generated@@543))) (and ($generated@@234 ($generated@@90 ($generated@@400 $generated@@540) $generated@@543) $generated@@542) ($generated@@234 $generated@@543 $generated@@541)))
 :pattern ( ($generated@@90 ($generated@@400 $generated@@540) $generated@@543))
 :pattern ( ($generated@@90 ($generated@@313 $generated@@540) $generated@@543))
))))
 :pattern ( ($generated@@145 $generated@@540 ($generated@@425 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@333 $generated@@158 $generated@@158)) (= (type $generated@@545) $generated@@73)) (= (type $generated@@546) $generated@@73)) (= ($generated@@145 $generated@@544 ($generated@@433 $generated@@545 $generated@@546)) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@158) ($generated@@0 ($generated@@90 ($generated@@331 $generated@@544) $generated@@547))) (and ($generated@@234 ($generated@@90 ($generated@@408 $generated@@544) $generated@@547) $generated@@546) ($generated@@234 $generated@@547 $generated@@545)))
 :pattern ( ($generated@@90 ($generated@@408 $generated@@544) $generated@@547))
 :pattern ( ($generated@@90 ($generated@@331 $generated@@544) $generated@@547))
))))
 :pattern ( ($generated@@145 $generated@@544 ($generated@@433 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@158) (= (type $generated@@551) $generated@@158)) (< ($generated@@548 $generated@@550) ($generated@@549 ($generated@@233 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@233 $generated@@550 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@158) (= (type $generated@@553) $generated@@158)) (< ($generated@@548 $generated@@553) ($generated@@549 ($generated@@233 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@233 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@158) (= (type $generated@@555) $generated@@73)) (= (type $generated@@556) $generated@@73)) ($generated@@234 $generated@@554 ($generated@@425 $generated@@555 $generated@@556))) (and (= ($generated@@294 ($generated@@352 ($generated@@315 $generated@@158 $generated@@158) $generated@@554)) $generated@@554) ($generated@@145 ($generated@@352 ($generated@@315 $generated@@158 $generated@@158) $generated@@554) ($generated@@425 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@234 $generated@@554 ($generated@@425 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@158) (= (type $generated@@558) $generated@@73)) (= (type $generated@@559) $generated@@73)) ($generated@@234 $generated@@557 ($generated@@433 $generated@@558 $generated@@559))) (and (= ($generated@@294 ($generated@@352 ($generated@@333 $generated@@158 $generated@@158) $generated@@557)) $generated@@557) ($generated@@145 ($generated@@352 ($generated@@333 $generated@@158 $generated@@158) $generated@@557) ($generated@@433 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@234 $generated@@557 ($generated@@433 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@73) (= (type $generated@@561) $generated@@73)) (= (type $generated@@562) $generated@@158)) ($generated@@234 $generated@@562 ($generated@@148 $generated@@560 $generated@@561))) (and (= ($generated@@294 ($generated@@352 $generated@@149 $generated@@562)) $generated@@562) ($generated@@145 ($generated@@352 $generated@@149 $generated@@562) ($generated@@148 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@234 $generated@@562 ($generated@@148 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 (type $generated@@563)))
 (not ($generated@@0 ($generated@@90 ($generated@@444 $generated@@564) $generated@@563))))
 :pattern ( (let (($generated@@564 (type $generated@@563)))
($generated@@90 ($generated@@444 $generated@@564) $generated@@563)))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@78)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@73) (= (type $generated@@568) $generated@@73)) (and (= ($generated@@81 ($generated@@148 $generated@@567 $generated@@568)) $generated@@62) (= ($generated@@565 ($generated@@148 $generated@@567 $generated@@568)) $generated@@69)))
 :pattern ( ($generated@@148 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@149) (= ($generated@@548 ($generated@@294 $generated@@569)) ($generated@@549 $generated@@569)))
 :pattern ( ($generated@@548 ($generated@@294 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@158) ($generated@@234 $generated@@570 ($generated@@84 0))) (and (= ($generated@@294 ($generated@@352 $generated@@2 $generated@@570)) $generated@@570) ($generated@@145 ($generated@@352 ($generated@@85 $generated@@158 $generated@@4) $generated@@570) ($generated@@84 0))))
 :pattern ( ($generated@@234 $generated@@570 ($generated@@84 0)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@158) (= (type $generated@@572) $generated@@73)) ($generated@@234 $generated@@571 ($generated@@258 $generated@@572))) (and (= ($generated@@294 ($generated@@352 ($generated@@85 $generated@@158 $generated@@4) $generated@@571)) $generated@@571) ($generated@@145 ($generated@@352 ($generated@@85 $generated@@158 $generated@@4) $generated@@571) ($generated@@258 $generated@@572))))
 :pattern ( ($generated@@234 $generated@@571 ($generated@@258 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@158) (= (type $generated@@574) $generated@@73)) ($generated@@234 $generated@@573 ($generated@@263 $generated@@574))) (and (= ($generated@@294 ($generated@@352 ($generated@@85 $generated@@158 $generated@@4) $generated@@573)) $generated@@573) ($generated@@145 ($generated@@352 ($generated@@85 $generated@@158 $generated@@4) $generated@@573) ($generated@@263 $generated@@574))))
 :pattern ( ($generated@@234 $generated@@573 ($generated@@263 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@158) (= (type $generated@@576) $generated@@73)) ($generated@@234 $generated@@575 ($generated@@168 $generated@@576))) (and (= ($generated@@294 ($generated@@352 ($generated@@85 $generated@@158 $generated@@2) $generated@@575)) $generated@@575) ($generated@@145 ($generated@@352 ($generated@@85 $generated@@158 $generated@@2) $generated@@575) ($generated@@168 $generated@@576))))
 :pattern ( ($generated@@234 $generated@@575 ($generated@@168 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@158) (= (type $generated@@578) $generated@@73)) ($generated@@234 $generated@@577 ($generated@@510 $generated@@578))) (and (= ($generated@@294 ($generated@@352 ($generated@@287 $generated@@158) $generated@@577)) $generated@@577) ($generated@@145 ($generated@@352 ($generated@@287 $generated@@158) $generated@@577) ($generated@@510 $generated@@578))))
 :pattern ( ($generated@@234 $generated@@577 ($generated@@510 $generated@@578)))
)))
(assert  (=> true (=> true (= $generated@@229 ($generated@@270 $generated@@167)))))
(assert  (=> true (=> true (= $generated@@229 ($generated@@270 $generated@@167)))))
(assert (= ($generated@@81 $generated@@241) $generated@@64))
(assert (= ($generated@@565 $generated@@241) $generated@@70))
(assert (= ($generated@@81 $generated@@242) $generated@@66))
(assert (= ($generated@@565 $generated@@242) $generated@@71))
(assert (= ($generated@@81 $generated@@230) $generated@@67))
(assert (= ($generated@@565 $generated@@230) $generated@@72))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@85 $generated@@158 $generated@@2)) (= (type $generated@@580) $generated@@73)) (= (type $generated@@581) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@579 ($generated@@168 $generated@@580) $generated@@581) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@158) (< 0 ($generated ($generated@@90 $generated@@579 $generated@@582)))) ($generated@@274 $generated@@582 $generated@@580 $generated@@581))
 :pattern ( ($generated@@90 $generated@@579 $generated@@582))
))))
 :pattern ( ($generated@@83 $generated@@579 ($generated@@168 $generated@@580) $generated@@581))
)))
(assert (= $generated@@164 ($generated@@270 $generated@@164)))
(assert (= $generated@@166 ($generated@@270 $generated@@166)))
(assert (= $generated@@167 ($generated@@270 $generated@@167)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@149) (= (type $generated@@584) $generated@@73)) (= (type $generated@@585) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@243 $generated@@585) (and ($generated@@147 $generated@@583) (exists (($generated@@586 T@U) ) (!  (and (= (type $generated@@586) $generated@@73) ($generated@@83 $generated@@583 ($generated@@148 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@83 $generated@@583 ($generated@@148 $generated@@584 $generated@@586) $generated@@585))
))))) ($generated@@274 ($generated@@156 $generated@@583) $generated@@584 $generated@@585))
 :pattern ( ($generated@@274 ($generated@@156 $generated@@583) $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) $generated@@149) (= (type $generated@@588) $generated@@73)) (= (type $generated@@589) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@243 $generated@@589) (and ($generated@@147 $generated@@587) (exists (($generated@@590 T@U) ) (!  (and (= (type $generated@@590) $generated@@73) ($generated@@83 $generated@@587 ($generated@@148 $generated@@590 $generated@@588) $generated@@589))
 :pattern ( ($generated@@83 $generated@@587 ($generated@@148 $generated@@590 $generated@@588) $generated@@589))
))))) ($generated@@274 ($generated@@157 $generated@@587) $generated@@588 $generated@@589))
 :pattern ( ($generated@@274 ($generated@@157 $generated@@587) $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@158) (= (type $generated@@592) $generated@@158)) (= ($generated@@233 ($generated@@270 $generated@@591) ($generated@@270 $generated@@592)) ($generated@@270 ($generated@@233 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@233 ($generated@@270 $generated@@591) ($generated@@270 $generated@@592)))
)))
(assert (forall (($generated@@593 Int) ) (! (= ($generated@@294 ($generated@@8 ($generated@@268 $generated@@593))) ($generated@@270 ($generated@@294 ($generated@@8 $generated@@593))))
 :pattern ( ($generated@@294 ($generated@@8 ($generated@@268 $generated@@593))))
)))
(assert (forall (($generated@@594 T@U) ) (! (= ($generated@@294 ($generated@@270 $generated@@594)) ($generated@@270 ($generated@@294 $generated@@594)))
 :pattern ( ($generated@@294 ($generated@@270 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ) (! (let (($generated@@596 ($generated@@288 (type $generated@@595))))
 (=> (and (= (type $generated@@595) ($generated@@287 $generated@@596)) (= ($generated@@286 $generated@@595) 0)) (= $generated@@595 ($generated@@285 $generated@@596))))
 :pattern ( ($generated@@286 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (! (let (($generated@@600 (type $generated@@598)))
 (=> (and (and (= (type $generated@@597) ($generated@@85 $generated@@600 $generated@@2)) (= (type $generated@@599) $generated@@2)) (<= 0 ($generated $generated@@599))) (= ($generated@@307 ($generated@@91 $generated@@597 $generated@@598 $generated@@599)) (+ (- ($generated@@307 $generated@@597) ($generated ($generated@@90 $generated@@597 $generated@@598))) ($generated $generated@@599)))))
 :pattern ( ($generated@@307 ($generated@@91 $generated@@597 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@602) $generated@@2)) ($generated@@83 $generated@@602 $generated@@46 $generated@@601))
 :pattern ( ($generated@@83 $generated@@602 $generated@@46 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@604) $generated@@3)) ($generated@@83 $generated@@604 $generated@@47 $generated@@603))
 :pattern ( ($generated@@83 $generated@@604 $generated@@47 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@606) $generated@@4)) ($generated@@83 $generated@@606 $generated@@44 $generated@@605))
 :pattern ( ($generated@@83 $generated@@606 $generated@@44 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@608) $generated@@468)) ($generated@@83 $generated@@608 $generated@@45 $generated@@607))
 :pattern ( ($generated@@83 $generated@@608 $generated@@45 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@610) $generated@@158)) ($generated@@83 $generated@@610 $generated@@48 $generated@@609))
 :pattern ( ($generated@@83 $generated@@610 $generated@@48 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@287 $generated@@158)) (= (type $generated@@612) $generated@@73)) (= ($generated@@145 $generated@@611 ($generated@@510 $generated@@612)) (forall (($generated@@613 Int) ) (!  (=> (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@286 $generated@@611))) ($generated@@234 ($generated@@511 $generated@@611 $generated@@613) $generated@@612))
 :pattern ( ($generated@@511 $generated@@611 $generated@@613))
))))
 :pattern ( ($generated@@145 $generated@@611 ($generated@@510 $generated@@612)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 Int) ) (!  (=> (= (type $generated@@615) ($generated@@287 $generated@@158)) (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@286 $generated@@615))) (< ($generated@@549 ($generated@@352 $generated@@149 ($generated@@511 $generated@@615 $generated@@616))) ($generated@@614 $generated@@615))))
 :pattern ( ($generated@@549 ($generated@@352 $generated@@149 ($generated@@511 $generated@@615 $generated@@616))))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) ($generated@@315 $generated@@158 $generated@@158)) (= (type $generated@@618) $generated@@73)) (= (type $generated@@619) $generated@@73)) ($generated@@145 $generated@@617 ($generated@@425 $generated@@618 $generated@@619))) (and (and ($generated@@145 ($generated@@313 $generated@@617) ($generated@@258 $generated@@618)) ($generated@@145 ($generated@@362 $generated@@617) ($generated@@258 $generated@@619))) ($generated@@145 ($generated@@399 $generated@@617) ($generated@@258 ($generated@@148 $generated@@618 $generated@@619)))))
 :pattern ( ($generated@@145 $generated@@617 ($generated@@425 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) ($generated@@333 $generated@@158 $generated@@158)) (= (type $generated@@621) $generated@@73)) (= (type $generated@@622) $generated@@73)) ($generated@@145 $generated@@620 ($generated@@433 $generated@@621 $generated@@622))) (and (and ($generated@@145 ($generated@@331 $generated@@620) ($generated@@263 $generated@@621)) ($generated@@145 ($generated@@373 $generated@@620) ($generated@@263 $generated@@622))) ($generated@@145 ($generated@@407 $generated@@620) ($generated@@263 ($generated@@148 $generated@@621 $generated@@622)))))
 :pattern ( ($generated@@145 $generated@@620 ($generated@@433 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@2) ($generated@@145 $generated@@623 $generated@@46))
 :pattern ( ($generated@@145 $generated@@623 $generated@@46))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@3) ($generated@@145 $generated@@624 $generated@@47))
 :pattern ( ($generated@@145 $generated@@624 $generated@@47))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@4) ($generated@@145 $generated@@625 $generated@@44))
 :pattern ( ($generated@@145 $generated@@625 $generated@@44))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@468) ($generated@@145 $generated@@626 $generated@@45))
 :pattern ( ($generated@@145 $generated@@626 $generated@@45))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@158) ($generated@@145 $generated@@627 $generated@@48))
 :pattern ( ($generated@@145 $generated@@627 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
