(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U) Bool)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 (T@U) Bool)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@T) T@T)
(declare-fun $generated@@144 (T@U) Int)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@236 (T@U T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@261 (T@U T@U T@U) Bool)
(declare-fun $generated@@267 (T@U) T@U)
(declare-fun $generated@@273 (T@T) T@U)
(declare-fun $generated@@274 (T@U) Int)
(declare-fun $generated@@277 () Bool)
(declare-fun $generated@@278 () T@U)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@T) T@U)
(declare-fun $generated@@290 (T@U) T@U)
(declare-fun $generated@@291 (T@T T@T) T@U)
(declare-fun $generated@@292 (T@T T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@294 (T@T) T@T)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@309 (T@T T@T) T@U)
(declare-fun $generated@@310 (T@T T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@365 (T@T T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@409 () Bool)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@431 () Int)
(declare-fun $generated@@439 () T@T)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@481 (T@U Int) T@U)
(declare-fun $generated@@489 (T@U) Int)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@518 (T@U) Int)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@582 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@140 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@140)) 14)) (forall (($generated@@141 T@T) ) (! (= ($generated@@139 ($generated@@134 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@134 $generated@@141))
))) (= ($generated@@1 $generated@@135) 15)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@138 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@142))
))))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@143) ($generated@@134 $generated@@135)) (or ($generated@@136 $generated@@143) (and (not (= 1 $generated@@132)) ($generated@@137 $generated@@143 ($generated@@138 $generated@@46))))) true)
 :pattern ( ($generated@@133 $generated@@143))
))))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) ($generated@@134 $generated@@135)) (or ($generated@@145 $generated@@146) (and (not (= 1 $generated@@132)) ($generated@@137 $generated@@146 ($generated@@138 $generated@@46))))) true)
 :pattern ( ($generated@@144 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@2) ($generated@@137 $generated@@147 ($generated@@75 0)))
 :pattern ( ($generated@@137 $generated@@147 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@150) 16) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@64) (= (type $generated@@154) $generated@@64)) (= (type $generated@@155) $generated@@150)) ($generated@@137 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@137 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@135)
 :pattern ( ($generated@@157 $generated@@159))
)) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@135)
 :pattern ( ($generated@@158 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@150) (= (type $generated@@162) $generated@@150)) true) (= ($generated@@156 $generated@@161 $generated@@162)  (and (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)) (= ($generated@@158 $generated@@161) ($generated@@158 $generated@@162)))))
 :pattern ( ($generated@@156 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@64)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@167) $generated@@64)) ($generated@@137 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@137 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@170 $generated@@174 $generated@@175)) 17)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@171 ($generated@@170 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@172 ($generated@@170 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@170 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@172 (type $generated@@180))))
(= (type ($generated@@168 $generated@@180 $generated@@181 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@168 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(let (($generated@@189 (type $generated@@185)))
(= (type ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@170 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@172 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@168 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@168 ($generated@@173 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@168 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@168 ($generated@@173 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@168 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@168 ($generated@@173 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@168 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ) (! (= (type ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@170 $generated@@77 $generated@@4))
 :pattern ( ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@67 (type $generated@@222))))
 (=> (and (and (and (and (= (type $generated@@217) $generated@@77) (= (type $generated@@218) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@219) ($generated@@66 $generated@@4))) (= (type $generated@@221) $generated@@77)) (= (type $generated@@222) ($generated@@66 $generated@@223))) (= ($generated@@0 ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (not (= $generated@@221 $generated@@217)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@218 $generated@@221) $generated@@219))) $generated@@220))))
 :pattern ( ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@170 $generated@@77 $generated@@4))
 :pattern ( ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@67 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@77) (= (type $generated@@230) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@231) ($generated@@66 $generated@@4))) (= (type $generated@@233) $generated@@77)) (= (type $generated@@234) ($generated@@66 $generated@@235))) (= ($generated@@0 ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! (= (type ($generated@@236 $generated@@238 $generated@@239)) $generated@@150)
 :pattern ( ($generated@@236 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (and (= (type $generated@@240) $generated@@64) (= (type $generated@@241) $generated@@64)) (= (type $generated@@242) $generated@@135)) (= (type $generated@@243) $generated@@135)) (= ($generated@@137 ($generated@@236 $generated@@242 $generated@@243) ($generated@@149 $generated@@240 $generated@@241))  (and ($generated@@237 $generated@@242 $generated@@240) ($generated@@237 $generated@@243 $generated@@241))))
 :pattern ( ($generated@@137 ($generated@@236 $generated@@242 $generated@@243) ($generated@@149 $generated@@240 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@150) (= (type $generated@@245) $generated@@150)) (= ($generated@@156 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@156 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@64)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@249) $generated@@64)) (= ($generated@@137 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@135) ($generated@@0 ($generated@@81 $generated@@248 $generated@@250))) ($generated@@237 $generated@@250 $generated@@249))
 :pattern ( ($generated@@81 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@137 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@64)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@254) $generated@@64)) (= ($generated@@137 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@135) ($generated@@0 ($generated@@81 $generated@@253 $generated@@255))) ($generated@@237 $generated@@255 $generated@@254))
 :pattern ( ($generated@@81 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@137 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (let (($generated@@258 (type $generated@@257)))
(= (type ($generated@@256 $generated@@257)) $generated@@258))
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= ($generated@@256 $generated@@259) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@262) $generated@@64) (= (type $generated@@263) $generated@@64)) (= (type $generated@@264) $generated@@135)) (= (type $generated@@265) $generated@@135)) (= (type $generated@@266) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@260 $generated@@266)) (= ($generated@@74 ($generated@@236 $generated@@264 $generated@@265) ($generated@@149 $generated@@262 $generated@@263) $generated@@266)  (and ($generated@@261 $generated@@264 $generated@@262 $generated@@266) ($generated@@261 $generated@@265 $generated@@263 $generated@@266))))
 :pattern ( ($generated@@74 ($generated@@236 $generated@@264 $generated@@265) ($generated@@149 $generated@@262 $generated@@263) $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= (type ($generated@@267 $generated@@268)) $generated@@68)
 :pattern ( ($generated@@267 $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ) (!  (=> (= (type $generated@@269) $generated@@150) (= ($generated@@148 $generated@@269) (= ($generated@@267 $generated@@269) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@150) ($generated@@148 $generated@@270)) (exists (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (and (and (= (type $generated@@271) $generated@@135) (= (type $generated@@272) $generated@@135)) (= $generated@@270 ($generated@@236 $generated@@271 $generated@@272)))
 :no-pattern (type $generated@@271)
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
)))
 :pattern ( ($generated@@148 $generated@@270))
)))
(assert (forall (($generated@@275 T@T) ) (! (= (type ($generated@@273 $generated@@275)) ($generated@@134 $generated@@275))
 :pattern ( ($generated@@273 $generated@@275))
)))
(assert (forall (($generated@@276 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@276)) 0)
 :pattern ( ($generated@@273 $generated@@276))
)))
(assert (= (type $generated@@278) ($generated@@134 $generated@@135)))
(assert  (=> $generated@@277 (and ($generated@@137 $generated@@278 ($generated@@138 $generated@@46)) ($generated@@133 $generated@@278))))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@135)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@64) (= (type $generated@@283) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@261 ($generated@@279 $generated@@281) $generated@@282 $generated@@283) ($generated@@74 $generated@@281 $generated@@282 $generated@@283)))
 :pattern ( ($generated@@261 ($generated@@279 $generated@@281) $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@286 T@T) ) (! (= (type ($generated@@285 $generated@@286)) ($generated@@76 $generated@@286 $generated@@2))
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (! (let (($generated@@288 ($generated@@79 (type $generated@@287))))
 (=> (= (type $generated@@287) ($generated@@76 $generated@@288 $generated@@2)) (and (= (= ($generated@@284 $generated@@287) 0) (= $generated@@287 ($generated@@285 $generated@@288))) (=> (not (= ($generated@@284 $generated@@287) 0)) (exists (($generated@@289 T@U) ) (!  (and (= (type $generated@@289) $generated@@288) (< 0 ($generated ($generated@@81 $generated@@287 $generated@@289))))
 :no-pattern (type $generated@@289)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
))))))
 :pattern ( ($generated@@284 $generated@@287))
)))
(assert  (and (and (and (and (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (= ($generated@@1 ($generated@@292 $generated@@295 $generated@@296)) 18)) (forall (($generated@@297 T@T) ($generated@@298 T@T) ) (! (= ($generated@@293 ($generated@@292 $generated@@297 $generated@@298)) $generated@@297)
 :pattern ( ($generated@@292 $generated@@297 $generated@@298))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= ($generated@@294 ($generated@@292 $generated@@299 $generated@@300)) $generated@@300)
 :pattern ( ($generated@@292 $generated@@299 $generated@@300))
))) (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@293 (type $generated@@301))))
(= (type ($generated@@290 $generated@@301)) ($generated@@76 $generated@@302 $generated@@4)))
 :pattern ( ($generated@@290 $generated@@301))
))) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= (type ($generated@@291 $generated@@303 $generated@@304)) ($generated@@292 $generated@@303 $generated@@304))
 :pattern ( ($generated@@291 $generated@@303 $generated@@304))
))))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@T) ) (! (let (($generated@@307 (type $generated@@305)))
 (not ($generated@@0 ($generated@@81 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305))))
 :pattern ( (let (($generated@@307 (type $generated@@305)))
($generated@@81 ($generated@@290 ($generated@@291 $generated@@307 $generated@@306)) $generated@@305)))
)))
(assert  (and (and (and (and (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (= ($generated@@1 ($generated@@310 $generated@@313 $generated@@314)) 19)) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@311 ($generated@@310 $generated@@315 $generated@@316)) $generated@@315)
 :pattern ( ($generated@@310 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@312 ($generated@@310 $generated@@317 $generated@@318)) $generated@@318)
 :pattern ( ($generated@@310 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@311 (type $generated@@319))))
(= (type ($generated@@308 $generated@@319)) ($generated@@76 $generated@@320 $generated@@4)))
 :pattern ( ($generated@@308 $generated@@319))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= (type ($generated@@309 $generated@@321 $generated@@322)) ($generated@@310 $generated@@321 $generated@@322))
 :pattern ( ($generated@@309 $generated@@321 $generated@@322))
))))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@T) ) (! (let (($generated@@325 (type $generated@@323)))
 (not ($generated@@0 ($generated@@81 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323))))
 :pattern ( (let (($generated@@325 (type $generated@@323)))
($generated@@81 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323)))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@79 (type $generated@@326))))
 (=> (= (type $generated@@326) ($generated@@76 $generated@@327 $generated@@2)) (= ($generated@@164 $generated@@326) (forall (($generated@@328 T@U) ) (!  (=> (= (type $generated@@328) $generated@@327) (and (<= 0 ($generated ($generated@@81 $generated@@326 $generated@@328))) (<= ($generated ($generated@@81 $generated@@326 $generated@@328)) ($generated@@284 $generated@@326))))
 :pattern ( ($generated@@81 $generated@@326 $generated@@328))
)))))
 :pattern ( ($generated@@164 $generated@@326))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@294 (type $generated@@329))))
(let (($generated@@331 ($generated@@293 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@292 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@291 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@331) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@290 $generated@@329))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@294 (type $generated@@334))))
(= (type ($generated@@333 $generated@@334)) ($generated@@76 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@294 (type $generated@@336))))
(let (($generated@@338 ($generated@@293 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@292 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@291 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@337) ($generated@@0 ($generated@@81 ($generated@@333 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@333 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@312 (type $generated@@340))))
(let (($generated@@342 ($generated@@311 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@310 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@309 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@81 ($generated@@308 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@308 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@312 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@76 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@312 (type $generated@@347))))
(let (($generated@@349 ($generated@@311 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@310 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@309 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@81 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@352) $generated@@64)) (= ($generated@@137 $generated@@351 ($generated@@163 $generated@@352)) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@351 $generated@@353)))) ($generated@@237 $generated@@353 $generated@@352))
 :pattern ( ($generated@@81 $generated@@351 $generated@@353))
))))
 :pattern ( ($generated@@137 $generated@@351 ($generated@@163 $generated@@352)))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (and (= (type $generated@@354) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@355) $generated@@64)) (= (type $generated@@356) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@354 ($generated@@246 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@135) ($generated@@0 ($generated@@81 $generated@@354 $generated@@357))) ($generated@@261 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@81 $generated@@354 $generated@@357))
))))
 :pattern ( ($generated@@74 $generated@@354 ($generated@@246 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (= (type $generated@@358) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@359) $generated@@64)) (= (type $generated@@360) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@358 ($generated@@251 $generated@@359) $generated@@360) (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@135) ($generated@@0 ($generated@@81 $generated@@358 $generated@@361))) ($generated@@261 $generated@@361 $generated@@359 $generated@@360))
 :pattern ( ($generated@@81 $generated@@358 $generated@@361))
))))
 :pattern ( ($generated@@74 $generated@@358 ($generated@@251 $generated@@359) $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 (type $generated@@362)))
(= ($generated ($generated@@81 ($generated@@285 $generated@@363) $generated@@362)) 0))
 :pattern ( (let (($generated@@363 (type $generated@@362)))
($generated@@81 ($generated@@285 $generated@@363) $generated@@362)))
)))
(assert  (and (and (forall (($generated@@367 T@U) ) (! (= (type ($generated@@364 $generated@@367)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@364 $generated@@367))
)) (forall (($generated@@368 T@T) ($generated@@369 T@U) ) (! (= (type ($generated@@365 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@365 $generated@@368 $generated@@369))
))) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@294 (type $generated@@370))))
(let (($generated@@372 ($generated@@293 (type $generated@@370))))
(= (type ($generated@@366 $generated@@370)) ($generated@@76 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@366 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@292 $generated@@135 $generated@@135)) (= (type $generated@@374) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@364 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@81 ($generated@@290 $generated@@373) ($generated@@157 ($generated@@365 $generated@@150 $generated@@374)))) (= ($generated@@81 ($generated@@366 $generated@@373) ($generated@@157 ($generated@@365 $generated@@150 $generated@@374))) ($generated@@158 ($generated@@365 $generated@@150 $generated@@374))))))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@373) $generated@@374))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@312 (type $generated@@378))))
(let (($generated@@380 ($generated@@311 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@76 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@310 $generated@@135 $generated@@135)) (= (type $generated@@382) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@81 ($generated@@308 $generated@@381) ($generated@@157 ($generated@@365 $generated@@150 $generated@@382)))) (= ($generated@@81 ($generated@@376 $generated@@381) ($generated@@157 ($generated@@365 $generated@@150 $generated@@382))) ($generated@@158 ($generated@@365 $generated@@150 $generated@@382))))))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@293 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@292 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@81 ($generated@@333 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@81 ($generated@@290 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@81 ($generated@@366 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@383) $generated@@387))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@81 ($generated@@333 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@311 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@310 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@81 ($generated@@344 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@81 ($generated@@308 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@81 ($generated@@376 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@81 ($generated@@308 $generated@@388) $generated@@392))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@81 ($generated@@344 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@64)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@292 $generated@@135 $generated@@135)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) $generated@@64)) (= (type $generated@@399) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@396) $generated@@400))) (and ($generated@@261 ($generated@@81 ($generated@@366 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@261 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@396) $generated@@400))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@74 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@64)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@310 $generated@@135 $generated@@135)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) $generated@@64)) (= (type $generated@@407) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@308 $generated@@404) $generated@@408))) (and ($generated@@261 ($generated@@81 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@261 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@81 ($generated@@308 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@74 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert  (=> (<= 2 $generated@@132) (=> (or $generated@@409 (not (= 2 $generated@@132))) true)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@76 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@312 (type $generated@@412))))
(let (($generated@@414 ($generated@@311 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@310 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@309 $generated@@414 $generated@@413)) (= ($generated@@308 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@308 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@312 (type $generated@@415))))
(let (($generated@@417 ($generated@@311 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@310 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@309 $generated@@417 $generated@@416)) (= ($generated@@344 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@344 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@312 (type $generated@@418))))
(let (($generated@@420 ($generated@@311 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@310 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@309 $generated@@420 $generated@@419)) (= ($generated@@375 $generated@@418) ($generated@@410 $generated@@135))))))
 :pattern ( ($generated@@375 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@294 (type $generated@@421))))
(let (($generated@@423 ($generated@@293 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@292 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@291 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@135) (= (type $generated@@425) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@364 $generated@@421) ($generated@@279 ($generated@@236 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@364 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@312 (type $generated@@426))))
(let (($generated@@428 ($generated@@311 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@310 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@309 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@135) (= (type $generated@@430) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@375 $generated@@426) ($generated@@279 ($generated@@236 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@375 $generated@@426))
)))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) ($generated@@76 $generated@@77 $generated@@78)) (or $generated@@409 (and (not (= 2 $generated@@132)) ($generated@@260 $generated@@432)))) (and (and $generated@@277 ($generated@@145 $generated@@278)) (= $generated@@431 (let (($generated@@433 $generated@@278))
($generated@@144 $generated@@433)))))
 :pattern ( $generated@@431 ($generated@@260 $generated@@432))
))))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) ($generated@@76 $generated@@77 $generated@@78)) (or $generated@@409 (and (not (= 2 $generated@@132)) ($generated@@260 $generated@@434)))) (and (and $generated@@277 ($generated@@145 $generated@@278)) (= $generated@@431 (let (($generated@@435 $generated@@278))
($generated@@144 $generated@@435)))))
 :weight 3
 :pattern ( $generated@@431 ($generated@@260 $generated@@434))
))))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@135) ($generated@@237 $generated@@436 $generated@@46)) (and (= ($generated@@279 ($generated@@365 $generated@@2 $generated@@436)) $generated@@436) ($generated@@137 ($generated@@365 $generated@@2 $generated@@436) $generated@@46)))
 :pattern ( ($generated@@237 $generated@@436 $generated@@46))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@135) ($generated@@237 $generated@@437 $generated@@47)) (and (= ($generated@@279 ($generated@@365 $generated@@3 $generated@@437)) $generated@@437) ($generated@@137 ($generated@@365 $generated@@3 $generated@@437) $generated@@47)))
 :pattern ( ($generated@@237 $generated@@437 $generated@@47))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@135) ($generated@@237 $generated@@438 $generated@@44)) (and (= ($generated@@279 ($generated@@365 $generated@@4 $generated@@438)) $generated@@438) ($generated@@137 ($generated@@365 $generated@@4 $generated@@438) $generated@@44)))
 :pattern ( ($generated@@237 $generated@@438 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@439) 20))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@135) ($generated@@237 $generated@@440 $generated@@45)) (and (= ($generated@@279 ($generated@@365 $generated@@439 $generated@@440)) $generated@@440) ($generated@@137 ($generated@@365 $generated@@439 $generated@@440) $generated@@45)))
 :pattern ( ($generated@@237 $generated@@440 $generated@@45))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (= (type $generated@@442) $generated@@64) (= ($generated@@237 ($generated@@279 $generated@@441) $generated@@442) ($generated@@137 $generated@@441 $generated@@442)))
 :pattern ( ($generated@@237 ($generated@@279 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@79 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@76 $generated@@444 $generated@@2)) (<= 0 ($generated@@284 $generated@@443))))
 :pattern ( ($generated@@284 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@139 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@134 $generated@@446)) (<= 0 ($generated@@274 $generated@@445))))
 :pattern ( ($generated@@274 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@64)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@64) (= (type $generated@@450) $generated@@64)) (= ($generated@@447 ($generated@@393 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@393 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@64)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@451 ($generated@@393 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@393 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@72 ($generated@@393 $generated@@455 $generated@@456)) $generated@@58))
 :pattern ( ($generated@@393 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@401 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@401 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@401 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@401 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@72 ($generated@@401 $generated@@465 $generated@@466)) $generated@@59))
 :pattern ( ($generated@@401 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@135) (= (type $generated@@468) $generated@@135)) (= ($generated@@267 ($generated@@236 $generated@@467 $generated@@468)) $generated@@61))
 :pattern ( ($generated@@236 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@469 ($generated@@149 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@149 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@64)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@473 ($generated@@149 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@149 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@135) (= (type $generated@@478) $generated@@135)) (= ($generated@@157 ($generated@@236 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@236 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@135) (= (type $generated@@480) $generated@@135)) (= ($generated@@158 ($generated@@236 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@236 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 Int) ) (! (let (($generated@@484 ($generated@@139 (type $generated@@482))))
(= (type ($generated@@481 $generated@@482 $generated@@483)) $generated@@484))
 :pattern ( ($generated@@481 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (and (= (type $generated@@485) ($generated@@134 $generated@@135)) (= (type $generated@@486) $generated@@64)) (= (type $generated@@487) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@485 ($generated@@138 $generated@@486) $generated@@487) (forall (($generated@@488 Int) ) (!  (=> (and (<= 0 $generated@@488) (< $generated@@488 ($generated@@274 $generated@@485))) ($generated@@261 ($generated@@481 $generated@@485 $generated@@488) $generated@@486 $generated@@487))
 :pattern ( ($generated@@481 $generated@@485 $generated@@488))
))))
 :pattern ( ($generated@@74 $generated@@485 ($generated@@138 $generated@@486) $generated@@487))
)))
(assert (forall (($generated@@490 Int) ) (! (= ($generated@@489 ($generated@@75 $generated@@490)) $generated@@490)
 :pattern ( ($generated@@75 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@491 ($generated@@246 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@246 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@72 ($generated@@246 $generated@@494)) $generated@@54))
 :pattern ( ($generated@@246 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@251 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@251 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@251 $generated@@498)) $generated@@55))
 :pattern ( ($generated@@251 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@64)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@499 ($generated@@163 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@163 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@64) (= ($generated@@72 ($generated@@163 $generated@@502)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@64)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@64) (= ($generated@@503 ($generated@@138 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@138 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@64) (= ($generated@@72 ($generated@@138 $generated@@506)) $generated@@57))
 :pattern ( ($generated@@138 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (! (let (($generated@@508 (type $generated@@507)))
(= ($generated@@365 $generated@@508 ($generated@@279 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@279 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@292 $generated@@135 $generated@@135)) (= (type $generated@@510) $generated@@64)) (= (type $generated@@511) $generated@@64)) (= ($generated@@137 $generated@@509 ($generated@@393 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@290 $generated@@509) $generated@@512))) (and ($generated@@237 ($generated@@81 ($generated@@366 $generated@@509) $generated@@512) $generated@@511) ($generated@@237 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@509) $generated@@512))
 :pattern ( ($generated@@81 ($generated@@290 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@137 $generated@@509 ($generated@@393 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@310 $generated@@135 $generated@@135)) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) (= ($generated@@137 $generated@@513 ($generated@@401 $generated@@514 $generated@@515)) (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@308 $generated@@513) $generated@@516))) (and ($generated@@237 ($generated@@81 ($generated@@376 $generated@@513) $generated@@516) $generated@@515) ($generated@@237 $generated@@516 $generated@@514)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@513) $generated@@516))
 :pattern ( ($generated@@81 ($generated@@308 $generated@@513) $generated@@516))
))))
 :pattern ( ($generated@@137 $generated@@513 ($generated@@401 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@135) (= (type $generated@@520) $generated@@135)) (< ($generated@@517 $generated@@519) ($generated@@518 ($generated@@236 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@236 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@135) (= (type $generated@@522) $generated@@135)) (< ($generated@@517 $generated@@522) ($generated@@518 ($generated@@236 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@236 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (and (= (type $generated@@523) $generated@@135) (= (type $generated@@524) $generated@@64)) (= (type $generated@@525) $generated@@64)) ($generated@@237 $generated@@523 ($generated@@393 $generated@@524 $generated@@525))) (and (= ($generated@@279 ($generated@@365 ($generated@@292 $generated@@135 $generated@@135) $generated@@523)) $generated@@523) ($generated@@137 ($generated@@365 ($generated@@292 $generated@@135 $generated@@135) $generated@@523) ($generated@@393 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@237 $generated@@523 ($generated@@393 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (and (= (type $generated@@526) $generated@@135) (= (type $generated@@527) $generated@@64)) (= (type $generated@@528) $generated@@64)) ($generated@@237 $generated@@526 ($generated@@401 $generated@@527 $generated@@528))) (and (= ($generated@@279 ($generated@@365 ($generated@@310 $generated@@135 $generated@@135) $generated@@526)) $generated@@526) ($generated@@137 ($generated@@365 ($generated@@310 $generated@@135 $generated@@135) $generated@@526) ($generated@@401 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@237 $generated@@526 ($generated@@401 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@64) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@135)) ($generated@@237 $generated@@531 ($generated@@149 $generated@@529 $generated@@530))) (and (= ($generated@@279 ($generated@@365 $generated@@150 $generated@@531)) $generated@@531) ($generated@@137 ($generated@@365 $generated@@150 $generated@@531) ($generated@@149 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@237 $generated@@531 ($generated@@149 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@532 T@U) ) (! (let (($generated@@533 (type $generated@@532)))
 (not ($generated@@0 ($generated@@81 ($generated@@410 $generated@@533) $generated@@532))))
 :pattern ( (let (($generated@@533 (type $generated@@532)))
($generated@@81 ($generated@@410 $generated@@533) $generated@@532)))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@69)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@64) (= (type $generated@@537) $generated@@64)) (and (= ($generated@@72 ($generated@@149 $generated@@536 $generated@@537)) $generated@@62) (= ($generated@@534 ($generated@@149 $generated@@536 $generated@@537)) $generated@@63)))
 :pattern ( ($generated@@149 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@150) (= ($generated@@517 ($generated@@279 $generated@@538)) ($generated@@518 $generated@@538)))
 :pattern ( ($generated@@517 ($generated@@279 $generated@@538)))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@135) ($generated@@237 $generated@@539 ($generated@@75 0))) (and (= ($generated@@279 ($generated@@365 $generated@@2 $generated@@539)) $generated@@539) ($generated@@137 ($generated@@365 ($generated@@76 $generated@@135 $generated@@4) $generated@@539) ($generated@@75 0))))
 :pattern ( ($generated@@237 $generated@@539 ($generated@@75 0)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@135) (= (type $generated@@541) $generated@@64)) ($generated@@237 $generated@@540 ($generated@@246 $generated@@541))) (and (= ($generated@@279 ($generated@@365 ($generated@@76 $generated@@135 $generated@@4) $generated@@540)) $generated@@540) ($generated@@137 ($generated@@365 ($generated@@76 $generated@@135 $generated@@4) $generated@@540) ($generated@@246 $generated@@541))))
 :pattern ( ($generated@@237 $generated@@540 ($generated@@246 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@135) (= (type $generated@@543) $generated@@64)) ($generated@@237 $generated@@542 ($generated@@251 $generated@@543))) (and (= ($generated@@279 ($generated@@365 ($generated@@76 $generated@@135 $generated@@4) $generated@@542)) $generated@@542) ($generated@@137 ($generated@@365 ($generated@@76 $generated@@135 $generated@@4) $generated@@542) ($generated@@251 $generated@@543))))
 :pattern ( ($generated@@237 $generated@@542 ($generated@@251 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@135) (= (type $generated@@545) $generated@@64)) ($generated@@237 $generated@@544 ($generated@@163 $generated@@545))) (and (= ($generated@@279 ($generated@@365 ($generated@@76 $generated@@135 $generated@@2) $generated@@544)) $generated@@544) ($generated@@137 ($generated@@365 ($generated@@76 $generated@@135 $generated@@2) $generated@@544) ($generated@@163 $generated@@545))))
 :pattern ( ($generated@@237 $generated@@544 ($generated@@163 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@135) (= (type $generated@@547) $generated@@64)) ($generated@@237 $generated@@546 ($generated@@138 $generated@@547))) (and (= ($generated@@279 ($generated@@365 ($generated@@134 $generated@@135) $generated@@546)) $generated@@546) ($generated@@137 ($generated@@365 ($generated@@134 $generated@@135) $generated@@546) ($generated@@138 $generated@@547))))
 :pattern ( ($generated@@237 $generated@@546 ($generated@@138 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@548 ($generated@@163 $generated@@549) $generated@@550) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@548 $generated@@551)))) ($generated@@261 $generated@@551 $generated@@549 $generated@@550))
 :pattern ( ($generated@@81 $generated@@548 $generated@@551))
))))
 :pattern ( ($generated@@74 $generated@@548 ($generated@@163 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@150) (= (type $generated@@553) $generated@@64)) (= (type $generated@@554) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@260 $generated@@554) (and ($generated@@148 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@64) ($generated@@74 $generated@@552 ($generated@@149 $generated@@553 $generated@@555) $generated@@554))
 :pattern ( ($generated@@74 $generated@@552 ($generated@@149 $generated@@553 $generated@@555) $generated@@554))
))))) ($generated@@261 ($generated@@157 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@261 ($generated@@157 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@150) (= (type $generated@@557) $generated@@64)) (= (type $generated@@558) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@260 $generated@@558) (and ($generated@@148 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@64) ($generated@@74 $generated@@556 ($generated@@149 $generated@@559 $generated@@557) $generated@@558))
 :pattern ( ($generated@@74 $generated@@556 ($generated@@149 $generated@@559 $generated@@557) $generated@@558))
))))) ($generated@@261 ($generated@@158 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@261 ($generated@@158 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@135) (= (type $generated@@561) $generated@@135)) (= ($generated@@236 ($generated@@256 $generated@@560) ($generated@@256 $generated@@561)) ($generated@@256 ($generated@@236 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@236 ($generated@@256 $generated@@560) ($generated@@256 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (! (= ($generated@@279 ($generated@@256 $generated@@562)) ($generated@@256 ($generated@@279 $generated@@562)))
 :pattern ( ($generated@@279 ($generated@@256 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 ($generated@@139 (type $generated@@563))))
 (=> (and (= (type $generated@@563) ($generated@@134 $generated@@564)) (= ($generated@@274 $generated@@563) 0)) (= $generated@@563 ($generated@@273 $generated@@564))))
 :pattern ( ($generated@@274 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (! (let (($generated@@568 (type $generated@@566)))
 (=> (and (and (= (type $generated@@565) ($generated@@76 $generated@@568 $generated@@2)) (= (type $generated@@567) $generated@@2)) (<= 0 ($generated $generated@@567))) (= ($generated@@284 ($generated@@82 $generated@@565 $generated@@566 $generated@@567)) (+ (- ($generated@@284 $generated@@565) ($generated ($generated@@81 $generated@@565 $generated@@566))) ($generated $generated@@567)))))
 :pattern ( ($generated@@284 ($generated@@82 $generated@@565 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@570) $generated@@2)) ($generated@@74 $generated@@570 $generated@@46 $generated@@569))
 :pattern ( ($generated@@74 $generated@@570 $generated@@46 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@3)) ($generated@@74 $generated@@572 $generated@@47 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@47 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@574) $generated@@4)) ($generated@@74 $generated@@574 $generated@@44 $generated@@573))
 :pattern ( ($generated@@74 $generated@@574 $generated@@44 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@439)) ($generated@@74 $generated@@576 $generated@@45 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@45 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@135)) ($generated@@74 $generated@@578 $generated@@48 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@48 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@134 $generated@@135)) (= (type $generated@@580) $generated@@64)) (= ($generated@@137 $generated@@579 ($generated@@138 $generated@@580)) (forall (($generated@@581 Int) ) (!  (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@274 $generated@@579))) ($generated@@237 ($generated@@481 $generated@@579 $generated@@581) $generated@@580))
 :pattern ( ($generated@@481 $generated@@579 $generated@@581))
))))
 :pattern ( ($generated@@137 $generated@@579 ($generated@@138 $generated@@580)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 Int) ) (!  (=> (= (type $generated@@583) ($generated@@134 $generated@@135)) (=> (and (<= 0 $generated@@584) (< $generated@@584 ($generated@@274 $generated@@583))) (< ($generated@@518 ($generated@@365 $generated@@150 ($generated@@481 $generated@@583 $generated@@584))) ($generated@@582 $generated@@583))))
 :pattern ( ($generated@@518 ($generated@@365 $generated@@150 ($generated@@481 $generated@@583 $generated@@584))))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@292 $generated@@135 $generated@@135)) (= (type $generated@@586) $generated@@64)) (= (type $generated@@587) $generated@@64)) ($generated@@137 $generated@@585 ($generated@@393 $generated@@586 $generated@@587))) (and (and ($generated@@137 ($generated@@290 $generated@@585) ($generated@@246 $generated@@586)) ($generated@@137 ($generated@@333 $generated@@585) ($generated@@246 $generated@@587))) ($generated@@137 ($generated@@364 $generated@@585) ($generated@@246 ($generated@@149 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@137 $generated@@585 ($generated@@393 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) ($generated@@310 $generated@@135 $generated@@135)) (= (type $generated@@589) $generated@@64)) (= (type $generated@@590) $generated@@64)) ($generated@@137 $generated@@588 ($generated@@401 $generated@@589 $generated@@590))) (and (and ($generated@@137 ($generated@@308 $generated@@588) ($generated@@251 $generated@@589)) ($generated@@137 ($generated@@344 $generated@@588) ($generated@@251 $generated@@590))) ($generated@@137 ($generated@@375 $generated@@588) ($generated@@251 ($generated@@149 $generated@@589 $generated@@590)))))
 :pattern ( ($generated@@137 $generated@@588 ($generated@@401 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@2) ($generated@@137 $generated@@591 $generated@@46))
 :pattern ( ($generated@@137 $generated@@591 $generated@@46))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@3) ($generated@@137 $generated@@592 $generated@@47))
 :pattern ( ($generated@@137 $generated@@592 $generated@@47))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@4) ($generated@@137 $generated@@593 $generated@@44))
 :pattern ( ($generated@@137 $generated@@593 $generated@@44))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@439) ($generated@@137 $generated@@594 $generated@@45))
 :pattern ( ($generated@@137 $generated@@594 $generated@@45))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@135) ($generated@@137 $generated@@595 $generated@@48))
 :pattern ( ($generated@@137 $generated@@595 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 (T@U) Bool)
(assert  (and (and (and (and (and (= (type $generated@@596) ($generated@@134 $generated@@135)) (= (type $generated@@597) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@598) ($generated@@134 $generated@@135))) (= (type $generated@@599) ($generated@@170 $generated@@77 $generated@@4))) (= (type $generated@@600) $generated@@77)) (= (type $generated@@601) ($generated@@170 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@603  (=> (= (ControlFlow 0 3) (- 0 2)) (or (and ($generated@@137 ($generated@@256 ($generated@@273 $generated@@135)) ($generated@@138 $generated@@46)) ($generated@@133 ($generated@@256 ($generated@@273 $generated@@135)))) (exists (($generated@@604 T@U) ) (!  (and (= (type $generated@@604) ($generated@@134 $generated@@135)) (and ($generated@@137 $generated@@604 ($generated@@138 $generated@@46)) ($generated@@133 $generated@@604)))
 :no-pattern (type $generated@@604)
 :no-pattern ($generated $generated@@604)
 :no-pattern ($generated@@0 $generated@@604)
))))))
(let (($generated@@605  (=> (and (not (and ($generated@@137 $generated@@596 ($generated@@138 $generated@@46)) ($generated@@74 $generated@@596 ($generated@@138 $generated@@46) $generated@@597))) (= (ControlFlow 0 5) 3)) $generated@@603)))
(let (($generated@@606  (=> (and (and (and ($generated@@137 $generated@@596 ($generated@@138 $generated@@46)) ($generated@@74 $generated@@596 ($generated@@138 $generated@@46) $generated@@597)) ($generated@@74 $generated@@596 ($generated@@138 $generated@@46) $generated@@597)) (and ($generated@@136 $generated@@596) (= (ControlFlow 0 4) 3))) $generated@@603)))
(let (($generated@@607  (=> (and (forall (($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@134 $generated@@135)) ($generated@@137 $generated@@608 ($generated@@138 $generated@@46))) ($generated@@136 $generated@@608))
 :pattern ( ($generated@@133 $generated@@608))
)) (exists (($generated@@609 T@U) ) (!  (and (= (type $generated@@609) ($generated@@134 $generated@@135)) (and ($generated@@137 $generated@@609 ($generated@@138 $generated@@46)) ($generated@@133 $generated@@609)))
 :pattern ( ($generated@@133 $generated@@609))
))) (and (=> (= (ControlFlow 0 6) 4) $generated@@606) (=> (= (ControlFlow 0 6) 5) $generated@@605)))))
(let (($generated@@610  (=> (and (not (and ($generated@@137 $generated@@598 ($generated@@138 $generated@@46)) ($generated@@74 $generated@@598 ($generated@@138 $generated@@46) $generated@@597))) (= (ControlFlow 0 8) 6)) $generated@@607)))
(let (($generated@@611  (=> (and (and (and ($generated@@137 $generated@@598 ($generated@@138 $generated@@46)) ($generated@@74 $generated@@598 ($generated@@138 $generated@@46) $generated@@597)) ($generated@@74 $generated@@598 ($generated@@138 $generated@@46) $generated@@597)) (and ($generated@@136 $generated@@598) (= (ControlFlow 0 7) 6))) $generated@@607)))
(let (($generated@@612  (=> (= $generated@@599 ($generated@@224 $generated@@600 $generated@@597 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 7) $generated@@611) (=> (= (ControlFlow 0 9) 8) $generated@@610)))))
(let (($generated@@613 true))
(let (($generated@@614  (=> (= $generated@@601 ($generated@@169 $generated@@600 $generated@@597 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 1) $generated@@613) (=> (= (ControlFlow 0 10) 9) $generated@@612)))))
(let (($generated@@615  (=> (and (and ($generated@@260 $generated@@597) ($generated@@602 $generated@@597)) (and (= 2 $generated@@132) (= (ControlFlow 0 11) 10))) $generated@@614)))
$generated@@615)))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U) Bool)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 (T@U) Bool)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@T) T@T)
(declare-fun $generated@@144 (T@U) Int)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (Int) Int)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U T@U T@U) Bool)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@260 (T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@U Int) T@U)
(declare-fun $generated@@273 (T@T) T@U)
(declare-fun $generated@@276 () Bool)
(declare-fun $generated@@277 () T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@T T@U) T@U)
(declare-fun $generated@@365 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@411 () Bool)
(declare-fun $generated@@412 (T@T) T@U)
(declare-fun $generated@@433 () Int)
(declare-fun $generated@@441 () T@T)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@487 (T@U) Int)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@581 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert  (and (and (and (forall (($generated@@140 T@T) ) (= ($generated@@1 ($generated@@134 $generated@@140)) 14)) (forall (($generated@@141 T@T) ) (! (= ($generated@@139 ($generated@@134 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@134 $generated@@141))
))) (= ($generated@@1 $generated@@135) 15)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@138 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@142))
))))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@143) ($generated@@134 $generated@@135)) (or ($generated@@136 $generated@@143) (and (not (= 1 $generated@@132)) ($generated@@137 $generated@@143 ($generated@@138 $generated@@46))))) true)
 :pattern ( ($generated@@133 $generated@@143))
))))
(assert  (=> (<= 1 $generated@@132) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) ($generated@@134 $generated@@135)) (or ($generated@@145 $generated@@146) (and (not (= 1 $generated@@132)) ($generated@@137 $generated@@146 ($generated@@138 $generated@@46))))) true)
 :pattern ( ($generated@@144 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@2) ($generated@@137 $generated@@147 ($generated@@75 0)))
 :pattern ( ($generated@@137 $generated@@147 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@150) 16) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@151 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@64) (= (type $generated@@154) $generated@@64)) (= (type $generated@@155) $generated@@150)) ($generated@@137 $generated@@155 ($generated@@149 $generated@@153 $generated@@154))) ($generated@@148 $generated@@155))
 :pattern ( ($generated@@148 $generated@@155) ($generated@@137 $generated@@155 ($generated@@149 $generated@@153 $generated@@154)))
)))
(assert  (and (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@135)
 :pattern ( ($generated@@157 $generated@@159))
)) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@135)
 :pattern ( ($generated@@158 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@150) (= (type $generated@@162) $generated@@150)) true) (= ($generated@@156 $generated@@161 $generated@@162)  (and (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)) (= ($generated@@158 $generated@@161) ($generated@@158 $generated@@162)))))
 :pattern ( ($generated@@156 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@64)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@167) $generated@@64)) ($generated@@137 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@137 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@170 $generated@@174 $generated@@175)) 17)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@171 ($generated@@170 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@172 ($generated@@170 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@170 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@172 (type $generated@@180))))
(= (type ($generated@@168 $generated@@180 $generated@@181 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@168 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(let (($generated@@189 (type $generated@@185)))
(= (type ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@170 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@172 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@168 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@168 ($generated@@173 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@168 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@168 ($generated@@173 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@168 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@168 ($generated@@173 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@168 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ) (! (= (type ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@170 $generated@@77 $generated@@4))
 :pattern ( ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@67 (type $generated@@222))))
 (=> (and (and (and (and (= (type $generated@@217) $generated@@77) (= (type $generated@@218) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@219) ($generated@@66 $generated@@4))) (= (type $generated@@221) $generated@@77)) (= (type $generated@@222) ($generated@@66 $generated@@223))) (= ($generated@@0 ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (not (= $generated@@221 $generated@@217)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@218 $generated@@221) $generated@@219))) $generated@@220))))
 :pattern ( ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@150)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@64) (= (type $generated@@229) $generated@@64)) (= (type $generated@@230) $generated@@135)) (= (type $generated@@231) $generated@@135)) (= ($generated@@137 ($generated@@224 $generated@@230 $generated@@231) ($generated@@149 $generated@@228 $generated@@229))  (and ($generated@@225 $generated@@230 $generated@@228) ($generated@@225 $generated@@231 $generated@@229))))
 :pattern ( ($generated@@137 ($generated@@224 $generated@@230 $generated@@231) ($generated@@149 $generated@@228 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@150) (= (type $generated@@233) $generated@@150)) (= ($generated@@156 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@156 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ) (! (= (type ($generated@@234 $generated@@235)) $generated@@64)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@237) $generated@@64)) (= ($generated@@137 $generated@@236 ($generated@@234 $generated@@237)) (forall (($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@135) ($generated@@0 ($generated@@81 $generated@@236 $generated@@238))) ($generated@@225 $generated@@238 $generated@@237))
 :pattern ( ($generated@@81 $generated@@236 $generated@@238))
))))
 :pattern ( ($generated@@137 $generated@@236 ($generated@@234 $generated@@237)))
)))
(assert (forall (($generated@@240 T@U) ) (! (= (type ($generated@@239 $generated@@240)) $generated@@64)
 :pattern ( ($generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@242) $generated@@64)) (= ($generated@@137 $generated@@241 ($generated@@239 $generated@@242)) (forall (($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@135) ($generated@@0 ($generated@@81 $generated@@241 $generated@@243))) ($generated@@225 $generated@@243 $generated@@242))
 :pattern ( ($generated@@81 $generated@@241 $generated@@243))
))))
 :pattern ( ($generated@@137 $generated@@241 ($generated@@239 $generated@@242)))
)))
(assert (forall (($generated@@245 Int) ) (! (= ($generated@@244 $generated@@245) $generated@@245)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (let (($generated@@248 (type $generated@@247)))
(= (type ($generated@@246 $generated@@247)) $generated@@248))
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= ($generated@@246 $generated@@249) $generated@@249)
 :pattern ( ($generated@@246 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@252) $generated@@64) (= (type $generated@@253) $generated@@64)) (= (type $generated@@254) $generated@@135)) (= (type $generated@@255) $generated@@135)) (= (type $generated@@256) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@250 $generated@@256)) (= ($generated@@74 ($generated@@224 $generated@@254 $generated@@255) ($generated@@149 $generated@@252 $generated@@253) $generated@@256)  (and ($generated@@251 $generated@@254 $generated@@252 $generated@@256) ($generated@@251 $generated@@255 $generated@@253 $generated@@256))))
 :pattern ( ($generated@@74 ($generated@@224 $generated@@254 $generated@@255) ($generated@@149 $generated@@252 $generated@@253) $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ) (! (= (type ($generated@@257 $generated@@258)) $generated@@68)
 :pattern ( ($generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (= (type $generated@@259) $generated@@150) (= ($generated@@148 $generated@@259) (= ($generated@@257 $generated@@259) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@259))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 Int) ) (! (let (($generated@@265 ($generated@@139 (type $generated@@263))))
(= (type ($generated@@262 $generated@@263 $generated@@264)) $generated@@265))
 :pattern ( ($generated@@262 $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (! (let (($generated@@268 ($generated@@139 (type $generated@@266))))
 (=> (and (= (type $generated@@266) ($generated@@134 $generated@@268)) (= (type $generated@@267) ($generated@@134 $generated@@268))) (= ($generated@@260 $generated@@266 $generated@@267)  (and (= ($generated@@261 $generated@@266) ($generated@@261 $generated@@267)) (forall (($generated@@269 Int) ) (!  (=> (and (<= 0 $generated@@269) (< $generated@@269 ($generated@@261 $generated@@266))) (= ($generated@@262 $generated@@266 $generated@@269) ($generated@@262 $generated@@267 $generated@@269)))
 :pattern ( ($generated@@262 $generated@@266 $generated@@269))
 :pattern ( ($generated@@262 $generated@@267 $generated@@269))
))))))
 :pattern ( ($generated@@260 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@150) ($generated@@148 $generated@@270)) (exists (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (and (and (= (type $generated@@271) $generated@@135) (= (type $generated@@272) $generated@@135)) (= $generated@@270 ($generated@@224 $generated@@271 $generated@@272)))
 :no-pattern (type $generated@@271)
 :no-pattern (type $generated@@272)
 :no-pattern ($generated $generated@@271)
 :no-pattern ($generated@@0 $generated@@271)
 :no-pattern ($generated $generated@@272)
 :no-pattern ($generated@@0 $generated@@272)
)))
 :pattern ( ($generated@@148 $generated@@270))
)))
(assert (forall (($generated@@274 T@T) ) (! (= (type ($generated@@273 $generated@@274)) ($generated@@134 $generated@@274))
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@261 ($generated@@273 $generated@@275)) 0)
 :pattern ( ($generated@@273 $generated@@275))
)))
(assert (= (type $generated@@277) ($generated@@134 $generated@@135)))
(assert  (=> $generated@@276 (and ($generated@@137 $generated@@277 ($generated@@138 $generated@@46)) ($generated@@133 $generated@@277))))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@278 $generated@@279)) $generated@@135)
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@64) (= (type $generated@@282) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@251 ($generated@@278 $generated@@280) $generated@@281 $generated@@282) ($generated@@74 $generated@@280 $generated@@281 $generated@@282)))
 :pattern ( ($generated@@251 ($generated@@278 $generated@@280) $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@285 T@T) ) (! (= (type ($generated@@284 $generated@@285)) ($generated@@76 $generated@@285 $generated@@2))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@79 (type $generated@@286))))
 (=> (= (type $generated@@286) ($generated@@76 $generated@@287 $generated@@2)) (and (= (= ($generated@@283 $generated@@286) 0) (= $generated@@286 ($generated@@284 $generated@@287))) (=> (not (= ($generated@@283 $generated@@286) 0)) (exists (($generated@@288 T@U) ) (!  (and (= (type $generated@@288) $generated@@287) (< 0 ($generated ($generated@@81 $generated@@286 $generated@@288))))
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
))))))
 :pattern ( ($generated@@283 $generated@@286))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 18)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@76 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@81 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@81 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 19)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@76 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@81 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@81 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@79 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@76 $generated@@326 $generated@@2)) (= ($generated@@164 $generated@@325) (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@326) (and (<= 0 ($generated ($generated@@81 $generated@@325 $generated@@327))) (<= ($generated ($generated@@81 $generated@@325 $generated@@327)) ($generated@@283 $generated@@325))))
 :pattern ( ($generated@@81 $generated@@325 $generated@@327))
)))))
 :pattern ( ($generated@@164 $generated@@325))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@293 (type $generated@@328))))
(let (($generated@@330 ($generated@@292 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@291 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@290 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) ($generated@@0 ($generated@@81 ($generated@@289 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@289 $generated@@328))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@293 (type $generated@@333))))
(= (type ($generated@@332 $generated@@333)) ($generated@@76 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@293 (type $generated@@335))))
(let (($generated@@337 ($generated@@292 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@291 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@290 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@336) ($generated@@0 ($generated@@81 ($generated@@332 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@311 (type $generated@@339))))
(let (($generated@@341 ($generated@@310 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@309 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@308 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@307 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@311 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@76 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@311 (type $generated@@346))))
(let (($generated@@348 ($generated@@310 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@309 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@308 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@351) $generated@@64)) (= ($generated@@137 $generated@@350 ($generated@@163 $generated@@351)) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@350 $generated@@352)))) ($generated@@225 $generated@@352 $generated@@351))
 :pattern ( ($generated@@81 $generated@@350 $generated@@352))
))))
 :pattern ( ($generated@@137 $generated@@350 ($generated@@163 $generated@@351)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@354) $generated@@64)) (= (type $generated@@355) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@353 ($generated@@234 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@135) ($generated@@0 ($generated@@81 $generated@@353 $generated@@356))) ($generated@@251 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@81 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@74 $generated@@353 ($generated@@234 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@76 $generated@@135 $generated@@4)) (= (type $generated@@358) $generated@@64)) (= (type $generated@@359) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@357 ($generated@@239 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@135) ($generated@@0 ($generated@@81 $generated@@357 $generated@@360))) ($generated@@251 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@81 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@74 $generated@@357 ($generated@@239 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(= ($generated ($generated@@81 ($generated@@284 $generated@@362) $generated@@361)) 0))
 :pattern ( (let (($generated@@362 (type $generated@@361)))
($generated@@81 ($generated@@284 $generated@@362) $generated@@361)))
)))
(assert  (and (and (forall (($generated@@366 T@U) ) (! (= (type ($generated@@363 $generated@@366)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@363 $generated@@366))
)) (forall (($generated@@367 T@T) ($generated@@368 T@U) ) (! (= (type ($generated@@364 $generated@@367 $generated@@368)) $generated@@367)
 :pattern ( ($generated@@364 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@293 (type $generated@@369))))
(let (($generated@@371 ($generated@@292 (type $generated@@369))))
(= (type ($generated@@365 $generated@@369)) ($generated@@76 $generated@@371 $generated@@370))))
 :pattern ( ($generated@@365 $generated@@369))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@291 $generated@@135 $generated@@135)) (= (type $generated@@373) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@363 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@81 ($generated@@289 $generated@@372) ($generated@@157 ($generated@@364 $generated@@150 $generated@@373)))) (= ($generated@@81 ($generated@@365 $generated@@372) ($generated@@157 ($generated@@364 $generated@@150 $generated@@373))) ($generated@@158 ($generated@@364 $generated@@150 $generated@@373))))))
 :pattern ( ($generated@@81 ($generated@@363 $generated@@372) $generated@@373))
)))
(assert  (and (forall (($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@376)) ($generated@@76 $generated@@135 $generated@@4))
 :pattern ( ($generated@@374 $generated@@376))
)) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@311 (type $generated@@377))))
(let (($generated@@379 ($generated@@310 (type $generated@@377))))
(= (type ($generated@@375 $generated@@377)) ($generated@@76 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@309 $generated@@135 $generated@@135)) (= (type $generated@@381) $generated@@135)) (= ($generated@@0 ($generated@@81 ($generated@@374 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@81 ($generated@@307 $generated@@380) ($generated@@157 ($generated@@364 $generated@@150 $generated@@381)))) (= ($generated@@81 ($generated@@375 $generated@@380) ($generated@@157 ($generated@@364 $generated@@150 $generated@@381))) ($generated@@158 ($generated@@364 $generated@@150 $generated@@381))))))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(let (($generated@@385 ($generated@@292 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@291 $generated@@385 $generated@@384)) (= ($generated@@0 ($generated@@81 ($generated@@332 $generated@@382) $generated@@383)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@385) (and ($generated@@0 ($generated@@81 ($generated@@289 $generated@@382) $generated@@386)) (= $generated@@383 ($generated@@81 ($generated@@365 $generated@@382) $generated@@386))))
 :pattern ( ($generated@@81 ($generated@@289 $generated@@382) $generated@@386))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@382) $generated@@386))
))))))
 :pattern ( ($generated@@81 ($generated@@332 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@310 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@309 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@81 ($generated@@343 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@81 ($generated@@307 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@81 ($generated@@375 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@64)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@395) ($generated@@291 $generated@@135 $generated@@135)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@289 $generated@@395) $generated@@399))) (and ($generated@@251 ($generated@@81 ($generated@@365 $generated@@395) $generated@@399) $generated@@397 $generated@@398) ($generated@@251 $generated@@399 $generated@@396 $generated@@398)))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@289 $generated@@395) $generated@@399))
))))
 :pattern ( ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@64)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@309 $generated@@135 $generated@@135)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) $generated@@64)) (= (type $generated@@406) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@403) $generated@@407))) (and ($generated@@251 ($generated@@81 ($generated@@375 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@251 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@403) $generated@@407))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@74 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@139 (type $generated@@408))))
 (=> (and (and (= (type $generated@@408) ($generated@@134 $generated@@410)) (= (type $generated@@409) ($generated@@134 $generated@@410))) ($generated@@260 $generated@@408 $generated@@409)) (= $generated@@408 $generated@@409)))
 :pattern ( ($generated@@260 $generated@@408 $generated@@409))
)))
(assert  (=> (<= 2 $generated@@132) (=> (or $generated@@411 (not (= 2 $generated@@132))) true)))
(assert (forall (($generated@@413 T@T) ) (! (= (type ($generated@@412 $generated@@413)) ($generated@@76 $generated@@413 $generated@@4))
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@311 (type $generated@@414))))
(let (($generated@@416 ($generated@@310 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@309 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@308 $generated@@416 $generated@@415)) (= ($generated@@307 $generated@@414) ($generated@@412 $generated@@416))))))
 :pattern ( ($generated@@307 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@311 (type $generated@@417))))
(let (($generated@@419 ($generated@@310 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@309 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@308 $generated@@419 $generated@@418)) (= ($generated@@343 $generated@@417) ($generated@@412 $generated@@418))))))
 :pattern ( ($generated@@343 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@311 (type $generated@@420))))
(let (($generated@@422 ($generated@@310 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@309 $generated@@422 $generated@@421)) (= (= $generated@@420 ($generated@@308 $generated@@422 $generated@@421)) (= ($generated@@374 $generated@@420) ($generated@@412 $generated@@135))))))
 :pattern ( ($generated@@374 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@293 (type $generated@@423))))
(let (($generated@@425 ($generated@@292 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@291 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@290 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (and (and (= (type $generated@@426) $generated@@135) (= (type $generated@@427) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@363 $generated@@423) ($generated@@278 ($generated@@224 $generated@@426 $generated@@427)))))
 :no-pattern (type $generated@@426)
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@363 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@311 (type $generated@@428))))
(let (($generated@@430 ($generated@@310 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@309 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@308 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@135) (= (type $generated@@432) $generated@@135)) ($generated@@0 ($generated@@81 ($generated@@374 $generated@@428) ($generated@@278 ($generated@@224 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@374 $generated@@428))
)))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) ($generated@@76 $generated@@77 $generated@@78)) (or $generated@@411 (and (not (= 2 $generated@@132)) ($generated@@250 $generated@@434)))) (and (and $generated@@276 ($generated@@145 $generated@@277)) (= $generated@@433 (let (($generated@@435 $generated@@277))
($generated@@144 $generated@@435)))))
 :pattern ( $generated@@433 ($generated@@250 $generated@@434))
))))
(assert  (=> (<= 2 $generated@@132) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) ($generated@@76 $generated@@77 $generated@@78)) (or $generated@@411 (and (not (= 2 $generated@@132)) ($generated@@250 $generated@@436)))) (and (and $generated@@276 ($generated@@145 $generated@@277)) (= $generated@@433 (let (($generated@@437 $generated@@277))
($generated@@144 $generated@@437)))))
 :weight 3
 :pattern ( $generated@@433 ($generated@@250 $generated@@436))
))))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@135) ($generated@@225 $generated@@438 $generated@@46)) (and (= ($generated@@278 ($generated@@364 $generated@@2 $generated@@438)) $generated@@438) ($generated@@137 ($generated@@364 $generated@@2 $generated@@438) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@438 $generated@@46))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@135) ($generated@@225 $generated@@439 $generated@@47)) (and (= ($generated@@278 ($generated@@364 $generated@@3 $generated@@439)) $generated@@439) ($generated@@137 ($generated@@364 $generated@@3 $generated@@439) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@439 $generated@@47))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@135) ($generated@@225 $generated@@440 $generated@@44)) (and (= ($generated@@278 ($generated@@364 $generated@@4 $generated@@440)) $generated@@440) ($generated@@137 ($generated@@364 $generated@@4 $generated@@440) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@440 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@441) 20))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@135) ($generated@@225 $generated@@442 $generated@@45)) (and (= ($generated@@278 ($generated@@364 $generated@@441 $generated@@442)) $generated@@442) ($generated@@137 ($generated@@364 $generated@@441 $generated@@442) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@442 $generated@@45))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (= (type $generated@@444) $generated@@64) (= ($generated@@225 ($generated@@278 $generated@@443) $generated@@444) ($generated@@137 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@225 ($generated@@278 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@79 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@76 $generated@@446 $generated@@2)) (<= 0 ($generated@@283 $generated@@445))))
 :pattern ( ($generated@@283 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@139 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@134 $generated@@448)) (<= 0 ($generated@@261 $generated@@447))))
 :pattern ( ($generated@@261 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@392 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@392 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@392 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@392 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@72 ($generated@@392 $generated@@457 $generated@@458)) $generated@@58))
 :pattern ( ($generated@@392 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@64)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@459 ($generated@@400 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@400 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@463 ($generated@@400 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@400 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@72 ($generated@@400 $generated@@467 $generated@@468)) $generated@@59))
 :pattern ( ($generated@@400 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@135) (= (type $generated@@470) $generated@@135)) (= ($generated@@257 ($generated@@224 $generated@@469 $generated@@470)) $generated@@61))
 :pattern ( ($generated@@224 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@149 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@149 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@64) (= (type $generated@@478) $generated@@64)) (= ($generated@@475 ($generated@@149 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@149 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@135) (= (type $generated@@480) $generated@@135)) (= ($generated@@157 ($generated@@224 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@224 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@135) (= (type $generated@@482) $generated@@135)) (= ($generated@@158 ($generated@@224 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@224 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (and (= (type $generated@@483) ($generated@@134 $generated@@135)) (= (type $generated@@484) $generated@@64)) (= (type $generated@@485) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@483 ($generated@@138 $generated@@484) $generated@@485) (forall (($generated@@486 Int) ) (!  (=> (and (<= 0 $generated@@486) (< $generated@@486 ($generated@@261 $generated@@483))) ($generated@@251 ($generated@@262 $generated@@483 $generated@@486) $generated@@484 $generated@@485))
 :pattern ( ($generated@@262 $generated@@483 $generated@@486))
))))
 :pattern ( ($generated@@74 $generated@@483 ($generated@@138 $generated@@484) $generated@@485))
)))
(assert (forall (($generated@@488 Int) ) (! (= ($generated@@487 ($generated@@75 $generated@@488)) $generated@@488)
 :pattern ( ($generated@@75 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@234 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@234 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@234 $generated@@492)) $generated@@54))
 :pattern ( ($generated@@234 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@239 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@239 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@239 $generated@@496)) $generated@@55))
 :pattern ( ($generated@@239 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@163 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@163 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@163 $generated@@500)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@138 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@138 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@138 $generated@@504)) $generated@@57))
 :pattern ( ($generated@@138 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 (type $generated@@505)))
(= ($generated@@364 $generated@@506 ($generated@@278 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@278 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@507) ($generated@@291 $generated@@135 $generated@@135)) (= (type $generated@@508) $generated@@64)) (= (type $generated@@509) $generated@@64)) (= ($generated@@137 $generated@@507 ($generated@@392 $generated@@508 $generated@@509)) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@289 $generated@@507) $generated@@510))) (and ($generated@@225 ($generated@@81 ($generated@@365 $generated@@507) $generated@@510) $generated@@509) ($generated@@225 $generated@@510 $generated@@508)))
 :pattern ( ($generated@@81 ($generated@@365 $generated@@507) $generated@@510))
 :pattern ( ($generated@@81 ($generated@@289 $generated@@507) $generated@@510))
))))
 :pattern ( ($generated@@137 $generated@@507 ($generated@@392 $generated@@508 $generated@@509)))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@309 $generated@@135 $generated@@135)) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@64)) (= ($generated@@137 $generated@@511 ($generated@@400 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@135) ($generated@@0 ($generated@@81 ($generated@@307 $generated@@511) $generated@@514))) (and ($generated@@225 ($generated@@81 ($generated@@375 $generated@@511) $generated@@514) $generated@@513) ($generated@@225 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@81 ($generated@@375 $generated@@511) $generated@@514))
 :pattern ( ($generated@@81 ($generated@@307 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@137 $generated@@511 ($generated@@400 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@135) (= (type $generated@@518) $generated@@135)) (< ($generated@@515 $generated@@517) ($generated@@516 ($generated@@224 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@224 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@135) (= (type $generated@@520) $generated@@135)) (< ($generated@@515 $generated@@520) ($generated@@516 ($generated@@224 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@224 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@135) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) $generated@@64)) ($generated@@225 $generated@@521 ($generated@@392 $generated@@522 $generated@@523))) (and (= ($generated@@278 ($generated@@364 ($generated@@291 $generated@@135 $generated@@135) $generated@@521)) $generated@@521) ($generated@@137 ($generated@@364 ($generated@@291 $generated@@135 $generated@@135) $generated@@521) ($generated@@392 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@225 $generated@@521 ($generated@@392 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@135) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) ($generated@@225 $generated@@524 ($generated@@400 $generated@@525 $generated@@526))) (and (= ($generated@@278 ($generated@@364 ($generated@@309 $generated@@135 $generated@@135) $generated@@524)) $generated@@524) ($generated@@137 ($generated@@364 ($generated@@309 $generated@@135 $generated@@135) $generated@@524) ($generated@@400 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@225 $generated@@524 ($generated@@400 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@64) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@135)) ($generated@@225 $generated@@529 ($generated@@149 $generated@@527 $generated@@528))) (and (= ($generated@@278 ($generated@@364 $generated@@150 $generated@@529)) $generated@@529) ($generated@@137 ($generated@@364 $generated@@150 $generated@@529) ($generated@@149 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@225 $generated@@529 ($generated@@149 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
 (not ($generated@@0 ($generated@@81 ($generated@@412 $generated@@531) $generated@@530))))
 :pattern ( (let (($generated@@531 (type $generated@@530)))
($generated@@81 ($generated@@412 $generated@@531) $generated@@530)))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@69)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (and (= ($generated@@72 ($generated@@149 $generated@@534 $generated@@535)) $generated@@62) (= ($generated@@532 ($generated@@149 $generated@@534 $generated@@535)) $generated@@63)))
 :pattern ( ($generated@@149 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@150) (= ($generated@@515 ($generated@@278 $generated@@536)) ($generated@@516 $generated@@536)))
 :pattern ( ($generated@@515 ($generated@@278 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@135) ($generated@@225 $generated@@537 ($generated@@75 0))) (and (= ($generated@@278 ($generated@@364 $generated@@2 $generated@@537)) $generated@@537) ($generated@@137 ($generated@@364 ($generated@@76 $generated@@135 $generated@@4) $generated@@537) ($generated@@75 0))))
 :pattern ( ($generated@@225 $generated@@537 ($generated@@75 0)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@135) (= (type $generated@@539) $generated@@64)) ($generated@@225 $generated@@538 ($generated@@234 $generated@@539))) (and (= ($generated@@278 ($generated@@364 ($generated@@76 $generated@@135 $generated@@4) $generated@@538)) $generated@@538) ($generated@@137 ($generated@@364 ($generated@@76 $generated@@135 $generated@@4) $generated@@538) ($generated@@234 $generated@@539))))
 :pattern ( ($generated@@225 $generated@@538 ($generated@@234 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@135) (= (type $generated@@541) $generated@@64)) ($generated@@225 $generated@@540 ($generated@@239 $generated@@541))) (and (= ($generated@@278 ($generated@@364 ($generated@@76 $generated@@135 $generated@@4) $generated@@540)) $generated@@540) ($generated@@137 ($generated@@364 ($generated@@76 $generated@@135 $generated@@4) $generated@@540) ($generated@@239 $generated@@541))))
 :pattern ( ($generated@@225 $generated@@540 ($generated@@239 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@135) (= (type $generated@@543) $generated@@64)) ($generated@@225 $generated@@542 ($generated@@163 $generated@@543))) (and (= ($generated@@278 ($generated@@364 ($generated@@76 $generated@@135 $generated@@2) $generated@@542)) $generated@@542) ($generated@@137 ($generated@@364 ($generated@@76 $generated@@135 $generated@@2) $generated@@542) ($generated@@163 $generated@@543))))
 :pattern ( ($generated@@225 $generated@@542 ($generated@@163 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@135) (= (type $generated@@545) $generated@@64)) ($generated@@225 $generated@@544 ($generated@@138 $generated@@545))) (and (= ($generated@@278 ($generated@@364 ($generated@@134 $generated@@135) $generated@@544)) $generated@@544) ($generated@@137 ($generated@@364 ($generated@@134 $generated@@135) $generated@@544) ($generated@@138 $generated@@545))))
 :pattern ( ($generated@@225 $generated@@544 ($generated@@138 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@76 $generated@@135 $generated@@2)) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@546 ($generated@@163 $generated@@547) $generated@@548) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@135) (< 0 ($generated ($generated@@81 $generated@@546 $generated@@549)))) ($generated@@251 $generated@@549 $generated@@547 $generated@@548))
 :pattern ( ($generated@@81 $generated@@546 $generated@@549))
))))
 :pattern ( ($generated@@74 $generated@@546 ($generated@@163 $generated@@547) $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@150) (= (type $generated@@551) $generated@@64)) (= (type $generated@@552) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@250 $generated@@552) (and ($generated@@148 $generated@@550) (exists (($generated@@553 T@U) ) (!  (and (= (type $generated@@553) $generated@@64) ($generated@@74 $generated@@550 ($generated@@149 $generated@@551 $generated@@553) $generated@@552))
 :pattern ( ($generated@@74 $generated@@550 ($generated@@149 $generated@@551 $generated@@553) $generated@@552))
))))) ($generated@@251 ($generated@@157 $generated@@550) $generated@@551 $generated@@552))
 :pattern ( ($generated@@251 ($generated@@157 $generated@@550) $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@150) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@250 $generated@@556) (and ($generated@@148 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@64) ($generated@@74 $generated@@554 ($generated@@149 $generated@@557 $generated@@555) $generated@@556))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@149 $generated@@557 $generated@@555) $generated@@556))
))))) ($generated@@251 ($generated@@158 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@251 ($generated@@158 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@135) (= (type $generated@@559) $generated@@135)) (= ($generated@@224 ($generated@@246 $generated@@558) ($generated@@246 $generated@@559)) ($generated@@246 ($generated@@224 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@224 ($generated@@246 $generated@@558) ($generated@@246 $generated@@559)))
)))
(assert (forall (($generated@@560 Int) ) (! (= ($generated@@278 ($generated@@8 ($generated@@244 $generated@@560))) ($generated@@246 ($generated@@278 ($generated@@8 $generated@@560))))
 :pattern ( ($generated@@278 ($generated@@8 ($generated@@244 $generated@@560))))
)))
(assert (forall (($generated@@561 T@U) ) (! (= ($generated@@278 ($generated@@246 $generated@@561)) ($generated@@246 ($generated@@278 $generated@@561)))
 :pattern ( ($generated@@278 ($generated@@246 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@139 (type $generated@@562))))
 (=> (and (= (type $generated@@562) ($generated@@134 $generated@@563)) (= ($generated@@261 $generated@@562) 0)) (= $generated@@562 ($generated@@273 $generated@@563))))
 :pattern ( ($generated@@261 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@565)))
 (=> (and (and (= (type $generated@@564) ($generated@@76 $generated@@567 $generated@@2)) (= (type $generated@@566) $generated@@2)) (<= 0 ($generated $generated@@566))) (= ($generated@@283 ($generated@@82 $generated@@564 $generated@@565 $generated@@566)) (+ (- ($generated@@283 $generated@@564) ($generated ($generated@@81 $generated@@564 $generated@@565))) ($generated $generated@@566)))))
 :pattern ( ($generated@@283 ($generated@@82 $generated@@564 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@2)) ($generated@@74 $generated@@569 $generated@@46 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@46 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@3)) ($generated@@74 $generated@@571 $generated@@47 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@47 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@4)) ($generated@@74 $generated@@573 $generated@@44 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@44 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@441)) ($generated@@74 $generated@@575 $generated@@45 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@45 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@135)) ($generated@@74 $generated@@577 $generated@@48 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@48 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@134 $generated@@135)) (= (type $generated@@579) $generated@@64)) (= ($generated@@137 $generated@@578 ($generated@@138 $generated@@579)) (forall (($generated@@580 Int) ) (!  (=> (and (<= 0 $generated@@580) (< $generated@@580 ($generated@@261 $generated@@578))) ($generated@@225 ($generated@@262 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@262 $generated@@578 $generated@@580))
))))
 :pattern ( ($generated@@137 $generated@@578 ($generated@@138 $generated@@579)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 Int) ) (!  (=> (= (type $generated@@582) ($generated@@134 $generated@@135)) (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@261 $generated@@582))) (< ($generated@@516 ($generated@@364 $generated@@150 ($generated@@262 $generated@@582 $generated@@583))) ($generated@@581 $generated@@582))))
 :pattern ( ($generated@@516 ($generated@@364 $generated@@150 ($generated@@262 $generated@@582 $generated@@583))))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) ($generated@@291 $generated@@135 $generated@@135)) (= (type $generated@@585) $generated@@64)) (= (type $generated@@586) $generated@@64)) ($generated@@137 $generated@@584 ($generated@@392 $generated@@585 $generated@@586))) (and (and ($generated@@137 ($generated@@289 $generated@@584) ($generated@@234 $generated@@585)) ($generated@@137 ($generated@@332 $generated@@584) ($generated@@234 $generated@@586))) ($generated@@137 ($generated@@363 $generated@@584) ($generated@@234 ($generated@@149 $generated@@585 $generated@@586)))))
 :pattern ( ($generated@@137 $generated@@584 ($generated@@392 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@309 $generated@@135 $generated@@135)) (= (type $generated@@588) $generated@@64)) (= (type $generated@@589) $generated@@64)) ($generated@@137 $generated@@587 ($generated@@400 $generated@@588 $generated@@589))) (and (and ($generated@@137 ($generated@@307 $generated@@587) ($generated@@239 $generated@@588)) ($generated@@137 ($generated@@343 $generated@@587) ($generated@@239 $generated@@589))) ($generated@@137 ($generated@@374 $generated@@587) ($generated@@239 ($generated@@149 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@137 $generated@@587 ($generated@@400 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@2) ($generated@@137 $generated@@590 $generated@@46))
 :pattern ( ($generated@@137 $generated@@590 $generated@@46))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@3) ($generated@@137 $generated@@591 $generated@@47))
 :pattern ( ($generated@@137 $generated@@591 $generated@@47))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@4) ($generated@@137 $generated@@592 $generated@@44))
 :pattern ( ($generated@@137 $generated@@592 $generated@@44))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@441) ($generated@@137 $generated@@593 $generated@@45))
 :pattern ( ($generated@@137 $generated@@593 $generated@@45))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@135) ($generated@@137 $generated@@594 $generated@@48))
 :pattern ( ($generated@@137 $generated@@594 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@595) ($generated@@134 $generated@@135)) (= (type $generated@@596) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@597) ($generated@@134 $generated@@135))) (= (type $generated@@598) ($generated@@170 $generated@@77 $generated@@4))) (= (type $generated@@599) $generated@@77)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@601  (=> (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@134 $generated@@135)) ($generated@@137 $generated@@602 ($generated@@138 $generated@@46))) ($generated@@136 $generated@@602))
 :pattern ( ($generated@@133 $generated@@602))
)) (=> (and (and (and (forall (($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@603) ($generated@@134 $generated@@135)) ($generated@@137 $generated@@603 ($generated@@138 $generated@@46))) ($generated@@133 $generated@@603)) ($generated@@260 $generated@@603 $generated@@595))
 :pattern ( ($generated@@133 $generated@@603))
)) ($generated@@74 $generated@@595 ($generated@@138 $generated@@46) $generated@@596)) (and ($generated@@145 $generated@@595) $generated@@411)) (and (and ($generated@@145 $generated@@595) $generated@@411) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@144 $generated@@595) ($generated@@244 $generated@@433))))))
(let (($generated@@604  (=> (and (not ($generated@@133 $generated@@597)) (= (ControlFlow 0 5) 2)) $generated@@601)))
(let (($generated@@605  (=> (and ($generated@@133 $generated@@597) (= (ControlFlow 0 4) 2)) $generated@@601)))
(let (($generated@@606  (=> (and (and ($generated@@137 $generated@@597 ($generated@@138 $generated@@46)) ($generated@@74 $generated@@597 ($generated@@138 $generated@@46) $generated@@596)) (and ($generated@@74 $generated@@597 ($generated@@138 $generated@@46) $generated@@596) ($generated@@136 $generated@@597))) (and (=> (= (ControlFlow 0 6) 4) $generated@@605) (=> (= (ControlFlow 0 6) 5) $generated@@604)))))
(let (($generated@@607  (=> (and (not (and ($generated@@137 $generated@@597 ($generated@@138 $generated@@46)) ($generated@@74 $generated@@597 ($generated@@138 $generated@@46) $generated@@596))) (= (ControlFlow 0 3) 2)) $generated@@601)))
(let (($generated@@608  (=> (= $generated@@598 ($generated@@169 $generated@@599 $generated@@596 $generated@@60 false)) (=> (and (and ($generated@@74 $generated@@595 ($generated@@138 $generated@@46) $generated@@596) ($generated@@136 $generated@@595)) (and ($generated@@136 $generated@@595) ($generated@@133 $generated@@595))) (and (=> (= (ControlFlow 0 7) 6) $generated@@606) (=> (= (ControlFlow 0 7) 3) $generated@@607))))))
(let (($generated@@609  (=> (and ($generated@@250 $generated@@596) ($generated@@600 $generated@@596)) (=> (and (and ($generated@@137 $generated@@595 ($generated@@138 $generated@@46)) ($generated@@74 $generated@@595 ($generated@@138 $generated@@46) $generated@@596)) (and (= 3 $generated@@132) (= (ControlFlow 0 8) 7))) $generated@@608))))
$generated@@609))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
