(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@269 (T@T) T@T)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@275 () Int)
(declare-fun $generated@@276 (T@U Int) Int)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@278 () T@T)
(declare-fun $generated@@279 (Int) Bool)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@291 (T@U) Int)
(declare-fun $generated@@292 (T@T) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@298 (T@T T@T) T@U)
(declare-fun $generated@@299 (T@T T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@301 (T@T) T@T)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@336 (T@T T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@U T@U) T@U)
(declare-fun $generated@@417 (T@T) T@U)
(declare-fun $generated@@441 () T@T)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@484 () T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@489 (T@U Int) T@U)
(declare-fun $generated@@498 (T@U) Int)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@596 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@69 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@79) (= (type $generated@@222) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@223) ($generated@@68 $generated@@4))) (= (type $generated@@225) $generated@@79)) (= (type $generated@@226) ($generated@@68 $generated@@227))) (= ($generated@@0 ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@141)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@66) (= (type $generated@@233) $generated@@66)) (= (type $generated@@234) $generated@@150)) (= (type $generated@@235) $generated@@150)) (= ($generated@@137 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@137 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@141) (= (type $generated@@237) $generated@@141)) (= ($generated@@147 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@147 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@66)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@241) $generated@@66)) (= ($generated@@137 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@150) ($generated@@0 ($generated@@83 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@83 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@137 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@66)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@246) $generated@@66)) (= ($generated@@137 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@150) ($generated@@0 ($generated@@83 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@83 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@137 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@66) (= (type $generated@@257) $generated@@66)) (= (type $generated@@258) $generated@@150)) (= (type $generated@@259) $generated@@150)) (= (type $generated@@260) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@254 $generated@@260)) (= ($generated@@76 ($generated@@228 $generated@@258 $generated@@259) ($generated@@140 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@76 ($generated@@228 $generated@@258 $generated@@259) ($generated@@140 $generated@@256 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@70)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@141) (= ($generated@@139 $generated@@263) (= ($generated@@261 $generated@@263) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@141) ($generated@@139 $generated@@264)) (exists (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (and (and (= (type $generated@@265) $generated@@150) (= (type $generated@@266) $generated@@150)) (= $generated@@264 ($generated@@228 $generated@@265 $generated@@266)))
 :no-pattern (type $generated@@265)
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
)))
 :pattern ( ($generated@@139 $generated@@264))
)))
(assert  (and (and (forall (($generated@@271 T@T) ) (= ($generated@@1 ($generated@@269 $generated@@271)) 17)) (forall (($generated@@272 T@T) ) (! (= ($generated@@270 ($generated@@269 $generated@@272)) $generated@@272)
 :pattern ( ($generated@@269 $generated@@272))
))) (forall (($generated@@273 T@T) ) (! (= (type ($generated@@267 $generated@@273)) ($generated@@269 $generated@@273))
 :pattern ( ($generated@@267 $generated@@273))
))))
(assert (forall (($generated@@274 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@274)) 0)
 :pattern ( ($generated@@267 $generated@@274))
)))
(assert  (and (= ($generated@@1 $generated@@278) 18) (forall (($generated@@280 T@U) ) (! (= (type ($generated@@277 $generated@@280)) $generated@@278)
 :pattern ( ($generated@@277 $generated@@280))
))))
(assert  (=> (<= 1 $generated@@275) (forall (($generated@@281 T@U) ($generated@@282 Int) ) (!  (=> (and (= (type $generated@@281) $generated@@278) (or ($generated@@279 $generated@@282) (and (not (= 1 $generated@@275)) (<= ($generated@@248 0) $generated@@282)))) (and (=> (<= 2 $generated@@282) (and ($generated@@279 (- $generated@@282 2)) ($generated@@279 (- $generated@@282 1)))) (= ($generated@@276 ($generated@@277 $generated@@281) $generated@@282) (ite (< $generated@@282 2) $generated@@282 (+ ($generated@@276 $generated@@281 (- $generated@@282 2)) ($generated@@276 $generated@@281 (- $generated@@282 1)))))))
 :pattern ( ($generated@@276 ($generated@@277 $generated@@281) $generated@@282))
))))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@2) (= ($generated@@137 $generated@@283 $generated@@134) (<= ($generated@@248 0) ($generated $generated@@283))))
 :pattern ( ($generated@@137 $generated@@283 $generated@@134))
)))
(assert  (=> (<= 1 $generated@@275) (forall (($generated@@284 T@U) ($generated@@285 Int) ) (!  (=> (and (= (type $generated@@284) $generated@@278) (or ($generated@@279 $generated@@285) (and (not (= 1 $generated@@275)) (<= ($generated@@248 0) $generated@@285)))) (<= ($generated@@248 0) ($generated@@276 $generated@@284 $generated@@285)))
 :pattern ( ($generated@@276 $generated@@284 $generated@@285))
))))
(assert (forall (($generated@@287 T@U) ) (! (= (type ($generated@@286 $generated@@287)) $generated@@150)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@66) (= (type $generated@@290) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@255 ($generated@@286 $generated@@288) $generated@@289 $generated@@290) ($generated@@76 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@255 ($generated@@286 $generated@@288) $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@293 T@T) ) (! (= (type ($generated@@292 $generated@@293)) ($generated@@78 $generated@@293 $generated@@2))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (! (let (($generated@@295 ($generated@@81 (type $generated@@294))))
 (=> (= (type $generated@@294) ($generated@@78 $generated@@295 $generated@@2)) (and (= (= ($generated@@291 $generated@@294) 0) (= $generated@@294 ($generated@@292 $generated@@295))) (=> (not (= ($generated@@291 $generated@@294) 0)) (exists (($generated@@296 T@U) ) (!  (and (= (type $generated@@296) $generated@@295) (< 0 ($generated ($generated@@83 $generated@@294 $generated@@296))))
 :no-pattern (type $generated@@296)
 :no-pattern ($generated $generated@@296)
 :no-pattern ($generated@@0 $generated@@296)
))))))
 :pattern ( ($generated@@291 $generated@@294))
)))
(assert  (and (and (and (and (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (= ($generated@@1 ($generated@@299 $generated@@302 $generated@@303)) 19)) (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (! (= ($generated@@300 ($generated@@299 $generated@@304 $generated@@305)) $generated@@304)
 :pattern ( ($generated@@299 $generated@@304 $generated@@305))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@301 ($generated@@299 $generated@@306 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@299 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@U) ) (! (let (($generated@@309 ($generated@@300 (type $generated@@308))))
(= (type ($generated@@297 $generated@@308)) ($generated@@78 $generated@@309 $generated@@4)))
 :pattern ( ($generated@@297 $generated@@308))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= (type ($generated@@298 $generated@@310 $generated@@311)) ($generated@@299 $generated@@310 $generated@@311))
 :pattern ( ($generated@@298 $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (let (($generated@@314 (type $generated@@312)))
 (not ($generated@@0 ($generated@@83 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312))))
 :pattern ( (let (($generated@@314 (type $generated@@312)))
($generated@@83 ($generated@@297 ($generated@@298 $generated@@314 $generated@@313)) $generated@@312)))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 20)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@78 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@83 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@83 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@81 (type $generated@@333))))
 (=> (= (type $generated@@333) ($generated@@78 $generated@@334 $generated@@2)) (= ($generated@@156 $generated@@333) (forall (($generated@@335 T@U) ) (!  (=> (= (type $generated@@335) $generated@@334) (and (<= 0 ($generated ($generated@@83 $generated@@333 $generated@@335))) (<= ($generated ($generated@@83 $generated@@333 $generated@@335)) ($generated@@291 $generated@@333))))
 :pattern ( ($generated@@83 $generated@@333 $generated@@335))
)))))
 :pattern ( ($generated@@156 $generated@@333))
)))
(assert (forall (($generated@@337 T@T) ($generated@@338 T@U) ) (! (= (type ($generated@@336 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@336 $generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (and (= (type $generated@@339) $generated@@150) ($generated@@229 $generated@@339 $generated@@134)) (and (= ($generated@@286 ($generated@@336 $generated@@2 $generated@@339)) $generated@@339) ($generated@@137 ($generated@@336 $generated@@2 $generated@@339) $generated@@134)))
 :pattern ( ($generated@@229 $generated@@339 $generated@@134))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@301 (type $generated@@340))))
(let (($generated@@342 ($generated@@300 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@299 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@298 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@83 ($generated@@297 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@297 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@301 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@78 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@301 (type $generated@@347))))
(let (($generated@@349 ($generated@@300 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@299 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@298 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@83 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@319 (type $generated@@351))))
(let (($generated@@353 ($generated@@318 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@317 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@316 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@83 ($generated@@315 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@315 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@319 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@78 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@319 (type $generated@@358))))
(let (($generated@@360 ($generated@@318 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@317 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@316 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@83 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@363) $generated@@66)) (= ($generated@@137 $generated@@362 ($generated@@155 $generated@@363)) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@362 $generated@@364)))) ($generated@@229 $generated@@364 $generated@@363))
 :pattern ( ($generated@@83 $generated@@362 $generated@@364))
))))
 :pattern ( ($generated@@137 $generated@@362 ($generated@@155 $generated@@363)))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@366) $generated@@66)) (= (type $generated@@367) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@365 ($generated@@238 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@150) ($generated@@0 ($generated@@83 $generated@@365 $generated@@368))) ($generated@@255 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@83 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@76 $generated@@365 ($generated@@238 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@370) $generated@@66)) (= (type $generated@@371) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@369 ($generated@@243 $generated@@370) $generated@@371) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@150) ($generated@@0 ($generated@@83 $generated@@369 $generated@@372))) ($generated@@255 $generated@@372 $generated@@370 $generated@@371))
 :pattern ( ($generated@@83 $generated@@369 $generated@@372))
))))
 :pattern ( ($generated@@76 $generated@@369 ($generated@@243 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 (type $generated@@373)))
(= ($generated ($generated@@83 ($generated@@292 $generated@@374) $generated@@373)) 0))
 :pattern ( (let (($generated@@374 (type $generated@@373)))
($generated@@83 ($generated@@292 $generated@@374) $generated@@373)))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@301 (type $generated@@378))))
(let (($generated@@380 ($generated@@300 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@78 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@299 $generated@@150 $generated@@150)) (= (type $generated@@382) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@83 ($generated@@297 $generated@@381) ($generated@@148 ($generated@@336 $generated@@141 $generated@@382)))) (= ($generated@@83 ($generated@@376 $generated@@381) ($generated@@148 ($generated@@336 $generated@@141 $generated@@382))) ($generated@@149 ($generated@@336 $generated@@141 $generated@@382))))))
 :pattern ( ($generated@@83 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert  (and (forall (($generated@@385 T@U) ) (! (= (type ($generated@@383 $generated@@385)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@383 $generated@@385))
)) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@319 (type $generated@@386))))
(let (($generated@@388 ($generated@@318 (type $generated@@386))))
(= (type ($generated@@384 $generated@@386)) ($generated@@78 $generated@@388 $generated@@387))))
 :pattern ( ($generated@@384 $generated@@386))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@317 $generated@@150 $generated@@150)) (= (type $generated@@390) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@383 $generated@@389) $generated@@390))  (and ($generated@@0 ($generated@@83 ($generated@@315 $generated@@389) ($generated@@148 ($generated@@336 $generated@@141 $generated@@390)))) (= ($generated@@83 ($generated@@384 $generated@@389) ($generated@@148 ($generated@@336 $generated@@141 $generated@@390))) ($generated@@149 ($generated@@336 $generated@@141 $generated@@390))))))
 :pattern ( ($generated@@83 ($generated@@383 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (! (let (($generated@@393 (type $generated@@392)))
(let (($generated@@394 ($generated@@300 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@299 $generated@@394 $generated@@393)) (= ($generated@@0 ($generated@@83 ($generated@@344 $generated@@391) $generated@@392)) (exists (($generated@@395 T@U) ) (!  (and (= (type $generated@@395) $generated@@394) (and ($generated@@0 ($generated@@83 ($generated@@297 $generated@@391) $generated@@395)) (= $generated@@392 ($generated@@83 ($generated@@376 $generated@@391) $generated@@395))))
 :pattern ( ($generated@@83 ($generated@@297 $generated@@391) $generated@@395))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@391) $generated@@395))
))))))
 :pattern ( ($generated@@83 ($generated@@344 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(let (($generated@@399 ($generated@@318 (type $generated@@396))))
 (=> (= (type $generated@@396) ($generated@@317 $generated@@399 $generated@@398)) (= ($generated@@0 ($generated@@83 ($generated@@355 $generated@@396) $generated@@397)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@399) (and ($generated@@0 ($generated@@83 ($generated@@315 $generated@@396) $generated@@400)) (= $generated@@397 ($generated@@83 ($generated@@384 $generated@@396) $generated@@400))))
 :pattern ( ($generated@@83 ($generated@@315 $generated@@396) $generated@@400))
 :pattern ( ($generated@@83 ($generated@@384 $generated@@396) $generated@@400))
))))))
 :pattern ( ($generated@@83 ($generated@@355 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@66)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@299 $generated@@150 $generated@@150)) (= (type $generated@@405) $generated@@66)) (= (type $generated@@406) $generated@@66)) (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@297 $generated@@404) $generated@@408))) (and ($generated@@255 ($generated@@83 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@255 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@83 ($generated@@297 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@76 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@410 $generated@@411)) $generated@@66)
 :pattern ( ($generated@@409 $generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (and (= (type $generated@@412) ($generated@@317 $generated@@150 $generated@@150)) (= (type $generated@@413) $generated@@66)) (= (type $generated@@414) $generated@@66)) (= (type $generated@@415) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@315 $generated@@412) $generated@@416))) (and ($generated@@255 ($generated@@83 ($generated@@384 $generated@@412) $generated@@416) $generated@@414 $generated@@415) ($generated@@255 $generated@@416 $generated@@413 $generated@@415)))
 :pattern ( ($generated@@83 ($generated@@384 $generated@@412) $generated@@416))
 :pattern ( ($generated@@83 ($generated@@315 $generated@@412) $generated@@416))
))))
 :pattern ( ($generated@@76 $generated@@412 ($generated@@409 $generated@@413 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@418 T@T) ) (! (= (type ($generated@@417 $generated@@418)) ($generated@@78 $generated@@418 $generated@@4))
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@319 (type $generated@@419))))
(let (($generated@@421 ($generated@@318 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@317 $generated@@421 $generated@@420)) (= (= $generated@@419 ($generated@@316 $generated@@421 $generated@@420)) (= ($generated@@315 $generated@@419) ($generated@@417 $generated@@421))))))
 :pattern ( ($generated@@315 $generated@@419))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@319 (type $generated@@422))))
(let (($generated@@424 ($generated@@318 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@317 $generated@@424 $generated@@423)) (= (= $generated@@422 ($generated@@316 $generated@@424 $generated@@423)) (= ($generated@@355 $generated@@422) ($generated@@417 $generated@@423))))))
 :pattern ( ($generated@@355 $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@319 (type $generated@@425))))
(let (($generated@@427 ($generated@@318 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@317 $generated@@427 $generated@@426)) (= (= $generated@@425 ($generated@@316 $generated@@427 $generated@@426)) (= ($generated@@383 $generated@@425) ($generated@@417 $generated@@150))))))
 :pattern ( ($generated@@383 $generated@@425))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@301 (type $generated@@428))))
(let (($generated@@430 ($generated@@300 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@299 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@298 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (and (and (= (type $generated@@431) $generated@@150) (= (type $generated@@432) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@375 $generated@@428) ($generated@@286 ($generated@@228 $generated@@431 $generated@@432)))))
 :no-pattern (type $generated@@431)
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@375 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@319 (type $generated@@433))))
(let (($generated@@435 ($generated@@318 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@317 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@316 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@150) (= (type $generated@@437) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@383 $generated@@433) ($generated@@286 ($generated@@228 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@383 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@150) ($generated@@229 $generated@@438 $generated@@46)) (and (= ($generated@@286 ($generated@@336 $generated@@2 $generated@@438)) $generated@@438) ($generated@@137 ($generated@@336 $generated@@2 $generated@@438) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@438 $generated@@46))
)))
(assert (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@150) ($generated@@229 $generated@@439 $generated@@47)) (and (= ($generated@@286 ($generated@@336 $generated@@3 $generated@@439)) $generated@@439) ($generated@@137 ($generated@@336 $generated@@3 $generated@@439) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@439 $generated@@47))
)))
(assert (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@150) ($generated@@229 $generated@@440 $generated@@44)) (and (= ($generated@@286 ($generated@@336 $generated@@4 $generated@@440)) $generated@@440) ($generated@@137 ($generated@@336 $generated@@4 $generated@@440) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@440 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@441) 21))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@150) ($generated@@229 $generated@@442 $generated@@45)) (and (= ($generated@@286 ($generated@@336 $generated@@441 $generated@@442)) $generated@@442) ($generated@@137 ($generated@@336 $generated@@441 $generated@@442) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@442 $generated@@45))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (= (type $generated@@444) $generated@@66) (= ($generated@@229 ($generated@@286 $generated@@443) $generated@@444) ($generated@@137 $generated@@443 $generated@@444)))
 :pattern ( ($generated@@229 ($generated@@286 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@81 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@78 $generated@@446 $generated@@2)) (<= 0 ($generated@@291 $generated@@445))))
 :pattern ( ($generated@@291 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@270 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@269 $generated@@448)) (<= 0 ($generated@@268 $generated@@447))))
 :pattern ( ($generated@@268 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@66)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@66) (= (type $generated@@452) $generated@@66)) (= ($generated@@449 ($generated@@401 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@401 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@66)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@66) (= (type $generated@@456) $generated@@66)) (= ($generated@@453 ($generated@@401 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@401 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@74 ($generated@@401 $generated@@457 $generated@@458)) $generated@@58))
 :pattern ( ($generated@@401 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@66)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@459 ($generated@@409 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@409 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@409 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@409 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@66) (= (type $generated@@468) $generated@@66)) (= ($generated@@74 ($generated@@409 $generated@@467 $generated@@468)) $generated@@59))
 :pattern ( ($generated@@409 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@150) (= (type $generated@@470) $generated@@150)) (= ($generated@@261 ($generated@@228 $generated@@469 $generated@@470)) $generated@@62))
 :pattern ( ($generated@@228 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@66)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@66) (= (type $generated@@474) $generated@@66)) (= ($generated@@471 ($generated@@140 $generated@@473 $generated@@474)) $generated@@473))
 :pattern ( ($generated@@140 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@66)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@66) (= (type $generated@@478) $generated@@66)) (= ($generated@@475 ($generated@@140 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@140 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@150) (= (type $generated@@480) $generated@@150)) (= ($generated@@148 ($generated@@228 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@228 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@150) (= (type $generated@@482) $generated@@150)) (= ($generated@@149 ($generated@@228 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@228 $generated@@481 $generated@@482))
)))
(assert  (and (forall (($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@485)) $generated@@278)
 :pattern ( ($generated@@483 $generated@@485))
)) (= (type $generated@@484) $generated@@278)))
(assert (forall (($generated@@486 T@U) ($generated@@487 Int) ) (!  (=> (= (type $generated@@486) $generated@@278) (= ($generated@@276 $generated@@486 $generated@@487) ($generated@@276 $generated@@484 $generated@@487)))
 :pattern ( ($generated@@276 ($generated@@483 $generated@@486) $generated@@487))
)))
(assert  (and (forall (($generated@@490 T@U) ) (! (= (type ($generated@@488 $generated@@490)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@490))
)) (forall (($generated@@491 T@U) ($generated@@492 Int) ) (! (let (($generated@@493 ($generated@@270 (type $generated@@491))))
(= (type ($generated@@489 $generated@@491 $generated@@492)) $generated@@493))
 :pattern ( ($generated@@489 $generated@@491 $generated@@492))
))))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (and (= (type $generated@@494) ($generated@@269 $generated@@150)) (= (type $generated@@495) $generated@@66)) (= (type $generated@@496) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@494 ($generated@@488 $generated@@495) $generated@@496) (forall (($generated@@497 Int) ) (!  (=> (and (<= 0 $generated@@497) (< $generated@@497 ($generated@@268 $generated@@494))) ($generated@@255 ($generated@@489 $generated@@494 $generated@@497) $generated@@495 $generated@@496))
 :pattern ( ($generated@@489 $generated@@494 $generated@@497))
))))
 :pattern ( ($generated@@76 $generated@@494 ($generated@@488 $generated@@495) $generated@@496))
)))
(assert (forall (($generated@@499 Int) ) (! (= ($generated@@498 ($generated@@77 $generated@@499)) $generated@@499)
 :pattern ( ($generated@@77 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@238 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@238 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@238 $generated@@503)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@66)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@66) (= ($generated@@504 ($generated@@243 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@243 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@66) (= ($generated@@74 ($generated@@243 $generated@@507)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@66)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@66) (= ($generated@@508 ($generated@@155 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@155 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@511)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@66)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@66) (= ($generated@@512 ($generated@@488 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@488 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@66) (= ($generated@@74 ($generated@@488 $generated@@515)) $generated@@57))
 :pattern ( ($generated@@488 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (! (let (($generated@@517 (type $generated@@516)))
(= ($generated@@336 $generated@@517 ($generated@@286 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@286 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@299 $generated@@150 $generated@@150)) (= (type $generated@@519) $generated@@66)) (= (type $generated@@520) $generated@@66)) (= ($generated@@137 $generated@@518 ($generated@@401 $generated@@519 $generated@@520)) (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@297 $generated@@518) $generated@@521))) (and ($generated@@229 ($generated@@83 ($generated@@376 $generated@@518) $generated@@521) $generated@@520) ($generated@@229 $generated@@521 $generated@@519)))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@518) $generated@@521))
 :pattern ( ($generated@@83 ($generated@@297 $generated@@518) $generated@@521))
))))
 :pattern ( ($generated@@137 $generated@@518 ($generated@@401 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@522) ($generated@@317 $generated@@150 $generated@@150)) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) (= ($generated@@137 $generated@@522 ($generated@@409 $generated@@523 $generated@@524)) (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@315 $generated@@522) $generated@@525))) (and ($generated@@229 ($generated@@83 ($generated@@384 $generated@@522) $generated@@525) $generated@@524) ($generated@@229 $generated@@525 $generated@@523)))
 :pattern ( ($generated@@83 ($generated@@384 $generated@@522) $generated@@525))
 :pattern ( ($generated@@83 ($generated@@315 $generated@@522) $generated@@525))
))))
 :pattern ( ($generated@@137 $generated@@522 ($generated@@409 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@150) (= (type $generated@@529) $generated@@150)) (< ($generated@@526 $generated@@528) ($generated@@527 ($generated@@228 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@228 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@150) (= (type $generated@@531) $generated@@150)) (< ($generated@@526 $generated@@531) ($generated@@527 ($generated@@228 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@228 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 Int) ) (!  (=> (= (type $generated@@532) $generated@@278) (= ($generated@@276 ($generated@@277 $generated@@532) $generated@@533) ($generated@@276 $generated@@532 $generated@@533)))
 :pattern ( ($generated@@276 ($generated@@277 $generated@@532) $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@150) (= (type $generated@@535) $generated@@66)) (= (type $generated@@536) $generated@@66)) ($generated@@229 $generated@@534 ($generated@@401 $generated@@535 $generated@@536))) (and (= ($generated@@286 ($generated@@336 ($generated@@299 $generated@@150 $generated@@150) $generated@@534)) $generated@@534) ($generated@@137 ($generated@@336 ($generated@@299 $generated@@150 $generated@@150) $generated@@534) ($generated@@401 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@229 $generated@@534 ($generated@@401 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@150) (= (type $generated@@538) $generated@@66)) (= (type $generated@@539) $generated@@66)) ($generated@@229 $generated@@537 ($generated@@409 $generated@@538 $generated@@539))) (and (= ($generated@@286 ($generated@@336 ($generated@@317 $generated@@150 $generated@@150) $generated@@537)) $generated@@537) ($generated@@137 ($generated@@336 ($generated@@317 $generated@@150 $generated@@150) $generated@@537) ($generated@@409 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@229 $generated@@537 ($generated@@409 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (and (= (type $generated@@540) $generated@@66) (= (type $generated@@541) $generated@@66)) (= (type $generated@@542) $generated@@150)) ($generated@@229 $generated@@542 ($generated@@140 $generated@@540 $generated@@541))) (and (= ($generated@@286 ($generated@@336 $generated@@141 $generated@@542)) $generated@@542) ($generated@@137 ($generated@@336 $generated@@141 $generated@@542) ($generated@@140 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@229 $generated@@542 ($generated@@140 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ) (! (let (($generated@@544 (type $generated@@543)))
 (not ($generated@@0 ($generated@@83 ($generated@@417 $generated@@544) $generated@@543))))
 :pattern ( (let (($generated@@544 (type $generated@@543)))
($generated@@83 ($generated@@417 $generated@@544) $generated@@543)))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@71)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@66) (= (type $generated@@548) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@547 $generated@@548)) $generated@@63) (= ($generated@@545 ($generated@@140 $generated@@547 $generated@@548)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@141) (= ($generated@@526 ($generated@@286 $generated@@549)) ($generated@@527 $generated@@549)))
 :pattern ( ($generated@@526 ($generated@@286 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@150) ($generated@@229 $generated@@550 ($generated@@77 0))) (and (= ($generated@@286 ($generated@@336 $generated@@2 $generated@@550)) $generated@@550) ($generated@@137 ($generated@@336 ($generated@@78 $generated@@150 $generated@@4) $generated@@550) ($generated@@77 0))))
 :pattern ( ($generated@@229 $generated@@550 ($generated@@77 0)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@150) (= (type $generated@@552) $generated@@66)) ($generated@@229 $generated@@551 ($generated@@238 $generated@@552))) (and (= ($generated@@286 ($generated@@336 ($generated@@78 $generated@@150 $generated@@4) $generated@@551)) $generated@@551) ($generated@@137 ($generated@@336 ($generated@@78 $generated@@150 $generated@@4) $generated@@551) ($generated@@238 $generated@@552))))
 :pattern ( ($generated@@229 $generated@@551 ($generated@@238 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@150) (= (type $generated@@554) $generated@@66)) ($generated@@229 $generated@@553 ($generated@@243 $generated@@554))) (and (= ($generated@@286 ($generated@@336 ($generated@@78 $generated@@150 $generated@@4) $generated@@553)) $generated@@553) ($generated@@137 ($generated@@336 ($generated@@78 $generated@@150 $generated@@4) $generated@@553) ($generated@@243 $generated@@554))))
 :pattern ( ($generated@@229 $generated@@553 ($generated@@243 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@150) (= (type $generated@@556) $generated@@66)) ($generated@@229 $generated@@555 ($generated@@155 $generated@@556))) (and (= ($generated@@286 ($generated@@336 ($generated@@78 $generated@@150 $generated@@2) $generated@@555)) $generated@@555) ($generated@@137 ($generated@@336 ($generated@@78 $generated@@150 $generated@@2) $generated@@555) ($generated@@155 $generated@@556))))
 :pattern ( ($generated@@229 $generated@@555 ($generated@@155 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@150) (= (type $generated@@558) $generated@@66)) ($generated@@229 $generated@@557 ($generated@@488 $generated@@558))) (and (= ($generated@@286 ($generated@@336 ($generated@@269 $generated@@150) $generated@@557)) $generated@@557) ($generated@@137 ($generated@@336 ($generated@@269 $generated@@150) $generated@@557) ($generated@@488 $generated@@558))))
 :pattern ( ($generated@@229 $generated@@557 ($generated@@488 $generated@@558)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@545 $generated@@134) $generated@@64))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@560) $generated@@66)) (= (type $generated@@561) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@559 ($generated@@155 $generated@@560) $generated@@561) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@559 $generated@@562)))) ($generated@@255 $generated@@562 $generated@@560 $generated@@561))
 :pattern ( ($generated@@83 $generated@@559 $generated@@562))
))))
 :pattern ( ($generated@@76 $generated@@559 ($generated@@155 $generated@@560) $generated@@561))
)))
(assert  (=> (<= 1 $generated@@275) (forall (($generated@@563 T@U) ($generated@@564 Int) ) (!  (=> (and (= (type $generated@@563) $generated@@278) (or ($generated@@279 ($generated@@248 $generated@@564)) (and (not (= 1 $generated@@275)) (<= ($generated@@248 0) $generated@@564)))) (and (=> (not ($generated@@0 ($generated@@250 ($generated@@11 (< $generated@@564 2))))) (and ($generated@@279 ($generated@@248 (- $generated@@564 2))) ($generated@@279 ($generated@@248 (- $generated@@564 1))))) (= ($generated@@276 ($generated@@277 $generated@@563) ($generated@@248 $generated@@564)) (ite (< $generated@@564 2) $generated@@564 (+ ($generated@@276 ($generated@@277 $generated@@563) ($generated@@248 (- $generated@@564 2))) ($generated@@276 ($generated@@277 $generated@@563) ($generated@@248 (- $generated@@564 1))))))))
 :weight 3
 :pattern ( ($generated@@276 ($generated@@277 $generated@@563) ($generated@@248 $generated@@564)))
))))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@141) (= (type $generated@@566) $generated@@66)) (= (type $generated@@567) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@254 $generated@@567) (and ($generated@@139 $generated@@565) (exists (($generated@@568 T@U) ) (!  (and (= (type $generated@@568) $generated@@66) ($generated@@76 $generated@@565 ($generated@@140 $generated@@566 $generated@@568) $generated@@567))
 :pattern ( ($generated@@76 $generated@@565 ($generated@@140 $generated@@566 $generated@@568) $generated@@567))
))))) ($generated@@255 ($generated@@148 $generated@@565) $generated@@566 $generated@@567))
 :pattern ( ($generated@@255 ($generated@@148 $generated@@565) $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (and (= (type $generated@@569) $generated@@141) (= (type $generated@@570) $generated@@66)) (= (type $generated@@571) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@254 $generated@@571) (and ($generated@@139 $generated@@569) (exists (($generated@@572 T@U) ) (!  (and (= (type $generated@@572) $generated@@66) ($generated@@76 $generated@@569 ($generated@@140 $generated@@572 $generated@@570) $generated@@571))
 :pattern ( ($generated@@76 $generated@@569 ($generated@@140 $generated@@572 $generated@@570) $generated@@571))
))))) ($generated@@255 ($generated@@149 $generated@@569) $generated@@570 $generated@@571))
 :pattern ( ($generated@@255 ($generated@@149 $generated@@569) $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@150) (= (type $generated@@574) $generated@@150)) (= ($generated@@228 ($generated@@250 $generated@@573) ($generated@@250 $generated@@574)) ($generated@@250 ($generated@@228 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@228 ($generated@@250 $generated@@573) ($generated@@250 $generated@@574)))
)))
(assert (forall (($generated@@575 Int) ) (! (= ($generated@@286 ($generated@@8 ($generated@@248 $generated@@575))) ($generated@@250 ($generated@@286 ($generated@@8 $generated@@575))))
 :pattern ( ($generated@@286 ($generated@@8 ($generated@@248 $generated@@575))))
)))
(assert (forall (($generated@@576 T@U) ) (! (= ($generated@@286 ($generated@@250 $generated@@576)) ($generated@@250 ($generated@@286 $generated@@576)))
 :pattern ( ($generated@@286 ($generated@@250 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ) (! (let (($generated@@578 ($generated@@270 (type $generated@@577))))
 (=> (and (= (type $generated@@577) ($generated@@269 $generated@@578)) (= ($generated@@268 $generated@@577) 0)) (= $generated@@577 ($generated@@267 $generated@@578))))
 :pattern ( ($generated@@268 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@580)))
 (=> (and (and (= (type $generated@@579) ($generated@@78 $generated@@582 $generated@@2)) (= (type $generated@@581) $generated@@2)) (<= 0 ($generated $generated@@581))) (= ($generated@@291 ($generated@@84 $generated@@579 $generated@@580 $generated@@581)) (+ (- ($generated@@291 $generated@@579) ($generated ($generated@@83 $generated@@579 $generated@@580))) ($generated $generated@@581)))))
 :pattern ( ($generated@@291 ($generated@@84 $generated@@579 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@584) $generated@@2)) ($generated@@76 $generated@@584 $generated@@46 $generated@@583))
 :pattern ( ($generated@@76 $generated@@584 $generated@@46 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@586) $generated@@3)) ($generated@@76 $generated@@586 $generated@@47 $generated@@585))
 :pattern ( ($generated@@76 $generated@@586 $generated@@47 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@588) $generated@@4)) ($generated@@76 $generated@@588 $generated@@44 $generated@@587))
 :pattern ( ($generated@@76 $generated@@588 $generated@@44 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@590) $generated@@441)) ($generated@@76 $generated@@590 $generated@@45 $generated@@589))
 :pattern ( ($generated@@76 $generated@@590 $generated@@45 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@592) $generated@@150)) ($generated@@76 $generated@@592 $generated@@48 $generated@@591))
 :pattern ( ($generated@@76 $generated@@592 $generated@@48 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@269 $generated@@150)) (= (type $generated@@594) $generated@@66)) (= ($generated@@137 $generated@@593 ($generated@@488 $generated@@594)) (forall (($generated@@595 Int) ) (!  (=> (and (<= 0 $generated@@595) (< $generated@@595 ($generated@@268 $generated@@593))) ($generated@@229 ($generated@@489 $generated@@593 $generated@@595) $generated@@594))
 :pattern ( ($generated@@489 $generated@@593 $generated@@595))
))))
 :pattern ( ($generated@@137 $generated@@593 ($generated@@488 $generated@@594)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 Int) ) (!  (=> (= (type $generated@@597) ($generated@@269 $generated@@150)) (=> (and (<= 0 $generated@@598) (< $generated@@598 ($generated@@268 $generated@@597))) (< ($generated@@527 ($generated@@336 $generated@@141 ($generated@@489 $generated@@597 $generated@@598))) ($generated@@596 $generated@@597))))
 :pattern ( ($generated@@527 ($generated@@336 $generated@@141 ($generated@@489 $generated@@597 $generated@@598))))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) ($generated@@299 $generated@@150 $generated@@150)) (= (type $generated@@600) $generated@@66)) (= (type $generated@@601) $generated@@66)) ($generated@@137 $generated@@599 ($generated@@401 $generated@@600 $generated@@601))) (and (and ($generated@@137 ($generated@@297 $generated@@599) ($generated@@238 $generated@@600)) ($generated@@137 ($generated@@344 $generated@@599) ($generated@@238 $generated@@601))) ($generated@@137 ($generated@@375 $generated@@599) ($generated@@238 ($generated@@140 $generated@@600 $generated@@601)))))
 :pattern ( ($generated@@137 $generated@@599 ($generated@@401 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) ($generated@@317 $generated@@150 $generated@@150)) (= (type $generated@@603) $generated@@66)) (= (type $generated@@604) $generated@@66)) ($generated@@137 $generated@@602 ($generated@@409 $generated@@603 $generated@@604))) (and (and ($generated@@137 ($generated@@315 $generated@@602) ($generated@@243 $generated@@603)) ($generated@@137 ($generated@@355 $generated@@602) ($generated@@243 $generated@@604))) ($generated@@137 ($generated@@383 $generated@@602) ($generated@@243 ($generated@@140 $generated@@603 $generated@@604)))))
 :pattern ( ($generated@@137 $generated@@602 ($generated@@409 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@2) ($generated@@137 $generated@@605 $generated@@46))
 :pattern ( ($generated@@137 $generated@@605 $generated@@46))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@3) ($generated@@137 $generated@@606 $generated@@47))
 :pattern ( ($generated@@137 $generated@@606 $generated@@47))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@4) ($generated@@137 $generated@@607 $generated@@44))
 :pattern ( ($generated@@137 $generated@@607 $generated@@44))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@441) ($generated@@137 $generated@@608 $generated@@45))
 :pattern ( ($generated@@137 $generated@@608 $generated@@45))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@150) ($generated@@137 $generated@@609 $generated@@48))
 :pattern ( ($generated@@137 $generated@@609 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@610 () Int)
(declare-fun $generated@@611 () Int)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () T@U)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@612) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@614) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@615) $generated@@79)) (= (type $generated@@616) ($generated@@162 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@618  (=> (<= 2 $generated@@610) (and (=> (= (ControlFlow 0 4) (- 0 10)) ($generated@@137 ($generated@@8 (- $generated@@610 2)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@610 2)) $generated@@134) (=> (and (= $generated@@611 (- $generated@@610 2)) ($generated@@76 ($generated@@8 $generated@@611) $generated@@134 $generated@@612)) (and (=> (= (ControlFlow 0 4) (- 0 9)) (or (<= 0 $generated@@610) (= $generated@@611 $generated@@610))) (=> (or (<= 0 $generated@@610) (= $generated@@611 $generated@@610)) (and (=> (= (ControlFlow 0 4) (- 0 8)) (< $generated@@611 $generated@@610)) (=> (< $generated@@611 $generated@@610) (=> ($generated@@279 (- $generated@@610 2)) (and (=> (= (ControlFlow 0 4) (- 0 7)) ($generated@@137 ($generated@@8 (- $generated@@610 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@610 1)) $generated@@134) (=> (and (= $generated@@613 (- $generated@@610 1)) ($generated@@76 ($generated@@8 $generated@@613) $generated@@134 $generated@@612)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (<= 0 $generated@@610) (= $generated@@613 $generated@@610))) (=> (or (<= 0 $generated@@610) (= $generated@@613 $generated@@610)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (< $generated@@613 $generated@@610)) (=> (< $generated@@613 $generated@@610) (=> (and ($generated@@279 (- $generated@@610 1)) (= (ControlFlow 0 4) (- 0 3))) ($generated@@137 ($generated@@8 (+ ($generated@@276 ($generated@@277 $generated@@484) (- $generated@@610 2)) ($generated@@276 ($generated@@277 $generated@@484) (- $generated@@610 1)))) $generated@@134))))))))))))))))))))
(let (($generated@@619 true))
(let (($generated@@620  (=> (= $generated@@614 ($generated@@216 $generated@@615 $generated@@612 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 2) $generated@@619) (=> (= (ControlFlow 0 11) 4) $generated@@618)))))
(let (($generated@@621 true))
(let (($generated@@622  (=> (= $generated@@616 ($generated@@161 $generated@@615 $generated@@612 $generated@@60 false)) (and (=> (= (ControlFlow 0 12) 1) $generated@@621) (=> (= (ControlFlow 0 12) 11) $generated@@620)))))
(let (($generated@@623  (=> (and (and (and ($generated@@254 $generated@@612) ($generated@@617 $generated@@612)) (<= ($generated@@248 0) $generated@@610)) (and (= 1 $generated@@275) (= (ControlFlow 0 13) 12))) $generated@@622)))
$generated@@623)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@255 (T@T) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@263 () Int)
(declare-fun $generated@@264 (T@U Int) Int)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@266 () T@T)
(declare-fun $generated@@267 (Int) Bool)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@324 (T@T T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@389 (T@U T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@T) T@U)
(declare-fun $generated@@429 () T@T)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@472 () T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@533 (Int Int) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@587 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@141)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@66) (= (type $generated@@221) $generated@@66)) (= (type $generated@@222) $generated@@150)) (= (type $generated@@223) $generated@@150)) (= ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221))  (and ($generated@@217 $generated@@222 $generated@@220) ($generated@@217 $generated@@223 $generated@@221))))
 :pattern ( ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@141) (= (type $generated@@225) $generated@@141)) (= ($generated@@147 $generated@@224 $generated@@225) (= $generated@@224 $generated@@225)))
 :pattern ( ($generated@@147 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@66)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@229) $generated@@66)) (= ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@150) ($generated@@0 ($generated@@83 $generated@@228 $generated@@230))) ($generated@@217 $generated@@230 $generated@@229))
 :pattern ( ($generated@@83 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@66)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@150) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@217 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@236 $generated@@237) $generated@@237)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@66) (= (type $generated@@245) $generated@@66)) (= (type $generated@@246) $generated@@150)) (= (type $generated@@247) $generated@@150)) (= (type $generated@@248) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@242 $generated@@248)) (= ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@141) (= ($generated@@139 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@141) ($generated@@139 $generated@@252)) (exists (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (and (and (= (type $generated@@253) $generated@@150) (= (type $generated@@254) $generated@@150)) (= $generated@@252 ($generated@@216 $generated@@253 $generated@@254)))
 :no-pattern (type $generated@@253)
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
)))
 :pattern ( ($generated@@139 $generated@@252))
)))
(assert  (and (and (forall (($generated@@259 T@T) ) (= ($generated@@1 ($generated@@257 $generated@@259)) 17)) (forall (($generated@@260 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
))) (forall (($generated@@261 T@T) ) (! (= (type ($generated@@255 $generated@@261)) ($generated@@257 $generated@@261))
 :pattern ( ($generated@@255 $generated@@261))
))))
(assert (forall (($generated@@262 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@262)) 0)
 :pattern ( ($generated@@255 $generated@@262))
)))
(assert  (and (= ($generated@@1 $generated@@266) 18) (forall (($generated@@268 T@U) ) (! (= (type ($generated@@265 $generated@@268)) $generated@@266)
 :pattern ( ($generated@@265 $generated@@268))
))))
(assert  (=> (<= 1 $generated@@263) (forall (($generated@@269 T@U) ($generated@@270 Int) ) (!  (=> (and (= (type $generated@@269) $generated@@266) (or ($generated@@267 $generated@@270) (and (not (= 1 $generated@@263)) (<= ($generated@@236 0) $generated@@270)))) (and (=> (<= 2 $generated@@270) (and ($generated@@267 (- $generated@@270 2)) ($generated@@267 (- $generated@@270 1)))) (= ($generated@@264 ($generated@@265 $generated@@269) $generated@@270) (ite (< $generated@@270 2) $generated@@270 (+ ($generated@@264 $generated@@269 (- $generated@@270 2)) ($generated@@264 $generated@@269 (- $generated@@270 1)))))))
 :pattern ( ($generated@@264 ($generated@@265 $generated@@269) $generated@@270))
))))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@2) (= ($generated@@137 $generated@@271 $generated@@134) (<= ($generated@@236 0) ($generated $generated@@271))))
 :pattern ( ($generated@@137 $generated@@271 $generated@@134))
)))
(assert  (=> (<= 1 $generated@@263) (forall (($generated@@272 T@U) ($generated@@273 Int) ) (!  (=> (and (= (type $generated@@272) $generated@@266) (or ($generated@@267 $generated@@273) (and (not (= 1 $generated@@263)) (<= ($generated@@236 0) $generated@@273)))) (<= ($generated@@236 0) ($generated@@264 $generated@@272 $generated@@273)))
 :pattern ( ($generated@@264 $generated@@272 $generated@@273))
))))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@150)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@66) (= (type $generated@@278) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@243 ($generated@@274 $generated@@276) $generated@@277 $generated@@278) ($generated@@76 $generated@@276 $generated@@277 $generated@@278)))
 :pattern ( ($generated@@243 ($generated@@274 $generated@@276) $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@281 T@T) ) (! (= (type ($generated@@280 $generated@@281)) ($generated@@78 $generated@@281 $generated@@2))
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@81 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@78 $generated@@283 $generated@@2)) (and (= (= ($generated@@279 $generated@@282) 0) (= $generated@@282 ($generated@@280 $generated@@283))) (=> (not (= ($generated@@279 $generated@@282) 0)) (exists (($generated@@284 T@U) ) (!  (and (= (type $generated@@284) $generated@@283) (< 0 ($generated ($generated@@83 $generated@@282 $generated@@284))))
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
))))))
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 19)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@78 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@83 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@83 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 20)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@78 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@83 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@83 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@81 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@78 $generated@@322 $generated@@2)) (= ($generated@@156 $generated@@321) (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@322) (and (<= 0 ($generated ($generated@@83 $generated@@321 $generated@@323))) (<= ($generated ($generated@@83 $generated@@321 $generated@@323)) ($generated@@279 $generated@@321))))
 :pattern ( ($generated@@83 $generated@@321 $generated@@323))
)))))
 :pattern ( ($generated@@156 $generated@@321))
)))
(assert (forall (($generated@@325 T@T) ($generated@@326 T@U) ) (! (= (type ($generated@@324 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@324 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@150) ($generated@@217 $generated@@327 $generated@@134)) (and (= ($generated@@274 ($generated@@324 $generated@@2 $generated@@327)) $generated@@327) ($generated@@137 ($generated@@324 $generated@@2 $generated@@327) $generated@@134)))
 :pattern ( ($generated@@217 $generated@@327 $generated@@134))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@289 (type $generated@@328))))
(let (($generated@@330 ($generated@@288 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@287 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@286 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) ($generated@@0 ($generated@@83 ($generated@@285 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@285 $generated@@328))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@289 (type $generated@@333))))
(= (type ($generated@@332 $generated@@333)) ($generated@@78 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@289 (type $generated@@335))))
(let (($generated@@337 ($generated@@288 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@287 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@286 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@336) ($generated@@0 ($generated@@83 ($generated@@332 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@307 (type $generated@@339))))
(let (($generated@@341 ($generated@@306 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@305 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@304 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@303 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@307 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@78 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@307 (type $generated@@346))))
(let (($generated@@348 ($generated@@306 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@305 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@304 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@83 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@351) $generated@@66)) (= ($generated@@137 $generated@@350 ($generated@@155 $generated@@351)) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@350 $generated@@352)))) ($generated@@217 $generated@@352 $generated@@351))
 :pattern ( ($generated@@83 $generated@@350 $generated@@352))
))))
 :pattern ( ($generated@@137 $generated@@350 ($generated@@155 $generated@@351)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@354) $generated@@66)) (= (type $generated@@355) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@353 ($generated@@226 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@150) ($generated@@0 ($generated@@83 $generated@@353 $generated@@356))) ($generated@@243 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@83 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@76 $generated@@353 ($generated@@226 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@358) $generated@@66)) (= (type $generated@@359) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@357 ($generated@@231 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@150) ($generated@@0 ($generated@@83 $generated@@357 $generated@@360))) ($generated@@243 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@83 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@76 $generated@@357 ($generated@@231 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(= ($generated ($generated@@83 ($generated@@280 $generated@@362) $generated@@361)) 0))
 :pattern ( (let (($generated@@362 (type $generated@@361)))
($generated@@83 ($generated@@280 $generated@@362) $generated@@361)))
)))
(assert  (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@363 $generated@@365))
)) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@289 (type $generated@@366))))
(let (($generated@@368 ($generated@@288 (type $generated@@366))))
(= (type ($generated@@364 $generated@@366)) ($generated@@78 $generated@@368 $generated@@367))))
 :pattern ( ($generated@@364 $generated@@366))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@287 $generated@@150 $generated@@150)) (= (type $generated@@370) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@363 $generated@@369) $generated@@370))  (and ($generated@@0 ($generated@@83 ($generated@@285 $generated@@369) ($generated@@148 ($generated@@324 $generated@@141 $generated@@370)))) (= ($generated@@83 ($generated@@364 $generated@@369) ($generated@@148 ($generated@@324 $generated@@141 $generated@@370))) ($generated@@149 ($generated@@324 $generated@@141 $generated@@370))))))
 :pattern ( ($generated@@83 ($generated@@363 $generated@@369) $generated@@370))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@307 (type $generated@@374))))
(let (($generated@@376 ($generated@@306 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@78 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@378) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@83 ($generated@@303 $generated@@377) ($generated@@148 ($generated@@324 $generated@@141 $generated@@378)))) (= ($generated@@83 ($generated@@372 $generated@@377) ($generated@@148 ($generated@@324 $generated@@141 $generated@@378))) ($generated@@149 ($generated@@324 $generated@@141 $generated@@378))))))
 :pattern ( ($generated@@83 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@288 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@287 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@83 ($generated@@332 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@83 ($generated@@285 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@83 ($generated@@364 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@83 ($generated@@285 $generated@@379) $generated@@383))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@83 ($generated@@332 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@306 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@305 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@83 ($generated@@343 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@83 ($generated@@303 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@83 ($generated@@372 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@384) $generated@@388))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@83 ($generated@@343 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@390 $generated@@391)) $generated@@66)
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (and (= (type $generated@@392) ($generated@@287 $generated@@150 $generated@@150)) (= (type $generated@@393) $generated@@66)) (= (type $generated@@394) $generated@@66)) (= (type $generated@@395) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@285 $generated@@392) $generated@@396))) (and ($generated@@243 ($generated@@83 ($generated@@364 $generated@@392) $generated@@396) $generated@@394 $generated@@395) ($generated@@243 $generated@@396 $generated@@393 $generated@@395)))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@392) $generated@@396))
 :pattern ( ($generated@@83 ($generated@@285 $generated@@392) $generated@@396))
))))
 :pattern ( ($generated@@76 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@66)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@401) $generated@@66)) (= (type $generated@@402) $generated@@66)) (= (type $generated@@403) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@400) $generated@@404))) (and ($generated@@243 ($generated@@83 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@243 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@76 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@T) ) (! (= (type ($generated@@405 $generated@@406)) ($generated@@78 $generated@@406 $generated@@4))
 :pattern ( ($generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@307 (type $generated@@407))))
(let (($generated@@409 ($generated@@306 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@305 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@304 $generated@@409 $generated@@408)) (= ($generated@@303 $generated@@407) ($generated@@405 $generated@@409))))))
 :pattern ( ($generated@@303 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@307 (type $generated@@410))))
(let (($generated@@412 ($generated@@306 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@305 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@304 $generated@@412 $generated@@411)) (= ($generated@@343 $generated@@410) ($generated@@405 $generated@@411))))))
 :pattern ( ($generated@@343 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@307 (type $generated@@413))))
(let (($generated@@415 ($generated@@306 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@305 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@304 $generated@@415 $generated@@414)) (= ($generated@@371 $generated@@413) ($generated@@405 $generated@@150))))))
 :pattern ( ($generated@@371 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@289 (type $generated@@416))))
(let (($generated@@418 ($generated@@288 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@287 $generated@@418 $generated@@417)) (or (= $generated@@416 ($generated@@286 $generated@@418 $generated@@417)) (exists (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (and (and (= (type $generated@@419) $generated@@150) (= (type $generated@@420) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@363 $generated@@416) ($generated@@274 ($generated@@216 $generated@@419 $generated@@420)))))
 :no-pattern (type $generated@@419)
 :no-pattern (type $generated@@420)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
))))))
 :pattern ( ($generated@@363 $generated@@416))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@307 (type $generated@@421))))
(let (($generated@@423 ($generated@@306 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@305 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@304 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@150) (= (type $generated@@425) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@371 $generated@@421) ($generated@@274 ($generated@@216 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@371 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@150) ($generated@@217 $generated@@426 $generated@@46)) (and (= ($generated@@274 ($generated@@324 $generated@@2 $generated@@426)) $generated@@426) ($generated@@137 ($generated@@324 $generated@@2 $generated@@426) $generated@@46)))
 :pattern ( ($generated@@217 $generated@@426 $generated@@46))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@150) ($generated@@217 $generated@@427 $generated@@47)) (and (= ($generated@@274 ($generated@@324 $generated@@3 $generated@@427)) $generated@@427) ($generated@@137 ($generated@@324 $generated@@3 $generated@@427) $generated@@47)))
 :pattern ( ($generated@@217 $generated@@427 $generated@@47))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@150) ($generated@@217 $generated@@428 $generated@@44)) (and (= ($generated@@274 ($generated@@324 $generated@@4 $generated@@428)) $generated@@428) ($generated@@137 ($generated@@324 $generated@@4 $generated@@428) $generated@@44)))
 :pattern ( ($generated@@217 $generated@@428 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@429) 21))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@150) ($generated@@217 $generated@@430 $generated@@45)) (and (= ($generated@@274 ($generated@@324 $generated@@429 $generated@@430)) $generated@@430) ($generated@@137 ($generated@@324 $generated@@429 $generated@@430) $generated@@45)))
 :pattern ( ($generated@@217 $generated@@430 $generated@@45))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (= (type $generated@@432) $generated@@66) (= ($generated@@217 ($generated@@274 $generated@@431) $generated@@432) ($generated@@137 $generated@@431 $generated@@432)))
 :pattern ( ($generated@@217 ($generated@@274 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@81 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@78 $generated@@434 $generated@@2)) (<= 0 ($generated@@279 $generated@@433))))
 :pattern ( ($generated@@279 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@258 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@257 $generated@@436)) (<= 0 ($generated@@256 $generated@@435))))
 :pattern ( ($generated@@256 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@66)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@66) (= (type $generated@@440) $generated@@66)) (= ($generated@@437 ($generated@@389 $generated@@439 $generated@@440)) $generated@@439))
 :pattern ( ($generated@@389 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@66)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@66) (= (type $generated@@444) $generated@@66)) (= ($generated@@441 ($generated@@389 $generated@@443 $generated@@444)) $generated@@444))
 :pattern ( ($generated@@389 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@66) (= (type $generated@@446) $generated@@66)) (= ($generated@@74 ($generated@@389 $generated@@445 $generated@@446)) $generated@@58))
 :pattern ( ($generated@@389 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@66)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@66) (= (type $generated@@450) $generated@@66)) (= ($generated@@447 ($generated@@397 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@397 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@451 ($generated@@397 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@397 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@66) (= (type $generated@@456) $generated@@66)) (= ($generated@@74 ($generated@@397 $generated@@455 $generated@@456)) $generated@@59))
 :pattern ( ($generated@@397 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@150) (= (type $generated@@458) $generated@@150)) (= ($generated@@249 ($generated@@216 $generated@@457 $generated@@458)) $generated@@62))
 :pattern ( ($generated@@216 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@66)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@459 ($generated@@140 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@140 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@140 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@140 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@150) (= (type $generated@@468) $generated@@150)) (= ($generated@@148 ($generated@@216 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@216 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@150) (= (type $generated@@470) $generated@@150)) (= ($generated@@149 ($generated@@216 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@216 $generated@@469 $generated@@470))
)))
(assert  (and (forall (($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@473)) $generated@@266)
 :pattern ( ($generated@@471 $generated@@473))
)) (= (type $generated@@472) $generated@@266)))
(assert (forall (($generated@@474 T@U) ($generated@@475 Int) ) (!  (=> (= (type $generated@@474) $generated@@266) (= ($generated@@264 $generated@@474 $generated@@475) ($generated@@264 $generated@@472 $generated@@475)))
 :pattern ( ($generated@@264 ($generated@@471 $generated@@474) $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@258 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@257 $generated@@150)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@256 $generated@@482))) ($generated@@243 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@77 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@77 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@488 ($generated@@226 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@226 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@74 ($generated@@226 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@226 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@231 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@231 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@231 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@231 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@155 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@155 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@324 $generated@@505 ($generated@@274 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@274 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@287 $generated@@150 $generated@@150)) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) $generated@@66)) (= ($generated@@137 $generated@@506 ($generated@@389 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@285 $generated@@506) $generated@@509))) (and ($generated@@217 ($generated@@83 ($generated@@364 $generated@@506) $generated@@509) $generated@@508) ($generated@@217 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@506) $generated@@509))
 :pattern ( ($generated@@83 ($generated@@285 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@137 $generated@@506 ($generated@@389 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@137 $generated@@510 ($generated@@397 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@510) $generated@@513))) (and ($generated@@217 ($generated@@83 ($generated@@372 $generated@@510) $generated@@513) $generated@@512) ($generated@@217 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@137 $generated@@510 ($generated@@397 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@150) (= (type $generated@@517) $generated@@150)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@216 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@216 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@150) (= (type $generated@@519) $generated@@150)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@216 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@216 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 Int) ) (!  (=> (= (type $generated@@520) $generated@@266) (= ($generated@@264 ($generated@@265 $generated@@520) $generated@@521) ($generated@@264 $generated@@520 $generated@@521)))
 :pattern ( ($generated@@264 ($generated@@265 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@150) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) ($generated@@217 $generated@@522 ($generated@@389 $generated@@523 $generated@@524))) (and (= ($generated@@274 ($generated@@324 ($generated@@287 $generated@@150 $generated@@150) $generated@@522)) $generated@@522) ($generated@@137 ($generated@@324 ($generated@@287 $generated@@150 $generated@@150) $generated@@522) ($generated@@389 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@217 $generated@@522 ($generated@@389 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@150) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@66)) ($generated@@217 $generated@@525 ($generated@@397 $generated@@526 $generated@@527))) (and (= ($generated@@274 ($generated@@324 ($generated@@305 $generated@@150 $generated@@150) $generated@@525)) $generated@@525) ($generated@@137 ($generated@@324 ($generated@@305 $generated@@150 $generated@@150) $generated@@525) ($generated@@397 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@217 $generated@@525 ($generated@@397 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@66) (= (type $generated@@529) $generated@@66)) (= (type $generated@@530) $generated@@150)) ($generated@@217 $generated@@530 ($generated@@140 $generated@@528 $generated@@529))) (and (= ($generated@@274 ($generated@@324 $generated@@141 $generated@@530)) $generated@@530) ($generated@@137 ($generated@@324 $generated@@141 $generated@@530) ($generated@@140 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@217 $generated@@530 ($generated@@140 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
 (not ($generated@@0 ($generated@@83 ($generated@@405 $generated@@532) $generated@@531))))
 :pattern ( (let (($generated@@532 (type $generated@@531)))
($generated@@83 ($generated@@405 $generated@@532) $generated@@531)))
)))
(assert (forall (($generated@@534 Int) ($generated@@535 Int) ) (! (= ($generated@@533 $generated@@534 $generated@@535) (mod $generated@@534 $generated@@535))
 :pattern ( ($generated@@533 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@71)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@66) (= (type $generated@@539) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@538 $generated@@539)) $generated@@63) (= ($generated@@536 ($generated@@140 $generated@@538 $generated@@539)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@141) (= ($generated@@514 ($generated@@274 $generated@@540)) ($generated@@515 $generated@@540)))
 :pattern ( ($generated@@514 ($generated@@274 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@150) ($generated@@217 $generated@@541 ($generated@@77 0))) (and (= ($generated@@274 ($generated@@324 $generated@@2 $generated@@541)) $generated@@541) ($generated@@137 ($generated@@324 ($generated@@78 $generated@@150 $generated@@4) $generated@@541) ($generated@@77 0))))
 :pattern ( ($generated@@217 $generated@@541 ($generated@@77 0)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@150) (= (type $generated@@543) $generated@@66)) ($generated@@217 $generated@@542 ($generated@@226 $generated@@543))) (and (= ($generated@@274 ($generated@@324 ($generated@@78 $generated@@150 $generated@@4) $generated@@542)) $generated@@542) ($generated@@137 ($generated@@324 ($generated@@78 $generated@@150 $generated@@4) $generated@@542) ($generated@@226 $generated@@543))))
 :pattern ( ($generated@@217 $generated@@542 ($generated@@226 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@150) (= (type $generated@@545) $generated@@66)) ($generated@@217 $generated@@544 ($generated@@231 $generated@@545))) (and (= ($generated@@274 ($generated@@324 ($generated@@78 $generated@@150 $generated@@4) $generated@@544)) $generated@@544) ($generated@@137 ($generated@@324 ($generated@@78 $generated@@150 $generated@@4) $generated@@544) ($generated@@231 $generated@@545))))
 :pattern ( ($generated@@217 $generated@@544 ($generated@@231 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@150) (= (type $generated@@547) $generated@@66)) ($generated@@217 $generated@@546 ($generated@@155 $generated@@547))) (and (= ($generated@@274 ($generated@@324 ($generated@@78 $generated@@150 $generated@@2) $generated@@546)) $generated@@546) ($generated@@137 ($generated@@324 ($generated@@78 $generated@@150 $generated@@2) $generated@@546) ($generated@@155 $generated@@547))))
 :pattern ( ($generated@@217 $generated@@546 ($generated@@155 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@150) (= (type $generated@@549) $generated@@66)) ($generated@@217 $generated@@548 ($generated@@476 $generated@@549))) (and (= ($generated@@274 ($generated@@324 ($generated@@257 $generated@@150) $generated@@548)) $generated@@548) ($generated@@137 ($generated@@324 ($generated@@257 $generated@@150) $generated@@548) ($generated@@476 $generated@@549))))
 :pattern ( ($generated@@217 $generated@@548 ($generated@@476 $generated@@549)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@536 $generated@@134) $generated@@64))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@551) $generated@@66)) (= (type $generated@@552) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@550 ($generated@@155 $generated@@551) $generated@@552) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@550 $generated@@553)))) ($generated@@243 $generated@@553 $generated@@551 $generated@@552))
 :pattern ( ($generated@@83 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@76 $generated@@550 ($generated@@155 $generated@@551) $generated@@552))
)))
(assert  (=> (<= 1 $generated@@263) (forall (($generated@@554 T@U) ($generated@@555 Int) ) (!  (=> (and (= (type $generated@@554) $generated@@266) (or ($generated@@267 ($generated@@236 $generated@@555)) (and (not (= 1 $generated@@263)) (<= ($generated@@236 0) $generated@@555)))) (and (=> (not ($generated@@0 ($generated@@238 ($generated@@11 (< $generated@@555 2))))) (and ($generated@@267 ($generated@@236 (- $generated@@555 2))) ($generated@@267 ($generated@@236 (- $generated@@555 1))))) (= ($generated@@264 ($generated@@265 $generated@@554) ($generated@@236 $generated@@555)) (ite (< $generated@@555 2) $generated@@555 (+ ($generated@@264 ($generated@@265 $generated@@554) ($generated@@236 (- $generated@@555 2))) ($generated@@264 ($generated@@265 $generated@@554) ($generated@@236 (- $generated@@555 1))))))))
 :weight 3
 :pattern ( ($generated@@264 ($generated@@265 $generated@@554) ($generated@@236 $generated@@555)))
))))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@141) (= (type $generated@@557) $generated@@66)) (= (type $generated@@558) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@558) (and ($generated@@139 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@66) ($generated@@76 $generated@@556 ($generated@@140 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@76 $generated@@556 ($generated@@140 $generated@@557 $generated@@559) $generated@@558))
))))) ($generated@@243 ($generated@@148 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@243 ($generated@@148 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@141) (= (type $generated@@561) $generated@@66)) (= (type $generated@@562) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@562) (and ($generated@@139 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@66) ($generated@@76 $generated@@560 ($generated@@140 $generated@@563 $generated@@561) $generated@@562))
 :pattern ( ($generated@@76 $generated@@560 ($generated@@140 $generated@@563 $generated@@561) $generated@@562))
))))) ($generated@@243 ($generated@@149 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@243 ($generated@@149 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@150) (= (type $generated@@565) $generated@@150)) (= ($generated@@216 ($generated@@238 $generated@@564) ($generated@@238 $generated@@565)) ($generated@@238 ($generated@@216 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@216 ($generated@@238 $generated@@564) ($generated@@238 $generated@@565)))
)))
(assert (forall (($generated@@566 Int) ) (! (= ($generated@@274 ($generated@@8 ($generated@@236 $generated@@566))) ($generated@@238 ($generated@@274 ($generated@@8 $generated@@566))))
 :pattern ( ($generated@@274 ($generated@@8 ($generated@@236 $generated@@566))))
)))
(assert (forall (($generated@@567 T@U) ) (! (= ($generated@@274 ($generated@@238 $generated@@567)) ($generated@@238 ($generated@@274 $generated@@567)))
 :pattern ( ($generated@@274 ($generated@@238 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@258 (type $generated@@568))))
 (=> (and (= (type $generated@@568) ($generated@@257 $generated@@569)) (= ($generated@@256 $generated@@568) 0)) (= $generated@@568 ($generated@@255 $generated@@569))))
 :pattern ( ($generated@@256 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@571)))
 (=> (and (and (= (type $generated@@570) ($generated@@78 $generated@@573 $generated@@2)) (= (type $generated@@572) $generated@@2)) (<= 0 ($generated $generated@@572))) (= ($generated@@279 ($generated@@84 $generated@@570 $generated@@571 $generated@@572)) (+ (- ($generated@@279 $generated@@570) ($generated ($generated@@83 $generated@@570 $generated@@571))) ($generated $generated@@572)))))
 :pattern ( ($generated@@279 ($generated@@84 $generated@@570 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@575) $generated@@2)) ($generated@@76 $generated@@575 $generated@@46 $generated@@574))
 :pattern ( ($generated@@76 $generated@@575 $generated@@46 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@577) $generated@@3)) ($generated@@76 $generated@@577 $generated@@47 $generated@@576))
 :pattern ( ($generated@@76 $generated@@577 $generated@@47 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@579) $generated@@4)) ($generated@@76 $generated@@579 $generated@@44 $generated@@578))
 :pattern ( ($generated@@76 $generated@@579 $generated@@44 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@581) $generated@@429)) ($generated@@76 $generated@@581 $generated@@45 $generated@@580))
 :pattern ( ($generated@@76 $generated@@581 $generated@@45 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@583) $generated@@150)) ($generated@@76 $generated@@583 $generated@@48 $generated@@582))
 :pattern ( ($generated@@76 $generated@@583 $generated@@48 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@257 $generated@@150)) (= (type $generated@@585) $generated@@66)) (= ($generated@@137 $generated@@584 ($generated@@476 $generated@@585)) (forall (($generated@@586 Int) ) (!  (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@256 $generated@@584))) ($generated@@217 ($generated@@477 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@477 $generated@@584 $generated@@586))
))))
 :pattern ( ($generated@@137 $generated@@584 ($generated@@476 $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 Int) ) (!  (=> (= (type $generated@@588) ($generated@@257 $generated@@150)) (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@256 $generated@@588))) (< ($generated@@515 ($generated@@324 $generated@@141 ($generated@@477 $generated@@588 $generated@@589))) ($generated@@587 $generated@@588))))
 :pattern ( ($generated@@515 ($generated@@324 $generated@@141 ($generated@@477 $generated@@588 $generated@@589))))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@287 $generated@@150 $generated@@150)) (= (type $generated@@591) $generated@@66)) (= (type $generated@@592) $generated@@66)) ($generated@@137 $generated@@590 ($generated@@389 $generated@@591 $generated@@592))) (and (and ($generated@@137 ($generated@@285 $generated@@590) ($generated@@226 $generated@@591)) ($generated@@137 ($generated@@332 $generated@@590) ($generated@@226 $generated@@592))) ($generated@@137 ($generated@@363 $generated@@590) ($generated@@226 ($generated@@140 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@137 $generated@@590 ($generated@@389 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@594) $generated@@66)) (= (type $generated@@595) $generated@@66)) ($generated@@137 $generated@@593 ($generated@@397 $generated@@594 $generated@@595))) (and (and ($generated@@137 ($generated@@303 $generated@@593) ($generated@@231 $generated@@594)) ($generated@@137 ($generated@@343 $generated@@593) ($generated@@231 $generated@@595))) ($generated@@137 ($generated@@371 $generated@@593) ($generated@@231 ($generated@@140 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@137 $generated@@593 ($generated@@397 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@2) ($generated@@137 $generated@@596 $generated@@46))
 :pattern ( ($generated@@137 $generated@@596 $generated@@46))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@3) ($generated@@137 $generated@@597 $generated@@47))
 :pattern ( ($generated@@137 $generated@@597 $generated@@47))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@4) ($generated@@137 $generated@@598 $generated@@44))
 :pattern ( ($generated@@137 $generated@@598 $generated@@44))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@429) ($generated@@137 $generated@@599 $generated@@45))
 :pattern ( ($generated@@137 $generated@@599 $generated@@45))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@150) ($generated@@137 $generated@@600 $generated@@48))
 :pattern ( ($generated@@137 $generated@@600 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 (T@U) Bool)
(declare-fun $generated@@606 () Int)
(assert  (and (and (and (= (type $generated@@601) ($generated@@162 $generated@@79 $generated@@4)) (= (type $generated@@602) $generated@@79)) (= (type $generated@@603) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@604) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@607  (=> (= $generated@@601 ($generated@@161 $generated@@602 $generated@@603 $generated@@60 false)) (=> (and (and (and ($generated@@242 $generated@@604) ($generated@@605 $generated@@604)) (= $generated@@603 $generated@@604)) (and ($generated@@76 ($generated@@8 $generated@@606) $generated@@134 $generated@@604) ($generated@@267 $generated@@606))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= ($generated@@236 2) 0))) (=> (not (= ($generated@@236 2) 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (not (= ($generated@@236 3) 0)))))))))
(let (($generated@@608  (=> (and (and (and ($generated@@242 $generated@@603) ($generated@@605 $generated@@603)) (<= ($generated@@236 0) $generated@@606)) (and (= 2 $generated@@263) (= (ControlFlow 0 4) 2))) $generated@@607)))
$generated@@608)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@255 (T@T) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@263 () Int)
(declare-fun $generated@@264 (T@U Int) Int)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@266 () T@T)
(declare-fun $generated@@267 (Int) Bool)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@324 (T@T T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@389 (T@U T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@T) T@U)
(declare-fun $generated@@429 () T@T)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@472 () T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@533 (Int Int) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@587 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@141)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@66) (= (type $generated@@221) $generated@@66)) (= (type $generated@@222) $generated@@150)) (= (type $generated@@223) $generated@@150)) (= ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221))  (and ($generated@@217 $generated@@222 $generated@@220) ($generated@@217 $generated@@223 $generated@@221))))
 :pattern ( ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@141) (= (type $generated@@225) $generated@@141)) (= ($generated@@147 $generated@@224 $generated@@225) (= $generated@@224 $generated@@225)))
 :pattern ( ($generated@@147 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@66)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@229) $generated@@66)) (= ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@150) ($generated@@0 ($generated@@83 $generated@@228 $generated@@230))) ($generated@@217 $generated@@230 $generated@@229))
 :pattern ( ($generated@@83 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@66)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@150) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@217 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@236 $generated@@237) $generated@@237)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@66) (= (type $generated@@245) $generated@@66)) (= (type $generated@@246) $generated@@150)) (= (type $generated@@247) $generated@@150)) (= (type $generated@@248) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@242 $generated@@248)) (= ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@141) (= ($generated@@139 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@141) ($generated@@139 $generated@@252)) (exists (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (and (and (= (type $generated@@253) $generated@@150) (= (type $generated@@254) $generated@@150)) (= $generated@@252 ($generated@@216 $generated@@253 $generated@@254)))
 :no-pattern (type $generated@@253)
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
)))
 :pattern ( ($generated@@139 $generated@@252))
)))
(assert  (and (and (forall (($generated@@259 T@T) ) (= ($generated@@1 ($generated@@257 $generated@@259)) 17)) (forall (($generated@@260 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
))) (forall (($generated@@261 T@T) ) (! (= (type ($generated@@255 $generated@@261)) ($generated@@257 $generated@@261))
 :pattern ( ($generated@@255 $generated@@261))
))))
(assert (forall (($generated@@262 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@262)) 0)
 :pattern ( ($generated@@255 $generated@@262))
)))
(assert  (and (= ($generated@@1 $generated@@266) 18) (forall (($generated@@268 T@U) ) (! (= (type ($generated@@265 $generated@@268)) $generated@@266)
 :pattern ( ($generated@@265 $generated@@268))
))))
(assert  (=> (<= 1 $generated@@263) (forall (($generated@@269 T@U) ($generated@@270 Int) ) (!  (=> (and (= (type $generated@@269) $generated@@266) (or ($generated@@267 $generated@@270) (and (not (= 1 $generated@@263)) (<= ($generated@@236 0) $generated@@270)))) (and (=> (<= 2 $generated@@270) (and ($generated@@267 (- $generated@@270 2)) ($generated@@267 (- $generated@@270 1)))) (= ($generated@@264 ($generated@@265 $generated@@269) $generated@@270) (ite (< $generated@@270 2) $generated@@270 (+ ($generated@@264 $generated@@269 (- $generated@@270 2)) ($generated@@264 $generated@@269 (- $generated@@270 1)))))))
 :pattern ( ($generated@@264 ($generated@@265 $generated@@269) $generated@@270))
))))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@2) (= ($generated@@137 $generated@@271 $generated@@134) (<= ($generated@@236 0) ($generated $generated@@271))))
 :pattern ( ($generated@@137 $generated@@271 $generated@@134))
)))
(assert  (=> (<= 1 $generated@@263) (forall (($generated@@272 T@U) ($generated@@273 Int) ) (!  (=> (and (= (type $generated@@272) $generated@@266) (or ($generated@@267 $generated@@273) (and (not (= 1 $generated@@263)) (<= ($generated@@236 0) $generated@@273)))) (<= ($generated@@236 0) ($generated@@264 $generated@@272 $generated@@273)))
 :pattern ( ($generated@@264 $generated@@272 $generated@@273))
))))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@150)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@66) (= (type $generated@@278) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@243 ($generated@@274 $generated@@276) $generated@@277 $generated@@278) ($generated@@76 $generated@@276 $generated@@277 $generated@@278)))
 :pattern ( ($generated@@243 ($generated@@274 $generated@@276) $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@281 T@T) ) (! (= (type ($generated@@280 $generated@@281)) ($generated@@78 $generated@@281 $generated@@2))
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@81 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@78 $generated@@283 $generated@@2)) (and (= (= ($generated@@279 $generated@@282) 0) (= $generated@@282 ($generated@@280 $generated@@283))) (=> (not (= ($generated@@279 $generated@@282) 0)) (exists (($generated@@284 T@U) ) (!  (and (= (type $generated@@284) $generated@@283) (< 0 ($generated ($generated@@83 $generated@@282 $generated@@284))))
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
))))))
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 19)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@78 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@83 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@83 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 20)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@78 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@83 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@83 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@81 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@78 $generated@@322 $generated@@2)) (= ($generated@@156 $generated@@321) (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@322) (and (<= 0 ($generated ($generated@@83 $generated@@321 $generated@@323))) (<= ($generated ($generated@@83 $generated@@321 $generated@@323)) ($generated@@279 $generated@@321))))
 :pattern ( ($generated@@83 $generated@@321 $generated@@323))
)))))
 :pattern ( ($generated@@156 $generated@@321))
)))
(assert (forall (($generated@@325 T@T) ($generated@@326 T@U) ) (! (= (type ($generated@@324 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@324 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@150) ($generated@@217 $generated@@327 $generated@@134)) (and (= ($generated@@274 ($generated@@324 $generated@@2 $generated@@327)) $generated@@327) ($generated@@137 ($generated@@324 $generated@@2 $generated@@327) $generated@@134)))
 :pattern ( ($generated@@217 $generated@@327 $generated@@134))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@289 (type $generated@@328))))
(let (($generated@@330 ($generated@@288 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@287 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@286 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) ($generated@@0 ($generated@@83 ($generated@@285 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@285 $generated@@328))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@289 (type $generated@@333))))
(= (type ($generated@@332 $generated@@333)) ($generated@@78 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@289 (type $generated@@335))))
(let (($generated@@337 ($generated@@288 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@287 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@286 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@336) ($generated@@0 ($generated@@83 ($generated@@332 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@307 (type $generated@@339))))
(let (($generated@@341 ($generated@@306 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@305 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@304 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@303 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@307 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@78 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@307 (type $generated@@346))))
(let (($generated@@348 ($generated@@306 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@305 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@304 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@83 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@351) $generated@@66)) (= ($generated@@137 $generated@@350 ($generated@@155 $generated@@351)) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@350 $generated@@352)))) ($generated@@217 $generated@@352 $generated@@351))
 :pattern ( ($generated@@83 $generated@@350 $generated@@352))
))))
 :pattern ( ($generated@@137 $generated@@350 ($generated@@155 $generated@@351)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@354) $generated@@66)) (= (type $generated@@355) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@353 ($generated@@226 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@150) ($generated@@0 ($generated@@83 $generated@@353 $generated@@356))) ($generated@@243 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@83 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@76 $generated@@353 ($generated@@226 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@358) $generated@@66)) (= (type $generated@@359) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@357 ($generated@@231 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@150) ($generated@@0 ($generated@@83 $generated@@357 $generated@@360))) ($generated@@243 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@83 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@76 $generated@@357 ($generated@@231 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(= ($generated ($generated@@83 ($generated@@280 $generated@@362) $generated@@361)) 0))
 :pattern ( (let (($generated@@362 (type $generated@@361)))
($generated@@83 ($generated@@280 $generated@@362) $generated@@361)))
)))
(assert  (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@363 $generated@@365))
)) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@289 (type $generated@@366))))
(let (($generated@@368 ($generated@@288 (type $generated@@366))))
(= (type ($generated@@364 $generated@@366)) ($generated@@78 $generated@@368 $generated@@367))))
 :pattern ( ($generated@@364 $generated@@366))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@287 $generated@@150 $generated@@150)) (= (type $generated@@370) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@363 $generated@@369) $generated@@370))  (and ($generated@@0 ($generated@@83 ($generated@@285 $generated@@369) ($generated@@148 ($generated@@324 $generated@@141 $generated@@370)))) (= ($generated@@83 ($generated@@364 $generated@@369) ($generated@@148 ($generated@@324 $generated@@141 $generated@@370))) ($generated@@149 ($generated@@324 $generated@@141 $generated@@370))))))
 :pattern ( ($generated@@83 ($generated@@363 $generated@@369) $generated@@370))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@307 (type $generated@@374))))
(let (($generated@@376 ($generated@@306 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@78 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@378) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@83 ($generated@@303 $generated@@377) ($generated@@148 ($generated@@324 $generated@@141 $generated@@378)))) (= ($generated@@83 ($generated@@372 $generated@@377) ($generated@@148 ($generated@@324 $generated@@141 $generated@@378))) ($generated@@149 ($generated@@324 $generated@@141 $generated@@378))))))
 :pattern ( ($generated@@83 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@288 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@287 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@83 ($generated@@332 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@83 ($generated@@285 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@83 ($generated@@364 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@83 ($generated@@285 $generated@@379) $generated@@383))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@83 ($generated@@332 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@306 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@305 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@83 ($generated@@343 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@83 ($generated@@303 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@83 ($generated@@372 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@384) $generated@@388))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@83 ($generated@@343 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@390 $generated@@391)) $generated@@66)
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (and (= (type $generated@@392) ($generated@@287 $generated@@150 $generated@@150)) (= (type $generated@@393) $generated@@66)) (= (type $generated@@394) $generated@@66)) (= (type $generated@@395) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@285 $generated@@392) $generated@@396))) (and ($generated@@243 ($generated@@83 ($generated@@364 $generated@@392) $generated@@396) $generated@@394 $generated@@395) ($generated@@243 $generated@@396 $generated@@393 $generated@@395)))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@392) $generated@@396))
 :pattern ( ($generated@@83 ($generated@@285 $generated@@392) $generated@@396))
))))
 :pattern ( ($generated@@76 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@66)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@401) $generated@@66)) (= (type $generated@@402) $generated@@66)) (= (type $generated@@403) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@400) $generated@@404))) (and ($generated@@243 ($generated@@83 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@243 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@76 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@T) ) (! (= (type ($generated@@405 $generated@@406)) ($generated@@78 $generated@@406 $generated@@4))
 :pattern ( ($generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@307 (type $generated@@407))))
(let (($generated@@409 ($generated@@306 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@305 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@304 $generated@@409 $generated@@408)) (= ($generated@@303 $generated@@407) ($generated@@405 $generated@@409))))))
 :pattern ( ($generated@@303 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@307 (type $generated@@410))))
(let (($generated@@412 ($generated@@306 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@305 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@304 $generated@@412 $generated@@411)) (= ($generated@@343 $generated@@410) ($generated@@405 $generated@@411))))))
 :pattern ( ($generated@@343 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@307 (type $generated@@413))))
(let (($generated@@415 ($generated@@306 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@305 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@304 $generated@@415 $generated@@414)) (= ($generated@@371 $generated@@413) ($generated@@405 $generated@@150))))))
 :pattern ( ($generated@@371 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@289 (type $generated@@416))))
(let (($generated@@418 ($generated@@288 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@287 $generated@@418 $generated@@417)) (or (= $generated@@416 ($generated@@286 $generated@@418 $generated@@417)) (exists (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (and (and (= (type $generated@@419) $generated@@150) (= (type $generated@@420) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@363 $generated@@416) ($generated@@274 ($generated@@216 $generated@@419 $generated@@420)))))
 :no-pattern (type $generated@@419)
 :no-pattern (type $generated@@420)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
))))))
 :pattern ( ($generated@@363 $generated@@416))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@307 (type $generated@@421))))
(let (($generated@@423 ($generated@@306 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@305 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@304 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@150) (= (type $generated@@425) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@371 $generated@@421) ($generated@@274 ($generated@@216 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@371 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@150) ($generated@@217 $generated@@426 $generated@@46)) (and (= ($generated@@274 ($generated@@324 $generated@@2 $generated@@426)) $generated@@426) ($generated@@137 ($generated@@324 $generated@@2 $generated@@426) $generated@@46)))
 :pattern ( ($generated@@217 $generated@@426 $generated@@46))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@150) ($generated@@217 $generated@@427 $generated@@47)) (and (= ($generated@@274 ($generated@@324 $generated@@3 $generated@@427)) $generated@@427) ($generated@@137 ($generated@@324 $generated@@3 $generated@@427) $generated@@47)))
 :pattern ( ($generated@@217 $generated@@427 $generated@@47))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@150) ($generated@@217 $generated@@428 $generated@@44)) (and (= ($generated@@274 ($generated@@324 $generated@@4 $generated@@428)) $generated@@428) ($generated@@137 ($generated@@324 $generated@@4 $generated@@428) $generated@@44)))
 :pattern ( ($generated@@217 $generated@@428 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@429) 21))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@150) ($generated@@217 $generated@@430 $generated@@45)) (and (= ($generated@@274 ($generated@@324 $generated@@429 $generated@@430)) $generated@@430) ($generated@@137 ($generated@@324 $generated@@429 $generated@@430) $generated@@45)))
 :pattern ( ($generated@@217 $generated@@430 $generated@@45))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (= (type $generated@@432) $generated@@66) (= ($generated@@217 ($generated@@274 $generated@@431) $generated@@432) ($generated@@137 $generated@@431 $generated@@432)))
 :pattern ( ($generated@@217 ($generated@@274 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@81 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@78 $generated@@434 $generated@@2)) (<= 0 ($generated@@279 $generated@@433))))
 :pattern ( ($generated@@279 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@258 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@257 $generated@@436)) (<= 0 ($generated@@256 $generated@@435))))
 :pattern ( ($generated@@256 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@66)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@66) (= (type $generated@@440) $generated@@66)) (= ($generated@@437 ($generated@@389 $generated@@439 $generated@@440)) $generated@@439))
 :pattern ( ($generated@@389 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@66)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@66) (= (type $generated@@444) $generated@@66)) (= ($generated@@441 ($generated@@389 $generated@@443 $generated@@444)) $generated@@444))
 :pattern ( ($generated@@389 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@66) (= (type $generated@@446) $generated@@66)) (= ($generated@@74 ($generated@@389 $generated@@445 $generated@@446)) $generated@@58))
 :pattern ( ($generated@@389 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@66)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@66) (= (type $generated@@450) $generated@@66)) (= ($generated@@447 ($generated@@397 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@397 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@451 ($generated@@397 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@397 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@66) (= (type $generated@@456) $generated@@66)) (= ($generated@@74 ($generated@@397 $generated@@455 $generated@@456)) $generated@@59))
 :pattern ( ($generated@@397 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@150) (= (type $generated@@458) $generated@@150)) (= ($generated@@249 ($generated@@216 $generated@@457 $generated@@458)) $generated@@62))
 :pattern ( ($generated@@216 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@66)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@459 ($generated@@140 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@140 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@140 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@140 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@150) (= (type $generated@@468) $generated@@150)) (= ($generated@@148 ($generated@@216 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@216 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@150) (= (type $generated@@470) $generated@@150)) (= ($generated@@149 ($generated@@216 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@216 $generated@@469 $generated@@470))
)))
(assert  (and (forall (($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@473)) $generated@@266)
 :pattern ( ($generated@@471 $generated@@473))
)) (= (type $generated@@472) $generated@@266)))
(assert (forall (($generated@@474 T@U) ($generated@@475 Int) ) (!  (=> (= (type $generated@@474) $generated@@266) (= ($generated@@264 $generated@@474 $generated@@475) ($generated@@264 $generated@@472 $generated@@475)))
 :pattern ( ($generated@@264 ($generated@@471 $generated@@474) $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@258 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@257 $generated@@150)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@256 $generated@@482))) ($generated@@243 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@77 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@77 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@488 ($generated@@226 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@226 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@74 ($generated@@226 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@226 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@231 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@231 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@231 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@231 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@155 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@155 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@324 $generated@@505 ($generated@@274 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@274 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@287 $generated@@150 $generated@@150)) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) $generated@@66)) (= ($generated@@137 $generated@@506 ($generated@@389 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@285 $generated@@506) $generated@@509))) (and ($generated@@217 ($generated@@83 ($generated@@364 $generated@@506) $generated@@509) $generated@@508) ($generated@@217 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@506) $generated@@509))
 :pattern ( ($generated@@83 ($generated@@285 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@137 $generated@@506 ($generated@@389 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@137 $generated@@510 ($generated@@397 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@510) $generated@@513))) (and ($generated@@217 ($generated@@83 ($generated@@372 $generated@@510) $generated@@513) $generated@@512) ($generated@@217 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@137 $generated@@510 ($generated@@397 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@150) (= (type $generated@@517) $generated@@150)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@216 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@216 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@150) (= (type $generated@@519) $generated@@150)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@216 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@216 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 Int) ) (!  (=> (= (type $generated@@520) $generated@@266) (= ($generated@@264 ($generated@@265 $generated@@520) $generated@@521) ($generated@@264 $generated@@520 $generated@@521)))
 :pattern ( ($generated@@264 ($generated@@265 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@150) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) ($generated@@217 $generated@@522 ($generated@@389 $generated@@523 $generated@@524))) (and (= ($generated@@274 ($generated@@324 ($generated@@287 $generated@@150 $generated@@150) $generated@@522)) $generated@@522) ($generated@@137 ($generated@@324 ($generated@@287 $generated@@150 $generated@@150) $generated@@522) ($generated@@389 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@217 $generated@@522 ($generated@@389 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@150) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@66)) ($generated@@217 $generated@@525 ($generated@@397 $generated@@526 $generated@@527))) (and (= ($generated@@274 ($generated@@324 ($generated@@305 $generated@@150 $generated@@150) $generated@@525)) $generated@@525) ($generated@@137 ($generated@@324 ($generated@@305 $generated@@150 $generated@@150) $generated@@525) ($generated@@397 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@217 $generated@@525 ($generated@@397 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@66) (= (type $generated@@529) $generated@@66)) (= (type $generated@@530) $generated@@150)) ($generated@@217 $generated@@530 ($generated@@140 $generated@@528 $generated@@529))) (and (= ($generated@@274 ($generated@@324 $generated@@141 $generated@@530)) $generated@@530) ($generated@@137 ($generated@@324 $generated@@141 $generated@@530) ($generated@@140 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@217 $generated@@530 ($generated@@140 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
 (not ($generated@@0 ($generated@@83 ($generated@@405 $generated@@532) $generated@@531))))
 :pattern ( (let (($generated@@532 (type $generated@@531)))
($generated@@83 ($generated@@405 $generated@@532) $generated@@531)))
)))
(assert (forall (($generated@@534 Int) ($generated@@535 Int) ) (! (= ($generated@@533 $generated@@534 $generated@@535) (mod $generated@@534 $generated@@535))
 :pattern ( ($generated@@533 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@71)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@66) (= (type $generated@@539) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@538 $generated@@539)) $generated@@63) (= ($generated@@536 ($generated@@140 $generated@@538 $generated@@539)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@141) (= ($generated@@514 ($generated@@274 $generated@@540)) ($generated@@515 $generated@@540)))
 :pattern ( ($generated@@514 ($generated@@274 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@150) ($generated@@217 $generated@@541 ($generated@@77 0))) (and (= ($generated@@274 ($generated@@324 $generated@@2 $generated@@541)) $generated@@541) ($generated@@137 ($generated@@324 ($generated@@78 $generated@@150 $generated@@4) $generated@@541) ($generated@@77 0))))
 :pattern ( ($generated@@217 $generated@@541 ($generated@@77 0)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@150) (= (type $generated@@543) $generated@@66)) ($generated@@217 $generated@@542 ($generated@@226 $generated@@543))) (and (= ($generated@@274 ($generated@@324 ($generated@@78 $generated@@150 $generated@@4) $generated@@542)) $generated@@542) ($generated@@137 ($generated@@324 ($generated@@78 $generated@@150 $generated@@4) $generated@@542) ($generated@@226 $generated@@543))))
 :pattern ( ($generated@@217 $generated@@542 ($generated@@226 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@150) (= (type $generated@@545) $generated@@66)) ($generated@@217 $generated@@544 ($generated@@231 $generated@@545))) (and (= ($generated@@274 ($generated@@324 ($generated@@78 $generated@@150 $generated@@4) $generated@@544)) $generated@@544) ($generated@@137 ($generated@@324 ($generated@@78 $generated@@150 $generated@@4) $generated@@544) ($generated@@231 $generated@@545))))
 :pattern ( ($generated@@217 $generated@@544 ($generated@@231 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@150) (= (type $generated@@547) $generated@@66)) ($generated@@217 $generated@@546 ($generated@@155 $generated@@547))) (and (= ($generated@@274 ($generated@@324 ($generated@@78 $generated@@150 $generated@@2) $generated@@546)) $generated@@546) ($generated@@137 ($generated@@324 ($generated@@78 $generated@@150 $generated@@2) $generated@@546) ($generated@@155 $generated@@547))))
 :pattern ( ($generated@@217 $generated@@546 ($generated@@155 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@150) (= (type $generated@@549) $generated@@66)) ($generated@@217 $generated@@548 ($generated@@476 $generated@@549))) (and (= ($generated@@274 ($generated@@324 ($generated@@257 $generated@@150) $generated@@548)) $generated@@548) ($generated@@137 ($generated@@324 ($generated@@257 $generated@@150) $generated@@548) ($generated@@476 $generated@@549))))
 :pattern ( ($generated@@217 $generated@@548 ($generated@@476 $generated@@549)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@536 $generated@@134) $generated@@64))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@551) $generated@@66)) (= (type $generated@@552) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@550 ($generated@@155 $generated@@551) $generated@@552) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@550 $generated@@553)))) ($generated@@243 $generated@@553 $generated@@551 $generated@@552))
 :pattern ( ($generated@@83 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@76 $generated@@550 ($generated@@155 $generated@@551) $generated@@552))
)))
(assert  (=> (<= 1 $generated@@263) (forall (($generated@@554 T@U) ($generated@@555 Int) ) (!  (=> (and (= (type $generated@@554) $generated@@266) (or ($generated@@267 ($generated@@236 $generated@@555)) (and (not (= 1 $generated@@263)) (<= ($generated@@236 0) $generated@@555)))) (and (=> (not ($generated@@0 ($generated@@238 ($generated@@11 (< $generated@@555 2))))) (and ($generated@@267 ($generated@@236 (- $generated@@555 2))) ($generated@@267 ($generated@@236 (- $generated@@555 1))))) (= ($generated@@264 ($generated@@265 $generated@@554) ($generated@@236 $generated@@555)) (ite (< $generated@@555 2) $generated@@555 (+ ($generated@@264 ($generated@@265 $generated@@554) ($generated@@236 (- $generated@@555 2))) ($generated@@264 ($generated@@265 $generated@@554) ($generated@@236 (- $generated@@555 1))))))))
 :weight 3
 :pattern ( ($generated@@264 ($generated@@265 $generated@@554) ($generated@@236 $generated@@555)))
))))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@141) (= (type $generated@@557) $generated@@66)) (= (type $generated@@558) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@558) (and ($generated@@139 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@66) ($generated@@76 $generated@@556 ($generated@@140 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@76 $generated@@556 ($generated@@140 $generated@@557 $generated@@559) $generated@@558))
))))) ($generated@@243 ($generated@@148 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@243 ($generated@@148 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@141) (= (type $generated@@561) $generated@@66)) (= (type $generated@@562) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@562) (and ($generated@@139 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@66) ($generated@@76 $generated@@560 ($generated@@140 $generated@@563 $generated@@561) $generated@@562))
 :pattern ( ($generated@@76 $generated@@560 ($generated@@140 $generated@@563 $generated@@561) $generated@@562))
))))) ($generated@@243 ($generated@@149 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@243 ($generated@@149 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@150) (= (type $generated@@565) $generated@@150)) (= ($generated@@216 ($generated@@238 $generated@@564) ($generated@@238 $generated@@565)) ($generated@@238 ($generated@@216 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@216 ($generated@@238 $generated@@564) ($generated@@238 $generated@@565)))
)))
(assert (forall (($generated@@566 Int) ) (! (= ($generated@@274 ($generated@@8 ($generated@@236 $generated@@566))) ($generated@@238 ($generated@@274 ($generated@@8 $generated@@566))))
 :pattern ( ($generated@@274 ($generated@@8 ($generated@@236 $generated@@566))))
)))
(assert (forall (($generated@@567 T@U) ) (! (= ($generated@@274 ($generated@@238 $generated@@567)) ($generated@@238 ($generated@@274 $generated@@567)))
 :pattern ( ($generated@@274 ($generated@@238 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@258 (type $generated@@568))))
 (=> (and (= (type $generated@@568) ($generated@@257 $generated@@569)) (= ($generated@@256 $generated@@568) 0)) (= $generated@@568 ($generated@@255 $generated@@569))))
 :pattern ( ($generated@@256 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@571)))
 (=> (and (and (= (type $generated@@570) ($generated@@78 $generated@@573 $generated@@2)) (= (type $generated@@572) $generated@@2)) (<= 0 ($generated $generated@@572))) (= ($generated@@279 ($generated@@84 $generated@@570 $generated@@571 $generated@@572)) (+ (- ($generated@@279 $generated@@570) ($generated ($generated@@83 $generated@@570 $generated@@571))) ($generated $generated@@572)))))
 :pattern ( ($generated@@279 ($generated@@84 $generated@@570 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@575) $generated@@2)) ($generated@@76 $generated@@575 $generated@@46 $generated@@574))
 :pattern ( ($generated@@76 $generated@@575 $generated@@46 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@577) $generated@@3)) ($generated@@76 $generated@@577 $generated@@47 $generated@@576))
 :pattern ( ($generated@@76 $generated@@577 $generated@@47 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@579) $generated@@4)) ($generated@@76 $generated@@579 $generated@@44 $generated@@578))
 :pattern ( ($generated@@76 $generated@@579 $generated@@44 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@581) $generated@@429)) ($generated@@76 $generated@@581 $generated@@45 $generated@@580))
 :pattern ( ($generated@@76 $generated@@581 $generated@@45 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@583) $generated@@150)) ($generated@@76 $generated@@583 $generated@@48 $generated@@582))
 :pattern ( ($generated@@76 $generated@@583 $generated@@48 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@257 $generated@@150)) (= (type $generated@@585) $generated@@66)) (= ($generated@@137 $generated@@584 ($generated@@476 $generated@@585)) (forall (($generated@@586 Int) ) (!  (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@256 $generated@@584))) ($generated@@217 ($generated@@477 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@477 $generated@@584 $generated@@586))
))))
 :pattern ( ($generated@@137 $generated@@584 ($generated@@476 $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 Int) ) (!  (=> (= (type $generated@@588) ($generated@@257 $generated@@150)) (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@256 $generated@@588))) (< ($generated@@515 ($generated@@324 $generated@@141 ($generated@@477 $generated@@588 $generated@@589))) ($generated@@587 $generated@@588))))
 :pattern ( ($generated@@515 ($generated@@324 $generated@@141 ($generated@@477 $generated@@588 $generated@@589))))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@287 $generated@@150 $generated@@150)) (= (type $generated@@591) $generated@@66)) (= (type $generated@@592) $generated@@66)) ($generated@@137 $generated@@590 ($generated@@389 $generated@@591 $generated@@592))) (and (and ($generated@@137 ($generated@@285 $generated@@590) ($generated@@226 $generated@@591)) ($generated@@137 ($generated@@332 $generated@@590) ($generated@@226 $generated@@592))) ($generated@@137 ($generated@@363 $generated@@590) ($generated@@226 ($generated@@140 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@137 $generated@@590 ($generated@@389 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@594) $generated@@66)) (= (type $generated@@595) $generated@@66)) ($generated@@137 $generated@@593 ($generated@@397 $generated@@594 $generated@@595))) (and (and ($generated@@137 ($generated@@303 $generated@@593) ($generated@@231 $generated@@594)) ($generated@@137 ($generated@@343 $generated@@593) ($generated@@231 $generated@@595))) ($generated@@137 ($generated@@371 $generated@@593) ($generated@@231 ($generated@@140 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@137 $generated@@593 ($generated@@397 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@2) ($generated@@137 $generated@@596 $generated@@46))
 :pattern ( ($generated@@137 $generated@@596 $generated@@46))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@3) ($generated@@137 $generated@@597 $generated@@47))
 :pattern ( ($generated@@137 $generated@@597 $generated@@47))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@4) ($generated@@137 $generated@@598 $generated@@44))
 :pattern ( ($generated@@137 $generated@@598 $generated@@44))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@429) ($generated@@137 $generated@@599 $generated@@45))
 :pattern ( ($generated@@137 $generated@@599 $generated@@45))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@150) ($generated@@137 $generated@@600 $generated@@48))
 :pattern ( ($generated@@137 $generated@@600 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 (T@U) Bool)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@603) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@605) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@607) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@608) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@609) $generated@@79)) (= (type $generated@@610) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@611  (=> (= (ControlFlow 0 2) (- 0 1)) (= (= ($generated@@533 ($generated@@264 ($generated@@265 ($generated@@265 $generated@@472)) $generated@@601) ($generated@@236 2)) ($generated@@236 0)) (= ($generated@@533 $generated@@601 ($generated@@236 3)) ($generated@@236 0))))))
(let (($generated@@612  (=> (<= 2 $generated@@601) (and (=> (= (ControlFlow 0 4) (- 0 10)) ($generated@@137 ($generated@@8 (- $generated@@601 2)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@601 2)) $generated@@134) (=> (= $generated@@602 (- $generated@@601 2)) (and (=> (= (ControlFlow 0 4) (- 0 9)) (or (<= 0 $generated@@601) (= $generated@@602 $generated@@601))) (=> (or (<= 0 $generated@@601) (= $generated@@602 $generated@@601)) (and (=> (= (ControlFlow 0 4) (- 0 8)) (< $generated@@602 $generated@@601)) (=> (< $generated@@602 $generated@@601) (=> (and (and (and ($generated@@242 $generated@@603) ($generated@@604 $generated@@603)) ($generated@@267 $generated@@602)) (and (= (= ($generated@@533 ($generated@@264 ($generated@@265 ($generated@@265 $generated@@472)) $generated@@602) ($generated@@236 2)) ($generated@@236 0)) (= ($generated@@533 $generated@@602 ($generated@@236 3)) ($generated@@236 0))) (= $generated@@605 $generated@@603))) (and (=> (= (ControlFlow 0 4) (- 0 7)) ($generated@@137 ($generated@@8 (- $generated@@601 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@601 1)) $generated@@134) (=> (= $generated@@606 (- $generated@@601 1)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (<= 0 $generated@@601) (= $generated@@606 $generated@@601))) (=> (or (<= 0 $generated@@601) (= $generated@@606 $generated@@601)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (< $generated@@606 $generated@@601)) (=> (< $generated@@606 $generated@@601) (=> (and ($generated@@242 $generated@@607) ($generated@@604 $generated@@607)) (=> (and (and ($generated@@267 $generated@@606) (= (= ($generated@@533 ($generated@@264 ($generated@@265 ($generated@@265 $generated@@472)) $generated@@606) ($generated@@236 2)) ($generated@@236 0)) (= ($generated@@533 $generated@@606 ($generated@@236 3)) ($generated@@236 0)))) (and (= $generated@@603 $generated@@607) (= (ControlFlow 0 4) 2))) $generated@@611))))))))))))))))))))
(let (($generated@@613  (=> (and (< $generated@@601 2) (= (ControlFlow 0 3) 2)) $generated@@611)))
(let (($generated@@614  (=> (= $generated@@608 ($generated@@161 $generated@@609 $generated@@610 $generated@@60 false)) (=> (and (and ($generated@@242 $generated@@605) ($generated@@604 $generated@@605)) (and (= $generated@@610 $generated@@605) (forall (($generated@@615 Int) )  (=> (and (and (<= ($generated@@236 0) $generated@@615) ($generated@@0 ($generated@@238 ($generated@@11 true)))) (and (<= 0 $generated@@615) (< $generated@@615 $generated@@601))) (= (= ($generated@@533 ($generated@@264 ($generated@@265 $generated@@472) $generated@@615) ($generated@@236 2)) ($generated@@236 0)) (= ($generated@@533 $generated@@615 ($generated@@236 3)) ($generated@@236 0))))))) (and (=> (= (ControlFlow 0 11) 3) $generated@@613) (=> (= (ControlFlow 0 11) 4) $generated@@612))))))
(let (($generated@@616  (=> (and (and (and ($generated@@242 $generated@@610) ($generated@@604 $generated@@610)) (<= ($generated@@236 0) $generated@@601)) (and (= 2 $generated@@263) (= (ControlFlow 0 12) 11))) $generated@@614)))
$generated@@616))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@255 (T@T) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@263 () Int)
(declare-fun $generated@@264 (T@U Int) Int)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@266 () T@T)
(declare-fun $generated@@267 (Int) Bool)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@324 (T@T T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@389 (T@U T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@T) T@U)
(declare-fun $generated@@429 () T@T)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@472 () T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@533 (Int Int) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@587 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@141)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@66) (= (type $generated@@221) $generated@@66)) (= (type $generated@@222) $generated@@150)) (= (type $generated@@223) $generated@@150)) (= ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221))  (and ($generated@@217 $generated@@222 $generated@@220) ($generated@@217 $generated@@223 $generated@@221))))
 :pattern ( ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@141) (= (type $generated@@225) $generated@@141)) (= ($generated@@147 $generated@@224 $generated@@225) (= $generated@@224 $generated@@225)))
 :pattern ( ($generated@@147 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@66)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@229) $generated@@66)) (= ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@150) ($generated@@0 ($generated@@83 $generated@@228 $generated@@230))) ($generated@@217 $generated@@230 $generated@@229))
 :pattern ( ($generated@@83 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@66)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@150) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@217 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@236 $generated@@237) $generated@@237)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@66) (= (type $generated@@245) $generated@@66)) (= (type $generated@@246) $generated@@150)) (= (type $generated@@247) $generated@@150)) (= (type $generated@@248) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@242 $generated@@248)) (= ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@141) (= ($generated@@139 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@141) ($generated@@139 $generated@@252)) (exists (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (and (and (= (type $generated@@253) $generated@@150) (= (type $generated@@254) $generated@@150)) (= $generated@@252 ($generated@@216 $generated@@253 $generated@@254)))
 :no-pattern (type $generated@@253)
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
)))
 :pattern ( ($generated@@139 $generated@@252))
)))
(assert  (and (and (forall (($generated@@259 T@T) ) (= ($generated@@1 ($generated@@257 $generated@@259)) 17)) (forall (($generated@@260 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
))) (forall (($generated@@261 T@T) ) (! (= (type ($generated@@255 $generated@@261)) ($generated@@257 $generated@@261))
 :pattern ( ($generated@@255 $generated@@261))
))))
(assert (forall (($generated@@262 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@262)) 0)
 :pattern ( ($generated@@255 $generated@@262))
)))
(assert  (and (= ($generated@@1 $generated@@266) 18) (forall (($generated@@268 T@U) ) (! (= (type ($generated@@265 $generated@@268)) $generated@@266)
 :pattern ( ($generated@@265 $generated@@268))
))))
(assert  (=> (<= 1 $generated@@263) (forall (($generated@@269 T@U) ($generated@@270 Int) ) (!  (=> (and (= (type $generated@@269) $generated@@266) (or ($generated@@267 $generated@@270) (and (not (= 1 $generated@@263)) (<= ($generated@@236 0) $generated@@270)))) (and (=> (<= 2 $generated@@270) (and ($generated@@267 (- $generated@@270 2)) ($generated@@267 (- $generated@@270 1)))) (= ($generated@@264 ($generated@@265 $generated@@269) $generated@@270) (ite (< $generated@@270 2) $generated@@270 (+ ($generated@@264 $generated@@269 (- $generated@@270 2)) ($generated@@264 $generated@@269 (- $generated@@270 1)))))))
 :pattern ( ($generated@@264 ($generated@@265 $generated@@269) $generated@@270))
))))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@2) (= ($generated@@137 $generated@@271 $generated@@134) (<= ($generated@@236 0) ($generated $generated@@271))))
 :pattern ( ($generated@@137 $generated@@271 $generated@@134))
)))
(assert  (=> (<= 1 $generated@@263) (forall (($generated@@272 T@U) ($generated@@273 Int) ) (!  (=> (and (= (type $generated@@272) $generated@@266) (or ($generated@@267 $generated@@273) (and (not (= 1 $generated@@263)) (<= ($generated@@236 0) $generated@@273)))) (<= ($generated@@236 0) ($generated@@264 $generated@@272 $generated@@273)))
 :pattern ( ($generated@@264 $generated@@272 $generated@@273))
))))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@150)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@66) (= (type $generated@@278) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@243 ($generated@@274 $generated@@276) $generated@@277 $generated@@278) ($generated@@76 $generated@@276 $generated@@277 $generated@@278)))
 :pattern ( ($generated@@243 ($generated@@274 $generated@@276) $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@281 T@T) ) (! (= (type ($generated@@280 $generated@@281)) ($generated@@78 $generated@@281 $generated@@2))
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@81 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@78 $generated@@283 $generated@@2)) (and (= (= ($generated@@279 $generated@@282) 0) (= $generated@@282 ($generated@@280 $generated@@283))) (=> (not (= ($generated@@279 $generated@@282) 0)) (exists (($generated@@284 T@U) ) (!  (and (= (type $generated@@284) $generated@@283) (< 0 ($generated ($generated@@83 $generated@@282 $generated@@284))))
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
))))))
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 19)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@78 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@83 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@83 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 20)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@78 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@83 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@83 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@81 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@78 $generated@@322 $generated@@2)) (= ($generated@@156 $generated@@321) (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@322) (and (<= 0 ($generated ($generated@@83 $generated@@321 $generated@@323))) (<= ($generated ($generated@@83 $generated@@321 $generated@@323)) ($generated@@279 $generated@@321))))
 :pattern ( ($generated@@83 $generated@@321 $generated@@323))
)))))
 :pattern ( ($generated@@156 $generated@@321))
)))
(assert (forall (($generated@@325 T@T) ($generated@@326 T@U) ) (! (= (type ($generated@@324 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@324 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@150) ($generated@@217 $generated@@327 $generated@@134)) (and (= ($generated@@274 ($generated@@324 $generated@@2 $generated@@327)) $generated@@327) ($generated@@137 ($generated@@324 $generated@@2 $generated@@327) $generated@@134)))
 :pattern ( ($generated@@217 $generated@@327 $generated@@134))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@289 (type $generated@@328))))
(let (($generated@@330 ($generated@@288 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@287 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@286 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) ($generated@@0 ($generated@@83 ($generated@@285 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@285 $generated@@328))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@289 (type $generated@@333))))
(= (type ($generated@@332 $generated@@333)) ($generated@@78 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@289 (type $generated@@335))))
(let (($generated@@337 ($generated@@288 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@287 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@286 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@336) ($generated@@0 ($generated@@83 ($generated@@332 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@307 (type $generated@@339))))
(let (($generated@@341 ($generated@@306 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@305 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@304 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@303 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@307 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@78 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@307 (type $generated@@346))))
(let (($generated@@348 ($generated@@306 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@305 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@304 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@83 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@351) $generated@@66)) (= ($generated@@137 $generated@@350 ($generated@@155 $generated@@351)) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@350 $generated@@352)))) ($generated@@217 $generated@@352 $generated@@351))
 :pattern ( ($generated@@83 $generated@@350 $generated@@352))
))))
 :pattern ( ($generated@@137 $generated@@350 ($generated@@155 $generated@@351)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@354) $generated@@66)) (= (type $generated@@355) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@353 ($generated@@226 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@150) ($generated@@0 ($generated@@83 $generated@@353 $generated@@356))) ($generated@@243 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@83 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@76 $generated@@353 ($generated@@226 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@358) $generated@@66)) (= (type $generated@@359) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@357 ($generated@@231 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@150) ($generated@@0 ($generated@@83 $generated@@357 $generated@@360))) ($generated@@243 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@83 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@76 $generated@@357 ($generated@@231 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(= ($generated ($generated@@83 ($generated@@280 $generated@@362) $generated@@361)) 0))
 :pattern ( (let (($generated@@362 (type $generated@@361)))
($generated@@83 ($generated@@280 $generated@@362) $generated@@361)))
)))
(assert  (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@363 $generated@@365))
)) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@289 (type $generated@@366))))
(let (($generated@@368 ($generated@@288 (type $generated@@366))))
(= (type ($generated@@364 $generated@@366)) ($generated@@78 $generated@@368 $generated@@367))))
 :pattern ( ($generated@@364 $generated@@366))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@287 $generated@@150 $generated@@150)) (= (type $generated@@370) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@363 $generated@@369) $generated@@370))  (and ($generated@@0 ($generated@@83 ($generated@@285 $generated@@369) ($generated@@148 ($generated@@324 $generated@@141 $generated@@370)))) (= ($generated@@83 ($generated@@364 $generated@@369) ($generated@@148 ($generated@@324 $generated@@141 $generated@@370))) ($generated@@149 ($generated@@324 $generated@@141 $generated@@370))))))
 :pattern ( ($generated@@83 ($generated@@363 $generated@@369) $generated@@370))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@307 (type $generated@@374))))
(let (($generated@@376 ($generated@@306 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@78 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@378) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@83 ($generated@@303 $generated@@377) ($generated@@148 ($generated@@324 $generated@@141 $generated@@378)))) (= ($generated@@83 ($generated@@372 $generated@@377) ($generated@@148 ($generated@@324 $generated@@141 $generated@@378))) ($generated@@149 ($generated@@324 $generated@@141 $generated@@378))))))
 :pattern ( ($generated@@83 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@288 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@287 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@83 ($generated@@332 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@83 ($generated@@285 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@83 ($generated@@364 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@83 ($generated@@285 $generated@@379) $generated@@383))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@83 ($generated@@332 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@306 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@305 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@83 ($generated@@343 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@83 ($generated@@303 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@83 ($generated@@372 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@384) $generated@@388))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@83 ($generated@@343 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@390 $generated@@391)) $generated@@66)
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (and (= (type $generated@@392) ($generated@@287 $generated@@150 $generated@@150)) (= (type $generated@@393) $generated@@66)) (= (type $generated@@394) $generated@@66)) (= (type $generated@@395) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@285 $generated@@392) $generated@@396))) (and ($generated@@243 ($generated@@83 ($generated@@364 $generated@@392) $generated@@396) $generated@@394 $generated@@395) ($generated@@243 $generated@@396 $generated@@393 $generated@@395)))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@392) $generated@@396))
 :pattern ( ($generated@@83 ($generated@@285 $generated@@392) $generated@@396))
))))
 :pattern ( ($generated@@76 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@66)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@401) $generated@@66)) (= (type $generated@@402) $generated@@66)) (= (type $generated@@403) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@400) $generated@@404))) (and ($generated@@243 ($generated@@83 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@243 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@76 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@T) ) (! (= (type ($generated@@405 $generated@@406)) ($generated@@78 $generated@@406 $generated@@4))
 :pattern ( ($generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@307 (type $generated@@407))))
(let (($generated@@409 ($generated@@306 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@305 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@304 $generated@@409 $generated@@408)) (= ($generated@@303 $generated@@407) ($generated@@405 $generated@@409))))))
 :pattern ( ($generated@@303 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@307 (type $generated@@410))))
(let (($generated@@412 ($generated@@306 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@305 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@304 $generated@@412 $generated@@411)) (= ($generated@@343 $generated@@410) ($generated@@405 $generated@@411))))))
 :pattern ( ($generated@@343 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@307 (type $generated@@413))))
(let (($generated@@415 ($generated@@306 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@305 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@304 $generated@@415 $generated@@414)) (= ($generated@@371 $generated@@413) ($generated@@405 $generated@@150))))))
 :pattern ( ($generated@@371 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@289 (type $generated@@416))))
(let (($generated@@418 ($generated@@288 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@287 $generated@@418 $generated@@417)) (or (= $generated@@416 ($generated@@286 $generated@@418 $generated@@417)) (exists (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (and (and (= (type $generated@@419) $generated@@150) (= (type $generated@@420) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@363 $generated@@416) ($generated@@274 ($generated@@216 $generated@@419 $generated@@420)))))
 :no-pattern (type $generated@@419)
 :no-pattern (type $generated@@420)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
))))))
 :pattern ( ($generated@@363 $generated@@416))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@307 (type $generated@@421))))
(let (($generated@@423 ($generated@@306 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@305 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@304 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@150) (= (type $generated@@425) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@371 $generated@@421) ($generated@@274 ($generated@@216 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@371 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@150) ($generated@@217 $generated@@426 $generated@@46)) (and (= ($generated@@274 ($generated@@324 $generated@@2 $generated@@426)) $generated@@426) ($generated@@137 ($generated@@324 $generated@@2 $generated@@426) $generated@@46)))
 :pattern ( ($generated@@217 $generated@@426 $generated@@46))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@150) ($generated@@217 $generated@@427 $generated@@47)) (and (= ($generated@@274 ($generated@@324 $generated@@3 $generated@@427)) $generated@@427) ($generated@@137 ($generated@@324 $generated@@3 $generated@@427) $generated@@47)))
 :pattern ( ($generated@@217 $generated@@427 $generated@@47))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@150) ($generated@@217 $generated@@428 $generated@@44)) (and (= ($generated@@274 ($generated@@324 $generated@@4 $generated@@428)) $generated@@428) ($generated@@137 ($generated@@324 $generated@@4 $generated@@428) $generated@@44)))
 :pattern ( ($generated@@217 $generated@@428 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@429) 21))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@150) ($generated@@217 $generated@@430 $generated@@45)) (and (= ($generated@@274 ($generated@@324 $generated@@429 $generated@@430)) $generated@@430) ($generated@@137 ($generated@@324 $generated@@429 $generated@@430) $generated@@45)))
 :pattern ( ($generated@@217 $generated@@430 $generated@@45))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (= (type $generated@@432) $generated@@66) (= ($generated@@217 ($generated@@274 $generated@@431) $generated@@432) ($generated@@137 $generated@@431 $generated@@432)))
 :pattern ( ($generated@@217 ($generated@@274 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@81 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@78 $generated@@434 $generated@@2)) (<= 0 ($generated@@279 $generated@@433))))
 :pattern ( ($generated@@279 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@258 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@257 $generated@@436)) (<= 0 ($generated@@256 $generated@@435))))
 :pattern ( ($generated@@256 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@66)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@66) (= (type $generated@@440) $generated@@66)) (= ($generated@@437 ($generated@@389 $generated@@439 $generated@@440)) $generated@@439))
 :pattern ( ($generated@@389 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@66)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@66) (= (type $generated@@444) $generated@@66)) (= ($generated@@441 ($generated@@389 $generated@@443 $generated@@444)) $generated@@444))
 :pattern ( ($generated@@389 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@66) (= (type $generated@@446) $generated@@66)) (= ($generated@@74 ($generated@@389 $generated@@445 $generated@@446)) $generated@@58))
 :pattern ( ($generated@@389 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@66)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@66) (= (type $generated@@450) $generated@@66)) (= ($generated@@447 ($generated@@397 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@397 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@451 ($generated@@397 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@397 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@66) (= (type $generated@@456) $generated@@66)) (= ($generated@@74 ($generated@@397 $generated@@455 $generated@@456)) $generated@@59))
 :pattern ( ($generated@@397 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@150) (= (type $generated@@458) $generated@@150)) (= ($generated@@249 ($generated@@216 $generated@@457 $generated@@458)) $generated@@62))
 :pattern ( ($generated@@216 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@66)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@459 ($generated@@140 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@140 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@140 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@140 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@150) (= (type $generated@@468) $generated@@150)) (= ($generated@@148 ($generated@@216 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@216 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@150) (= (type $generated@@470) $generated@@150)) (= ($generated@@149 ($generated@@216 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@216 $generated@@469 $generated@@470))
)))
(assert  (and (forall (($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@473)) $generated@@266)
 :pattern ( ($generated@@471 $generated@@473))
)) (= (type $generated@@472) $generated@@266)))
(assert (forall (($generated@@474 T@U) ($generated@@475 Int) ) (!  (=> (= (type $generated@@474) $generated@@266) (= ($generated@@264 $generated@@474 $generated@@475) ($generated@@264 $generated@@472 $generated@@475)))
 :pattern ( ($generated@@264 ($generated@@471 $generated@@474) $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@258 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@257 $generated@@150)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@256 $generated@@482))) ($generated@@243 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@77 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@77 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@488 ($generated@@226 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@226 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@74 ($generated@@226 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@226 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@231 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@231 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@231 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@231 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@155 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@155 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@324 $generated@@505 ($generated@@274 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@274 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@287 $generated@@150 $generated@@150)) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) $generated@@66)) (= ($generated@@137 $generated@@506 ($generated@@389 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@285 $generated@@506) $generated@@509))) (and ($generated@@217 ($generated@@83 ($generated@@364 $generated@@506) $generated@@509) $generated@@508) ($generated@@217 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@506) $generated@@509))
 :pattern ( ($generated@@83 ($generated@@285 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@137 $generated@@506 ($generated@@389 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@137 $generated@@510 ($generated@@397 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@510) $generated@@513))) (and ($generated@@217 ($generated@@83 ($generated@@372 $generated@@510) $generated@@513) $generated@@512) ($generated@@217 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@137 $generated@@510 ($generated@@397 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@150) (= (type $generated@@517) $generated@@150)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@216 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@216 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@150) (= (type $generated@@519) $generated@@150)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@216 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@216 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 Int) ) (!  (=> (= (type $generated@@520) $generated@@266) (= ($generated@@264 ($generated@@265 $generated@@520) $generated@@521) ($generated@@264 $generated@@520 $generated@@521)))
 :pattern ( ($generated@@264 ($generated@@265 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@150) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) ($generated@@217 $generated@@522 ($generated@@389 $generated@@523 $generated@@524))) (and (= ($generated@@274 ($generated@@324 ($generated@@287 $generated@@150 $generated@@150) $generated@@522)) $generated@@522) ($generated@@137 ($generated@@324 ($generated@@287 $generated@@150 $generated@@150) $generated@@522) ($generated@@389 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@217 $generated@@522 ($generated@@389 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@150) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@66)) ($generated@@217 $generated@@525 ($generated@@397 $generated@@526 $generated@@527))) (and (= ($generated@@274 ($generated@@324 ($generated@@305 $generated@@150 $generated@@150) $generated@@525)) $generated@@525) ($generated@@137 ($generated@@324 ($generated@@305 $generated@@150 $generated@@150) $generated@@525) ($generated@@397 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@217 $generated@@525 ($generated@@397 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@66) (= (type $generated@@529) $generated@@66)) (= (type $generated@@530) $generated@@150)) ($generated@@217 $generated@@530 ($generated@@140 $generated@@528 $generated@@529))) (and (= ($generated@@274 ($generated@@324 $generated@@141 $generated@@530)) $generated@@530) ($generated@@137 ($generated@@324 $generated@@141 $generated@@530) ($generated@@140 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@217 $generated@@530 ($generated@@140 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
 (not ($generated@@0 ($generated@@83 ($generated@@405 $generated@@532) $generated@@531))))
 :pattern ( (let (($generated@@532 (type $generated@@531)))
($generated@@83 ($generated@@405 $generated@@532) $generated@@531)))
)))
(assert (forall (($generated@@534 Int) ($generated@@535 Int) ) (! (= ($generated@@533 $generated@@534 $generated@@535) (mod $generated@@534 $generated@@535))
 :pattern ( ($generated@@533 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@71)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@66) (= (type $generated@@539) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@538 $generated@@539)) $generated@@63) (= ($generated@@536 ($generated@@140 $generated@@538 $generated@@539)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@141) (= ($generated@@514 ($generated@@274 $generated@@540)) ($generated@@515 $generated@@540)))
 :pattern ( ($generated@@514 ($generated@@274 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@150) ($generated@@217 $generated@@541 ($generated@@77 0))) (and (= ($generated@@274 ($generated@@324 $generated@@2 $generated@@541)) $generated@@541) ($generated@@137 ($generated@@324 ($generated@@78 $generated@@150 $generated@@4) $generated@@541) ($generated@@77 0))))
 :pattern ( ($generated@@217 $generated@@541 ($generated@@77 0)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@150) (= (type $generated@@543) $generated@@66)) ($generated@@217 $generated@@542 ($generated@@226 $generated@@543))) (and (= ($generated@@274 ($generated@@324 ($generated@@78 $generated@@150 $generated@@4) $generated@@542)) $generated@@542) ($generated@@137 ($generated@@324 ($generated@@78 $generated@@150 $generated@@4) $generated@@542) ($generated@@226 $generated@@543))))
 :pattern ( ($generated@@217 $generated@@542 ($generated@@226 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@150) (= (type $generated@@545) $generated@@66)) ($generated@@217 $generated@@544 ($generated@@231 $generated@@545))) (and (= ($generated@@274 ($generated@@324 ($generated@@78 $generated@@150 $generated@@4) $generated@@544)) $generated@@544) ($generated@@137 ($generated@@324 ($generated@@78 $generated@@150 $generated@@4) $generated@@544) ($generated@@231 $generated@@545))))
 :pattern ( ($generated@@217 $generated@@544 ($generated@@231 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@150) (= (type $generated@@547) $generated@@66)) ($generated@@217 $generated@@546 ($generated@@155 $generated@@547))) (and (= ($generated@@274 ($generated@@324 ($generated@@78 $generated@@150 $generated@@2) $generated@@546)) $generated@@546) ($generated@@137 ($generated@@324 ($generated@@78 $generated@@150 $generated@@2) $generated@@546) ($generated@@155 $generated@@547))))
 :pattern ( ($generated@@217 $generated@@546 ($generated@@155 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@150) (= (type $generated@@549) $generated@@66)) ($generated@@217 $generated@@548 ($generated@@476 $generated@@549))) (and (= ($generated@@274 ($generated@@324 ($generated@@257 $generated@@150) $generated@@548)) $generated@@548) ($generated@@137 ($generated@@324 ($generated@@257 $generated@@150) $generated@@548) ($generated@@476 $generated@@549))))
 :pattern ( ($generated@@217 $generated@@548 ($generated@@476 $generated@@549)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@536 $generated@@134) $generated@@64))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@551) $generated@@66)) (= (type $generated@@552) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@550 ($generated@@155 $generated@@551) $generated@@552) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@550 $generated@@553)))) ($generated@@243 $generated@@553 $generated@@551 $generated@@552))
 :pattern ( ($generated@@83 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@76 $generated@@550 ($generated@@155 $generated@@551) $generated@@552))
)))
(assert  (=> (<= 1 $generated@@263) (forall (($generated@@554 T@U) ($generated@@555 Int) ) (!  (=> (and (= (type $generated@@554) $generated@@266) (or ($generated@@267 ($generated@@236 $generated@@555)) (and (not (= 1 $generated@@263)) (<= ($generated@@236 0) $generated@@555)))) (and (=> (not ($generated@@0 ($generated@@238 ($generated@@11 (< $generated@@555 2))))) (and ($generated@@267 ($generated@@236 (- $generated@@555 2))) ($generated@@267 ($generated@@236 (- $generated@@555 1))))) (= ($generated@@264 ($generated@@265 $generated@@554) ($generated@@236 $generated@@555)) (ite (< $generated@@555 2) $generated@@555 (+ ($generated@@264 ($generated@@265 $generated@@554) ($generated@@236 (- $generated@@555 2))) ($generated@@264 ($generated@@265 $generated@@554) ($generated@@236 (- $generated@@555 1))))))))
 :weight 3
 :pattern ( ($generated@@264 ($generated@@265 $generated@@554) ($generated@@236 $generated@@555)))
))))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@141) (= (type $generated@@557) $generated@@66)) (= (type $generated@@558) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@558) (and ($generated@@139 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@66) ($generated@@76 $generated@@556 ($generated@@140 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@76 $generated@@556 ($generated@@140 $generated@@557 $generated@@559) $generated@@558))
))))) ($generated@@243 ($generated@@148 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@243 ($generated@@148 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@141) (= (type $generated@@561) $generated@@66)) (= (type $generated@@562) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@562) (and ($generated@@139 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@66) ($generated@@76 $generated@@560 ($generated@@140 $generated@@563 $generated@@561) $generated@@562))
 :pattern ( ($generated@@76 $generated@@560 ($generated@@140 $generated@@563 $generated@@561) $generated@@562))
))))) ($generated@@243 ($generated@@149 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@243 ($generated@@149 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@150) (= (type $generated@@565) $generated@@150)) (= ($generated@@216 ($generated@@238 $generated@@564) ($generated@@238 $generated@@565)) ($generated@@238 ($generated@@216 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@216 ($generated@@238 $generated@@564) ($generated@@238 $generated@@565)))
)))
(assert (forall (($generated@@566 Int) ) (! (= ($generated@@274 ($generated@@8 ($generated@@236 $generated@@566))) ($generated@@238 ($generated@@274 ($generated@@8 $generated@@566))))
 :pattern ( ($generated@@274 ($generated@@8 ($generated@@236 $generated@@566))))
)))
(assert (forall (($generated@@567 T@U) ) (! (= ($generated@@274 ($generated@@238 $generated@@567)) ($generated@@238 ($generated@@274 $generated@@567)))
 :pattern ( ($generated@@274 ($generated@@238 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@258 (type $generated@@568))))
 (=> (and (= (type $generated@@568) ($generated@@257 $generated@@569)) (= ($generated@@256 $generated@@568) 0)) (= $generated@@568 ($generated@@255 $generated@@569))))
 :pattern ( ($generated@@256 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@571)))
 (=> (and (and (= (type $generated@@570) ($generated@@78 $generated@@573 $generated@@2)) (= (type $generated@@572) $generated@@2)) (<= 0 ($generated $generated@@572))) (= ($generated@@279 ($generated@@84 $generated@@570 $generated@@571 $generated@@572)) (+ (- ($generated@@279 $generated@@570) ($generated ($generated@@83 $generated@@570 $generated@@571))) ($generated $generated@@572)))))
 :pattern ( ($generated@@279 ($generated@@84 $generated@@570 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@575) $generated@@2)) ($generated@@76 $generated@@575 $generated@@46 $generated@@574))
 :pattern ( ($generated@@76 $generated@@575 $generated@@46 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@577) $generated@@3)) ($generated@@76 $generated@@577 $generated@@47 $generated@@576))
 :pattern ( ($generated@@76 $generated@@577 $generated@@47 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@579) $generated@@4)) ($generated@@76 $generated@@579 $generated@@44 $generated@@578))
 :pattern ( ($generated@@76 $generated@@579 $generated@@44 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@581) $generated@@429)) ($generated@@76 $generated@@581 $generated@@45 $generated@@580))
 :pattern ( ($generated@@76 $generated@@581 $generated@@45 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@583) $generated@@150)) ($generated@@76 $generated@@583 $generated@@48 $generated@@582))
 :pattern ( ($generated@@76 $generated@@583 $generated@@48 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@257 $generated@@150)) (= (type $generated@@585) $generated@@66)) (= ($generated@@137 $generated@@584 ($generated@@476 $generated@@585)) (forall (($generated@@586 Int) ) (!  (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@256 $generated@@584))) ($generated@@217 ($generated@@477 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@477 $generated@@584 $generated@@586))
))))
 :pattern ( ($generated@@137 $generated@@584 ($generated@@476 $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 Int) ) (!  (=> (= (type $generated@@588) ($generated@@257 $generated@@150)) (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@256 $generated@@588))) (< ($generated@@515 ($generated@@324 $generated@@141 ($generated@@477 $generated@@588 $generated@@589))) ($generated@@587 $generated@@588))))
 :pattern ( ($generated@@515 ($generated@@324 $generated@@141 ($generated@@477 $generated@@588 $generated@@589))))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@287 $generated@@150 $generated@@150)) (= (type $generated@@591) $generated@@66)) (= (type $generated@@592) $generated@@66)) ($generated@@137 $generated@@590 ($generated@@389 $generated@@591 $generated@@592))) (and (and ($generated@@137 ($generated@@285 $generated@@590) ($generated@@226 $generated@@591)) ($generated@@137 ($generated@@332 $generated@@590) ($generated@@226 $generated@@592))) ($generated@@137 ($generated@@363 $generated@@590) ($generated@@226 ($generated@@140 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@137 $generated@@590 ($generated@@389 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@594) $generated@@66)) (= (type $generated@@595) $generated@@66)) ($generated@@137 $generated@@593 ($generated@@397 $generated@@594 $generated@@595))) (and (and ($generated@@137 ($generated@@303 $generated@@593) ($generated@@231 $generated@@594)) ($generated@@137 ($generated@@343 $generated@@593) ($generated@@231 $generated@@595))) ($generated@@137 ($generated@@371 $generated@@593) ($generated@@231 ($generated@@140 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@137 $generated@@593 ($generated@@397 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@2) ($generated@@137 $generated@@596 $generated@@46))
 :pattern ( ($generated@@137 $generated@@596 $generated@@46))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@3) ($generated@@137 $generated@@597 $generated@@47))
 :pattern ( ($generated@@137 $generated@@597 $generated@@47))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@4) ($generated@@137 $generated@@598 $generated@@44))
 :pattern ( ($generated@@137 $generated@@598 $generated@@44))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@429) ($generated@@137 $generated@@599 $generated@@45))
 :pattern ( ($generated@@137 $generated@@599 $generated@@45))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@150) ($generated@@137 $generated@@600 $generated@@48))
 :pattern ( ($generated@@137 $generated@@600 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 (T@U) Bool)
(declare-fun $generated@@606 () Int)
(assert  (and (and (and (= (type $generated@@601) ($generated@@162 $generated@@79 $generated@@4)) (= (type $generated@@602) $generated@@79)) (= (type $generated@@603) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@604) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@607  (=> (= $generated@@601 ($generated@@161 $generated@@602 $generated@@603 $generated@@60 false)) (=> (and (and (and ($generated@@242 $generated@@604) ($generated@@605 $generated@@604)) (= $generated@@603 $generated@@604)) (and ($generated@@76 ($generated@@8 $generated@@606) $generated@@134 $generated@@604) ($generated@@267 $generated@@606))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= ($generated@@236 2) 0))) (=> (not (= ($generated@@236 2) 0)) (=> (= (ControlFlow 0 2) (- 0 1)) (not (= ($generated@@236 3) 0)))))))))
(let (($generated@@608  (=> (and (and (and ($generated@@242 $generated@@603) ($generated@@605 $generated@@603)) (<= ($generated@@236 0) $generated@@606)) (and (= 2 $generated@@263) (= (ControlFlow 0 4) 2))) $generated@@607)))
$generated@@608)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@255 (T@T) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@263 () Int)
(declare-fun $generated@@264 (T@U Int) Int)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@266 () T@T)
(declare-fun $generated@@267 (Int) Bool)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@324 (T@T T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@389 (T@U T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@T) T@U)
(declare-fun $generated@@429 () T@T)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@472 () T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@533 (Int Int) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@587 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@141)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@66) (= (type $generated@@221) $generated@@66)) (= (type $generated@@222) $generated@@150)) (= (type $generated@@223) $generated@@150)) (= ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221))  (and ($generated@@217 $generated@@222 $generated@@220) ($generated@@217 $generated@@223 $generated@@221))))
 :pattern ( ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@141) (= (type $generated@@225) $generated@@141)) (= ($generated@@147 $generated@@224 $generated@@225) (= $generated@@224 $generated@@225)))
 :pattern ( ($generated@@147 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@66)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@229) $generated@@66)) (= ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@150) ($generated@@0 ($generated@@83 $generated@@228 $generated@@230))) ($generated@@217 $generated@@230 $generated@@229))
 :pattern ( ($generated@@83 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@66)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@150) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@217 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@236 $generated@@237) $generated@@237)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@66) (= (type $generated@@245) $generated@@66)) (= (type $generated@@246) $generated@@150)) (= (type $generated@@247) $generated@@150)) (= (type $generated@@248) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@242 $generated@@248)) (= ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@141) (= ($generated@@139 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@141) ($generated@@139 $generated@@252)) (exists (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (and (and (= (type $generated@@253) $generated@@150) (= (type $generated@@254) $generated@@150)) (= $generated@@252 ($generated@@216 $generated@@253 $generated@@254)))
 :no-pattern (type $generated@@253)
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
)))
 :pattern ( ($generated@@139 $generated@@252))
)))
(assert  (and (and (forall (($generated@@259 T@T) ) (= ($generated@@1 ($generated@@257 $generated@@259)) 17)) (forall (($generated@@260 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
))) (forall (($generated@@261 T@T) ) (! (= (type ($generated@@255 $generated@@261)) ($generated@@257 $generated@@261))
 :pattern ( ($generated@@255 $generated@@261))
))))
(assert (forall (($generated@@262 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@262)) 0)
 :pattern ( ($generated@@255 $generated@@262))
)))
(assert  (and (= ($generated@@1 $generated@@266) 18) (forall (($generated@@268 T@U) ) (! (= (type ($generated@@265 $generated@@268)) $generated@@266)
 :pattern ( ($generated@@265 $generated@@268))
))))
(assert  (=> (<= 1 $generated@@263) (forall (($generated@@269 T@U) ($generated@@270 Int) ) (!  (=> (and (= (type $generated@@269) $generated@@266) (or ($generated@@267 $generated@@270) (and (not (= 1 $generated@@263)) (<= ($generated@@236 0) $generated@@270)))) (and (=> (<= 2 $generated@@270) (and ($generated@@267 (- $generated@@270 2)) ($generated@@267 (- $generated@@270 1)))) (= ($generated@@264 ($generated@@265 $generated@@269) $generated@@270) (ite (< $generated@@270 2) $generated@@270 (+ ($generated@@264 $generated@@269 (- $generated@@270 2)) ($generated@@264 $generated@@269 (- $generated@@270 1)))))))
 :pattern ( ($generated@@264 ($generated@@265 $generated@@269) $generated@@270))
))))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@2) (= ($generated@@137 $generated@@271 $generated@@134) (<= ($generated@@236 0) ($generated $generated@@271))))
 :pattern ( ($generated@@137 $generated@@271 $generated@@134))
)))
(assert  (=> (<= 1 $generated@@263) (forall (($generated@@272 T@U) ($generated@@273 Int) ) (!  (=> (and (= (type $generated@@272) $generated@@266) (or ($generated@@267 $generated@@273) (and (not (= 1 $generated@@263)) (<= ($generated@@236 0) $generated@@273)))) (<= ($generated@@236 0) ($generated@@264 $generated@@272 $generated@@273)))
 :pattern ( ($generated@@264 $generated@@272 $generated@@273))
))))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@150)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@66) (= (type $generated@@278) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@243 ($generated@@274 $generated@@276) $generated@@277 $generated@@278) ($generated@@76 $generated@@276 $generated@@277 $generated@@278)))
 :pattern ( ($generated@@243 ($generated@@274 $generated@@276) $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@281 T@T) ) (! (= (type ($generated@@280 $generated@@281)) ($generated@@78 $generated@@281 $generated@@2))
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@81 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@78 $generated@@283 $generated@@2)) (and (= (= ($generated@@279 $generated@@282) 0) (= $generated@@282 ($generated@@280 $generated@@283))) (=> (not (= ($generated@@279 $generated@@282) 0)) (exists (($generated@@284 T@U) ) (!  (and (= (type $generated@@284) $generated@@283) (< 0 ($generated ($generated@@83 $generated@@282 $generated@@284))))
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
))))))
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 19)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@78 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@83 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@83 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 20)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@78 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@83 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@83 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@81 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@78 $generated@@322 $generated@@2)) (= ($generated@@156 $generated@@321) (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@322) (and (<= 0 ($generated ($generated@@83 $generated@@321 $generated@@323))) (<= ($generated ($generated@@83 $generated@@321 $generated@@323)) ($generated@@279 $generated@@321))))
 :pattern ( ($generated@@83 $generated@@321 $generated@@323))
)))))
 :pattern ( ($generated@@156 $generated@@321))
)))
(assert (forall (($generated@@325 T@T) ($generated@@326 T@U) ) (! (= (type ($generated@@324 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@324 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@150) ($generated@@217 $generated@@327 $generated@@134)) (and (= ($generated@@274 ($generated@@324 $generated@@2 $generated@@327)) $generated@@327) ($generated@@137 ($generated@@324 $generated@@2 $generated@@327) $generated@@134)))
 :pattern ( ($generated@@217 $generated@@327 $generated@@134))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@289 (type $generated@@328))))
(let (($generated@@330 ($generated@@288 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@287 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@286 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) ($generated@@0 ($generated@@83 ($generated@@285 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@285 $generated@@328))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@289 (type $generated@@333))))
(= (type ($generated@@332 $generated@@333)) ($generated@@78 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@289 (type $generated@@335))))
(let (($generated@@337 ($generated@@288 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@287 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@286 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@336) ($generated@@0 ($generated@@83 ($generated@@332 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@307 (type $generated@@339))))
(let (($generated@@341 ($generated@@306 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@305 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@304 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@303 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@307 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@78 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@307 (type $generated@@346))))
(let (($generated@@348 ($generated@@306 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@305 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@304 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@83 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@351) $generated@@66)) (= ($generated@@137 $generated@@350 ($generated@@155 $generated@@351)) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@350 $generated@@352)))) ($generated@@217 $generated@@352 $generated@@351))
 :pattern ( ($generated@@83 $generated@@350 $generated@@352))
))))
 :pattern ( ($generated@@137 $generated@@350 ($generated@@155 $generated@@351)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@354) $generated@@66)) (= (type $generated@@355) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@353 ($generated@@226 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@150) ($generated@@0 ($generated@@83 $generated@@353 $generated@@356))) ($generated@@243 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@83 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@76 $generated@@353 ($generated@@226 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@358) $generated@@66)) (= (type $generated@@359) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@357 ($generated@@231 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@150) ($generated@@0 ($generated@@83 $generated@@357 $generated@@360))) ($generated@@243 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@83 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@76 $generated@@357 ($generated@@231 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(= ($generated ($generated@@83 ($generated@@280 $generated@@362) $generated@@361)) 0))
 :pattern ( (let (($generated@@362 (type $generated@@361)))
($generated@@83 ($generated@@280 $generated@@362) $generated@@361)))
)))
(assert  (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@363 $generated@@365))
)) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@289 (type $generated@@366))))
(let (($generated@@368 ($generated@@288 (type $generated@@366))))
(= (type ($generated@@364 $generated@@366)) ($generated@@78 $generated@@368 $generated@@367))))
 :pattern ( ($generated@@364 $generated@@366))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@287 $generated@@150 $generated@@150)) (= (type $generated@@370) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@363 $generated@@369) $generated@@370))  (and ($generated@@0 ($generated@@83 ($generated@@285 $generated@@369) ($generated@@148 ($generated@@324 $generated@@141 $generated@@370)))) (= ($generated@@83 ($generated@@364 $generated@@369) ($generated@@148 ($generated@@324 $generated@@141 $generated@@370))) ($generated@@149 ($generated@@324 $generated@@141 $generated@@370))))))
 :pattern ( ($generated@@83 ($generated@@363 $generated@@369) $generated@@370))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@307 (type $generated@@374))))
(let (($generated@@376 ($generated@@306 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@78 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@378) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@83 ($generated@@303 $generated@@377) ($generated@@148 ($generated@@324 $generated@@141 $generated@@378)))) (= ($generated@@83 ($generated@@372 $generated@@377) ($generated@@148 ($generated@@324 $generated@@141 $generated@@378))) ($generated@@149 ($generated@@324 $generated@@141 $generated@@378))))))
 :pattern ( ($generated@@83 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@288 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@287 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@83 ($generated@@332 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@83 ($generated@@285 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@83 ($generated@@364 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@83 ($generated@@285 $generated@@379) $generated@@383))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@83 ($generated@@332 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@306 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@305 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@83 ($generated@@343 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@83 ($generated@@303 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@83 ($generated@@372 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@384) $generated@@388))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@83 ($generated@@343 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@390 $generated@@391)) $generated@@66)
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (and (= (type $generated@@392) ($generated@@287 $generated@@150 $generated@@150)) (= (type $generated@@393) $generated@@66)) (= (type $generated@@394) $generated@@66)) (= (type $generated@@395) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@285 $generated@@392) $generated@@396))) (and ($generated@@243 ($generated@@83 ($generated@@364 $generated@@392) $generated@@396) $generated@@394 $generated@@395) ($generated@@243 $generated@@396 $generated@@393 $generated@@395)))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@392) $generated@@396))
 :pattern ( ($generated@@83 ($generated@@285 $generated@@392) $generated@@396))
))))
 :pattern ( ($generated@@76 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@66)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@401) $generated@@66)) (= (type $generated@@402) $generated@@66)) (= (type $generated@@403) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@400) $generated@@404))) (and ($generated@@243 ($generated@@83 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@243 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@76 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@T) ) (! (= (type ($generated@@405 $generated@@406)) ($generated@@78 $generated@@406 $generated@@4))
 :pattern ( ($generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@307 (type $generated@@407))))
(let (($generated@@409 ($generated@@306 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@305 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@304 $generated@@409 $generated@@408)) (= ($generated@@303 $generated@@407) ($generated@@405 $generated@@409))))))
 :pattern ( ($generated@@303 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@307 (type $generated@@410))))
(let (($generated@@412 ($generated@@306 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@305 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@304 $generated@@412 $generated@@411)) (= ($generated@@343 $generated@@410) ($generated@@405 $generated@@411))))))
 :pattern ( ($generated@@343 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@307 (type $generated@@413))))
(let (($generated@@415 ($generated@@306 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@305 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@304 $generated@@415 $generated@@414)) (= ($generated@@371 $generated@@413) ($generated@@405 $generated@@150))))))
 :pattern ( ($generated@@371 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@289 (type $generated@@416))))
(let (($generated@@418 ($generated@@288 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@287 $generated@@418 $generated@@417)) (or (= $generated@@416 ($generated@@286 $generated@@418 $generated@@417)) (exists (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (and (and (= (type $generated@@419) $generated@@150) (= (type $generated@@420) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@363 $generated@@416) ($generated@@274 ($generated@@216 $generated@@419 $generated@@420)))))
 :no-pattern (type $generated@@419)
 :no-pattern (type $generated@@420)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
))))))
 :pattern ( ($generated@@363 $generated@@416))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@307 (type $generated@@421))))
(let (($generated@@423 ($generated@@306 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@305 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@304 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@150) (= (type $generated@@425) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@371 $generated@@421) ($generated@@274 ($generated@@216 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@371 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@150) ($generated@@217 $generated@@426 $generated@@46)) (and (= ($generated@@274 ($generated@@324 $generated@@2 $generated@@426)) $generated@@426) ($generated@@137 ($generated@@324 $generated@@2 $generated@@426) $generated@@46)))
 :pattern ( ($generated@@217 $generated@@426 $generated@@46))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@150) ($generated@@217 $generated@@427 $generated@@47)) (and (= ($generated@@274 ($generated@@324 $generated@@3 $generated@@427)) $generated@@427) ($generated@@137 ($generated@@324 $generated@@3 $generated@@427) $generated@@47)))
 :pattern ( ($generated@@217 $generated@@427 $generated@@47))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@150) ($generated@@217 $generated@@428 $generated@@44)) (and (= ($generated@@274 ($generated@@324 $generated@@4 $generated@@428)) $generated@@428) ($generated@@137 ($generated@@324 $generated@@4 $generated@@428) $generated@@44)))
 :pattern ( ($generated@@217 $generated@@428 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@429) 21))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@150) ($generated@@217 $generated@@430 $generated@@45)) (and (= ($generated@@274 ($generated@@324 $generated@@429 $generated@@430)) $generated@@430) ($generated@@137 ($generated@@324 $generated@@429 $generated@@430) $generated@@45)))
 :pattern ( ($generated@@217 $generated@@430 $generated@@45))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (= (type $generated@@432) $generated@@66) (= ($generated@@217 ($generated@@274 $generated@@431) $generated@@432) ($generated@@137 $generated@@431 $generated@@432)))
 :pattern ( ($generated@@217 ($generated@@274 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@81 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@78 $generated@@434 $generated@@2)) (<= 0 ($generated@@279 $generated@@433))))
 :pattern ( ($generated@@279 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@258 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@257 $generated@@436)) (<= 0 ($generated@@256 $generated@@435))))
 :pattern ( ($generated@@256 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@66)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@66) (= (type $generated@@440) $generated@@66)) (= ($generated@@437 ($generated@@389 $generated@@439 $generated@@440)) $generated@@439))
 :pattern ( ($generated@@389 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@66)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@66) (= (type $generated@@444) $generated@@66)) (= ($generated@@441 ($generated@@389 $generated@@443 $generated@@444)) $generated@@444))
 :pattern ( ($generated@@389 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@66) (= (type $generated@@446) $generated@@66)) (= ($generated@@74 ($generated@@389 $generated@@445 $generated@@446)) $generated@@58))
 :pattern ( ($generated@@389 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@66)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@66) (= (type $generated@@450) $generated@@66)) (= ($generated@@447 ($generated@@397 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@397 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@451 ($generated@@397 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@397 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@66) (= (type $generated@@456) $generated@@66)) (= ($generated@@74 ($generated@@397 $generated@@455 $generated@@456)) $generated@@59))
 :pattern ( ($generated@@397 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@150) (= (type $generated@@458) $generated@@150)) (= ($generated@@249 ($generated@@216 $generated@@457 $generated@@458)) $generated@@62))
 :pattern ( ($generated@@216 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@66)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@459 ($generated@@140 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@140 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@140 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@140 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@150) (= (type $generated@@468) $generated@@150)) (= ($generated@@148 ($generated@@216 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@216 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@150) (= (type $generated@@470) $generated@@150)) (= ($generated@@149 ($generated@@216 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@216 $generated@@469 $generated@@470))
)))
(assert  (and (forall (($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@473)) $generated@@266)
 :pattern ( ($generated@@471 $generated@@473))
)) (= (type $generated@@472) $generated@@266)))
(assert (forall (($generated@@474 T@U) ($generated@@475 Int) ) (!  (=> (= (type $generated@@474) $generated@@266) (= ($generated@@264 $generated@@474 $generated@@475) ($generated@@264 $generated@@472 $generated@@475)))
 :pattern ( ($generated@@264 ($generated@@471 $generated@@474) $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@258 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@257 $generated@@150)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@256 $generated@@482))) ($generated@@243 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@77 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@77 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@488 ($generated@@226 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@226 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@74 ($generated@@226 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@226 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@231 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@231 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@231 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@231 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@155 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@155 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@324 $generated@@505 ($generated@@274 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@274 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@287 $generated@@150 $generated@@150)) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) $generated@@66)) (= ($generated@@137 $generated@@506 ($generated@@389 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@285 $generated@@506) $generated@@509))) (and ($generated@@217 ($generated@@83 ($generated@@364 $generated@@506) $generated@@509) $generated@@508) ($generated@@217 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@506) $generated@@509))
 :pattern ( ($generated@@83 ($generated@@285 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@137 $generated@@506 ($generated@@389 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@137 $generated@@510 ($generated@@397 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@510) $generated@@513))) (and ($generated@@217 ($generated@@83 ($generated@@372 $generated@@510) $generated@@513) $generated@@512) ($generated@@217 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@137 $generated@@510 ($generated@@397 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@150) (= (type $generated@@517) $generated@@150)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@216 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@216 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@150) (= (type $generated@@519) $generated@@150)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@216 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@216 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 Int) ) (!  (=> (= (type $generated@@520) $generated@@266) (= ($generated@@264 ($generated@@265 $generated@@520) $generated@@521) ($generated@@264 $generated@@520 $generated@@521)))
 :pattern ( ($generated@@264 ($generated@@265 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@150) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) ($generated@@217 $generated@@522 ($generated@@389 $generated@@523 $generated@@524))) (and (= ($generated@@274 ($generated@@324 ($generated@@287 $generated@@150 $generated@@150) $generated@@522)) $generated@@522) ($generated@@137 ($generated@@324 ($generated@@287 $generated@@150 $generated@@150) $generated@@522) ($generated@@389 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@217 $generated@@522 ($generated@@389 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@150) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@66)) ($generated@@217 $generated@@525 ($generated@@397 $generated@@526 $generated@@527))) (and (= ($generated@@274 ($generated@@324 ($generated@@305 $generated@@150 $generated@@150) $generated@@525)) $generated@@525) ($generated@@137 ($generated@@324 ($generated@@305 $generated@@150 $generated@@150) $generated@@525) ($generated@@397 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@217 $generated@@525 ($generated@@397 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@66) (= (type $generated@@529) $generated@@66)) (= (type $generated@@530) $generated@@150)) ($generated@@217 $generated@@530 ($generated@@140 $generated@@528 $generated@@529))) (and (= ($generated@@274 ($generated@@324 $generated@@141 $generated@@530)) $generated@@530) ($generated@@137 ($generated@@324 $generated@@141 $generated@@530) ($generated@@140 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@217 $generated@@530 ($generated@@140 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
 (not ($generated@@0 ($generated@@83 ($generated@@405 $generated@@532) $generated@@531))))
 :pattern ( (let (($generated@@532 (type $generated@@531)))
($generated@@83 ($generated@@405 $generated@@532) $generated@@531)))
)))
(assert (forall (($generated@@534 Int) ($generated@@535 Int) ) (! (= ($generated@@533 $generated@@534 $generated@@535) (mod $generated@@534 $generated@@535))
 :pattern ( ($generated@@533 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@71)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@66) (= (type $generated@@539) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@538 $generated@@539)) $generated@@63) (= ($generated@@536 ($generated@@140 $generated@@538 $generated@@539)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@141) (= ($generated@@514 ($generated@@274 $generated@@540)) ($generated@@515 $generated@@540)))
 :pattern ( ($generated@@514 ($generated@@274 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@150) ($generated@@217 $generated@@541 ($generated@@77 0))) (and (= ($generated@@274 ($generated@@324 $generated@@2 $generated@@541)) $generated@@541) ($generated@@137 ($generated@@324 ($generated@@78 $generated@@150 $generated@@4) $generated@@541) ($generated@@77 0))))
 :pattern ( ($generated@@217 $generated@@541 ($generated@@77 0)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@150) (= (type $generated@@543) $generated@@66)) ($generated@@217 $generated@@542 ($generated@@226 $generated@@543))) (and (= ($generated@@274 ($generated@@324 ($generated@@78 $generated@@150 $generated@@4) $generated@@542)) $generated@@542) ($generated@@137 ($generated@@324 ($generated@@78 $generated@@150 $generated@@4) $generated@@542) ($generated@@226 $generated@@543))))
 :pattern ( ($generated@@217 $generated@@542 ($generated@@226 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@150) (= (type $generated@@545) $generated@@66)) ($generated@@217 $generated@@544 ($generated@@231 $generated@@545))) (and (= ($generated@@274 ($generated@@324 ($generated@@78 $generated@@150 $generated@@4) $generated@@544)) $generated@@544) ($generated@@137 ($generated@@324 ($generated@@78 $generated@@150 $generated@@4) $generated@@544) ($generated@@231 $generated@@545))))
 :pattern ( ($generated@@217 $generated@@544 ($generated@@231 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@150) (= (type $generated@@547) $generated@@66)) ($generated@@217 $generated@@546 ($generated@@155 $generated@@547))) (and (= ($generated@@274 ($generated@@324 ($generated@@78 $generated@@150 $generated@@2) $generated@@546)) $generated@@546) ($generated@@137 ($generated@@324 ($generated@@78 $generated@@150 $generated@@2) $generated@@546) ($generated@@155 $generated@@547))))
 :pattern ( ($generated@@217 $generated@@546 ($generated@@155 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@150) (= (type $generated@@549) $generated@@66)) ($generated@@217 $generated@@548 ($generated@@476 $generated@@549))) (and (= ($generated@@274 ($generated@@324 ($generated@@257 $generated@@150) $generated@@548)) $generated@@548) ($generated@@137 ($generated@@324 ($generated@@257 $generated@@150) $generated@@548) ($generated@@476 $generated@@549))))
 :pattern ( ($generated@@217 $generated@@548 ($generated@@476 $generated@@549)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@536 $generated@@134) $generated@@64))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@551) $generated@@66)) (= (type $generated@@552) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@550 ($generated@@155 $generated@@551) $generated@@552) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@550 $generated@@553)))) ($generated@@243 $generated@@553 $generated@@551 $generated@@552))
 :pattern ( ($generated@@83 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@76 $generated@@550 ($generated@@155 $generated@@551) $generated@@552))
)))
(assert  (=> (<= 1 $generated@@263) (forall (($generated@@554 T@U) ($generated@@555 Int) ) (!  (=> (and (= (type $generated@@554) $generated@@266) (or ($generated@@267 ($generated@@236 $generated@@555)) (and (not (= 1 $generated@@263)) (<= ($generated@@236 0) $generated@@555)))) (and (=> (not ($generated@@0 ($generated@@238 ($generated@@11 (< $generated@@555 2))))) (and ($generated@@267 ($generated@@236 (- $generated@@555 2))) ($generated@@267 ($generated@@236 (- $generated@@555 1))))) (= ($generated@@264 ($generated@@265 $generated@@554) ($generated@@236 $generated@@555)) (ite (< $generated@@555 2) $generated@@555 (+ ($generated@@264 ($generated@@265 $generated@@554) ($generated@@236 (- $generated@@555 2))) ($generated@@264 ($generated@@265 $generated@@554) ($generated@@236 (- $generated@@555 1))))))))
 :weight 3
 :pattern ( ($generated@@264 ($generated@@265 $generated@@554) ($generated@@236 $generated@@555)))
))))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@141) (= (type $generated@@557) $generated@@66)) (= (type $generated@@558) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@558) (and ($generated@@139 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@66) ($generated@@76 $generated@@556 ($generated@@140 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@76 $generated@@556 ($generated@@140 $generated@@557 $generated@@559) $generated@@558))
))))) ($generated@@243 ($generated@@148 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@243 ($generated@@148 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@141) (= (type $generated@@561) $generated@@66)) (= (type $generated@@562) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@562) (and ($generated@@139 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@66) ($generated@@76 $generated@@560 ($generated@@140 $generated@@563 $generated@@561) $generated@@562))
 :pattern ( ($generated@@76 $generated@@560 ($generated@@140 $generated@@563 $generated@@561) $generated@@562))
))))) ($generated@@243 ($generated@@149 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@243 ($generated@@149 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@150) (= (type $generated@@565) $generated@@150)) (= ($generated@@216 ($generated@@238 $generated@@564) ($generated@@238 $generated@@565)) ($generated@@238 ($generated@@216 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@216 ($generated@@238 $generated@@564) ($generated@@238 $generated@@565)))
)))
(assert (forall (($generated@@566 Int) ) (! (= ($generated@@274 ($generated@@8 ($generated@@236 $generated@@566))) ($generated@@238 ($generated@@274 ($generated@@8 $generated@@566))))
 :pattern ( ($generated@@274 ($generated@@8 ($generated@@236 $generated@@566))))
)))
(assert (forall (($generated@@567 T@U) ) (! (= ($generated@@274 ($generated@@238 $generated@@567)) ($generated@@238 ($generated@@274 $generated@@567)))
 :pattern ( ($generated@@274 ($generated@@238 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@258 (type $generated@@568))))
 (=> (and (= (type $generated@@568) ($generated@@257 $generated@@569)) (= ($generated@@256 $generated@@568) 0)) (= $generated@@568 ($generated@@255 $generated@@569))))
 :pattern ( ($generated@@256 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@571)))
 (=> (and (and (= (type $generated@@570) ($generated@@78 $generated@@573 $generated@@2)) (= (type $generated@@572) $generated@@2)) (<= 0 ($generated $generated@@572))) (= ($generated@@279 ($generated@@84 $generated@@570 $generated@@571 $generated@@572)) (+ (- ($generated@@279 $generated@@570) ($generated ($generated@@83 $generated@@570 $generated@@571))) ($generated $generated@@572)))))
 :pattern ( ($generated@@279 ($generated@@84 $generated@@570 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@575) $generated@@2)) ($generated@@76 $generated@@575 $generated@@46 $generated@@574))
 :pattern ( ($generated@@76 $generated@@575 $generated@@46 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@577) $generated@@3)) ($generated@@76 $generated@@577 $generated@@47 $generated@@576))
 :pattern ( ($generated@@76 $generated@@577 $generated@@47 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@579) $generated@@4)) ($generated@@76 $generated@@579 $generated@@44 $generated@@578))
 :pattern ( ($generated@@76 $generated@@579 $generated@@44 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@581) $generated@@429)) ($generated@@76 $generated@@581 $generated@@45 $generated@@580))
 :pattern ( ($generated@@76 $generated@@581 $generated@@45 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@583) $generated@@150)) ($generated@@76 $generated@@583 $generated@@48 $generated@@582))
 :pattern ( ($generated@@76 $generated@@583 $generated@@48 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@257 $generated@@150)) (= (type $generated@@585) $generated@@66)) (= ($generated@@137 $generated@@584 ($generated@@476 $generated@@585)) (forall (($generated@@586 Int) ) (!  (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@256 $generated@@584))) ($generated@@217 ($generated@@477 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@477 $generated@@584 $generated@@586))
))))
 :pattern ( ($generated@@137 $generated@@584 ($generated@@476 $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 Int) ) (!  (=> (= (type $generated@@588) ($generated@@257 $generated@@150)) (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@256 $generated@@588))) (< ($generated@@515 ($generated@@324 $generated@@141 ($generated@@477 $generated@@588 $generated@@589))) ($generated@@587 $generated@@588))))
 :pattern ( ($generated@@515 ($generated@@324 $generated@@141 ($generated@@477 $generated@@588 $generated@@589))))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@287 $generated@@150 $generated@@150)) (= (type $generated@@591) $generated@@66)) (= (type $generated@@592) $generated@@66)) ($generated@@137 $generated@@590 ($generated@@389 $generated@@591 $generated@@592))) (and (and ($generated@@137 ($generated@@285 $generated@@590) ($generated@@226 $generated@@591)) ($generated@@137 ($generated@@332 $generated@@590) ($generated@@226 $generated@@592))) ($generated@@137 ($generated@@363 $generated@@590) ($generated@@226 ($generated@@140 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@137 $generated@@590 ($generated@@389 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@594) $generated@@66)) (= (type $generated@@595) $generated@@66)) ($generated@@137 $generated@@593 ($generated@@397 $generated@@594 $generated@@595))) (and (and ($generated@@137 ($generated@@303 $generated@@593) ($generated@@231 $generated@@594)) ($generated@@137 ($generated@@343 $generated@@593) ($generated@@231 $generated@@595))) ($generated@@137 ($generated@@371 $generated@@593) ($generated@@231 ($generated@@140 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@137 $generated@@593 ($generated@@397 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@2) ($generated@@137 $generated@@596 $generated@@46))
 :pattern ( ($generated@@137 $generated@@596 $generated@@46))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@3) ($generated@@137 $generated@@597 $generated@@47))
 :pattern ( ($generated@@137 $generated@@597 $generated@@47))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@4) ($generated@@137 $generated@@598 $generated@@44))
 :pattern ( ($generated@@137 $generated@@598 $generated@@44))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@429) ($generated@@137 $generated@@599 $generated@@45))
 :pattern ( ($generated@@137 $generated@@599 $generated@@45))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@150) ($generated@@137 $generated@@600 $generated@@48))
 :pattern ( ($generated@@137 $generated@@600 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 (T@U) Bool)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(assert  (and (and (and (and (= (type $generated@@603) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@605) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@606) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@607) $generated@@79)) (= (type $generated@@608) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@609  (=> (and (<= ($generated@@236 0) $generated@@601) (< $generated@@601 $generated@@602)) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@137 ($generated@@8 $generated@@601) $generated@@134)) (=> ($generated@@137 ($generated@@8 $generated@@601) $generated@@134) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0 $generated@@602) (= $generated@@601 $generated@@602))) (=> (or (<= 0 $generated@@602) (= $generated@@601 $generated@@602)) (=> (= (ControlFlow 0 5) (- 0 4)) (< $generated@@601 $generated@@602)))))))))
(let (($generated@@610  (=> (and (< $generated@@601 ($generated@@236 0)) (= (ControlFlow 0 9) 5)) $generated@@609)))
(let (($generated@@611  (=> (and (<= ($generated@@236 0) $generated@@601) (= (ControlFlow 0 8) 5)) $generated@@609)))
(let (($generated@@612  (and (=> (= (ControlFlow 0 10) 8) $generated@@611) (=> (= (ControlFlow 0 10) 9) $generated@@610))))
(let (($generated@@613  (=> (= (ControlFlow 0 2) (- 0 1)) (= (= ($generated@@533 ($generated@@264 ($generated@@265 ($generated@@265 $generated@@472)) $generated@@602) ($generated@@236 2)) ($generated@@236 0)) (= ($generated@@533 $generated@@602 ($generated@@236 3)) ($generated@@236 0))))))
(let (($generated@@614  (=> (and (and (and ($generated@@242 $generated@@603) ($generated@@604 $generated@@603)) (= $generated@@605 $generated@@603)) (and (forall (($generated@@615 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@615) (< $generated@@615 $generated@@602)) (= (= ($generated@@533 ($generated@@264 ($generated@@265 $generated@@472) $generated@@615) ($generated@@236 2)) ($generated@@236 0)) (= ($generated@@533 $generated@@615 ($generated@@236 3)) ($generated@@236 0))))
 :pattern ( ($generated@@264 ($generated@@265 $generated@@472) $generated@@615))
)) (= (ControlFlow 0 3) 2))) $generated@@613)))
(let (($generated@@616  (=> (= $generated@@606 ($generated@@161 $generated@@607 $generated@@608 $generated@@60 false)) (=> (and (and ($generated@@242 $generated@@605) ($generated@@604 $generated@@605)) (and (= $generated@@608 $generated@@605) (forall (($generated@@617 Int) )  (=> (and (and (<= ($generated@@236 0) $generated@@617) ($generated@@0 ($generated@@238 ($generated@@11 true)))) (and (<= 0 $generated@@617) (< $generated@@617 $generated@@602))) (= (= ($generated@@533 ($generated@@264 ($generated@@265 $generated@@472) $generated@@617) ($generated@@236 2)) ($generated@@236 0)) (= ($generated@@533 $generated@@617 ($generated@@236 3)) ($generated@@236 0))))))) (and (=> (= (ControlFlow 0 11) 10) $generated@@612) (=> (= (ControlFlow 0 11) 3) $generated@@614))))))
(let (($generated@@618  (=> (and (and (and ($generated@@242 $generated@@608) ($generated@@604 $generated@@608)) (<= ($generated@@236 0) $generated@@602)) (and (= 2 $generated@@263) (= (ControlFlow 0 12) 11))) $generated@@616)))
$generated@@618)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@255 (T@T) T@U)
(declare-fun $generated@@256 (T@U) Int)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@258 (T@T) T@T)
(declare-fun $generated@@263 () Int)
(declare-fun $generated@@264 (T@U Int) Int)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@266 () T@T)
(declare-fun $generated@@267 (Int) Bool)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@279 (T@U) Int)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@286 (T@T T@T) T@U)
(declare-fun $generated@@287 (T@T T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@304 (T@T T@T) T@U)
(declare-fun $generated@@305 (T@T T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@324 (T@T T@U) T@U)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@389 (T@U T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@T) T@U)
(declare-fun $generated@@429 () T@T)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@472 () T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@477 (T@U Int) T@U)
(declare-fun $generated@@486 (T@U) Int)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@533 (Int Int) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@587 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@141)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@66) (= (type $generated@@221) $generated@@66)) (= (type $generated@@222) $generated@@150)) (= (type $generated@@223) $generated@@150)) (= ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221))  (and ($generated@@217 $generated@@222 $generated@@220) ($generated@@217 $generated@@223 $generated@@221))))
 :pattern ( ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@141) (= (type $generated@@225) $generated@@141)) (= ($generated@@147 $generated@@224 $generated@@225) (= $generated@@224 $generated@@225)))
 :pattern ( ($generated@@147 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@66)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@229) $generated@@66)) (= ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@150) ($generated@@0 ($generated@@83 $generated@@228 $generated@@230))) ($generated@@217 $generated@@230 $generated@@229))
 :pattern ( ($generated@@83 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@66)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@150) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@217 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@236 $generated@@237) $generated@@237)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@66) (= (type $generated@@245) $generated@@66)) (= (type $generated@@246) $generated@@150)) (= (type $generated@@247) $generated@@150)) (= (type $generated@@248) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@242 $generated@@248)) (= ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@141) (= ($generated@@139 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@252) $generated@@141) ($generated@@139 $generated@@252)) (exists (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (and (and (= (type $generated@@253) $generated@@150) (= (type $generated@@254) $generated@@150)) (= $generated@@252 ($generated@@216 $generated@@253 $generated@@254)))
 :no-pattern (type $generated@@253)
 :no-pattern (type $generated@@254)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
 :no-pattern ($generated $generated@@254)
 :no-pattern ($generated@@0 $generated@@254)
)))
 :pattern ( ($generated@@139 $generated@@252))
)))
(assert  (and (and (forall (($generated@@259 T@T) ) (= ($generated@@1 ($generated@@257 $generated@@259)) 17)) (forall (($generated@@260 T@T) ) (! (= ($generated@@258 ($generated@@257 $generated@@260)) $generated@@260)
 :pattern ( ($generated@@257 $generated@@260))
))) (forall (($generated@@261 T@T) ) (! (= (type ($generated@@255 $generated@@261)) ($generated@@257 $generated@@261))
 :pattern ( ($generated@@255 $generated@@261))
))))
(assert (forall (($generated@@262 T@T) ) (! (= ($generated@@256 ($generated@@255 $generated@@262)) 0)
 :pattern ( ($generated@@255 $generated@@262))
)))
(assert  (and (= ($generated@@1 $generated@@266) 18) (forall (($generated@@268 T@U) ) (! (= (type ($generated@@265 $generated@@268)) $generated@@266)
 :pattern ( ($generated@@265 $generated@@268))
))))
(assert  (=> (<= 1 $generated@@263) (forall (($generated@@269 T@U) ($generated@@270 Int) ) (!  (=> (and (= (type $generated@@269) $generated@@266) (or ($generated@@267 $generated@@270) (and (not (= 1 $generated@@263)) (<= ($generated@@236 0) $generated@@270)))) (and (=> (<= 2 $generated@@270) (and ($generated@@267 (- $generated@@270 2)) ($generated@@267 (- $generated@@270 1)))) (= ($generated@@264 ($generated@@265 $generated@@269) $generated@@270) (ite (< $generated@@270 2) $generated@@270 (+ ($generated@@264 $generated@@269 (- $generated@@270 2)) ($generated@@264 $generated@@269 (- $generated@@270 1)))))))
 :pattern ( ($generated@@264 ($generated@@265 $generated@@269) $generated@@270))
))))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@2) (= ($generated@@137 $generated@@271 $generated@@134) (<= ($generated@@236 0) ($generated $generated@@271))))
 :pattern ( ($generated@@137 $generated@@271 $generated@@134))
)))
(assert  (=> (<= 1 $generated@@263) (forall (($generated@@272 T@U) ($generated@@273 Int) ) (!  (=> (and (= (type $generated@@272) $generated@@266) (or ($generated@@267 $generated@@273) (and (not (= 1 $generated@@263)) (<= ($generated@@236 0) $generated@@273)))) (<= ($generated@@236 0) ($generated@@264 $generated@@272 $generated@@273)))
 :pattern ( ($generated@@264 $generated@@272 $generated@@273))
))))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@150)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@66) (= (type $generated@@278) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@243 ($generated@@274 $generated@@276) $generated@@277 $generated@@278) ($generated@@76 $generated@@276 $generated@@277 $generated@@278)))
 :pattern ( ($generated@@243 ($generated@@274 $generated@@276) $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@281 T@T) ) (! (= (type ($generated@@280 $generated@@281)) ($generated@@78 $generated@@281 $generated@@2))
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@81 (type $generated@@282))))
 (=> (= (type $generated@@282) ($generated@@78 $generated@@283 $generated@@2)) (and (= (= ($generated@@279 $generated@@282) 0) (= $generated@@282 ($generated@@280 $generated@@283))) (=> (not (= ($generated@@279 $generated@@282) 0)) (exists (($generated@@284 T@U) ) (!  (and (= (type $generated@@284) $generated@@283) (< 0 ($generated ($generated@@83 $generated@@282 $generated@@284))))
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
))))))
 :pattern ( ($generated@@279 $generated@@282))
)))
(assert  (and (and (and (and (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@290 $generated@@291)) 19)) (forall (($generated@@292 T@T) ($generated@@293 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@292 $generated@@293)) $generated@@292)
 :pattern ( ($generated@@287 $generated@@292 $generated@@293))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= ($generated@@289 ($generated@@287 $generated@@294 $generated@@295)) $generated@@295)
 :pattern ( ($generated@@287 $generated@@294 $generated@@295))
))) (forall (($generated@@296 T@U) ) (! (let (($generated@@297 ($generated@@288 (type $generated@@296))))
(= (type ($generated@@285 $generated@@296)) ($generated@@78 $generated@@297 $generated@@4)))
 :pattern ( ($generated@@285 $generated@@296))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= (type ($generated@@286 $generated@@298 $generated@@299)) ($generated@@287 $generated@@298 $generated@@299))
 :pattern ( ($generated@@286 $generated@@298 $generated@@299))
))))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (let (($generated@@302 (type $generated@@300)))
 (not ($generated@@0 ($generated@@83 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300))))
 :pattern ( (let (($generated@@302 (type $generated@@300)))
($generated@@83 ($generated@@285 ($generated@@286 $generated@@302 $generated@@301)) $generated@@300)))
)))
(assert  (and (and (and (and (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@308 $generated@@309)) 20)) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@310 $generated@@311)) $generated@@310)
 :pattern ( ($generated@@305 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@305 $generated@@312 $generated@@313)) $generated@@313)
 :pattern ( ($generated@@305 $generated@@312 $generated@@313))
))) (forall (($generated@@314 T@U) ) (! (let (($generated@@315 ($generated@@306 (type $generated@@314))))
(= (type ($generated@@303 $generated@@314)) ($generated@@78 $generated@@315 $generated@@4)))
 :pattern ( ($generated@@303 $generated@@314))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= (type ($generated@@304 $generated@@316 $generated@@317)) ($generated@@305 $generated@@316 $generated@@317))
 :pattern ( ($generated@@304 $generated@@316 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@T) ) (! (let (($generated@@320 (type $generated@@318)))
 (not ($generated@@0 ($generated@@83 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318))))
 :pattern ( (let (($generated@@320 (type $generated@@318)))
($generated@@83 ($generated@@303 ($generated@@304 $generated@@320 $generated@@319)) $generated@@318)))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@81 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@78 $generated@@322 $generated@@2)) (= ($generated@@156 $generated@@321) (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@322) (and (<= 0 ($generated ($generated@@83 $generated@@321 $generated@@323))) (<= ($generated ($generated@@83 $generated@@321 $generated@@323)) ($generated@@279 $generated@@321))))
 :pattern ( ($generated@@83 $generated@@321 $generated@@323))
)))))
 :pattern ( ($generated@@156 $generated@@321))
)))
(assert (forall (($generated@@325 T@T) ($generated@@326 T@U) ) (! (= (type ($generated@@324 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@324 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@150) ($generated@@217 $generated@@327 $generated@@134)) (and (= ($generated@@274 ($generated@@324 $generated@@2 $generated@@327)) $generated@@327) ($generated@@137 ($generated@@324 $generated@@2 $generated@@327) $generated@@134)))
 :pattern ( ($generated@@217 $generated@@327 $generated@@134))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@289 (type $generated@@328))))
(let (($generated@@330 ($generated@@288 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@287 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@286 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@330) ($generated@@0 ($generated@@83 ($generated@@285 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@285 $generated@@328))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 ($generated@@289 (type $generated@@333))))
(= (type ($generated@@332 $generated@@333)) ($generated@@78 $generated@@334 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 ($generated@@289 (type $generated@@335))))
(let (($generated@@337 ($generated@@288 (type $generated@@335))))
 (=> (= (type $generated@@335) ($generated@@287 $generated@@337 $generated@@336)) (or (= $generated@@335 ($generated@@286 $generated@@337 $generated@@336)) (exists (($generated@@338 T@U) ) (!  (and (= (type $generated@@338) $generated@@336) ($generated@@0 ($generated@@83 ($generated@@332 $generated@@335) $generated@@338)))
 :no-pattern (type $generated@@338)
 :no-pattern ($generated $generated@@338)
 :no-pattern ($generated@@0 $generated@@338)
))))))
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@307 (type $generated@@339))))
(let (($generated@@341 ($generated@@306 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@305 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@304 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@303 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@307 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@78 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@307 (type $generated@@346))))
(let (($generated@@348 ($generated@@306 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@305 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@304 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@83 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@351) $generated@@66)) (= ($generated@@137 $generated@@350 ($generated@@155 $generated@@351)) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@350 $generated@@352)))) ($generated@@217 $generated@@352 $generated@@351))
 :pattern ( ($generated@@83 $generated@@350 $generated@@352))
))))
 :pattern ( ($generated@@137 $generated@@350 ($generated@@155 $generated@@351)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (and (= (type $generated@@353) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@354) $generated@@66)) (= (type $generated@@355) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@353 ($generated@@226 $generated@@354) $generated@@355) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@150) ($generated@@0 ($generated@@83 $generated@@353 $generated@@356))) ($generated@@243 $generated@@356 $generated@@354 $generated@@355))
 :pattern ( ($generated@@83 $generated@@353 $generated@@356))
))))
 :pattern ( ($generated@@76 $generated@@353 ($generated@@226 $generated@@354) $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@358) $generated@@66)) (= (type $generated@@359) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@357 ($generated@@231 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@150) ($generated@@0 ($generated@@83 $generated@@357 $generated@@360))) ($generated@@243 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@83 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@76 $generated@@357 ($generated@@231 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ) (! (let (($generated@@362 (type $generated@@361)))
(= ($generated ($generated@@83 ($generated@@280 $generated@@362) $generated@@361)) 0))
 :pattern ( (let (($generated@@362 (type $generated@@361)))
($generated@@83 ($generated@@280 $generated@@362) $generated@@361)))
)))
(assert  (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@363 $generated@@365)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@363 $generated@@365))
)) (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@289 (type $generated@@366))))
(let (($generated@@368 ($generated@@288 (type $generated@@366))))
(= (type ($generated@@364 $generated@@366)) ($generated@@78 $generated@@368 $generated@@367))))
 :pattern ( ($generated@@364 $generated@@366))
))))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@369) ($generated@@287 $generated@@150 $generated@@150)) (= (type $generated@@370) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@363 $generated@@369) $generated@@370))  (and ($generated@@0 ($generated@@83 ($generated@@285 $generated@@369) ($generated@@148 ($generated@@324 $generated@@141 $generated@@370)))) (= ($generated@@83 ($generated@@364 $generated@@369) ($generated@@148 ($generated@@324 $generated@@141 $generated@@370))) ($generated@@149 ($generated@@324 $generated@@141 $generated@@370))))))
 :pattern ( ($generated@@83 ($generated@@363 $generated@@369) $generated@@370))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@307 (type $generated@@374))))
(let (($generated@@376 ($generated@@306 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@78 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@378) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@83 ($generated@@303 $generated@@377) ($generated@@148 ($generated@@324 $generated@@141 $generated@@378)))) (= ($generated@@83 ($generated@@372 $generated@@377) ($generated@@148 ($generated@@324 $generated@@141 $generated@@378))) ($generated@@149 ($generated@@324 $generated@@141 $generated@@378))))))
 :pattern ( ($generated@@83 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@288 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@287 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@83 ($generated@@332 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@83 ($generated@@285 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@83 ($generated@@364 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@83 ($generated@@285 $generated@@379) $generated@@383))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@83 ($generated@@332 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(let (($generated@@387 ($generated@@306 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@305 $generated@@387 $generated@@386)) (= ($generated@@0 ($generated@@83 ($generated@@343 $generated@@384) $generated@@385)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@387) (and ($generated@@0 ($generated@@83 ($generated@@303 $generated@@384) $generated@@388)) (= $generated@@385 ($generated@@83 ($generated@@372 $generated@@384) $generated@@388))))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@384) $generated@@388))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@384) $generated@@388))
))))))
 :pattern ( ($generated@@83 ($generated@@343 $generated@@384) $generated@@385))
)))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@U) ) (! (= (type ($generated@@389 $generated@@390 $generated@@391)) $generated@@66)
 :pattern ( ($generated@@389 $generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (and (= (type $generated@@392) ($generated@@287 $generated@@150 $generated@@150)) (= (type $generated@@393) $generated@@66)) (= (type $generated@@394) $generated@@66)) (= (type $generated@@395) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@285 $generated@@392) $generated@@396))) (and ($generated@@243 ($generated@@83 ($generated@@364 $generated@@392) $generated@@396) $generated@@394 $generated@@395) ($generated@@243 $generated@@396 $generated@@393 $generated@@395)))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@392) $generated@@396))
 :pattern ( ($generated@@83 ($generated@@285 $generated@@392) $generated@@396))
))))
 :pattern ( ($generated@@76 $generated@@392 ($generated@@389 $generated@@393 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@66)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@401) $generated@@66)) (= (type $generated@@402) $generated@@66)) (= (type $generated@@403) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@400) $generated@@404))) (and ($generated@@243 ($generated@@83 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@243 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@76 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@T) ) (! (= (type ($generated@@405 $generated@@406)) ($generated@@78 $generated@@406 $generated@@4))
 :pattern ( ($generated@@405 $generated@@406))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@307 (type $generated@@407))))
(let (($generated@@409 ($generated@@306 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@305 $generated@@409 $generated@@408)) (= (= $generated@@407 ($generated@@304 $generated@@409 $generated@@408)) (= ($generated@@303 $generated@@407) ($generated@@405 $generated@@409))))))
 :pattern ( ($generated@@303 $generated@@407))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@307 (type $generated@@410))))
(let (($generated@@412 ($generated@@306 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@305 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@304 $generated@@412 $generated@@411)) (= ($generated@@343 $generated@@410) ($generated@@405 $generated@@411))))))
 :pattern ( ($generated@@343 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@307 (type $generated@@413))))
(let (($generated@@415 ($generated@@306 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@305 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@304 $generated@@415 $generated@@414)) (= ($generated@@371 $generated@@413) ($generated@@405 $generated@@150))))))
 :pattern ( ($generated@@371 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@289 (type $generated@@416))))
(let (($generated@@418 ($generated@@288 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@287 $generated@@418 $generated@@417)) (or (= $generated@@416 ($generated@@286 $generated@@418 $generated@@417)) (exists (($generated@@419 T@U) ($generated@@420 T@U) ) (!  (and (and (= (type $generated@@419) $generated@@150) (= (type $generated@@420) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@363 $generated@@416) ($generated@@274 ($generated@@216 $generated@@419 $generated@@420)))))
 :no-pattern (type $generated@@419)
 :no-pattern (type $generated@@420)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
))))))
 :pattern ( ($generated@@363 $generated@@416))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@307 (type $generated@@421))))
(let (($generated@@423 ($generated@@306 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@305 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@304 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@150) (= (type $generated@@425) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@371 $generated@@421) ($generated@@274 ($generated@@216 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@371 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@150) ($generated@@217 $generated@@426 $generated@@46)) (and (= ($generated@@274 ($generated@@324 $generated@@2 $generated@@426)) $generated@@426) ($generated@@137 ($generated@@324 $generated@@2 $generated@@426) $generated@@46)))
 :pattern ( ($generated@@217 $generated@@426 $generated@@46))
)))
(assert (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@150) ($generated@@217 $generated@@427 $generated@@47)) (and (= ($generated@@274 ($generated@@324 $generated@@3 $generated@@427)) $generated@@427) ($generated@@137 ($generated@@324 $generated@@3 $generated@@427) $generated@@47)))
 :pattern ( ($generated@@217 $generated@@427 $generated@@47))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@150) ($generated@@217 $generated@@428 $generated@@44)) (and (= ($generated@@274 ($generated@@324 $generated@@4 $generated@@428)) $generated@@428) ($generated@@137 ($generated@@324 $generated@@4 $generated@@428) $generated@@44)))
 :pattern ( ($generated@@217 $generated@@428 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@429) 21))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@150) ($generated@@217 $generated@@430 $generated@@45)) (and (= ($generated@@274 ($generated@@324 $generated@@429 $generated@@430)) $generated@@430) ($generated@@137 ($generated@@324 $generated@@429 $generated@@430) $generated@@45)))
 :pattern ( ($generated@@217 $generated@@430 $generated@@45))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (= (type $generated@@432) $generated@@66) (= ($generated@@217 ($generated@@274 $generated@@431) $generated@@432) ($generated@@137 $generated@@431 $generated@@432)))
 :pattern ( ($generated@@217 ($generated@@274 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@81 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@78 $generated@@434 $generated@@2)) (<= 0 ($generated@@279 $generated@@433))))
 :pattern ( ($generated@@279 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@258 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@257 $generated@@436)) (<= 0 ($generated@@256 $generated@@435))))
 :pattern ( ($generated@@256 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (= (type ($generated@@437 $generated@@438)) $generated@@66)
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@66) (= (type $generated@@440) $generated@@66)) (= ($generated@@437 ($generated@@389 $generated@@439 $generated@@440)) $generated@@439))
 :pattern ( ($generated@@389 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@66)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@66) (= (type $generated@@444) $generated@@66)) (= ($generated@@441 ($generated@@389 $generated@@443 $generated@@444)) $generated@@444))
 :pattern ( ($generated@@389 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@66) (= (type $generated@@446) $generated@@66)) (= ($generated@@74 ($generated@@389 $generated@@445 $generated@@446)) $generated@@58))
 :pattern ( ($generated@@389 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ) (! (= (type ($generated@@447 $generated@@448)) $generated@@66)
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@66) (= (type $generated@@450) $generated@@66)) (= ($generated@@447 ($generated@@397 $generated@@449 $generated@@450)) $generated@@449))
 :pattern ( ($generated@@397 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@451 ($generated@@397 $generated@@453 $generated@@454)) $generated@@454))
 :pattern ( ($generated@@397 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@66) (= (type $generated@@456) $generated@@66)) (= ($generated@@74 ($generated@@397 $generated@@455 $generated@@456)) $generated@@59))
 :pattern ( ($generated@@397 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@150) (= (type $generated@@458) $generated@@150)) (= ($generated@@249 ($generated@@216 $generated@@457 $generated@@458)) $generated@@62))
 :pattern ( ($generated@@216 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@66)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@459 ($generated@@140 $generated@@461 $generated@@462)) $generated@@461))
 :pattern ( ($generated@@140 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@140 $generated@@465 $generated@@466)) $generated@@466))
 :pattern ( ($generated@@140 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@150) (= (type $generated@@468) $generated@@150)) (= ($generated@@148 ($generated@@216 $generated@@467 $generated@@468)) $generated@@467))
 :pattern ( ($generated@@216 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@150) (= (type $generated@@470) $generated@@150)) (= ($generated@@149 ($generated@@216 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@216 $generated@@469 $generated@@470))
)))
(assert  (and (forall (($generated@@473 T@U) ) (! (= (type ($generated@@471 $generated@@473)) $generated@@266)
 :pattern ( ($generated@@471 $generated@@473))
)) (= (type $generated@@472) $generated@@266)))
(assert (forall (($generated@@474 T@U) ($generated@@475 Int) ) (!  (=> (= (type $generated@@474) $generated@@266) (= ($generated@@264 $generated@@474 $generated@@475) ($generated@@264 $generated@@472 $generated@@475)))
 :pattern ( ($generated@@264 ($generated@@471 $generated@@474) $generated@@475))
)))
(assert  (and (forall (($generated@@478 T@U) ) (! (= (type ($generated@@476 $generated@@478)) $generated@@66)
 :pattern ( ($generated@@476 $generated@@478))
)) (forall (($generated@@479 T@U) ($generated@@480 Int) ) (! (let (($generated@@481 ($generated@@258 (type $generated@@479))))
(= (type ($generated@@477 $generated@@479 $generated@@480)) $generated@@481))
 :pattern ( ($generated@@477 $generated@@479 $generated@@480))
))))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (and (= (type $generated@@482) ($generated@@257 $generated@@150)) (= (type $generated@@483) $generated@@66)) (= (type $generated@@484) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484) (forall (($generated@@485 Int) ) (!  (=> (and (<= 0 $generated@@485) (< $generated@@485 ($generated@@256 $generated@@482))) ($generated@@243 ($generated@@477 $generated@@482 $generated@@485) $generated@@483 $generated@@484))
 :pattern ( ($generated@@477 $generated@@482 $generated@@485))
))))
 :pattern ( ($generated@@76 $generated@@482 ($generated@@476 $generated@@483) $generated@@484))
)))
(assert (forall (($generated@@487 Int) ) (! (= ($generated@@486 ($generated@@77 $generated@@487)) $generated@@487)
 :pattern ( ($generated@@77 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@488 ($generated@@226 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@226 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@66) (= ($generated@@74 ($generated@@226 $generated@@491)) $generated@@54))
 :pattern ( ($generated@@226 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@66)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@492 ($generated@@231 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@231 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@66) (= ($generated@@74 ($generated@@231 $generated@@495)) $generated@@55))
 :pattern ( ($generated@@231 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@66)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@496 ($generated@@155 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@155 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@499)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@66)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@500 ($generated@@476 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@476 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@66) (= ($generated@@74 ($generated@@476 $generated@@503)) $generated@@57))
 :pattern ( ($generated@@476 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@324 $generated@@505 ($generated@@274 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@274 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@287 $generated@@150 $generated@@150)) (= (type $generated@@507) $generated@@66)) (= (type $generated@@508) $generated@@66)) (= ($generated@@137 $generated@@506 ($generated@@389 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@285 $generated@@506) $generated@@509))) (and ($generated@@217 ($generated@@83 ($generated@@364 $generated@@506) $generated@@509) $generated@@508) ($generated@@217 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@83 ($generated@@364 $generated@@506) $generated@@509))
 :pattern ( ($generated@@83 ($generated@@285 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@137 $generated@@506 ($generated@@389 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@511) $generated@@66)) (= (type $generated@@512) $generated@@66)) (= ($generated@@137 $generated@@510 ($generated@@397 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@303 $generated@@510) $generated@@513))) (and ($generated@@217 ($generated@@83 ($generated@@372 $generated@@510) $generated@@513) $generated@@512) ($generated@@217 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@83 ($generated@@372 $generated@@510) $generated@@513))
 :pattern ( ($generated@@83 ($generated@@303 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@137 $generated@@510 ($generated@@397 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@150) (= (type $generated@@517) $generated@@150)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@216 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@216 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@150) (= (type $generated@@519) $generated@@150)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@216 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@216 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 Int) ) (!  (=> (= (type $generated@@520) $generated@@266) (= ($generated@@264 ($generated@@265 $generated@@520) $generated@@521) ($generated@@264 $generated@@520 $generated@@521)))
 :pattern ( ($generated@@264 ($generated@@265 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@150) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) ($generated@@217 $generated@@522 ($generated@@389 $generated@@523 $generated@@524))) (and (= ($generated@@274 ($generated@@324 ($generated@@287 $generated@@150 $generated@@150) $generated@@522)) $generated@@522) ($generated@@137 ($generated@@324 ($generated@@287 $generated@@150 $generated@@150) $generated@@522) ($generated@@389 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@217 $generated@@522 ($generated@@389 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@150) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@66)) ($generated@@217 $generated@@525 ($generated@@397 $generated@@526 $generated@@527))) (and (= ($generated@@274 ($generated@@324 ($generated@@305 $generated@@150 $generated@@150) $generated@@525)) $generated@@525) ($generated@@137 ($generated@@324 ($generated@@305 $generated@@150 $generated@@150) $generated@@525) ($generated@@397 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@217 $generated@@525 ($generated@@397 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@66) (= (type $generated@@529) $generated@@66)) (= (type $generated@@530) $generated@@150)) ($generated@@217 $generated@@530 ($generated@@140 $generated@@528 $generated@@529))) (and (= ($generated@@274 ($generated@@324 $generated@@141 $generated@@530)) $generated@@530) ($generated@@137 ($generated@@324 $generated@@141 $generated@@530) ($generated@@140 $generated@@528 $generated@@529))))
 :pattern ( ($generated@@217 $generated@@530 ($generated@@140 $generated@@528 $generated@@529)))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 (type $generated@@531)))
 (not ($generated@@0 ($generated@@83 ($generated@@405 $generated@@532) $generated@@531))))
 :pattern ( (let (($generated@@532 (type $generated@@531)))
($generated@@83 ($generated@@405 $generated@@532) $generated@@531)))
)))
(assert (forall (($generated@@534 Int) ($generated@@535 Int) ) (! (= ($generated@@533 $generated@@534 $generated@@535) (mod $generated@@534 $generated@@535))
 :pattern ( ($generated@@533 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@71)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@66) (= (type $generated@@539) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@538 $generated@@539)) $generated@@63) (= ($generated@@536 ($generated@@140 $generated@@538 $generated@@539)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@141) (= ($generated@@514 ($generated@@274 $generated@@540)) ($generated@@515 $generated@@540)))
 :pattern ( ($generated@@514 ($generated@@274 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@150) ($generated@@217 $generated@@541 ($generated@@77 0))) (and (= ($generated@@274 ($generated@@324 $generated@@2 $generated@@541)) $generated@@541) ($generated@@137 ($generated@@324 ($generated@@78 $generated@@150 $generated@@4) $generated@@541) ($generated@@77 0))))
 :pattern ( ($generated@@217 $generated@@541 ($generated@@77 0)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@150) (= (type $generated@@543) $generated@@66)) ($generated@@217 $generated@@542 ($generated@@226 $generated@@543))) (and (= ($generated@@274 ($generated@@324 ($generated@@78 $generated@@150 $generated@@4) $generated@@542)) $generated@@542) ($generated@@137 ($generated@@324 ($generated@@78 $generated@@150 $generated@@4) $generated@@542) ($generated@@226 $generated@@543))))
 :pattern ( ($generated@@217 $generated@@542 ($generated@@226 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@150) (= (type $generated@@545) $generated@@66)) ($generated@@217 $generated@@544 ($generated@@231 $generated@@545))) (and (= ($generated@@274 ($generated@@324 ($generated@@78 $generated@@150 $generated@@4) $generated@@544)) $generated@@544) ($generated@@137 ($generated@@324 ($generated@@78 $generated@@150 $generated@@4) $generated@@544) ($generated@@231 $generated@@545))))
 :pattern ( ($generated@@217 $generated@@544 ($generated@@231 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@150) (= (type $generated@@547) $generated@@66)) ($generated@@217 $generated@@546 ($generated@@155 $generated@@547))) (and (= ($generated@@274 ($generated@@324 ($generated@@78 $generated@@150 $generated@@2) $generated@@546)) $generated@@546) ($generated@@137 ($generated@@324 ($generated@@78 $generated@@150 $generated@@2) $generated@@546) ($generated@@155 $generated@@547))))
 :pattern ( ($generated@@217 $generated@@546 ($generated@@155 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@150) (= (type $generated@@549) $generated@@66)) ($generated@@217 $generated@@548 ($generated@@476 $generated@@549))) (and (= ($generated@@274 ($generated@@324 ($generated@@257 $generated@@150) $generated@@548)) $generated@@548) ($generated@@137 ($generated@@324 ($generated@@257 $generated@@150) $generated@@548) ($generated@@476 $generated@@549))))
 :pattern ( ($generated@@217 $generated@@548 ($generated@@476 $generated@@549)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@536 $generated@@134) $generated@@64))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@551) $generated@@66)) (= (type $generated@@552) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@550 ($generated@@155 $generated@@551) $generated@@552) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@550 $generated@@553)))) ($generated@@243 $generated@@553 $generated@@551 $generated@@552))
 :pattern ( ($generated@@83 $generated@@550 $generated@@553))
))))
 :pattern ( ($generated@@76 $generated@@550 ($generated@@155 $generated@@551) $generated@@552))
)))
(assert  (=> (<= 1 $generated@@263) (forall (($generated@@554 T@U) ($generated@@555 Int) ) (!  (=> (and (= (type $generated@@554) $generated@@266) (or ($generated@@267 ($generated@@236 $generated@@555)) (and (not (= 1 $generated@@263)) (<= ($generated@@236 0) $generated@@555)))) (and (=> (not ($generated@@0 ($generated@@238 ($generated@@11 (< $generated@@555 2))))) (and ($generated@@267 ($generated@@236 (- $generated@@555 2))) ($generated@@267 ($generated@@236 (- $generated@@555 1))))) (= ($generated@@264 ($generated@@265 $generated@@554) ($generated@@236 $generated@@555)) (ite (< $generated@@555 2) $generated@@555 (+ ($generated@@264 ($generated@@265 $generated@@554) ($generated@@236 (- $generated@@555 2))) ($generated@@264 ($generated@@265 $generated@@554) ($generated@@236 (- $generated@@555 1))))))))
 :weight 3
 :pattern ( ($generated@@264 ($generated@@265 $generated@@554) ($generated@@236 $generated@@555)))
))))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@141) (= (type $generated@@557) $generated@@66)) (= (type $generated@@558) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@558) (and ($generated@@139 $generated@@556) (exists (($generated@@559 T@U) ) (!  (and (= (type $generated@@559) $generated@@66) ($generated@@76 $generated@@556 ($generated@@140 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@76 $generated@@556 ($generated@@140 $generated@@557 $generated@@559) $generated@@558))
))))) ($generated@@243 ($generated@@148 $generated@@556) $generated@@557 $generated@@558))
 :pattern ( ($generated@@243 ($generated@@148 $generated@@556) $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@141) (= (type $generated@@561) $generated@@66)) (= (type $generated@@562) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@562) (and ($generated@@139 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@66) ($generated@@76 $generated@@560 ($generated@@140 $generated@@563 $generated@@561) $generated@@562))
 :pattern ( ($generated@@76 $generated@@560 ($generated@@140 $generated@@563 $generated@@561) $generated@@562))
))))) ($generated@@243 ($generated@@149 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@243 ($generated@@149 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@150) (= (type $generated@@565) $generated@@150)) (= ($generated@@216 ($generated@@238 $generated@@564) ($generated@@238 $generated@@565)) ($generated@@238 ($generated@@216 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@216 ($generated@@238 $generated@@564) ($generated@@238 $generated@@565)))
)))
(assert (forall (($generated@@566 Int) ) (! (= ($generated@@274 ($generated@@8 ($generated@@236 $generated@@566))) ($generated@@238 ($generated@@274 ($generated@@8 $generated@@566))))
 :pattern ( ($generated@@274 ($generated@@8 ($generated@@236 $generated@@566))))
)))
(assert (forall (($generated@@567 T@U) ) (! (= ($generated@@274 ($generated@@238 $generated@@567)) ($generated@@238 ($generated@@274 $generated@@567)))
 :pattern ( ($generated@@274 ($generated@@238 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@258 (type $generated@@568))))
 (=> (and (= (type $generated@@568) ($generated@@257 $generated@@569)) (= ($generated@@256 $generated@@568) 0)) (= $generated@@568 ($generated@@255 $generated@@569))))
 :pattern ( ($generated@@256 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@571)))
 (=> (and (and (= (type $generated@@570) ($generated@@78 $generated@@573 $generated@@2)) (= (type $generated@@572) $generated@@2)) (<= 0 ($generated $generated@@572))) (= ($generated@@279 ($generated@@84 $generated@@570 $generated@@571 $generated@@572)) (+ (- ($generated@@279 $generated@@570) ($generated ($generated@@83 $generated@@570 $generated@@571))) ($generated $generated@@572)))))
 :pattern ( ($generated@@279 ($generated@@84 $generated@@570 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@575) $generated@@2)) ($generated@@76 $generated@@575 $generated@@46 $generated@@574))
 :pattern ( ($generated@@76 $generated@@575 $generated@@46 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@577) $generated@@3)) ($generated@@76 $generated@@577 $generated@@47 $generated@@576))
 :pattern ( ($generated@@76 $generated@@577 $generated@@47 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@579) $generated@@4)) ($generated@@76 $generated@@579 $generated@@44 $generated@@578))
 :pattern ( ($generated@@76 $generated@@579 $generated@@44 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@581) $generated@@429)) ($generated@@76 $generated@@581 $generated@@45 $generated@@580))
 :pattern ( ($generated@@76 $generated@@581 $generated@@45 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@583) $generated@@150)) ($generated@@76 $generated@@583 $generated@@48 $generated@@582))
 :pattern ( ($generated@@76 $generated@@583 $generated@@48 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@257 $generated@@150)) (= (type $generated@@585) $generated@@66)) (= ($generated@@137 $generated@@584 ($generated@@476 $generated@@585)) (forall (($generated@@586 Int) ) (!  (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@256 $generated@@584))) ($generated@@217 ($generated@@477 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@477 $generated@@584 $generated@@586))
))))
 :pattern ( ($generated@@137 $generated@@584 ($generated@@476 $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 Int) ) (!  (=> (= (type $generated@@588) ($generated@@257 $generated@@150)) (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@256 $generated@@588))) (< ($generated@@515 ($generated@@324 $generated@@141 ($generated@@477 $generated@@588 $generated@@589))) ($generated@@587 $generated@@588))))
 :pattern ( ($generated@@515 ($generated@@324 $generated@@141 ($generated@@477 $generated@@588 $generated@@589))))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@287 $generated@@150 $generated@@150)) (= (type $generated@@591) $generated@@66)) (= (type $generated@@592) $generated@@66)) ($generated@@137 $generated@@590 ($generated@@389 $generated@@591 $generated@@592))) (and (and ($generated@@137 ($generated@@285 $generated@@590) ($generated@@226 $generated@@591)) ($generated@@137 ($generated@@332 $generated@@590) ($generated@@226 $generated@@592))) ($generated@@137 ($generated@@363 $generated@@590) ($generated@@226 ($generated@@140 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@137 $generated@@590 ($generated@@389 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@305 $generated@@150 $generated@@150)) (= (type $generated@@594) $generated@@66)) (= (type $generated@@595) $generated@@66)) ($generated@@137 $generated@@593 ($generated@@397 $generated@@594 $generated@@595))) (and (and ($generated@@137 ($generated@@303 $generated@@593) ($generated@@231 $generated@@594)) ($generated@@137 ($generated@@343 $generated@@593) ($generated@@231 $generated@@595))) ($generated@@137 ($generated@@371 $generated@@593) ($generated@@231 ($generated@@140 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@137 $generated@@593 ($generated@@397 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@2) ($generated@@137 $generated@@596 $generated@@46))
 :pattern ( ($generated@@137 $generated@@596 $generated@@46))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@3) ($generated@@137 $generated@@597 $generated@@47))
 :pattern ( ($generated@@137 $generated@@597 $generated@@47))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@4) ($generated@@137 $generated@@598 $generated@@44))
 :pattern ( ($generated@@137 $generated@@598 $generated@@44))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@429) ($generated@@137 $generated@@599 $generated@@45))
 :pattern ( ($generated@@137 $generated@@599 $generated@@45))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@150) ($generated@@137 $generated@@600 $generated@@48))
 :pattern ( ($generated@@137 $generated@@600 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@602) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@604) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@605) $generated@@79)) (= (type $generated@@606) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@608 true))
(let (($generated@@609  (=> (and (=> (<= ($generated@@236 0) $generated@@601) (= (= ($generated@@533 ($generated@@264 ($generated@@265 $generated@@472) $generated@@601) ($generated@@236 2)) ($generated@@236 0)) (= ($generated@@533 $generated@@601 ($generated@@236 3)) ($generated@@236 0)))) (= (ControlFlow 0 6) 1)) $generated@@608)))
(let (($generated@@610  (=> (<= ($generated@@236 0) $generated@@601) (=> (and ($generated@@76 ($generated@@8 $generated@@601) $generated@@134 $generated@@602) ($generated@@267 $generated@@601)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not (= ($generated@@236 2) 0))) (=> (not (= ($generated@@236 2) 0)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= ($generated@@236 3) 0))) (=> (not (= ($generated@@236 3) 0)) (=> (= $generated@@603 ($generated@@533 $generated@@601 ($generated@@236 3))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@236 0) $generated@@603)) (=> (<= ($generated@@236 0) $generated@@603) (=> (and (= (= ($generated@@533 ($generated@@264 ($generated@@265 $generated@@472) $generated@@601) ($generated@@236 2)) ($generated@@236 0)) (= ($generated@@533 $generated@@601 ($generated@@236 3)) ($generated@@236 0))) (= (ControlFlow 0 2) 1)) $generated@@608))))))))))))
(let (($generated@@611  (=> (= $generated@@604 ($generated@@161 $generated@@605 $generated@@606 $generated@@60 false)) (=> (and (and ($generated@@242 $generated@@602) ($generated@@607 $generated@@602)) (and (= $generated@@606 $generated@@602) (<= ($generated@@236 0) $generated@@601))) (and (=> (= (ControlFlow 0 7) 2) $generated@@610) (=> (= (ControlFlow 0 7) 6) $generated@@609))))))
(let (($generated@@612  (=> (and (and ($generated@@242 $generated@@606) ($generated@@607 $generated@@606)) (and (= 3 $generated@@263) (= (ControlFlow 0 8) 7))) $generated@@611)))
$generated@@612))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 (T@U Int) Int)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@167 (Int) Bool)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@T T@U) T@U)
(declare-fun $generated@@180 () T@T)
(declare-fun $generated@@188 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (= ($generated@@1 $generated@@166) 11) (forall (($generated@@168 T@U) ) (! (= (type ($generated@@165 $generated@@168)) $generated@@166)
 :pattern ( ($generated@@165 $generated@@168))
))))
(assert  (=> (<= 1 $generated@@163) (forall (($generated@@169 T@U) ($generated@@170 Int) ) (!  (=> (and (= (type $generated@@169) $generated@@166) (or ($generated@@167 $generated@@170) (and (not (= 1 $generated@@163)) (<= ($generated@@157 0) $generated@@170)))) (and (=> (<= 2 $generated@@170) (and ($generated@@167 (- $generated@@170 2)) ($generated@@167 (- $generated@@170 1)))) (= ($generated@@164 ($generated@@165 $generated@@169) $generated@@170) (ite (< $generated@@170 2) $generated@@170 (+ ($generated@@164 $generated@@169 (- $generated@@170 2)) ($generated@@164 $generated@@169 (- $generated@@170 1)))))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@169) $generated@@170))
))))
(assert  (=> (<= 1 $generated@@163) (forall (($generated@@171 T@U) ($generated@@172 Int) ) (!  (=> (and (= (type $generated@@171) $generated@@166) (or ($generated@@167 $generated@@172) (and (not (= 1 $generated@@163)) (<= ($generated@@157 0) $generated@@172)))) (<= ($generated@@157 0) ($generated@@164 $generated@@171 $generated@@172)))
 :pattern ( ($generated@@164 $generated@@171 $generated@@172))
))))
(assert  (and (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@166)
 :pattern ( ($generated@@173 $generated@@175))
)) (= (type $generated@@174) $generated@@166)))
(assert (forall (($generated@@176 T@U) ($generated@@177 Int) ) (!  (=> (= (type $generated@@176) $generated@@166) (= ($generated@@164 $generated@@176 $generated@@177) ($generated@@164 $generated@@174 $generated@@177)))
 :pattern ( ($generated@@164 ($generated@@173 $generated@@176) $generated@@177))
)))
(assert  (and (and (= ($generated@@1 $generated@@180) 12) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@178 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@178 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@U) ) (! (= (type ($generated@@179 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@179 $generated@@182 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(= ($generated@@179 $generated@@185 ($generated@@178 $generated@@184)) $generated@@184))
 :pattern ( ($generated@@178 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 Int) ) (!  (=> (= (type $generated@@186) $generated@@166) (= ($generated@@164 ($generated@@165 $generated@@186) $generated@@187) ($generated@@164 $generated@@186 $generated@@187)))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@186) $generated@@187))
)))
(assert (forall (($generated@@189 Int) ($generated@@190 Int) ) (! (= ($generated@@188 $generated@@189 $generated@@190) (mod $generated@@189 $generated@@190))
 :pattern ( ($generated@@188 $generated@@189 $generated@@190))
)))
(assert  (=> (<= 1 $generated@@163) (forall (($generated@@191 T@U) ($generated@@192 Int) ) (!  (=> (and (= (type $generated@@191) $generated@@166) (or ($generated@@167 ($generated@@157 $generated@@192)) (and (not (= 1 $generated@@163)) (<= ($generated@@157 0) $generated@@192)))) (and (=> (not ($generated@@0 ($generated@@159 ($generated@@11 (< $generated@@192 2))))) (and ($generated@@167 ($generated@@157 (- $generated@@192 2))) ($generated@@167 ($generated@@157 (- $generated@@192 1))))) (= ($generated@@164 ($generated@@165 $generated@@191) ($generated@@157 $generated@@192)) (ite (< $generated@@192 2) $generated@@192 (+ ($generated@@164 ($generated@@165 $generated@@191) ($generated@@157 (- $generated@@192 2))) ($generated@@164 ($generated@@165 $generated@@191) ($generated@@157 (- $generated@@192 1))))))))
 :weight 3
 :pattern ( ($generated@@164 ($generated@@165 $generated@@191) ($generated@@157 $generated@@192)))
))))
(assert (forall (($generated@@193 Int) ) (! (= ($generated@@178 ($generated@@8 ($generated@@157 $generated@@193))) ($generated@@159 ($generated@@178 ($generated@@8 $generated@@193))))
 :pattern ( ($generated@@178 ($generated@@8 ($generated@@157 $generated@@193))))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@178 ($generated@@159 $generated@@194)) ($generated@@159 ($generated@@178 $generated@@194)))
 :pattern ( ($generated@@178 ($generated@@159 $generated@@194)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@195 (T@U) Bool)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(assert  (and (and (and (and (= (type $generated@@196) ($generated@@48 $generated@@47 $generated@@49)) (= (type $generated@@198) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@199) ($generated@@57 $generated@@47 $generated@@4))) (= (type $generated@@200) $generated@@47)) (= (type $generated@@201) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@202  (=> (= (ControlFlow 0 3) (- 0 2)) (forall (($generated@@203 Int) ) (!  (=> (<= ($generated@@157 0) $generated@@203) (=> (<= ($generated@@157 0) $generated@@203) (= (= ($generated@@188 ($generated@@164 ($generated@@165 ($generated@@165 $generated@@174)) $generated@@203) ($generated@@157 2)) ($generated@@157 0)) (= ($generated@@188 $generated@@203 ($generated@@157 3)) ($generated@@157 0)))))
 :pattern ( ($generated@@164 ($generated@@165 ($generated@@165 $generated@@174)) $generated@@203))
)))))
(let (($generated@@204  (=> (and (and (and ($generated@@195 $generated@@196) ($generated@@197 $generated@@196)) (= $generated@@198 $generated@@196)) (and (forall (($generated@@205 Int) ) (!  (=> (and (<= ($generated@@157 0) $generated@@205) (<= ($generated@@157 0) $generated@@205)) (= (= ($generated@@188 ($generated@@164 ($generated@@165 $generated@@174) $generated@@205) ($generated@@157 2)) ($generated@@157 0)) (= ($generated@@188 $generated@@205 ($generated@@157 3)) ($generated@@157 0))))
 :pattern ( ($generated@@164 ($generated@@165 $generated@@174) $generated@@205))
)) (= (ControlFlow 0 4) 3))) $generated@@202)))
(let (($generated@@206 true))
(let (($generated@@207  (=> (= $generated@@199 ($generated@@45 $generated@@200 $generated@@198 $generated@@201 false)) (and (=> (= (ControlFlow 0 5) 1) $generated@@206) (=> (= (ControlFlow 0 5) 4) $generated@@204)))))
(let (($generated@@208  (=> (and (and ($generated@@195 $generated@@198) ($generated@@197 $generated@@198)) (and (= 3 $generated@@163) (= (ControlFlow 0 6) 5))) $generated@@207)))
$generated@@208))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@96 (T@U) Bool)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@115 (T@U T@U T@U) Bool)
(declare-fun $generated@@116 (Int) T@U)
(declare-fun $generated@@117 (T@T T@T) T@T)
(declare-fun $generated@@118 () T@T)
(declare-fun $generated@@119 () T@T)
(declare-fun $generated@@120 (T@T) T@T)
(declare-fun $generated@@121 (T@T) T@T)
(declare-fun $generated@@122 (T@U T@U) T@U)
(declare-fun $generated@@123 (T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@U T@U) T@U)
(declare-fun $generated@@125 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@181 (T@U T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@196 (T@U T@U T@U) T@U)
(declare-fun $generated@@197 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@198 (T@T T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@200 (T@T) T@T)
(declare-fun $generated@@201 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@264 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U) T@U)
(declare-fun $generated@@268 (T@U T@U) Bool)
(declare-fun $generated@@278 (T@U T@U) Bool)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@300 (T@U T@U T@U) Bool)
(declare-fun $generated@@322 (T@T) T@U)
(declare-fun $generated@@323 (T@U) Int)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@325 (T@T) T@T)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@332 () T@U)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@343 (T@U) Int)
(declare-fun $generated@@344 (T@T) T@U)
(declare-fun $generated@@349 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@353 (T@T T@T) T@U)
(declare-fun $generated@@354 (T@T T@T) T@T)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@371 (T@T T@T) T@U)
(declare-fun $generated@@372 (T@T T@T) T@T)
(declare-fun $generated@@373 (T@T) T@T)
(declare-fun $generated@@374 (T@T) T@T)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@433 (T@U) T@U)
(declare-fun $generated@@434 (T@T T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@462 (T@U T@U) T@U)
(declare-fun $generated@@470 (T@U T@U) T@U)
(declare-fun $generated@@480 (T@T) T@U)
(declare-fun $generated@@504 () T@T)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@552 (T@U) T@U)
(declare-fun $generated@@553 (T@U Int) T@U)
(declare-fun $generated@@562 (T@U) Int)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@576 (T@U) T@U)
(declare-fun $generated@@580 (T@U) T@U)
(declare-fun $generated@@593 (T@U) Int)
(declare-fun $generated@@594 (T@U) Int)
(declare-fun $generated@@678 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (and (= ($generated@@1 $generated@@78) 11) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= (type ($generated@@77 $generated@@83 $generated@@84 $generated@@85 $generated@@86)) $generated@@79)
 :pattern ( ($generated@@77 $generated@@83 $generated@@84 $generated@@85 $generated@@86))
))) (forall (($generated@@87 T@U) ) (! (= (type ($generated@@82 $generated@@87)) $generated@@68)
 :pattern ( ($generated@@82 $generated@@87))
))))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@88) $generated@@68) (= (type $generated@@89) $generated@@78)) (= (type $generated@@90) $generated@@79)) (= (type $generated@@91) $generated@@79)) (or ($generated@@80 $generated@@88 $generated@@90 $generated@@91) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@90 ($generated@@82 $generated@@88)) ($generated@@81 $generated@@91 ($generated@@82 $generated@@88)))))) ($generated@@81 ($generated@@77 $generated@@88 $generated@@89 $generated@@90 $generated@@91) ($generated@@82 $generated@@88)))
 :pattern ( ($generated@@77 $generated@@88 $generated@@89 $generated@@90 $generated@@91))
))))
(assert (forall (($generated@@93 T@U) ) (! (= (type ($generated@@92 $generated@@93)) $generated@@69)
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert (= ($generated@@92 $generated@@44) $generated@@49))
(assert (= ($generated@@92 $generated@@45) $generated@@50))
(assert (= ($generated@@92 $generated@@46) $generated@@51))
(assert (= ($generated@@92 $generated@@47) $generated@@52))
(assert (= ($generated@@92 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (forall (($generated@@101 T@U) ) (! (= (type ($generated@@94 $generated@@101)) $generated@@78)
 :pattern ( ($generated@@94 $generated@@101))
)) (forall (($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(= (type ($generated@@95 $generated@@102)) $generated@@103))
 :pattern ( ($generated@@95 $generated@@102))
))) (forall (($generated@@104 T@U) ) (! (= (type ($generated@@97 $generated@@104)) $generated@@79)
 :pattern ( ($generated@@97 $generated@@104))
))) (= ($generated@@1 $generated@@100) 13)) (forall (($generated@@105 T@U) ) (! (= (type ($generated@@98 $generated@@105)) $generated@@100)
 :pattern ( ($generated@@98 $generated@@105))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= (type ($generated@@99 $generated@@106 $generated@@107)) $generated@@79)
 :pattern ( ($generated@@99 $generated@@106 $generated@@107))
))))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@108) $generated@@68) (= (type $generated@@109) $generated@@78)) (= (type $generated@@110) $generated@@79)) (= (type $generated@@111) $generated@@79)) (or ($generated@@80 $generated@@108 ($generated@@95 $generated@@110) $generated@@111) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@110 ($generated@@82 $generated@@108)) ($generated@@81 $generated@@111 ($generated@@82 $generated@@108)))))) (and (=> (not ($generated@@0 ($generated@@95 ($generated@@11 ($generated@@96 ($generated@@95 $generated@@110)))))) (let (($generated@@112 ($generated@@95 ($generated@@97 ($generated@@95 $generated@@110)))))
($generated@@80 $generated@@108 $generated@@112 $generated@@111))) (= ($generated@@77 $generated@@108 ($generated@@94 $generated@@109) ($generated@@95 $generated@@110) $generated@@111) (ite ($generated@@96 ($generated@@95 $generated@@110)) $generated@@111 (let (($generated@@113 ($generated@@95 ($generated@@97 ($generated@@95 $generated@@110)))))
(let (($generated@@114 ($generated@@95 ($generated@@98 ($generated@@95 $generated@@110)))))
($generated@@99 $generated@@114 ($generated@@77 $generated@@108 ($generated@@94 $generated@@109) $generated@@113 $generated@@111))))))))
 :weight 3
 :pattern ( ($generated@@77 $generated@@108 ($generated@@94 $generated@@109) ($generated@@95 $generated@@110) $generated@@111))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ) (= ($generated@@1 ($generated@@117 $generated@@126 $generated@@127)) 14)) (forall (($generated@@128 T@T) ($generated@@129 T@T) ) (! (= ($generated@@120 ($generated@@117 $generated@@128 $generated@@129)) $generated@@128)
 :pattern ( ($generated@@117 $generated@@128 $generated@@129))
))) (forall (($generated@@130 T@T) ($generated@@131 T@T) ) (! (= ($generated@@121 ($generated@@117 $generated@@130 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@117 $generated@@130 $generated@@131))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@121 (type $generated@@132))))
(= (type ($generated@@122 $generated@@132 $generated@@133)) $generated@@134))
 :pattern ( ($generated@@122 $generated@@132 $generated@@133))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(let (($generated@@139 (type $generated@@136)))
(= (type ($generated@@123 $generated@@135 $generated@@136 $generated@@137)) ($generated@@117 $generated@@139 $generated@@138))))
 :pattern ( ($generated@@123 $generated@@135 $generated@@136 $generated@@137))
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (let (($generated@@143 ($generated@@121 (type $generated@@140))))
 (=> (= (type $generated@@142) $generated@@143) (= ($generated@@122 ($generated@@123 $generated@@140 $generated@@141 $generated@@142) $generated@@141) $generated@@142)))
 :weight 0
))) (and (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@146 $generated@@147) (= ($generated@@122 ($generated@@123 $generated@@145 $generated@@146 $generated@@144) $generated@@147) ($generated@@122 $generated@@145 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or true (= ($generated@@122 ($generated@@123 $generated@@149 $generated@@150 $generated@@148) $generated@@151) ($generated@@122 $generated@@149 $generated@@151)))
 :weight 0
)))) (= ($generated@@1 $generated@@118) 15)) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@71 (type $generated@@153))))
(= (type ($generated@@124 $generated@@152 $generated@@153)) $generated@@154))
 :pattern ( ($generated@@124 $generated@@152 $generated@@153))
))) (= ($generated@@1 $generated@@119) 16)) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@125 $generated@@155 $generated@@156 $generated@@157)) $generated@@119)
 :pattern ( ($generated@@125 $generated@@155 $generated@@156 $generated@@157))
))) (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@71 (type $generated@@159))))
 (=> (= (type $generated@@160) $generated@@161) (= ($generated@@124 ($generated@@125 $generated@@158 $generated@@159 $generated@@160) $generated@@159) $generated@@160)))
 :weight 0
))) (and (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@164 $generated@@165) (= ($generated@@124 ($generated@@125 $generated@@163 $generated@@164 $generated@@162) $generated@@165) ($generated@@124 $generated@@163 $generated@@165)))
 :weight 0
)) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or true (= ($generated@@124 ($generated@@125 $generated@@167 $generated@@168 $generated@@166) $generated@@169) ($generated@@124 $generated@@167 $generated@@169)))
 :weight 0
)))) (forall (($generated@@170 Int) ) (! (= (type ($generated@@116 $generated@@170)) $generated@@68)
 :pattern ( ($generated@@116 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (= (type $generated@@171) $generated@@2) (= (type $generated@@172) ($generated@@117 $generated@@118 $generated@@119))) ($generated@@115 $generated@@171 ($generated@@116 0) $generated@@172))
 :pattern ( ($generated@@115 $generated@@171 ($generated@@116 0) $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@2) ($generated@@81 $generated@@173 ($generated@@116 0)))
 :pattern ( ($generated@@81 $generated@@173 ($generated@@116 0)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@176 $generated@@177)) $generated@@68)
 :pattern ( ($generated@@175 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (and (= (type $generated@@178) $generated@@68) (= (type $generated@@179) $generated@@68)) (= (type $generated@@180) $generated@@79)) ($generated@@81 $generated@@180 ($generated@@175 $generated@@178 $generated@@179))) ($generated@@174 $generated@@180))
 :pattern ( ($generated@@174 $generated@@180) ($generated@@81 $generated@@180 ($generated@@175 $generated@@178 $generated@@179)))
)))
(assert  (and (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@100)
 :pattern ( ($generated@@182 $generated@@184))
)) (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@100)
 :pattern ( ($generated@@183 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) $generated@@79) (= (type $generated@@187) $generated@@79)) true) (= ($generated@@181 $generated@@186 $generated@@187)  (and (= ($generated@@182 $generated@@186) ($generated@@182 $generated@@187)) (= ($generated@@183 $generated@@186) ($generated@@183 $generated@@187)))))
 :pattern ( ($generated@@181 $generated@@186 $generated@@187))
)))
(assert  (and (forall (($generated@@190 T@U) ) (! (= (type ($generated@@188 $generated@@190)) $generated@@72)
 :pattern ( ($generated@@188 $generated@@190))
)) (= (type $generated@@189) $generated@@79)))
(assert (= ($generated@@188 $generated@@189) $generated@@63))
(assert (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@68)
 :pattern ( ($generated@@191 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (= (type $generated@@194) ($generated@@117 $generated@@100 $generated@@2)) (= (type $generated@@195) $generated@@68)) ($generated@@81 $generated@@194 ($generated@@191 $generated@@195))) ($generated@@192 $generated@@194))
 :pattern ( ($generated@@81 $generated@@194 ($generated@@191 $generated@@195)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (= ($generated@@1 ($generated@@198 $generated@@202 $generated@@203)) 17)) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@199 ($generated@@198 $generated@@204 $generated@@205)) $generated@@204)
 :pattern ( ($generated@@198 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@T) ($generated@@207 T@T) ) (! (= ($generated@@200 ($generated@@198 $generated@@206 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@198 $generated@@206 $generated@@207))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@200 (type $generated@@208))))
(= (type ($generated@@196 $generated@@208 $generated@@209 $generated@@210)) $generated@@211))
 :pattern ( ($generated@@196 $generated@@208 $generated@@209 $generated@@210))
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 (type $generated@@215)))
(let (($generated@@217 (type $generated@@213)))
(= (type ($generated@@201 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@198 $generated@@217 $generated@@216))))
 :pattern ( ($generated@@201 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@200 (type $generated@@218))))
 (=> (= (type $generated@@221) $generated@@222) (= ($generated@@196 ($generated@@201 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@219 $generated@@220) $generated@@221)))
 :weight 0
))) (and (and (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@196 ($generated@@201 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@196 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
)) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or (= $generated@@232 $generated@@234) (= ($generated@@196 ($generated@@201 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@196 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (or true (= ($generated@@196 ($generated@@201 $generated@@236 $generated@@237 $generated@@238 $generated@@235) $generated@@239 $generated@@240) ($generated@@196 $generated@@236 $generated@@239 $generated@@240)))
 :weight 0
)))) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Bool) ) (! (= (type ($generated@@197 $generated@@241 $generated@@242 $generated@@243 $generated@@244)) ($generated@@198 $generated@@118 $generated@@4))
 :pattern ( ($generated@@197 $generated@@241 $generated@@242 $generated@@243 $generated@@244))
))))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 Bool) ($generated@@249 T@U) ($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@71 (type $generated@@250))))
 (=> (and (and (and (and (= (type $generated@@245) $generated@@118) (= (type $generated@@246) ($generated@@117 $generated@@118 $generated@@119))) (= (type $generated@@247) ($generated@@70 $generated@@4))) (= (type $generated@@249) $generated@@118)) (= (type $generated@@250) ($generated@@70 $generated@@251))) (= ($generated@@0 ($generated@@196 ($generated@@197 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249 $generated@@250))  (=> (and (not (= $generated@@249 $generated@@245)) ($generated@@0 ($generated@@124 ($generated@@122 $generated@@246 $generated@@249) $generated@@247))) $generated@@248))))
 :pattern ( ($generated@@196 ($generated@@197 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 Bool) ) (! (= (type ($generated@@252 $generated@@253 $generated@@254 $generated@@255 $generated@@256)) ($generated@@198 $generated@@118 $generated@@4))
 :pattern ( ($generated@@252 $generated@@253 $generated@@254 $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 Bool) ($generated@@261 T@U) ($generated@@262 T@U) ) (! (let (($generated@@263 ($generated@@71 (type $generated@@262))))
 (=> (and (and (and (and (= (type $generated@@257) $generated@@118) (= (type $generated@@258) ($generated@@117 $generated@@118 $generated@@119))) (= (type $generated@@259) ($generated@@70 $generated@@4))) (= (type $generated@@261) $generated@@118)) (= (type $generated@@262) ($generated@@70 $generated@@263))) (= ($generated@@0 ($generated@@196 ($generated@@252 $generated@@257 $generated@@258 $generated@@259 $generated@@260) $generated@@261 $generated@@262))  (=> (and (not (= $generated@@261 $generated@@257)) ($generated@@0 ($generated@@124 ($generated@@122 $generated@@258 $generated@@261) $generated@@259))) $generated@@260))))
 :pattern ( ($generated@@196 ($generated@@252 $generated@@257 $generated@@258 $generated@@259 $generated@@260) $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (= (type $generated@@265) $generated@@68) (= (type $generated@@266) ($generated@@117 $generated@@118 $generated@@119))) ($generated@@264 $generated@@266)) ($generated@@115 $generated@@189 ($generated@@82 $generated@@265) $generated@@266))
 :pattern ( ($generated@@115 $generated@@189 ($generated@@82 $generated@@265) $generated@@266))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (! (= (type ($generated@@267 $generated@@269 $generated@@270)) $generated@@79)
 :pattern ( ($generated@@267 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (= (type $generated@@271) $generated@@68) (= (type $generated@@272) $generated@@68)) (= (type $generated@@273) $generated@@100)) (= (type $generated@@274) $generated@@100)) (= ($generated@@81 ($generated@@267 $generated@@273 $generated@@274) ($generated@@175 $generated@@271 $generated@@272))  (and ($generated@@268 $generated@@273 $generated@@271) ($generated@@268 $generated@@274 $generated@@272))))
 :pattern ( ($generated@@81 ($generated@@267 $generated@@273 $generated@@274) ($generated@@175 $generated@@271 $generated@@272)))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@68) ($generated@@81 $generated@@189 ($generated@@82 $generated@@275)))
 :pattern ( ($generated@@81 $generated@@189 ($generated@@82 $generated@@275)))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@79) (= (type $generated@@277) $generated@@79)) (= ($generated@@181 $generated@@276 $generated@@277) (= $generated@@276 $generated@@277)))
 :pattern ( ($generated@@181 $generated@@276 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) $generated@@79) (= (type $generated@@280) $generated@@79)) (= ($generated@@278 $generated@@279 $generated@@280) (= $generated@@279 $generated@@280)))
 :pattern ( ($generated@@278 $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (= (type $generated@@282) $generated@@79) (= (type $generated@@283) $generated@@79)) (and ($generated@@281 $generated@@282) ($generated@@281 $generated@@283))) (= ($generated@@278 $generated@@282 $generated@@283)  (and (= ($generated@@98 $generated@@282) ($generated@@98 $generated@@283)) ($generated@@278 ($generated@@97 $generated@@282) ($generated@@97 $generated@@283)))))
 :pattern ( ($generated@@278 $generated@@282 $generated@@283) ($generated@@281 $generated@@282))
 :pattern ( ($generated@@278 $generated@@282 $generated@@283) ($generated@@281 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (= (type ($generated@@284 $generated@@285)) $generated@@68)
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (= (type $generated@@286) ($generated@@117 $generated@@100 $generated@@4)) (= (type $generated@@287) $generated@@68)) (= ($generated@@81 $generated@@286 ($generated@@284 $generated@@287)) (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@100) ($generated@@0 ($generated@@122 $generated@@286 $generated@@288))) ($generated@@268 $generated@@288 $generated@@287))
 :pattern ( ($generated@@122 $generated@@286 $generated@@288))
))))
 :pattern ( ($generated@@81 $generated@@286 ($generated@@284 $generated@@287)))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@68)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) ($generated@@117 $generated@@100 $generated@@4)) (= (type $generated@@292) $generated@@68)) (= ($generated@@81 $generated@@291 ($generated@@289 $generated@@292)) (forall (($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@100) ($generated@@0 ($generated@@122 $generated@@291 $generated@@293))) ($generated@@268 $generated@@293 $generated@@292))
 :pattern ( ($generated@@122 $generated@@291 $generated@@293))
))))
 :pattern ( ($generated@@81 $generated@@291 ($generated@@289 $generated@@292)))
)))
(assert (forall (($generated@@294 T@U) ) (! (= ($generated@@95 $generated@@294) $generated@@294)
 :pattern ( ($generated@@95 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (= (type $generated@@295) $generated@@79) (= (type $generated@@296) $generated@@79)) (and ($generated@@96 $generated@@295) ($generated@@96 $generated@@296))) (= ($generated@@278 $generated@@295 $generated@@296) true))
 :pattern ( ($generated@@278 $generated@@295 $generated@@296) ($generated@@96 $generated@@295))
 :pattern ( ($generated@@278 $generated@@295 $generated@@296) ($generated@@96 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (= (type $generated@@297) $generated@@68) (= (type $generated@@298) $generated@@100)) (= (type $generated@@299) $generated@@79)) (= ($generated@@81 ($generated@@99 $generated@@298 $generated@@299) ($generated@@82 $generated@@297))  (and ($generated@@268 $generated@@298 $generated@@297) ($generated@@81 $generated@@299 ($generated@@82 $generated@@297)))))
 :pattern ( ($generated@@81 ($generated@@99 $generated@@298 $generated@@299) ($generated@@82 $generated@@297)))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@301) $generated@@68) (= (type $generated@@302) $generated@@68)) (= (type $generated@@303) $generated@@100)) (= (type $generated@@304) $generated@@100)) (= (type $generated@@305) ($generated@@117 $generated@@118 $generated@@119))) ($generated@@264 $generated@@305)) (= ($generated@@115 ($generated@@267 $generated@@303 $generated@@304) ($generated@@175 $generated@@301 $generated@@302) $generated@@305)  (and ($generated@@300 $generated@@303 $generated@@301 $generated@@305) ($generated@@300 $generated@@304 $generated@@302 $generated@@305))))
 :pattern ( ($generated@@115 ($generated@@267 $generated@@303 $generated@@304) ($generated@@175 $generated@@301 $generated@@302) $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@79) (= ($generated@@174 $generated@@306) (= ($generated@@188 $generated@@306) $generated@@61)))
 :pattern ( ($generated@@174 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@79) (= ($generated@@96 $generated@@307) (= ($generated@@188 $generated@@307) $generated@@63)))
 :pattern ( ($generated@@96 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@79) (= ($generated@@281 $generated@@308) (= ($generated@@188 $generated@@308) $generated@@65)))
 :pattern ( ($generated@@281 $generated@@308))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@309) $generated@@68) (= (type $generated@@310) $generated@@78)) (= (type $generated@@311) $generated@@79)) (= (type $generated@@312) $generated@@79)) (or ($generated@@80 $generated@@309 ($generated@@95 $generated@@311) ($generated@@95 $generated@@312)) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@311 ($generated@@82 $generated@@309)) ($generated@@81 $generated@@312 ($generated@@82 $generated@@309)))))) (and (=> (not ($generated@@0 ($generated@@95 ($generated@@11 ($generated@@96 ($generated@@95 $generated@@311)))))) (let (($generated@@313 ($generated@@95 ($generated@@97 ($generated@@95 $generated@@311)))))
($generated@@80 $generated@@309 $generated@@313 ($generated@@95 $generated@@312)))) (= ($generated@@77 $generated@@309 ($generated@@94 $generated@@310) ($generated@@95 $generated@@311) ($generated@@95 $generated@@312)) (ite ($generated@@96 ($generated@@95 $generated@@311)) $generated@@312 (let (($generated@@314 ($generated@@95 ($generated@@97 ($generated@@95 $generated@@311)))))
(let (($generated@@315 ($generated@@95 ($generated@@98 ($generated@@95 $generated@@311)))))
($generated@@95 ($generated@@99 $generated@@315 ($generated@@95 ($generated@@77 $generated@@309 ($generated@@94 $generated@@310) $generated@@314 ($generated@@95 $generated@@312)))))))))))
 :weight 3
 :pattern ( ($generated@@77 $generated@@309 ($generated@@94 $generated@@310) ($generated@@95 $generated@@311) ($generated@@95 $generated@@312)))
))))
(assert (forall (($generated@@316 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@79) ($generated@@174 $generated@@316)) (exists (($generated@@317 T@U) ($generated@@318 T@U) ) (!  (and (and (= (type $generated@@317) $generated@@100) (= (type $generated@@318) $generated@@100)) (= $generated@@316 ($generated@@267 $generated@@317 $generated@@318)))
 :no-pattern (type $generated@@317)
 :no-pattern (type $generated@@318)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
 :no-pattern ($generated $generated@@318)
 :no-pattern ($generated@@0 $generated@@318)
)))
 :pattern ( ($generated@@174 $generated@@316))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@79) ($generated@@281 $generated@@319)) (exists (($generated@@320 T@U) ($generated@@321 T@U) ) (!  (and (and (= (type $generated@@320) $generated@@100) (= (type $generated@@321) $generated@@79)) (= $generated@@319 ($generated@@99 $generated@@320 $generated@@321)))
 :no-pattern (type $generated@@320)
 :no-pattern (type $generated@@321)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
 :no-pattern ($generated $generated@@321)
 :no-pattern ($generated@@0 $generated@@321)
)))
 :pattern ( ($generated@@281 $generated@@319))
)))
(assert  (and (and (forall (($generated@@326 T@T) ) (= ($generated@@1 ($generated@@324 $generated@@326)) 18)) (forall (($generated@@327 T@T) ) (! (= ($generated@@325 ($generated@@324 $generated@@327)) $generated@@327)
 :pattern ( ($generated@@324 $generated@@327))
))) (forall (($generated@@328 T@T) ) (! (= (type ($generated@@322 $generated@@328)) ($generated@@324 $generated@@328))
 :pattern ( ($generated@@322 $generated@@328))
))))
(assert (forall (($generated@@329 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@329)) 0)
 :pattern ( ($generated@@322 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@79) ($generated@@96 $generated@@330)) (= $generated@@330 $generated@@189))
 :pattern ( ($generated@@96 $generated@@330))
)))
(assert  (and (forall (($generated@@333 T@U) ) (! (= (type ($generated@@331 $generated@@333)) $generated@@78)
 :pattern ( ($generated@@331 $generated@@333))
)) (= (type $generated@@332) $generated@@78)))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (and (= (type $generated@@334) $generated@@68) (= (type $generated@@335) $generated@@78)) (= (type $generated@@336) $generated@@79)) (= (type $generated@@337) $generated@@79)) (= ($generated@@77 $generated@@334 $generated@@335 $generated@@336 $generated@@337) ($generated@@77 $generated@@334 $generated@@332 $generated@@336 $generated@@337)))
 :pattern ( ($generated@@77 $generated@@334 ($generated@@331 $generated@@335) $generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (= (type ($generated@@338 $generated@@339)) $generated@@100)
 :pattern ( ($generated@@338 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@68) (= (type $generated@@342) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@300 ($generated@@338 $generated@@340) $generated@@341 $generated@@342) ($generated@@115 $generated@@340 $generated@@341 $generated@@342)))
 :pattern ( ($generated@@300 ($generated@@338 $generated@@340) $generated@@341 $generated@@342))
)))
(assert (forall (($generated@@345 T@T) ) (! (= (type ($generated@@344 $generated@@345)) ($generated@@117 $generated@@345 $generated@@2))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@120 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@117 $generated@@347 $generated@@2)) (and (= (= ($generated@@343 $generated@@346) 0) (= $generated@@346 ($generated@@344 $generated@@347))) (=> (not (= ($generated@@343 $generated@@346) 0)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@347) (< 0 ($generated ($generated@@122 $generated@@346 $generated@@348))))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ) (! (= (type ($generated@@349 $generated@@350)) $generated@@73)
 :pattern ( ($generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (= (type $generated@@351) $generated@@68) (and (= ($generated@@92 ($generated@@82 $generated@@351)) $generated@@64) (= ($generated@@349 ($generated@@82 $generated@@351)) $generated@@67)))
 :pattern ( ($generated@@82 $generated@@351))
)))
(assert  (and (and (and (and (forall (($generated@@357 T@T) ($generated@@358 T@T) ) (= ($generated@@1 ($generated@@354 $generated@@357 $generated@@358)) 19)) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= ($generated@@355 ($generated@@354 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@354 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@T) ($generated@@362 T@T) ) (! (= ($generated@@356 ($generated@@354 $generated@@361 $generated@@362)) $generated@@362)
 :pattern ( ($generated@@354 $generated@@361 $generated@@362))
))) (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@355 (type $generated@@363))))
(= (type ($generated@@352 $generated@@363)) ($generated@@117 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@352 $generated@@363))
))) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= (type ($generated@@353 $generated@@365 $generated@@366)) ($generated@@354 $generated@@365 $generated@@366))
 :pattern ( ($generated@@353 $generated@@365 $generated@@366))
))))
(assert (forall (($generated@@367 T@U) ($generated@@368 T@T) ) (! (let (($generated@@369 (type $generated@@367)))
 (not ($generated@@0 ($generated@@122 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367))))
 :pattern ( (let (($generated@@369 (type $generated@@367)))
($generated@@122 ($generated@@352 ($generated@@353 $generated@@369 $generated@@368)) $generated@@367)))
)))
(assert  (and (and (and (and (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (= ($generated@@1 ($generated@@372 $generated@@375 $generated@@376)) 20)) (forall (($generated@@377 T@T) ($generated@@378 T@T) ) (! (= ($generated@@373 ($generated@@372 $generated@@377 $generated@@378)) $generated@@377)
 :pattern ( ($generated@@372 $generated@@377 $generated@@378))
))) (forall (($generated@@379 T@T) ($generated@@380 T@T) ) (! (= ($generated@@374 ($generated@@372 $generated@@379 $generated@@380)) $generated@@380)
 :pattern ( ($generated@@372 $generated@@379 $generated@@380))
))) (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@373 (type $generated@@381))))
(= (type ($generated@@370 $generated@@381)) ($generated@@117 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@381))
))) (forall (($generated@@383 T@T) ($generated@@384 T@T) ) (! (= (type ($generated@@371 $generated@@383 $generated@@384)) ($generated@@372 $generated@@383 $generated@@384))
 :pattern ( ($generated@@371 $generated@@383 $generated@@384))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@T) ) (! (let (($generated@@387 (type $generated@@385)))
 (not ($generated@@0 ($generated@@122 ($generated@@370 ($generated@@371 $generated@@387 $generated@@386)) $generated@@385))))
 :pattern ( (let (($generated@@387 (type $generated@@385)))
($generated@@122 ($generated@@370 ($generated@@371 $generated@@387 $generated@@386)) $generated@@385)))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@120 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@117 $generated@@389 $generated@@2)) (= ($generated@@192 $generated@@388) (forall (($generated@@390 T@U) ) (!  (=> (= (type $generated@@390) $generated@@389) (and (<= 0 ($generated ($generated@@122 $generated@@388 $generated@@390))) (<= ($generated ($generated@@122 $generated@@388 $generated@@390)) ($generated@@343 $generated@@388))))
 :pattern ( ($generated@@122 $generated@@388 $generated@@390))
)))))
 :pattern ( ($generated@@192 $generated@@388))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@356 (type $generated@@391))))
(let (($generated@@393 ($generated@@355 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@354 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@353 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) ($generated@@0 ($generated@@122 ($generated@@352 $generated@@391) $generated@@394)))
 :no-pattern (type $generated@@394)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
))))))
 :pattern ( ($generated@@352 $generated@@391))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@356 (type $generated@@396))))
(= (type ($generated@@395 $generated@@396)) ($generated@@117 $generated@@397 $generated@@4)))
 :pattern ( ($generated@@395 $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@356 (type $generated@@398))))
(let (($generated@@400 ($generated@@355 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@354 $generated@@400 $generated@@399)) (or (= $generated@@398 ($generated@@353 $generated@@400 $generated@@399)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@399) ($generated@@0 ($generated@@122 ($generated@@395 $generated@@398) $generated@@401)))
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@395 $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@374 (type $generated@@402))))
(let (($generated@@404 ($generated@@373 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@372 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@371 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@404) ($generated@@0 ($generated@@122 ($generated@@370 $generated@@402) $generated@@405)))
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@370 $generated@@402))
)))
(assert (forall (($generated@@407 T@U) ) (! (let (($generated@@408 ($generated@@374 (type $generated@@407))))
(= (type ($generated@@406 $generated@@407)) ($generated@@117 $generated@@408 $generated@@4)))
 :pattern ( ($generated@@406 $generated@@407))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@374 (type $generated@@409))))
(let (($generated@@411 ($generated@@373 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@372 $generated@@411 $generated@@410)) (or (= $generated@@409 ($generated@@371 $generated@@411 $generated@@410)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@410) ($generated@@0 ($generated@@122 ($generated@@406 $generated@@409) $generated@@412)))
 :no-pattern (type $generated@@412)
 :no-pattern ($generated $generated@@412)
 :no-pattern ($generated@@0 $generated@@412)
))))))
 :pattern ( ($generated@@406 $generated@@409))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@413) ($generated@@117 $generated@@100 $generated@@2)) (= (type $generated@@414) $generated@@68)) (= ($generated@@81 $generated@@413 ($generated@@191 $generated@@414)) (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@100) (< 0 ($generated ($generated@@122 $generated@@413 $generated@@415)))) ($generated@@268 $generated@@415 $generated@@414))
 :pattern ( ($generated@@122 $generated@@413 $generated@@415))
))))
 :pattern ( ($generated@@81 $generated@@413 ($generated@@191 $generated@@414)))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@416) $generated@@68) (= (type $generated@@417) $generated@@78)) (= (type $generated@@418) $generated@@79)) (= (type $generated@@419) $generated@@79)) (or ($generated@@80 $generated@@416 $generated@@418 $generated@@419) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@418 ($generated@@82 $generated@@416)) ($generated@@81 $generated@@419 ($generated@@82 $generated@@416)))))) (and (=> (not ($generated@@96 $generated@@418)) (let (($generated@@420 ($generated@@97 $generated@@418)))
($generated@@80 $generated@@416 $generated@@420 $generated@@419))) (= ($generated@@77 $generated@@416 ($generated@@94 $generated@@417) $generated@@418 $generated@@419) (ite ($generated@@96 $generated@@418) $generated@@419 (let (($generated@@421 ($generated@@97 $generated@@418)))
(let (($generated@@422 ($generated@@98 $generated@@418)))
($generated@@99 $generated@@422 ($generated@@77 $generated@@416 $generated@@417 $generated@@421 $generated@@419))))))))
 :pattern ( ($generated@@77 $generated@@416 ($generated@@94 $generated@@417) $generated@@418 $generated@@419))
))))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (and (= (type $generated@@423) ($generated@@117 $generated@@100 $generated@@4)) (= (type $generated@@424) $generated@@68)) (= (type $generated@@425) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@115 $generated@@423 ($generated@@284 $generated@@424) $generated@@425) (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@100) ($generated@@0 ($generated@@122 $generated@@423 $generated@@426))) ($generated@@300 $generated@@426 $generated@@424 $generated@@425))
 :pattern ( ($generated@@122 $generated@@423 $generated@@426))
))))
 :pattern ( ($generated@@115 $generated@@423 ($generated@@284 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (= (type $generated@@427) ($generated@@117 $generated@@100 $generated@@4)) (= (type $generated@@428) $generated@@68)) (= (type $generated@@429) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@115 $generated@@427 ($generated@@289 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@100) ($generated@@0 ($generated@@122 $generated@@427 $generated@@430))) ($generated@@300 $generated@@430 $generated@@428 $generated@@429))
 :pattern ( ($generated@@122 $generated@@427 $generated@@430))
))))
 :pattern ( ($generated@@115 $generated@@427 ($generated@@289 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 (type $generated@@431)))
(= ($generated ($generated@@122 ($generated@@344 $generated@@432) $generated@@431)) 0))
 :pattern ( (let (($generated@@432 (type $generated@@431)))
($generated@@122 ($generated@@344 $generated@@432) $generated@@431)))
)))
(assert  (and (and (forall (($generated@@436 T@U) ) (! (= (type ($generated@@433 $generated@@436)) ($generated@@117 $generated@@100 $generated@@4))
 :pattern ( ($generated@@433 $generated@@436))
)) (forall (($generated@@437 T@T) ($generated@@438 T@U) ) (! (= (type ($generated@@434 $generated@@437 $generated@@438)) $generated@@437)
 :pattern ( ($generated@@434 $generated@@437 $generated@@438))
))) (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@356 (type $generated@@439))))
(let (($generated@@441 ($generated@@355 (type $generated@@439))))
(= (type ($generated@@435 $generated@@439)) ($generated@@117 $generated@@441 $generated@@440))))
 :pattern ( ($generated@@435 $generated@@439))
))))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@354 $generated@@100 $generated@@100)) (= (type $generated@@443) $generated@@100)) (= ($generated@@0 ($generated@@122 ($generated@@433 $generated@@442) $generated@@443))  (and ($generated@@0 ($generated@@122 ($generated@@352 $generated@@442) ($generated@@182 ($generated@@434 $generated@@79 $generated@@443)))) (= ($generated@@122 ($generated@@435 $generated@@442) ($generated@@182 ($generated@@434 $generated@@79 $generated@@443))) ($generated@@183 ($generated@@434 $generated@@79 $generated@@443))))))
 :pattern ( ($generated@@122 ($generated@@433 $generated@@442) $generated@@443))
)))
(assert  (and (forall (($generated@@446 T@U) ) (! (= (type ($generated@@444 $generated@@446)) ($generated@@117 $generated@@100 $generated@@4))
 :pattern ( ($generated@@444 $generated@@446))
)) (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@374 (type $generated@@447))))
(let (($generated@@449 ($generated@@373 (type $generated@@447))))
(= (type ($generated@@445 $generated@@447)) ($generated@@117 $generated@@449 $generated@@448))))
 :pattern ( ($generated@@445 $generated@@447))
))))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) ($generated@@372 $generated@@100 $generated@@100)) (= (type $generated@@451) $generated@@100)) (= ($generated@@0 ($generated@@122 ($generated@@444 $generated@@450) $generated@@451))  (and ($generated@@0 ($generated@@122 ($generated@@370 $generated@@450) ($generated@@182 ($generated@@434 $generated@@79 $generated@@451)))) (= ($generated@@122 ($generated@@445 $generated@@450) ($generated@@182 ($generated@@434 $generated@@79 $generated@@451))) ($generated@@183 ($generated@@434 $generated@@79 $generated@@451))))))
 :pattern ( ($generated@@122 ($generated@@444 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (let (($generated@@454 (type $generated@@453)))
(let (($generated@@455 ($generated@@355 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@354 $generated@@455 $generated@@454)) (= ($generated@@0 ($generated@@122 ($generated@@395 $generated@@452) $generated@@453)) (exists (($generated@@456 T@U) ) (!  (and (= (type $generated@@456) $generated@@455) (and ($generated@@0 ($generated@@122 ($generated@@352 $generated@@452) $generated@@456)) (= $generated@@453 ($generated@@122 ($generated@@435 $generated@@452) $generated@@456))))
 :pattern ( ($generated@@122 ($generated@@352 $generated@@452) $generated@@456))
 :pattern ( ($generated@@122 ($generated@@435 $generated@@452) $generated@@456))
))))))
 :pattern ( ($generated@@122 ($generated@@395 $generated@@452) $generated@@453))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (! (let (($generated@@459 (type $generated@@458)))
(let (($generated@@460 ($generated@@373 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@372 $generated@@460 $generated@@459)) (= ($generated@@0 ($generated@@122 ($generated@@406 $generated@@457) $generated@@458)) (exists (($generated@@461 T@U) ) (!  (and (= (type $generated@@461) $generated@@460) (and ($generated@@0 ($generated@@122 ($generated@@370 $generated@@457) $generated@@461)) (= $generated@@458 ($generated@@122 ($generated@@445 $generated@@457) $generated@@461))))
 :pattern ( ($generated@@122 ($generated@@370 $generated@@457) $generated@@461))
 :pattern ( ($generated@@122 ($generated@@445 $generated@@457) $generated@@461))
))))))
 :pattern ( ($generated@@122 ($generated@@406 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (! (= (type ($generated@@462 $generated@@463 $generated@@464)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (and (and (= (type $generated@@465) ($generated@@354 $generated@@100 $generated@@100)) (= (type $generated@@466) $generated@@68)) (= (type $generated@@467) $generated@@68)) (= (type $generated@@468) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@115 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468) (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@100) ($generated@@0 ($generated@@122 ($generated@@352 $generated@@465) $generated@@469))) (and ($generated@@300 ($generated@@122 ($generated@@435 $generated@@465) $generated@@469) $generated@@467 $generated@@468) ($generated@@300 $generated@@469 $generated@@466 $generated@@468)))
 :pattern ( ($generated@@122 ($generated@@435 $generated@@465) $generated@@469))
 :pattern ( ($generated@@122 ($generated@@352 $generated@@465) $generated@@469))
))))
 :pattern ( ($generated@@115 $generated@@465 ($generated@@462 $generated@@466 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (! (= (type ($generated@@470 $generated@@471 $generated@@472)) $generated@@68)
 :pattern ( ($generated@@470 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (and (and (= (type $generated@@473) ($generated@@372 $generated@@100 $generated@@100)) (= (type $generated@@474) $generated@@68)) (= (type $generated@@475) $generated@@68)) (= (type $generated@@476) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@115 $generated@@473 ($generated@@470 $generated@@474 $generated@@475) $generated@@476) (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@100) ($generated@@0 ($generated@@122 ($generated@@370 $generated@@473) $generated@@477))) (and ($generated@@300 ($generated@@122 ($generated@@445 $generated@@473) $generated@@477) $generated@@475 $generated@@476) ($generated@@300 $generated@@477 $generated@@474 $generated@@476)))
 :pattern ( ($generated@@122 ($generated@@445 $generated@@473) $generated@@477))
 :pattern ( ($generated@@122 ($generated@@370 $generated@@473) $generated@@477))
))))
 :pattern ( ($generated@@115 $generated@@473 ($generated@@470 $generated@@474 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (and (= (type $generated@@478) $generated@@68) (= (type $generated@@479) $generated@@79)) ($generated@@81 $generated@@479 ($generated@@82 $generated@@478))) (or ($generated@@96 $generated@@479) ($generated@@281 $generated@@479)))
 :pattern ( ($generated@@281 $generated@@479) ($generated@@81 $generated@@479 ($generated@@82 $generated@@478)))
 :pattern ( ($generated@@96 $generated@@479) ($generated@@81 $generated@@479 ($generated@@82 $generated@@478)))
)))
(assert (forall (($generated@@481 T@T) ) (! (= (type ($generated@@480 $generated@@481)) ($generated@@117 $generated@@481 $generated@@4))
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@374 (type $generated@@482))))
(let (($generated@@484 ($generated@@373 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@372 $generated@@484 $generated@@483)) (= (= $generated@@482 ($generated@@371 $generated@@484 $generated@@483)) (= ($generated@@370 $generated@@482) ($generated@@480 $generated@@484))))))
 :pattern ( ($generated@@370 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@374 (type $generated@@485))))
(let (($generated@@487 ($generated@@373 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@372 $generated@@487 $generated@@486)) (= (= $generated@@485 ($generated@@371 $generated@@487 $generated@@486)) (= ($generated@@406 $generated@@485) ($generated@@480 $generated@@486))))))
 :pattern ( ($generated@@406 $generated@@485))
)))
(assert (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@374 (type $generated@@488))))
(let (($generated@@490 ($generated@@373 (type $generated@@488))))
 (=> (= (type $generated@@488) ($generated@@372 $generated@@490 $generated@@489)) (= (= $generated@@488 ($generated@@371 $generated@@490 $generated@@489)) (= ($generated@@444 $generated@@488) ($generated@@480 $generated@@100))))))
 :pattern ( ($generated@@444 $generated@@488))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@356 (type $generated@@491))))
(let (($generated@@493 ($generated@@355 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@354 $generated@@493 $generated@@492)) (or (= $generated@@491 ($generated@@353 $generated@@493 $generated@@492)) (exists (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (and (and (= (type $generated@@494) $generated@@100) (= (type $generated@@495) $generated@@100)) ($generated@@0 ($generated@@122 ($generated@@433 $generated@@491) ($generated@@338 ($generated@@267 $generated@@494 $generated@@495)))))
 :no-pattern (type $generated@@494)
 :no-pattern (type $generated@@495)
 :no-pattern ($generated $generated@@494)
 :no-pattern ($generated@@0 $generated@@494)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
))))))
 :pattern ( ($generated@@433 $generated@@491))
)))
(assert (forall (($generated@@496 T@U) ) (! (let (($generated@@497 ($generated@@374 (type $generated@@496))))
(let (($generated@@498 ($generated@@373 (type $generated@@496))))
 (=> (= (type $generated@@496) ($generated@@372 $generated@@498 $generated@@497)) (or (= $generated@@496 ($generated@@371 $generated@@498 $generated@@497)) (exists (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (and (and (= (type $generated@@499) $generated@@100) (= (type $generated@@500) $generated@@100)) ($generated@@0 ($generated@@122 ($generated@@444 $generated@@496) ($generated@@338 ($generated@@267 $generated@@499 $generated@@500)))))
 :no-pattern (type $generated@@499)
 :no-pattern (type $generated@@500)
 :no-pattern ($generated $generated@@499)
 :no-pattern ($generated@@0 $generated@@499)
 :no-pattern ($generated $generated@@500)
 :no-pattern ($generated@@0 $generated@@500)
))))))
 :pattern ( ($generated@@444 $generated@@496))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@100) ($generated@@268 $generated@@501 $generated@@46)) (and (= ($generated@@338 ($generated@@434 $generated@@2 $generated@@501)) $generated@@501) ($generated@@81 ($generated@@434 $generated@@2 $generated@@501) $generated@@46)))
 :pattern ( ($generated@@268 $generated@@501 $generated@@46))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@100) ($generated@@268 $generated@@502 $generated@@47)) (and (= ($generated@@338 ($generated@@434 $generated@@3 $generated@@502)) $generated@@502) ($generated@@81 ($generated@@434 $generated@@3 $generated@@502) $generated@@47)))
 :pattern ( ($generated@@268 $generated@@502 $generated@@47))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@100) ($generated@@268 $generated@@503 $generated@@44)) (and (= ($generated@@338 ($generated@@434 $generated@@4 $generated@@503)) $generated@@503) ($generated@@81 ($generated@@434 $generated@@4 $generated@@503) $generated@@44)))
 :pattern ( ($generated@@268 $generated@@503 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@504) 21))
(assert (forall (($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@100) ($generated@@268 $generated@@505 $generated@@45)) (and (= ($generated@@338 ($generated@@434 $generated@@504 $generated@@505)) $generated@@505) ($generated@@81 ($generated@@434 $generated@@504 $generated@@505) $generated@@45)))
 :pattern ( ($generated@@268 $generated@@505 $generated@@45))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@68) (= ($generated@@268 ($generated@@338 $generated@@506) $generated@@507) ($generated@@81 $generated@@506 $generated@@507)))
 :pattern ( ($generated@@268 ($generated@@338 $generated@@506) $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@120 (type $generated@@508))))
 (=> (= (type $generated@@508) ($generated@@117 $generated@@509 $generated@@2)) (<= 0 ($generated@@343 $generated@@508))))
 :pattern ( ($generated@@343 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (let (($generated@@511 ($generated@@325 (type $generated@@510))))
 (=> (= (type $generated@@510) ($generated@@324 $generated@@511)) (<= 0 ($generated@@323 $generated@@510))))
 :pattern ( ($generated@@323 $generated@@510))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@68) (= (type $generated@@515) $generated@@68)) (= ($generated@@512 ($generated@@462 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@462 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@68)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@68) (= (type $generated@@519) $generated@@68)) (= ($generated@@516 ($generated@@462 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@462 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@68) (= (type $generated@@521) $generated@@68)) (= ($generated@@92 ($generated@@462 $generated@@520 $generated@@521)) $generated@@58))
 :pattern ( ($generated@@462 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@68)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@68) (= (type $generated@@525) $generated@@68)) (= ($generated@@522 ($generated@@470 $generated@@524 $generated@@525)) $generated@@524))
 :pattern ( ($generated@@470 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@68) (= (type $generated@@529) $generated@@68)) (= ($generated@@526 ($generated@@470 $generated@@528 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@470 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@68) (= (type $generated@@531) $generated@@68)) (= ($generated@@92 ($generated@@470 $generated@@530 $generated@@531)) $generated@@59))
 :pattern ( ($generated@@470 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@100) (= (type $generated@@533) $generated@@100)) (= ($generated@@188 ($generated@@267 $generated@@532 $generated@@533)) $generated@@61))
 :pattern ( ($generated@@267 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@68)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@68) (= (type $generated@@537) $generated@@68)) (= ($generated@@534 ($generated@@175 $generated@@536 $generated@@537)) $generated@@536))
 :pattern ( ($generated@@175 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@68)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@68) (= (type $generated@@541) $generated@@68)) (= ($generated@@538 ($generated@@175 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@175 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@100) (= (type $generated@@543) $generated@@100)) (= ($generated@@182 ($generated@@267 $generated@@542 $generated@@543)) $generated@@542))
 :pattern ( ($generated@@267 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@100) (= (type $generated@@545) $generated@@100)) (= ($generated@@183 ($generated@@267 $generated@@544 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@267 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@100) (= (type $generated@@547) $generated@@79)) (= ($generated@@188 ($generated@@99 $generated@@546 $generated@@547)) $generated@@65))
 :pattern ( ($generated@@99 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@100) (= (type $generated@@549) $generated@@79)) (= ($generated@@98 ($generated@@99 $generated@@548 $generated@@549)) $generated@@548))
 :pattern ( ($generated@@99 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@100) (= (type $generated@@551) $generated@@79)) (= ($generated@@97 ($generated@@99 $generated@@550 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@99 $generated@@550 $generated@@551))
)))
(assert  (and (forall (($generated@@554 T@U) ) (! (= (type ($generated@@552 $generated@@554)) $generated@@68)
 :pattern ( ($generated@@552 $generated@@554))
)) (forall (($generated@@555 T@U) ($generated@@556 Int) ) (! (let (($generated@@557 ($generated@@325 (type $generated@@555))))
(= (type ($generated@@553 $generated@@555 $generated@@556)) $generated@@557))
 :pattern ( ($generated@@553 $generated@@555 $generated@@556))
))))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@324 $generated@@100)) (= (type $generated@@559) $generated@@68)) (= (type $generated@@560) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@115 $generated@@558 ($generated@@552 $generated@@559) $generated@@560) (forall (($generated@@561 Int) ) (!  (=> (and (<= 0 $generated@@561) (< $generated@@561 ($generated@@323 $generated@@558))) ($generated@@300 ($generated@@553 $generated@@558 $generated@@561) $generated@@559 $generated@@560))
 :pattern ( ($generated@@553 $generated@@558 $generated@@561))
))))
 :pattern ( ($generated@@115 $generated@@558 ($generated@@552 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@563 Int) ) (! (= ($generated@@562 ($generated@@116 $generated@@563)) $generated@@563)
 :pattern ( ($generated@@116 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@68)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@68) (= ($generated@@564 ($generated@@284 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@284 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@68) (= ($generated@@92 ($generated@@284 $generated@@567)) $generated@@54))
 :pattern ( ($generated@@284 $generated@@567))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@68)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@68) (= ($generated@@568 ($generated@@289 $generated@@570)) $generated@@570))
 :pattern ( ($generated@@289 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@68) (= ($generated@@92 ($generated@@289 $generated@@571)) $generated@@55))
 :pattern ( ($generated@@289 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@68)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@68) (= ($generated@@572 ($generated@@191 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@191 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@68) (= ($generated@@92 ($generated@@191 $generated@@575)) $generated@@56))
 :pattern ( ($generated@@191 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ) (! (= (type ($generated@@576 $generated@@577)) $generated@@68)
 :pattern ( ($generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (= (type $generated@@578) $generated@@68) (= ($generated@@576 ($generated@@552 $generated@@578)) $generated@@578))
 :pattern ( ($generated@@552 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@68) (= ($generated@@92 ($generated@@552 $generated@@579)) $generated@@57))
 :pattern ( ($generated@@552 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ) (! (= (type ($generated@@580 $generated@@581)) $generated@@68)
 :pattern ( ($generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@68) (= ($generated@@580 ($generated@@82 $generated@@582)) $generated@@582))
 :pattern ( ($generated@@82 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@583)))
(= ($generated@@434 $generated@@584 ($generated@@338 $generated@@583)) $generated@@583))
 :pattern ( ($generated@@338 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@585) ($generated@@354 $generated@@100 $generated@@100)) (= (type $generated@@586) $generated@@68)) (= (type $generated@@587) $generated@@68)) (= ($generated@@81 $generated@@585 ($generated@@462 $generated@@586 $generated@@587)) (forall (($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@100) ($generated@@0 ($generated@@122 ($generated@@352 $generated@@585) $generated@@588))) (and ($generated@@268 ($generated@@122 ($generated@@435 $generated@@585) $generated@@588) $generated@@587) ($generated@@268 $generated@@588 $generated@@586)))
 :pattern ( ($generated@@122 ($generated@@435 $generated@@585) $generated@@588))
 :pattern ( ($generated@@122 ($generated@@352 $generated@@585) $generated@@588))
))))
 :pattern ( ($generated@@81 $generated@@585 ($generated@@462 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@589) ($generated@@372 $generated@@100 $generated@@100)) (= (type $generated@@590) $generated@@68)) (= (type $generated@@591) $generated@@68)) (= ($generated@@81 $generated@@589 ($generated@@470 $generated@@590 $generated@@591)) (forall (($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@100) ($generated@@0 ($generated@@122 ($generated@@370 $generated@@589) $generated@@592))) (and ($generated@@268 ($generated@@122 ($generated@@445 $generated@@589) $generated@@592) $generated@@591) ($generated@@268 $generated@@592 $generated@@590)))
 :pattern ( ($generated@@122 ($generated@@445 $generated@@589) $generated@@592))
 :pattern ( ($generated@@122 ($generated@@370 $generated@@589) $generated@@592))
))))
 :pattern ( ($generated@@81 $generated@@589 ($generated@@470 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@100) (= (type $generated@@596) $generated@@100)) (< ($generated@@593 $generated@@595) ($generated@@594 ($generated@@267 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@267 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) $generated@@100) (= (type $generated@@598) $generated@@100)) (< ($generated@@593 $generated@@598) ($generated@@594 ($generated@@267 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@267 $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@100) (= (type $generated@@600) $generated@@79)) (< ($generated@@593 $generated@@599) ($generated@@594 ($generated@@99 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@99 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@100) (= (type $generated@@602) $generated@@79)) (< ($generated@@594 $generated@@602) ($generated@@594 ($generated@@99 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@99 $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@100) (= (type $generated@@604) $generated@@68)) (= (type $generated@@605) $generated@@68)) ($generated@@268 $generated@@603 ($generated@@462 $generated@@604 $generated@@605))) (and (= ($generated@@338 ($generated@@434 ($generated@@354 $generated@@100 $generated@@100) $generated@@603)) $generated@@603) ($generated@@81 ($generated@@434 ($generated@@354 $generated@@100 $generated@@100) $generated@@603) ($generated@@462 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@268 $generated@@603 ($generated@@462 $generated@@604 $generated@@605)))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (and (and (= (type $generated@@606) $generated@@100) (= (type $generated@@607) $generated@@68)) (= (type $generated@@608) $generated@@68)) ($generated@@268 $generated@@606 ($generated@@470 $generated@@607 $generated@@608))) (and (= ($generated@@338 ($generated@@434 ($generated@@372 $generated@@100 $generated@@100) $generated@@606)) $generated@@606) ($generated@@81 ($generated@@434 ($generated@@372 $generated@@100 $generated@@100) $generated@@606) ($generated@@470 $generated@@607 $generated@@608))))
 :pattern ( ($generated@@268 $generated@@606 ($generated@@470 $generated@@607 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (and (= (type $generated@@609) $generated@@68) (= (type $generated@@610) $generated@@68)) (= (type $generated@@611) $generated@@100)) ($generated@@268 $generated@@611 ($generated@@175 $generated@@609 $generated@@610))) (and (= ($generated@@338 ($generated@@434 $generated@@79 $generated@@611)) $generated@@611) ($generated@@81 ($generated@@434 $generated@@79 $generated@@611) ($generated@@175 $generated@@609 $generated@@610))))
 :pattern ( ($generated@@268 $generated@@611 ($generated@@175 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@79) (= (type $generated@@613) $generated@@68)) (= (type $generated@@614) ($generated@@117 $generated@@118 $generated@@119))) (and ($generated@@264 $generated@@614) (and ($generated@@281 $generated@@612) ($generated@@115 $generated@@612 ($generated@@82 $generated@@613) $generated@@614)))) ($generated@@300 ($generated@@98 $generated@@612) $generated@@613 $generated@@614))
 :pattern ( ($generated@@300 ($generated@@98 $generated@@612) $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ) (! (let (($generated@@616 (type $generated@@615)))
 (not ($generated@@0 ($generated@@122 ($generated@@480 $generated@@616) $generated@@615))))
 :pattern ( (let (($generated@@616 (type $generated@@615)))
($generated@@122 ($generated@@480 $generated@@616) $generated@@615)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@68) (= (type $generated@@618) $generated@@68)) (and (= ($generated@@92 ($generated@@175 $generated@@617 $generated@@618)) $generated@@62) (= ($generated@@349 ($generated@@175 $generated@@617 $generated@@618)) $generated@@66)))
 :pattern ( ($generated@@175 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@79) (= ($generated@@593 ($generated@@338 $generated@@619)) ($generated@@594 $generated@@619)))
 :pattern ( ($generated@@593 ($generated@@338 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) $generated@@68) (= (type $generated@@621) $generated@@78)) (= (type $generated@@622) $generated@@79)) (= (type $generated@@623) $generated@@79)) (= ($generated@@77 $generated@@620 ($generated@@94 $generated@@621) $generated@@622 $generated@@623) ($generated@@77 $generated@@620 $generated@@621 $generated@@622 $generated@@623)))
 :pattern ( ($generated@@77 $generated@@620 ($generated@@94 $generated@@621) $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@100) ($generated@@268 $generated@@624 ($generated@@116 0))) (and (= ($generated@@338 ($generated@@434 $generated@@2 $generated@@624)) $generated@@624) ($generated@@81 ($generated@@434 ($generated@@117 $generated@@100 $generated@@4) $generated@@624) ($generated@@116 0))))
 :pattern ( ($generated@@268 $generated@@624 ($generated@@116 0)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (= (type $generated@@625) $generated@@100) (= (type $generated@@626) $generated@@68)) ($generated@@268 $generated@@625 ($generated@@284 $generated@@626))) (and (= ($generated@@338 ($generated@@434 ($generated@@117 $generated@@100 $generated@@4) $generated@@625)) $generated@@625) ($generated@@81 ($generated@@434 ($generated@@117 $generated@@100 $generated@@4) $generated@@625) ($generated@@284 $generated@@626))))
 :pattern ( ($generated@@268 $generated@@625 ($generated@@284 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (= (type $generated@@627) $generated@@100) (= (type $generated@@628) $generated@@68)) ($generated@@268 $generated@@627 ($generated@@289 $generated@@628))) (and (= ($generated@@338 ($generated@@434 ($generated@@117 $generated@@100 $generated@@4) $generated@@627)) $generated@@627) ($generated@@81 ($generated@@434 ($generated@@117 $generated@@100 $generated@@4) $generated@@627) ($generated@@289 $generated@@628))))
 :pattern ( ($generated@@268 $generated@@627 ($generated@@289 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@629) $generated@@100) (= (type $generated@@630) $generated@@68)) ($generated@@268 $generated@@629 ($generated@@191 $generated@@630))) (and (= ($generated@@338 ($generated@@434 ($generated@@117 $generated@@100 $generated@@2) $generated@@629)) $generated@@629) ($generated@@81 ($generated@@434 ($generated@@117 $generated@@100 $generated@@2) $generated@@629) ($generated@@191 $generated@@630))))
 :pattern ( ($generated@@268 $generated@@629 ($generated@@191 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (= (type $generated@@631) $generated@@100) (= (type $generated@@632) $generated@@68)) ($generated@@268 $generated@@631 ($generated@@552 $generated@@632))) (and (= ($generated@@338 ($generated@@434 ($generated@@324 $generated@@100) $generated@@631)) $generated@@631) ($generated@@81 ($generated@@434 ($generated@@324 $generated@@100) $generated@@631) ($generated@@552 $generated@@632))))
 :pattern ( ($generated@@268 $generated@@631 ($generated@@552 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (= (type $generated@@633) $generated@@68) (= (type $generated@@634) $generated@@100)) ($generated@@268 $generated@@634 ($generated@@82 $generated@@633))) (and (= ($generated@@338 ($generated@@434 $generated@@79 $generated@@634)) $generated@@634) ($generated@@81 ($generated@@434 $generated@@79 $generated@@634) ($generated@@82 $generated@@633))))
 :pattern ( ($generated@@268 $generated@@634 ($generated@@82 $generated@@633)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) $generated@@79) (= (type $generated@@636) $generated@@68)) (= (type $generated@@637) ($generated@@117 $generated@@118 $generated@@119))) (and ($generated@@264 $generated@@637) (and ($generated@@281 $generated@@635) ($generated@@115 $generated@@635 ($generated@@82 $generated@@636) $generated@@637)))) ($generated@@115 ($generated@@97 $generated@@635) ($generated@@82 $generated@@636) $generated@@637))
 :pattern ( ($generated@@115 ($generated@@97 $generated@@635) ($generated@@82 $generated@@636) $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (and (= (type $generated@@638) ($generated@@117 $generated@@100 $generated@@2)) (= (type $generated@@639) $generated@@68)) (= (type $generated@@640) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@115 $generated@@638 ($generated@@191 $generated@@639) $generated@@640) (forall (($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@100) (< 0 ($generated ($generated@@122 $generated@@638 $generated@@641)))) ($generated@@300 $generated@@641 $generated@@639 $generated@@640))
 :pattern ( ($generated@@122 $generated@@638 $generated@@641))
))))
 :pattern ( ($generated@@115 $generated@@638 ($generated@@191 $generated@@639) $generated@@640))
)))
(assert (= $generated@@189 ($generated@@95 $generated@@189)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (and (= (type $generated@@642) $generated@@79) (= (type $generated@@643) $generated@@68)) (= (type $generated@@644) ($generated@@117 $generated@@118 $generated@@119))) (and ($generated@@264 $generated@@644) (and ($generated@@174 $generated@@642) (exists (($generated@@645 T@U) ) (!  (and (= (type $generated@@645) $generated@@68) ($generated@@115 $generated@@642 ($generated@@175 $generated@@643 $generated@@645) $generated@@644))
 :pattern ( ($generated@@115 $generated@@642 ($generated@@175 $generated@@643 $generated@@645) $generated@@644))
))))) ($generated@@300 ($generated@@182 $generated@@642) $generated@@643 $generated@@644))
 :pattern ( ($generated@@300 ($generated@@182 $generated@@642) $generated@@643 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) $generated@@79) (= (type $generated@@647) $generated@@68)) (= (type $generated@@648) ($generated@@117 $generated@@118 $generated@@119))) (and ($generated@@264 $generated@@648) (and ($generated@@174 $generated@@646) (exists (($generated@@649 T@U) ) (!  (and (= (type $generated@@649) $generated@@68) ($generated@@115 $generated@@646 ($generated@@175 $generated@@649 $generated@@647) $generated@@648))
 :pattern ( ($generated@@115 $generated@@646 ($generated@@175 $generated@@649 $generated@@647) $generated@@648))
))))) ($generated@@300 ($generated@@183 $generated@@646) $generated@@647 $generated@@648))
 :pattern ( ($generated@@300 ($generated@@183 $generated@@646) $generated@@647 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) $generated@@100) (= (type $generated@@651) $generated@@100)) (= ($generated@@267 ($generated@@95 $generated@@650) ($generated@@95 $generated@@651)) ($generated@@95 ($generated@@267 $generated@@650 $generated@@651))))
 :pattern ( ($generated@@267 ($generated@@95 $generated@@650) ($generated@@95 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@100) (= (type $generated@@653) $generated@@79)) (= ($generated@@99 ($generated@@95 $generated@@652) ($generated@@95 $generated@@653)) ($generated@@95 ($generated@@99 $generated@@652 $generated@@653))))
 :pattern ( ($generated@@99 ($generated@@95 $generated@@652) ($generated@@95 $generated@@653)))
)))
(assert (forall (($generated@@654 T@U) ) (! (= ($generated@@338 ($generated@@95 $generated@@654)) ($generated@@95 ($generated@@338 $generated@@654)))
 :pattern ( ($generated@@338 ($generated@@95 $generated@@654)))
)))
(assert (forall (($generated@@655 T@U) ) (! (let (($generated@@656 ($generated@@325 (type $generated@@655))))
 (=> (and (= (type $generated@@655) ($generated@@324 $generated@@656)) (= ($generated@@323 $generated@@655) 0)) (= $generated@@655 ($generated@@322 $generated@@656))))
 :pattern ( ($generated@@323 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ($generated@@659 T@U) ) (! (let (($generated@@660 (type $generated@@658)))
 (=> (and (and (= (type $generated@@657) ($generated@@117 $generated@@660 $generated@@2)) (= (type $generated@@659) $generated@@2)) (<= 0 ($generated $generated@@659))) (= ($generated@@343 ($generated@@123 $generated@@657 $generated@@658 $generated@@659)) (+ (- ($generated@@343 $generated@@657) ($generated ($generated@@122 $generated@@657 $generated@@658))) ($generated $generated@@659)))))
 :pattern ( ($generated@@343 ($generated@@123 $generated@@657 $generated@@658 $generated@@659)))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@662) $generated@@2)) ($generated@@115 $generated@@662 $generated@@46 $generated@@661))
 :pattern ( ($generated@@115 $generated@@662 $generated@@46 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@664) $generated@@3)) ($generated@@115 $generated@@664 $generated@@47 $generated@@663))
 :pattern ( ($generated@@115 $generated@@664 $generated@@47 $generated@@663))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@666) $generated@@4)) ($generated@@115 $generated@@666 $generated@@44 $generated@@665))
 :pattern ( ($generated@@115 $generated@@666 $generated@@44 $generated@@665))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (= (type $generated@@667) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@668) $generated@@504)) ($generated@@115 $generated@@668 $generated@@45 $generated@@667))
 :pattern ( ($generated@@115 $generated@@668 $generated@@45 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ) (!  (=> (and (= (type $generated@@669) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@670) $generated@@100)) ($generated@@115 $generated@@670 $generated@@48 $generated@@669))
 :pattern ( ($generated@@115 $generated@@670 $generated@@48 $generated@@669))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@671) $generated@@68) (= (type $generated@@672) $generated@@100)) (= (type $generated@@673) $generated@@79)) (= (type $generated@@674) ($generated@@117 $generated@@118 $generated@@119))) ($generated@@264 $generated@@674)) (= ($generated@@115 ($generated@@99 $generated@@672 $generated@@673) ($generated@@82 $generated@@671) $generated@@674)  (and ($generated@@300 $generated@@672 $generated@@671 $generated@@674) ($generated@@115 $generated@@673 ($generated@@82 $generated@@671) $generated@@674))))
 :pattern ( ($generated@@115 ($generated@@99 $generated@@672 $generated@@673) ($generated@@82 $generated@@671) $generated@@674))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@675) ($generated@@324 $generated@@100)) (= (type $generated@@676) $generated@@68)) (= ($generated@@81 $generated@@675 ($generated@@552 $generated@@676)) (forall (($generated@@677 Int) ) (!  (=> (and (<= 0 $generated@@677) (< $generated@@677 ($generated@@323 $generated@@675))) ($generated@@268 ($generated@@553 $generated@@675 $generated@@677) $generated@@676))
 :pattern ( ($generated@@553 $generated@@675 $generated@@677))
))))
 :pattern ( ($generated@@81 $generated@@675 ($generated@@552 $generated@@676)))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 Int) ) (!  (=> (= (type $generated@@679) ($generated@@324 $generated@@100)) (=> (and (<= 0 $generated@@680) (< $generated@@680 ($generated@@323 $generated@@679))) (< ($generated@@594 ($generated@@434 $generated@@79 ($generated@@553 $generated@@679 $generated@@680))) ($generated@@678 $generated@@679))))
 :pattern ( ($generated@@594 ($generated@@434 $generated@@79 ($generated@@553 $generated@@679 $generated@@680))))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (and (and (= (type $generated@@681) ($generated@@354 $generated@@100 $generated@@100)) (= (type $generated@@682) $generated@@68)) (= (type $generated@@683) $generated@@68)) ($generated@@81 $generated@@681 ($generated@@462 $generated@@682 $generated@@683))) (and (and ($generated@@81 ($generated@@352 $generated@@681) ($generated@@284 $generated@@682)) ($generated@@81 ($generated@@395 $generated@@681) ($generated@@284 $generated@@683))) ($generated@@81 ($generated@@433 $generated@@681) ($generated@@284 ($generated@@175 $generated@@682 $generated@@683)))))
 :pattern ( ($generated@@81 $generated@@681 ($generated@@462 $generated@@682 $generated@@683)))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (and (and (= (type $generated@@684) ($generated@@372 $generated@@100 $generated@@100)) (= (type $generated@@685) $generated@@68)) (= (type $generated@@686) $generated@@68)) ($generated@@81 $generated@@684 ($generated@@470 $generated@@685 $generated@@686))) (and (and ($generated@@81 ($generated@@370 $generated@@684) ($generated@@289 $generated@@685)) ($generated@@81 ($generated@@406 $generated@@684) ($generated@@289 $generated@@686))) ($generated@@81 ($generated@@444 $generated@@684) ($generated@@289 ($generated@@175 $generated@@685 $generated@@686)))))
 :pattern ( ($generated@@81 $generated@@684 ($generated@@470 $generated@@685 $generated@@686)))
)))
(assert (forall (($generated@@687 T@U) ) (!  (=> (= (type $generated@@687) $generated@@2) ($generated@@81 $generated@@687 $generated@@46))
 :pattern ( ($generated@@81 $generated@@687 $generated@@46))
)))
(assert (forall (($generated@@688 T@U) ) (!  (=> (= (type $generated@@688) $generated@@3) ($generated@@81 $generated@@688 $generated@@47))
 :pattern ( ($generated@@81 $generated@@688 $generated@@47))
)))
(assert (forall (($generated@@689 T@U) ) (!  (=> (= (type $generated@@689) $generated@@4) ($generated@@81 $generated@@689 $generated@@44))
 :pattern ( ($generated@@81 $generated@@689 $generated@@44))
)))
(assert (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@504) ($generated@@81 $generated@@690 $generated@@45))
 :pattern ( ($generated@@81 $generated@@690 $generated@@45))
)))
(assert (forall (($generated@@691 T@U) ) (!  (=> (= (type $generated@@691) $generated@@100) ($generated@@81 $generated@@691 $generated@@48))
 :pattern ( ($generated@@81 $generated@@691 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () T@U)
(declare-fun $generated@@702 () T@U)
(declare-fun $generated@@703 () T@U)
(declare-fun $generated@@704 () T@U)
(declare-fun $generated@@705 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@692) $generated@@79) (= (type $generated@@693) $generated@@100)) (= (type $generated@@694) $generated@@79)) (= (type $generated@@695) $generated@@68)) (= (type $generated@@696) $generated@@79)) (= (type $generated@@697) ($generated@@117 $generated@@118 $generated@@119))) (= (type $generated@@698) $generated@@79)) (= (type $generated@@699) $generated@@100)) (= (type $generated@@700) $generated@@100)) (= (type $generated@@701) $generated@@79)) (= (type $generated@@702) ($generated@@198 $generated@@118 $generated@@4))) (= (type $generated@@703) $generated@@118)) (= (type $generated@@704) ($generated@@198 $generated@@118 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@706 true))
(let (($generated@@707  (=> (= $generated@@692 ($generated@@99 $generated@@693 $generated@@694)) (=> (and ($generated@@268 $generated@@693 $generated@@695) ($generated@@81 $generated@@694 ($generated@@82 $generated@@695))) (=> (and (and (and (and ($generated@@81 $generated@@696 ($generated@@82 $generated@@695)) ($generated@@115 $generated@@696 ($generated@@82 $generated@@695) $generated@@697)) (= $generated@@698 $generated@@694)) (and ($generated@@81 $generated@@698 ($generated@@82 $generated@@695)) (= $generated@@696 $generated@@698))) (and (and (and ($generated@@268 $generated@@699 $generated@@695) ($generated@@300 $generated@@699 $generated@@695 $generated@@697)) (and (= $generated@@700 $generated@@693) ($generated@@268 $generated@@700 $generated@@695))) (and (and (= $generated@@699 $generated@@700) ($generated@@115 $generated@@696 ($generated@@82 $generated@@695) $generated@@697)) (and ($generated@@115 $generated@@701 ($generated@@82 $generated@@695) $generated@@697) (= (ControlFlow 0 4) (- 0 3)))))) (< ($generated@@594 $generated@@696) ($generated@@594 $generated@@692)))))))
(let (($generated@@708  (=> (not (= $generated@@692 $generated@@189)) (and (=> (= (ControlFlow 0 6) 4) $generated@@707) (=> (= (ControlFlow 0 6) 5) $generated@@706)))))
(let (($generated@@709 true))
(let (($generated@@710  (=> (= $generated@@702 ($generated@@252 $generated@@703 $generated@@697 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@709) (=> (= (ControlFlow 0 7) 6) $generated@@708)))))
(let (($generated@@711 true))
(let (($generated@@712  (=> (= $generated@@704 ($generated@@197 $generated@@703 $generated@@697 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@711) (=> (= (ControlFlow 0 8) 7) $generated@@710)))))
(let (($generated@@713  (=> (and ($generated@@264 $generated@@697) ($generated@@705 $generated@@697)) (=> (and (and ($generated@@81 $generated@@692 ($generated@@82 $generated@@695)) ($generated@@81 $generated@@701 ($generated@@82 $generated@@695))) (and (= 1 $generated@@76) (= (ControlFlow 0 9) 8))) $generated@@712))))
$generated@@713)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@96 (T@U) Bool)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@115 (T@U T@U T@U) Bool)
(declare-fun $generated@@116 (Int) T@U)
(declare-fun $generated@@117 (T@T T@T) T@T)
(declare-fun $generated@@118 () T@T)
(declare-fun $generated@@119 () T@T)
(declare-fun $generated@@120 (T@T) T@T)
(declare-fun $generated@@121 (T@T) T@T)
(declare-fun $generated@@122 (T@U T@U) T@U)
(declare-fun $generated@@123 (T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@U T@U) T@U)
(declare-fun $generated@@125 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@181 (T@U T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@196 (T@U T@U T@U) T@U)
(declare-fun $generated@@197 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@198 (T@T T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@200 (T@T) T@T)
(declare-fun $generated@@201 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U) T@U)
(declare-fun $generated@@256 (T@U T@U) Bool)
(declare-fun $generated@@266 (T@U T@U) Bool)
(declare-fun $generated@@269 (T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@288 (T@U T@U T@U) Bool)
(declare-fun $generated@@310 (T@T) T@U)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@320 () T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@331 (T@U) Int)
(declare-fun $generated@@332 (T@T) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@T T@T) T@U)
(declare-fun $generated@@360 (T@T T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@362 (T@T) T@T)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@404 (T@U) Bool)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@424 (T@T T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@452 (T@U T@U) T@U)
(declare-fun $generated@@460 (T@U T@U) T@U)
(declare-fun $generated@@470 (T@T) T@U)
(declare-fun $generated@@494 () T@T)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@543 (T@U Int) T@U)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@583 (T@U) Int)
(declare-fun $generated@@584 (T@U) Int)
(declare-fun $generated@@668 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (and (= ($generated@@1 $generated@@78) 11) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= (type ($generated@@77 $generated@@83 $generated@@84 $generated@@85 $generated@@86)) $generated@@79)
 :pattern ( ($generated@@77 $generated@@83 $generated@@84 $generated@@85 $generated@@86))
))) (forall (($generated@@87 T@U) ) (! (= (type ($generated@@82 $generated@@87)) $generated@@68)
 :pattern ( ($generated@@82 $generated@@87))
))))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@88) $generated@@68) (= (type $generated@@89) $generated@@78)) (= (type $generated@@90) $generated@@79)) (= (type $generated@@91) $generated@@79)) (or ($generated@@80 $generated@@88 $generated@@90 $generated@@91) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@90 ($generated@@82 $generated@@88)) ($generated@@81 $generated@@91 ($generated@@82 $generated@@88)))))) ($generated@@81 ($generated@@77 $generated@@88 $generated@@89 $generated@@90 $generated@@91) ($generated@@82 $generated@@88)))
 :pattern ( ($generated@@77 $generated@@88 $generated@@89 $generated@@90 $generated@@91))
))))
(assert (forall (($generated@@93 T@U) ) (! (= (type ($generated@@92 $generated@@93)) $generated@@69)
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert (= ($generated@@92 $generated@@44) $generated@@49))
(assert (= ($generated@@92 $generated@@45) $generated@@50))
(assert (= ($generated@@92 $generated@@46) $generated@@51))
(assert (= ($generated@@92 $generated@@47) $generated@@52))
(assert (= ($generated@@92 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (forall (($generated@@101 T@U) ) (! (= (type ($generated@@94 $generated@@101)) $generated@@78)
 :pattern ( ($generated@@94 $generated@@101))
)) (forall (($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(= (type ($generated@@95 $generated@@102)) $generated@@103))
 :pattern ( ($generated@@95 $generated@@102))
))) (forall (($generated@@104 T@U) ) (! (= (type ($generated@@97 $generated@@104)) $generated@@79)
 :pattern ( ($generated@@97 $generated@@104))
))) (= ($generated@@1 $generated@@100) 13)) (forall (($generated@@105 T@U) ) (! (= (type ($generated@@98 $generated@@105)) $generated@@100)
 :pattern ( ($generated@@98 $generated@@105))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= (type ($generated@@99 $generated@@106 $generated@@107)) $generated@@79)
 :pattern ( ($generated@@99 $generated@@106 $generated@@107))
))))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@108) $generated@@68) (= (type $generated@@109) $generated@@78)) (= (type $generated@@110) $generated@@79)) (= (type $generated@@111) $generated@@79)) (or ($generated@@80 $generated@@108 ($generated@@95 $generated@@110) $generated@@111) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@110 ($generated@@82 $generated@@108)) ($generated@@81 $generated@@111 ($generated@@82 $generated@@108)))))) (and (=> (not ($generated@@0 ($generated@@95 ($generated@@11 ($generated@@96 ($generated@@95 $generated@@110)))))) (let (($generated@@112 ($generated@@95 ($generated@@97 ($generated@@95 $generated@@110)))))
($generated@@80 $generated@@108 $generated@@112 $generated@@111))) (= ($generated@@77 $generated@@108 ($generated@@94 $generated@@109) ($generated@@95 $generated@@110) $generated@@111) (ite ($generated@@96 ($generated@@95 $generated@@110)) $generated@@111 (let (($generated@@113 ($generated@@95 ($generated@@97 ($generated@@95 $generated@@110)))))
(let (($generated@@114 ($generated@@95 ($generated@@98 ($generated@@95 $generated@@110)))))
($generated@@99 $generated@@114 ($generated@@77 $generated@@108 ($generated@@94 $generated@@109) $generated@@113 $generated@@111))))))))
 :weight 3
 :pattern ( ($generated@@77 $generated@@108 ($generated@@94 $generated@@109) ($generated@@95 $generated@@110) $generated@@111))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ) (= ($generated@@1 ($generated@@117 $generated@@126 $generated@@127)) 14)) (forall (($generated@@128 T@T) ($generated@@129 T@T) ) (! (= ($generated@@120 ($generated@@117 $generated@@128 $generated@@129)) $generated@@128)
 :pattern ( ($generated@@117 $generated@@128 $generated@@129))
))) (forall (($generated@@130 T@T) ($generated@@131 T@T) ) (! (= ($generated@@121 ($generated@@117 $generated@@130 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@117 $generated@@130 $generated@@131))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@121 (type $generated@@132))))
(= (type ($generated@@122 $generated@@132 $generated@@133)) $generated@@134))
 :pattern ( ($generated@@122 $generated@@132 $generated@@133))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(let (($generated@@139 (type $generated@@136)))
(= (type ($generated@@123 $generated@@135 $generated@@136 $generated@@137)) ($generated@@117 $generated@@139 $generated@@138))))
 :pattern ( ($generated@@123 $generated@@135 $generated@@136 $generated@@137))
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (let (($generated@@143 ($generated@@121 (type $generated@@140))))
 (=> (= (type $generated@@142) $generated@@143) (= ($generated@@122 ($generated@@123 $generated@@140 $generated@@141 $generated@@142) $generated@@141) $generated@@142)))
 :weight 0
))) (and (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@146 $generated@@147) (= ($generated@@122 ($generated@@123 $generated@@145 $generated@@146 $generated@@144) $generated@@147) ($generated@@122 $generated@@145 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or true (= ($generated@@122 ($generated@@123 $generated@@149 $generated@@150 $generated@@148) $generated@@151) ($generated@@122 $generated@@149 $generated@@151)))
 :weight 0
)))) (= ($generated@@1 $generated@@118) 15)) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@71 (type $generated@@153))))
(= (type ($generated@@124 $generated@@152 $generated@@153)) $generated@@154))
 :pattern ( ($generated@@124 $generated@@152 $generated@@153))
))) (= ($generated@@1 $generated@@119) 16)) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@125 $generated@@155 $generated@@156 $generated@@157)) $generated@@119)
 :pattern ( ($generated@@125 $generated@@155 $generated@@156 $generated@@157))
))) (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@71 (type $generated@@159))))
 (=> (= (type $generated@@160) $generated@@161) (= ($generated@@124 ($generated@@125 $generated@@158 $generated@@159 $generated@@160) $generated@@159) $generated@@160)))
 :weight 0
))) (and (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@164 $generated@@165) (= ($generated@@124 ($generated@@125 $generated@@163 $generated@@164 $generated@@162) $generated@@165) ($generated@@124 $generated@@163 $generated@@165)))
 :weight 0
)) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or true (= ($generated@@124 ($generated@@125 $generated@@167 $generated@@168 $generated@@166) $generated@@169) ($generated@@124 $generated@@167 $generated@@169)))
 :weight 0
)))) (forall (($generated@@170 Int) ) (! (= (type ($generated@@116 $generated@@170)) $generated@@68)
 :pattern ( ($generated@@116 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (= (type $generated@@171) $generated@@2) (= (type $generated@@172) ($generated@@117 $generated@@118 $generated@@119))) ($generated@@115 $generated@@171 ($generated@@116 0) $generated@@172))
 :pattern ( ($generated@@115 $generated@@171 ($generated@@116 0) $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@2) ($generated@@81 $generated@@173 ($generated@@116 0)))
 :pattern ( ($generated@@81 $generated@@173 ($generated@@116 0)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@176 $generated@@177)) $generated@@68)
 :pattern ( ($generated@@175 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (and (= (type $generated@@178) $generated@@68) (= (type $generated@@179) $generated@@68)) (= (type $generated@@180) $generated@@79)) ($generated@@81 $generated@@180 ($generated@@175 $generated@@178 $generated@@179))) ($generated@@174 $generated@@180))
 :pattern ( ($generated@@174 $generated@@180) ($generated@@81 $generated@@180 ($generated@@175 $generated@@178 $generated@@179)))
)))
(assert  (and (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@100)
 :pattern ( ($generated@@182 $generated@@184))
)) (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@100)
 :pattern ( ($generated@@183 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) $generated@@79) (= (type $generated@@187) $generated@@79)) true) (= ($generated@@181 $generated@@186 $generated@@187)  (and (= ($generated@@182 $generated@@186) ($generated@@182 $generated@@187)) (= ($generated@@183 $generated@@186) ($generated@@183 $generated@@187)))))
 :pattern ( ($generated@@181 $generated@@186 $generated@@187))
)))
(assert  (and (forall (($generated@@190 T@U) ) (! (= (type ($generated@@188 $generated@@190)) $generated@@72)
 :pattern ( ($generated@@188 $generated@@190))
)) (= (type $generated@@189) $generated@@79)))
(assert (= ($generated@@188 $generated@@189) $generated@@63))
(assert (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@68)
 :pattern ( ($generated@@191 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (= (type $generated@@194) ($generated@@117 $generated@@100 $generated@@2)) (= (type $generated@@195) $generated@@68)) ($generated@@81 $generated@@194 ($generated@@191 $generated@@195))) ($generated@@192 $generated@@194))
 :pattern ( ($generated@@81 $generated@@194 ($generated@@191 $generated@@195)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (= ($generated@@1 ($generated@@198 $generated@@202 $generated@@203)) 17)) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@199 ($generated@@198 $generated@@204 $generated@@205)) $generated@@204)
 :pattern ( ($generated@@198 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@T) ($generated@@207 T@T) ) (! (= ($generated@@200 ($generated@@198 $generated@@206 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@198 $generated@@206 $generated@@207))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@200 (type $generated@@208))))
(= (type ($generated@@196 $generated@@208 $generated@@209 $generated@@210)) $generated@@211))
 :pattern ( ($generated@@196 $generated@@208 $generated@@209 $generated@@210))
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 (type $generated@@215)))
(let (($generated@@217 (type $generated@@213)))
(= (type ($generated@@201 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@198 $generated@@217 $generated@@216))))
 :pattern ( ($generated@@201 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@200 (type $generated@@218))))
 (=> (= (type $generated@@221) $generated@@222) (= ($generated@@196 ($generated@@201 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@219 $generated@@220) $generated@@221)))
 :weight 0
))) (and (and (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@196 ($generated@@201 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@196 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
)) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or (= $generated@@232 $generated@@234) (= ($generated@@196 ($generated@@201 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@196 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (or true (= ($generated@@196 ($generated@@201 $generated@@236 $generated@@237 $generated@@238 $generated@@235) $generated@@239 $generated@@240) ($generated@@196 $generated@@236 $generated@@239 $generated@@240)))
 :weight 0
)))) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Bool) ) (! (= (type ($generated@@197 $generated@@241 $generated@@242 $generated@@243 $generated@@244)) ($generated@@198 $generated@@118 $generated@@4))
 :pattern ( ($generated@@197 $generated@@241 $generated@@242 $generated@@243 $generated@@244))
))))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 Bool) ($generated@@249 T@U) ($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@71 (type $generated@@250))))
 (=> (and (and (and (and (= (type $generated@@245) $generated@@118) (= (type $generated@@246) ($generated@@117 $generated@@118 $generated@@119))) (= (type $generated@@247) ($generated@@70 $generated@@4))) (= (type $generated@@249) $generated@@118)) (= (type $generated@@250) ($generated@@70 $generated@@251))) (= ($generated@@0 ($generated@@196 ($generated@@197 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249 $generated@@250))  (=> (and (not (= $generated@@249 $generated@@245)) ($generated@@0 ($generated@@124 ($generated@@122 $generated@@246 $generated@@249) $generated@@247))) $generated@@248))))
 :pattern ( ($generated@@196 ($generated@@197 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (= (type $generated@@253) $generated@@68) (= (type $generated@@254) ($generated@@117 $generated@@118 $generated@@119))) ($generated@@252 $generated@@254)) ($generated@@115 $generated@@189 ($generated@@82 $generated@@253) $generated@@254))
 :pattern ( ($generated@@115 $generated@@189 ($generated@@82 $generated@@253) $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (! (= (type ($generated@@255 $generated@@257 $generated@@258)) $generated@@79)
 :pattern ( ($generated@@255 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (and (= (type $generated@@259) $generated@@68) (= (type $generated@@260) $generated@@68)) (= (type $generated@@261) $generated@@100)) (= (type $generated@@262) $generated@@100)) (= ($generated@@81 ($generated@@255 $generated@@261 $generated@@262) ($generated@@175 $generated@@259 $generated@@260))  (and ($generated@@256 $generated@@261 $generated@@259) ($generated@@256 $generated@@262 $generated@@260))))
 :pattern ( ($generated@@81 ($generated@@255 $generated@@261 $generated@@262) ($generated@@175 $generated@@259 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@68) ($generated@@81 $generated@@189 ($generated@@82 $generated@@263)))
 :pattern ( ($generated@@81 $generated@@189 ($generated@@82 $generated@@263)))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@79) (= (type $generated@@265) $generated@@79)) (= ($generated@@181 $generated@@264 $generated@@265) (= $generated@@264 $generated@@265)))
 :pattern ( ($generated@@181 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@79) (= (type $generated@@268) $generated@@79)) (= ($generated@@266 $generated@@267 $generated@@268) (= $generated@@267 $generated@@268)))
 :pattern ( ($generated@@266 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (= (type $generated@@270) $generated@@79) (= (type $generated@@271) $generated@@79)) (and ($generated@@269 $generated@@270) ($generated@@269 $generated@@271))) (= ($generated@@266 $generated@@270 $generated@@271)  (and (= ($generated@@98 $generated@@270) ($generated@@98 $generated@@271)) ($generated@@266 ($generated@@97 $generated@@270) ($generated@@97 $generated@@271)))))
 :pattern ( ($generated@@266 $generated@@270 $generated@@271) ($generated@@269 $generated@@270))
 :pattern ( ($generated@@266 $generated@@270 $generated@@271) ($generated@@269 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@68)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) ($generated@@117 $generated@@100 $generated@@4)) (= (type $generated@@275) $generated@@68)) (= ($generated@@81 $generated@@274 ($generated@@272 $generated@@275)) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@100) ($generated@@0 ($generated@@122 $generated@@274 $generated@@276))) ($generated@@256 $generated@@276 $generated@@275))
 :pattern ( ($generated@@122 $generated@@274 $generated@@276))
))))
 :pattern ( ($generated@@81 $generated@@274 ($generated@@272 $generated@@275)))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@68)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) ($generated@@117 $generated@@100 $generated@@4)) (= (type $generated@@280) $generated@@68)) (= ($generated@@81 $generated@@279 ($generated@@277 $generated@@280)) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@100) ($generated@@0 ($generated@@122 $generated@@279 $generated@@281))) ($generated@@256 $generated@@281 $generated@@280))
 :pattern ( ($generated@@122 $generated@@279 $generated@@281))
))))
 :pattern ( ($generated@@81 $generated@@279 ($generated@@277 $generated@@280)))
)))
(assert (forall (($generated@@282 T@U) ) (! (= ($generated@@95 $generated@@282) $generated@@282)
 :pattern ( ($generated@@95 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@283) $generated@@79) (= (type $generated@@284) $generated@@79)) (and ($generated@@96 $generated@@283) ($generated@@96 $generated@@284))) (= ($generated@@266 $generated@@283 $generated@@284) true))
 :pattern ( ($generated@@266 $generated@@283 $generated@@284) ($generated@@96 $generated@@283))
 :pattern ( ($generated@@266 $generated@@283 $generated@@284) ($generated@@96 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (= (type $generated@@285) $generated@@68) (= (type $generated@@286) $generated@@100)) (= (type $generated@@287) $generated@@79)) (= ($generated@@81 ($generated@@99 $generated@@286 $generated@@287) ($generated@@82 $generated@@285))  (and ($generated@@256 $generated@@286 $generated@@285) ($generated@@81 $generated@@287 ($generated@@82 $generated@@285)))))
 :pattern ( ($generated@@81 ($generated@@99 $generated@@286 $generated@@287) ($generated@@82 $generated@@285)))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@289) $generated@@68) (= (type $generated@@290) $generated@@68)) (= (type $generated@@291) $generated@@100)) (= (type $generated@@292) $generated@@100)) (= (type $generated@@293) ($generated@@117 $generated@@118 $generated@@119))) ($generated@@252 $generated@@293)) (= ($generated@@115 ($generated@@255 $generated@@291 $generated@@292) ($generated@@175 $generated@@289 $generated@@290) $generated@@293)  (and ($generated@@288 $generated@@291 $generated@@289 $generated@@293) ($generated@@288 $generated@@292 $generated@@290 $generated@@293))))
 :pattern ( ($generated@@115 ($generated@@255 $generated@@291 $generated@@292) ($generated@@175 $generated@@289 $generated@@290) $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@79) (= ($generated@@174 $generated@@294) (= ($generated@@188 $generated@@294) $generated@@61)))
 :pattern ( ($generated@@174 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@79) (= ($generated@@96 $generated@@295) (= ($generated@@188 $generated@@295) $generated@@63)))
 :pattern ( ($generated@@96 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (= (type $generated@@296) $generated@@79) (= ($generated@@269 $generated@@296) (= ($generated@@188 $generated@@296) $generated@@65)))
 :pattern ( ($generated@@269 $generated@@296))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@297) $generated@@68) (= (type $generated@@298) $generated@@78)) (= (type $generated@@299) $generated@@79)) (= (type $generated@@300) $generated@@79)) (or ($generated@@80 $generated@@297 ($generated@@95 $generated@@299) ($generated@@95 $generated@@300)) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@299 ($generated@@82 $generated@@297)) ($generated@@81 $generated@@300 ($generated@@82 $generated@@297)))))) (and (=> (not ($generated@@0 ($generated@@95 ($generated@@11 ($generated@@96 ($generated@@95 $generated@@299)))))) (let (($generated@@301 ($generated@@95 ($generated@@97 ($generated@@95 $generated@@299)))))
($generated@@80 $generated@@297 $generated@@301 ($generated@@95 $generated@@300)))) (= ($generated@@77 $generated@@297 ($generated@@94 $generated@@298) ($generated@@95 $generated@@299) ($generated@@95 $generated@@300)) (ite ($generated@@96 ($generated@@95 $generated@@299)) $generated@@300 (let (($generated@@302 ($generated@@95 ($generated@@97 ($generated@@95 $generated@@299)))))
(let (($generated@@303 ($generated@@95 ($generated@@98 ($generated@@95 $generated@@299)))))
($generated@@95 ($generated@@99 $generated@@303 ($generated@@95 ($generated@@77 $generated@@297 ($generated@@94 $generated@@298) $generated@@302 ($generated@@95 $generated@@300)))))))))))
 :weight 3
 :pattern ( ($generated@@77 $generated@@297 ($generated@@94 $generated@@298) ($generated@@95 $generated@@299) ($generated@@95 $generated@@300)))
))))
(assert (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@79) ($generated@@174 $generated@@304)) (exists (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (and (and (= (type $generated@@305) $generated@@100) (= (type $generated@@306) $generated@@100)) (= $generated@@304 ($generated@@255 $generated@@305 $generated@@306)))
 :no-pattern (type $generated@@305)
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
)))
 :pattern ( ($generated@@174 $generated@@304))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@79) ($generated@@269 $generated@@307)) (exists (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (and (and (= (type $generated@@308) $generated@@100) (= (type $generated@@309) $generated@@79)) (= $generated@@307 ($generated@@99 $generated@@308 $generated@@309)))
 :no-pattern (type $generated@@308)
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
)))
 :pattern ( ($generated@@269 $generated@@307))
)))
(assert  (and (and (forall (($generated@@314 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@314)) 18)) (forall (($generated@@315 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@312 $generated@@315))
))) (forall (($generated@@316 T@T) ) (! (= (type ($generated@@310 $generated@@316)) ($generated@@312 $generated@@316))
 :pattern ( ($generated@@310 $generated@@316))
))))
(assert (forall (($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@310 $generated@@317)) 0)
 :pattern ( ($generated@@310 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@79) ($generated@@96 $generated@@318)) (= $generated@@318 $generated@@189))
 :pattern ( ($generated@@96 $generated@@318))
)))
(assert  (and (forall (($generated@@321 T@U) ) (! (= (type ($generated@@319 $generated@@321)) $generated@@78)
 :pattern ( ($generated@@319 $generated@@321))
)) (= (type $generated@@320) $generated@@78)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (and (= (type $generated@@322) $generated@@68) (= (type $generated@@323) $generated@@78)) (= (type $generated@@324) $generated@@79)) (= (type $generated@@325) $generated@@79)) (= ($generated@@77 $generated@@322 $generated@@323 $generated@@324 $generated@@325) ($generated@@77 $generated@@322 $generated@@320 $generated@@324 $generated@@325)))
 :pattern ( ($generated@@77 $generated@@322 ($generated@@319 $generated@@323) $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@100)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@68) (= (type $generated@@330) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@288 ($generated@@326 $generated@@328) $generated@@329 $generated@@330) ($generated@@115 $generated@@328 $generated@@329 $generated@@330)))
 :pattern ( ($generated@@288 ($generated@@326 $generated@@328) $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@333 T@T) ) (! (= (type ($generated@@332 $generated@@333)) ($generated@@117 $generated@@333 $generated@@2))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@120 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@117 $generated@@335 $generated@@2)) (and (= (= ($generated@@331 $generated@@334) 0) (= $generated@@334 ($generated@@332 $generated@@335))) (=> (not (= ($generated@@331 $generated@@334) 0)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) (< 0 ($generated ($generated@@122 $generated@@334 $generated@@336))))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (= (type ($generated@@337 $generated@@338)) $generated@@73)
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@68) (and (= ($generated@@92 ($generated@@82 $generated@@339)) $generated@@64) (= ($generated@@337 ($generated@@82 $generated@@339)) $generated@@67)))
 :pattern ( ($generated@@82 $generated@@339))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 19)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@117 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@122 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@122 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert  (and (and (and (and (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (= ($generated@@1 ($generated@@360 $generated@@363 $generated@@364)) 20)) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@361 ($generated@@360 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@360 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@362 ($generated@@360 $generated@@367 $generated@@368)) $generated@@368)
 :pattern ( ($generated@@360 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@361 (type $generated@@369))))
(= (type ($generated@@358 $generated@@369)) ($generated@@117 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@369))
))) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= (type ($generated@@359 $generated@@371 $generated@@372)) ($generated@@360 $generated@@371 $generated@@372))
 :pattern ( ($generated@@359 $generated@@371 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@T) ) (! (let (($generated@@375 (type $generated@@373)))
 (not ($generated@@0 ($generated@@122 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373))))
 :pattern ( (let (($generated@@375 (type $generated@@373)))
($generated@@122 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373)))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@120 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@117 $generated@@377 $generated@@2)) (= ($generated@@192 $generated@@376) (forall (($generated@@378 T@U) ) (!  (=> (= (type $generated@@378) $generated@@377) (and (<= 0 ($generated ($generated@@122 $generated@@376 $generated@@378))) (<= ($generated ($generated@@122 $generated@@376 $generated@@378)) ($generated@@331 $generated@@376))))
 :pattern ( ($generated@@122 $generated@@376 $generated@@378))
)))))
 :pattern ( ($generated@@192 $generated@@376))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@344 (type $generated@@379))))
(let (($generated@@381 ($generated@@343 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@342 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@341 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) ($generated@@0 ($generated@@122 ($generated@@340 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@340 $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@344 (type $generated@@384))))
(= (type ($generated@@383 $generated@@384)) ($generated@@117 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@344 (type $generated@@386))))
(let (($generated@@388 ($generated@@343 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@342 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@341 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@387) ($generated@@0 ($generated@@122 ($generated@@383 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@383 $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@362 (type $generated@@390))))
(let (($generated@@392 ($generated@@361 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@360 $generated@@392 $generated@@391)) (or (= $generated@@390 ($generated@@359 $generated@@392 $generated@@391)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) ($generated@@0 ($generated@@122 ($generated@@358 $generated@@390) $generated@@393)))
 :no-pattern (type $generated@@393)
 :no-pattern ($generated $generated@@393)
 :no-pattern ($generated@@0 $generated@@393)
))))))
 :pattern ( ($generated@@358 $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@362 (type $generated@@395))))
(= (type ($generated@@394 $generated@@395)) ($generated@@117 $generated@@396 $generated@@4)))
 :pattern ( ($generated@@394 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@362 (type $generated@@397))))
(let (($generated@@399 ($generated@@361 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@360 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@359 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@398) ($generated@@0 ($generated@@122 ($generated@@394 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@394 $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@117 $generated@@100 $generated@@2)) (= (type $generated@@402) $generated@@68)) (= ($generated@@81 $generated@@401 ($generated@@191 $generated@@402)) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@100) (< 0 ($generated ($generated@@122 $generated@@401 $generated@@403)))) ($generated@@256 $generated@@403 $generated@@402))
 :pattern ( ($generated@@122 $generated@@401 $generated@@403))
))))
 :pattern ( ($generated@@81 $generated@@401 ($generated@@191 $generated@@402)))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@79) ($generated@@404 $generated@@405)) (or ($generated@@96 $generated@@405) ($generated@@269 $generated@@405)))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@406) $generated@@68) (= (type $generated@@407) $generated@@78)) (= (type $generated@@408) $generated@@79)) (= (type $generated@@409) $generated@@79)) (or ($generated@@80 $generated@@406 $generated@@408 $generated@@409) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@408 ($generated@@82 $generated@@406)) ($generated@@81 $generated@@409 ($generated@@82 $generated@@406)))))) (and (=> (not ($generated@@96 $generated@@408)) (let (($generated@@410 ($generated@@97 $generated@@408)))
($generated@@80 $generated@@406 $generated@@410 $generated@@409))) (= ($generated@@77 $generated@@406 ($generated@@94 $generated@@407) $generated@@408 $generated@@409) (ite ($generated@@96 $generated@@408) $generated@@409 (let (($generated@@411 ($generated@@97 $generated@@408)))
(let (($generated@@412 ($generated@@98 $generated@@408)))
($generated@@99 $generated@@412 ($generated@@77 $generated@@406 $generated@@407 $generated@@411 $generated@@409))))))))
 :pattern ( ($generated@@77 $generated@@406 ($generated@@94 $generated@@407) $generated@@408 $generated@@409))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (= (type $generated@@413) ($generated@@117 $generated@@100 $generated@@4)) (= (type $generated@@414) $generated@@68)) (= (type $generated@@415) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@115 $generated@@413 ($generated@@272 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@100) ($generated@@0 ($generated@@122 $generated@@413 $generated@@416))) ($generated@@288 $generated@@416 $generated@@414 $generated@@415))
 :pattern ( ($generated@@122 $generated@@413 $generated@@416))
))))
 :pattern ( ($generated@@115 $generated@@413 ($generated@@272 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (= (type $generated@@417) ($generated@@117 $generated@@100 $generated@@4)) (= (type $generated@@418) $generated@@68)) (= (type $generated@@419) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@115 $generated@@417 ($generated@@277 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@100) ($generated@@0 ($generated@@122 $generated@@417 $generated@@420))) ($generated@@288 $generated@@420 $generated@@418 $generated@@419))
 :pattern ( ($generated@@122 $generated@@417 $generated@@420))
))))
 :pattern ( ($generated@@115 $generated@@417 ($generated@@277 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(= ($generated ($generated@@122 ($generated@@332 $generated@@422) $generated@@421)) 0))
 :pattern ( (let (($generated@@422 (type $generated@@421)))
($generated@@122 ($generated@@332 $generated@@422) $generated@@421)))
)))
(assert  (and (and (forall (($generated@@426 T@U) ) (! (= (type ($generated@@423 $generated@@426)) ($generated@@117 $generated@@100 $generated@@4))
 :pattern ( ($generated@@423 $generated@@426))
)) (forall (($generated@@427 T@T) ($generated@@428 T@U) ) (! (= (type ($generated@@424 $generated@@427 $generated@@428)) $generated@@427)
 :pattern ( ($generated@@424 $generated@@427 $generated@@428))
))) (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@344 (type $generated@@429))))
(let (($generated@@431 ($generated@@343 (type $generated@@429))))
(= (type ($generated@@425 $generated@@429)) ($generated@@117 $generated@@431 $generated@@430))))
 :pattern ( ($generated@@425 $generated@@429))
))))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) ($generated@@342 $generated@@100 $generated@@100)) (= (type $generated@@433) $generated@@100)) (= ($generated@@0 ($generated@@122 ($generated@@423 $generated@@432) $generated@@433))  (and ($generated@@0 ($generated@@122 ($generated@@340 $generated@@432) ($generated@@182 ($generated@@424 $generated@@79 $generated@@433)))) (= ($generated@@122 ($generated@@425 $generated@@432) ($generated@@182 ($generated@@424 $generated@@79 $generated@@433))) ($generated@@183 ($generated@@424 $generated@@79 $generated@@433))))))
 :pattern ( ($generated@@122 ($generated@@423 $generated@@432) $generated@@433))
)))
(assert  (and (forall (($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@436)) ($generated@@117 $generated@@100 $generated@@4))
 :pattern ( ($generated@@434 $generated@@436))
)) (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@362 (type $generated@@437))))
(let (($generated@@439 ($generated@@361 (type $generated@@437))))
(= (type ($generated@@435 $generated@@437)) ($generated@@117 $generated@@439 $generated@@438))))
 :pattern ( ($generated@@435 $generated@@437))
))))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) ($generated@@360 $generated@@100 $generated@@100)) (= (type $generated@@441) $generated@@100)) (= ($generated@@0 ($generated@@122 ($generated@@434 $generated@@440) $generated@@441))  (and ($generated@@0 ($generated@@122 ($generated@@358 $generated@@440) ($generated@@182 ($generated@@424 $generated@@79 $generated@@441)))) (= ($generated@@122 ($generated@@435 $generated@@440) ($generated@@182 ($generated@@424 $generated@@79 $generated@@441))) ($generated@@183 ($generated@@424 $generated@@79 $generated@@441))))))
 :pattern ( ($generated@@122 ($generated@@434 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (let (($generated@@444 (type $generated@@443)))
(let (($generated@@445 ($generated@@343 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@342 $generated@@445 $generated@@444)) (= ($generated@@0 ($generated@@122 ($generated@@383 $generated@@442) $generated@@443)) (exists (($generated@@446 T@U) ) (!  (and (= (type $generated@@446) $generated@@445) (and ($generated@@0 ($generated@@122 ($generated@@340 $generated@@442) $generated@@446)) (= $generated@@443 ($generated@@122 ($generated@@425 $generated@@442) $generated@@446))))
 :pattern ( ($generated@@122 ($generated@@340 $generated@@442) $generated@@446))
 :pattern ( ($generated@@122 ($generated@@425 $generated@@442) $generated@@446))
))))))
 :pattern ( ($generated@@122 ($generated@@383 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 (type $generated@@448)))
(let (($generated@@450 ($generated@@361 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@360 $generated@@450 $generated@@449)) (= ($generated@@0 ($generated@@122 ($generated@@394 $generated@@447) $generated@@448)) (exists (($generated@@451 T@U) ) (!  (and (= (type $generated@@451) $generated@@450) (and ($generated@@0 ($generated@@122 ($generated@@358 $generated@@447) $generated@@451)) (= $generated@@448 ($generated@@122 ($generated@@435 $generated@@447) $generated@@451))))
 :pattern ( ($generated@@122 ($generated@@358 $generated@@447) $generated@@451))
 :pattern ( ($generated@@122 ($generated@@435 $generated@@447) $generated@@451))
))))))
 :pattern ( ($generated@@122 ($generated@@394 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (! (= (type ($generated@@452 $generated@@453 $generated@@454)) $generated@@68)
 :pattern ( ($generated@@452 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (and (and (= (type $generated@@455) ($generated@@342 $generated@@100 $generated@@100)) (= (type $generated@@456) $generated@@68)) (= (type $generated@@457) $generated@@68)) (= (type $generated@@458) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@115 $generated@@455 ($generated@@452 $generated@@456 $generated@@457) $generated@@458) (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@100) ($generated@@0 ($generated@@122 ($generated@@340 $generated@@455) $generated@@459))) (and ($generated@@288 ($generated@@122 ($generated@@425 $generated@@455) $generated@@459) $generated@@457 $generated@@458) ($generated@@288 $generated@@459 $generated@@456 $generated@@458)))
 :pattern ( ($generated@@122 ($generated@@425 $generated@@455) $generated@@459))
 :pattern ( ($generated@@122 ($generated@@340 $generated@@455) $generated@@459))
))))
 :pattern ( ($generated@@115 $generated@@455 ($generated@@452 $generated@@456 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (= (type ($generated@@460 $generated@@461 $generated@@462)) $generated@@68)
 :pattern ( ($generated@@460 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (and (= (type $generated@@463) ($generated@@360 $generated@@100 $generated@@100)) (= (type $generated@@464) $generated@@68)) (= (type $generated@@465) $generated@@68)) (= (type $generated@@466) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@115 $generated@@463 ($generated@@460 $generated@@464 $generated@@465) $generated@@466) (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@100) ($generated@@0 ($generated@@122 ($generated@@358 $generated@@463) $generated@@467))) (and ($generated@@288 ($generated@@122 ($generated@@435 $generated@@463) $generated@@467) $generated@@465 $generated@@466) ($generated@@288 $generated@@467 $generated@@464 $generated@@466)))
 :pattern ( ($generated@@122 ($generated@@435 $generated@@463) $generated@@467))
 :pattern ( ($generated@@122 ($generated@@358 $generated@@463) $generated@@467))
))))
 :pattern ( ($generated@@115 $generated@@463 ($generated@@460 $generated@@464 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (= (type $generated@@468) $generated@@68) (= (type $generated@@469) $generated@@79)) ($generated@@81 $generated@@469 ($generated@@82 $generated@@468))) (or ($generated@@96 $generated@@469) ($generated@@269 $generated@@469)))
 :pattern ( ($generated@@269 $generated@@469) ($generated@@81 $generated@@469 ($generated@@82 $generated@@468)))
 :pattern ( ($generated@@96 $generated@@469) ($generated@@81 $generated@@469 ($generated@@82 $generated@@468)))
)))
(assert (forall (($generated@@471 T@T) ) (! (= (type ($generated@@470 $generated@@471)) ($generated@@117 $generated@@471 $generated@@4))
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@362 (type $generated@@472))))
(let (($generated@@474 ($generated@@361 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@360 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@359 $generated@@474 $generated@@473)) (= ($generated@@358 $generated@@472) ($generated@@470 $generated@@474))))))
 :pattern ( ($generated@@358 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@362 (type $generated@@475))))
(let (($generated@@477 ($generated@@361 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@360 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@359 $generated@@477 $generated@@476)) (= ($generated@@394 $generated@@475) ($generated@@470 $generated@@476))))))
 :pattern ( ($generated@@394 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@362 (type $generated@@478))))
(let (($generated@@480 ($generated@@361 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@360 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@359 $generated@@480 $generated@@479)) (= ($generated@@434 $generated@@478) ($generated@@470 $generated@@100))))))
 :pattern ( ($generated@@434 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@344 (type $generated@@481))))
(let (($generated@@483 ($generated@@343 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@342 $generated@@483 $generated@@482)) (or (= $generated@@481 ($generated@@341 $generated@@483 $generated@@482)) (exists (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (and (and (= (type $generated@@484) $generated@@100) (= (type $generated@@485) $generated@@100)) ($generated@@0 ($generated@@122 ($generated@@423 $generated@@481) ($generated@@326 ($generated@@255 $generated@@484 $generated@@485)))))
 :no-pattern (type $generated@@484)
 :no-pattern (type $generated@@485)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
))))))
 :pattern ( ($generated@@423 $generated@@481))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@362 (type $generated@@486))))
(let (($generated@@488 ($generated@@361 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@360 $generated@@488 $generated@@487)) (or (= $generated@@486 ($generated@@359 $generated@@488 $generated@@487)) (exists (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (and (and (= (type $generated@@489) $generated@@100) (= (type $generated@@490) $generated@@100)) ($generated@@0 ($generated@@122 ($generated@@434 $generated@@486) ($generated@@326 ($generated@@255 $generated@@489 $generated@@490)))))
 :no-pattern (type $generated@@489)
 :no-pattern (type $generated@@490)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
))))))
 :pattern ( ($generated@@434 $generated@@486))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@100) ($generated@@256 $generated@@491 $generated@@46)) (and (= ($generated@@326 ($generated@@424 $generated@@2 $generated@@491)) $generated@@491) ($generated@@81 ($generated@@424 $generated@@2 $generated@@491) $generated@@46)))
 :pattern ( ($generated@@256 $generated@@491 $generated@@46))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@100) ($generated@@256 $generated@@492 $generated@@47)) (and (= ($generated@@326 ($generated@@424 $generated@@3 $generated@@492)) $generated@@492) ($generated@@81 ($generated@@424 $generated@@3 $generated@@492) $generated@@47)))
 :pattern ( ($generated@@256 $generated@@492 $generated@@47))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@100) ($generated@@256 $generated@@493 $generated@@44)) (and (= ($generated@@326 ($generated@@424 $generated@@4 $generated@@493)) $generated@@493) ($generated@@81 ($generated@@424 $generated@@4 $generated@@493) $generated@@44)))
 :pattern ( ($generated@@256 $generated@@493 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@494) 21))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@100) ($generated@@256 $generated@@495 $generated@@45)) (and (= ($generated@@326 ($generated@@424 $generated@@494 $generated@@495)) $generated@@495) ($generated@@81 ($generated@@424 $generated@@494 $generated@@495) $generated@@45)))
 :pattern ( ($generated@@256 $generated@@495 $generated@@45))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@68) (= ($generated@@256 ($generated@@326 $generated@@496) $generated@@497) ($generated@@81 $generated@@496 $generated@@497)))
 :pattern ( ($generated@@256 ($generated@@326 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@120 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@117 $generated@@499 $generated@@2)) (<= 0 ($generated@@331 $generated@@498))))
 :pattern ( ($generated@@331 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@313 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@312 $generated@@501)) (<= 0 ($generated@@311 $generated@@500))))
 :pattern ( ($generated@@311 $generated@@500))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@68)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@68) (= (type $generated@@505) $generated@@68)) (= ($generated@@502 ($generated@@452 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@452 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@68)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@68) (= (type $generated@@509) $generated@@68)) (= ($generated@@506 ($generated@@452 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@452 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@68) (= (type $generated@@511) $generated@@68)) (= ($generated@@92 ($generated@@452 $generated@@510 $generated@@511)) $generated@@58))
 :pattern ( ($generated@@452 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@68) (= (type $generated@@515) $generated@@68)) (= ($generated@@512 ($generated@@460 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@460 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@68)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@68) (= (type $generated@@519) $generated@@68)) (= ($generated@@516 ($generated@@460 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@460 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@68) (= (type $generated@@521) $generated@@68)) (= ($generated@@92 ($generated@@460 $generated@@520 $generated@@521)) $generated@@59))
 :pattern ( ($generated@@460 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@100) (= (type $generated@@523) $generated@@100)) (= ($generated@@188 ($generated@@255 $generated@@522 $generated@@523)) $generated@@61))
 :pattern ( ($generated@@255 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@68)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@68) (= (type $generated@@527) $generated@@68)) (= ($generated@@524 ($generated@@175 $generated@@526 $generated@@527)) $generated@@526))
 :pattern ( ($generated@@175 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@68)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@68) (= (type $generated@@531) $generated@@68)) (= ($generated@@528 ($generated@@175 $generated@@530 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@175 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@100) (= (type $generated@@533) $generated@@100)) (= ($generated@@182 ($generated@@255 $generated@@532 $generated@@533)) $generated@@532))
 :pattern ( ($generated@@255 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@100) (= (type $generated@@535) $generated@@100)) (= ($generated@@183 ($generated@@255 $generated@@534 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@255 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@100) (= (type $generated@@537) $generated@@79)) (= ($generated@@188 ($generated@@99 $generated@@536 $generated@@537)) $generated@@65))
 :pattern ( ($generated@@99 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@100) (= (type $generated@@539) $generated@@79)) (= ($generated@@98 ($generated@@99 $generated@@538 $generated@@539)) $generated@@538))
 :pattern ( ($generated@@99 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@100) (= (type $generated@@541) $generated@@79)) (= ($generated@@97 ($generated@@99 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@99 $generated@@540 $generated@@541))
)))
(assert  (and (forall (($generated@@544 T@U) ) (! (= (type ($generated@@542 $generated@@544)) $generated@@68)
 :pattern ( ($generated@@542 $generated@@544))
)) (forall (($generated@@545 T@U) ($generated@@546 Int) ) (! (let (($generated@@547 ($generated@@313 (type $generated@@545))))
(= (type ($generated@@543 $generated@@545 $generated@@546)) $generated@@547))
 :pattern ( ($generated@@543 $generated@@545 $generated@@546))
))))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@312 $generated@@100)) (= (type $generated@@549) $generated@@68)) (= (type $generated@@550) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@115 $generated@@548 ($generated@@542 $generated@@549) $generated@@550) (forall (($generated@@551 Int) ) (!  (=> (and (<= 0 $generated@@551) (< $generated@@551 ($generated@@311 $generated@@548))) ($generated@@288 ($generated@@543 $generated@@548 $generated@@551) $generated@@549 $generated@@550))
 :pattern ( ($generated@@543 $generated@@548 $generated@@551))
))))
 :pattern ( ($generated@@115 $generated@@548 ($generated@@542 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@553 Int) ) (! (= ($generated@@552 ($generated@@116 $generated@@553)) $generated@@553)
 :pattern ( ($generated@@116 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@68)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@68) (= ($generated@@554 ($generated@@272 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@272 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@68) (= ($generated@@92 ($generated@@272 $generated@@557)) $generated@@54))
 :pattern ( ($generated@@272 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@68)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@68) (= ($generated@@558 ($generated@@277 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@277 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@68) (= ($generated@@92 ($generated@@277 $generated@@561)) $generated@@55))
 :pattern ( ($generated@@277 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@68)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@68) (= ($generated@@562 ($generated@@191 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@191 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@68) (= ($generated@@92 ($generated@@191 $generated@@565)) $generated@@56))
 :pattern ( ($generated@@191 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@68)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@68) (= ($generated@@566 ($generated@@542 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@542 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@68) (= ($generated@@92 ($generated@@542 $generated@@569)) $generated@@57))
 :pattern ( ($generated@@542 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@68)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@68) (= ($generated@@570 ($generated@@82 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@82 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@573)))
(= ($generated@@424 $generated@@574 ($generated@@326 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@326 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@342 $generated@@100 $generated@@100)) (= (type $generated@@576) $generated@@68)) (= (type $generated@@577) $generated@@68)) (= ($generated@@81 $generated@@575 ($generated@@452 $generated@@576 $generated@@577)) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@100) ($generated@@0 ($generated@@122 ($generated@@340 $generated@@575) $generated@@578))) (and ($generated@@256 ($generated@@122 ($generated@@425 $generated@@575) $generated@@578) $generated@@577) ($generated@@256 $generated@@578 $generated@@576)))
 :pattern ( ($generated@@122 ($generated@@425 $generated@@575) $generated@@578))
 :pattern ( ($generated@@122 ($generated@@340 $generated@@575) $generated@@578))
))))
 :pattern ( ($generated@@81 $generated@@575 ($generated@@452 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@360 $generated@@100 $generated@@100)) (= (type $generated@@580) $generated@@68)) (= (type $generated@@581) $generated@@68)) (= ($generated@@81 $generated@@579 ($generated@@460 $generated@@580 $generated@@581)) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@100) ($generated@@0 ($generated@@122 ($generated@@358 $generated@@579) $generated@@582))) (and ($generated@@256 ($generated@@122 ($generated@@435 $generated@@579) $generated@@582) $generated@@581) ($generated@@256 $generated@@582 $generated@@580)))
 :pattern ( ($generated@@122 ($generated@@435 $generated@@579) $generated@@582))
 :pattern ( ($generated@@122 ($generated@@358 $generated@@579) $generated@@582))
))))
 :pattern ( ($generated@@81 $generated@@579 ($generated@@460 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@100) (= (type $generated@@586) $generated@@100)) (< ($generated@@583 $generated@@585) ($generated@@584 ($generated@@255 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@255 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@100) (= (type $generated@@588) $generated@@100)) (< ($generated@@583 $generated@@588) ($generated@@584 ($generated@@255 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@255 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@100) (= (type $generated@@590) $generated@@79)) (< ($generated@@583 $generated@@589) ($generated@@584 ($generated@@99 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@99 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@100) (= (type $generated@@592) $generated@@79)) (< ($generated@@584 $generated@@592) ($generated@@584 ($generated@@99 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@99 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@100) (= (type $generated@@594) $generated@@68)) (= (type $generated@@595) $generated@@68)) ($generated@@256 $generated@@593 ($generated@@452 $generated@@594 $generated@@595))) (and (= ($generated@@326 ($generated@@424 ($generated@@342 $generated@@100 $generated@@100) $generated@@593)) $generated@@593) ($generated@@81 ($generated@@424 ($generated@@342 $generated@@100 $generated@@100) $generated@@593) ($generated@@452 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@256 $generated@@593 ($generated@@452 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@100) (= (type $generated@@597) $generated@@68)) (= (type $generated@@598) $generated@@68)) ($generated@@256 $generated@@596 ($generated@@460 $generated@@597 $generated@@598))) (and (= ($generated@@326 ($generated@@424 ($generated@@360 $generated@@100 $generated@@100) $generated@@596)) $generated@@596) ($generated@@81 ($generated@@424 ($generated@@360 $generated@@100 $generated@@100) $generated@@596) ($generated@@460 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@256 $generated@@596 ($generated@@460 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@68) (= (type $generated@@600) $generated@@68)) (= (type $generated@@601) $generated@@100)) ($generated@@256 $generated@@601 ($generated@@175 $generated@@599 $generated@@600))) (and (= ($generated@@326 ($generated@@424 $generated@@79 $generated@@601)) $generated@@601) ($generated@@81 ($generated@@424 $generated@@79 $generated@@601) ($generated@@175 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@256 $generated@@601 ($generated@@175 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@79) (= (type $generated@@603) $generated@@68)) (= (type $generated@@604) ($generated@@117 $generated@@118 $generated@@119))) (and ($generated@@252 $generated@@604) (and ($generated@@269 $generated@@602) ($generated@@115 $generated@@602 ($generated@@82 $generated@@603) $generated@@604)))) ($generated@@288 ($generated@@98 $generated@@602) $generated@@603 $generated@@604))
 :pattern ( ($generated@@288 ($generated@@98 $generated@@602) $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ) (! (let (($generated@@606 (type $generated@@605)))
 (not ($generated@@0 ($generated@@122 ($generated@@470 $generated@@606) $generated@@605))))
 :pattern ( (let (($generated@@606 (type $generated@@605)))
($generated@@122 ($generated@@470 $generated@@606) $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@68) (= (type $generated@@608) $generated@@68)) (and (= ($generated@@92 ($generated@@175 $generated@@607 $generated@@608)) $generated@@62) (= ($generated@@337 ($generated@@175 $generated@@607 $generated@@608)) $generated@@66)))
 :pattern ( ($generated@@175 $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@79) (= ($generated@@583 ($generated@@326 $generated@@609)) ($generated@@584 $generated@@609)))
 :pattern ( ($generated@@583 ($generated@@326 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) $generated@@68) (= (type $generated@@611) $generated@@78)) (= (type $generated@@612) $generated@@79)) (= (type $generated@@613) $generated@@79)) (= ($generated@@77 $generated@@610 ($generated@@94 $generated@@611) $generated@@612 $generated@@613) ($generated@@77 $generated@@610 $generated@@611 $generated@@612 $generated@@613)))
 :pattern ( ($generated@@77 $generated@@610 ($generated@@94 $generated@@611) $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@100) ($generated@@256 $generated@@614 ($generated@@116 0))) (and (= ($generated@@326 ($generated@@424 $generated@@2 $generated@@614)) $generated@@614) ($generated@@81 ($generated@@424 ($generated@@117 $generated@@100 $generated@@4) $generated@@614) ($generated@@116 0))))
 :pattern ( ($generated@@256 $generated@@614 ($generated@@116 0)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@100) (= (type $generated@@616) $generated@@68)) ($generated@@256 $generated@@615 ($generated@@272 $generated@@616))) (and (= ($generated@@326 ($generated@@424 ($generated@@117 $generated@@100 $generated@@4) $generated@@615)) $generated@@615) ($generated@@81 ($generated@@424 ($generated@@117 $generated@@100 $generated@@4) $generated@@615) ($generated@@272 $generated@@616))))
 :pattern ( ($generated@@256 $generated@@615 ($generated@@272 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@100) (= (type $generated@@618) $generated@@68)) ($generated@@256 $generated@@617 ($generated@@277 $generated@@618))) (and (= ($generated@@326 ($generated@@424 ($generated@@117 $generated@@100 $generated@@4) $generated@@617)) $generated@@617) ($generated@@81 ($generated@@424 ($generated@@117 $generated@@100 $generated@@4) $generated@@617) ($generated@@277 $generated@@618))))
 :pattern ( ($generated@@256 $generated@@617 ($generated@@277 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@100) (= (type $generated@@620) $generated@@68)) ($generated@@256 $generated@@619 ($generated@@191 $generated@@620))) (and (= ($generated@@326 ($generated@@424 ($generated@@117 $generated@@100 $generated@@2) $generated@@619)) $generated@@619) ($generated@@81 ($generated@@424 ($generated@@117 $generated@@100 $generated@@2) $generated@@619) ($generated@@191 $generated@@620))))
 :pattern ( ($generated@@256 $generated@@619 ($generated@@191 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@100) (= (type $generated@@622) $generated@@68)) ($generated@@256 $generated@@621 ($generated@@542 $generated@@622))) (and (= ($generated@@326 ($generated@@424 ($generated@@312 $generated@@100) $generated@@621)) $generated@@621) ($generated@@81 ($generated@@424 ($generated@@312 $generated@@100) $generated@@621) ($generated@@542 $generated@@622))))
 :pattern ( ($generated@@256 $generated@@621 ($generated@@542 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@68) (= (type $generated@@624) $generated@@100)) ($generated@@256 $generated@@624 ($generated@@82 $generated@@623))) (and (= ($generated@@326 ($generated@@424 $generated@@79 $generated@@624)) $generated@@624) ($generated@@81 ($generated@@424 $generated@@79 $generated@@624) ($generated@@82 $generated@@623))))
 :pattern ( ($generated@@256 $generated@@624 ($generated@@82 $generated@@623)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@79) (= (type $generated@@626) $generated@@68)) (= (type $generated@@627) ($generated@@117 $generated@@118 $generated@@119))) (and ($generated@@252 $generated@@627) (and ($generated@@269 $generated@@625) ($generated@@115 $generated@@625 ($generated@@82 $generated@@626) $generated@@627)))) ($generated@@115 ($generated@@97 $generated@@625) ($generated@@82 $generated@@626) $generated@@627))
 :pattern ( ($generated@@115 ($generated@@97 $generated@@625) ($generated@@82 $generated@@626) $generated@@627))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@628) ($generated@@117 $generated@@100 $generated@@2)) (= (type $generated@@629) $generated@@68)) (= (type $generated@@630) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@115 $generated@@628 ($generated@@191 $generated@@629) $generated@@630) (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@100) (< 0 ($generated ($generated@@122 $generated@@628 $generated@@631)))) ($generated@@288 $generated@@631 $generated@@629 $generated@@630))
 :pattern ( ($generated@@122 $generated@@628 $generated@@631))
))))
 :pattern ( ($generated@@115 $generated@@628 ($generated@@191 $generated@@629) $generated@@630))
)))
(assert (= $generated@@189 ($generated@@95 $generated@@189)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) $generated@@79) (= (type $generated@@633) $generated@@68)) (= (type $generated@@634) ($generated@@117 $generated@@118 $generated@@119))) (and ($generated@@252 $generated@@634) (and ($generated@@174 $generated@@632) (exists (($generated@@635 T@U) ) (!  (and (= (type $generated@@635) $generated@@68) ($generated@@115 $generated@@632 ($generated@@175 $generated@@633 $generated@@635) $generated@@634))
 :pattern ( ($generated@@115 $generated@@632 ($generated@@175 $generated@@633 $generated@@635) $generated@@634))
))))) ($generated@@288 ($generated@@182 $generated@@632) $generated@@633 $generated@@634))
 :pattern ( ($generated@@288 ($generated@@182 $generated@@632) $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) $generated@@79) (= (type $generated@@637) $generated@@68)) (= (type $generated@@638) ($generated@@117 $generated@@118 $generated@@119))) (and ($generated@@252 $generated@@638) (and ($generated@@174 $generated@@636) (exists (($generated@@639 T@U) ) (!  (and (= (type $generated@@639) $generated@@68) ($generated@@115 $generated@@636 ($generated@@175 $generated@@639 $generated@@637) $generated@@638))
 :pattern ( ($generated@@115 $generated@@636 ($generated@@175 $generated@@639 $generated@@637) $generated@@638))
))))) ($generated@@288 ($generated@@183 $generated@@636) $generated@@637 $generated@@638))
 :pattern ( ($generated@@288 ($generated@@183 $generated@@636) $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@100) (= (type $generated@@641) $generated@@100)) (= ($generated@@255 ($generated@@95 $generated@@640) ($generated@@95 $generated@@641)) ($generated@@95 ($generated@@255 $generated@@640 $generated@@641))))
 :pattern ( ($generated@@255 ($generated@@95 $generated@@640) ($generated@@95 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@100) (= (type $generated@@643) $generated@@79)) (= ($generated@@99 ($generated@@95 $generated@@642) ($generated@@95 $generated@@643)) ($generated@@95 ($generated@@99 $generated@@642 $generated@@643))))
 :pattern ( ($generated@@99 ($generated@@95 $generated@@642) ($generated@@95 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (! (= ($generated@@326 ($generated@@95 $generated@@644)) ($generated@@95 ($generated@@326 $generated@@644)))
 :pattern ( ($generated@@326 ($generated@@95 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ) (! (let (($generated@@646 ($generated@@313 (type $generated@@645))))
 (=> (and (= (type $generated@@645) ($generated@@312 $generated@@646)) (= ($generated@@311 $generated@@645) 0)) (= $generated@@645 ($generated@@310 $generated@@646))))
 :pattern ( ($generated@@311 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (! (let (($generated@@650 (type $generated@@648)))
 (=> (and (and (= (type $generated@@647) ($generated@@117 $generated@@650 $generated@@2)) (= (type $generated@@649) $generated@@2)) (<= 0 ($generated $generated@@649))) (= ($generated@@331 ($generated@@123 $generated@@647 $generated@@648 $generated@@649)) (+ (- ($generated@@331 $generated@@647) ($generated ($generated@@122 $generated@@647 $generated@@648))) ($generated $generated@@649)))))
 :pattern ( ($generated@@331 ($generated@@123 $generated@@647 $generated@@648 $generated@@649)))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@652) $generated@@2)) ($generated@@115 $generated@@652 $generated@@46 $generated@@651))
 :pattern ( ($generated@@115 $generated@@652 $generated@@46 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@654) $generated@@3)) ($generated@@115 $generated@@654 $generated@@47 $generated@@653))
 :pattern ( ($generated@@115 $generated@@654 $generated@@47 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@656) $generated@@4)) ($generated@@115 $generated@@656 $generated@@44 $generated@@655))
 :pattern ( ($generated@@115 $generated@@656 $generated@@44 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@658) $generated@@494)) ($generated@@115 $generated@@658 $generated@@45 $generated@@657))
 :pattern ( ($generated@@115 $generated@@658 $generated@@45 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@660) $generated@@100)) ($generated@@115 $generated@@660 $generated@@48 $generated@@659))
 :pattern ( ($generated@@115 $generated@@660 $generated@@48 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@661) $generated@@68) (= (type $generated@@662) $generated@@100)) (= (type $generated@@663) $generated@@79)) (= (type $generated@@664) ($generated@@117 $generated@@118 $generated@@119))) ($generated@@252 $generated@@664)) (= ($generated@@115 ($generated@@99 $generated@@662 $generated@@663) ($generated@@82 $generated@@661) $generated@@664)  (and ($generated@@288 $generated@@662 $generated@@661 $generated@@664) ($generated@@115 $generated@@663 ($generated@@82 $generated@@661) $generated@@664))))
 :pattern ( ($generated@@115 ($generated@@99 $generated@@662 $generated@@663) ($generated@@82 $generated@@661) $generated@@664))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@312 $generated@@100)) (= (type $generated@@666) $generated@@68)) (= ($generated@@81 $generated@@665 ($generated@@542 $generated@@666)) (forall (($generated@@667 Int) ) (!  (=> (and (<= 0 $generated@@667) (< $generated@@667 ($generated@@311 $generated@@665))) ($generated@@256 ($generated@@543 $generated@@665 $generated@@667) $generated@@666))
 :pattern ( ($generated@@543 $generated@@665 $generated@@667))
))))
 :pattern ( ($generated@@81 $generated@@665 ($generated@@542 $generated@@666)))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 Int) ) (!  (=> (= (type $generated@@669) ($generated@@312 $generated@@100)) (=> (and (<= 0 $generated@@670) (< $generated@@670 ($generated@@311 $generated@@669))) (< ($generated@@584 ($generated@@424 $generated@@79 ($generated@@543 $generated@@669 $generated@@670))) ($generated@@668 $generated@@669))))
 :pattern ( ($generated@@584 ($generated@@424 $generated@@79 ($generated@@543 $generated@@669 $generated@@670))))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (= (type $generated@@671) ($generated@@342 $generated@@100 $generated@@100)) (= (type $generated@@672) $generated@@68)) (= (type $generated@@673) $generated@@68)) ($generated@@81 $generated@@671 ($generated@@452 $generated@@672 $generated@@673))) (and (and ($generated@@81 ($generated@@340 $generated@@671) ($generated@@272 $generated@@672)) ($generated@@81 ($generated@@383 $generated@@671) ($generated@@272 $generated@@673))) ($generated@@81 ($generated@@423 $generated@@671) ($generated@@272 ($generated@@175 $generated@@672 $generated@@673)))))
 :pattern ( ($generated@@81 $generated@@671 ($generated@@452 $generated@@672 $generated@@673)))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (and (= (type $generated@@674) ($generated@@360 $generated@@100 $generated@@100)) (= (type $generated@@675) $generated@@68)) (= (type $generated@@676) $generated@@68)) ($generated@@81 $generated@@674 ($generated@@460 $generated@@675 $generated@@676))) (and (and ($generated@@81 ($generated@@358 $generated@@674) ($generated@@277 $generated@@675)) ($generated@@81 ($generated@@394 $generated@@674) ($generated@@277 $generated@@676))) ($generated@@81 ($generated@@434 $generated@@674) ($generated@@277 ($generated@@175 $generated@@675 $generated@@676)))))
 :pattern ( ($generated@@81 $generated@@674 ($generated@@460 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@2) ($generated@@81 $generated@@677 $generated@@46))
 :pattern ( ($generated@@81 $generated@@677 $generated@@46))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@3) ($generated@@81 $generated@@678 $generated@@47))
 :pattern ( ($generated@@81 $generated@@678 $generated@@47))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@4) ($generated@@81 $generated@@679 $generated@@44))
 :pattern ( ($generated@@81 $generated@@679 $generated@@44))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@494) ($generated@@81 $generated@@680 $generated@@45))
 :pattern ( ($generated@@81 $generated@@680 $generated@@45))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@100) ($generated@@81 $generated@@681 $generated@@48))
 :pattern ( ($generated@@81 $generated@@681 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 (T@U) Bool)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@682) $generated@@68) (= (type $generated@@683) $generated@@79)) (= (type $generated@@684) $generated@@79)) (= (type $generated@@685) $generated@@79)) (= (type $generated@@686) $generated@@100)) (= (type $generated@@687) $generated@@79)) (= (type $generated@@688) $generated@@79)) (= (type $generated@@689) ($generated@@117 $generated@@118 $generated@@119))) (= (type $generated@@690) $generated@@79)) (= (type $generated@@691) $generated@@100)) (= (type $generated@@692) $generated@@100)) (= (type $generated@@693) ($generated@@117 $generated@@118 $generated@@119))) (= (type $generated@@695) ($generated@@198 $generated@@118 $generated@@4))) (= (type $generated@@696) $generated@@118)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@697  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@266 ($generated@@77 $generated@@682 ($generated@@94 ($generated@@94 $generated@@320)) ($generated@@77 $generated@@682 ($generated@@94 ($generated@@94 $generated@@320)) $generated@@683 $generated@@684) $generated@@685) ($generated@@77 $generated@@682 ($generated@@94 ($generated@@94 $generated@@320)) $generated@@683 ($generated@@77 $generated@@682 ($generated@@94 ($generated@@94 $generated@@320)) $generated@@684 $generated@@685))))))
(let (($generated@@698  (=> (= $generated@@683 ($generated@@99 $generated@@686 $generated@@687)) (=> (and ($generated@@256 $generated@@686 $generated@@682) ($generated@@81 $generated@@687 ($generated@@82 $generated@@682))) (=> (and (and (and (and ($generated@@81 $generated@@688 ($generated@@82 $generated@@682)) ($generated@@115 $generated@@688 ($generated@@82 $generated@@682) $generated@@689)) (= $generated@@690 $generated@@687)) (and ($generated@@81 $generated@@690 ($generated@@82 $generated@@682)) (= $generated@@688 $generated@@690))) (and (and (and ($generated@@256 $generated@@691 $generated@@682) ($generated@@288 $generated@@691 $generated@@682 $generated@@689)) (= $generated@@692 $generated@@686)) (and ($generated@@256 $generated@@692 $generated@@682) (= $generated@@691 $generated@@692)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< ($generated@@584 $generated@@688) ($generated@@584 $generated@@683))) (=> (< ($generated@@584 $generated@@688) ($generated@@584 $generated@@683)) (=> (and ($generated@@252 $generated@@693) ($generated@@694 $generated@@693)) (=> (and (and (and (and ($generated@@404 ($generated@@77 $generated@@682 ($generated@@94 $generated@@320) ($generated@@77 $generated@@682 ($generated@@94 $generated@@320) $generated@@688 $generated@@684) $generated@@685)) ($generated@@404 ($generated@@77 $generated@@682 ($generated@@94 $generated@@320) $generated@@688 ($generated@@77 $generated@@682 ($generated@@94 $generated@@320) $generated@@684 $generated@@685)))) (and (and ($generated@@80 $generated@@682 $generated@@688 $generated@@684) ($generated@@80 $generated@@682 ($generated@@77 $generated@@682 ($generated@@94 $generated@@320) $generated@@688 $generated@@684) $generated@@685)) (and ($generated@@80 $generated@@682 $generated@@684 $generated@@685) ($generated@@80 $generated@@682 $generated@@688 ($generated@@77 $generated@@682 ($generated@@94 $generated@@320) $generated@@684 $generated@@685))))) ($generated@@266 ($generated@@77 $generated@@682 ($generated@@94 ($generated@@94 $generated@@320)) ($generated@@77 $generated@@682 ($generated@@94 ($generated@@94 $generated@@320)) $generated@@688 $generated@@684) $generated@@685) ($generated@@77 $generated@@682 ($generated@@94 ($generated@@94 $generated@@320)) $generated@@688 ($generated@@77 $generated@@682 ($generated@@94 ($generated@@94 $generated@@320)) $generated@@684 $generated@@685)))) (and (= $generated@@689 $generated@@693) (= (ControlFlow 0 5) 3))) $generated@@697)))))))))
(let (($generated@@699  (=> (and (= $generated@@683 $generated@@189) (= (ControlFlow 0 4) 3)) $generated@@697)))
(let (($generated@@700 true))
(let (($generated@@701  (=> (not (= $generated@@683 $generated@@189)) (and (=> (= (ControlFlow 0 7) 5) $generated@@698) (=> (= (ControlFlow 0 7) 1) $generated@@700)))))
(let (($generated@@702  (=> (= $generated@@695 ($generated@@197 $generated@@696 $generated@@689 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 4) $generated@@699) (=> (= (ControlFlow 0 8) 7) $generated@@701)))))
(let (($generated@@703  (=> (and ($generated@@252 $generated@@689) ($generated@@694 $generated@@689)) (=> (and (and (and (and ($generated@@81 $generated@@683 ($generated@@82 $generated@@682)) ($generated@@115 $generated@@683 ($generated@@82 $generated@@682) $generated@@689)) ($generated@@404 $generated@@683)) (and (and ($generated@@81 $generated@@684 ($generated@@82 $generated@@682)) ($generated@@115 $generated@@684 ($generated@@82 $generated@@682) $generated@@689)) ($generated@@404 $generated@@684))) (and (and (and ($generated@@81 $generated@@685 ($generated@@82 $generated@@682)) ($generated@@115 $generated@@685 ($generated@@82 $generated@@682) $generated@@689)) ($generated@@404 $generated@@685)) (and (= 2 $generated@@76) (= (ControlFlow 0 9) 8)))) $generated@@702))))
$generated@@703))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@96 (T@U) Bool)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@115 (T@U T@U T@U) Bool)
(declare-fun $generated@@116 (Int) T@U)
(declare-fun $generated@@117 (T@T T@T) T@T)
(declare-fun $generated@@118 () T@T)
(declare-fun $generated@@119 () T@T)
(declare-fun $generated@@120 (T@T) T@T)
(declare-fun $generated@@121 (T@T) T@T)
(declare-fun $generated@@122 (T@U T@U) T@U)
(declare-fun $generated@@123 (T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@U T@U) T@U)
(declare-fun $generated@@125 (T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U) T@U)
(declare-fun $generated@@181 (T@U T@U) Bool)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@196 (T@U T@U T@U) T@U)
(declare-fun $generated@@197 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@198 (T@T T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@200 (T@T) T@T)
(declare-fun $generated@@201 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U) T@U)
(declare-fun $generated@@256 (T@U T@U) Bool)
(declare-fun $generated@@266 (T@U T@U) Bool)
(declare-fun $generated@@269 (T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@288 (T@U T@U T@U) Bool)
(declare-fun $generated@@310 (T@T) T@U)
(declare-fun $generated@@311 (T@U) Int)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@320 () T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@331 (T@U) Int)
(declare-fun $generated@@332 (T@T) T@U)
(declare-fun $generated@@337 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@341 (T@T T@T) T@U)
(declare-fun $generated@@342 (T@T T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@344 (T@T) T@T)
(declare-fun $generated@@358 (T@U) T@U)
(declare-fun $generated@@359 (T@T T@T) T@U)
(declare-fun $generated@@360 (T@T T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@362 (T@T) T@T)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@404 (T@U) Bool)
(declare-fun $generated@@423 (T@U) T@U)
(declare-fun $generated@@424 (T@T T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@434 (T@U) T@U)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@452 (T@U T@U) T@U)
(declare-fun $generated@@460 (T@U T@U) T@U)
(declare-fun $generated@@470 (T@T) T@U)
(declare-fun $generated@@494 () T@T)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@543 (T@U Int) T@U)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@566 (T@U) T@U)
(declare-fun $generated@@570 (T@U) T@U)
(declare-fun $generated@@583 (T@U) Int)
(declare-fun $generated@@584 (T@U) Int)
(declare-fun $generated@@668 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (and (= ($generated@@1 $generated@@78) 11) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= (type ($generated@@77 $generated@@83 $generated@@84 $generated@@85 $generated@@86)) $generated@@79)
 :pattern ( ($generated@@77 $generated@@83 $generated@@84 $generated@@85 $generated@@86))
))) (forall (($generated@@87 T@U) ) (! (= (type ($generated@@82 $generated@@87)) $generated@@68)
 :pattern ( ($generated@@82 $generated@@87))
))))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@88) $generated@@68) (= (type $generated@@89) $generated@@78)) (= (type $generated@@90) $generated@@79)) (= (type $generated@@91) $generated@@79)) (or ($generated@@80 $generated@@88 $generated@@90 $generated@@91) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@90 ($generated@@82 $generated@@88)) ($generated@@81 $generated@@91 ($generated@@82 $generated@@88)))))) ($generated@@81 ($generated@@77 $generated@@88 $generated@@89 $generated@@90 $generated@@91) ($generated@@82 $generated@@88)))
 :pattern ( ($generated@@77 $generated@@88 $generated@@89 $generated@@90 $generated@@91))
))))
(assert (forall (($generated@@93 T@U) ) (! (= (type ($generated@@92 $generated@@93)) $generated@@69)
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert (= ($generated@@92 $generated@@44) $generated@@49))
(assert (= ($generated@@92 $generated@@45) $generated@@50))
(assert (= ($generated@@92 $generated@@46) $generated@@51))
(assert (= ($generated@@92 $generated@@47) $generated@@52))
(assert (= ($generated@@92 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (forall (($generated@@101 T@U) ) (! (= (type ($generated@@94 $generated@@101)) $generated@@78)
 :pattern ( ($generated@@94 $generated@@101))
)) (forall (($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(= (type ($generated@@95 $generated@@102)) $generated@@103))
 :pattern ( ($generated@@95 $generated@@102))
))) (forall (($generated@@104 T@U) ) (! (= (type ($generated@@97 $generated@@104)) $generated@@79)
 :pattern ( ($generated@@97 $generated@@104))
))) (= ($generated@@1 $generated@@100) 13)) (forall (($generated@@105 T@U) ) (! (= (type ($generated@@98 $generated@@105)) $generated@@100)
 :pattern ( ($generated@@98 $generated@@105))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= (type ($generated@@99 $generated@@106 $generated@@107)) $generated@@79)
 :pattern ( ($generated@@99 $generated@@106 $generated@@107))
))))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@108) $generated@@68) (= (type $generated@@109) $generated@@78)) (= (type $generated@@110) $generated@@79)) (= (type $generated@@111) $generated@@79)) (or ($generated@@80 $generated@@108 ($generated@@95 $generated@@110) $generated@@111) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@110 ($generated@@82 $generated@@108)) ($generated@@81 $generated@@111 ($generated@@82 $generated@@108)))))) (and (=> (not ($generated@@0 ($generated@@95 ($generated@@11 ($generated@@96 ($generated@@95 $generated@@110)))))) (let (($generated@@112 ($generated@@95 ($generated@@97 ($generated@@95 $generated@@110)))))
($generated@@80 $generated@@108 $generated@@112 $generated@@111))) (= ($generated@@77 $generated@@108 ($generated@@94 $generated@@109) ($generated@@95 $generated@@110) $generated@@111) (ite ($generated@@96 ($generated@@95 $generated@@110)) $generated@@111 (let (($generated@@113 ($generated@@95 ($generated@@97 ($generated@@95 $generated@@110)))))
(let (($generated@@114 ($generated@@95 ($generated@@98 ($generated@@95 $generated@@110)))))
($generated@@99 $generated@@114 ($generated@@77 $generated@@108 ($generated@@94 $generated@@109) $generated@@113 $generated@@111))))))))
 :weight 3
 :pattern ( ($generated@@77 $generated@@108 ($generated@@94 $generated@@109) ($generated@@95 $generated@@110) $generated@@111))
))))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ) (= ($generated@@1 ($generated@@117 $generated@@126 $generated@@127)) 14)) (forall (($generated@@128 T@T) ($generated@@129 T@T) ) (! (= ($generated@@120 ($generated@@117 $generated@@128 $generated@@129)) $generated@@128)
 :pattern ( ($generated@@117 $generated@@128 $generated@@129))
))) (forall (($generated@@130 T@T) ($generated@@131 T@T) ) (! (= ($generated@@121 ($generated@@117 $generated@@130 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@117 $generated@@130 $generated@@131))
))) (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (let (($generated@@134 ($generated@@121 (type $generated@@132))))
(= (type ($generated@@122 $generated@@132 $generated@@133)) $generated@@134))
 :pattern ( ($generated@@122 $generated@@132 $generated@@133))
))) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (let (($generated@@138 (type $generated@@137)))
(let (($generated@@139 (type $generated@@136)))
(= (type ($generated@@123 $generated@@135 $generated@@136 $generated@@137)) ($generated@@117 $generated@@139 $generated@@138))))
 :pattern ( ($generated@@123 $generated@@135 $generated@@136 $generated@@137))
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (let (($generated@@143 ($generated@@121 (type $generated@@140))))
 (=> (= (type $generated@@142) $generated@@143) (= ($generated@@122 ($generated@@123 $generated@@140 $generated@@141 $generated@@142) $generated@@141) $generated@@142)))
 :weight 0
))) (and (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@146 $generated@@147) (= ($generated@@122 ($generated@@123 $generated@@145 $generated@@146 $generated@@144) $generated@@147) ($generated@@122 $generated@@145 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or true (= ($generated@@122 ($generated@@123 $generated@@149 $generated@@150 $generated@@148) $generated@@151) ($generated@@122 $generated@@149 $generated@@151)))
 :weight 0
)))) (= ($generated@@1 $generated@@118) 15)) (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@71 (type $generated@@153))))
(= (type ($generated@@124 $generated@@152 $generated@@153)) $generated@@154))
 :pattern ( ($generated@@124 $generated@@152 $generated@@153))
))) (= ($generated@@1 $generated@@119) 16)) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@125 $generated@@155 $generated@@156 $generated@@157)) $generated@@119)
 :pattern ( ($generated@@125 $generated@@155 $generated@@156 $generated@@157))
))) (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@71 (type $generated@@159))))
 (=> (= (type $generated@@160) $generated@@161) (= ($generated@@124 ($generated@@125 $generated@@158 $generated@@159 $generated@@160) $generated@@159) $generated@@160)))
 :weight 0
))) (and (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@164 $generated@@165) (= ($generated@@124 ($generated@@125 $generated@@163 $generated@@164 $generated@@162) $generated@@165) ($generated@@124 $generated@@163 $generated@@165)))
 :weight 0
)) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or true (= ($generated@@124 ($generated@@125 $generated@@167 $generated@@168 $generated@@166) $generated@@169) ($generated@@124 $generated@@167 $generated@@169)))
 :weight 0
)))) (forall (($generated@@170 Int) ) (! (= (type ($generated@@116 $generated@@170)) $generated@@68)
 :pattern ( ($generated@@116 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (= (type $generated@@171) $generated@@2) (= (type $generated@@172) ($generated@@117 $generated@@118 $generated@@119))) ($generated@@115 $generated@@171 ($generated@@116 0) $generated@@172))
 :pattern ( ($generated@@115 $generated@@171 ($generated@@116 0) $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> (= (type $generated@@173) $generated@@2) ($generated@@81 $generated@@173 ($generated@@116 0)))
 :pattern ( ($generated@@81 $generated@@173 ($generated@@116 0)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@176 $generated@@177)) $generated@@68)
 :pattern ( ($generated@@175 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (and (= (type $generated@@178) $generated@@68) (= (type $generated@@179) $generated@@68)) (= (type $generated@@180) $generated@@79)) ($generated@@81 $generated@@180 ($generated@@175 $generated@@178 $generated@@179))) ($generated@@174 $generated@@180))
 :pattern ( ($generated@@174 $generated@@180) ($generated@@81 $generated@@180 ($generated@@175 $generated@@178 $generated@@179)))
)))
(assert  (and (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@100)
 :pattern ( ($generated@@182 $generated@@184))
)) (forall (($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@185)) $generated@@100)
 :pattern ( ($generated@@183 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (and (= (type $generated@@186) $generated@@79) (= (type $generated@@187) $generated@@79)) true) (= ($generated@@181 $generated@@186 $generated@@187)  (and (= ($generated@@182 $generated@@186) ($generated@@182 $generated@@187)) (= ($generated@@183 $generated@@186) ($generated@@183 $generated@@187)))))
 :pattern ( ($generated@@181 $generated@@186 $generated@@187))
)))
(assert  (and (forall (($generated@@190 T@U) ) (! (= (type ($generated@@188 $generated@@190)) $generated@@72)
 :pattern ( ($generated@@188 $generated@@190))
)) (= (type $generated@@189) $generated@@79)))
(assert (= ($generated@@188 $generated@@189) $generated@@63))
(assert (forall (($generated@@193 T@U) ) (! (= (type ($generated@@191 $generated@@193)) $generated@@68)
 :pattern ( ($generated@@191 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (= (type $generated@@194) ($generated@@117 $generated@@100 $generated@@2)) (= (type $generated@@195) $generated@@68)) ($generated@@81 $generated@@194 ($generated@@191 $generated@@195))) ($generated@@192 $generated@@194))
 :pattern ( ($generated@@81 $generated@@194 ($generated@@191 $generated@@195)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (= ($generated@@1 ($generated@@198 $generated@@202 $generated@@203)) 17)) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= ($generated@@199 ($generated@@198 $generated@@204 $generated@@205)) $generated@@204)
 :pattern ( ($generated@@198 $generated@@204 $generated@@205))
))) (forall (($generated@@206 T@T) ($generated@@207 T@T) ) (! (= ($generated@@200 ($generated@@198 $generated@@206 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@198 $generated@@206 $generated@@207))
))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (let (($generated@@211 ($generated@@200 (type $generated@@208))))
(= (type ($generated@@196 $generated@@208 $generated@@209 $generated@@210)) $generated@@211))
 :pattern ( ($generated@@196 $generated@@208 $generated@@209 $generated@@210))
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 (type $generated@@215)))
(let (($generated@@217 (type $generated@@213)))
(= (type ($generated@@201 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@198 $generated@@217 $generated@@216))))
 :pattern ( ($generated@@201 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@200 (type $generated@@218))))
 (=> (= (type $generated@@221) $generated@@222) (= ($generated@@196 ($generated@@201 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@219 $generated@@220) $generated@@221)))
 :weight 0
))) (and (and (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or (= $generated@@225 $generated@@227) (= ($generated@@196 ($generated@@201 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@196 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
)) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or (= $generated@@232 $generated@@234) (= ($generated@@196 ($generated@@201 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@196 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (or true (= ($generated@@196 ($generated@@201 $generated@@236 $generated@@237 $generated@@238 $generated@@235) $generated@@239 $generated@@240) ($generated@@196 $generated@@236 $generated@@239 $generated@@240)))
 :weight 0
)))) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 Bool) ) (! (= (type ($generated@@197 $generated@@241 $generated@@242 $generated@@243 $generated@@244)) ($generated@@198 $generated@@118 $generated@@4))
 :pattern ( ($generated@@197 $generated@@241 $generated@@242 $generated@@243 $generated@@244))
))))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 Bool) ($generated@@249 T@U) ($generated@@250 T@U) ) (! (let (($generated@@251 ($generated@@71 (type $generated@@250))))
 (=> (and (and (and (and (= (type $generated@@245) $generated@@118) (= (type $generated@@246) ($generated@@117 $generated@@118 $generated@@119))) (= (type $generated@@247) ($generated@@70 $generated@@4))) (= (type $generated@@249) $generated@@118)) (= (type $generated@@250) ($generated@@70 $generated@@251))) (= ($generated@@0 ($generated@@196 ($generated@@197 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249 $generated@@250))  (=> (and (not (= $generated@@249 $generated@@245)) ($generated@@0 ($generated@@124 ($generated@@122 $generated@@246 $generated@@249) $generated@@247))) $generated@@248))))
 :pattern ( ($generated@@196 ($generated@@197 $generated@@245 $generated@@246 $generated@@247 $generated@@248) $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (= (type $generated@@253) $generated@@68) (= (type $generated@@254) ($generated@@117 $generated@@118 $generated@@119))) ($generated@@252 $generated@@254)) ($generated@@115 $generated@@189 ($generated@@82 $generated@@253) $generated@@254))
 :pattern ( ($generated@@115 $generated@@189 ($generated@@82 $generated@@253) $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (! (= (type ($generated@@255 $generated@@257 $generated@@258)) $generated@@79)
 :pattern ( ($generated@@255 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (and (= (type $generated@@259) $generated@@68) (= (type $generated@@260) $generated@@68)) (= (type $generated@@261) $generated@@100)) (= (type $generated@@262) $generated@@100)) (= ($generated@@81 ($generated@@255 $generated@@261 $generated@@262) ($generated@@175 $generated@@259 $generated@@260))  (and ($generated@@256 $generated@@261 $generated@@259) ($generated@@256 $generated@@262 $generated@@260))))
 :pattern ( ($generated@@81 ($generated@@255 $generated@@261 $generated@@262) ($generated@@175 $generated@@259 $generated@@260)))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@68) ($generated@@81 $generated@@189 ($generated@@82 $generated@@263)))
 :pattern ( ($generated@@81 $generated@@189 ($generated@@82 $generated@@263)))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@79) (= (type $generated@@265) $generated@@79)) (= ($generated@@181 $generated@@264 $generated@@265) (= $generated@@264 $generated@@265)))
 :pattern ( ($generated@@181 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@79) (= (type $generated@@268) $generated@@79)) (= ($generated@@266 $generated@@267 $generated@@268) (= $generated@@267 $generated@@268)))
 :pattern ( ($generated@@266 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (= (type $generated@@270) $generated@@79) (= (type $generated@@271) $generated@@79)) (and ($generated@@269 $generated@@270) ($generated@@269 $generated@@271))) (= ($generated@@266 $generated@@270 $generated@@271)  (and (= ($generated@@98 $generated@@270) ($generated@@98 $generated@@271)) ($generated@@266 ($generated@@97 $generated@@270) ($generated@@97 $generated@@271)))))
 :pattern ( ($generated@@266 $generated@@270 $generated@@271) ($generated@@269 $generated@@270))
 :pattern ( ($generated@@266 $generated@@270 $generated@@271) ($generated@@269 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@68)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) ($generated@@117 $generated@@100 $generated@@4)) (= (type $generated@@275) $generated@@68)) (= ($generated@@81 $generated@@274 ($generated@@272 $generated@@275)) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@100) ($generated@@0 ($generated@@122 $generated@@274 $generated@@276))) ($generated@@256 $generated@@276 $generated@@275))
 :pattern ( ($generated@@122 $generated@@274 $generated@@276))
))))
 :pattern ( ($generated@@81 $generated@@274 ($generated@@272 $generated@@275)))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@68)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) ($generated@@117 $generated@@100 $generated@@4)) (= (type $generated@@280) $generated@@68)) (= ($generated@@81 $generated@@279 ($generated@@277 $generated@@280)) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@100) ($generated@@0 ($generated@@122 $generated@@279 $generated@@281))) ($generated@@256 $generated@@281 $generated@@280))
 :pattern ( ($generated@@122 $generated@@279 $generated@@281))
))))
 :pattern ( ($generated@@81 $generated@@279 ($generated@@277 $generated@@280)))
)))
(assert (forall (($generated@@282 T@U) ) (! (= ($generated@@95 $generated@@282) $generated@@282)
 :pattern ( ($generated@@95 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@283) $generated@@79) (= (type $generated@@284) $generated@@79)) (and ($generated@@96 $generated@@283) ($generated@@96 $generated@@284))) (= ($generated@@266 $generated@@283 $generated@@284) true))
 :pattern ( ($generated@@266 $generated@@283 $generated@@284) ($generated@@96 $generated@@283))
 :pattern ( ($generated@@266 $generated@@283 $generated@@284) ($generated@@96 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ) (!  (=> (and (and (= (type $generated@@285) $generated@@68) (= (type $generated@@286) $generated@@100)) (= (type $generated@@287) $generated@@79)) (= ($generated@@81 ($generated@@99 $generated@@286 $generated@@287) ($generated@@82 $generated@@285))  (and ($generated@@256 $generated@@286 $generated@@285) ($generated@@81 $generated@@287 ($generated@@82 $generated@@285)))))
 :pattern ( ($generated@@81 ($generated@@99 $generated@@286 $generated@@287) ($generated@@82 $generated@@285)))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@289) $generated@@68) (= (type $generated@@290) $generated@@68)) (= (type $generated@@291) $generated@@100)) (= (type $generated@@292) $generated@@100)) (= (type $generated@@293) ($generated@@117 $generated@@118 $generated@@119))) ($generated@@252 $generated@@293)) (= ($generated@@115 ($generated@@255 $generated@@291 $generated@@292) ($generated@@175 $generated@@289 $generated@@290) $generated@@293)  (and ($generated@@288 $generated@@291 $generated@@289 $generated@@293) ($generated@@288 $generated@@292 $generated@@290 $generated@@293))))
 :pattern ( ($generated@@115 ($generated@@255 $generated@@291 $generated@@292) ($generated@@175 $generated@@289 $generated@@290) $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (= (type $generated@@294) $generated@@79) (= ($generated@@174 $generated@@294) (= ($generated@@188 $generated@@294) $generated@@61)))
 :pattern ( ($generated@@174 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@79) (= ($generated@@96 $generated@@295) (= ($generated@@188 $generated@@295) $generated@@63)))
 :pattern ( ($generated@@96 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (= (type $generated@@296) $generated@@79) (= ($generated@@269 $generated@@296) (= ($generated@@188 $generated@@296) $generated@@65)))
 :pattern ( ($generated@@269 $generated@@296))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@297) $generated@@68) (= (type $generated@@298) $generated@@78)) (= (type $generated@@299) $generated@@79)) (= (type $generated@@300) $generated@@79)) (or ($generated@@80 $generated@@297 ($generated@@95 $generated@@299) ($generated@@95 $generated@@300)) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@299 ($generated@@82 $generated@@297)) ($generated@@81 $generated@@300 ($generated@@82 $generated@@297)))))) (and (=> (not ($generated@@0 ($generated@@95 ($generated@@11 ($generated@@96 ($generated@@95 $generated@@299)))))) (let (($generated@@301 ($generated@@95 ($generated@@97 ($generated@@95 $generated@@299)))))
($generated@@80 $generated@@297 $generated@@301 ($generated@@95 $generated@@300)))) (= ($generated@@77 $generated@@297 ($generated@@94 $generated@@298) ($generated@@95 $generated@@299) ($generated@@95 $generated@@300)) (ite ($generated@@96 ($generated@@95 $generated@@299)) $generated@@300 (let (($generated@@302 ($generated@@95 ($generated@@97 ($generated@@95 $generated@@299)))))
(let (($generated@@303 ($generated@@95 ($generated@@98 ($generated@@95 $generated@@299)))))
($generated@@95 ($generated@@99 $generated@@303 ($generated@@95 ($generated@@77 $generated@@297 ($generated@@94 $generated@@298) $generated@@302 ($generated@@95 $generated@@300)))))))))))
 :weight 3
 :pattern ( ($generated@@77 $generated@@297 ($generated@@94 $generated@@298) ($generated@@95 $generated@@299) ($generated@@95 $generated@@300)))
))))
(assert (forall (($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@79) ($generated@@174 $generated@@304)) (exists (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (and (and (= (type $generated@@305) $generated@@100) (= (type $generated@@306) $generated@@100)) (= $generated@@304 ($generated@@255 $generated@@305 $generated@@306)))
 :no-pattern (type $generated@@305)
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
)))
 :pattern ( ($generated@@174 $generated@@304))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@79) ($generated@@269 $generated@@307)) (exists (($generated@@308 T@U) ($generated@@309 T@U) ) (!  (and (and (= (type $generated@@308) $generated@@100) (= (type $generated@@309) $generated@@79)) (= $generated@@307 ($generated@@99 $generated@@308 $generated@@309)))
 :no-pattern (type $generated@@308)
 :no-pattern (type $generated@@309)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
 :no-pattern ($generated $generated@@309)
 :no-pattern ($generated@@0 $generated@@309)
)))
 :pattern ( ($generated@@269 $generated@@307))
)))
(assert  (and (and (forall (($generated@@314 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@314)) 18)) (forall (($generated@@315 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@315)) $generated@@315)
 :pattern ( ($generated@@312 $generated@@315))
))) (forall (($generated@@316 T@T) ) (! (= (type ($generated@@310 $generated@@316)) ($generated@@312 $generated@@316))
 :pattern ( ($generated@@310 $generated@@316))
))))
(assert (forall (($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@310 $generated@@317)) 0)
 :pattern ( ($generated@@310 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@79) ($generated@@96 $generated@@318)) (= $generated@@318 $generated@@189))
 :pattern ( ($generated@@96 $generated@@318))
)))
(assert  (and (forall (($generated@@321 T@U) ) (! (= (type ($generated@@319 $generated@@321)) $generated@@78)
 :pattern ( ($generated@@319 $generated@@321))
)) (= (type $generated@@320) $generated@@78)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 T@U) ) (!  (=> (and (and (and (= (type $generated@@322) $generated@@68) (= (type $generated@@323) $generated@@78)) (= (type $generated@@324) $generated@@79)) (= (type $generated@@325) $generated@@79)) (= ($generated@@77 $generated@@322 $generated@@323 $generated@@324 $generated@@325) ($generated@@77 $generated@@322 $generated@@320 $generated@@324 $generated@@325)))
 :pattern ( ($generated@@77 $generated@@322 ($generated@@319 $generated@@323) $generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (= (type ($generated@@326 $generated@@327)) $generated@@100)
 :pattern ( ($generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@68) (= (type $generated@@330) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@288 ($generated@@326 $generated@@328) $generated@@329 $generated@@330) ($generated@@115 $generated@@328 $generated@@329 $generated@@330)))
 :pattern ( ($generated@@288 ($generated@@326 $generated@@328) $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@333 T@T) ) (! (= (type ($generated@@332 $generated@@333)) ($generated@@117 $generated@@333 $generated@@2))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@120 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@117 $generated@@335 $generated@@2)) (and (= (= ($generated@@331 $generated@@334) 0) (= $generated@@334 ($generated@@332 $generated@@335))) (=> (not (= ($generated@@331 $generated@@334) 0)) (exists (($generated@@336 T@U) ) (!  (and (= (type $generated@@336) $generated@@335) (< 0 ($generated ($generated@@122 $generated@@334 $generated@@336))))
 :no-pattern (type $generated@@336)
 :no-pattern ($generated $generated@@336)
 :no-pattern ($generated@@0 $generated@@336)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (= (type ($generated@@337 $generated@@338)) $generated@@73)
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@68) (and (= ($generated@@92 ($generated@@82 $generated@@339)) $generated@@64) (= ($generated@@337 ($generated@@82 $generated@@339)) $generated@@67)))
 :pattern ( ($generated@@82 $generated@@339))
)))
(assert  (and (and (and (and (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (= ($generated@@1 ($generated@@342 $generated@@345 $generated@@346)) 19)) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@343 ($generated@@342 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@342 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= ($generated@@344 ($generated@@342 $generated@@349 $generated@@350)) $generated@@350)
 :pattern ( ($generated@@342 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@343 (type $generated@@351))))
(= (type ($generated@@340 $generated@@351)) ($generated@@117 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@351))
))) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= (type ($generated@@341 $generated@@353 $generated@@354)) ($generated@@342 $generated@@353 $generated@@354))
 :pattern ( ($generated@@341 $generated@@353 $generated@@354))
))))
(assert (forall (($generated@@355 T@U) ($generated@@356 T@T) ) (! (let (($generated@@357 (type $generated@@355)))
 (not ($generated@@0 ($generated@@122 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355))))
 :pattern ( (let (($generated@@357 (type $generated@@355)))
($generated@@122 ($generated@@340 ($generated@@341 $generated@@357 $generated@@356)) $generated@@355)))
)))
(assert  (and (and (and (and (forall (($generated@@363 T@T) ($generated@@364 T@T) ) (= ($generated@@1 ($generated@@360 $generated@@363 $generated@@364)) 20)) (forall (($generated@@365 T@T) ($generated@@366 T@T) ) (! (= ($generated@@361 ($generated@@360 $generated@@365 $generated@@366)) $generated@@365)
 :pattern ( ($generated@@360 $generated@@365 $generated@@366))
))) (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (! (= ($generated@@362 ($generated@@360 $generated@@367 $generated@@368)) $generated@@368)
 :pattern ( ($generated@@360 $generated@@367 $generated@@368))
))) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@361 (type $generated@@369))))
(= (type ($generated@@358 $generated@@369)) ($generated@@117 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@358 $generated@@369))
))) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= (type ($generated@@359 $generated@@371 $generated@@372)) ($generated@@360 $generated@@371 $generated@@372))
 :pattern ( ($generated@@359 $generated@@371 $generated@@372))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@T) ) (! (let (($generated@@375 (type $generated@@373)))
 (not ($generated@@0 ($generated@@122 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373))))
 :pattern ( (let (($generated@@375 (type $generated@@373)))
($generated@@122 ($generated@@358 ($generated@@359 $generated@@375 $generated@@374)) $generated@@373)))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@120 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@117 $generated@@377 $generated@@2)) (= ($generated@@192 $generated@@376) (forall (($generated@@378 T@U) ) (!  (=> (= (type $generated@@378) $generated@@377) (and (<= 0 ($generated ($generated@@122 $generated@@376 $generated@@378))) (<= ($generated ($generated@@122 $generated@@376 $generated@@378)) ($generated@@331 $generated@@376))))
 :pattern ( ($generated@@122 $generated@@376 $generated@@378))
)))))
 :pattern ( ($generated@@192 $generated@@376))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@344 (type $generated@@379))))
(let (($generated@@381 ($generated@@343 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@342 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@341 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) ($generated@@0 ($generated@@122 ($generated@@340 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@340 $generated@@379))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@344 (type $generated@@384))))
(= (type ($generated@@383 $generated@@384)) ($generated@@117 $generated@@385 $generated@@4)))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@344 (type $generated@@386))))
(let (($generated@@388 ($generated@@343 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@342 $generated@@388 $generated@@387)) (or (= $generated@@386 ($generated@@341 $generated@@388 $generated@@387)) (exists (($generated@@389 T@U) ) (!  (and (= (type $generated@@389) $generated@@387) ($generated@@0 ($generated@@122 ($generated@@383 $generated@@386) $generated@@389)))
 :no-pattern (type $generated@@389)
 :no-pattern ($generated $generated@@389)
 :no-pattern ($generated@@0 $generated@@389)
))))))
 :pattern ( ($generated@@383 $generated@@386))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@362 (type $generated@@390))))
(let (($generated@@392 ($generated@@361 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@360 $generated@@392 $generated@@391)) (or (= $generated@@390 ($generated@@359 $generated@@392 $generated@@391)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@392) ($generated@@0 ($generated@@122 ($generated@@358 $generated@@390) $generated@@393)))
 :no-pattern (type $generated@@393)
 :no-pattern ($generated $generated@@393)
 :no-pattern ($generated@@0 $generated@@393)
))))))
 :pattern ( ($generated@@358 $generated@@390))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@362 (type $generated@@395))))
(= (type ($generated@@394 $generated@@395)) ($generated@@117 $generated@@396 $generated@@4)))
 :pattern ( ($generated@@394 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@362 (type $generated@@397))))
(let (($generated@@399 ($generated@@361 (type $generated@@397))))
 (=> (= (type $generated@@397) ($generated@@360 $generated@@399 $generated@@398)) (or (= $generated@@397 ($generated@@359 $generated@@399 $generated@@398)) (exists (($generated@@400 T@U) ) (!  (and (= (type $generated@@400) $generated@@398) ($generated@@0 ($generated@@122 ($generated@@394 $generated@@397) $generated@@400)))
 :no-pattern (type $generated@@400)
 :no-pattern ($generated $generated@@400)
 :no-pattern ($generated@@0 $generated@@400)
))))))
 :pattern ( ($generated@@394 $generated@@397))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@117 $generated@@100 $generated@@2)) (= (type $generated@@402) $generated@@68)) (= ($generated@@81 $generated@@401 ($generated@@191 $generated@@402)) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@100) (< 0 ($generated ($generated@@122 $generated@@401 $generated@@403)))) ($generated@@256 $generated@@403 $generated@@402))
 :pattern ( ($generated@@122 $generated@@401 $generated@@403))
))))
 :pattern ( ($generated@@81 $generated@@401 ($generated@@191 $generated@@402)))
)))
(assert (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@79) ($generated@@404 $generated@@405)) (or ($generated@@96 $generated@@405) ($generated@@269 $generated@@405)))
 :pattern ( ($generated@@404 $generated@@405))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@406) $generated@@68) (= (type $generated@@407) $generated@@78)) (= (type $generated@@408) $generated@@79)) (= (type $generated@@409) $generated@@79)) (or ($generated@@80 $generated@@406 $generated@@408 $generated@@409) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@408 ($generated@@82 $generated@@406)) ($generated@@81 $generated@@409 ($generated@@82 $generated@@406)))))) (and (=> (not ($generated@@96 $generated@@408)) (let (($generated@@410 ($generated@@97 $generated@@408)))
($generated@@80 $generated@@406 $generated@@410 $generated@@409))) (= ($generated@@77 $generated@@406 ($generated@@94 $generated@@407) $generated@@408 $generated@@409) (ite ($generated@@96 $generated@@408) $generated@@409 (let (($generated@@411 ($generated@@97 $generated@@408)))
(let (($generated@@412 ($generated@@98 $generated@@408)))
($generated@@99 $generated@@412 ($generated@@77 $generated@@406 $generated@@407 $generated@@411 $generated@@409))))))))
 :pattern ( ($generated@@77 $generated@@406 ($generated@@94 $generated@@407) $generated@@408 $generated@@409))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (and (= (type $generated@@413) ($generated@@117 $generated@@100 $generated@@4)) (= (type $generated@@414) $generated@@68)) (= (type $generated@@415) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@115 $generated@@413 ($generated@@272 $generated@@414) $generated@@415) (forall (($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@416) $generated@@100) ($generated@@0 ($generated@@122 $generated@@413 $generated@@416))) ($generated@@288 $generated@@416 $generated@@414 $generated@@415))
 :pattern ( ($generated@@122 $generated@@413 $generated@@416))
))))
 :pattern ( ($generated@@115 $generated@@413 ($generated@@272 $generated@@414) $generated@@415))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (= (type $generated@@417) ($generated@@117 $generated@@100 $generated@@4)) (= (type $generated@@418) $generated@@68)) (= (type $generated@@419) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@115 $generated@@417 ($generated@@277 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@100) ($generated@@0 ($generated@@122 $generated@@417 $generated@@420))) ($generated@@288 $generated@@420 $generated@@418 $generated@@419))
 :pattern ( ($generated@@122 $generated@@417 $generated@@420))
))))
 :pattern ( ($generated@@115 $generated@@417 ($generated@@277 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(= ($generated ($generated@@122 ($generated@@332 $generated@@422) $generated@@421)) 0))
 :pattern ( (let (($generated@@422 (type $generated@@421)))
($generated@@122 ($generated@@332 $generated@@422) $generated@@421)))
)))
(assert  (and (and (forall (($generated@@426 T@U) ) (! (= (type ($generated@@423 $generated@@426)) ($generated@@117 $generated@@100 $generated@@4))
 :pattern ( ($generated@@423 $generated@@426))
)) (forall (($generated@@427 T@T) ($generated@@428 T@U) ) (! (= (type ($generated@@424 $generated@@427 $generated@@428)) $generated@@427)
 :pattern ( ($generated@@424 $generated@@427 $generated@@428))
))) (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@344 (type $generated@@429))))
(let (($generated@@431 ($generated@@343 (type $generated@@429))))
(= (type ($generated@@425 $generated@@429)) ($generated@@117 $generated@@431 $generated@@430))))
 :pattern ( ($generated@@425 $generated@@429))
))))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@432) ($generated@@342 $generated@@100 $generated@@100)) (= (type $generated@@433) $generated@@100)) (= ($generated@@0 ($generated@@122 ($generated@@423 $generated@@432) $generated@@433))  (and ($generated@@0 ($generated@@122 ($generated@@340 $generated@@432) ($generated@@182 ($generated@@424 $generated@@79 $generated@@433)))) (= ($generated@@122 ($generated@@425 $generated@@432) ($generated@@182 ($generated@@424 $generated@@79 $generated@@433))) ($generated@@183 ($generated@@424 $generated@@79 $generated@@433))))))
 :pattern ( ($generated@@122 ($generated@@423 $generated@@432) $generated@@433))
)))
(assert  (and (forall (($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@436)) ($generated@@117 $generated@@100 $generated@@4))
 :pattern ( ($generated@@434 $generated@@436))
)) (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@362 (type $generated@@437))))
(let (($generated@@439 ($generated@@361 (type $generated@@437))))
(= (type ($generated@@435 $generated@@437)) ($generated@@117 $generated@@439 $generated@@438))))
 :pattern ( ($generated@@435 $generated@@437))
))))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) ($generated@@360 $generated@@100 $generated@@100)) (= (type $generated@@441) $generated@@100)) (= ($generated@@0 ($generated@@122 ($generated@@434 $generated@@440) $generated@@441))  (and ($generated@@0 ($generated@@122 ($generated@@358 $generated@@440) ($generated@@182 ($generated@@424 $generated@@79 $generated@@441)))) (= ($generated@@122 ($generated@@435 $generated@@440) ($generated@@182 ($generated@@424 $generated@@79 $generated@@441))) ($generated@@183 ($generated@@424 $generated@@79 $generated@@441))))))
 :pattern ( ($generated@@122 ($generated@@434 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (! (let (($generated@@444 (type $generated@@443)))
(let (($generated@@445 ($generated@@343 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@342 $generated@@445 $generated@@444)) (= ($generated@@0 ($generated@@122 ($generated@@383 $generated@@442) $generated@@443)) (exists (($generated@@446 T@U) ) (!  (and (= (type $generated@@446) $generated@@445) (and ($generated@@0 ($generated@@122 ($generated@@340 $generated@@442) $generated@@446)) (= $generated@@443 ($generated@@122 ($generated@@425 $generated@@442) $generated@@446))))
 :pattern ( ($generated@@122 ($generated@@340 $generated@@442) $generated@@446))
 :pattern ( ($generated@@122 ($generated@@425 $generated@@442) $generated@@446))
))))))
 :pattern ( ($generated@@122 ($generated@@383 $generated@@442) $generated@@443))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (! (let (($generated@@449 (type $generated@@448)))
(let (($generated@@450 ($generated@@361 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@360 $generated@@450 $generated@@449)) (= ($generated@@0 ($generated@@122 ($generated@@394 $generated@@447) $generated@@448)) (exists (($generated@@451 T@U) ) (!  (and (= (type $generated@@451) $generated@@450) (and ($generated@@0 ($generated@@122 ($generated@@358 $generated@@447) $generated@@451)) (= $generated@@448 ($generated@@122 ($generated@@435 $generated@@447) $generated@@451))))
 :pattern ( ($generated@@122 ($generated@@358 $generated@@447) $generated@@451))
 :pattern ( ($generated@@122 ($generated@@435 $generated@@447) $generated@@451))
))))))
 :pattern ( ($generated@@122 ($generated@@394 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (! (= (type ($generated@@452 $generated@@453 $generated@@454)) $generated@@68)
 :pattern ( ($generated@@452 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (and (and (= (type $generated@@455) ($generated@@342 $generated@@100 $generated@@100)) (= (type $generated@@456) $generated@@68)) (= (type $generated@@457) $generated@@68)) (= (type $generated@@458) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@115 $generated@@455 ($generated@@452 $generated@@456 $generated@@457) $generated@@458) (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@100) ($generated@@0 ($generated@@122 ($generated@@340 $generated@@455) $generated@@459))) (and ($generated@@288 ($generated@@122 ($generated@@425 $generated@@455) $generated@@459) $generated@@457 $generated@@458) ($generated@@288 $generated@@459 $generated@@456 $generated@@458)))
 :pattern ( ($generated@@122 ($generated@@425 $generated@@455) $generated@@459))
 :pattern ( ($generated@@122 ($generated@@340 $generated@@455) $generated@@459))
))))
 :pattern ( ($generated@@115 $generated@@455 ($generated@@452 $generated@@456 $generated@@457) $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (! (= (type ($generated@@460 $generated@@461 $generated@@462)) $generated@@68)
 :pattern ( ($generated@@460 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (and (and (= (type $generated@@463) ($generated@@360 $generated@@100 $generated@@100)) (= (type $generated@@464) $generated@@68)) (= (type $generated@@465) $generated@@68)) (= (type $generated@@466) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@115 $generated@@463 ($generated@@460 $generated@@464 $generated@@465) $generated@@466) (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@100) ($generated@@0 ($generated@@122 ($generated@@358 $generated@@463) $generated@@467))) (and ($generated@@288 ($generated@@122 ($generated@@435 $generated@@463) $generated@@467) $generated@@465 $generated@@466) ($generated@@288 $generated@@467 $generated@@464 $generated@@466)))
 :pattern ( ($generated@@122 ($generated@@435 $generated@@463) $generated@@467))
 :pattern ( ($generated@@122 ($generated@@358 $generated@@463) $generated@@467))
))))
 :pattern ( ($generated@@115 $generated@@463 ($generated@@460 $generated@@464 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (= (type $generated@@468) $generated@@68) (= (type $generated@@469) $generated@@79)) ($generated@@81 $generated@@469 ($generated@@82 $generated@@468))) (or ($generated@@96 $generated@@469) ($generated@@269 $generated@@469)))
 :pattern ( ($generated@@269 $generated@@469) ($generated@@81 $generated@@469 ($generated@@82 $generated@@468)))
 :pattern ( ($generated@@96 $generated@@469) ($generated@@81 $generated@@469 ($generated@@82 $generated@@468)))
)))
(assert (forall (($generated@@471 T@T) ) (! (= (type ($generated@@470 $generated@@471)) ($generated@@117 $generated@@471 $generated@@4))
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@362 (type $generated@@472))))
(let (($generated@@474 ($generated@@361 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@360 $generated@@474 $generated@@473)) (= (= $generated@@472 ($generated@@359 $generated@@474 $generated@@473)) (= ($generated@@358 $generated@@472) ($generated@@470 $generated@@474))))))
 :pattern ( ($generated@@358 $generated@@472))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@362 (type $generated@@475))))
(let (($generated@@477 ($generated@@361 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@360 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@359 $generated@@477 $generated@@476)) (= ($generated@@394 $generated@@475) ($generated@@470 $generated@@476))))))
 :pattern ( ($generated@@394 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@362 (type $generated@@478))))
(let (($generated@@480 ($generated@@361 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@360 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@359 $generated@@480 $generated@@479)) (= ($generated@@434 $generated@@478) ($generated@@470 $generated@@100))))))
 :pattern ( ($generated@@434 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@344 (type $generated@@481))))
(let (($generated@@483 ($generated@@343 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@342 $generated@@483 $generated@@482)) (or (= $generated@@481 ($generated@@341 $generated@@483 $generated@@482)) (exists (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (and (and (= (type $generated@@484) $generated@@100) (= (type $generated@@485) $generated@@100)) ($generated@@0 ($generated@@122 ($generated@@423 $generated@@481) ($generated@@326 ($generated@@255 $generated@@484 $generated@@485)))))
 :no-pattern (type $generated@@484)
 :no-pattern (type $generated@@485)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
 :no-pattern ($generated $generated@@485)
 :no-pattern ($generated@@0 $generated@@485)
))))))
 :pattern ( ($generated@@423 $generated@@481))
)))
(assert (forall (($generated@@486 T@U) ) (! (let (($generated@@487 ($generated@@362 (type $generated@@486))))
(let (($generated@@488 ($generated@@361 (type $generated@@486))))
 (=> (= (type $generated@@486) ($generated@@360 $generated@@488 $generated@@487)) (or (= $generated@@486 ($generated@@359 $generated@@488 $generated@@487)) (exists (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (and (and (= (type $generated@@489) $generated@@100) (= (type $generated@@490) $generated@@100)) ($generated@@0 ($generated@@122 ($generated@@434 $generated@@486) ($generated@@326 ($generated@@255 $generated@@489 $generated@@490)))))
 :no-pattern (type $generated@@489)
 :no-pattern (type $generated@@490)
 :no-pattern ($generated $generated@@489)
 :no-pattern ($generated@@0 $generated@@489)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
))))))
 :pattern ( ($generated@@434 $generated@@486))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@100) ($generated@@256 $generated@@491 $generated@@46)) (and (= ($generated@@326 ($generated@@424 $generated@@2 $generated@@491)) $generated@@491) ($generated@@81 ($generated@@424 $generated@@2 $generated@@491) $generated@@46)))
 :pattern ( ($generated@@256 $generated@@491 $generated@@46))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@100) ($generated@@256 $generated@@492 $generated@@47)) (and (= ($generated@@326 ($generated@@424 $generated@@3 $generated@@492)) $generated@@492) ($generated@@81 ($generated@@424 $generated@@3 $generated@@492) $generated@@47)))
 :pattern ( ($generated@@256 $generated@@492 $generated@@47))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@100) ($generated@@256 $generated@@493 $generated@@44)) (and (= ($generated@@326 ($generated@@424 $generated@@4 $generated@@493)) $generated@@493) ($generated@@81 ($generated@@424 $generated@@4 $generated@@493) $generated@@44)))
 :pattern ( ($generated@@256 $generated@@493 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@494) 21))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@100) ($generated@@256 $generated@@495 $generated@@45)) (and (= ($generated@@326 ($generated@@424 $generated@@494 $generated@@495)) $generated@@495) ($generated@@81 ($generated@@424 $generated@@494 $generated@@495) $generated@@45)))
 :pattern ( ($generated@@256 $generated@@495 $generated@@45))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@68) (= ($generated@@256 ($generated@@326 $generated@@496) $generated@@497) ($generated@@81 $generated@@496 $generated@@497)))
 :pattern ( ($generated@@256 ($generated@@326 $generated@@496) $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@120 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@117 $generated@@499 $generated@@2)) (<= 0 ($generated@@331 $generated@@498))))
 :pattern ( ($generated@@331 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (let (($generated@@501 ($generated@@313 (type $generated@@500))))
 (=> (= (type $generated@@500) ($generated@@312 $generated@@501)) (<= 0 ($generated@@311 $generated@@500))))
 :pattern ( ($generated@@311 $generated@@500))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@68)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@68) (= (type $generated@@505) $generated@@68)) (= ($generated@@502 ($generated@@452 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@452 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@68)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@68) (= (type $generated@@509) $generated@@68)) (= ($generated@@506 ($generated@@452 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@452 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@68) (= (type $generated@@511) $generated@@68)) (= ($generated@@92 ($generated@@452 $generated@@510 $generated@@511)) $generated@@58))
 :pattern ( ($generated@@452 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@68)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@68) (= (type $generated@@515) $generated@@68)) (= ($generated@@512 ($generated@@460 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@460 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@68)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@68) (= (type $generated@@519) $generated@@68)) (= ($generated@@516 ($generated@@460 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@460 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@68) (= (type $generated@@521) $generated@@68)) (= ($generated@@92 ($generated@@460 $generated@@520 $generated@@521)) $generated@@59))
 :pattern ( ($generated@@460 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@100) (= (type $generated@@523) $generated@@100)) (= ($generated@@188 ($generated@@255 $generated@@522 $generated@@523)) $generated@@61))
 :pattern ( ($generated@@255 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@68)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@68) (= (type $generated@@527) $generated@@68)) (= ($generated@@524 ($generated@@175 $generated@@526 $generated@@527)) $generated@@526))
 :pattern ( ($generated@@175 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@68)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (= (type $generated@@530) $generated@@68) (= (type $generated@@531) $generated@@68)) (= ($generated@@528 ($generated@@175 $generated@@530 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@175 $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@100) (= (type $generated@@533) $generated@@100)) (= ($generated@@182 ($generated@@255 $generated@@532 $generated@@533)) $generated@@532))
 :pattern ( ($generated@@255 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@100) (= (type $generated@@535) $generated@@100)) (= ($generated@@183 ($generated@@255 $generated@@534 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@255 $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@100) (= (type $generated@@537) $generated@@79)) (= ($generated@@188 ($generated@@99 $generated@@536 $generated@@537)) $generated@@65))
 :pattern ( ($generated@@99 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@100) (= (type $generated@@539) $generated@@79)) (= ($generated@@98 ($generated@@99 $generated@@538 $generated@@539)) $generated@@538))
 :pattern ( ($generated@@99 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@100) (= (type $generated@@541) $generated@@79)) (= ($generated@@97 ($generated@@99 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@99 $generated@@540 $generated@@541))
)))
(assert  (and (forall (($generated@@544 T@U) ) (! (= (type ($generated@@542 $generated@@544)) $generated@@68)
 :pattern ( ($generated@@542 $generated@@544))
)) (forall (($generated@@545 T@U) ($generated@@546 Int) ) (! (let (($generated@@547 ($generated@@313 (type $generated@@545))))
(= (type ($generated@@543 $generated@@545 $generated@@546)) $generated@@547))
 :pattern ( ($generated@@543 $generated@@545 $generated@@546))
))))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@312 $generated@@100)) (= (type $generated@@549) $generated@@68)) (= (type $generated@@550) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@115 $generated@@548 ($generated@@542 $generated@@549) $generated@@550) (forall (($generated@@551 Int) ) (!  (=> (and (<= 0 $generated@@551) (< $generated@@551 ($generated@@311 $generated@@548))) ($generated@@288 ($generated@@543 $generated@@548 $generated@@551) $generated@@549 $generated@@550))
 :pattern ( ($generated@@543 $generated@@548 $generated@@551))
))))
 :pattern ( ($generated@@115 $generated@@548 ($generated@@542 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@553 Int) ) (! (= ($generated@@552 ($generated@@116 $generated@@553)) $generated@@553)
 :pattern ( ($generated@@116 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@68)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@68) (= ($generated@@554 ($generated@@272 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@272 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@68) (= ($generated@@92 ($generated@@272 $generated@@557)) $generated@@54))
 :pattern ( ($generated@@272 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@68)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@68) (= ($generated@@558 ($generated@@277 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@277 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@68) (= ($generated@@92 ($generated@@277 $generated@@561)) $generated@@55))
 :pattern ( ($generated@@277 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@68)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@68) (= ($generated@@562 ($generated@@191 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@191 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@68) (= ($generated@@92 ($generated@@191 $generated@@565)) $generated@@56))
 :pattern ( ($generated@@191 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ) (! (= (type ($generated@@566 $generated@@567)) $generated@@68)
 :pattern ( ($generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@68) (= ($generated@@566 ($generated@@542 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@542 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@68) (= ($generated@@92 ($generated@@542 $generated@@569)) $generated@@57))
 :pattern ( ($generated@@542 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ) (! (= (type ($generated@@570 $generated@@571)) $generated@@68)
 :pattern ( ($generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@68) (= ($generated@@570 ($generated@@82 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@82 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@573)))
(= ($generated@@424 $generated@@574 ($generated@@326 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@326 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@342 $generated@@100 $generated@@100)) (= (type $generated@@576) $generated@@68)) (= (type $generated@@577) $generated@@68)) (= ($generated@@81 $generated@@575 ($generated@@452 $generated@@576 $generated@@577)) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@100) ($generated@@0 ($generated@@122 ($generated@@340 $generated@@575) $generated@@578))) (and ($generated@@256 ($generated@@122 ($generated@@425 $generated@@575) $generated@@578) $generated@@577) ($generated@@256 $generated@@578 $generated@@576)))
 :pattern ( ($generated@@122 ($generated@@425 $generated@@575) $generated@@578))
 :pattern ( ($generated@@122 ($generated@@340 $generated@@575) $generated@@578))
))))
 :pattern ( ($generated@@81 $generated@@575 ($generated@@452 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@360 $generated@@100 $generated@@100)) (= (type $generated@@580) $generated@@68)) (= (type $generated@@581) $generated@@68)) (= ($generated@@81 $generated@@579 ($generated@@460 $generated@@580 $generated@@581)) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@100) ($generated@@0 ($generated@@122 ($generated@@358 $generated@@579) $generated@@582))) (and ($generated@@256 ($generated@@122 ($generated@@435 $generated@@579) $generated@@582) $generated@@581) ($generated@@256 $generated@@582 $generated@@580)))
 :pattern ( ($generated@@122 ($generated@@435 $generated@@579) $generated@@582))
 :pattern ( ($generated@@122 ($generated@@358 $generated@@579) $generated@@582))
))))
 :pattern ( ($generated@@81 $generated@@579 ($generated@@460 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@100) (= (type $generated@@586) $generated@@100)) (< ($generated@@583 $generated@@585) ($generated@@584 ($generated@@255 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@255 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@100) (= (type $generated@@588) $generated@@100)) (< ($generated@@583 $generated@@588) ($generated@@584 ($generated@@255 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@255 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@100) (= (type $generated@@590) $generated@@79)) (< ($generated@@583 $generated@@589) ($generated@@584 ($generated@@99 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@99 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@100) (= (type $generated@@592) $generated@@79)) (< ($generated@@584 $generated@@592) ($generated@@584 ($generated@@99 $generated@@591 $generated@@592))))
 :pattern ( ($generated@@99 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@100) (= (type $generated@@594) $generated@@68)) (= (type $generated@@595) $generated@@68)) ($generated@@256 $generated@@593 ($generated@@452 $generated@@594 $generated@@595))) (and (= ($generated@@326 ($generated@@424 ($generated@@342 $generated@@100 $generated@@100) $generated@@593)) $generated@@593) ($generated@@81 ($generated@@424 ($generated@@342 $generated@@100 $generated@@100) $generated@@593) ($generated@@452 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@256 $generated@@593 ($generated@@452 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@100) (= (type $generated@@597) $generated@@68)) (= (type $generated@@598) $generated@@68)) ($generated@@256 $generated@@596 ($generated@@460 $generated@@597 $generated@@598))) (and (= ($generated@@326 ($generated@@424 ($generated@@360 $generated@@100 $generated@@100) $generated@@596)) $generated@@596) ($generated@@81 ($generated@@424 ($generated@@360 $generated@@100 $generated@@100) $generated@@596) ($generated@@460 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@256 $generated@@596 ($generated@@460 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@68) (= (type $generated@@600) $generated@@68)) (= (type $generated@@601) $generated@@100)) ($generated@@256 $generated@@601 ($generated@@175 $generated@@599 $generated@@600))) (and (= ($generated@@326 ($generated@@424 $generated@@79 $generated@@601)) $generated@@601) ($generated@@81 ($generated@@424 $generated@@79 $generated@@601) ($generated@@175 $generated@@599 $generated@@600))))
 :pattern ( ($generated@@256 $generated@@601 ($generated@@175 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@79) (= (type $generated@@603) $generated@@68)) (= (type $generated@@604) ($generated@@117 $generated@@118 $generated@@119))) (and ($generated@@252 $generated@@604) (and ($generated@@269 $generated@@602) ($generated@@115 $generated@@602 ($generated@@82 $generated@@603) $generated@@604)))) ($generated@@288 ($generated@@98 $generated@@602) $generated@@603 $generated@@604))
 :pattern ( ($generated@@288 ($generated@@98 $generated@@602) $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ) (! (let (($generated@@606 (type $generated@@605)))
 (not ($generated@@0 ($generated@@122 ($generated@@470 $generated@@606) $generated@@605))))
 :pattern ( (let (($generated@@606 (type $generated@@605)))
($generated@@122 ($generated@@470 $generated@@606) $generated@@605)))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@68) (= (type $generated@@608) $generated@@68)) (and (= ($generated@@92 ($generated@@175 $generated@@607 $generated@@608)) $generated@@62) (= ($generated@@337 ($generated@@175 $generated@@607 $generated@@608)) $generated@@66)))
 :pattern ( ($generated@@175 $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@79) (= ($generated@@583 ($generated@@326 $generated@@609)) ($generated@@584 $generated@@609)))
 :pattern ( ($generated@@583 ($generated@@326 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@610) $generated@@68) (= (type $generated@@611) $generated@@78)) (= (type $generated@@612) $generated@@79)) (= (type $generated@@613) $generated@@79)) (= ($generated@@77 $generated@@610 ($generated@@94 $generated@@611) $generated@@612 $generated@@613) ($generated@@77 $generated@@610 $generated@@611 $generated@@612 $generated@@613)))
 :pattern ( ($generated@@77 $generated@@610 ($generated@@94 $generated@@611) $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@100) ($generated@@256 $generated@@614 ($generated@@116 0))) (and (= ($generated@@326 ($generated@@424 $generated@@2 $generated@@614)) $generated@@614) ($generated@@81 ($generated@@424 ($generated@@117 $generated@@100 $generated@@4) $generated@@614) ($generated@@116 0))))
 :pattern ( ($generated@@256 $generated@@614 ($generated@@116 0)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@100) (= (type $generated@@616) $generated@@68)) ($generated@@256 $generated@@615 ($generated@@272 $generated@@616))) (and (= ($generated@@326 ($generated@@424 ($generated@@117 $generated@@100 $generated@@4) $generated@@615)) $generated@@615) ($generated@@81 ($generated@@424 ($generated@@117 $generated@@100 $generated@@4) $generated@@615) ($generated@@272 $generated@@616))))
 :pattern ( ($generated@@256 $generated@@615 ($generated@@272 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@100) (= (type $generated@@618) $generated@@68)) ($generated@@256 $generated@@617 ($generated@@277 $generated@@618))) (and (= ($generated@@326 ($generated@@424 ($generated@@117 $generated@@100 $generated@@4) $generated@@617)) $generated@@617) ($generated@@81 ($generated@@424 ($generated@@117 $generated@@100 $generated@@4) $generated@@617) ($generated@@277 $generated@@618))))
 :pattern ( ($generated@@256 $generated@@617 ($generated@@277 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@100) (= (type $generated@@620) $generated@@68)) ($generated@@256 $generated@@619 ($generated@@191 $generated@@620))) (and (= ($generated@@326 ($generated@@424 ($generated@@117 $generated@@100 $generated@@2) $generated@@619)) $generated@@619) ($generated@@81 ($generated@@424 ($generated@@117 $generated@@100 $generated@@2) $generated@@619) ($generated@@191 $generated@@620))))
 :pattern ( ($generated@@256 $generated@@619 ($generated@@191 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@100) (= (type $generated@@622) $generated@@68)) ($generated@@256 $generated@@621 ($generated@@542 $generated@@622))) (and (= ($generated@@326 ($generated@@424 ($generated@@312 $generated@@100) $generated@@621)) $generated@@621) ($generated@@81 ($generated@@424 ($generated@@312 $generated@@100) $generated@@621) ($generated@@542 $generated@@622))))
 :pattern ( ($generated@@256 $generated@@621 ($generated@@542 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (= (type $generated@@623) $generated@@68) (= (type $generated@@624) $generated@@100)) ($generated@@256 $generated@@624 ($generated@@82 $generated@@623))) (and (= ($generated@@326 ($generated@@424 $generated@@79 $generated@@624)) $generated@@624) ($generated@@81 ($generated@@424 $generated@@79 $generated@@624) ($generated@@82 $generated@@623))))
 :pattern ( ($generated@@256 $generated@@624 ($generated@@82 $generated@@623)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@79) (= (type $generated@@626) $generated@@68)) (= (type $generated@@627) ($generated@@117 $generated@@118 $generated@@119))) (and ($generated@@252 $generated@@627) (and ($generated@@269 $generated@@625) ($generated@@115 $generated@@625 ($generated@@82 $generated@@626) $generated@@627)))) ($generated@@115 ($generated@@97 $generated@@625) ($generated@@82 $generated@@626) $generated@@627))
 :pattern ( ($generated@@115 ($generated@@97 $generated@@625) ($generated@@82 $generated@@626) $generated@@627))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@628) ($generated@@117 $generated@@100 $generated@@2)) (= (type $generated@@629) $generated@@68)) (= (type $generated@@630) ($generated@@117 $generated@@118 $generated@@119))) (= ($generated@@115 $generated@@628 ($generated@@191 $generated@@629) $generated@@630) (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@100) (< 0 ($generated ($generated@@122 $generated@@628 $generated@@631)))) ($generated@@288 $generated@@631 $generated@@629 $generated@@630))
 :pattern ( ($generated@@122 $generated@@628 $generated@@631))
))))
 :pattern ( ($generated@@115 $generated@@628 ($generated@@191 $generated@@629) $generated@@630))
)))
(assert (= $generated@@189 ($generated@@95 $generated@@189)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) $generated@@79) (= (type $generated@@633) $generated@@68)) (= (type $generated@@634) ($generated@@117 $generated@@118 $generated@@119))) (and ($generated@@252 $generated@@634) (and ($generated@@174 $generated@@632) (exists (($generated@@635 T@U) ) (!  (and (= (type $generated@@635) $generated@@68) ($generated@@115 $generated@@632 ($generated@@175 $generated@@633 $generated@@635) $generated@@634))
 :pattern ( ($generated@@115 $generated@@632 ($generated@@175 $generated@@633 $generated@@635) $generated@@634))
))))) ($generated@@288 ($generated@@182 $generated@@632) $generated@@633 $generated@@634))
 :pattern ( ($generated@@288 ($generated@@182 $generated@@632) $generated@@633 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (and (and (= (type $generated@@636) $generated@@79) (= (type $generated@@637) $generated@@68)) (= (type $generated@@638) ($generated@@117 $generated@@118 $generated@@119))) (and ($generated@@252 $generated@@638) (and ($generated@@174 $generated@@636) (exists (($generated@@639 T@U) ) (!  (and (= (type $generated@@639) $generated@@68) ($generated@@115 $generated@@636 ($generated@@175 $generated@@639 $generated@@637) $generated@@638))
 :pattern ( ($generated@@115 $generated@@636 ($generated@@175 $generated@@639 $generated@@637) $generated@@638))
))))) ($generated@@288 ($generated@@183 $generated@@636) $generated@@637 $generated@@638))
 :pattern ( ($generated@@288 ($generated@@183 $generated@@636) $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@100) (= (type $generated@@641) $generated@@100)) (= ($generated@@255 ($generated@@95 $generated@@640) ($generated@@95 $generated@@641)) ($generated@@95 ($generated@@255 $generated@@640 $generated@@641))))
 :pattern ( ($generated@@255 ($generated@@95 $generated@@640) ($generated@@95 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (= (type $generated@@642) $generated@@100) (= (type $generated@@643) $generated@@79)) (= ($generated@@99 ($generated@@95 $generated@@642) ($generated@@95 $generated@@643)) ($generated@@95 ($generated@@99 $generated@@642 $generated@@643))))
 :pattern ( ($generated@@99 ($generated@@95 $generated@@642) ($generated@@95 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ) (! (= ($generated@@326 ($generated@@95 $generated@@644)) ($generated@@95 ($generated@@326 $generated@@644)))
 :pattern ( ($generated@@326 ($generated@@95 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ) (! (let (($generated@@646 ($generated@@313 (type $generated@@645))))
 (=> (and (= (type $generated@@645) ($generated@@312 $generated@@646)) (= ($generated@@311 $generated@@645) 0)) (= $generated@@645 ($generated@@310 $generated@@646))))
 :pattern ( ($generated@@311 $generated@@645))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (! (let (($generated@@650 (type $generated@@648)))
 (=> (and (and (= (type $generated@@647) ($generated@@117 $generated@@650 $generated@@2)) (= (type $generated@@649) $generated@@2)) (<= 0 ($generated $generated@@649))) (= ($generated@@331 ($generated@@123 $generated@@647 $generated@@648 $generated@@649)) (+ (- ($generated@@331 $generated@@647) ($generated ($generated@@122 $generated@@647 $generated@@648))) ($generated $generated@@649)))))
 :pattern ( ($generated@@331 ($generated@@123 $generated@@647 $generated@@648 $generated@@649)))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@652) $generated@@2)) ($generated@@115 $generated@@652 $generated@@46 $generated@@651))
 :pattern ( ($generated@@115 $generated@@652 $generated@@46 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@654) $generated@@3)) ($generated@@115 $generated@@654 $generated@@47 $generated@@653))
 :pattern ( ($generated@@115 $generated@@654 $generated@@47 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@656) $generated@@4)) ($generated@@115 $generated@@656 $generated@@44 $generated@@655))
 :pattern ( ($generated@@115 $generated@@656 $generated@@44 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@658) $generated@@494)) ($generated@@115 $generated@@658 $generated@@45 $generated@@657))
 :pattern ( ($generated@@115 $generated@@658 $generated@@45 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@117 $generated@@118 $generated@@119)) (= (type $generated@@660) $generated@@100)) ($generated@@115 $generated@@660 $generated@@48 $generated@@659))
 :pattern ( ($generated@@115 $generated@@660 $generated@@48 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@661) $generated@@68) (= (type $generated@@662) $generated@@100)) (= (type $generated@@663) $generated@@79)) (= (type $generated@@664) ($generated@@117 $generated@@118 $generated@@119))) ($generated@@252 $generated@@664)) (= ($generated@@115 ($generated@@99 $generated@@662 $generated@@663) ($generated@@82 $generated@@661) $generated@@664)  (and ($generated@@288 $generated@@662 $generated@@661 $generated@@664) ($generated@@115 $generated@@663 ($generated@@82 $generated@@661) $generated@@664))))
 :pattern ( ($generated@@115 ($generated@@99 $generated@@662 $generated@@663) ($generated@@82 $generated@@661) $generated@@664))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) ($generated@@312 $generated@@100)) (= (type $generated@@666) $generated@@68)) (= ($generated@@81 $generated@@665 ($generated@@542 $generated@@666)) (forall (($generated@@667 Int) ) (!  (=> (and (<= 0 $generated@@667) (< $generated@@667 ($generated@@311 $generated@@665))) ($generated@@256 ($generated@@543 $generated@@665 $generated@@667) $generated@@666))
 :pattern ( ($generated@@543 $generated@@665 $generated@@667))
))))
 :pattern ( ($generated@@81 $generated@@665 ($generated@@542 $generated@@666)))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 Int) ) (!  (=> (= (type $generated@@669) ($generated@@312 $generated@@100)) (=> (and (<= 0 $generated@@670) (< $generated@@670 ($generated@@311 $generated@@669))) (< ($generated@@584 ($generated@@424 $generated@@79 ($generated@@543 $generated@@669 $generated@@670))) ($generated@@668 $generated@@669))))
 :pattern ( ($generated@@584 ($generated@@424 $generated@@79 ($generated@@543 $generated@@669 $generated@@670))))
)))
(assert (forall (($generated@@671 T@U) ($generated@@672 T@U) ($generated@@673 T@U) ) (!  (=> (and (and (and (= (type $generated@@671) ($generated@@342 $generated@@100 $generated@@100)) (= (type $generated@@672) $generated@@68)) (= (type $generated@@673) $generated@@68)) ($generated@@81 $generated@@671 ($generated@@452 $generated@@672 $generated@@673))) (and (and ($generated@@81 ($generated@@340 $generated@@671) ($generated@@272 $generated@@672)) ($generated@@81 ($generated@@383 $generated@@671) ($generated@@272 $generated@@673))) ($generated@@81 ($generated@@423 $generated@@671) ($generated@@272 ($generated@@175 $generated@@672 $generated@@673)))))
 :pattern ( ($generated@@81 $generated@@671 ($generated@@452 $generated@@672 $generated@@673)))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (and (= (type $generated@@674) ($generated@@360 $generated@@100 $generated@@100)) (= (type $generated@@675) $generated@@68)) (= (type $generated@@676) $generated@@68)) ($generated@@81 $generated@@674 ($generated@@460 $generated@@675 $generated@@676))) (and (and ($generated@@81 ($generated@@358 $generated@@674) ($generated@@277 $generated@@675)) ($generated@@81 ($generated@@394 $generated@@674) ($generated@@277 $generated@@676))) ($generated@@81 ($generated@@434 $generated@@674) ($generated@@277 ($generated@@175 $generated@@675 $generated@@676)))))
 :pattern ( ($generated@@81 $generated@@674 ($generated@@460 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@2) ($generated@@81 $generated@@677 $generated@@46))
 :pattern ( ($generated@@81 $generated@@677 $generated@@46))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@3) ($generated@@81 $generated@@678 $generated@@47))
 :pattern ( ($generated@@81 $generated@@678 $generated@@47))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@4) ($generated@@81 $generated@@679 $generated@@44))
 :pattern ( ($generated@@81 $generated@@679 $generated@@44))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@494) ($generated@@81 $generated@@680 $generated@@45))
 :pattern ( ($generated@@81 $generated@@680 $generated@@45))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@100) ($generated@@81 $generated@@681 $generated@@48))
 :pattern ( ($generated@@81 $generated@@681 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 () T@U)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 (T@U) Bool)
(declare-fun $generated@@690 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@682) ($generated@@198 $generated@@118 $generated@@4)) (= (type $generated@@683) $generated@@118)) (= (type $generated@@684) ($generated@@117 $generated@@118 $generated@@119))) (= (type $generated@@685) $generated@@79)) (= (type $generated@@686) $generated@@79)) (= (type $generated@@687) $generated@@79)) (= (type $generated@@688) ($generated@@117 $generated@@118 $generated@@119))) (= (type $generated@@690) $generated@@68)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@691  (=> (and (and (= $generated@@682 ($generated@@197 $generated@@683 $generated@@684 $generated@@60 false)) ($generated@@404 $generated@@685)) (and ($generated@@404 $generated@@686) ($generated@@404 $generated@@687))) (=> (and (and (and ($generated@@252 $generated@@688) ($generated@@689 $generated@@688)) (= $generated@@684 $generated@@688)) (and (forall (($generated@@692 T@U) ($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (and (= (type $generated@@692) $generated@@79) (= (type $generated@@693) $generated@@79)) (= (type $generated@@694) $generated@@79)) (=> (and (and (and (and ($generated@@81 $generated@@692 ($generated@@82 $generated@@690)) ($generated@@81 $generated@@693 ($generated@@82 $generated@@690))) ($generated@@81 $generated@@694 ($generated@@82 $generated@@690))) ($generated@@0 ($generated@@95 ($generated@@11 true)))) (or (< ($generated@@584 $generated@@692) ($generated@@584 $generated@@685)) (and (= ($generated@@584 $generated@@692) ($generated@@584 $generated@@685)) (or (< ($generated@@584 $generated@@693) ($generated@@584 $generated@@686)) (and (= ($generated@@584 $generated@@693) ($generated@@584 $generated@@686)) (< ($generated@@584 $generated@@694) ($generated@@584 $generated@@687))))))) ($generated@@266 ($generated@@77 $generated@@690 ($generated@@94 $generated@@320) ($generated@@77 $generated@@690 ($generated@@94 $generated@@320) $generated@@692 $generated@@693) $generated@@694) ($generated@@77 $generated@@690 ($generated@@94 $generated@@320) $generated@@692 ($generated@@77 $generated@@690 ($generated@@94 $generated@@320) $generated@@693 $generated@@694)))))
 :no-pattern (type $generated@@692)
 :no-pattern (type $generated@@693)
 :no-pattern (type $generated@@694)
 :no-pattern ($generated $generated@@692)
 :no-pattern ($generated@@0 $generated@@692)
 :no-pattern ($generated $generated@@693)
 :no-pattern ($generated@@0 $generated@@693)
 :no-pattern ($generated $generated@@694)
 :no-pattern ($generated@@0 $generated@@694)
)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@266 ($generated@@77 $generated@@690 ($generated@@94 ($generated@@94 $generated@@320)) ($generated@@77 $generated@@690 ($generated@@94 ($generated@@94 $generated@@320)) $generated@@685 $generated@@686) $generated@@687) ($generated@@77 $generated@@690 ($generated@@94 ($generated@@94 $generated@@320)) $generated@@685 ($generated@@77 $generated@@690 ($generated@@94 ($generated@@94 $generated@@320)) $generated@@686 $generated@@687)))))))
(let (($generated@@695  (=> (and ($generated@@252 $generated@@684) ($generated@@689 $generated@@684)) (=> (and (and (and (and ($generated@@81 $generated@@685 ($generated@@82 $generated@@690)) ($generated@@115 $generated@@685 ($generated@@82 $generated@@690) $generated@@684)) ($generated@@404 $generated@@685)) (and (and ($generated@@81 $generated@@686 ($generated@@82 $generated@@690)) ($generated@@115 $generated@@686 ($generated@@82 $generated@@690) $generated@@684)) ($generated@@404 $generated@@686))) (and (and (and ($generated@@81 $generated@@687 ($generated@@82 $generated@@690)) ($generated@@115 $generated@@687 ($generated@@82 $generated@@690) $generated@@684)) ($generated@@404 $generated@@687)) (and (= 2 $generated@@76) (= (ControlFlow 0 3) 2)))) $generated@@691))))
$generated@@695)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
