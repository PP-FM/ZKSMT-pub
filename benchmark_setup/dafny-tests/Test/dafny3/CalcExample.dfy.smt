(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@T) T@U)
(declare-fun $generated@@184 (T@U) Int)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 (T@T T@T) T@U)
(declare-fun $generated@@193 (T@T T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@210 (T@T T@T) T@U)
(declare-fun $generated@@211 (T@T T@T) T@T)
(declare-fun $generated@@212 (T@T) T@T)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@236 () T@T)
(declare-fun $generated@@237 (T@U T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@261 (T@U T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@273 () Int)
(declare-fun $generated@@274 (Int Int) Int)
(declare-fun $generated@@275 (Int Int) Bool)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@U Int) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@349 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@1 ($generated@@129 $generated@@133 $generated@@134)) 12)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@130 ($generated@@129 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@131 ($generated@@129 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@129 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@131 (type $generated@@139))))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 (type $generated@@146)))
(let (($generated@@148 (type $generated@@144)))
(= (type ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146)) ($generated@@129 $generated@@148 $generated@@147))))
 :pattern ( ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@131 (type $generated@@149))))
 (=> (= (type $generated@@152) $generated@@153) (= ($generated@@127 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@150 $generated@@151) $generated@@152)))
 :weight 0
))) (and (and (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@127 ($generated@@132 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@127 ($generated@@132 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@127 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@127 ($generated@@132 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@127 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= (type ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@129 $generated@@72 $generated@@4))
 :pattern ( ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@64 (type $generated@@181))))
 (=> (and (and (and (and (= (type $generated@@176) $generated@@72) (= (type $generated@@177) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@178) ($generated@@63 $generated@@4))) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) ($generated@@63 $generated@@182))) (= ($generated@@0 ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (not (= $generated@@180 $generated@@176)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@177 $generated@@180) $generated@@178))) $generated@@179))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert  (and (and (forall (($generated@@187 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@187)) 13)) (forall (($generated@@188 T@T) ) (! (= ($generated@@186 ($generated@@185 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@185 $generated@@188))
))) (forall (($generated@@189 T@T) ) (! (= (type ($generated@@183 $generated@@189)) ($generated@@185 $generated@@189))
 :pattern ( ($generated@@183 $generated@@189))
))))
(assert (forall (($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@190)) 0)
 :pattern ( ($generated@@183 $generated@@190))
)))
(assert  (and (and (and (and (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (= ($generated@@1 ($generated@@193 $generated@@196 $generated@@197)) 14)) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@198 $generated@@199)) $generated@@198)
 :pattern ( ($generated@@193 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@195 ($generated@@193 $generated@@200 $generated@@201)) $generated@@201)
 :pattern ( ($generated@@193 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@194 (type $generated@@202))))
(= (type ($generated@@191 $generated@@202)) ($generated@@71 $generated@@203 $generated@@4)))
 :pattern ( ($generated@@191 $generated@@202))
))) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= (type ($generated@@192 $generated@@204 $generated@@205)) ($generated@@193 $generated@@204 $generated@@205))
 :pattern ( ($generated@@192 $generated@@204 $generated@@205))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@T) ) (! (let (($generated@@208 (type $generated@@206)))
 (not ($generated@@0 ($generated@@76 ($generated@@191 ($generated@@192 $generated@@208 $generated@@207)) $generated@@206))))
 :pattern ( (let (($generated@@208 (type $generated@@206)))
($generated@@76 ($generated@@191 ($generated@@192 $generated@@208 $generated@@207)) $generated@@206)))
)))
(assert  (and (and (and (and (forall (($generated@@214 T@T) ($generated@@215 T@T) ) (= ($generated@@1 ($generated@@211 $generated@@214 $generated@@215)) 15)) (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (! (= ($generated@@212 ($generated@@211 $generated@@216 $generated@@217)) $generated@@216)
 :pattern ( ($generated@@211 $generated@@216 $generated@@217))
))) (forall (($generated@@218 T@T) ($generated@@219 T@T) ) (! (= ($generated@@213 ($generated@@211 $generated@@218 $generated@@219)) $generated@@219)
 :pattern ( ($generated@@211 $generated@@218 $generated@@219))
))) (forall (($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@212 (type $generated@@220))))
(= (type ($generated@@209 $generated@@220)) ($generated@@71 $generated@@221 $generated@@4)))
 :pattern ( ($generated@@209 $generated@@220))
))) (forall (($generated@@222 T@T) ($generated@@223 T@T) ) (! (= (type ($generated@@210 $generated@@222 $generated@@223)) ($generated@@211 $generated@@222 $generated@@223))
 :pattern ( ($generated@@210 $generated@@222 $generated@@223))
))))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@T) ) (! (let (($generated@@226 (type $generated@@224)))
 (not ($generated@@0 ($generated@@76 ($generated@@209 ($generated@@210 $generated@@226 $generated@@225)) $generated@@224))))
 :pattern ( (let (($generated@@226 (type $generated@@224)))
($generated@@76 ($generated@@209 ($generated@@210 $generated@@226 $generated@@225)) $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@195 (type $generated@@227))))
(let (($generated@@229 ($generated@@194 (type $generated@@227))))
 (=> (= (type $generated@@227) ($generated@@193 $generated@@229 $generated@@228)) (or (= $generated@@227 ($generated@@192 $generated@@229 $generated@@228)) (exists (($generated@@230 T@U) ) (!  (and (= (type $generated@@230) $generated@@229) ($generated@@0 ($generated@@76 ($generated@@191 $generated@@227) $generated@@230)))
 :no-pattern (type $generated@@230)
 :no-pattern ($generated $generated@@230)
 :no-pattern ($generated@@0 $generated@@230)
))))))
 :pattern ( ($generated@@191 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@213 (type $generated@@231))))
(let (($generated@@233 ($generated@@212 (type $generated@@231))))
 (=> (= (type $generated@@231) ($generated@@211 $generated@@233 $generated@@232)) (or (= $generated@@231 ($generated@@210 $generated@@233 $generated@@232)) (exists (($generated@@234 T@U) ) (!  (and (= (type $generated@@234) $generated@@233) ($generated@@0 ($generated@@76 ($generated@@209 $generated@@231) $generated@@234)))
 :no-pattern (type $generated@@234)
 :no-pattern ($generated $generated@@234)
 :no-pattern ($generated@@0 $generated@@234)
))))))
 :pattern ( ($generated@@209 $generated@@231))
)))
(assert  (and (= ($generated@@1 $generated@@236) 16) (forall (($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@238)) $generated@@61)
 :pattern ( ($generated@@235 $generated@@238))
))))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (= (type $generated@@239) ($generated@@71 $generated@@236 $generated@@4)) (= (type $generated@@240) $generated@@61)) (= (type $generated@@241) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@239 ($generated@@235 $generated@@240) $generated@@241) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@236) ($generated@@0 ($generated@@76 $generated@@239 $generated@@242))) ($generated@@237 $generated@@242 $generated@@240 $generated@@241))
 :pattern ( ($generated@@76 $generated@@239 $generated@@242))
))))
 :pattern ( ($generated@@69 $generated@@239 ($generated@@235 $generated@@240) $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@61)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (= (type $generated@@245) ($generated@@71 $generated@@236 $generated@@4)) (= (type $generated@@246) $generated@@61)) (= (type $generated@@247) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@245 ($generated@@243 $generated@@246) $generated@@247) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@236) ($generated@@0 ($generated@@76 $generated@@245 $generated@@248))) ($generated@@237 $generated@@248 $generated@@246 $generated@@247))
 :pattern ( ($generated@@76 $generated@@245 $generated@@248))
))))
 :pattern ( ($generated@@69 $generated@@245 ($generated@@243 $generated@@246) $generated@@247))
)))
(assert  (and (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@249 $generated@@251 $generated@@252)) $generated@@61)
 :pattern ( ($generated@@249 $generated@@251 $generated@@252))
)) (forall (($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@195 (type $generated@@253))))
(let (($generated@@255 ($generated@@194 (type $generated@@253))))
(= (type ($generated@@250 $generated@@253)) ($generated@@71 $generated@@255 $generated@@254))))
 :pattern ( ($generated@@250 $generated@@253))
))))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) ($generated@@193 $generated@@236 $generated@@236)) (= (type $generated@@257) $generated@@61)) (= (type $generated@@258) $generated@@61)) (= (type $generated@@259) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@256 ($generated@@249 $generated@@257 $generated@@258) $generated@@259) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@236) ($generated@@0 ($generated@@76 ($generated@@191 $generated@@256) $generated@@260))) (and ($generated@@237 ($generated@@76 ($generated@@250 $generated@@256) $generated@@260) $generated@@258 $generated@@259) ($generated@@237 $generated@@260 $generated@@257 $generated@@259)))
 :pattern ( ($generated@@76 ($generated@@250 $generated@@256) $generated@@260))
 :pattern ( ($generated@@76 ($generated@@191 $generated@@256) $generated@@260))
))))
 :pattern ( ($generated@@69 $generated@@256 ($generated@@249 $generated@@257 $generated@@258) $generated@@259))
)))
(assert  (and (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (! (= (type ($generated@@261 $generated@@263 $generated@@264)) $generated@@61)
 :pattern ( ($generated@@261 $generated@@263 $generated@@264))
)) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@213 (type $generated@@265))))
(let (($generated@@267 ($generated@@212 (type $generated@@265))))
(= (type ($generated@@262 $generated@@265)) ($generated@@71 $generated@@267 $generated@@266))))
 :pattern ( ($generated@@262 $generated@@265))
))))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (= (type $generated@@268) ($generated@@211 $generated@@236 $generated@@236)) (= (type $generated@@269) $generated@@61)) (= (type $generated@@270) $generated@@61)) (= (type $generated@@271) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@268 ($generated@@261 $generated@@269 $generated@@270) $generated@@271) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@236) ($generated@@0 ($generated@@76 ($generated@@209 $generated@@268) $generated@@272))) (and ($generated@@237 ($generated@@76 ($generated@@262 $generated@@268) $generated@@272) $generated@@270 $generated@@271) ($generated@@237 $generated@@272 $generated@@269 $generated@@271)))
 :pattern ( ($generated@@76 ($generated@@262 $generated@@268) $generated@@272))
 :pattern ( ($generated@@76 ($generated@@209 $generated@@268) $generated@@272))
))))
 :pattern ( ($generated@@69 $generated@@268 ($generated@@261 $generated@@269 $generated@@270) $generated@@271))
)))
(assert  (=> (<= 0 $generated@@273) (forall (($generated@@276 Int) ($generated@@277 Int) ) (!  (=> (or ($generated@@275 $generated@@276 $generated@@277) (not (= 0 $generated@@273))) true)
 :pattern ( ($generated@@274 $generated@@276 $generated@@277))
))))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@71 $generated@@279 $generated@@4))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@213 (type $generated@@280))))
(let (($generated@@282 ($generated@@212 (type $generated@@280))))
 (=> (= (type $generated@@280) ($generated@@211 $generated@@282 $generated@@281)) (= (= $generated@@280 ($generated@@210 $generated@@282 $generated@@281)) (= ($generated@@209 $generated@@280) ($generated@@278 $generated@@282))))))
 :pattern ( ($generated@@209 $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@186 (type $generated@@283))))
 (=> (= (type $generated@@283) ($generated@@185 $generated@@284)) (<= 0 ($generated@@184 $generated@@283))))
 :pattern ( ($generated@@184 $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@61)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@61) (= (type $generated@@288) $generated@@61)) (= ($generated@@285 ($generated@@249 $generated@@287 $generated@@288)) $generated@@287))
 :pattern ( ($generated@@249 $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@61)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@61) (= (type $generated@@292) $generated@@61)) (= ($generated@@289 ($generated@@249 $generated@@291 $generated@@292)) $generated@@292))
 :pattern ( ($generated@@249 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@61) (= (type $generated@@294) $generated@@61)) (= ($generated@@67 ($generated@@249 $generated@@293 $generated@@294)) $generated@@58))
 :pattern ( ($generated@@249 $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@61)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@61) (= (type $generated@@298) $generated@@61)) (= ($generated@@295 ($generated@@261 $generated@@297 $generated@@298)) $generated@@297))
 :pattern ( ($generated@@261 $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@61)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@61) (= (type $generated@@302) $generated@@61)) (= ($generated@@299 ($generated@@261 $generated@@301 $generated@@302)) $generated@@302))
 :pattern ( ($generated@@261 $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@61) (= (type $generated@@304) $generated@@61)) (= ($generated@@67 ($generated@@261 $generated@@303 $generated@@304)) $generated@@59))
 :pattern ( ($generated@@261 $generated@@303 $generated@@304))
)))
(assert  (and (forall (($generated@@307 T@U) ) (! (= (type ($generated@@305 $generated@@307)) $generated@@61)
 :pattern ( ($generated@@305 $generated@@307))
)) (forall (($generated@@308 T@U) ($generated@@309 Int) ) (! (let (($generated@@310 ($generated@@186 (type $generated@@308))))
(= (type ($generated@@306 $generated@@308 $generated@@309)) $generated@@310))
 :pattern ( ($generated@@306 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (= (type $generated@@311) ($generated@@185 $generated@@236)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@311 ($generated@@305 $generated@@312) $generated@@313) (forall (($generated@@314 Int) ) (!  (=> (and (<= 0 $generated@@314) (< $generated@@314 ($generated@@184 $generated@@311))) ($generated@@237 ($generated@@306 $generated@@311 $generated@@314) $generated@@312 $generated@@313))
 :pattern ( ($generated@@306 $generated@@311 $generated@@314))
))))
 :pattern ( ($generated@@69 $generated@@311 ($generated@@305 $generated@@312) $generated@@313))
)))
(assert (forall (($generated@@316 Int) ) (! (= ($generated@@315 ($generated@@70 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@70 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@61)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@61) (= ($generated@@317 ($generated@@235 $generated@@319)) $generated@@319))
 :pattern ( ($generated@@235 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@61) (= ($generated@@67 ($generated@@235 $generated@@320)) $generated@@54))
 :pattern ( ($generated@@235 $generated@@320))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@61)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@61) (= ($generated@@321 ($generated@@243 $generated@@323)) $generated@@323))
 :pattern ( ($generated@@243 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@61) (= ($generated@@67 ($generated@@243 $generated@@324)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@324))
)))
(assert  (and (forall (($generated@@327 T@U) ) (! (= (type ($generated@@325 $generated@@327)) $generated@@61)
 :pattern ( ($generated@@325 $generated@@327))
)) (forall (($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@328)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@61) (= ($generated@@326 ($generated@@325 $generated@@329)) $generated@@329))
 :pattern ( ($generated@@325 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@61) (= ($generated@@67 ($generated@@325 $generated@@330)) $generated@@56))
 :pattern ( ($generated@@325 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (= (type ($generated@@331 $generated@@332)) $generated@@61)
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@61) (= ($generated@@331 ($generated@@305 $generated@@333)) $generated@@333))
 :pattern ( ($generated@@305 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@61) (= ($generated@@67 ($generated@@305 $generated@@334)) $generated@@57))
 :pattern ( ($generated@@305 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 (type $generated@@335)))
 (not ($generated@@0 ($generated@@76 ($generated@@278 $generated@@336) $generated@@335))))
 :pattern ( (let (($generated@@336 (type $generated@@335)))
($generated@@76 ($generated@@278 $generated@@336) $generated@@335)))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@71 $generated@@236 $generated@@2)) (= (type $generated@@338) $generated@@61)) (= (type $generated@@339) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@337 ($generated@@325 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@236) (< 0 ($generated ($generated@@76 $generated@@337 $generated@@340)))) ($generated@@237 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@76 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@69 $generated@@337 ($generated@@325 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@186 (type $generated@@341))))
 (=> (and (= (type $generated@@341) ($generated@@185 $generated@@342)) (= ($generated@@184 $generated@@341) 0)) (= $generated@@341 ($generated@@183 $generated@@342))))
 :pattern ( ($generated@@184 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@343) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@344) $generated@@2)) ($generated@@69 $generated@@344 $generated@@46 $generated@@343))
 :pattern ( ($generated@@69 $generated@@344 $generated@@46 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@345) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@346) $generated@@3)) ($generated@@69 $generated@@346 $generated@@47 $generated@@345))
 :pattern ( ($generated@@69 $generated@@346 $generated@@47 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@348) $generated@@4)) ($generated@@69 $generated@@348 $generated@@44 $generated@@347))
 :pattern ( ($generated@@69 $generated@@348 $generated@@44 $generated@@347))
)))
(assert (= ($generated@@1 $generated@@349) 17))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@351) $generated@@349)) ($generated@@69 $generated@@351 $generated@@45 $generated@@350))
 :pattern ( ($generated@@69 $generated@@351 $generated@@45 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@353) $generated@@236)) ($generated@@69 $generated@@353 $generated@@48 $generated@@352))
 :pattern ( ($generated@@69 $generated@@353 $generated@@48 $generated@@352))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@354 () Int)
(declare-fun $generated@@355 () Int)
(declare-fun $generated@@356 () Int)
(declare-fun $generated@@357 () Int)
(declare-fun $generated@@358 () T@U)
(declare-fun $generated@@359 (T@U) Bool)
(declare-fun $generated@@360 () T@U)
(declare-fun $generated@@361 (T@U) Bool)
(declare-fun $generated@@362 () T@U)
(declare-fun $generated@@363 () Int)
(declare-fun $generated@@364 () Int)
(declare-fun $generated@@365 () T@U)
(declare-fun $generated@@366 () Int)
(declare-fun $generated@@367 () T@U)
(declare-fun $generated@@368 () T@U)
(assert  (and (and (and (and (and (= (type $generated@@358) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@365) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@362) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@360) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@367) ($generated@@129 $generated@@72 $generated@@4))) (= (type $generated@@368) $generated@@72)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@369  (=> (= (ControlFlow 0 14) (- 0 13)) (<= ($generated@@274 $generated@@354 ($generated@@274 $generated@@355 $generated@@356)) $generated@@357))))
(let (($generated@@370  (=> (and (<= ($generated@@274 $generated@@354 ($generated@@274 $generated@@355 $generated@@356)) $generated@@357) (= (ControlFlow 0 15) 14)) $generated@@369)))
(let (($generated@@371  (=> (and ($generated@@69 ($generated@@8 $generated@@357) $generated@@46 $generated@@358) ($generated@@69 ($generated@@8 $generated@@357) $generated@@46 $generated@@358)) (=> (and (and (and ($generated@@275 $generated@@357 $generated@@357) ($generated@@275 $generated@@357 $generated@@357)) (and ($generated@@359 $generated@@360) ($generated@@361 $generated@@360))) (and (and ($generated@@275 $generated@@357 $generated@@357) (= ($generated@@274 $generated@@357 $generated@@357) $generated@@357)) (and (= $generated@@358 $generated@@360) (= (ControlFlow 0 12) (- 0 11))))) (= ($generated@@274 $generated@@357 $generated@@357) $generated@@357)))))
(let (($generated@@372  (=> (and (and ($generated@@69 ($generated@@8 $generated@@357) $generated@@46 $generated@@358) ($generated@@69 ($generated@@8 $generated@@356) $generated@@46 $generated@@358)) (and ($generated@@275 $generated@@357 $generated@@356) ($generated@@275 $generated@@357 $generated@@356))) (and (=> (= (ControlFlow 0 8) (- 0 10)) (<= $generated@@356 $generated@@357)) (=> (<= $generated@@356 $generated@@357) (and (=> (= (ControlFlow 0 8) (- 0 9)) (<= $generated@@356 $generated@@357)) (=> (<= $generated@@356 $generated@@357) (=> (and ($generated@@359 $generated@@362) ($generated@@361 $generated@@362)) (=> (and (and (and (forall (($generated@@373 Int) ) (!  (and ($generated@@275 $generated@@373 $generated@@356) ($generated@@275 $generated@@373 $generated@@357))
 :pattern ( ($generated@@274 $generated@@373 $generated@@357))
 :pattern ( ($generated@@274 $generated@@373 $generated@@356))
)) (forall (($generated@@374 Int) ) (!  (=> true (<= ($generated@@274 $generated@@374 $generated@@356) ($generated@@274 $generated@@374 $generated@@357)))
 :pattern ( ($generated@@274 $generated@@374 $generated@@357))
 :pattern ( ($generated@@274 $generated@@374 $generated@@356))
))) (and (= $generated@@358 $generated@@362) ($generated@@69 ($generated@@8 $generated@@357) $generated@@46 $generated@@362))) (and (and ($generated@@69 ($generated@@8 $generated@@357) $generated@@46 $generated@@362) ($generated@@275 $generated@@357 $generated@@357)) (and ($generated@@275 $generated@@357 $generated@@357) (= (ControlFlow 0 8) (- 0 7))))) (<= ($generated@@274 $generated@@357 $generated@@356) ($generated@@274 $generated@@357 $generated@@357)))))))))))
(let (($generated@@375  (=> ($generated@@69 ($generated@@8 $generated@@354) $generated@@46 $generated@@358) (=> (and (and ($generated@@69 ($generated@@8 $generated@@355) $generated@@46 $generated@@358) ($generated@@275 $generated@@354 $generated@@355)) (and (= $generated@@363 ($generated@@274 $generated@@354 $generated@@355)) ($generated@@69 ($generated@@8 $generated@@363) $generated@@46 $generated@@358))) (=> (and (and (and ($generated@@69 ($generated@@8 $generated@@356) $generated@@46 $generated@@358) ($generated@@275 ($generated@@274 $generated@@354 $generated@@355) $generated@@356)) (and ($generated@@275 $generated@@354 $generated@@355) ($generated@@275 ($generated@@274 $generated@@354 $generated@@355) $generated@@356))) (and (and ($generated@@69 ($generated@@8 $generated@@354) $generated@@46 $generated@@358) ($generated@@69 ($generated@@8 $generated@@355) $generated@@46 $generated@@358)) (and ($generated@@275 $generated@@354 $generated@@355) ($generated@@275 $generated@@354 $generated@@355)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (= ($generated@@274 $generated@@354 $generated@@355) $generated@@357)) (=> (= ($generated@@274 $generated@@354 $generated@@355) $generated@@357) (=> ($generated@@69 ($generated@@8 $generated@@357) $generated@@46 $generated@@358) (=> (and (and ($generated@@69 ($generated@@8 $generated@@356) $generated@@46 $generated@@358) ($generated@@275 $generated@@357 $generated@@356)) (and ($generated@@275 $generated@@357 $generated@@356) (= (ControlFlow 0 5) (- 0 4)))) (= ($generated@@274 ($generated@@274 $generated@@354 $generated@@355) $generated@@356) ($generated@@274 $generated@@357 $generated@@356)))))))))))
(let (($generated@@376  (=> ($generated@@69 ($generated@@8 $generated@@355) $generated@@46 $generated@@358) (=> (and ($generated@@69 ($generated@@8 $generated@@356) $generated@@46 $generated@@358) ($generated@@275 $generated@@355 $generated@@356)) (=> (and (and (and ($generated@@69 ($generated@@8 $generated@@354) $generated@@46 $generated@@358) (= $generated@@364 ($generated@@274 $generated@@355 $generated@@356))) (and ($generated@@69 ($generated@@8 $generated@@364) $generated@@46 $generated@@358) ($generated@@275 $generated@@354 ($generated@@274 $generated@@355 $generated@@356)))) (and (and ($generated@@275 $generated@@355 $generated@@356) ($generated@@275 $generated@@354 ($generated@@274 $generated@@355 $generated@@356))) (and ($generated@@359 $generated@@365) ($generated@@361 $generated@@365)))) (=> (and (and (and (and (and ($generated@@275 $generated@@355 $generated@@356) ($generated@@275 $generated@@354 ($generated@@274 $generated@@355 $generated@@356))) (and ($generated@@275 $generated@@354 $generated@@355) ($generated@@275 ($generated@@274 $generated@@354 $generated@@355) $generated@@356))) (= ($generated@@274 $generated@@354 ($generated@@274 $generated@@355 $generated@@356)) ($generated@@274 ($generated@@274 $generated@@354 $generated@@355) $generated@@356))) (and (and (= $generated@@358 $generated@@365) ($generated@@69 ($generated@@8 $generated@@354) $generated@@46 $generated@@365)) (and ($generated@@69 ($generated@@8 $generated@@355) $generated@@46 $generated@@365) ($generated@@275 $generated@@354 $generated@@355)))) (and (and (and (= $generated@@366 ($generated@@274 $generated@@354 $generated@@355)) ($generated@@69 ($generated@@8 $generated@@366) $generated@@46 $generated@@365)) (and ($generated@@69 ($generated@@8 $generated@@356) $generated@@46 $generated@@365) ($generated@@275 ($generated@@274 $generated@@354 $generated@@355) $generated@@356))) (and (and ($generated@@275 $generated@@354 $generated@@355) ($generated@@275 ($generated@@274 $generated@@354 $generated@@355) $generated@@356)) (= (ControlFlow 0 3) (- 0 2))))) (= ($generated@@274 $generated@@354 ($generated@@274 $generated@@355 $generated@@356)) ($generated@@274 ($generated@@274 $generated@@354 $generated@@355) $generated@@356))))))))
(let (($generated@@377 true))
(let (($generated@@378  (=> (= $generated@@367 ($generated@@128 $generated@@368 $generated@@358 $generated@@60 false)) (and (and (and (and (and (=> (= (ControlFlow 0 16) 1) $generated@@377) (=> (= (ControlFlow 0 16) 3) $generated@@376)) (=> (= (ControlFlow 0 16) 5) $generated@@375)) (=> (= (ControlFlow 0 16) 8) $generated@@372)) (=> (= (ControlFlow 0 16) 12) $generated@@371)) (=> (= (ControlFlow 0 16) 15) $generated@@370)))))
(let (($generated@@379  (=> (and ($generated@@359 $generated@@358) ($generated@@361 $generated@@358)) (=> (and (and (= 2 $generated@@273) (<= $generated@@356 $generated@@357)) (and (= $generated@@357 ($generated@@274 $generated@@354 $generated@@355)) (= (ControlFlow 0 17) 16))) $generated@@378))))
$generated@@379))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (Int) T@U)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@T) T@U)
(declare-fun $generated@@184 (T@U) Int)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 (T@T T@T) T@U)
(declare-fun $generated@@193 (T@T T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@T) T@T)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@210 (T@T T@T) T@U)
(declare-fun $generated@@211 (T@T T@T) T@T)
(declare-fun $generated@@212 (T@T) T@T)
(declare-fun $generated@@213 (T@T) T@T)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@236 () T@T)
(declare-fun $generated@@237 (T@U T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@261 (T@U T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@273 () Int)
(declare-fun $generated@@274 (Int Int) Int)
(declare-fun $generated@@275 (Int Int) Bool)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@305 (T@U) T@U)
(declare-fun $generated@@306 (T@U Int) T@U)
(declare-fun $generated@@315 (T@U) Int)
(declare-fun $generated@@317 (T@U) T@U)
(declare-fun $generated@@321 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@349 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@61) 6) (= (type $generated@@44) $generated@@61)) (= (type $generated@@45) $generated@@61)) (= (type $generated@@46) $generated@@61)) (= (type $generated@@47) $generated@@61)) (= (type $generated@@48) $generated@@61)) (= ($generated@@1 $generated@@62) 7)) (= (type $generated@@49) $generated@@62)) (= (type $generated@@50) $generated@@62)) (= (type $generated@@51) $generated@@62)) (= (type $generated@@52) $generated@@62)) (= (type $generated@@53) $generated@@62)) (= (type $generated@@54) $generated@@62)) (= (type $generated@@55) $generated@@62)) (= (type $generated@@56) $generated@@62)) (= (type $generated@@57) $generated@@62)) (= (type $generated@@58) $generated@@62)) (= (type $generated@@59) $generated@@62)) (forall (($generated@@65 T@T) ) (= ($generated@@1 ($generated@@63 $generated@@65)) 8))) (forall (($generated@@66 T@T) ) (! (= ($generated@@64 ($generated@@63 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
))) (= (type $generated@@60) ($generated@@63 $generated@@4))))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60)
)
(assert (forall (($generated@@68 T@U) ) (! (= (type ($generated@@67 $generated@@68)) $generated@@62)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (= ($generated@@67 $generated@@44) $generated@@49))
(assert (= ($generated@@67 $generated@@45) $generated@@50))
(assert (= ($generated@@67 $generated@@46) $generated@@51))
(assert (= ($generated@@67 $generated@@47) $generated@@52))
(assert (= ($generated@@67 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@80 $generated@@81)) 9)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@71 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@71 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (let (($generated@@88 ($generated@@75 (type $generated@@86))))
(= (type ($generated@@76 $generated@@86 $generated@@87)) $generated@@88))
 :pattern ( ($generated@@76 $generated@@86 $generated@@87))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (let (($generated@@92 (type $generated@@91)))
(let (($generated@@93 (type $generated@@90)))
(= (type ($generated@@77 $generated@@89 $generated@@90 $generated@@91)) ($generated@@71 $generated@@93 $generated@@92))))
 :pattern ( ($generated@@77 $generated@@89 $generated@@90 $generated@@91))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@75 (type $generated@@94))))
 (=> (= (type $generated@@96) $generated@@97) (= ($generated@@76 ($generated@@77 $generated@@94 $generated@@95 $generated@@96) $generated@@95) $generated@@96)))
 :weight 0
))) (and (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@100 $generated@@101) (= ($generated@@76 ($generated@@77 $generated@@99 $generated@@100 $generated@@98) $generated@@101) ($generated@@76 $generated@@99 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or true (= ($generated@@76 ($generated@@77 $generated@@103 $generated@@104 $generated@@102) $generated@@105) ($generated@@76 $generated@@103 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@72) 10)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@64 (type $generated@@107))))
(= (type ($generated@@78 $generated@@106 $generated@@107)) $generated@@108))
 :pattern ( ($generated@@78 $generated@@106 $generated@@107))
))) (= ($generated@@1 $generated@@73) 11)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= (type ($generated@@79 $generated@@109 $generated@@110 $generated@@111)) $generated@@73)
 :pattern ( ($generated@@79 $generated@@109 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@64 (type $generated@@113))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@78 ($generated@@79 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 ($generated@@79 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@78 ($generated@@79 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@78 $generated@@121 $generated@@123)))
 :weight 0
)))) (forall (($generated@@124 Int) ) (! (= (type ($generated@@70 $generated@@124)) $generated@@61)
 :pattern ( ($generated@@70 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (= (type $generated@@125) $generated@@2) (= (type $generated@@126) ($generated@@71 $generated@@72 $generated@@73))) ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
 :pattern ( ($generated@@69 $generated@@125 ($generated@@70 0) $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@1 ($generated@@129 $generated@@133 $generated@@134)) 12)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@130 ($generated@@129 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@131 ($generated@@129 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@129 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (let (($generated@@142 ($generated@@131 (type $generated@@139))))
(= (type ($generated@@127 $generated@@139 $generated@@140 $generated@@141)) $generated@@142))
 :pattern ( ($generated@@127 $generated@@139 $generated@@140 $generated@@141))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (let (($generated@@147 (type $generated@@146)))
(let (($generated@@148 (type $generated@@144)))
(= (type ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146)) ($generated@@129 $generated@@148 $generated@@147))))
 :pattern ( ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@146))
))) (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (let (($generated@@153 ($generated@@131 (type $generated@@149))))
 (=> (= (type $generated@@152) $generated@@153) (= ($generated@@127 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@150 $generated@@151) $generated@@152)))
 :weight 0
))) (and (and (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@127 ($generated@@132 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@127 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@127 ($generated@@132 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@127 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
))) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or true (= ($generated@@127 ($generated@@132 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@127 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ) (! (= (type ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175)) ($generated@@129 $generated@@72 $generated@@4))
 :pattern ( ($generated@@128 $generated@@172 $generated@@173 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 ($generated@@64 (type $generated@@181))))
 (=> (and (and (and (and (= (type $generated@@176) $generated@@72) (= (type $generated@@177) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@178) ($generated@@63 $generated@@4))) (= (type $generated@@180) $generated@@72)) (= (type $generated@@181) ($generated@@63 $generated@@182))) (= ($generated@@0 ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (not (= $generated@@180 $generated@@176)) ($generated@@0 ($generated@@78 ($generated@@76 $generated@@177 $generated@@180) $generated@@178))) $generated@@179))))
 :pattern ( ($generated@@127 ($generated@@128 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert  (and (and (forall (($generated@@187 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@187)) 13)) (forall (($generated@@188 T@T) ) (! (= ($generated@@186 ($generated@@185 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@185 $generated@@188))
))) (forall (($generated@@189 T@T) ) (! (= (type ($generated@@183 $generated@@189)) ($generated@@185 $generated@@189))
 :pattern ( ($generated@@183 $generated@@189))
))))
(assert (forall (($generated@@190 T@T) ) (! (= ($generated@@184 ($generated@@183 $generated@@190)) 0)
 :pattern ( ($generated@@183 $generated@@190))
)))
(assert  (and (and (and (and (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (= ($generated@@1 ($generated@@193 $generated@@196 $generated@@197)) 14)) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@194 ($generated@@193 $generated@@198 $generated@@199)) $generated@@198)
 :pattern ( ($generated@@193 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@195 ($generated@@193 $generated@@200 $generated@@201)) $generated@@201)
 :pattern ( ($generated@@193 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@U) ) (! (let (($generated@@203 ($generated@@194 (type $generated@@202))))
(= (type ($generated@@191 $generated@@202)) ($generated@@71 $generated@@203 $generated@@4)))
 :pattern ( ($generated@@191 $generated@@202))
))) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (! (= (type ($generated@@192 $generated@@204 $generated@@205)) ($generated@@193 $generated@@204 $generated@@205))
 :pattern ( ($generated@@192 $generated@@204 $generated@@205))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@T) ) (! (let (($generated@@208 (type $generated@@206)))
 (not ($generated@@0 ($generated@@76 ($generated@@191 ($generated@@192 $generated@@208 $generated@@207)) $generated@@206))))
 :pattern ( (let (($generated@@208 (type $generated@@206)))
($generated@@76 ($generated@@191 ($generated@@192 $generated@@208 $generated@@207)) $generated@@206)))
)))
(assert  (and (and (and (and (forall (($generated@@214 T@T) ($generated@@215 T@T) ) (= ($generated@@1 ($generated@@211 $generated@@214 $generated@@215)) 15)) (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (! (= ($generated@@212 ($generated@@211 $generated@@216 $generated@@217)) $generated@@216)
 :pattern ( ($generated@@211 $generated@@216 $generated@@217))
))) (forall (($generated@@218 T@T) ($generated@@219 T@T) ) (! (= ($generated@@213 ($generated@@211 $generated@@218 $generated@@219)) $generated@@219)
 :pattern ( ($generated@@211 $generated@@218 $generated@@219))
))) (forall (($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@212 (type $generated@@220))))
(= (type ($generated@@209 $generated@@220)) ($generated@@71 $generated@@221 $generated@@4)))
 :pattern ( ($generated@@209 $generated@@220))
))) (forall (($generated@@222 T@T) ($generated@@223 T@T) ) (! (= (type ($generated@@210 $generated@@222 $generated@@223)) ($generated@@211 $generated@@222 $generated@@223))
 :pattern ( ($generated@@210 $generated@@222 $generated@@223))
))))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@T) ) (! (let (($generated@@226 (type $generated@@224)))
 (not ($generated@@0 ($generated@@76 ($generated@@209 ($generated@@210 $generated@@226 $generated@@225)) $generated@@224))))
 :pattern ( (let (($generated@@226 (type $generated@@224)))
($generated@@76 ($generated@@209 ($generated@@210 $generated@@226 $generated@@225)) $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@195 (type $generated@@227))))
(let (($generated@@229 ($generated@@194 (type $generated@@227))))
 (=> (= (type $generated@@227) ($generated@@193 $generated@@229 $generated@@228)) (or (= $generated@@227 ($generated@@192 $generated@@229 $generated@@228)) (exists (($generated@@230 T@U) ) (!  (and (= (type $generated@@230) $generated@@229) ($generated@@0 ($generated@@76 ($generated@@191 $generated@@227) $generated@@230)))
 :no-pattern (type $generated@@230)
 :no-pattern ($generated $generated@@230)
 :no-pattern ($generated@@0 $generated@@230)
))))))
 :pattern ( ($generated@@191 $generated@@227))
)))
(assert (forall (($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@213 (type $generated@@231))))
(let (($generated@@233 ($generated@@212 (type $generated@@231))))
 (=> (= (type $generated@@231) ($generated@@211 $generated@@233 $generated@@232)) (or (= $generated@@231 ($generated@@210 $generated@@233 $generated@@232)) (exists (($generated@@234 T@U) ) (!  (and (= (type $generated@@234) $generated@@233) ($generated@@0 ($generated@@76 ($generated@@209 $generated@@231) $generated@@234)))
 :no-pattern (type $generated@@234)
 :no-pattern ($generated $generated@@234)
 :no-pattern ($generated@@0 $generated@@234)
))))))
 :pattern ( ($generated@@209 $generated@@231))
)))
(assert  (and (= ($generated@@1 $generated@@236) 16) (forall (($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@238)) $generated@@61)
 :pattern ( ($generated@@235 $generated@@238))
))))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (= (type $generated@@239) ($generated@@71 $generated@@236 $generated@@4)) (= (type $generated@@240) $generated@@61)) (= (type $generated@@241) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@239 ($generated@@235 $generated@@240) $generated@@241) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@236) ($generated@@0 ($generated@@76 $generated@@239 $generated@@242))) ($generated@@237 $generated@@242 $generated@@240 $generated@@241))
 :pattern ( ($generated@@76 $generated@@239 $generated@@242))
))))
 :pattern ( ($generated@@69 $generated@@239 ($generated@@235 $generated@@240) $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@61)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (= (type $generated@@245) ($generated@@71 $generated@@236 $generated@@4)) (= (type $generated@@246) $generated@@61)) (= (type $generated@@247) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@245 ($generated@@243 $generated@@246) $generated@@247) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@236) ($generated@@0 ($generated@@76 $generated@@245 $generated@@248))) ($generated@@237 $generated@@248 $generated@@246 $generated@@247))
 :pattern ( ($generated@@76 $generated@@245 $generated@@248))
))))
 :pattern ( ($generated@@69 $generated@@245 ($generated@@243 $generated@@246) $generated@@247))
)))
(assert  (and (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@249 $generated@@251 $generated@@252)) $generated@@61)
 :pattern ( ($generated@@249 $generated@@251 $generated@@252))
)) (forall (($generated@@253 T@U) ) (! (let (($generated@@254 ($generated@@195 (type $generated@@253))))
(let (($generated@@255 ($generated@@194 (type $generated@@253))))
(= (type ($generated@@250 $generated@@253)) ($generated@@71 $generated@@255 $generated@@254))))
 :pattern ( ($generated@@250 $generated@@253))
))))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (and (and (= (type $generated@@256) ($generated@@193 $generated@@236 $generated@@236)) (= (type $generated@@257) $generated@@61)) (= (type $generated@@258) $generated@@61)) (= (type $generated@@259) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@256 ($generated@@249 $generated@@257 $generated@@258) $generated@@259) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@236) ($generated@@0 ($generated@@76 ($generated@@191 $generated@@256) $generated@@260))) (and ($generated@@237 ($generated@@76 ($generated@@250 $generated@@256) $generated@@260) $generated@@258 $generated@@259) ($generated@@237 $generated@@260 $generated@@257 $generated@@259)))
 :pattern ( ($generated@@76 ($generated@@250 $generated@@256) $generated@@260))
 :pattern ( ($generated@@76 ($generated@@191 $generated@@256) $generated@@260))
))))
 :pattern ( ($generated@@69 $generated@@256 ($generated@@249 $generated@@257 $generated@@258) $generated@@259))
)))
(assert  (and (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (! (= (type ($generated@@261 $generated@@263 $generated@@264)) $generated@@61)
 :pattern ( ($generated@@261 $generated@@263 $generated@@264))
)) (forall (($generated@@265 T@U) ) (! (let (($generated@@266 ($generated@@213 (type $generated@@265))))
(let (($generated@@267 ($generated@@212 (type $generated@@265))))
(= (type ($generated@@262 $generated@@265)) ($generated@@71 $generated@@267 $generated@@266))))
 :pattern ( ($generated@@262 $generated@@265))
))))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (and (and (= (type $generated@@268) ($generated@@211 $generated@@236 $generated@@236)) (= (type $generated@@269) $generated@@61)) (= (type $generated@@270) $generated@@61)) (= (type $generated@@271) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@268 ($generated@@261 $generated@@269 $generated@@270) $generated@@271) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@236) ($generated@@0 ($generated@@76 ($generated@@209 $generated@@268) $generated@@272))) (and ($generated@@237 ($generated@@76 ($generated@@262 $generated@@268) $generated@@272) $generated@@270 $generated@@271) ($generated@@237 $generated@@272 $generated@@269 $generated@@271)))
 :pattern ( ($generated@@76 ($generated@@262 $generated@@268) $generated@@272))
 :pattern ( ($generated@@76 ($generated@@209 $generated@@268) $generated@@272))
))))
 :pattern ( ($generated@@69 $generated@@268 ($generated@@261 $generated@@269 $generated@@270) $generated@@271))
)))
(assert  (=> (<= 0 $generated@@273) (forall (($generated@@276 Int) ($generated@@277 Int) ) (!  (=> (or ($generated@@275 $generated@@276 $generated@@277) (not (= 0 $generated@@273))) true)
 :pattern ( ($generated@@274 $generated@@276 $generated@@277))
))))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@71 $generated@@279 $generated@@4))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (! (let (($generated@@281 ($generated@@213 (type $generated@@280))))
(let (($generated@@282 ($generated@@212 (type $generated@@280))))
 (=> (= (type $generated@@280) ($generated@@211 $generated@@282 $generated@@281)) (= (= $generated@@280 ($generated@@210 $generated@@282 $generated@@281)) (= ($generated@@209 $generated@@280) ($generated@@278 $generated@@282))))))
 :pattern ( ($generated@@209 $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@186 (type $generated@@283))))
 (=> (= (type $generated@@283) ($generated@@185 $generated@@284)) (<= 0 ($generated@@184 $generated@@283))))
 :pattern ( ($generated@@184 $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@61)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@61) (= (type $generated@@288) $generated@@61)) (= ($generated@@285 ($generated@@249 $generated@@287 $generated@@288)) $generated@@287))
 :pattern ( ($generated@@249 $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@61)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@61) (= (type $generated@@292) $generated@@61)) (= ($generated@@289 ($generated@@249 $generated@@291 $generated@@292)) $generated@@292))
 :pattern ( ($generated@@249 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@293) $generated@@61) (= (type $generated@@294) $generated@@61)) (= ($generated@@67 ($generated@@249 $generated@@293 $generated@@294)) $generated@@58))
 :pattern ( ($generated@@249 $generated@@293 $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@61)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@61) (= (type $generated@@298) $generated@@61)) (= ($generated@@295 ($generated@@261 $generated@@297 $generated@@298)) $generated@@297))
 :pattern ( ($generated@@261 $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@61)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@61) (= (type $generated@@302) $generated@@61)) (= ($generated@@299 ($generated@@261 $generated@@301 $generated@@302)) $generated@@302))
 :pattern ( ($generated@@261 $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@61) (= (type $generated@@304) $generated@@61)) (= ($generated@@67 ($generated@@261 $generated@@303 $generated@@304)) $generated@@59))
 :pattern ( ($generated@@261 $generated@@303 $generated@@304))
)))
(assert  (and (forall (($generated@@307 T@U) ) (! (= (type ($generated@@305 $generated@@307)) $generated@@61)
 :pattern ( ($generated@@305 $generated@@307))
)) (forall (($generated@@308 T@U) ($generated@@309 Int) ) (! (let (($generated@@310 ($generated@@186 (type $generated@@308))))
(= (type ($generated@@306 $generated@@308 $generated@@309)) $generated@@310))
 :pattern ( ($generated@@306 $generated@@308 $generated@@309))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and (= (type $generated@@311) ($generated@@185 $generated@@236)) (= (type $generated@@312) $generated@@61)) (= (type $generated@@313) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@311 ($generated@@305 $generated@@312) $generated@@313) (forall (($generated@@314 Int) ) (!  (=> (and (<= 0 $generated@@314) (< $generated@@314 ($generated@@184 $generated@@311))) ($generated@@237 ($generated@@306 $generated@@311 $generated@@314) $generated@@312 $generated@@313))
 :pattern ( ($generated@@306 $generated@@311 $generated@@314))
))))
 :pattern ( ($generated@@69 $generated@@311 ($generated@@305 $generated@@312) $generated@@313))
)))
(assert (forall (($generated@@316 Int) ) (! (= ($generated@@315 ($generated@@70 $generated@@316)) $generated@@316)
 :pattern ( ($generated@@70 $generated@@316))
)))
(assert (forall (($generated@@318 T@U) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@61)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@61) (= ($generated@@317 ($generated@@235 $generated@@319)) $generated@@319))
 :pattern ( ($generated@@235 $generated@@319))
)))
(assert (forall (($generated@@320 T@U) ) (!  (=> (= (type $generated@@320) $generated@@61) (= ($generated@@67 ($generated@@235 $generated@@320)) $generated@@54))
 :pattern ( ($generated@@235 $generated@@320))
)))
(assert (forall (($generated@@322 T@U) ) (! (= (type ($generated@@321 $generated@@322)) $generated@@61)
 :pattern ( ($generated@@321 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (= (type $generated@@323) $generated@@61) (= ($generated@@321 ($generated@@243 $generated@@323)) $generated@@323))
 :pattern ( ($generated@@243 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@61) (= ($generated@@67 ($generated@@243 $generated@@324)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@324))
)))
(assert  (and (forall (($generated@@327 T@U) ) (! (= (type ($generated@@325 $generated@@327)) $generated@@61)
 :pattern ( ($generated@@325 $generated@@327))
)) (forall (($generated@@328 T@U) ) (! (= (type ($generated@@326 $generated@@328)) $generated@@61)
 :pattern ( ($generated@@326 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ) (!  (=> (= (type $generated@@329) $generated@@61) (= ($generated@@326 ($generated@@325 $generated@@329)) $generated@@329))
 :pattern ( ($generated@@325 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (= (type $generated@@330) $generated@@61) (= ($generated@@67 ($generated@@325 $generated@@330)) $generated@@56))
 :pattern ( ($generated@@325 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (= (type ($generated@@331 $generated@@332)) $generated@@61)
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ) (!  (=> (= (type $generated@@333) $generated@@61) (= ($generated@@331 ($generated@@305 $generated@@333)) $generated@@333))
 :pattern ( ($generated@@305 $generated@@333))
)))
(assert (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@61) (= ($generated@@67 ($generated@@305 $generated@@334)) $generated@@57))
 :pattern ( ($generated@@305 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (! (let (($generated@@336 (type $generated@@335)))
 (not ($generated@@0 ($generated@@76 ($generated@@278 $generated@@336) $generated@@335))))
 :pattern ( (let (($generated@@336 (type $generated@@335)))
($generated@@76 ($generated@@278 $generated@@336) $generated@@335)))
)))
(assert (forall (($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (= (type $generated@@337) ($generated@@71 $generated@@236 $generated@@2)) (= (type $generated@@338) $generated@@61)) (= (type $generated@@339) ($generated@@71 $generated@@72 $generated@@73))) (= ($generated@@69 $generated@@337 ($generated@@325 $generated@@338) $generated@@339) (forall (($generated@@340 T@U) ) (!  (=> (and (= (type $generated@@340) $generated@@236) (< 0 ($generated ($generated@@76 $generated@@337 $generated@@340)))) ($generated@@237 $generated@@340 $generated@@338 $generated@@339))
 :pattern ( ($generated@@76 $generated@@337 $generated@@340))
))))
 :pattern ( ($generated@@69 $generated@@337 ($generated@@325 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@186 (type $generated@@341))))
 (=> (and (= (type $generated@@341) ($generated@@185 $generated@@342)) (= ($generated@@184 $generated@@341) 0)) (= $generated@@341 ($generated@@183 $generated@@342))))
 :pattern ( ($generated@@184 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@343) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@344) $generated@@2)) ($generated@@69 $generated@@344 $generated@@46 $generated@@343))
 :pattern ( ($generated@@69 $generated@@344 $generated@@46 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ) (!  (=> (and (= (type $generated@@345) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@346) $generated@@3)) ($generated@@69 $generated@@346 $generated@@47 $generated@@345))
 :pattern ( ($generated@@69 $generated@@346 $generated@@47 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@347) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@348) $generated@@4)) ($generated@@69 $generated@@348 $generated@@44 $generated@@347))
 :pattern ( ($generated@@69 $generated@@348 $generated@@44 $generated@@347))
)))
(assert (= ($generated@@1 $generated@@349) 17))
(assert (forall (($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@350) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@351) $generated@@349)) ($generated@@69 $generated@@351 $generated@@45 $generated@@350))
 :pattern ( ($generated@@69 $generated@@351 $generated@@45 $generated@@350))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@352) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@353) $generated@@236)) ($generated@@69 $generated@@353 $generated@@48 $generated@@352))
 :pattern ( ($generated@@69 $generated@@353 $generated@@48 $generated@@352))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@354 () Int)
(declare-fun $generated@@355 () Int)
(declare-fun $generated@@356 (T@U) Bool)
(declare-fun $generated@@357 () T@U)
(declare-fun $generated@@358 (T@U) Bool)
(declare-fun $generated@@359 () T@U)
(declare-fun $generated@@360 () Int)
(declare-fun $generated@@361 () Int)
(declare-fun $generated@@362 () Int)
(declare-fun $generated@@363 () Int)
(declare-fun $generated@@364 () T@U)
(declare-fun $generated@@365 () Int)
(declare-fun $generated@@366 () T@U)
(declare-fun $generated@@367 () T@U)
(declare-fun $generated@@368 () T@U)
(declare-fun $generated@@369 () Int)
(declare-fun $generated@@370 () Int)
(assert  (and (and (and (and (and (= (type $generated@@366) ($generated@@71 $generated@@72 $generated@@73)) (= (type $generated@@359) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@364) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@357) ($generated@@71 $generated@@72 $generated@@73))) (= (type $generated@@367) ($generated@@129 $generated@@72 $generated@@4))) (= (type $generated@@368) $generated@@72)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 29) (let (($generated@@371  (=> (<= $generated@@354 $generated@@355) (and (=> (= (ControlFlow 0 23) (- 0 24)) (<= $generated@@354 $generated@@355)) (=> (<= $generated@@354 $generated@@355) (=> (and ($generated@@356 $generated@@357) ($generated@@358 $generated@@357)) (=> (and (and (forall (($generated@@372 Int) ) (!  (and ($generated@@275 $generated@@372 $generated@@354) ($generated@@275 $generated@@372 $generated@@355))
 :pattern ( ($generated@@274 $generated@@372 $generated@@355))
 :pattern ( ($generated@@274 $generated@@372 $generated@@354))
)) (forall (($generated@@373 Int) ) (!  (=> true (<= ($generated@@274 $generated@@373 $generated@@354) ($generated@@274 $generated@@373 $generated@@355)))
 :pattern ( ($generated@@274 $generated@@373 $generated@@355))
 :pattern ( ($generated@@274 $generated@@373 $generated@@354))
))) (and (= $generated@@359 $generated@@357) (= (ControlFlow 0 23) (- 0 22)))) (<= ($generated@@274 $generated@@355 $generated@@354) ($generated@@274 $generated@@355 $generated@@355)))))))))
(let (($generated@@374  (=> (and (<= $generated@@354 $generated@@355) (= (ControlFlow 0 21) (- 0 20))) (<= $generated@@354 $generated@@355))))
(let (($generated@@375  (and (=> (= (ControlFlow 0 25) 21) $generated@@374) (=> (= (ControlFlow 0 25) 23) $generated@@371))))
(let (($generated@@376  (=> (= (ControlFlow 0 14) (- 0 13)) (<= ($generated@@274 $generated@@360 ($generated@@274 $generated@@361 $generated@@354)) $generated@@355))))
(let (($generated@@377  (=> (and (<= ($generated@@274 $generated@@360 ($generated@@274 $generated@@361 $generated@@354)) $generated@@355) (= (ControlFlow 0 15) 14)) $generated@@376)))
(let (($generated@@378  (=> (= ($generated@@274 $generated@@360 ($generated@@274 $generated@@361 $generated@@354)) ($generated@@274 $generated@@355 $generated@@354)) (=> (and (<= ($generated@@274 $generated@@355 $generated@@354) $generated@@355) (= (ControlFlow 0 12) (- 0 11))) (<= ($generated@@274 $generated@@360 ($generated@@274 $generated@@361 $generated@@354)) $generated@@355)))))
(let (($generated@@379  (=> ($generated@@69 ($generated@@8 $generated@@361) $generated@@46 $generated@@359) (=> (and (and (and ($generated@@69 ($generated@@8 $generated@@354) $generated@@46 $generated@@359) ($generated@@275 $generated@@361 $generated@@354)) (and ($generated@@69 ($generated@@8 $generated@@360) $generated@@46 $generated@@359) (= $generated@@362 ($generated@@274 $generated@@361 $generated@@354)))) (and (and ($generated@@69 ($generated@@8 $generated@@362) $generated@@46 $generated@@359) ($generated@@275 $generated@@360 ($generated@@274 $generated@@361 $generated@@354))) (and ($generated@@275 $generated@@361 $generated@@354) ($generated@@275 $generated@@360 ($generated@@274 $generated@@361 $generated@@354))))) (and (=> (= (ControlFlow 0 16) 12) $generated@@378) (=> (= (ControlFlow 0 16) 15) $generated@@377))))))
(let (($generated@@380  (=> (<= ($generated@@274 $generated@@355 $generated@@354) ($generated@@274 $generated@@355 $generated@@355)) (=> (and (= ($generated@@274 $generated@@355 $generated@@355) $generated@@355) (= (ControlFlow 0 10) (- 0 9))) (<= ($generated@@274 $generated@@355 $generated@@354) $generated@@355)))))
(let (($generated@@381  (=> (and (and ($generated@@69 ($generated@@8 $generated@@355) $generated@@46 $generated@@359) ($generated@@69 ($generated@@8 $generated@@354) $generated@@46 $generated@@359)) (and ($generated@@275 $generated@@355 $generated@@354) ($generated@@275 $generated@@355 $generated@@354))) (and (=> (= (ControlFlow 0 17) 10) $generated@@380) (=> (= (ControlFlow 0 17) 16) $generated@@379)))))
(let (($generated@@382  (=> (= ($generated@@274 $generated@@360 ($generated@@274 $generated@@361 $generated@@354)) ($generated@@274 ($generated@@274 $generated@@360 $generated@@361) $generated@@354)) (=> (and (= ($generated@@274 ($generated@@274 $generated@@360 $generated@@361) $generated@@354) ($generated@@274 $generated@@355 $generated@@354)) (= (ControlFlow 0 8) (- 0 7))) (= ($generated@@274 $generated@@360 ($generated@@274 $generated@@361 $generated@@354)) ($generated@@274 $generated@@355 $generated@@354))))))
(let (($generated@@383  (=> (and ($generated@@69 ($generated@@8 $generated@@361) $generated@@46 $generated@@359) ($generated@@69 ($generated@@8 $generated@@354) $generated@@46 $generated@@359)) (=> (and (and ($generated@@275 $generated@@361 $generated@@354) ($generated@@69 ($generated@@8 $generated@@360) $generated@@46 $generated@@359)) (and (= $generated@@363 ($generated@@274 $generated@@361 $generated@@354)) ($generated@@69 ($generated@@8 $generated@@363) $generated@@46 $generated@@359))) (=> (and (and (and ($generated@@275 $generated@@360 ($generated@@274 $generated@@361 $generated@@354)) ($generated@@69 ($generated@@8 $generated@@355) $generated@@46 $generated@@359)) (and ($generated@@69 ($generated@@8 $generated@@354) $generated@@46 $generated@@359) ($generated@@275 $generated@@355 $generated@@354))) (and (and ($generated@@275 $generated@@361 $generated@@354) ($generated@@275 $generated@@360 ($generated@@274 $generated@@361 $generated@@354))) ($generated@@275 $generated@@355 $generated@@354))) (and (=> (= (ControlFlow 0 18) 8) $generated@@382) (=> (= (ControlFlow 0 18) 17) $generated@@381)))))))
(let (($generated@@384  (=> (and ($generated@@356 $generated@@364) ($generated@@358 $generated@@364)) (=> (and (and ($generated@@275 $generated@@355 $generated@@355) (= ($generated@@274 $generated@@355 $generated@@355) $generated@@355)) (and (= $generated@@359 $generated@@364) (= (ControlFlow 0 6) (- 0 5)))) (= ($generated@@274 $generated@@355 $generated@@355) $generated@@355)))))
(let (($generated@@385  (=> (and (and ($generated@@69 ($generated@@8 $generated@@355) $generated@@46 $generated@@359) ($generated@@69 ($generated@@8 $generated@@355) $generated@@46 $generated@@359)) (and ($generated@@275 $generated@@355 $generated@@355) ($generated@@275 $generated@@355 $generated@@355))) (and (=> (= (ControlFlow 0 19) 6) $generated@@384) (=> (= (ControlFlow 0 19) 18) $generated@@383)))))
(let (($generated@@386  (=> (and (and (and ($generated@@69 ($generated@@8 $generated@@355) $generated@@46 $generated@@359) ($generated@@69 ($generated@@8 $generated@@354) $generated@@46 $generated@@359)) (and ($generated@@275 $generated@@355 $generated@@354) ($generated@@69 ($generated@@8 $generated@@355) $generated@@46 $generated@@359))) (and (and ($generated@@69 ($generated@@8 $generated@@355) $generated@@46 $generated@@359) ($generated@@275 $generated@@355 $generated@@355)) (and ($generated@@275 $generated@@355 $generated@@354) ($generated@@275 $generated@@355 $generated@@355)))) (and (=> (= (ControlFlow 0 26) 25) $generated@@375) (=> (= (ControlFlow 0 26) 19) $generated@@385)))))
(let (($generated@@387  (=> (and (= $generated@@355 ($generated@@274 $generated@@360 $generated@@361)) (= (ControlFlow 0 4) (- 0 3))) (= ($generated@@274 ($generated@@274 $generated@@360 $generated@@361) $generated@@354) ($generated@@274 $generated@@355 $generated@@354)))))
(let (($generated@@388  (=> (and ($generated@@69 ($generated@@8 $generated@@360) $generated@@46 $generated@@359) ($generated@@69 ($generated@@8 $generated@@361) $generated@@46 $generated@@359)) (=> (and (and ($generated@@275 $generated@@360 $generated@@361) (= $generated@@365 ($generated@@274 $generated@@360 $generated@@361))) (and ($generated@@69 ($generated@@8 $generated@@365) $generated@@46 $generated@@359) ($generated@@69 ($generated@@8 $generated@@354) $generated@@46 $generated@@359))) (=> (and (and (and ($generated@@275 ($generated@@274 $generated@@360 $generated@@361) $generated@@354) ($generated@@69 ($generated@@8 $generated@@355) $generated@@46 $generated@@359)) (and ($generated@@69 ($generated@@8 $generated@@354) $generated@@46 $generated@@359) ($generated@@275 $generated@@355 $generated@@354))) (and (and ($generated@@275 $generated@@360 $generated@@361) ($generated@@275 ($generated@@274 $generated@@360 $generated@@361) $generated@@354)) ($generated@@275 $generated@@355 $generated@@354))) (and (=> (= (ControlFlow 0 27) 4) $generated@@387) (=> (= (ControlFlow 0 27) 26) $generated@@386)))))))
(let (($generated@@389  (=> (and ($generated@@356 $generated@@366) ($generated@@358 $generated@@366)) (=> (and (and (and (and ($generated@@275 $generated@@361 $generated@@354) ($generated@@275 $generated@@360 ($generated@@274 $generated@@361 $generated@@354))) (and ($generated@@275 $generated@@360 $generated@@361) ($generated@@275 ($generated@@274 $generated@@360 $generated@@361) $generated@@354))) (= ($generated@@274 $generated@@360 ($generated@@274 $generated@@361 $generated@@354)) ($generated@@274 ($generated@@274 $generated@@360 $generated@@361) $generated@@354))) (and (= $generated@@359 $generated@@366) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@274 $generated@@360 ($generated@@274 $generated@@361 $generated@@354)) ($generated@@274 ($generated@@274 $generated@@360 $generated@@361) $generated@@354))))))
(let (($generated@@390  (=> (= $generated@@367 ($generated@@128 $generated@@368 $generated@@359 $generated@@60 false)) (=> (and ($generated@@69 ($generated@@8 $generated@@361) $generated@@46 $generated@@359) ($generated@@69 ($generated@@8 $generated@@354) $generated@@46 $generated@@359)) (=> (and (and (and (and ($generated@@275 $generated@@361 $generated@@354) ($generated@@69 ($generated@@8 $generated@@360) $generated@@46 $generated@@359)) (and (= $generated@@369 ($generated@@274 $generated@@361 $generated@@354)) ($generated@@69 ($generated@@8 $generated@@369) $generated@@46 $generated@@359))) (and (and ($generated@@275 $generated@@360 ($generated@@274 $generated@@361 $generated@@354)) ($generated@@69 ($generated@@8 $generated@@360) $generated@@46 $generated@@359)) (and ($generated@@69 ($generated@@8 $generated@@361) $generated@@46 $generated@@359) ($generated@@275 $generated@@360 $generated@@361)))) (and (and (and (= $generated@@370 ($generated@@274 $generated@@360 $generated@@361)) ($generated@@69 ($generated@@8 $generated@@370) $generated@@46 $generated@@359)) (and ($generated@@69 ($generated@@8 $generated@@354) $generated@@46 $generated@@359) ($generated@@275 ($generated@@274 $generated@@360 $generated@@361) $generated@@354))) (and (and ($generated@@275 $generated@@361 $generated@@354) ($generated@@275 $generated@@360 ($generated@@274 $generated@@361 $generated@@354))) (and ($generated@@275 $generated@@360 $generated@@361) ($generated@@275 ($generated@@274 $generated@@360 $generated@@361) $generated@@354))))) (and (=> (= (ControlFlow 0 28) 2) $generated@@389) (=> (= (ControlFlow 0 28) 27) $generated@@388)))))))
(let (($generated@@391  (=> (and (and ($generated@@356 $generated@@359) ($generated@@358 $generated@@359)) (and (= 2 $generated@@273) (= (ControlFlow 0 29) 28))) $generated@@390)))
$generated@@391))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
