(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@248 (Int) Int)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@264 () Int)
(declare-fun $generated@@265 () Bool)
(declare-fun $generated@@266 (Int) Int)
(declare-fun $generated@@267 (Int) Bool)
(declare-fun $generated@@268 () Bool)
(declare-fun $generated@@280 (T@T) T@U)
(declare-fun $generated@@281 (T@U) Int)
(declare-fun $generated@@282 (T@T) T@T)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@295 (T@U) Int)
(declare-fun $generated@@296 (T@T) T@U)
(declare-fun $generated@@301 (T@U) T@U)
(declare-fun $generated@@302 (T@T T@T) T@U)
(declare-fun $generated@@303 (T@T T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@320 (T@T T@T) T@U)
(declare-fun $generated@@321 (T@T T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@340 (T@T T@U) T@U)
(declare-fun $generated@@348 (T@U) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@U T@U) T@U)
(declare-fun $generated@@421 (T@T) T@U)
(declare-fun $generated@@445 () T@T)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@488 (T@U Int) T@U)
(declare-fun $generated@@497 (T@U) Int)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@525 (T@U) Int)
(declare-fun $generated@@526 (T@U) Int)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@591 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@216 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@69 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@79) (= (type $generated@@222) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@223) ($generated@@68 $generated@@4))) (= (type $generated@@225) $generated@@79)) (= (type $generated@@226) ($generated@@68 $generated@@227))) (= ($generated@@0 ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@160 ($generated@@216 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@141)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@66) (= (type $generated@@233) $generated@@66)) (= (type $generated@@234) $generated@@150)) (= (type $generated@@235) $generated@@150)) (= ($generated@@137 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@137 ($generated@@228 $generated@@234 $generated@@235) ($generated@@140 $generated@@232 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@236) $generated@@141) (= (type $generated@@237) $generated@@141)) (= ($generated@@147 $generated@@236 $generated@@237) (= $generated@@236 $generated@@237)))
 :pattern ( ($generated@@147 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@66)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@241) $generated@@66)) (= ($generated@@137 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@150) ($generated@@0 ($generated@@83 $generated@@240 $generated@@242))) ($generated@@229 $generated@@242 $generated@@241))
 :pattern ( ($generated@@83 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@137 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 T@U) ) (! (= (type ($generated@@243 $generated@@244)) $generated@@66)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@246) $generated@@66)) (= ($generated@@137 $generated@@245 ($generated@@243 $generated@@246)) (forall (($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@150) ($generated@@0 ($generated@@83 $generated@@245 $generated@@247))) ($generated@@229 $generated@@247 $generated@@246))
 :pattern ( ($generated@@83 $generated@@245 $generated@@247))
))))
 :pattern ( ($generated@@137 $generated@@245 ($generated@@243 $generated@@246)))
)))
(assert (forall (($generated@@249 Int) ) (! (= ($generated@@248 $generated@@249) $generated@@249)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@251 T@U) ) (! (let (($generated@@252 (type $generated@@251)))
(= (type ($generated@@250 $generated@@251)) $generated@@252))
 :pattern ( ($generated@@250 $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ) (! (= ($generated@@250 $generated@@253) $generated@@253)
 :pattern ( ($generated@@250 $generated@@253))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@66) (= (type $generated@@257) $generated@@66)) (= (type $generated@@258) $generated@@150)) (= (type $generated@@259) $generated@@150)) (= (type $generated@@260) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@254 $generated@@260)) (= ($generated@@76 ($generated@@228 $generated@@258 $generated@@259) ($generated@@140 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@76 ($generated@@228 $generated@@258 $generated@@259) ($generated@@140 $generated@@256 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@70)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@141) (= ($generated@@139 $generated@@263) (= ($generated@@261 $generated@@263) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@263))
)))
(assert  (=> (<= 2 $generated@@264) (=> (or $generated@@265 (not (= 2 $generated@@264))) (and (forall (($generated@@269 Int) ($generated@@270 Int) ) (!  (=> (<= ($generated@@248 0) $generated@@269) (=> (= $generated@@270 (+ $generated@@269 1)) (and (and ($generated@@267 $generated@@269) ($generated@@267 ($generated@@266 $generated@@269))) ($generated@@267 $generated@@270))))
 :pattern ( ($generated@@266 $generated@@270) ($generated@@266 ($generated@@266 $generated@@269)))
)) (= $generated@@268 (forall (($generated@@271 Int) ($generated@@272 Int) ) (!  (=> (and (<= ($generated@@248 0) $generated@@271) (= $generated@@272 (+ $generated@@271 1))) (< ($generated@@266 ($generated@@266 $generated@@271)) ($generated@@266 $generated@@272)))
 :pattern ( ($generated@@266 $generated@@272) ($generated@@266 ($generated@@266 $generated@@271)))
)))))))
(assert  (=> (<= 2 $generated@@264) (=> (or $generated@@265 (not (= 2 $generated@@264))) (and (forall (($generated@@273 Int) ($generated@@274 Int) ) (!  (=> (<= ($generated@@248 0) $generated@@273) (=> (= $generated@@274 (+ $generated@@273 1)) (and (and ($generated@@267 $generated@@273) ($generated@@267 ($generated@@266 $generated@@273))) ($generated@@267 $generated@@274))))
 :pattern ( ($generated@@266 $generated@@274) ($generated@@266 ($generated@@266 $generated@@273)))
)) (= $generated@@268 (forall (($generated@@275 Int) ($generated@@276 Int) ) (!  (=> (and (<= ($generated@@248 0) $generated@@275) (= $generated@@276 (+ $generated@@275 1))) (< ($generated@@266 ($generated@@266 $generated@@275)) ($generated@@266 $generated@@276)))
 :pattern ( ($generated@@266 $generated@@276) ($generated@@266 ($generated@@266 $generated@@275)))
)))))))
(assert (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@141) ($generated@@139 $generated@@277)) (exists (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (and (and (= (type $generated@@278) $generated@@150) (= (type $generated@@279) $generated@@150)) (= $generated@@277 ($generated@@228 $generated@@278 $generated@@279)))
 :no-pattern (type $generated@@278)
 :no-pattern (type $generated@@279)
 :no-pattern ($generated $generated@@278)
 :no-pattern ($generated@@0 $generated@@278)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
)))
 :pattern ( ($generated@@139 $generated@@277))
)))
(assert  (and (and (forall (($generated@@284 T@T) ) (= ($generated@@1 ($generated@@282 $generated@@284)) 17)) (forall (($generated@@285 T@T) ) (! (= ($generated@@283 ($generated@@282 $generated@@285)) $generated@@285)
 :pattern ( ($generated@@282 $generated@@285))
))) (forall (($generated@@286 T@T) ) (! (= (type ($generated@@280 $generated@@286)) ($generated@@282 $generated@@286))
 :pattern ( ($generated@@280 $generated@@286))
))))
(assert (forall (($generated@@287 T@T) ) (! (= ($generated@@281 ($generated@@280 $generated@@287)) 0)
 :pattern ( ($generated@@280 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (= (type $generated@@288) $generated@@2) (= ($generated@@137 $generated@@288 $generated@@134) (<= ($generated@@248 0) ($generated $generated@@288))))
 :pattern ( ($generated@@137 $generated@@288 $generated@@134))
)))
(assert (forall (($generated@@290 T@U) ) (! (= (type ($generated@@289 $generated@@290)) $generated@@150)
 :pattern ( ($generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@66) (= (type $generated@@293) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@255 ($generated@@289 $generated@@291) $generated@@292 $generated@@293) ($generated@@76 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@255 ($generated@@289 $generated@@291) $generated@@292 $generated@@293))
)))
(assert  (=> (<= 1 $generated@@264) (forall (($generated@@294 Int) ) (!  (=> (or ($generated@@267 $generated@@294) (and (not (= 1 $generated@@264)) (<= ($generated@@248 0) $generated@@294))) (<= ($generated@@248 0) ($generated@@266 $generated@@294)))
 :pattern ( ($generated@@266 $generated@@294))
))))
(assert (forall (($generated@@297 T@T) ) (! (= (type ($generated@@296 $generated@@297)) ($generated@@78 $generated@@297 $generated@@2))
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (! (let (($generated@@299 ($generated@@81 (type $generated@@298))))
 (=> (= (type $generated@@298) ($generated@@78 $generated@@299 $generated@@2)) (and (= (= ($generated@@295 $generated@@298) 0) (= $generated@@298 ($generated@@296 $generated@@299))) (=> (not (= ($generated@@295 $generated@@298) 0)) (exists (($generated@@300 T@U) ) (!  (and (= (type $generated@@300) $generated@@299) (< 0 ($generated ($generated@@83 $generated@@298 $generated@@300))))
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
))))))
 :pattern ( ($generated@@295 $generated@@298))
)))
(assert  (and (and (and (and (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@306 $generated@@307)) 18)) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@308 $generated@@309)) $generated@@308)
 :pattern ( ($generated@@303 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@303 $generated@@310 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@303 $generated@@310 $generated@@311))
))) (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@304 (type $generated@@312))))
(= (type ($generated@@301 $generated@@312)) ($generated@@78 $generated@@313 $generated@@4)))
 :pattern ( ($generated@@301 $generated@@312))
))) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= (type ($generated@@302 $generated@@314 $generated@@315)) ($generated@@303 $generated@@314 $generated@@315))
 :pattern ( ($generated@@302 $generated@@314 $generated@@315))
))))
(assert (forall (($generated@@316 T@U) ($generated@@317 T@T) ) (! (let (($generated@@318 (type $generated@@316)))
 (not ($generated@@0 ($generated@@83 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316))))
 :pattern ( (let (($generated@@318 (type $generated@@316)))
($generated@@83 ($generated@@301 ($generated@@302 $generated@@318 $generated@@317)) $generated@@316)))
)))
(assert  (and (and (and (and (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (= ($generated@@1 ($generated@@321 $generated@@324 $generated@@325)) 19)) (forall (($generated@@326 T@T) ($generated@@327 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@321 $generated@@326 $generated@@327))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= ($generated@@323 ($generated@@321 $generated@@328 $generated@@329)) $generated@@329)
 :pattern ( ($generated@@321 $generated@@328 $generated@@329))
))) (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@322 (type $generated@@330))))
(= (type ($generated@@319 $generated@@330)) ($generated@@78 $generated@@331 $generated@@4)))
 :pattern ( ($generated@@319 $generated@@330))
))) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= (type ($generated@@320 $generated@@332 $generated@@333)) ($generated@@321 $generated@@332 $generated@@333))
 :pattern ( ($generated@@320 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@334 T@U) ($generated@@335 T@T) ) (! (let (($generated@@336 (type $generated@@334)))
 (not ($generated@@0 ($generated@@83 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334))))
 :pattern ( (let (($generated@@336 (type $generated@@334)))
($generated@@83 ($generated@@319 ($generated@@320 $generated@@336 $generated@@335)) $generated@@334)))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@81 (type $generated@@337))))
 (=> (= (type $generated@@337) ($generated@@78 $generated@@338 $generated@@2)) (= ($generated@@156 $generated@@337) (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@338) (and (<= 0 ($generated ($generated@@83 $generated@@337 $generated@@339))) (<= ($generated ($generated@@83 $generated@@337 $generated@@339)) ($generated@@295 $generated@@337))))
 :pattern ( ($generated@@83 $generated@@337 $generated@@339))
)))))
 :pattern ( ($generated@@156 $generated@@337))
)))
(assert (forall (($generated@@341 T@T) ($generated@@342 T@U) ) (! (= (type ($generated@@340 $generated@@341 $generated@@342)) $generated@@341)
 :pattern ( ($generated@@340 $generated@@341 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@150) ($generated@@229 $generated@@343 $generated@@134)) (and (= ($generated@@289 ($generated@@340 $generated@@2 $generated@@343)) $generated@@343) ($generated@@137 ($generated@@340 $generated@@2 $generated@@343) $generated@@134)))
 :pattern ( ($generated@@229 $generated@@343 $generated@@134))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@305 (type $generated@@344))))
(let (($generated@@346 ($generated@@304 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@303 $generated@@346 $generated@@345)) (or (= $generated@@344 ($generated@@302 $generated@@346 $generated@@345)) (exists (($generated@@347 T@U) ) (!  (and (= (type $generated@@347) $generated@@346) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@344) $generated@@347)))
 :no-pattern (type $generated@@347)
 :no-pattern ($generated $generated@@347)
 :no-pattern ($generated@@0 $generated@@347)
))))))
 :pattern ( ($generated@@301 $generated@@344))
)))
(assert (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@305 (type $generated@@349))))
(= (type ($generated@@348 $generated@@349)) ($generated@@78 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@348 $generated@@349))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@305 (type $generated@@351))))
(let (($generated@@353 ($generated@@304 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@303 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@302 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@352) ($generated@@0 ($generated@@83 ($generated@@348 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@348 $generated@@351))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@323 (type $generated@@355))))
(let (($generated@@357 ($generated@@322 (type $generated@@355))))
 (=> (= (type $generated@@355) ($generated@@321 $generated@@357 $generated@@356)) (or (= $generated@@355 ($generated@@320 $generated@@357 $generated@@356)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) ($generated@@0 ($generated@@83 ($generated@@319 $generated@@355) $generated@@358)))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@319 $generated@@355))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@323 (type $generated@@360))))
(= (type ($generated@@359 $generated@@360)) ($generated@@78 $generated@@361 $generated@@4)))
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@323 (type $generated@@362))))
(let (($generated@@364 ($generated@@322 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@321 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@320 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@363) ($generated@@0 ($generated@@83 ($generated@@359 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@359 $generated@@362))
)))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@366) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@367) $generated@@66)) (= ($generated@@137 $generated@@366 ($generated@@155 $generated@@367)) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@366 $generated@@368)))) ($generated@@229 $generated@@368 $generated@@367))
 :pattern ( ($generated@@83 $generated@@366 $generated@@368))
))))
 :pattern ( ($generated@@137 $generated@@366 ($generated@@155 $generated@@367)))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ($generated@@371 T@U) ) (!  (=> (and (and (= (type $generated@@369) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@370) $generated@@66)) (= (type $generated@@371) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@369 ($generated@@238 $generated@@370) $generated@@371) (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@150) ($generated@@0 ($generated@@83 $generated@@369 $generated@@372))) ($generated@@255 $generated@@372 $generated@@370 $generated@@371))
 :pattern ( ($generated@@83 $generated@@369 $generated@@372))
))))
 :pattern ( ($generated@@76 $generated@@369 ($generated@@238 $generated@@370) $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@374) $generated@@66)) (= (type $generated@@375) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@373 ($generated@@243 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@150) ($generated@@0 ($generated@@83 $generated@@373 $generated@@376))) ($generated@@255 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@83 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@76 $generated@@373 ($generated@@243 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 (type $generated@@377)))
(= ($generated ($generated@@83 ($generated@@296 $generated@@378) $generated@@377)) 0))
 :pattern ( (let (($generated@@378 (type $generated@@377)))
($generated@@83 ($generated@@296 $generated@@378) $generated@@377)))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@305 (type $generated@@382))))
(let (($generated@@384 ($generated@@304 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@78 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@303 $generated@@150 $generated@@150)) (= (type $generated@@386) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@83 ($generated@@301 $generated@@385) ($generated@@148 ($generated@@340 $generated@@141 $generated@@386)))) (= ($generated@@83 ($generated@@380 $generated@@385) ($generated@@148 ($generated@@340 $generated@@141 $generated@@386))) ($generated@@149 ($generated@@340 $generated@@141 $generated@@386))))))
 :pattern ( ($generated@@83 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert  (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@387 $generated@@389)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@387 $generated@@389))
)) (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@323 (type $generated@@390))))
(let (($generated@@392 ($generated@@322 (type $generated@@390))))
(= (type ($generated@@388 $generated@@390)) ($generated@@78 $generated@@392 $generated@@391))))
 :pattern ( ($generated@@388 $generated@@390))
))))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@321 $generated@@150 $generated@@150)) (= (type $generated@@394) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@387 $generated@@393) $generated@@394))  (and ($generated@@0 ($generated@@83 ($generated@@319 $generated@@393) ($generated@@148 ($generated@@340 $generated@@141 $generated@@394)))) (= ($generated@@83 ($generated@@388 $generated@@393) ($generated@@148 ($generated@@340 $generated@@141 $generated@@394))) ($generated@@149 ($generated@@340 $generated@@141 $generated@@394))))))
 :pattern ( ($generated@@83 ($generated@@387 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (! (let (($generated@@397 (type $generated@@396)))
(let (($generated@@398 ($generated@@304 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@303 $generated@@398 $generated@@397)) (= ($generated@@0 ($generated@@83 ($generated@@348 $generated@@395) $generated@@396)) (exists (($generated@@399 T@U) ) (!  (and (= (type $generated@@399) $generated@@398) (and ($generated@@0 ($generated@@83 ($generated@@301 $generated@@395) $generated@@399)) (= $generated@@396 ($generated@@83 ($generated@@380 $generated@@395) $generated@@399))))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@395) $generated@@399))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@395) $generated@@399))
))))))
 :pattern ( ($generated@@83 ($generated@@348 $generated@@395) $generated@@396))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(let (($generated@@403 ($generated@@322 (type $generated@@400))))
 (=> (= (type $generated@@400) ($generated@@321 $generated@@403 $generated@@402)) (= ($generated@@0 ($generated@@83 ($generated@@359 $generated@@400) $generated@@401)) (exists (($generated@@404 T@U) ) (!  (and (= (type $generated@@404) $generated@@403) (and ($generated@@0 ($generated@@83 ($generated@@319 $generated@@400) $generated@@404)) (= $generated@@401 ($generated@@83 ($generated@@388 $generated@@400) $generated@@404))))
 :pattern ( ($generated@@83 ($generated@@319 $generated@@400) $generated@@404))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@400) $generated@@404))
))))))
 :pattern ( ($generated@@83 ($generated@@359 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@66)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@303 $generated@@150 $generated@@150)) (= (type $generated@@409) $generated@@66)) (= (type $generated@@410) $generated@@66)) (= (type $generated@@411) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@408) $generated@@412))) (and ($generated@@255 ($generated@@83 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@255 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@76 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (! (= (type ($generated@@413 $generated@@414 $generated@@415)) $generated@@66)
 :pattern ( ($generated@@413 $generated@@414 $generated@@415))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (= (type $generated@@416) ($generated@@321 $generated@@150 $generated@@150)) (= (type $generated@@417) $generated@@66)) (= (type $generated@@418) $generated@@66)) (= (type $generated@@419) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419) (forall (($generated@@420 T@U) ) (!  (=> (and (= (type $generated@@420) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@319 $generated@@416) $generated@@420))) (and ($generated@@255 ($generated@@83 ($generated@@388 $generated@@416) $generated@@420) $generated@@418 $generated@@419) ($generated@@255 $generated@@420 $generated@@417 $generated@@419)))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@416) $generated@@420))
 :pattern ( ($generated@@83 ($generated@@319 $generated@@416) $generated@@420))
))))
 :pattern ( ($generated@@76 $generated@@416 ($generated@@413 $generated@@417 $generated@@418) $generated@@419))
)))
(assert  (=> (<= 2 $generated@@264) (=> (or $generated@@265 (not (= 2 $generated@@264))) true)))
(assert (forall (($generated@@422 T@T) ) (! (= (type ($generated@@421 $generated@@422)) ($generated@@78 $generated@@422 $generated@@4))
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@323 (type $generated@@423))))
(let (($generated@@425 ($generated@@322 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@321 $generated@@425 $generated@@424)) (= (= $generated@@423 ($generated@@320 $generated@@425 $generated@@424)) (= ($generated@@319 $generated@@423) ($generated@@421 $generated@@425))))))
 :pattern ( ($generated@@319 $generated@@423))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@323 (type $generated@@426))))
(let (($generated@@428 ($generated@@322 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@321 $generated@@428 $generated@@427)) (= (= $generated@@426 ($generated@@320 $generated@@428 $generated@@427)) (= ($generated@@359 $generated@@426) ($generated@@421 $generated@@427))))))
 :pattern ( ($generated@@359 $generated@@426))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@323 (type $generated@@429))))
(let (($generated@@431 ($generated@@322 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@321 $generated@@431 $generated@@430)) (= (= $generated@@429 ($generated@@320 $generated@@431 $generated@@430)) (= ($generated@@387 $generated@@429) ($generated@@421 $generated@@150))))))
 :pattern ( ($generated@@387 $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@305 (type $generated@@432))))
(let (($generated@@434 ($generated@@304 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@303 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@302 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (and (and (= (type $generated@@435) $generated@@150) (= (type $generated@@436) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@379 $generated@@432) ($generated@@289 ($generated@@228 $generated@@435 $generated@@436)))))
 :no-pattern (type $generated@@435)
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@379 $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@323 (type $generated@@437))))
(let (($generated@@439 ($generated@@322 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@321 $generated@@439 $generated@@438)) (or (= $generated@@437 ($generated@@320 $generated@@439 $generated@@438)) (exists (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (and (and (= (type $generated@@440) $generated@@150) (= (type $generated@@441) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@387 $generated@@437) ($generated@@289 ($generated@@228 $generated@@440 $generated@@441)))))
 :no-pattern (type $generated@@440)
 :no-pattern (type $generated@@441)
 :no-pattern ($generated $generated@@440)
 :no-pattern ($generated@@0 $generated@@440)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
))))))
 :pattern ( ($generated@@387 $generated@@437))
)))
(assert (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@150) ($generated@@229 $generated@@442 $generated@@46)) (and (= ($generated@@289 ($generated@@340 $generated@@2 $generated@@442)) $generated@@442) ($generated@@137 ($generated@@340 $generated@@2 $generated@@442) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@442 $generated@@46))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@150) ($generated@@229 $generated@@443 $generated@@47)) (and (= ($generated@@289 ($generated@@340 $generated@@3 $generated@@443)) $generated@@443) ($generated@@137 ($generated@@340 $generated@@3 $generated@@443) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@443 $generated@@47))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@150) ($generated@@229 $generated@@444 $generated@@44)) (and (= ($generated@@289 ($generated@@340 $generated@@4 $generated@@444)) $generated@@444) ($generated@@137 ($generated@@340 $generated@@4 $generated@@444) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@444 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@445) 20))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@150) ($generated@@229 $generated@@446 $generated@@45)) (and (= ($generated@@289 ($generated@@340 $generated@@445 $generated@@446)) $generated@@446) ($generated@@137 ($generated@@340 $generated@@445 $generated@@446) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@446 $generated@@45))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (= (type $generated@@448) $generated@@66) (= ($generated@@229 ($generated@@289 $generated@@447) $generated@@448) ($generated@@137 $generated@@447 $generated@@448)))
 :pattern ( ($generated@@229 ($generated@@289 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@81 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@78 $generated@@450 $generated@@2)) (<= 0 ($generated@@295 $generated@@449))))
 :pattern ( ($generated@@295 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@283 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@282 $generated@@452)) (<= 0 ($generated@@281 $generated@@451))))
 :pattern ( ($generated@@281 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@66)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@66) (= (type $generated@@456) $generated@@66)) (= ($generated@@453 ($generated@@405 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@405 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@66)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@457 ($generated@@405 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@405 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@66) (= (type $generated@@462) $generated@@66)) (= ($generated@@74 ($generated@@405 $generated@@461 $generated@@462)) $generated@@58))
 :pattern ( ($generated@@405 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@413 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@413 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@467 ($generated@@413 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@413 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@66) (= (type $generated@@472) $generated@@66)) (= ($generated@@74 ($generated@@413 $generated@@471 $generated@@472)) $generated@@59))
 :pattern ( ($generated@@413 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@150) (= (type $generated@@474) $generated@@150)) (= ($generated@@261 ($generated@@228 $generated@@473 $generated@@474)) $generated@@62))
 :pattern ( ($generated@@228 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@66)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@66) (= (type $generated@@478) $generated@@66)) (= ($generated@@475 ($generated@@140 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@140 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@66)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@66) (= (type $generated@@482) $generated@@66)) (= ($generated@@479 ($generated@@140 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@140 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@150) (= (type $generated@@484) $generated@@150)) (= ($generated@@148 ($generated@@228 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@228 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@150) (= (type $generated@@486) $generated@@150)) (= ($generated@@149 ($generated@@228 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@228 $generated@@485 $generated@@486))
)))
(assert  (and (forall (($generated@@489 T@U) ) (! (= (type ($generated@@487 $generated@@489)) $generated@@66)
 :pattern ( ($generated@@487 $generated@@489))
)) (forall (($generated@@490 T@U) ($generated@@491 Int) ) (! (let (($generated@@492 ($generated@@283 (type $generated@@490))))
(= (type ($generated@@488 $generated@@490 $generated@@491)) $generated@@492))
 :pattern ( ($generated@@488 $generated@@490 $generated@@491))
))))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (and (= (type $generated@@493) ($generated@@282 $generated@@150)) (= (type $generated@@494) $generated@@66)) (= (type $generated@@495) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@493 ($generated@@487 $generated@@494) $generated@@495) (forall (($generated@@496 Int) ) (!  (=> (and (<= 0 $generated@@496) (< $generated@@496 ($generated@@281 $generated@@493))) ($generated@@255 ($generated@@488 $generated@@493 $generated@@496) $generated@@494 $generated@@495))
 :pattern ( ($generated@@488 $generated@@493 $generated@@496))
))))
 :pattern ( ($generated@@76 $generated@@493 ($generated@@487 $generated@@494) $generated@@495))
)))
(assert (forall (($generated@@498 Int) ) (! (= ($generated@@497 ($generated@@77 $generated@@498)) $generated@@498)
 :pattern ( ($generated@@77 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@66)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@66) (= ($generated@@499 ($generated@@238 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@238 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@74 ($generated@@238 $generated@@502)) $generated@@54))
 :pattern ( ($generated@@238 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@66)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (!  (=> (= (type $generated@@505) $generated@@66) (= ($generated@@503 ($generated@@243 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@243 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ) (!  (=> (= (type $generated@@506) $generated@@66) (= ($generated@@74 ($generated@@243 $generated@@506)) $generated@@55))
 :pattern ( ($generated@@243 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@66)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@66) (= ($generated@@507 ($generated@@155 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@155 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@510)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@66)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@66) (= ($generated@@511 ($generated@@487 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@487 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@66) (= ($generated@@74 ($generated@@487 $generated@@514)) $generated@@57))
 :pattern ( ($generated@@487 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 (type $generated@@515)))
(= ($generated@@340 $generated@@516 ($generated@@289 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@289 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (and (= (type $generated@@517) ($generated@@303 $generated@@150 $generated@@150)) (= (type $generated@@518) $generated@@66)) (= (type $generated@@519) $generated@@66)) (= ($generated@@137 $generated@@517 ($generated@@405 $generated@@518 $generated@@519)) (forall (($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@301 $generated@@517) $generated@@520))) (and ($generated@@229 ($generated@@83 ($generated@@380 $generated@@517) $generated@@520) $generated@@519) ($generated@@229 $generated@@520 $generated@@518)))
 :pattern ( ($generated@@83 ($generated@@380 $generated@@517) $generated@@520))
 :pattern ( ($generated@@83 ($generated@@301 $generated@@517) $generated@@520))
))))
 :pattern ( ($generated@@137 $generated@@517 ($generated@@405 $generated@@518 $generated@@519)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (= (type $generated@@521) ($generated@@321 $generated@@150 $generated@@150)) (= (type $generated@@522) $generated@@66)) (= (type $generated@@523) $generated@@66)) (= ($generated@@137 $generated@@521 ($generated@@413 $generated@@522 $generated@@523)) (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@319 $generated@@521) $generated@@524))) (and ($generated@@229 ($generated@@83 ($generated@@388 $generated@@521) $generated@@524) $generated@@523) ($generated@@229 $generated@@524 $generated@@522)))
 :pattern ( ($generated@@83 ($generated@@388 $generated@@521) $generated@@524))
 :pattern ( ($generated@@83 ($generated@@319 $generated@@521) $generated@@524))
))))
 :pattern ( ($generated@@137 $generated@@521 ($generated@@413 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@150) (= (type $generated@@528) $generated@@150)) (< ($generated@@525 $generated@@527) ($generated@@526 ($generated@@228 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@228 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@150) (= (type $generated@@530) $generated@@150)) (< ($generated@@525 $generated@@530) ($generated@@526 ($generated@@228 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@228 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@150) (= (type $generated@@532) $generated@@66)) (= (type $generated@@533) $generated@@66)) ($generated@@229 $generated@@531 ($generated@@405 $generated@@532 $generated@@533))) (and (= ($generated@@289 ($generated@@340 ($generated@@303 $generated@@150 $generated@@150) $generated@@531)) $generated@@531) ($generated@@137 ($generated@@340 ($generated@@303 $generated@@150 $generated@@150) $generated@@531) ($generated@@405 $generated@@532 $generated@@533))))
 :pattern ( ($generated@@229 $generated@@531 ($generated@@405 $generated@@532 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (and (= (type $generated@@534) $generated@@150) (= (type $generated@@535) $generated@@66)) (= (type $generated@@536) $generated@@66)) ($generated@@229 $generated@@534 ($generated@@413 $generated@@535 $generated@@536))) (and (= ($generated@@289 ($generated@@340 ($generated@@321 $generated@@150 $generated@@150) $generated@@534)) $generated@@534) ($generated@@137 ($generated@@340 ($generated@@321 $generated@@150 $generated@@150) $generated@@534) ($generated@@413 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@229 $generated@@534 ($generated@@413 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (and (= (type $generated@@537) $generated@@66) (= (type $generated@@538) $generated@@66)) (= (type $generated@@539) $generated@@150)) ($generated@@229 $generated@@539 ($generated@@140 $generated@@537 $generated@@538))) (and (= ($generated@@289 ($generated@@340 $generated@@141 $generated@@539)) $generated@@539) ($generated@@137 ($generated@@340 $generated@@141 $generated@@539) ($generated@@140 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@229 $generated@@539 ($generated@@140 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ) (! (let (($generated@@541 (type $generated@@540)))
 (not ($generated@@0 ($generated@@83 ($generated@@421 $generated@@541) $generated@@540))))
 :pattern ( (let (($generated@@541 (type $generated@@540)))
($generated@@83 ($generated@@421 $generated@@541) $generated@@540)))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@71)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@66) (= (type $generated@@545) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@544 $generated@@545)) $generated@@63) (= ($generated@@542 ($generated@@140 $generated@@544 $generated@@545)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@141) (= ($generated@@525 ($generated@@289 $generated@@546)) ($generated@@526 $generated@@546)))
 :pattern ( ($generated@@525 ($generated@@289 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@150) ($generated@@229 $generated@@547 ($generated@@77 0))) (and (= ($generated@@289 ($generated@@340 $generated@@2 $generated@@547)) $generated@@547) ($generated@@137 ($generated@@340 ($generated@@78 $generated@@150 $generated@@4) $generated@@547) ($generated@@77 0))))
 :pattern ( ($generated@@229 $generated@@547 ($generated@@77 0)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@150) (= (type $generated@@549) $generated@@66)) ($generated@@229 $generated@@548 ($generated@@238 $generated@@549))) (and (= ($generated@@289 ($generated@@340 ($generated@@78 $generated@@150 $generated@@4) $generated@@548)) $generated@@548) ($generated@@137 ($generated@@340 ($generated@@78 $generated@@150 $generated@@4) $generated@@548) ($generated@@238 $generated@@549))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@238 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@150) (= (type $generated@@551) $generated@@66)) ($generated@@229 $generated@@550 ($generated@@243 $generated@@551))) (and (= ($generated@@289 ($generated@@340 ($generated@@78 $generated@@150 $generated@@4) $generated@@550)) $generated@@550) ($generated@@137 ($generated@@340 ($generated@@78 $generated@@150 $generated@@4) $generated@@550) ($generated@@243 $generated@@551))))
 :pattern ( ($generated@@229 $generated@@550 ($generated@@243 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@150) (= (type $generated@@553) $generated@@66)) ($generated@@229 $generated@@552 ($generated@@155 $generated@@553))) (and (= ($generated@@289 ($generated@@340 ($generated@@78 $generated@@150 $generated@@2) $generated@@552)) $generated@@552) ($generated@@137 ($generated@@340 ($generated@@78 $generated@@150 $generated@@2) $generated@@552) ($generated@@155 $generated@@553))))
 :pattern ( ($generated@@229 $generated@@552 ($generated@@155 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@150) (= (type $generated@@555) $generated@@66)) ($generated@@229 $generated@@554 ($generated@@487 $generated@@555))) (and (= ($generated@@289 ($generated@@340 ($generated@@282 $generated@@150) $generated@@554)) $generated@@554) ($generated@@137 ($generated@@340 ($generated@@282 $generated@@150) $generated@@554) ($generated@@487 $generated@@555))))
 :pattern ( ($generated@@229 $generated@@554 ($generated@@487 $generated@@555)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@542 $generated@@134) $generated@@64))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@556) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@557) $generated@@66)) (= (type $generated@@558) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@556 ($generated@@155 $generated@@557) $generated@@558) (forall (($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@556 $generated@@559)))) ($generated@@255 $generated@@559 $generated@@557 $generated@@558))
 :pattern ( ($generated@@83 $generated@@556 $generated@@559))
))))
 :pattern ( ($generated@@76 $generated@@556 ($generated@@155 $generated@@557) $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@141) (= (type $generated@@561) $generated@@66)) (= (type $generated@@562) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@254 $generated@@562) (and ($generated@@139 $generated@@560) (exists (($generated@@563 T@U) ) (!  (and (= (type $generated@@563) $generated@@66) ($generated@@76 $generated@@560 ($generated@@140 $generated@@561 $generated@@563) $generated@@562))
 :pattern ( ($generated@@76 $generated@@560 ($generated@@140 $generated@@561 $generated@@563) $generated@@562))
))))) ($generated@@255 ($generated@@148 $generated@@560) $generated@@561 $generated@@562))
 :pattern ( ($generated@@255 ($generated@@148 $generated@@560) $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@141) (= (type $generated@@565) $generated@@66)) (= (type $generated@@566) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@254 $generated@@566) (and ($generated@@139 $generated@@564) (exists (($generated@@567 T@U) ) (!  (and (= (type $generated@@567) $generated@@66) ($generated@@76 $generated@@564 ($generated@@140 $generated@@567 $generated@@565) $generated@@566))
 :pattern ( ($generated@@76 $generated@@564 ($generated@@140 $generated@@567 $generated@@565) $generated@@566))
))))) ($generated@@255 ($generated@@149 $generated@@564) $generated@@565 $generated@@566))
 :pattern ( ($generated@@255 ($generated@@149 $generated@@564) $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@150) (= (type $generated@@569) $generated@@150)) (= ($generated@@228 ($generated@@250 $generated@@568) ($generated@@250 $generated@@569)) ($generated@@250 ($generated@@228 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@228 ($generated@@250 $generated@@568) ($generated@@250 $generated@@569)))
)))
(assert (forall (($generated@@570 Int) ) (! (= ($generated@@289 ($generated@@8 ($generated@@248 $generated@@570))) ($generated@@250 ($generated@@289 ($generated@@8 $generated@@570))))
 :pattern ( ($generated@@289 ($generated@@8 ($generated@@248 $generated@@570))))
)))
(assert (forall (($generated@@571 T@U) ) (! (= ($generated@@289 ($generated@@250 $generated@@571)) ($generated@@250 ($generated@@289 $generated@@571)))
 :pattern ( ($generated@@289 ($generated@@250 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ) (! (let (($generated@@573 ($generated@@283 (type $generated@@572))))
 (=> (and (= (type $generated@@572) ($generated@@282 $generated@@573)) (= ($generated@@281 $generated@@572) 0)) (= $generated@@572 ($generated@@280 $generated@@573))))
 :pattern ( ($generated@@281 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@575)))
 (=> (and (and (= (type $generated@@574) ($generated@@78 $generated@@577 $generated@@2)) (= (type $generated@@576) $generated@@2)) (<= 0 ($generated $generated@@576))) (= ($generated@@295 ($generated@@84 $generated@@574 $generated@@575 $generated@@576)) (+ (- ($generated@@295 $generated@@574) ($generated ($generated@@83 $generated@@574 $generated@@575))) ($generated $generated@@576)))))
 :pattern ( ($generated@@295 ($generated@@84 $generated@@574 $generated@@575 $generated@@576)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@579) $generated@@2)) ($generated@@76 $generated@@579 $generated@@46 $generated@@578))
 :pattern ( ($generated@@76 $generated@@579 $generated@@46 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@581) $generated@@3)) ($generated@@76 $generated@@581 $generated@@47 $generated@@580))
 :pattern ( ($generated@@76 $generated@@581 $generated@@47 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@583) $generated@@4)) ($generated@@76 $generated@@583 $generated@@44 $generated@@582))
 :pattern ( ($generated@@76 $generated@@583 $generated@@44 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@585) $generated@@445)) ($generated@@76 $generated@@585 $generated@@45 $generated@@584))
 :pattern ( ($generated@@76 $generated@@585 $generated@@45 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@587) $generated@@150)) ($generated@@76 $generated@@587 $generated@@48 $generated@@586))
 :pattern ( ($generated@@76 $generated@@587 $generated@@48 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) ($generated@@282 $generated@@150)) (= (type $generated@@589) $generated@@66)) (= ($generated@@137 $generated@@588 ($generated@@487 $generated@@589)) (forall (($generated@@590 Int) ) (!  (=> (and (<= 0 $generated@@590) (< $generated@@590 ($generated@@281 $generated@@588))) ($generated@@229 ($generated@@488 $generated@@588 $generated@@590) $generated@@589))
 :pattern ( ($generated@@488 $generated@@588 $generated@@590))
))))
 :pattern ( ($generated@@137 $generated@@588 ($generated@@487 $generated@@589)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 Int) ) (!  (=> (= (type $generated@@592) ($generated@@282 $generated@@150)) (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@281 $generated@@592))) (< ($generated@@526 ($generated@@340 $generated@@141 ($generated@@488 $generated@@592 $generated@@593))) ($generated@@591 $generated@@592))))
 :pattern ( ($generated@@526 ($generated@@340 $generated@@141 ($generated@@488 $generated@@592 $generated@@593))))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) ($generated@@303 $generated@@150 $generated@@150)) (= (type $generated@@595) $generated@@66)) (= (type $generated@@596) $generated@@66)) ($generated@@137 $generated@@594 ($generated@@405 $generated@@595 $generated@@596))) (and (and ($generated@@137 ($generated@@301 $generated@@594) ($generated@@238 $generated@@595)) ($generated@@137 ($generated@@348 $generated@@594) ($generated@@238 $generated@@596))) ($generated@@137 ($generated@@379 $generated@@594) ($generated@@238 ($generated@@140 $generated@@595 $generated@@596)))))
 :pattern ( ($generated@@137 $generated@@594 ($generated@@405 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@321 $generated@@150 $generated@@150)) (= (type $generated@@598) $generated@@66)) (= (type $generated@@599) $generated@@66)) ($generated@@137 $generated@@597 ($generated@@413 $generated@@598 $generated@@599))) (and (and ($generated@@137 ($generated@@319 $generated@@597) ($generated@@243 $generated@@598)) ($generated@@137 ($generated@@359 $generated@@597) ($generated@@243 $generated@@599))) ($generated@@137 ($generated@@387 $generated@@597) ($generated@@243 ($generated@@140 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@137 $generated@@597 ($generated@@413 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@2) ($generated@@137 $generated@@600 $generated@@46))
 :pattern ( ($generated@@137 $generated@@600 $generated@@46))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@3) ($generated@@137 $generated@@601 $generated@@47))
 :pattern ( ($generated@@137 $generated@@601 $generated@@47))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@4) ($generated@@137 $generated@@602 $generated@@44))
 :pattern ( ($generated@@137 $generated@@602 $generated@@44))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@445) ($generated@@137 $generated@@603 $generated@@45))
 :pattern ( ($generated@@137 $generated@@603 $generated@@45))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@150) ($generated@@137 $generated@@604 $generated@@48))
 :pattern ( ($generated@@137 $generated@@604 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@606) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@609) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@610) $generated@@79)) (= (type $generated@@611) ($generated@@162 $generated@@79 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@613 true))
(let (($generated@@614  (=> (and (< $generated@@605 ($generated@@248 0)) (= (ControlFlow 0 5) 2)) $generated@@613)))
(let (($generated@@615  (=> (and (<= ($generated@@248 0) $generated@@605) ($generated@@76 ($generated@@8 $generated@@605) $generated@@134 $generated@@606)) (=> (and (and ($generated@@267 $generated@@605) (= $generated@@607 ($generated@@266 $generated@@605))) (and ($generated@@76 ($generated@@8 $generated@@607) $generated@@134 $generated@@606) ($generated@@267 ($generated@@266 $generated@@605)))) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@137 ($generated@@8 (+ $generated@@605 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (+ $generated@@605 1)) $generated@@134) (=> (and (and (= $generated@@608 (+ $generated@@605 1)) ($generated@@76 ($generated@@8 $generated@@608) $generated@@134 $generated@@606)) (and ($generated@@267 (+ $generated@@605 1)) (= (ControlFlow 0 3) 2))) $generated@@613)))))))
(let (($generated@@616  (=> (= $generated@@609 ($generated@@216 $generated@@610 $generated@@606 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 3) $generated@@615) (=> (= (ControlFlow 0 6) 5) $generated@@614)))))
(let (($generated@@617 true))
(let (($generated@@618  (=> (= $generated@@611 ($generated@@161 $generated@@610 $generated@@606 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@617) (=> (= (ControlFlow 0 7) 6) $generated@@616)))))
(let (($generated@@619  (=> (and (and ($generated@@254 $generated@@606) ($generated@@612 $generated@@606)) (and (= 2 $generated@@264) (= (ControlFlow 0 8) 7))) $generated@@618)))
$generated@@619))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@252 () Int)
(declare-fun $generated@@253 () Bool)
(declare-fun $generated@@254 (Int) Int)
(declare-fun $generated@@255 (Int) Bool)
(declare-fun $generated@@256 () Bool)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@328 (T@T T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@T) T@U)
(declare-fun $generated@@433 () T@T)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@476 (T@U Int) T@U)
(declare-fun $generated@@485 (T@U) Int)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@579 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@141)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@66) (= (type $generated@@221) $generated@@66)) (= (type $generated@@222) $generated@@150)) (= (type $generated@@223) $generated@@150)) (= ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221))  (and ($generated@@217 $generated@@222 $generated@@220) ($generated@@217 $generated@@223 $generated@@221))))
 :pattern ( ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@141) (= (type $generated@@225) $generated@@141)) (= ($generated@@147 $generated@@224 $generated@@225) (= $generated@@224 $generated@@225)))
 :pattern ( ($generated@@147 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@66)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@229) $generated@@66)) (= ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@150) ($generated@@0 ($generated@@83 $generated@@228 $generated@@230))) ($generated@@217 $generated@@230 $generated@@229))
 :pattern ( ($generated@@83 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@66)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@150) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@217 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@236 $generated@@237) $generated@@237)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@66) (= (type $generated@@245) $generated@@66)) (= (type $generated@@246) $generated@@150)) (= (type $generated@@247) $generated@@150)) (= (type $generated@@248) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@242 $generated@@248)) (= ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@141) (= ($generated@@139 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@251))
)))
(assert  (=> (<= 2 $generated@@252) (=> (or $generated@@253 (not (= 2 $generated@@252))) (and (forall (($generated@@257 Int) ($generated@@258 Int) ) (!  (=> (<= ($generated@@236 0) $generated@@257) (=> (= $generated@@258 (+ $generated@@257 1)) (and (and ($generated@@255 $generated@@257) ($generated@@255 ($generated@@254 $generated@@257))) ($generated@@255 $generated@@258))))
 :pattern ( ($generated@@254 $generated@@258) ($generated@@254 ($generated@@254 $generated@@257)))
)) (= $generated@@256 (forall (($generated@@259 Int) ($generated@@260 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@259) (= $generated@@260 (+ $generated@@259 1))) (< ($generated@@254 ($generated@@254 $generated@@259)) ($generated@@254 $generated@@260)))
 :pattern ( ($generated@@254 $generated@@260) ($generated@@254 ($generated@@254 $generated@@259)))
)))))))
(assert  (=> (<= 2 $generated@@252) (=> (or $generated@@253 (not (= 2 $generated@@252))) (and (forall (($generated@@261 Int) ($generated@@262 Int) ) (!  (=> (<= ($generated@@236 0) $generated@@261) (=> (= $generated@@262 (+ $generated@@261 1)) (and (and ($generated@@255 $generated@@261) ($generated@@255 ($generated@@254 $generated@@261))) ($generated@@255 $generated@@262))))
 :pattern ( ($generated@@254 $generated@@262) ($generated@@254 ($generated@@254 $generated@@261)))
)) (= $generated@@256 (forall (($generated@@263 Int) ($generated@@264 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@263) (= $generated@@264 (+ $generated@@263 1))) (< ($generated@@254 ($generated@@254 $generated@@263)) ($generated@@254 $generated@@264)))
 :pattern ( ($generated@@254 $generated@@264) ($generated@@254 ($generated@@254 $generated@@263)))
)))))))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@141) ($generated@@139 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@150) (= (type $generated@@267) $generated@@150)) (= $generated@@265 ($generated@@216 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@139 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@2) (= ($generated@@137 $generated@@276 $generated@@134) (<= ($generated@@236 0) ($generated $generated@@276))))
 :pattern ( ($generated@@137 $generated@@276 $generated@@134))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@150)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@66) (= (type $generated@@281) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@243 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@76 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@243 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert  (=> (<= 1 $generated@@252) (forall (($generated@@282 Int) ) (!  (=> (or ($generated@@255 $generated@@282) (and (not (= 1 $generated@@252)) (<= ($generated@@236 0) $generated@@282))) (<= ($generated@@236 0) ($generated@@254 $generated@@282)))
 :pattern ( ($generated@@254 $generated@@282))
))))
(assert (forall (($generated@@285 T@T) ) (! (= (type ($generated@@284 $generated@@285)) ($generated@@78 $generated@@285 $generated@@2))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@81 (type $generated@@286))))
 (=> (= (type $generated@@286) ($generated@@78 $generated@@287 $generated@@2)) (and (= (= ($generated@@283 $generated@@286) 0) (= $generated@@286 ($generated@@284 $generated@@287))) (=> (not (= ($generated@@283 $generated@@286) 0)) (exists (($generated@@288 T@U) ) (!  (and (= (type $generated@@288) $generated@@287) (< 0 ($generated ($generated@@83 $generated@@286 $generated@@288))))
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
))))))
 :pattern ( ($generated@@283 $generated@@286))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 18)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@78 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@83 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@83 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 19)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@78 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@83 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@83 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@81 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@78 $generated@@326 $generated@@2)) (= ($generated@@156 $generated@@325) (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@326) (and (<= 0 ($generated ($generated@@83 $generated@@325 $generated@@327))) (<= ($generated ($generated@@83 $generated@@325 $generated@@327)) ($generated@@283 $generated@@325))))
 :pattern ( ($generated@@83 $generated@@325 $generated@@327))
)))))
 :pattern ( ($generated@@156 $generated@@325))
)))
(assert (forall (($generated@@329 T@T) ($generated@@330 T@U) ) (! (= (type ($generated@@328 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@328 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@150) ($generated@@217 $generated@@331 $generated@@134)) (and (= ($generated@@277 ($generated@@328 $generated@@2 $generated@@331)) $generated@@331) ($generated@@137 ($generated@@328 $generated@@2 $generated@@331) $generated@@134)))
 :pattern ( ($generated@@217 $generated@@331 $generated@@134))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@293 (type $generated@@332))))
(let (($generated@@334 ($generated@@292 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@291 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@290 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@289 $generated@@332))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@293 (type $generated@@337))))
(= (type ($generated@@336 $generated@@337)) ($generated@@78 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@293 (type $generated@@339))))
(let (($generated@@341 ($generated@@292 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@291 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@290 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@340) ($generated@@0 ($generated@@83 ($generated@@336 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@311 (type $generated@@343))))
(let (($generated@@345 ($generated@@310 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@309 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@308 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@307 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@311 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@78 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@311 (type $generated@@350))))
(let (($generated@@352 ($generated@@310 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@309 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@308 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@83 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@355) $generated@@66)) (= ($generated@@137 $generated@@354 ($generated@@155 $generated@@355)) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@354 $generated@@356)))) ($generated@@217 $generated@@356 $generated@@355))
 :pattern ( ($generated@@83 $generated@@354 $generated@@356))
))))
 :pattern ( ($generated@@137 $generated@@354 ($generated@@155 $generated@@355)))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@358) $generated@@66)) (= (type $generated@@359) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@357 ($generated@@226 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@150) ($generated@@0 ($generated@@83 $generated@@357 $generated@@360))) ($generated@@243 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@83 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@76 $generated@@357 ($generated@@226 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@362) $generated@@66)) (= (type $generated@@363) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@361 ($generated@@231 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@150) ($generated@@0 ($generated@@83 $generated@@361 $generated@@364))) ($generated@@243 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@83 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@76 $generated@@361 ($generated@@231 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(= ($generated ($generated@@83 ($generated@@284 $generated@@366) $generated@@365)) 0))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@83 ($generated@@284 $generated@@366) $generated@@365)))
)))
(assert  (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@369)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@367 $generated@@369))
)) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@293 (type $generated@@370))))
(let (($generated@@372 ($generated@@292 (type $generated@@370))))
(= (type ($generated@@368 $generated@@370)) ($generated@@78 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@368 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@374) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@367 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@83 ($generated@@289 $generated@@373) ($generated@@148 ($generated@@328 $generated@@141 $generated@@374)))) (= ($generated@@83 ($generated@@368 $generated@@373) ($generated@@148 ($generated@@328 $generated@@141 $generated@@374))) ($generated@@149 ($generated@@328 $generated@@141 $generated@@374))))))
 :pattern ( ($generated@@83 ($generated@@367 $generated@@373) $generated@@374))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@311 (type $generated@@378))))
(let (($generated@@380 ($generated@@310 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@78 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@382) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@83 ($generated@@307 $generated@@381) ($generated@@148 ($generated@@328 $generated@@141 $generated@@382)))) (= ($generated@@83 ($generated@@376 $generated@@381) ($generated@@148 ($generated@@328 $generated@@141 $generated@@382))) ($generated@@149 ($generated@@328 $generated@@141 $generated@@382))))))
 :pattern ( ($generated@@83 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@292 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@291 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@83 ($generated@@336 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@83 ($generated@@289 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@83 ($generated@@368 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@383) $generated@@387))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@83 ($generated@@336 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@310 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@309 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@83 ($generated@@347 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@83 ($generated@@307 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@83 ($generated@@376 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@388) $generated@@392))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@83 ($generated@@347 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@66)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@397) $generated@@66)) (= (type $generated@@398) $generated@@66)) (= (type $generated@@399) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@396) $generated@@400))) (and ($generated@@243 ($generated@@83 ($generated@@368 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@243 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@396) $generated@@400))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@76 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@66)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@405) $generated@@66)) (= (type $generated@@406) $generated@@66)) (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@404) $generated@@408))) (and ($generated@@243 ($generated@@83 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@243 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@76 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert  (=> (<= 2 $generated@@252) (=> (or $generated@@253 (not (= 2 $generated@@252))) true)))
(assert (forall (($generated@@410 T@T) ) (! (= (type ($generated@@409 $generated@@410)) ($generated@@78 $generated@@410 $generated@@4))
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@311 (type $generated@@411))))
(let (($generated@@413 ($generated@@310 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@309 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@308 $generated@@413 $generated@@412)) (= ($generated@@307 $generated@@411) ($generated@@409 $generated@@413))))))
 :pattern ( ($generated@@307 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@311 (type $generated@@414))))
(let (($generated@@416 ($generated@@310 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@309 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@308 $generated@@416 $generated@@415)) (= ($generated@@347 $generated@@414) ($generated@@409 $generated@@415))))))
 :pattern ( ($generated@@347 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@311 (type $generated@@417))))
(let (($generated@@419 ($generated@@310 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@309 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@308 $generated@@419 $generated@@418)) (= ($generated@@375 $generated@@417) ($generated@@409 $generated@@150))))))
 :pattern ( ($generated@@375 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@293 (type $generated@@420))))
(let (($generated@@422 ($generated@@292 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@291 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@290 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@150) (= (type $generated@@424) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@367 $generated@@420) ($generated@@277 ($generated@@216 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@367 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@311 (type $generated@@425))))
(let (($generated@@427 ($generated@@310 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@309 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@308 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@150) (= (type $generated@@429) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@375 $generated@@425) ($generated@@277 ($generated@@216 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@375 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@150) ($generated@@217 $generated@@430 $generated@@46)) (and (= ($generated@@277 ($generated@@328 $generated@@2 $generated@@430)) $generated@@430) ($generated@@137 ($generated@@328 $generated@@2 $generated@@430) $generated@@46)))
 :pattern ( ($generated@@217 $generated@@430 $generated@@46))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@150) ($generated@@217 $generated@@431 $generated@@47)) (and (= ($generated@@277 ($generated@@328 $generated@@3 $generated@@431)) $generated@@431) ($generated@@137 ($generated@@328 $generated@@3 $generated@@431) $generated@@47)))
 :pattern ( ($generated@@217 $generated@@431 $generated@@47))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@150) ($generated@@217 $generated@@432 $generated@@44)) (and (= ($generated@@277 ($generated@@328 $generated@@4 $generated@@432)) $generated@@432) ($generated@@137 ($generated@@328 $generated@@4 $generated@@432) $generated@@44)))
 :pattern ( ($generated@@217 $generated@@432 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@433) 20))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@150) ($generated@@217 $generated@@434 $generated@@45)) (and (= ($generated@@277 ($generated@@328 $generated@@433 $generated@@434)) $generated@@434) ($generated@@137 ($generated@@328 $generated@@433 $generated@@434) $generated@@45)))
 :pattern ( ($generated@@217 $generated@@434 $generated@@45))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@66) (= ($generated@@217 ($generated@@277 $generated@@435) $generated@@436) ($generated@@137 $generated@@435 $generated@@436)))
 :pattern ( ($generated@@217 ($generated@@277 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@81 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@78 $generated@@438 $generated@@2)) (<= 0 ($generated@@283 $generated@@437))))
 :pattern ( ($generated@@283 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@271 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@270 $generated@@440)) (<= 0 ($generated@@269 $generated@@439))))
 :pattern ( ($generated@@269 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@66)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@66) (= (type $generated@@444) $generated@@66)) (= ($generated@@441 ($generated@@393 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@393 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@66)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@66) (= (type $generated@@448) $generated@@66)) (= ($generated@@445 ($generated@@393 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@393 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@66) (= (type $generated@@450) $generated@@66)) (= ($generated@@74 ($generated@@393 $generated@@449 $generated@@450)) $generated@@58))
 :pattern ( ($generated@@393 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@451 ($generated@@401 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@401 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@66)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@455 ($generated@@401 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@401 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@74 ($generated@@401 $generated@@459 $generated@@460)) $generated@@59))
 :pattern ( ($generated@@401 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@150) (= (type $generated@@462) $generated@@150)) (= ($generated@@249 ($generated@@216 $generated@@461 $generated@@462)) $generated@@62))
 :pattern ( ($generated@@216 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@140 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@140 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@467 ($generated@@140 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@140 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@150) (= (type $generated@@472) $generated@@150)) (= ($generated@@148 ($generated@@216 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@216 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@150) (= (type $generated@@474) $generated@@150)) (= ($generated@@149 ($generated@@216 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@216 $generated@@473 $generated@@474))
)))
(assert  (and (forall (($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@477)) $generated@@66)
 :pattern ( ($generated@@475 $generated@@477))
)) (forall (($generated@@478 T@U) ($generated@@479 Int) ) (! (let (($generated@@480 ($generated@@271 (type $generated@@478))))
(= (type ($generated@@476 $generated@@478 $generated@@479)) $generated@@480))
 :pattern ( ($generated@@476 $generated@@478 $generated@@479))
))))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@270 $generated@@150)) (= (type $generated@@482) $generated@@66)) (= (type $generated@@483) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@481 ($generated@@475 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@269 $generated@@481))) ($generated@@243 ($generated@@476 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@476 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@76 $generated@@481 ($generated@@475 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 Int) ) (! (= ($generated@@485 ($generated@@77 $generated@@486)) $generated@@486)
 :pattern ( ($generated@@77 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@66)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@66) (= ($generated@@487 ($generated@@226 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@226 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@74 ($generated@@226 $generated@@490)) $generated@@54))
 :pattern ( ($generated@@226 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@66) (= ($generated@@491 ($generated@@231 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@231 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@74 ($generated@@231 $generated@@494)) $generated@@55))
 :pattern ( ($generated@@231 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@66)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@66) (= ($generated@@495 ($generated@@155 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@155 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@498)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@66)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@66) (= ($generated@@499 ($generated@@475 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@475 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@74 ($generated@@475 $generated@@502)) $generated@@57))
 :pattern ( ($generated@@475 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 (type $generated@@503)))
(= ($generated@@328 $generated@@504 ($generated@@277 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@277 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@506) $generated@@66)) (= (type $generated@@507) $generated@@66)) (= ($generated@@137 $generated@@505 ($generated@@393 $generated@@506 $generated@@507)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@505) $generated@@508))) (and ($generated@@217 ($generated@@83 ($generated@@368 $generated@@505) $generated@@508) $generated@@507) ($generated@@217 $generated@@508 $generated@@506)))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@505) $generated@@508))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@505) $generated@@508))
))))
 :pattern ( ($generated@@137 $generated@@505 ($generated@@393 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@510) $generated@@66)) (= (type $generated@@511) $generated@@66)) (= ($generated@@137 $generated@@509 ($generated@@401 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@509) $generated@@512))) (and ($generated@@217 ($generated@@83 ($generated@@376 $generated@@509) $generated@@512) $generated@@511) ($generated@@217 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@509) $generated@@512))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@137 $generated@@509 ($generated@@401 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@150) (= (type $generated@@516) $generated@@150)) (< ($generated@@513 $generated@@515) ($generated@@514 ($generated@@216 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@216 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@150) (= (type $generated@@518) $generated@@150)) (< ($generated@@513 $generated@@518) ($generated@@514 ($generated@@216 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@216 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@150) (= (type $generated@@520) $generated@@66)) (= (type $generated@@521) $generated@@66)) ($generated@@217 $generated@@519 ($generated@@393 $generated@@520 $generated@@521))) (and (= ($generated@@277 ($generated@@328 ($generated@@291 $generated@@150 $generated@@150) $generated@@519)) $generated@@519) ($generated@@137 ($generated@@328 ($generated@@291 $generated@@150 $generated@@150) $generated@@519) ($generated@@393 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@217 $generated@@519 ($generated@@393 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@150) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) ($generated@@217 $generated@@522 ($generated@@401 $generated@@523 $generated@@524))) (and (= ($generated@@277 ($generated@@328 ($generated@@309 $generated@@150 $generated@@150) $generated@@522)) $generated@@522) ($generated@@137 ($generated@@328 ($generated@@309 $generated@@150 $generated@@150) $generated@@522) ($generated@@401 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@217 $generated@@522 ($generated@@401 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@66) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@150)) ($generated@@217 $generated@@527 ($generated@@140 $generated@@525 $generated@@526))) (and (= ($generated@@277 ($generated@@328 $generated@@141 $generated@@527)) $generated@@527) ($generated@@137 ($generated@@328 $generated@@141 $generated@@527) ($generated@@140 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@217 $generated@@527 ($generated@@140 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
 (not ($generated@@0 ($generated@@83 ($generated@@409 $generated@@529) $generated@@528))))
 :pattern ( (let (($generated@@529 (type $generated@@528)))
($generated@@83 ($generated@@409 $generated@@529) $generated@@528)))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@71)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@66) (= (type $generated@@533) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@532 $generated@@533)) $generated@@63) (= ($generated@@530 ($generated@@140 $generated@@532 $generated@@533)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@141) (= ($generated@@513 ($generated@@277 $generated@@534)) ($generated@@514 $generated@@534)))
 :pattern ( ($generated@@513 ($generated@@277 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@150) ($generated@@217 $generated@@535 ($generated@@77 0))) (and (= ($generated@@277 ($generated@@328 $generated@@2 $generated@@535)) $generated@@535) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@535) ($generated@@77 0))))
 :pattern ( ($generated@@217 $generated@@535 ($generated@@77 0)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@150) (= (type $generated@@537) $generated@@66)) ($generated@@217 $generated@@536 ($generated@@226 $generated@@537))) (and (= ($generated@@277 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@536)) $generated@@536) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@536) ($generated@@226 $generated@@537))))
 :pattern ( ($generated@@217 $generated@@536 ($generated@@226 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@150) (= (type $generated@@539) $generated@@66)) ($generated@@217 $generated@@538 ($generated@@231 $generated@@539))) (and (= ($generated@@277 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@538)) $generated@@538) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@538) ($generated@@231 $generated@@539))))
 :pattern ( ($generated@@217 $generated@@538 ($generated@@231 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@150) (= (type $generated@@541) $generated@@66)) ($generated@@217 $generated@@540 ($generated@@155 $generated@@541))) (and (= ($generated@@277 ($generated@@328 ($generated@@78 $generated@@150 $generated@@2) $generated@@540)) $generated@@540) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@2) $generated@@540) ($generated@@155 $generated@@541))))
 :pattern ( ($generated@@217 $generated@@540 ($generated@@155 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@150) (= (type $generated@@543) $generated@@66)) ($generated@@217 $generated@@542 ($generated@@475 $generated@@543))) (and (= ($generated@@277 ($generated@@328 ($generated@@270 $generated@@150) $generated@@542)) $generated@@542) ($generated@@137 ($generated@@328 ($generated@@270 $generated@@150) $generated@@542) ($generated@@475 $generated@@543))))
 :pattern ( ($generated@@217 $generated@@542 ($generated@@475 $generated@@543)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@530 $generated@@134) $generated@@64))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@545) $generated@@66)) (= (type $generated@@546) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@544 ($generated@@155 $generated@@545) $generated@@546) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@544 $generated@@547)))) ($generated@@243 $generated@@547 $generated@@545 $generated@@546))
 :pattern ( ($generated@@83 $generated@@544 $generated@@547))
))))
 :pattern ( ($generated@@76 $generated@@544 ($generated@@155 $generated@@545) $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@141) (= (type $generated@@549) $generated@@66)) (= (type $generated@@550) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@550) (and ($generated@@139 $generated@@548) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@66) ($generated@@76 $generated@@548 ($generated@@140 $generated@@549 $generated@@551) $generated@@550))
 :pattern ( ($generated@@76 $generated@@548 ($generated@@140 $generated@@549 $generated@@551) $generated@@550))
))))) ($generated@@243 ($generated@@148 $generated@@548) $generated@@549 $generated@@550))
 :pattern ( ($generated@@243 ($generated@@148 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@141) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@554) (and ($generated@@139 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@66) ($generated@@76 $generated@@552 ($generated@@140 $generated@@555 $generated@@553) $generated@@554))
 :pattern ( ($generated@@76 $generated@@552 ($generated@@140 $generated@@555 $generated@@553) $generated@@554))
))))) ($generated@@243 ($generated@@149 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@243 ($generated@@149 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@150) (= (type $generated@@557) $generated@@150)) (= ($generated@@216 ($generated@@238 $generated@@556) ($generated@@238 $generated@@557)) ($generated@@238 ($generated@@216 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@216 ($generated@@238 $generated@@556) ($generated@@238 $generated@@557)))
)))
(assert (forall (($generated@@558 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@236 $generated@@558))) ($generated@@238 ($generated@@277 ($generated@@8 $generated@@558))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@236 $generated@@558))))
)))
(assert (forall (($generated@@559 T@U) ) (! (= ($generated@@277 ($generated@@238 $generated@@559)) ($generated@@238 ($generated@@277 $generated@@559)))
 :pattern ( ($generated@@277 ($generated@@238 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@271 (type $generated@@560))))
 (=> (and (= (type $generated@@560) ($generated@@270 $generated@@561)) (= ($generated@@269 $generated@@560) 0)) (= $generated@@560 ($generated@@268 $generated@@561))))
 :pattern ( ($generated@@269 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (! (let (($generated@@565 (type $generated@@563)))
 (=> (and (and (= (type $generated@@562) ($generated@@78 $generated@@565 $generated@@2)) (= (type $generated@@564) $generated@@2)) (<= 0 ($generated $generated@@564))) (= ($generated@@283 ($generated@@84 $generated@@562 $generated@@563 $generated@@564)) (+ (- ($generated@@283 $generated@@562) ($generated ($generated@@83 $generated@@562 $generated@@563))) ($generated $generated@@564)))))
 :pattern ( ($generated@@283 ($generated@@84 $generated@@562 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@567) $generated@@2)) ($generated@@76 $generated@@567 $generated@@46 $generated@@566))
 :pattern ( ($generated@@76 $generated@@567 $generated@@46 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@569) $generated@@3)) ($generated@@76 $generated@@569 $generated@@47 $generated@@568))
 :pattern ( ($generated@@76 $generated@@569 $generated@@47 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@571) $generated@@4)) ($generated@@76 $generated@@571 $generated@@44 $generated@@570))
 :pattern ( ($generated@@76 $generated@@571 $generated@@44 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@573) $generated@@433)) ($generated@@76 $generated@@573 $generated@@45 $generated@@572))
 :pattern ( ($generated@@76 $generated@@573 $generated@@45 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@575) $generated@@150)) ($generated@@76 $generated@@575 $generated@@48 $generated@@574))
 :pattern ( ($generated@@76 $generated@@575 $generated@@48 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@270 $generated@@150)) (= (type $generated@@577) $generated@@66)) (= ($generated@@137 $generated@@576 ($generated@@475 $generated@@577)) (forall (($generated@@578 Int) ) (!  (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@269 $generated@@576))) ($generated@@217 ($generated@@476 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@476 $generated@@576 $generated@@578))
))))
 :pattern ( ($generated@@137 $generated@@576 ($generated@@475 $generated@@577)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 Int) ) (!  (=> (= (type $generated@@580) ($generated@@270 $generated@@150)) (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@269 $generated@@580))) (< ($generated@@514 ($generated@@328 $generated@@141 ($generated@@476 $generated@@580 $generated@@581))) ($generated@@579 $generated@@580))))
 :pattern ( ($generated@@514 ($generated@@328 $generated@@141 ($generated@@476 $generated@@580 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@583) $generated@@66)) (= (type $generated@@584) $generated@@66)) ($generated@@137 $generated@@582 ($generated@@393 $generated@@583 $generated@@584))) (and (and ($generated@@137 ($generated@@289 $generated@@582) ($generated@@226 $generated@@583)) ($generated@@137 ($generated@@336 $generated@@582) ($generated@@226 $generated@@584))) ($generated@@137 ($generated@@367 $generated@@582) ($generated@@226 ($generated@@140 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@137 $generated@@582 ($generated@@393 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@586) $generated@@66)) (= (type $generated@@587) $generated@@66)) ($generated@@137 $generated@@585 ($generated@@401 $generated@@586 $generated@@587))) (and (and ($generated@@137 ($generated@@307 $generated@@585) ($generated@@231 $generated@@586)) ($generated@@137 ($generated@@347 $generated@@585) ($generated@@231 $generated@@587))) ($generated@@137 ($generated@@375 $generated@@585) ($generated@@231 ($generated@@140 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@137 $generated@@585 ($generated@@401 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@2) ($generated@@137 $generated@@588 $generated@@46))
 :pattern ( ($generated@@137 $generated@@588 $generated@@46))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@3) ($generated@@137 $generated@@589 $generated@@47))
 :pattern ( ($generated@@137 $generated@@589 $generated@@47))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@4) ($generated@@137 $generated@@590 $generated@@44))
 :pattern ( ($generated@@137 $generated@@590 $generated@@44))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@433) ($generated@@137 $generated@@591 $generated@@45))
 :pattern ( ($generated@@137 $generated@@591 $generated@@45))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@150) ($generated@@137 $generated@@592 $generated@@48))
 :pattern ( ($generated@@137 $generated@@592 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@593 () Int)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 (T@U) Bool)
(declare-fun $generated@@597 () T@U)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(assert  (and (and (and (and (= (type $generated@@594) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@595) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@597) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@598) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@599) $generated@@79)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@600  (=> (and (= ($generated@@254 $generated@@593) $generated@@593) (= (ControlFlow 0 11) (- 0 10))) (= ($generated@@254 $generated@@593) $generated@@593))))
(let (($generated@@601  (=> ($generated@@76 ($generated@@8 $generated@@593) $generated@@134 $generated@@594) (=> (and ($generated@@255 $generated@@593) ($generated@@255 $generated@@593)) (and (=> (= (ControlFlow 0 7) (- 0 9)) (=> $generated@@253 (or ($generated@@0 ($generated@@238 ($generated@@11 $generated@@256))) (forall (($generated@@602 Int) ($generated@@603 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@602) (= $generated@@603 (+ $generated@@602 1))) (< ($generated@@254 ($generated@@254 $generated@@602)) ($generated@@254 $generated@@603)))
 :pattern ( ($generated@@254 $generated@@603) ($generated@@254 ($generated@@254 $generated@@602)))
))))) (=> (=> $generated@@253 (or ($generated@@0 ($generated@@238 ($generated@@11 $generated@@256))) (forall (($generated@@604 Int) ($generated@@605 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@604) (= $generated@@605 (+ $generated@@604 1))) (< ($generated@@254 ($generated@@254 $generated@@604)) ($generated@@254 $generated@@605)))
 :pattern ( ($generated@@254 $generated@@605) ($generated@@254 ($generated@@254 $generated@@604)))
)))) (=> (and (and (and ($generated@@242 $generated@@595) ($generated@@596 $generated@@595)) (=> (<= $generated@@593 $generated@@593) ($generated@@255 $generated@@593))) (and (=> (<= $generated@@593 $generated@@593) (<= $generated@@593 ($generated@@254 $generated@@593))) (= $generated@@594 $generated@@595))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (=> $generated@@253 (or ($generated@@0 ($generated@@238 ($generated@@11 $generated@@256))) (forall (($generated@@606 Int) ($generated@@607 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@606) (= $generated@@607 (+ $generated@@606 1))) (< ($generated@@254 ($generated@@254 $generated@@606)) ($generated@@254 $generated@@607)))
 :pattern ( ($generated@@254 $generated@@607) ($generated@@254 ($generated@@254 $generated@@606)))
))))) (=> (=> $generated@@253 (or ($generated@@0 ($generated@@238 ($generated@@11 $generated@@256))) (forall (($generated@@608 Int) ($generated@@609 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@608) (= $generated@@609 (+ $generated@@608 1))) (< ($generated@@254 ($generated@@254 $generated@@608)) ($generated@@254 $generated@@609)))
 :pattern ( ($generated@@254 $generated@@609) ($generated@@254 ($generated@@254 $generated@@608)))
)))) (=> (and ($generated@@242 $generated@@597) ($generated@@596 $generated@@597)) (=> (and (and ($generated@@255 $generated@@593) (<= ($generated@@254 $generated@@593) $generated@@593)) (and (= $generated@@595 $generated@@597) (= (ControlFlow 0 7) (- 0 6)))) (= ($generated@@254 $generated@@593) $generated@@593))))))))))))
(let (($generated@@610 true))
(let (($generated@@611 true))
(let (($generated@@612  (=> (<= ($generated@@236 0) $generated@@593) (and (and (and (=> (= (ControlFlow 0 12) 4) $generated@@611) (=> (= (ControlFlow 0 12) 5) $generated@@610)) (=> (= (ControlFlow 0 12) 7) $generated@@601)) (=> (= (ControlFlow 0 12) 11) $generated@@600)))))
(let (($generated@@613  (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@614 Int) ) (!  (=> (<= ($generated@@236 0) $generated@@614) (= ($generated@@254 $generated@@614) $generated@@614))
 :pattern ( ($generated@@254 $generated@@614))
)))))
(let (($generated@@615  (=> (and (forall (($generated@@616 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@616) ($generated@@0 ($generated@@238 ($generated@@11 true)))) (= ($generated@@254 $generated@@616) $generated@@616))
 :pattern ( ($generated@@254 $generated@@616))
)) (= (ControlFlow 0 3) 2)) $generated@@613)))
(let (($generated@@617  (=> (= $generated@@598 ($generated@@161 $generated@@599 $generated@@594 $generated@@60 false)) (and (=> (= (ControlFlow 0 13) 12) $generated@@612) (=> (= (ControlFlow 0 13) 3) $generated@@615)))))
(let (($generated@@618  (=> (and (and (and ($generated@@242 $generated@@594) ($generated@@596 $generated@@594)) (= 7 $generated@@252)) (and (and $generated@@253 (and ($generated@@0 ($generated@@238 ($generated@@11 $generated@@256))) (forall (($generated@@619 Int) ($generated@@620 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@619) (= $generated@@620 (+ $generated@@619 1))) (< ($generated@@254 ($generated@@254 $generated@@619)) ($generated@@254 $generated@@620)))
 :pattern ( ($generated@@254 $generated@@620) ($generated@@254 ($generated@@254 $generated@@619)))
)))) (= (ControlFlow 0 14) 13))) $generated@@617)))
$generated@@618))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@252 () Int)
(declare-fun $generated@@253 () Bool)
(declare-fun $generated@@254 (Int) Int)
(declare-fun $generated@@255 (Int) Bool)
(declare-fun $generated@@256 () Bool)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@328 (T@T T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@T) T@U)
(declare-fun $generated@@433 () T@T)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@476 (T@U Int) T@U)
(declare-fun $generated@@485 (T@U) Int)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@579 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@141)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@66) (= (type $generated@@221) $generated@@66)) (= (type $generated@@222) $generated@@150)) (= (type $generated@@223) $generated@@150)) (= ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221))  (and ($generated@@217 $generated@@222 $generated@@220) ($generated@@217 $generated@@223 $generated@@221))))
 :pattern ( ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@141) (= (type $generated@@225) $generated@@141)) (= ($generated@@147 $generated@@224 $generated@@225) (= $generated@@224 $generated@@225)))
 :pattern ( ($generated@@147 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@66)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@229) $generated@@66)) (= ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@150) ($generated@@0 ($generated@@83 $generated@@228 $generated@@230))) ($generated@@217 $generated@@230 $generated@@229))
 :pattern ( ($generated@@83 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@66)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@150) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@217 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@236 $generated@@237) $generated@@237)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@66) (= (type $generated@@245) $generated@@66)) (= (type $generated@@246) $generated@@150)) (= (type $generated@@247) $generated@@150)) (= (type $generated@@248) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@242 $generated@@248)) (= ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@141) (= ($generated@@139 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@251))
)))
(assert  (=> (<= 2 $generated@@252) (=> (or $generated@@253 (not (= 2 $generated@@252))) (and (forall (($generated@@257 Int) ($generated@@258 Int) ) (!  (=> (<= ($generated@@236 0) $generated@@257) (=> (= $generated@@258 (+ $generated@@257 1)) (and (and ($generated@@255 $generated@@257) ($generated@@255 ($generated@@254 $generated@@257))) ($generated@@255 $generated@@258))))
 :pattern ( ($generated@@254 $generated@@258) ($generated@@254 ($generated@@254 $generated@@257)))
)) (= $generated@@256 (forall (($generated@@259 Int) ($generated@@260 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@259) (= $generated@@260 (+ $generated@@259 1))) (< ($generated@@254 ($generated@@254 $generated@@259)) ($generated@@254 $generated@@260)))
 :pattern ( ($generated@@254 $generated@@260) ($generated@@254 ($generated@@254 $generated@@259)))
)))))))
(assert  (=> (<= 2 $generated@@252) (=> (or $generated@@253 (not (= 2 $generated@@252))) (and (forall (($generated@@261 Int) ($generated@@262 Int) ) (!  (=> (<= ($generated@@236 0) $generated@@261) (=> (= $generated@@262 (+ $generated@@261 1)) (and (and ($generated@@255 $generated@@261) ($generated@@255 ($generated@@254 $generated@@261))) ($generated@@255 $generated@@262))))
 :pattern ( ($generated@@254 $generated@@262) ($generated@@254 ($generated@@254 $generated@@261)))
)) (= $generated@@256 (forall (($generated@@263 Int) ($generated@@264 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@263) (= $generated@@264 (+ $generated@@263 1))) (< ($generated@@254 ($generated@@254 $generated@@263)) ($generated@@254 $generated@@264)))
 :pattern ( ($generated@@254 $generated@@264) ($generated@@254 ($generated@@254 $generated@@263)))
)))))))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@141) ($generated@@139 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@150) (= (type $generated@@267) $generated@@150)) (= $generated@@265 ($generated@@216 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@139 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@2) (= ($generated@@137 $generated@@276 $generated@@134) (<= ($generated@@236 0) ($generated $generated@@276))))
 :pattern ( ($generated@@137 $generated@@276 $generated@@134))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@150)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@66) (= (type $generated@@281) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@243 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@76 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@243 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert  (=> (<= 1 $generated@@252) (forall (($generated@@282 Int) ) (!  (=> (or ($generated@@255 $generated@@282) (and (not (= 1 $generated@@252)) (<= ($generated@@236 0) $generated@@282))) (<= ($generated@@236 0) ($generated@@254 $generated@@282)))
 :pattern ( ($generated@@254 $generated@@282))
))))
(assert (forall (($generated@@285 T@T) ) (! (= (type ($generated@@284 $generated@@285)) ($generated@@78 $generated@@285 $generated@@2))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@81 (type $generated@@286))))
 (=> (= (type $generated@@286) ($generated@@78 $generated@@287 $generated@@2)) (and (= (= ($generated@@283 $generated@@286) 0) (= $generated@@286 ($generated@@284 $generated@@287))) (=> (not (= ($generated@@283 $generated@@286) 0)) (exists (($generated@@288 T@U) ) (!  (and (= (type $generated@@288) $generated@@287) (< 0 ($generated ($generated@@83 $generated@@286 $generated@@288))))
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
))))))
 :pattern ( ($generated@@283 $generated@@286))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 18)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@78 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@83 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@83 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 19)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@78 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@83 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@83 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@81 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@78 $generated@@326 $generated@@2)) (= ($generated@@156 $generated@@325) (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@326) (and (<= 0 ($generated ($generated@@83 $generated@@325 $generated@@327))) (<= ($generated ($generated@@83 $generated@@325 $generated@@327)) ($generated@@283 $generated@@325))))
 :pattern ( ($generated@@83 $generated@@325 $generated@@327))
)))))
 :pattern ( ($generated@@156 $generated@@325))
)))
(assert (forall (($generated@@329 T@T) ($generated@@330 T@U) ) (! (= (type ($generated@@328 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@328 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@150) ($generated@@217 $generated@@331 $generated@@134)) (and (= ($generated@@277 ($generated@@328 $generated@@2 $generated@@331)) $generated@@331) ($generated@@137 ($generated@@328 $generated@@2 $generated@@331) $generated@@134)))
 :pattern ( ($generated@@217 $generated@@331 $generated@@134))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@293 (type $generated@@332))))
(let (($generated@@334 ($generated@@292 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@291 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@290 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@289 $generated@@332))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@293 (type $generated@@337))))
(= (type ($generated@@336 $generated@@337)) ($generated@@78 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@293 (type $generated@@339))))
(let (($generated@@341 ($generated@@292 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@291 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@290 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@340) ($generated@@0 ($generated@@83 ($generated@@336 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@311 (type $generated@@343))))
(let (($generated@@345 ($generated@@310 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@309 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@308 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@307 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@311 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@78 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@311 (type $generated@@350))))
(let (($generated@@352 ($generated@@310 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@309 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@308 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@83 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@355) $generated@@66)) (= ($generated@@137 $generated@@354 ($generated@@155 $generated@@355)) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@354 $generated@@356)))) ($generated@@217 $generated@@356 $generated@@355))
 :pattern ( ($generated@@83 $generated@@354 $generated@@356))
))))
 :pattern ( ($generated@@137 $generated@@354 ($generated@@155 $generated@@355)))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@358) $generated@@66)) (= (type $generated@@359) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@357 ($generated@@226 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@150) ($generated@@0 ($generated@@83 $generated@@357 $generated@@360))) ($generated@@243 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@83 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@76 $generated@@357 ($generated@@226 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@362) $generated@@66)) (= (type $generated@@363) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@361 ($generated@@231 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@150) ($generated@@0 ($generated@@83 $generated@@361 $generated@@364))) ($generated@@243 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@83 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@76 $generated@@361 ($generated@@231 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(= ($generated ($generated@@83 ($generated@@284 $generated@@366) $generated@@365)) 0))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@83 ($generated@@284 $generated@@366) $generated@@365)))
)))
(assert  (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@369)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@367 $generated@@369))
)) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@293 (type $generated@@370))))
(let (($generated@@372 ($generated@@292 (type $generated@@370))))
(= (type ($generated@@368 $generated@@370)) ($generated@@78 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@368 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@374) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@367 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@83 ($generated@@289 $generated@@373) ($generated@@148 ($generated@@328 $generated@@141 $generated@@374)))) (= ($generated@@83 ($generated@@368 $generated@@373) ($generated@@148 ($generated@@328 $generated@@141 $generated@@374))) ($generated@@149 ($generated@@328 $generated@@141 $generated@@374))))))
 :pattern ( ($generated@@83 ($generated@@367 $generated@@373) $generated@@374))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@311 (type $generated@@378))))
(let (($generated@@380 ($generated@@310 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@78 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@382) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@83 ($generated@@307 $generated@@381) ($generated@@148 ($generated@@328 $generated@@141 $generated@@382)))) (= ($generated@@83 ($generated@@376 $generated@@381) ($generated@@148 ($generated@@328 $generated@@141 $generated@@382))) ($generated@@149 ($generated@@328 $generated@@141 $generated@@382))))))
 :pattern ( ($generated@@83 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@292 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@291 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@83 ($generated@@336 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@83 ($generated@@289 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@83 ($generated@@368 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@383) $generated@@387))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@83 ($generated@@336 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@310 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@309 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@83 ($generated@@347 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@83 ($generated@@307 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@83 ($generated@@376 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@388) $generated@@392))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@83 ($generated@@347 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@66)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@397) $generated@@66)) (= (type $generated@@398) $generated@@66)) (= (type $generated@@399) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@396) $generated@@400))) (and ($generated@@243 ($generated@@83 ($generated@@368 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@243 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@396) $generated@@400))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@76 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@66)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@405) $generated@@66)) (= (type $generated@@406) $generated@@66)) (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@404) $generated@@408))) (and ($generated@@243 ($generated@@83 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@243 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@76 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert  (=> (<= 2 $generated@@252) (=> (or $generated@@253 (not (= 2 $generated@@252))) true)))
(assert (forall (($generated@@410 T@T) ) (! (= (type ($generated@@409 $generated@@410)) ($generated@@78 $generated@@410 $generated@@4))
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@311 (type $generated@@411))))
(let (($generated@@413 ($generated@@310 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@309 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@308 $generated@@413 $generated@@412)) (= ($generated@@307 $generated@@411) ($generated@@409 $generated@@413))))))
 :pattern ( ($generated@@307 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@311 (type $generated@@414))))
(let (($generated@@416 ($generated@@310 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@309 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@308 $generated@@416 $generated@@415)) (= ($generated@@347 $generated@@414) ($generated@@409 $generated@@415))))))
 :pattern ( ($generated@@347 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@311 (type $generated@@417))))
(let (($generated@@419 ($generated@@310 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@309 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@308 $generated@@419 $generated@@418)) (= ($generated@@375 $generated@@417) ($generated@@409 $generated@@150))))))
 :pattern ( ($generated@@375 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@293 (type $generated@@420))))
(let (($generated@@422 ($generated@@292 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@291 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@290 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@150) (= (type $generated@@424) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@367 $generated@@420) ($generated@@277 ($generated@@216 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@367 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@311 (type $generated@@425))))
(let (($generated@@427 ($generated@@310 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@309 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@308 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@150) (= (type $generated@@429) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@375 $generated@@425) ($generated@@277 ($generated@@216 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@375 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@150) ($generated@@217 $generated@@430 $generated@@46)) (and (= ($generated@@277 ($generated@@328 $generated@@2 $generated@@430)) $generated@@430) ($generated@@137 ($generated@@328 $generated@@2 $generated@@430) $generated@@46)))
 :pattern ( ($generated@@217 $generated@@430 $generated@@46))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@150) ($generated@@217 $generated@@431 $generated@@47)) (and (= ($generated@@277 ($generated@@328 $generated@@3 $generated@@431)) $generated@@431) ($generated@@137 ($generated@@328 $generated@@3 $generated@@431) $generated@@47)))
 :pattern ( ($generated@@217 $generated@@431 $generated@@47))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@150) ($generated@@217 $generated@@432 $generated@@44)) (and (= ($generated@@277 ($generated@@328 $generated@@4 $generated@@432)) $generated@@432) ($generated@@137 ($generated@@328 $generated@@4 $generated@@432) $generated@@44)))
 :pattern ( ($generated@@217 $generated@@432 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@433) 20))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@150) ($generated@@217 $generated@@434 $generated@@45)) (and (= ($generated@@277 ($generated@@328 $generated@@433 $generated@@434)) $generated@@434) ($generated@@137 ($generated@@328 $generated@@433 $generated@@434) $generated@@45)))
 :pattern ( ($generated@@217 $generated@@434 $generated@@45))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@66) (= ($generated@@217 ($generated@@277 $generated@@435) $generated@@436) ($generated@@137 $generated@@435 $generated@@436)))
 :pattern ( ($generated@@217 ($generated@@277 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@81 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@78 $generated@@438 $generated@@2)) (<= 0 ($generated@@283 $generated@@437))))
 :pattern ( ($generated@@283 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@271 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@270 $generated@@440)) (<= 0 ($generated@@269 $generated@@439))))
 :pattern ( ($generated@@269 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@66)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@66) (= (type $generated@@444) $generated@@66)) (= ($generated@@441 ($generated@@393 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@393 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@66)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@66) (= (type $generated@@448) $generated@@66)) (= ($generated@@445 ($generated@@393 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@393 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@66) (= (type $generated@@450) $generated@@66)) (= ($generated@@74 ($generated@@393 $generated@@449 $generated@@450)) $generated@@58))
 :pattern ( ($generated@@393 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@451 ($generated@@401 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@401 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@66)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@455 ($generated@@401 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@401 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@74 ($generated@@401 $generated@@459 $generated@@460)) $generated@@59))
 :pattern ( ($generated@@401 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@150) (= (type $generated@@462) $generated@@150)) (= ($generated@@249 ($generated@@216 $generated@@461 $generated@@462)) $generated@@62))
 :pattern ( ($generated@@216 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@140 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@140 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@467 ($generated@@140 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@140 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@150) (= (type $generated@@472) $generated@@150)) (= ($generated@@148 ($generated@@216 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@216 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@150) (= (type $generated@@474) $generated@@150)) (= ($generated@@149 ($generated@@216 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@216 $generated@@473 $generated@@474))
)))
(assert  (and (forall (($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@477)) $generated@@66)
 :pattern ( ($generated@@475 $generated@@477))
)) (forall (($generated@@478 T@U) ($generated@@479 Int) ) (! (let (($generated@@480 ($generated@@271 (type $generated@@478))))
(= (type ($generated@@476 $generated@@478 $generated@@479)) $generated@@480))
 :pattern ( ($generated@@476 $generated@@478 $generated@@479))
))))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@270 $generated@@150)) (= (type $generated@@482) $generated@@66)) (= (type $generated@@483) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@481 ($generated@@475 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@269 $generated@@481))) ($generated@@243 ($generated@@476 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@476 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@76 $generated@@481 ($generated@@475 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 Int) ) (! (= ($generated@@485 ($generated@@77 $generated@@486)) $generated@@486)
 :pattern ( ($generated@@77 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@66)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@66) (= ($generated@@487 ($generated@@226 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@226 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@74 ($generated@@226 $generated@@490)) $generated@@54))
 :pattern ( ($generated@@226 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@66) (= ($generated@@491 ($generated@@231 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@231 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@74 ($generated@@231 $generated@@494)) $generated@@55))
 :pattern ( ($generated@@231 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@66)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@66) (= ($generated@@495 ($generated@@155 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@155 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@498)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@66)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@66) (= ($generated@@499 ($generated@@475 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@475 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@74 ($generated@@475 $generated@@502)) $generated@@57))
 :pattern ( ($generated@@475 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 (type $generated@@503)))
(= ($generated@@328 $generated@@504 ($generated@@277 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@277 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@506) $generated@@66)) (= (type $generated@@507) $generated@@66)) (= ($generated@@137 $generated@@505 ($generated@@393 $generated@@506 $generated@@507)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@505) $generated@@508))) (and ($generated@@217 ($generated@@83 ($generated@@368 $generated@@505) $generated@@508) $generated@@507) ($generated@@217 $generated@@508 $generated@@506)))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@505) $generated@@508))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@505) $generated@@508))
))))
 :pattern ( ($generated@@137 $generated@@505 ($generated@@393 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@510) $generated@@66)) (= (type $generated@@511) $generated@@66)) (= ($generated@@137 $generated@@509 ($generated@@401 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@509) $generated@@512))) (and ($generated@@217 ($generated@@83 ($generated@@376 $generated@@509) $generated@@512) $generated@@511) ($generated@@217 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@509) $generated@@512))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@137 $generated@@509 ($generated@@401 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@150) (= (type $generated@@516) $generated@@150)) (< ($generated@@513 $generated@@515) ($generated@@514 ($generated@@216 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@216 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@150) (= (type $generated@@518) $generated@@150)) (< ($generated@@513 $generated@@518) ($generated@@514 ($generated@@216 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@216 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@150) (= (type $generated@@520) $generated@@66)) (= (type $generated@@521) $generated@@66)) ($generated@@217 $generated@@519 ($generated@@393 $generated@@520 $generated@@521))) (and (= ($generated@@277 ($generated@@328 ($generated@@291 $generated@@150 $generated@@150) $generated@@519)) $generated@@519) ($generated@@137 ($generated@@328 ($generated@@291 $generated@@150 $generated@@150) $generated@@519) ($generated@@393 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@217 $generated@@519 ($generated@@393 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@150) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) ($generated@@217 $generated@@522 ($generated@@401 $generated@@523 $generated@@524))) (and (= ($generated@@277 ($generated@@328 ($generated@@309 $generated@@150 $generated@@150) $generated@@522)) $generated@@522) ($generated@@137 ($generated@@328 ($generated@@309 $generated@@150 $generated@@150) $generated@@522) ($generated@@401 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@217 $generated@@522 ($generated@@401 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@66) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@150)) ($generated@@217 $generated@@527 ($generated@@140 $generated@@525 $generated@@526))) (and (= ($generated@@277 ($generated@@328 $generated@@141 $generated@@527)) $generated@@527) ($generated@@137 ($generated@@328 $generated@@141 $generated@@527) ($generated@@140 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@217 $generated@@527 ($generated@@140 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
 (not ($generated@@0 ($generated@@83 ($generated@@409 $generated@@529) $generated@@528))))
 :pattern ( (let (($generated@@529 (type $generated@@528)))
($generated@@83 ($generated@@409 $generated@@529) $generated@@528)))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@71)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@66) (= (type $generated@@533) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@532 $generated@@533)) $generated@@63) (= ($generated@@530 ($generated@@140 $generated@@532 $generated@@533)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@141) (= ($generated@@513 ($generated@@277 $generated@@534)) ($generated@@514 $generated@@534)))
 :pattern ( ($generated@@513 ($generated@@277 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@150) ($generated@@217 $generated@@535 ($generated@@77 0))) (and (= ($generated@@277 ($generated@@328 $generated@@2 $generated@@535)) $generated@@535) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@535) ($generated@@77 0))))
 :pattern ( ($generated@@217 $generated@@535 ($generated@@77 0)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@150) (= (type $generated@@537) $generated@@66)) ($generated@@217 $generated@@536 ($generated@@226 $generated@@537))) (and (= ($generated@@277 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@536)) $generated@@536) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@536) ($generated@@226 $generated@@537))))
 :pattern ( ($generated@@217 $generated@@536 ($generated@@226 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@150) (= (type $generated@@539) $generated@@66)) ($generated@@217 $generated@@538 ($generated@@231 $generated@@539))) (and (= ($generated@@277 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@538)) $generated@@538) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@538) ($generated@@231 $generated@@539))))
 :pattern ( ($generated@@217 $generated@@538 ($generated@@231 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@150) (= (type $generated@@541) $generated@@66)) ($generated@@217 $generated@@540 ($generated@@155 $generated@@541))) (and (= ($generated@@277 ($generated@@328 ($generated@@78 $generated@@150 $generated@@2) $generated@@540)) $generated@@540) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@2) $generated@@540) ($generated@@155 $generated@@541))))
 :pattern ( ($generated@@217 $generated@@540 ($generated@@155 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@150) (= (type $generated@@543) $generated@@66)) ($generated@@217 $generated@@542 ($generated@@475 $generated@@543))) (and (= ($generated@@277 ($generated@@328 ($generated@@270 $generated@@150) $generated@@542)) $generated@@542) ($generated@@137 ($generated@@328 ($generated@@270 $generated@@150) $generated@@542) ($generated@@475 $generated@@543))))
 :pattern ( ($generated@@217 $generated@@542 ($generated@@475 $generated@@543)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@530 $generated@@134) $generated@@64))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@545) $generated@@66)) (= (type $generated@@546) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@544 ($generated@@155 $generated@@545) $generated@@546) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@544 $generated@@547)))) ($generated@@243 $generated@@547 $generated@@545 $generated@@546))
 :pattern ( ($generated@@83 $generated@@544 $generated@@547))
))))
 :pattern ( ($generated@@76 $generated@@544 ($generated@@155 $generated@@545) $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@141) (= (type $generated@@549) $generated@@66)) (= (type $generated@@550) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@550) (and ($generated@@139 $generated@@548) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@66) ($generated@@76 $generated@@548 ($generated@@140 $generated@@549 $generated@@551) $generated@@550))
 :pattern ( ($generated@@76 $generated@@548 ($generated@@140 $generated@@549 $generated@@551) $generated@@550))
))))) ($generated@@243 ($generated@@148 $generated@@548) $generated@@549 $generated@@550))
 :pattern ( ($generated@@243 ($generated@@148 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@141) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@554) (and ($generated@@139 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@66) ($generated@@76 $generated@@552 ($generated@@140 $generated@@555 $generated@@553) $generated@@554))
 :pattern ( ($generated@@76 $generated@@552 ($generated@@140 $generated@@555 $generated@@553) $generated@@554))
))))) ($generated@@243 ($generated@@149 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@243 ($generated@@149 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@150) (= (type $generated@@557) $generated@@150)) (= ($generated@@216 ($generated@@238 $generated@@556) ($generated@@238 $generated@@557)) ($generated@@238 ($generated@@216 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@216 ($generated@@238 $generated@@556) ($generated@@238 $generated@@557)))
)))
(assert (forall (($generated@@558 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@236 $generated@@558))) ($generated@@238 ($generated@@277 ($generated@@8 $generated@@558))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@236 $generated@@558))))
)))
(assert (forall (($generated@@559 T@U) ) (! (= ($generated@@277 ($generated@@238 $generated@@559)) ($generated@@238 ($generated@@277 $generated@@559)))
 :pattern ( ($generated@@277 ($generated@@238 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@271 (type $generated@@560))))
 (=> (and (= (type $generated@@560) ($generated@@270 $generated@@561)) (= ($generated@@269 $generated@@560) 0)) (= $generated@@560 ($generated@@268 $generated@@561))))
 :pattern ( ($generated@@269 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (! (let (($generated@@565 (type $generated@@563)))
 (=> (and (and (= (type $generated@@562) ($generated@@78 $generated@@565 $generated@@2)) (= (type $generated@@564) $generated@@2)) (<= 0 ($generated $generated@@564))) (= ($generated@@283 ($generated@@84 $generated@@562 $generated@@563 $generated@@564)) (+ (- ($generated@@283 $generated@@562) ($generated ($generated@@83 $generated@@562 $generated@@563))) ($generated $generated@@564)))))
 :pattern ( ($generated@@283 ($generated@@84 $generated@@562 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@567) $generated@@2)) ($generated@@76 $generated@@567 $generated@@46 $generated@@566))
 :pattern ( ($generated@@76 $generated@@567 $generated@@46 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@569) $generated@@3)) ($generated@@76 $generated@@569 $generated@@47 $generated@@568))
 :pattern ( ($generated@@76 $generated@@569 $generated@@47 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@571) $generated@@4)) ($generated@@76 $generated@@571 $generated@@44 $generated@@570))
 :pattern ( ($generated@@76 $generated@@571 $generated@@44 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@573) $generated@@433)) ($generated@@76 $generated@@573 $generated@@45 $generated@@572))
 :pattern ( ($generated@@76 $generated@@573 $generated@@45 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@575) $generated@@150)) ($generated@@76 $generated@@575 $generated@@48 $generated@@574))
 :pattern ( ($generated@@76 $generated@@575 $generated@@48 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@270 $generated@@150)) (= (type $generated@@577) $generated@@66)) (= ($generated@@137 $generated@@576 ($generated@@475 $generated@@577)) (forall (($generated@@578 Int) ) (!  (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@269 $generated@@576))) ($generated@@217 ($generated@@476 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@476 $generated@@576 $generated@@578))
))))
 :pattern ( ($generated@@137 $generated@@576 ($generated@@475 $generated@@577)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 Int) ) (!  (=> (= (type $generated@@580) ($generated@@270 $generated@@150)) (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@269 $generated@@580))) (< ($generated@@514 ($generated@@328 $generated@@141 ($generated@@476 $generated@@580 $generated@@581))) ($generated@@579 $generated@@580))))
 :pattern ( ($generated@@514 ($generated@@328 $generated@@141 ($generated@@476 $generated@@580 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@583) $generated@@66)) (= (type $generated@@584) $generated@@66)) ($generated@@137 $generated@@582 ($generated@@393 $generated@@583 $generated@@584))) (and (and ($generated@@137 ($generated@@289 $generated@@582) ($generated@@226 $generated@@583)) ($generated@@137 ($generated@@336 $generated@@582) ($generated@@226 $generated@@584))) ($generated@@137 ($generated@@367 $generated@@582) ($generated@@226 ($generated@@140 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@137 $generated@@582 ($generated@@393 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@586) $generated@@66)) (= (type $generated@@587) $generated@@66)) ($generated@@137 $generated@@585 ($generated@@401 $generated@@586 $generated@@587))) (and (and ($generated@@137 ($generated@@307 $generated@@585) ($generated@@231 $generated@@586)) ($generated@@137 ($generated@@347 $generated@@585) ($generated@@231 $generated@@587))) ($generated@@137 ($generated@@375 $generated@@585) ($generated@@231 ($generated@@140 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@137 $generated@@585 ($generated@@401 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@2) ($generated@@137 $generated@@588 $generated@@46))
 :pattern ( ($generated@@137 $generated@@588 $generated@@46))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@3) ($generated@@137 $generated@@589 $generated@@47))
 :pattern ( ($generated@@137 $generated@@589 $generated@@47))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@4) ($generated@@137 $generated@@590 $generated@@44))
 :pattern ( ($generated@@137 $generated@@590 $generated@@44))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@433) ($generated@@137 $generated@@591 $generated@@45))
 :pattern ( ($generated@@137 $generated@@591 $generated@@45))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@150) ($generated@@137 $generated@@592 $generated@@48))
 :pattern ( ($generated@@137 $generated@@592 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@593 () Int)
(declare-fun $generated@@594 () Int)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 (T@U) Bool)
(declare-fun $generated@@603 () Int)
(declare-fun $generated@@604 () Int)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () Int)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(assert  (and (and (and (and (= (type $generated@@595) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@608) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@601) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@610) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@611) $generated@@79)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 50) (let (($generated@@612  (=> (and ($generated@@255 (- $generated@@593 1)) ($generated@@255 ($generated@@254 (- $generated@@593 1)))) (=> (and (and (and (<= (- $generated@@594 1) ($generated@@254 ($generated@@254 (- $generated@@593 1)))) (<= ($generated@@236 1) $generated@@593)) (and ($generated@@76 ($generated@@8 $generated@@593) $generated@@134 $generated@@595) ($generated@@255 $generated@@593))) (and (and ($generated@@255 $generated@@593) (= (ControlFlow 0 44) (- 0 43))) (and (<= (- $generated@@594 1) ($generated@@254 ($generated@@254 (- $generated@@593 1)))) (<= ($generated@@236 1) $generated@@593)))) (< (- $generated@@594 1) ($generated@@254 $generated@@593))))))
(let (($generated@@613  (=> (and (< ($generated@@254 ($generated@@254 (- $generated@@593 1))) (- $generated@@594 1)) (= (ControlFlow 0 46) 44)) $generated@@612)))
(let (($generated@@614  (=> (and (<= (- $generated@@594 1) ($generated@@254 ($generated@@254 (- $generated@@593 1)))) (= (ControlFlow 0 45) 44)) $generated@@612)))
(let (($generated@@615  (=> ($generated@@137 ($generated@@8 (- $generated@@593 1)) $generated@@134) (=> (and (= $generated@@596 (- $generated@@593 1)) ($generated@@76 ($generated@@8 $generated@@596) $generated@@134 $generated@@595)) (=> (and (and ($generated@@255 (- $generated@@593 1)) (= $generated@@597 ($generated@@254 (- $generated@@593 1)))) (and ($generated@@76 ($generated@@8 $generated@@597) $generated@@134 $generated@@595) ($generated@@255 ($generated@@254 (- $generated@@593 1))))) (and (=> (= (ControlFlow 0 47) 45) $generated@@614) (=> (= (ControlFlow 0 47) 46) $generated@@613)))))))
(let (($generated@@616  (=> (and ($generated@@255 (- $generated@@593 1)) ($generated@@255 ($generated@@254 (- $generated@@593 1)))) (and (=> (= (ControlFlow 0 28) (- 0 29)) (=> (and (<= (- $generated@@594 1) ($generated@@254 (- $generated@@593 1))) (<= ($generated@@236 1) $generated@@593)) (<= (- $generated@@594 1) ($generated@@254 ($generated@@254 (- $generated@@593 1)))))) (=> (= (ControlFlow 0 28) (- 0 27)) (=> (and (<= (- $generated@@594 1) ($generated@@254 (- $generated@@593 1))) (<= ($generated@@236 1) $generated@@593)) (<= ($generated@@236 1) $generated@@593)))))))
(let (($generated@@617  (=> (and (< ($generated@@254 ($generated@@254 (- $generated@@593 1))) (- $generated@@594 1)) (= (ControlFlow 0 31) 28)) $generated@@616)))
(let (($generated@@618  (=> (and (<= (- $generated@@594 1) ($generated@@254 ($generated@@254 (- $generated@@593 1)))) (= (ControlFlow 0 30) 28)) $generated@@616)))
(let (($generated@@619  (=> ($generated@@255 (- $generated@@593 1)) (=> (and (<= (- $generated@@594 1) ($generated@@254 (- $generated@@593 1))) (<= ($generated@@236 1) $generated@@593)) (and (=> (= (ControlFlow 0 32) (- 0 39)) ($generated@@137 ($generated@@8 (- $generated@@594 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@594 1)) $generated@@134) (=> (= $generated@@598 (- $generated@@594 1)) (and (=> (= (ControlFlow 0 32) (- 0 38)) ($generated@@137 ($generated@@8 (- $generated@@593 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@593 1)) $generated@@134) (=> (= $generated@@599 (- $generated@@593 1)) (=> (and (and ($generated@@76 ($generated@@8 $generated@@599) $generated@@134 $generated@@595) ($generated@@255 (- $generated@@593 1))) (and ($generated@@255 (- $generated@@593 1)) (= $generated@@600 ($generated@@254 (- $generated@@593 1))))) (and (=> (= (ControlFlow 0 32) (- 0 37)) (or (<= 0 $generated@@594) (= $generated@@598 $generated@@594))) (=> (or (<= 0 $generated@@594) (= $generated@@598 $generated@@594)) (and (=> (= (ControlFlow 0 32) (- 0 36)) (or (or (<= 0 $generated@@593) (< $generated@@598 $generated@@594)) (= $generated@@600 $generated@@593))) (=> (or (or (<= 0 $generated@@593) (< $generated@@598 $generated@@594)) (= $generated@@600 $generated@@593)) (and (=> (= (ControlFlow 0 32) (- 0 35)) (or (< $generated@@598 $generated@@594) (and (= $generated@@598 $generated@@594) (< $generated@@600 $generated@@593)))) (=> (or (< $generated@@598 $generated@@594) (and (= $generated@@598 $generated@@594) (< $generated@@600 $generated@@593))) (and (=> (= (ControlFlow 0 32) (- 0 34)) (=> $generated@@253 (or ($generated@@0 ($generated@@238 ($generated@@11 $generated@@256))) (forall (($generated@@620 Int) ($generated@@621 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@620) (= $generated@@621 (+ $generated@@620 1))) (< ($generated@@254 ($generated@@254 $generated@@620)) ($generated@@254 $generated@@621)))
 :pattern ( ($generated@@254 $generated@@621) ($generated@@254 ($generated@@254 $generated@@620)))
))))) (=> (=> $generated@@253 (or ($generated@@0 ($generated@@238 ($generated@@11 $generated@@256))) (forall (($generated@@622 Int) ($generated@@623 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@622) (= $generated@@623 (+ $generated@@622 1))) (< ($generated@@254 ($generated@@254 $generated@@622)) ($generated@@254 $generated@@623)))
 :pattern ( ($generated@@254 $generated@@623) ($generated@@254 ($generated@@254 $generated@@622)))
)))) (=> (and (and (and ($generated@@242 $generated@@601) ($generated@@602 $generated@@601)) (=> (<= $generated@@598 $generated@@600) ($generated@@255 $generated@@600))) (and (=> (<= $generated@@598 $generated@@600) (<= $generated@@598 ($generated@@254 $generated@@600))) (= $generated@@595 $generated@@601))) (and (=> (= (ControlFlow 0 32) (- 0 33)) ($generated@@137 ($generated@@8 (- $generated@@593 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@593 1)) $generated@@134) (=> (and (= $generated@@603 (- $generated@@593 1)) ($generated@@76 ($generated@@8 $generated@@603) $generated@@134 $generated@@601)) (=> (and (and ($generated@@255 (- $generated@@593 1)) (= $generated@@604 ($generated@@254 (- $generated@@593 1)))) (and ($generated@@76 ($generated@@8 $generated@@604) $generated@@134 $generated@@601) ($generated@@255 ($generated@@254 (- $generated@@593 1))))) (and (=> (= (ControlFlow 0 32) 30) $generated@@618) (=> (= (ControlFlow 0 32) 31) $generated@@617))))))))))))))))))))))))))
(let (($generated@@624  (=> (and (< ($generated@@254 (- $generated@@593 1)) (- $generated@@594 1)) (= (ControlFlow 0 41) 32)) $generated@@619)))
(let (($generated@@625  (=> (and (<= (- $generated@@594 1) ($generated@@254 (- $generated@@593 1))) (= (ControlFlow 0 40) 32)) $generated@@619)))
(let (($generated@@626  (=> (and (and ($generated@@137 ($generated@@8 (- $generated@@593 1)) $generated@@134) (= $generated@@605 (- $generated@@593 1))) (and ($generated@@76 ($generated@@8 $generated@@605) $generated@@134 $generated@@595) ($generated@@255 (- $generated@@593 1)))) (and (=> (= (ControlFlow 0 42) 40) $generated@@625) (=> (= (ControlFlow 0 42) 41) $generated@@624)))))
(let (($generated@@627  (=> (= (ControlFlow 0 24) (- 0 23)) (=  (and (<= (- $generated@@594 1) (- $generated@@593 1)) (<= ($generated@@236 1) $generated@@593)) (<= $generated@@594 $generated@@593)))))
(let (($generated@@628  (=> (and (< (- $generated@@593 1) (- $generated@@594 1)) (= (ControlFlow 0 26) 24)) $generated@@627)))
(let (($generated@@629  (=> (and (<= (- $generated@@594 1) (- $generated@@593 1)) (= (ControlFlow 0 25) 24)) $generated@@627)))
(let (($generated@@630  (=> ($generated@@255 (- $generated@@593 1)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (=> (and (<= (- $generated@@594 1) (- $generated@@593 1)) (<= ($generated@@236 1) $generated@@593)) (<= (- $generated@@594 1) ($generated@@254 (- $generated@@593 1))))) (=> (= (ControlFlow 0 9) (- 0 8)) (=> (and (<= (- $generated@@594 1) (- $generated@@593 1)) (<= ($generated@@236 1) $generated@@593)) (<= ($generated@@236 1) $generated@@593)))))))
(let (($generated@@631  (=> (and (< ($generated@@254 (- $generated@@593 1)) (- $generated@@594 1)) (= (ControlFlow 0 12) 9)) $generated@@630)))
(let (($generated@@632  (=> (and (<= (- $generated@@594 1) ($generated@@254 (- $generated@@593 1))) (= (ControlFlow 0 11) 9)) $generated@@630)))
(let (($generated@@633  (=> (and (<= (- $generated@@594 1) (- $generated@@593 1)) (<= ($generated@@236 1) $generated@@593)) (and (=> (= (ControlFlow 0 13) (- 0 20)) ($generated@@137 ($generated@@8 (- $generated@@594 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@594 1)) $generated@@134) (=> (= $generated@@606 (- $generated@@594 1)) (and (=> (= (ControlFlow 0 13) (- 0 19)) ($generated@@137 ($generated@@8 (- $generated@@593 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@593 1)) $generated@@134) (=> (= $generated@@607 (- $generated@@593 1)) (and (=> (= (ControlFlow 0 13) (- 0 18)) (or (<= 0 $generated@@594) (= $generated@@606 $generated@@594))) (=> (or (<= 0 $generated@@594) (= $generated@@606 $generated@@594)) (and (=> (= (ControlFlow 0 13) (- 0 17)) (or (or (<= 0 $generated@@593) (< $generated@@606 $generated@@594)) (= $generated@@607 $generated@@593))) (=> (or (or (<= 0 $generated@@593) (< $generated@@606 $generated@@594)) (= $generated@@607 $generated@@593)) (and (=> (= (ControlFlow 0 13) (- 0 16)) (or (< $generated@@606 $generated@@594) (and (= $generated@@606 $generated@@594) (< $generated@@607 $generated@@593)))) (=> (or (< $generated@@606 $generated@@594) (and (= $generated@@606 $generated@@594) (< $generated@@607 $generated@@593))) (and (=> (= (ControlFlow 0 13) (- 0 15)) (=> $generated@@253 (or ($generated@@0 ($generated@@238 ($generated@@11 $generated@@256))) (forall (($generated@@634 Int) ($generated@@635 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@634) (= $generated@@635 (+ $generated@@634 1))) (< ($generated@@254 ($generated@@254 $generated@@634)) ($generated@@254 $generated@@635)))
 :pattern ( ($generated@@254 $generated@@635) ($generated@@254 ($generated@@254 $generated@@634)))
))))) (=> (=> $generated@@253 (or ($generated@@0 ($generated@@238 ($generated@@11 $generated@@256))) (forall (($generated@@636 Int) ($generated@@637 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@636) (= $generated@@637 (+ $generated@@636 1))) (< ($generated@@254 ($generated@@254 $generated@@636)) ($generated@@254 $generated@@637)))
 :pattern ( ($generated@@254 $generated@@637) ($generated@@254 ($generated@@254 $generated@@636)))
)))) (=> (and (and (and ($generated@@242 $generated@@608) ($generated@@602 $generated@@608)) (=> (<= $generated@@606 $generated@@607) ($generated@@255 $generated@@607))) (and (=> (<= $generated@@606 $generated@@607) (<= $generated@@606 ($generated@@254 $generated@@607))) (= $generated@@595 $generated@@608))) (and (=> (= (ControlFlow 0 13) (- 0 14)) ($generated@@137 ($generated@@8 (- $generated@@593 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (- $generated@@593 1)) $generated@@134) (=> (= $generated@@609 (- $generated@@593 1)) (=> (and ($generated@@76 ($generated@@8 $generated@@609) $generated@@134 $generated@@608) ($generated@@255 (- $generated@@593 1))) (and (=> (= (ControlFlow 0 13) 11) $generated@@632) (=> (= (ControlFlow 0 13) 12) $generated@@631))))))))))))))))))))))))
(let (($generated@@638  (=> (and (< (- $generated@@593 1) (- $generated@@594 1)) (= (ControlFlow 0 22) 13)) $generated@@633)))
(let (($generated@@639  (=> (and (<= (- $generated@@594 1) (- $generated@@593 1)) (= (ControlFlow 0 21) 13)) $generated@@633)))
(let (($generated@@640  (=> ($generated@@76 ($generated@@8 $generated@@593) $generated@@134 $generated@@595) (=> (and ($generated@@255 $generated@@593) ($generated@@255 $generated@@593)) (=> (and (and ($generated@@76 ($generated@@8 $generated@@593) $generated@@134 $generated@@595) ($generated@@255 $generated@@593)) (and ($generated@@255 $generated@@593) (= (ControlFlow 0 6) (- 0 5)))) (= (<= $generated@@594 ($generated@@254 $generated@@593)) (< (- $generated@@594 1) ($generated@@254 $generated@@593))))))))
(let (($generated@@641 true))
(let (($generated@@642  (=> (= (ControlFlow 0 2) (- 0 1)) (=> (<= $generated@@594 $generated@@593) (<= $generated@@594 ($generated@@254 $generated@@593))))))
(let (($generated@@643  (=> (and (=> (<= $generated@@594 $generated@@593) (<= $generated@@594 ($generated@@254 $generated@@593))) (= (ControlFlow 0 7) 2)) $generated@@642)))
(let (($generated@@644  (=> (< 0 $generated@@594) (and (and (and (and (and (and (and (and (=> (= (ControlFlow 0 48) 4) $generated@@641) (=> (= (ControlFlow 0 48) 6) $generated@@640)) (=> (= (ControlFlow 0 48) 47) $generated@@615)) (=> (= (ControlFlow 0 48) 42) $generated@@626)) (=> (= (ControlFlow 0 48) 7) $generated@@643)) (=> (= (ControlFlow 0 48) 25) $generated@@629)) (=> (= (ControlFlow 0 48) 26) $generated@@628)) (=> (= (ControlFlow 0 48) 21) $generated@@639)) (=> (= (ControlFlow 0 48) 22) $generated@@638)))))
(let (($generated@@645  (=> (and (<= $generated@@594 0) (= (ControlFlow 0 3) 2)) $generated@@642)))
(let (($generated@@646  (=> (= $generated@@610 ($generated@@161 $generated@@611 $generated@@595 $generated@@60 false)) (and (=> (= (ControlFlow 0 49) 48) $generated@@644) (=> (= (ControlFlow 0 49) 3) $generated@@645)))))
(let (($generated@@647  (=> (and (and (and (and ($generated@@242 $generated@@595) ($generated@@602 $generated@@595)) (<= ($generated@@236 0) $generated@@594)) (and (<= ($generated@@236 0) $generated@@593) (= 3 $generated@@252))) (and (and $generated@@253 (and ($generated@@0 ($generated@@238 ($generated@@11 $generated@@256))) (forall (($generated@@648 Int) ($generated@@649 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@648) (= $generated@@649 (+ $generated@@648 1))) (< ($generated@@254 ($generated@@254 $generated@@648)) ($generated@@254 $generated@@649)))
 :pattern ( ($generated@@254 $generated@@649) ($generated@@254 ($generated@@254 $generated@@648)))
)))) (= (ControlFlow 0 50) 49))) $generated@@646)))
$generated@@647)))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@252 () Int)
(declare-fun $generated@@253 () Bool)
(declare-fun $generated@@254 (Int) Int)
(declare-fun $generated@@255 (Int) Bool)
(declare-fun $generated@@256 () Bool)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@328 (T@T T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@T) T@U)
(declare-fun $generated@@433 () T@T)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@476 (T@U Int) T@U)
(declare-fun $generated@@485 (T@U) Int)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@579 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@141)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@66) (= (type $generated@@221) $generated@@66)) (= (type $generated@@222) $generated@@150)) (= (type $generated@@223) $generated@@150)) (= ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221))  (and ($generated@@217 $generated@@222 $generated@@220) ($generated@@217 $generated@@223 $generated@@221))))
 :pattern ( ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@141) (= (type $generated@@225) $generated@@141)) (= ($generated@@147 $generated@@224 $generated@@225) (= $generated@@224 $generated@@225)))
 :pattern ( ($generated@@147 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@66)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@229) $generated@@66)) (= ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@150) ($generated@@0 ($generated@@83 $generated@@228 $generated@@230))) ($generated@@217 $generated@@230 $generated@@229))
 :pattern ( ($generated@@83 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@66)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@150) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@217 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@236 $generated@@237) $generated@@237)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@66) (= (type $generated@@245) $generated@@66)) (= (type $generated@@246) $generated@@150)) (= (type $generated@@247) $generated@@150)) (= (type $generated@@248) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@242 $generated@@248)) (= ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@141) (= ($generated@@139 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@251))
)))
(assert  (=> (<= 2 $generated@@252) (=> (or $generated@@253 (not (= 2 $generated@@252))) (and (forall (($generated@@257 Int) ($generated@@258 Int) ) (!  (=> (<= ($generated@@236 0) $generated@@257) (=> (= $generated@@258 (+ $generated@@257 1)) (and (and ($generated@@255 $generated@@257) ($generated@@255 ($generated@@254 $generated@@257))) ($generated@@255 $generated@@258))))
 :pattern ( ($generated@@254 $generated@@258) ($generated@@254 ($generated@@254 $generated@@257)))
)) (= $generated@@256 (forall (($generated@@259 Int) ($generated@@260 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@259) (= $generated@@260 (+ $generated@@259 1))) (< ($generated@@254 ($generated@@254 $generated@@259)) ($generated@@254 $generated@@260)))
 :pattern ( ($generated@@254 $generated@@260) ($generated@@254 ($generated@@254 $generated@@259)))
)))))))
(assert  (=> (<= 2 $generated@@252) (=> (or $generated@@253 (not (= 2 $generated@@252))) (and (forall (($generated@@261 Int) ($generated@@262 Int) ) (!  (=> (<= ($generated@@236 0) $generated@@261) (=> (= $generated@@262 (+ $generated@@261 1)) (and (and ($generated@@255 $generated@@261) ($generated@@255 ($generated@@254 $generated@@261))) ($generated@@255 $generated@@262))))
 :pattern ( ($generated@@254 $generated@@262) ($generated@@254 ($generated@@254 $generated@@261)))
)) (= $generated@@256 (forall (($generated@@263 Int) ($generated@@264 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@263) (= $generated@@264 (+ $generated@@263 1))) (< ($generated@@254 ($generated@@254 $generated@@263)) ($generated@@254 $generated@@264)))
 :pattern ( ($generated@@254 $generated@@264) ($generated@@254 ($generated@@254 $generated@@263)))
)))))))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@141) ($generated@@139 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@150) (= (type $generated@@267) $generated@@150)) (= $generated@@265 ($generated@@216 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@139 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@2) (= ($generated@@137 $generated@@276 $generated@@134) (<= ($generated@@236 0) ($generated $generated@@276))))
 :pattern ( ($generated@@137 $generated@@276 $generated@@134))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@150)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@66) (= (type $generated@@281) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@243 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@76 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@243 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert  (=> (<= 1 $generated@@252) (forall (($generated@@282 Int) ) (!  (=> (or ($generated@@255 $generated@@282) (and (not (= 1 $generated@@252)) (<= ($generated@@236 0) $generated@@282))) (<= ($generated@@236 0) ($generated@@254 $generated@@282)))
 :pattern ( ($generated@@254 $generated@@282))
))))
(assert (forall (($generated@@285 T@T) ) (! (= (type ($generated@@284 $generated@@285)) ($generated@@78 $generated@@285 $generated@@2))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@81 (type $generated@@286))))
 (=> (= (type $generated@@286) ($generated@@78 $generated@@287 $generated@@2)) (and (= (= ($generated@@283 $generated@@286) 0) (= $generated@@286 ($generated@@284 $generated@@287))) (=> (not (= ($generated@@283 $generated@@286) 0)) (exists (($generated@@288 T@U) ) (!  (and (= (type $generated@@288) $generated@@287) (< 0 ($generated ($generated@@83 $generated@@286 $generated@@288))))
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
))))))
 :pattern ( ($generated@@283 $generated@@286))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 18)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@78 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@83 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@83 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 19)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@78 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@83 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@83 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@81 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@78 $generated@@326 $generated@@2)) (= ($generated@@156 $generated@@325) (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@326) (and (<= 0 ($generated ($generated@@83 $generated@@325 $generated@@327))) (<= ($generated ($generated@@83 $generated@@325 $generated@@327)) ($generated@@283 $generated@@325))))
 :pattern ( ($generated@@83 $generated@@325 $generated@@327))
)))))
 :pattern ( ($generated@@156 $generated@@325))
)))
(assert (forall (($generated@@329 T@T) ($generated@@330 T@U) ) (! (= (type ($generated@@328 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@328 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@150) ($generated@@217 $generated@@331 $generated@@134)) (and (= ($generated@@277 ($generated@@328 $generated@@2 $generated@@331)) $generated@@331) ($generated@@137 ($generated@@328 $generated@@2 $generated@@331) $generated@@134)))
 :pattern ( ($generated@@217 $generated@@331 $generated@@134))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@293 (type $generated@@332))))
(let (($generated@@334 ($generated@@292 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@291 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@290 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@289 $generated@@332))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@293 (type $generated@@337))))
(= (type ($generated@@336 $generated@@337)) ($generated@@78 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@293 (type $generated@@339))))
(let (($generated@@341 ($generated@@292 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@291 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@290 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@340) ($generated@@0 ($generated@@83 ($generated@@336 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@311 (type $generated@@343))))
(let (($generated@@345 ($generated@@310 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@309 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@308 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@307 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@311 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@78 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@311 (type $generated@@350))))
(let (($generated@@352 ($generated@@310 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@309 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@308 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@83 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@355) $generated@@66)) (= ($generated@@137 $generated@@354 ($generated@@155 $generated@@355)) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@354 $generated@@356)))) ($generated@@217 $generated@@356 $generated@@355))
 :pattern ( ($generated@@83 $generated@@354 $generated@@356))
))))
 :pattern ( ($generated@@137 $generated@@354 ($generated@@155 $generated@@355)))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@358) $generated@@66)) (= (type $generated@@359) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@357 ($generated@@226 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@150) ($generated@@0 ($generated@@83 $generated@@357 $generated@@360))) ($generated@@243 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@83 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@76 $generated@@357 ($generated@@226 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@362) $generated@@66)) (= (type $generated@@363) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@361 ($generated@@231 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@150) ($generated@@0 ($generated@@83 $generated@@361 $generated@@364))) ($generated@@243 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@83 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@76 $generated@@361 ($generated@@231 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(= ($generated ($generated@@83 ($generated@@284 $generated@@366) $generated@@365)) 0))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@83 ($generated@@284 $generated@@366) $generated@@365)))
)))
(assert  (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@369)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@367 $generated@@369))
)) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@293 (type $generated@@370))))
(let (($generated@@372 ($generated@@292 (type $generated@@370))))
(= (type ($generated@@368 $generated@@370)) ($generated@@78 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@368 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@374) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@367 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@83 ($generated@@289 $generated@@373) ($generated@@148 ($generated@@328 $generated@@141 $generated@@374)))) (= ($generated@@83 ($generated@@368 $generated@@373) ($generated@@148 ($generated@@328 $generated@@141 $generated@@374))) ($generated@@149 ($generated@@328 $generated@@141 $generated@@374))))))
 :pattern ( ($generated@@83 ($generated@@367 $generated@@373) $generated@@374))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@311 (type $generated@@378))))
(let (($generated@@380 ($generated@@310 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@78 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@382) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@83 ($generated@@307 $generated@@381) ($generated@@148 ($generated@@328 $generated@@141 $generated@@382)))) (= ($generated@@83 ($generated@@376 $generated@@381) ($generated@@148 ($generated@@328 $generated@@141 $generated@@382))) ($generated@@149 ($generated@@328 $generated@@141 $generated@@382))))))
 :pattern ( ($generated@@83 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@292 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@291 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@83 ($generated@@336 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@83 ($generated@@289 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@83 ($generated@@368 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@383) $generated@@387))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@83 ($generated@@336 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@310 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@309 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@83 ($generated@@347 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@83 ($generated@@307 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@83 ($generated@@376 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@388) $generated@@392))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@83 ($generated@@347 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@66)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@397) $generated@@66)) (= (type $generated@@398) $generated@@66)) (= (type $generated@@399) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@396) $generated@@400))) (and ($generated@@243 ($generated@@83 ($generated@@368 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@243 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@396) $generated@@400))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@76 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@66)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@405) $generated@@66)) (= (type $generated@@406) $generated@@66)) (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@404) $generated@@408))) (and ($generated@@243 ($generated@@83 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@243 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@76 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert  (=> (<= 2 $generated@@252) (=> (or $generated@@253 (not (= 2 $generated@@252))) true)))
(assert (forall (($generated@@410 T@T) ) (! (= (type ($generated@@409 $generated@@410)) ($generated@@78 $generated@@410 $generated@@4))
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@311 (type $generated@@411))))
(let (($generated@@413 ($generated@@310 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@309 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@308 $generated@@413 $generated@@412)) (= ($generated@@307 $generated@@411) ($generated@@409 $generated@@413))))))
 :pattern ( ($generated@@307 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@311 (type $generated@@414))))
(let (($generated@@416 ($generated@@310 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@309 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@308 $generated@@416 $generated@@415)) (= ($generated@@347 $generated@@414) ($generated@@409 $generated@@415))))))
 :pattern ( ($generated@@347 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@311 (type $generated@@417))))
(let (($generated@@419 ($generated@@310 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@309 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@308 $generated@@419 $generated@@418)) (= ($generated@@375 $generated@@417) ($generated@@409 $generated@@150))))))
 :pattern ( ($generated@@375 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@293 (type $generated@@420))))
(let (($generated@@422 ($generated@@292 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@291 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@290 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@150) (= (type $generated@@424) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@367 $generated@@420) ($generated@@277 ($generated@@216 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@367 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@311 (type $generated@@425))))
(let (($generated@@427 ($generated@@310 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@309 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@308 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@150) (= (type $generated@@429) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@375 $generated@@425) ($generated@@277 ($generated@@216 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@375 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@150) ($generated@@217 $generated@@430 $generated@@46)) (and (= ($generated@@277 ($generated@@328 $generated@@2 $generated@@430)) $generated@@430) ($generated@@137 ($generated@@328 $generated@@2 $generated@@430) $generated@@46)))
 :pattern ( ($generated@@217 $generated@@430 $generated@@46))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@150) ($generated@@217 $generated@@431 $generated@@47)) (and (= ($generated@@277 ($generated@@328 $generated@@3 $generated@@431)) $generated@@431) ($generated@@137 ($generated@@328 $generated@@3 $generated@@431) $generated@@47)))
 :pattern ( ($generated@@217 $generated@@431 $generated@@47))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@150) ($generated@@217 $generated@@432 $generated@@44)) (and (= ($generated@@277 ($generated@@328 $generated@@4 $generated@@432)) $generated@@432) ($generated@@137 ($generated@@328 $generated@@4 $generated@@432) $generated@@44)))
 :pattern ( ($generated@@217 $generated@@432 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@433) 20))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@150) ($generated@@217 $generated@@434 $generated@@45)) (and (= ($generated@@277 ($generated@@328 $generated@@433 $generated@@434)) $generated@@434) ($generated@@137 ($generated@@328 $generated@@433 $generated@@434) $generated@@45)))
 :pattern ( ($generated@@217 $generated@@434 $generated@@45))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@66) (= ($generated@@217 ($generated@@277 $generated@@435) $generated@@436) ($generated@@137 $generated@@435 $generated@@436)))
 :pattern ( ($generated@@217 ($generated@@277 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@81 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@78 $generated@@438 $generated@@2)) (<= 0 ($generated@@283 $generated@@437))))
 :pattern ( ($generated@@283 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@271 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@270 $generated@@440)) (<= 0 ($generated@@269 $generated@@439))))
 :pattern ( ($generated@@269 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@66)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@66) (= (type $generated@@444) $generated@@66)) (= ($generated@@441 ($generated@@393 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@393 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@66)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@66) (= (type $generated@@448) $generated@@66)) (= ($generated@@445 ($generated@@393 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@393 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@66) (= (type $generated@@450) $generated@@66)) (= ($generated@@74 ($generated@@393 $generated@@449 $generated@@450)) $generated@@58))
 :pattern ( ($generated@@393 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@451 ($generated@@401 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@401 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@66)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@455 ($generated@@401 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@401 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@74 ($generated@@401 $generated@@459 $generated@@460)) $generated@@59))
 :pattern ( ($generated@@401 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@150) (= (type $generated@@462) $generated@@150)) (= ($generated@@249 ($generated@@216 $generated@@461 $generated@@462)) $generated@@62))
 :pattern ( ($generated@@216 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@140 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@140 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@467 ($generated@@140 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@140 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@150) (= (type $generated@@472) $generated@@150)) (= ($generated@@148 ($generated@@216 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@216 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@150) (= (type $generated@@474) $generated@@150)) (= ($generated@@149 ($generated@@216 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@216 $generated@@473 $generated@@474))
)))
(assert  (and (forall (($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@477)) $generated@@66)
 :pattern ( ($generated@@475 $generated@@477))
)) (forall (($generated@@478 T@U) ($generated@@479 Int) ) (! (let (($generated@@480 ($generated@@271 (type $generated@@478))))
(= (type ($generated@@476 $generated@@478 $generated@@479)) $generated@@480))
 :pattern ( ($generated@@476 $generated@@478 $generated@@479))
))))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@270 $generated@@150)) (= (type $generated@@482) $generated@@66)) (= (type $generated@@483) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@481 ($generated@@475 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@269 $generated@@481))) ($generated@@243 ($generated@@476 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@476 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@76 $generated@@481 ($generated@@475 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 Int) ) (! (= ($generated@@485 ($generated@@77 $generated@@486)) $generated@@486)
 :pattern ( ($generated@@77 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@66)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@66) (= ($generated@@487 ($generated@@226 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@226 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@74 ($generated@@226 $generated@@490)) $generated@@54))
 :pattern ( ($generated@@226 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@66) (= ($generated@@491 ($generated@@231 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@231 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@74 ($generated@@231 $generated@@494)) $generated@@55))
 :pattern ( ($generated@@231 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@66)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@66) (= ($generated@@495 ($generated@@155 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@155 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@498)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@66)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@66) (= ($generated@@499 ($generated@@475 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@475 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@74 ($generated@@475 $generated@@502)) $generated@@57))
 :pattern ( ($generated@@475 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 (type $generated@@503)))
(= ($generated@@328 $generated@@504 ($generated@@277 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@277 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@506) $generated@@66)) (= (type $generated@@507) $generated@@66)) (= ($generated@@137 $generated@@505 ($generated@@393 $generated@@506 $generated@@507)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@505) $generated@@508))) (and ($generated@@217 ($generated@@83 ($generated@@368 $generated@@505) $generated@@508) $generated@@507) ($generated@@217 $generated@@508 $generated@@506)))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@505) $generated@@508))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@505) $generated@@508))
))))
 :pattern ( ($generated@@137 $generated@@505 ($generated@@393 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@510) $generated@@66)) (= (type $generated@@511) $generated@@66)) (= ($generated@@137 $generated@@509 ($generated@@401 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@509) $generated@@512))) (and ($generated@@217 ($generated@@83 ($generated@@376 $generated@@509) $generated@@512) $generated@@511) ($generated@@217 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@509) $generated@@512))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@137 $generated@@509 ($generated@@401 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@150) (= (type $generated@@516) $generated@@150)) (< ($generated@@513 $generated@@515) ($generated@@514 ($generated@@216 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@216 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@150) (= (type $generated@@518) $generated@@150)) (< ($generated@@513 $generated@@518) ($generated@@514 ($generated@@216 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@216 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@150) (= (type $generated@@520) $generated@@66)) (= (type $generated@@521) $generated@@66)) ($generated@@217 $generated@@519 ($generated@@393 $generated@@520 $generated@@521))) (and (= ($generated@@277 ($generated@@328 ($generated@@291 $generated@@150 $generated@@150) $generated@@519)) $generated@@519) ($generated@@137 ($generated@@328 ($generated@@291 $generated@@150 $generated@@150) $generated@@519) ($generated@@393 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@217 $generated@@519 ($generated@@393 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@150) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) ($generated@@217 $generated@@522 ($generated@@401 $generated@@523 $generated@@524))) (and (= ($generated@@277 ($generated@@328 ($generated@@309 $generated@@150 $generated@@150) $generated@@522)) $generated@@522) ($generated@@137 ($generated@@328 ($generated@@309 $generated@@150 $generated@@150) $generated@@522) ($generated@@401 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@217 $generated@@522 ($generated@@401 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@66) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@150)) ($generated@@217 $generated@@527 ($generated@@140 $generated@@525 $generated@@526))) (and (= ($generated@@277 ($generated@@328 $generated@@141 $generated@@527)) $generated@@527) ($generated@@137 ($generated@@328 $generated@@141 $generated@@527) ($generated@@140 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@217 $generated@@527 ($generated@@140 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
 (not ($generated@@0 ($generated@@83 ($generated@@409 $generated@@529) $generated@@528))))
 :pattern ( (let (($generated@@529 (type $generated@@528)))
($generated@@83 ($generated@@409 $generated@@529) $generated@@528)))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@71)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@66) (= (type $generated@@533) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@532 $generated@@533)) $generated@@63) (= ($generated@@530 ($generated@@140 $generated@@532 $generated@@533)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@141) (= ($generated@@513 ($generated@@277 $generated@@534)) ($generated@@514 $generated@@534)))
 :pattern ( ($generated@@513 ($generated@@277 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@150) ($generated@@217 $generated@@535 ($generated@@77 0))) (and (= ($generated@@277 ($generated@@328 $generated@@2 $generated@@535)) $generated@@535) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@535) ($generated@@77 0))))
 :pattern ( ($generated@@217 $generated@@535 ($generated@@77 0)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@150) (= (type $generated@@537) $generated@@66)) ($generated@@217 $generated@@536 ($generated@@226 $generated@@537))) (and (= ($generated@@277 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@536)) $generated@@536) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@536) ($generated@@226 $generated@@537))))
 :pattern ( ($generated@@217 $generated@@536 ($generated@@226 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@150) (= (type $generated@@539) $generated@@66)) ($generated@@217 $generated@@538 ($generated@@231 $generated@@539))) (and (= ($generated@@277 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@538)) $generated@@538) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@538) ($generated@@231 $generated@@539))))
 :pattern ( ($generated@@217 $generated@@538 ($generated@@231 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@150) (= (type $generated@@541) $generated@@66)) ($generated@@217 $generated@@540 ($generated@@155 $generated@@541))) (and (= ($generated@@277 ($generated@@328 ($generated@@78 $generated@@150 $generated@@2) $generated@@540)) $generated@@540) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@2) $generated@@540) ($generated@@155 $generated@@541))))
 :pattern ( ($generated@@217 $generated@@540 ($generated@@155 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@150) (= (type $generated@@543) $generated@@66)) ($generated@@217 $generated@@542 ($generated@@475 $generated@@543))) (and (= ($generated@@277 ($generated@@328 ($generated@@270 $generated@@150) $generated@@542)) $generated@@542) ($generated@@137 ($generated@@328 ($generated@@270 $generated@@150) $generated@@542) ($generated@@475 $generated@@543))))
 :pattern ( ($generated@@217 $generated@@542 ($generated@@475 $generated@@543)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@530 $generated@@134) $generated@@64))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@545) $generated@@66)) (= (type $generated@@546) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@544 ($generated@@155 $generated@@545) $generated@@546) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@544 $generated@@547)))) ($generated@@243 $generated@@547 $generated@@545 $generated@@546))
 :pattern ( ($generated@@83 $generated@@544 $generated@@547))
))))
 :pattern ( ($generated@@76 $generated@@544 ($generated@@155 $generated@@545) $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@141) (= (type $generated@@549) $generated@@66)) (= (type $generated@@550) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@550) (and ($generated@@139 $generated@@548) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@66) ($generated@@76 $generated@@548 ($generated@@140 $generated@@549 $generated@@551) $generated@@550))
 :pattern ( ($generated@@76 $generated@@548 ($generated@@140 $generated@@549 $generated@@551) $generated@@550))
))))) ($generated@@243 ($generated@@148 $generated@@548) $generated@@549 $generated@@550))
 :pattern ( ($generated@@243 ($generated@@148 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@141) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@554) (and ($generated@@139 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@66) ($generated@@76 $generated@@552 ($generated@@140 $generated@@555 $generated@@553) $generated@@554))
 :pattern ( ($generated@@76 $generated@@552 ($generated@@140 $generated@@555 $generated@@553) $generated@@554))
))))) ($generated@@243 ($generated@@149 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@243 ($generated@@149 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@150) (= (type $generated@@557) $generated@@150)) (= ($generated@@216 ($generated@@238 $generated@@556) ($generated@@238 $generated@@557)) ($generated@@238 ($generated@@216 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@216 ($generated@@238 $generated@@556) ($generated@@238 $generated@@557)))
)))
(assert (forall (($generated@@558 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@236 $generated@@558))) ($generated@@238 ($generated@@277 ($generated@@8 $generated@@558))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@236 $generated@@558))))
)))
(assert (forall (($generated@@559 T@U) ) (! (= ($generated@@277 ($generated@@238 $generated@@559)) ($generated@@238 ($generated@@277 $generated@@559)))
 :pattern ( ($generated@@277 ($generated@@238 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@271 (type $generated@@560))))
 (=> (and (= (type $generated@@560) ($generated@@270 $generated@@561)) (= ($generated@@269 $generated@@560) 0)) (= $generated@@560 ($generated@@268 $generated@@561))))
 :pattern ( ($generated@@269 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (! (let (($generated@@565 (type $generated@@563)))
 (=> (and (and (= (type $generated@@562) ($generated@@78 $generated@@565 $generated@@2)) (= (type $generated@@564) $generated@@2)) (<= 0 ($generated $generated@@564))) (= ($generated@@283 ($generated@@84 $generated@@562 $generated@@563 $generated@@564)) (+ (- ($generated@@283 $generated@@562) ($generated ($generated@@83 $generated@@562 $generated@@563))) ($generated $generated@@564)))))
 :pattern ( ($generated@@283 ($generated@@84 $generated@@562 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@567) $generated@@2)) ($generated@@76 $generated@@567 $generated@@46 $generated@@566))
 :pattern ( ($generated@@76 $generated@@567 $generated@@46 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@569) $generated@@3)) ($generated@@76 $generated@@569 $generated@@47 $generated@@568))
 :pattern ( ($generated@@76 $generated@@569 $generated@@47 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@571) $generated@@4)) ($generated@@76 $generated@@571 $generated@@44 $generated@@570))
 :pattern ( ($generated@@76 $generated@@571 $generated@@44 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@573) $generated@@433)) ($generated@@76 $generated@@573 $generated@@45 $generated@@572))
 :pattern ( ($generated@@76 $generated@@573 $generated@@45 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@575) $generated@@150)) ($generated@@76 $generated@@575 $generated@@48 $generated@@574))
 :pattern ( ($generated@@76 $generated@@575 $generated@@48 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@270 $generated@@150)) (= (type $generated@@577) $generated@@66)) (= ($generated@@137 $generated@@576 ($generated@@475 $generated@@577)) (forall (($generated@@578 Int) ) (!  (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@269 $generated@@576))) ($generated@@217 ($generated@@476 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@476 $generated@@576 $generated@@578))
))))
 :pattern ( ($generated@@137 $generated@@576 ($generated@@475 $generated@@577)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 Int) ) (!  (=> (= (type $generated@@580) ($generated@@270 $generated@@150)) (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@269 $generated@@580))) (< ($generated@@514 ($generated@@328 $generated@@141 ($generated@@476 $generated@@580 $generated@@581))) ($generated@@579 $generated@@580))))
 :pattern ( ($generated@@514 ($generated@@328 $generated@@141 ($generated@@476 $generated@@580 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@583) $generated@@66)) (= (type $generated@@584) $generated@@66)) ($generated@@137 $generated@@582 ($generated@@393 $generated@@583 $generated@@584))) (and (and ($generated@@137 ($generated@@289 $generated@@582) ($generated@@226 $generated@@583)) ($generated@@137 ($generated@@336 $generated@@582) ($generated@@226 $generated@@584))) ($generated@@137 ($generated@@367 $generated@@582) ($generated@@226 ($generated@@140 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@137 $generated@@582 ($generated@@393 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@586) $generated@@66)) (= (type $generated@@587) $generated@@66)) ($generated@@137 $generated@@585 ($generated@@401 $generated@@586 $generated@@587))) (and (and ($generated@@137 ($generated@@307 $generated@@585) ($generated@@231 $generated@@586)) ($generated@@137 ($generated@@347 $generated@@585) ($generated@@231 $generated@@587))) ($generated@@137 ($generated@@375 $generated@@585) ($generated@@231 ($generated@@140 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@137 $generated@@585 ($generated@@401 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@2) ($generated@@137 $generated@@588 $generated@@46))
 :pattern ( ($generated@@137 $generated@@588 $generated@@46))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@3) ($generated@@137 $generated@@589 $generated@@47))
 :pattern ( ($generated@@137 $generated@@589 $generated@@47))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@4) ($generated@@137 $generated@@590 $generated@@44))
 :pattern ( ($generated@@137 $generated@@590 $generated@@44))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@433) ($generated@@137 $generated@@591 $generated@@45))
 :pattern ( ($generated@@137 $generated@@591 $generated@@45))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@150) ($generated@@137 $generated@@592 $generated@@48))
 :pattern ( ($generated@@137 $generated@@592 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@593 () Int)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () Int)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () Int)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 (T@U) Bool)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(assert  (and (and (and (= (type $generated@@594) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@601) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@603) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@604) $generated@@79)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@605  (=> (= (ControlFlow 0 11) (- 0 10)) (<= ($generated@@254 $generated@@593) $generated@@593))))
(let (($generated@@606  (=> (and (=> true (<= ($generated@@254 $generated@@593) $generated@@593)) (= (ControlFlow 0 12) 11)) $generated@@605)))
(let (($generated@@607  (=> ($generated@@76 ($generated@@8 $generated@@593) $generated@@134 $generated@@594) (=> (and (and (and (and ($generated@@255 $generated@@593) (= $generated@@595 ($generated@@254 $generated@@593))) (and ($generated@@76 ($generated@@8 $generated@@595) $generated@@134 $generated@@594) ($generated@@255 ($generated@@254 $generated@@593)))) (and (and ($generated@@137 ($generated@@8 (+ $generated@@593 1)) $generated@@134) (= $generated@@596 (+ $generated@@593 1))) (and ($generated@@76 ($generated@@8 $generated@@596) $generated@@134 $generated@@594) ($generated@@255 (+ $generated@@593 1))))) (and (and (and ($generated@@255 $generated@@593) ($generated@@255 ($generated@@254 $generated@@593))) ($generated@@255 (+ $generated@@593 1))) (= (ControlFlow 0 9) (- 0 8)))) (= (< ($generated@@254 ($generated@@254 $generated@@593)) ($generated@@254 (+ $generated@@593 1))) ($generated@@0 ($generated@@238 ($generated@@11 true))))))))
(let (($generated@@608  (=> ($generated@@76 ($generated@@8 $generated@@593) $generated@@134 $generated@@594) (=> (and (and (and (and ($generated@@255 $generated@@593) (= $generated@@597 ($generated@@254 $generated@@593))) (and ($generated@@76 ($generated@@8 $generated@@597) $generated@@134 $generated@@594) ($generated@@255 ($generated@@254 $generated@@593)))) (and (and ($generated@@137 ($generated@@8 (+ $generated@@593 1)) $generated@@134) (= $generated@@598 (+ $generated@@593 1))) (and ($generated@@76 ($generated@@8 $generated@@598) $generated@@134 $generated@@594) ($generated@@255 (+ $generated@@593 1))))) (and (and (and ($generated@@255 $generated@@593) ($generated@@255 ($generated@@254 $generated@@593))) ($generated@@255 (+ $generated@@593 1))) (< ($generated@@254 ($generated@@254 $generated@@593)) ($generated@@254 (+ $generated@@593 1))))) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@137 ($generated@@8 (+ $generated@@593 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (+ $generated@@593 1)) $generated@@134) (=> (= $generated@@599 (+ $generated@@593 1)) (=> (and (and ($generated@@76 ($generated@@8 $generated@@593) $generated@@134 $generated@@594) ($generated@@255 $generated@@593)) (and ($generated@@255 $generated@@593) (= $generated@@600 ($generated@@254 $generated@@593)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (=> $generated@@253 (or ($generated@@0 ($generated@@238 ($generated@@11 $generated@@256))) (forall (($generated@@609 Int) ($generated@@610 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@609) (= $generated@@610 (+ $generated@@609 1))) (< ($generated@@254 ($generated@@254 $generated@@609)) ($generated@@254 $generated@@610)))
 :pattern ( ($generated@@254 $generated@@610) ($generated@@254 ($generated@@254 $generated@@609)))
))))) (=> (=> $generated@@253 (or ($generated@@0 ($generated@@238 ($generated@@11 $generated@@256))) (forall (($generated@@611 Int) ($generated@@612 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@611) (= $generated@@612 (+ $generated@@611 1))) (< ($generated@@254 ($generated@@254 $generated@@611)) ($generated@@254 $generated@@612)))
 :pattern ( ($generated@@254 $generated@@612) ($generated@@254 ($generated@@254 $generated@@611)))
)))) (=> (and (and ($generated@@242 $generated@@601) ($generated@@602 $generated@@601)) (=> (<= $generated@@599 $generated@@600) (and ($generated@@255 $generated@@599) ($generated@@255 $generated@@600)))) (=> (and (and (and (=> (<= $generated@@599 $generated@@600) (<= ($generated@@254 $generated@@599) ($generated@@254 $generated@@600))) (= $generated@@594 $generated@@601)) (and ($generated@@76 ($generated@@8 $generated@@593) $generated@@134 $generated@@601) ($generated@@255 $generated@@593))) (and (and ($generated@@255 $generated@@593) (= (ControlFlow 0 5) (- 0 4))) (< ($generated@@254 ($generated@@254 $generated@@593)) ($generated@@254 (+ $generated@@593 1))))) (< ($generated@@254 $generated@@593) (+ $generated@@593 1))))))))))))))
(let (($generated@@613  (=> ($generated@@76 ($generated@@8 $generated@@593) $generated@@134 $generated@@594) (=> (and ($generated@@255 $generated@@593) ($generated@@255 $generated@@593)) (=> (and (and ($generated@@76 ($generated@@8 $generated@@593) $generated@@134 $generated@@594) ($generated@@255 $generated@@593)) (and ($generated@@255 $generated@@593) (= (ControlFlow 0 3) (- 0 2)))) (= (<= ($generated@@254 $generated@@593) $generated@@593) (< ($generated@@254 $generated@@593) (+ $generated@@593 1))))))))
(let (($generated@@614 true))
(let (($generated@@615  (=> (= $generated@@603 ($generated@@161 $generated@@604 $generated@@594 $generated@@60 false)) (and (and (and (and (=> (= (ControlFlow 0 13) 1) $generated@@614) (=> (= (ControlFlow 0 13) 3) $generated@@613)) (=> (= (ControlFlow 0 13) 5) $generated@@608)) (=> (= (ControlFlow 0 13) 9) $generated@@607)) (=> (= (ControlFlow 0 13) 12) $generated@@606)))))
(let (($generated@@616  (=> (and (and (and ($generated@@242 $generated@@594) ($generated@@602 $generated@@594)) (and (<= ($generated@@236 0) $generated@@593) (= 6 $generated@@252))) (and (and $generated@@253 (and ($generated@@0 ($generated@@238 ($generated@@11 $generated@@256))) (forall (($generated@@617 Int) ($generated@@618 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@617) (= $generated@@618 (+ $generated@@617 1))) (< ($generated@@254 ($generated@@254 $generated@@617)) ($generated@@254 $generated@@618)))
 :pattern ( ($generated@@254 $generated@@618) ($generated@@254 ($generated@@254 $generated@@617)))
)))) (= (ControlFlow 0 14) 13))) $generated@@615)))
$generated@@616)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@252 () Int)
(declare-fun $generated@@253 () Bool)
(declare-fun $generated@@254 (Int) Int)
(declare-fun $generated@@255 (Int) Bool)
(declare-fun $generated@@256 () Bool)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@328 (T@T T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@T) T@U)
(declare-fun $generated@@433 () T@T)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@476 (T@U Int) T@U)
(declare-fun $generated@@485 (T@U) Int)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@579 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@141)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@66) (= (type $generated@@221) $generated@@66)) (= (type $generated@@222) $generated@@150)) (= (type $generated@@223) $generated@@150)) (= ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221))  (and ($generated@@217 $generated@@222 $generated@@220) ($generated@@217 $generated@@223 $generated@@221))))
 :pattern ( ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@141) (= (type $generated@@225) $generated@@141)) (= ($generated@@147 $generated@@224 $generated@@225) (= $generated@@224 $generated@@225)))
 :pattern ( ($generated@@147 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@66)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@229) $generated@@66)) (= ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@150) ($generated@@0 ($generated@@83 $generated@@228 $generated@@230))) ($generated@@217 $generated@@230 $generated@@229))
 :pattern ( ($generated@@83 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@66)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@150) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@217 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@236 $generated@@237) $generated@@237)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@66) (= (type $generated@@245) $generated@@66)) (= (type $generated@@246) $generated@@150)) (= (type $generated@@247) $generated@@150)) (= (type $generated@@248) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@242 $generated@@248)) (= ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@141) (= ($generated@@139 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@251))
)))
(assert  (=> (<= 2 $generated@@252) (=> (or $generated@@253 (not (= 2 $generated@@252))) (and (forall (($generated@@257 Int) ($generated@@258 Int) ) (!  (=> (<= ($generated@@236 0) $generated@@257) (=> (= $generated@@258 (+ $generated@@257 1)) (and (and ($generated@@255 $generated@@257) ($generated@@255 ($generated@@254 $generated@@257))) ($generated@@255 $generated@@258))))
 :pattern ( ($generated@@254 $generated@@258) ($generated@@254 ($generated@@254 $generated@@257)))
)) (= $generated@@256 (forall (($generated@@259 Int) ($generated@@260 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@259) (= $generated@@260 (+ $generated@@259 1))) (< ($generated@@254 ($generated@@254 $generated@@259)) ($generated@@254 $generated@@260)))
 :pattern ( ($generated@@254 $generated@@260) ($generated@@254 ($generated@@254 $generated@@259)))
)))))))
(assert  (=> (<= 2 $generated@@252) (=> (or $generated@@253 (not (= 2 $generated@@252))) (and (forall (($generated@@261 Int) ($generated@@262 Int) ) (!  (=> (<= ($generated@@236 0) $generated@@261) (=> (= $generated@@262 (+ $generated@@261 1)) (and (and ($generated@@255 $generated@@261) ($generated@@255 ($generated@@254 $generated@@261))) ($generated@@255 $generated@@262))))
 :pattern ( ($generated@@254 $generated@@262) ($generated@@254 ($generated@@254 $generated@@261)))
)) (= $generated@@256 (forall (($generated@@263 Int) ($generated@@264 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@263) (= $generated@@264 (+ $generated@@263 1))) (< ($generated@@254 ($generated@@254 $generated@@263)) ($generated@@254 $generated@@264)))
 :pattern ( ($generated@@254 $generated@@264) ($generated@@254 ($generated@@254 $generated@@263)))
)))))))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@141) ($generated@@139 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@150) (= (type $generated@@267) $generated@@150)) (= $generated@@265 ($generated@@216 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@139 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@2) (= ($generated@@137 $generated@@276 $generated@@134) (<= ($generated@@236 0) ($generated $generated@@276))))
 :pattern ( ($generated@@137 $generated@@276 $generated@@134))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@150)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@66) (= (type $generated@@281) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@243 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@76 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@243 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert  (=> (<= 1 $generated@@252) (forall (($generated@@282 Int) ) (!  (=> (or ($generated@@255 $generated@@282) (and (not (= 1 $generated@@252)) (<= ($generated@@236 0) $generated@@282))) (<= ($generated@@236 0) ($generated@@254 $generated@@282)))
 :pattern ( ($generated@@254 $generated@@282))
))))
(assert (forall (($generated@@285 T@T) ) (! (= (type ($generated@@284 $generated@@285)) ($generated@@78 $generated@@285 $generated@@2))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@81 (type $generated@@286))))
 (=> (= (type $generated@@286) ($generated@@78 $generated@@287 $generated@@2)) (and (= (= ($generated@@283 $generated@@286) 0) (= $generated@@286 ($generated@@284 $generated@@287))) (=> (not (= ($generated@@283 $generated@@286) 0)) (exists (($generated@@288 T@U) ) (!  (and (= (type $generated@@288) $generated@@287) (< 0 ($generated ($generated@@83 $generated@@286 $generated@@288))))
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
))))))
 :pattern ( ($generated@@283 $generated@@286))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 18)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@78 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@83 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@83 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 19)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@78 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@83 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@83 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@81 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@78 $generated@@326 $generated@@2)) (= ($generated@@156 $generated@@325) (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@326) (and (<= 0 ($generated ($generated@@83 $generated@@325 $generated@@327))) (<= ($generated ($generated@@83 $generated@@325 $generated@@327)) ($generated@@283 $generated@@325))))
 :pattern ( ($generated@@83 $generated@@325 $generated@@327))
)))))
 :pattern ( ($generated@@156 $generated@@325))
)))
(assert (forall (($generated@@329 T@T) ($generated@@330 T@U) ) (! (= (type ($generated@@328 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@328 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@150) ($generated@@217 $generated@@331 $generated@@134)) (and (= ($generated@@277 ($generated@@328 $generated@@2 $generated@@331)) $generated@@331) ($generated@@137 ($generated@@328 $generated@@2 $generated@@331) $generated@@134)))
 :pattern ( ($generated@@217 $generated@@331 $generated@@134))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@293 (type $generated@@332))))
(let (($generated@@334 ($generated@@292 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@291 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@290 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@289 $generated@@332))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@293 (type $generated@@337))))
(= (type ($generated@@336 $generated@@337)) ($generated@@78 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@293 (type $generated@@339))))
(let (($generated@@341 ($generated@@292 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@291 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@290 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@340) ($generated@@0 ($generated@@83 ($generated@@336 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@311 (type $generated@@343))))
(let (($generated@@345 ($generated@@310 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@309 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@308 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@307 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@311 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@78 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@311 (type $generated@@350))))
(let (($generated@@352 ($generated@@310 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@309 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@308 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@83 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@355) $generated@@66)) (= ($generated@@137 $generated@@354 ($generated@@155 $generated@@355)) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@354 $generated@@356)))) ($generated@@217 $generated@@356 $generated@@355))
 :pattern ( ($generated@@83 $generated@@354 $generated@@356))
))))
 :pattern ( ($generated@@137 $generated@@354 ($generated@@155 $generated@@355)))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@358) $generated@@66)) (= (type $generated@@359) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@357 ($generated@@226 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@150) ($generated@@0 ($generated@@83 $generated@@357 $generated@@360))) ($generated@@243 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@83 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@76 $generated@@357 ($generated@@226 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@362) $generated@@66)) (= (type $generated@@363) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@361 ($generated@@231 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@150) ($generated@@0 ($generated@@83 $generated@@361 $generated@@364))) ($generated@@243 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@83 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@76 $generated@@361 ($generated@@231 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(= ($generated ($generated@@83 ($generated@@284 $generated@@366) $generated@@365)) 0))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@83 ($generated@@284 $generated@@366) $generated@@365)))
)))
(assert  (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@369)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@367 $generated@@369))
)) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@293 (type $generated@@370))))
(let (($generated@@372 ($generated@@292 (type $generated@@370))))
(= (type ($generated@@368 $generated@@370)) ($generated@@78 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@368 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@374) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@367 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@83 ($generated@@289 $generated@@373) ($generated@@148 ($generated@@328 $generated@@141 $generated@@374)))) (= ($generated@@83 ($generated@@368 $generated@@373) ($generated@@148 ($generated@@328 $generated@@141 $generated@@374))) ($generated@@149 ($generated@@328 $generated@@141 $generated@@374))))))
 :pattern ( ($generated@@83 ($generated@@367 $generated@@373) $generated@@374))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@311 (type $generated@@378))))
(let (($generated@@380 ($generated@@310 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@78 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@382) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@83 ($generated@@307 $generated@@381) ($generated@@148 ($generated@@328 $generated@@141 $generated@@382)))) (= ($generated@@83 ($generated@@376 $generated@@381) ($generated@@148 ($generated@@328 $generated@@141 $generated@@382))) ($generated@@149 ($generated@@328 $generated@@141 $generated@@382))))))
 :pattern ( ($generated@@83 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@292 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@291 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@83 ($generated@@336 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@83 ($generated@@289 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@83 ($generated@@368 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@383) $generated@@387))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@83 ($generated@@336 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@310 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@309 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@83 ($generated@@347 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@83 ($generated@@307 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@83 ($generated@@376 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@388) $generated@@392))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@83 ($generated@@347 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@66)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@397) $generated@@66)) (= (type $generated@@398) $generated@@66)) (= (type $generated@@399) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@396) $generated@@400))) (and ($generated@@243 ($generated@@83 ($generated@@368 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@243 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@396) $generated@@400))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@76 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@66)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@405) $generated@@66)) (= (type $generated@@406) $generated@@66)) (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@404) $generated@@408))) (and ($generated@@243 ($generated@@83 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@243 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@76 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert  (=> (<= 2 $generated@@252) (=> (or $generated@@253 (not (= 2 $generated@@252))) true)))
(assert (forall (($generated@@410 T@T) ) (! (= (type ($generated@@409 $generated@@410)) ($generated@@78 $generated@@410 $generated@@4))
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@311 (type $generated@@411))))
(let (($generated@@413 ($generated@@310 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@309 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@308 $generated@@413 $generated@@412)) (= ($generated@@307 $generated@@411) ($generated@@409 $generated@@413))))))
 :pattern ( ($generated@@307 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@311 (type $generated@@414))))
(let (($generated@@416 ($generated@@310 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@309 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@308 $generated@@416 $generated@@415)) (= ($generated@@347 $generated@@414) ($generated@@409 $generated@@415))))))
 :pattern ( ($generated@@347 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@311 (type $generated@@417))))
(let (($generated@@419 ($generated@@310 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@309 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@308 $generated@@419 $generated@@418)) (= ($generated@@375 $generated@@417) ($generated@@409 $generated@@150))))))
 :pattern ( ($generated@@375 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@293 (type $generated@@420))))
(let (($generated@@422 ($generated@@292 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@291 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@290 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@150) (= (type $generated@@424) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@367 $generated@@420) ($generated@@277 ($generated@@216 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@367 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@311 (type $generated@@425))))
(let (($generated@@427 ($generated@@310 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@309 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@308 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@150) (= (type $generated@@429) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@375 $generated@@425) ($generated@@277 ($generated@@216 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@375 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@150) ($generated@@217 $generated@@430 $generated@@46)) (and (= ($generated@@277 ($generated@@328 $generated@@2 $generated@@430)) $generated@@430) ($generated@@137 ($generated@@328 $generated@@2 $generated@@430) $generated@@46)))
 :pattern ( ($generated@@217 $generated@@430 $generated@@46))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@150) ($generated@@217 $generated@@431 $generated@@47)) (and (= ($generated@@277 ($generated@@328 $generated@@3 $generated@@431)) $generated@@431) ($generated@@137 ($generated@@328 $generated@@3 $generated@@431) $generated@@47)))
 :pattern ( ($generated@@217 $generated@@431 $generated@@47))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@150) ($generated@@217 $generated@@432 $generated@@44)) (and (= ($generated@@277 ($generated@@328 $generated@@4 $generated@@432)) $generated@@432) ($generated@@137 ($generated@@328 $generated@@4 $generated@@432) $generated@@44)))
 :pattern ( ($generated@@217 $generated@@432 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@433) 20))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@150) ($generated@@217 $generated@@434 $generated@@45)) (and (= ($generated@@277 ($generated@@328 $generated@@433 $generated@@434)) $generated@@434) ($generated@@137 ($generated@@328 $generated@@433 $generated@@434) $generated@@45)))
 :pattern ( ($generated@@217 $generated@@434 $generated@@45))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@66) (= ($generated@@217 ($generated@@277 $generated@@435) $generated@@436) ($generated@@137 $generated@@435 $generated@@436)))
 :pattern ( ($generated@@217 ($generated@@277 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@81 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@78 $generated@@438 $generated@@2)) (<= 0 ($generated@@283 $generated@@437))))
 :pattern ( ($generated@@283 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@271 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@270 $generated@@440)) (<= 0 ($generated@@269 $generated@@439))))
 :pattern ( ($generated@@269 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@66)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@66) (= (type $generated@@444) $generated@@66)) (= ($generated@@441 ($generated@@393 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@393 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@66)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@66) (= (type $generated@@448) $generated@@66)) (= ($generated@@445 ($generated@@393 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@393 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@66) (= (type $generated@@450) $generated@@66)) (= ($generated@@74 ($generated@@393 $generated@@449 $generated@@450)) $generated@@58))
 :pattern ( ($generated@@393 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@451 ($generated@@401 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@401 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@66)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@455 ($generated@@401 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@401 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@74 ($generated@@401 $generated@@459 $generated@@460)) $generated@@59))
 :pattern ( ($generated@@401 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@150) (= (type $generated@@462) $generated@@150)) (= ($generated@@249 ($generated@@216 $generated@@461 $generated@@462)) $generated@@62))
 :pattern ( ($generated@@216 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@140 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@140 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@467 ($generated@@140 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@140 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@150) (= (type $generated@@472) $generated@@150)) (= ($generated@@148 ($generated@@216 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@216 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@150) (= (type $generated@@474) $generated@@150)) (= ($generated@@149 ($generated@@216 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@216 $generated@@473 $generated@@474))
)))
(assert  (and (forall (($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@477)) $generated@@66)
 :pattern ( ($generated@@475 $generated@@477))
)) (forall (($generated@@478 T@U) ($generated@@479 Int) ) (! (let (($generated@@480 ($generated@@271 (type $generated@@478))))
(= (type ($generated@@476 $generated@@478 $generated@@479)) $generated@@480))
 :pattern ( ($generated@@476 $generated@@478 $generated@@479))
))))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@270 $generated@@150)) (= (type $generated@@482) $generated@@66)) (= (type $generated@@483) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@481 ($generated@@475 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@269 $generated@@481))) ($generated@@243 ($generated@@476 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@476 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@76 $generated@@481 ($generated@@475 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 Int) ) (! (= ($generated@@485 ($generated@@77 $generated@@486)) $generated@@486)
 :pattern ( ($generated@@77 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@66)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@66) (= ($generated@@487 ($generated@@226 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@226 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@74 ($generated@@226 $generated@@490)) $generated@@54))
 :pattern ( ($generated@@226 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@66) (= ($generated@@491 ($generated@@231 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@231 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@74 ($generated@@231 $generated@@494)) $generated@@55))
 :pattern ( ($generated@@231 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@66)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@66) (= ($generated@@495 ($generated@@155 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@155 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@498)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@66)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@66) (= ($generated@@499 ($generated@@475 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@475 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@74 ($generated@@475 $generated@@502)) $generated@@57))
 :pattern ( ($generated@@475 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 (type $generated@@503)))
(= ($generated@@328 $generated@@504 ($generated@@277 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@277 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@506) $generated@@66)) (= (type $generated@@507) $generated@@66)) (= ($generated@@137 $generated@@505 ($generated@@393 $generated@@506 $generated@@507)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@505) $generated@@508))) (and ($generated@@217 ($generated@@83 ($generated@@368 $generated@@505) $generated@@508) $generated@@507) ($generated@@217 $generated@@508 $generated@@506)))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@505) $generated@@508))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@505) $generated@@508))
))))
 :pattern ( ($generated@@137 $generated@@505 ($generated@@393 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@510) $generated@@66)) (= (type $generated@@511) $generated@@66)) (= ($generated@@137 $generated@@509 ($generated@@401 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@509) $generated@@512))) (and ($generated@@217 ($generated@@83 ($generated@@376 $generated@@509) $generated@@512) $generated@@511) ($generated@@217 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@509) $generated@@512))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@137 $generated@@509 ($generated@@401 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@150) (= (type $generated@@516) $generated@@150)) (< ($generated@@513 $generated@@515) ($generated@@514 ($generated@@216 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@216 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@150) (= (type $generated@@518) $generated@@150)) (< ($generated@@513 $generated@@518) ($generated@@514 ($generated@@216 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@216 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@150) (= (type $generated@@520) $generated@@66)) (= (type $generated@@521) $generated@@66)) ($generated@@217 $generated@@519 ($generated@@393 $generated@@520 $generated@@521))) (and (= ($generated@@277 ($generated@@328 ($generated@@291 $generated@@150 $generated@@150) $generated@@519)) $generated@@519) ($generated@@137 ($generated@@328 ($generated@@291 $generated@@150 $generated@@150) $generated@@519) ($generated@@393 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@217 $generated@@519 ($generated@@393 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@150) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) ($generated@@217 $generated@@522 ($generated@@401 $generated@@523 $generated@@524))) (and (= ($generated@@277 ($generated@@328 ($generated@@309 $generated@@150 $generated@@150) $generated@@522)) $generated@@522) ($generated@@137 ($generated@@328 ($generated@@309 $generated@@150 $generated@@150) $generated@@522) ($generated@@401 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@217 $generated@@522 ($generated@@401 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@66) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@150)) ($generated@@217 $generated@@527 ($generated@@140 $generated@@525 $generated@@526))) (and (= ($generated@@277 ($generated@@328 $generated@@141 $generated@@527)) $generated@@527) ($generated@@137 ($generated@@328 $generated@@141 $generated@@527) ($generated@@140 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@217 $generated@@527 ($generated@@140 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
 (not ($generated@@0 ($generated@@83 ($generated@@409 $generated@@529) $generated@@528))))
 :pattern ( (let (($generated@@529 (type $generated@@528)))
($generated@@83 ($generated@@409 $generated@@529) $generated@@528)))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@71)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@66) (= (type $generated@@533) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@532 $generated@@533)) $generated@@63) (= ($generated@@530 ($generated@@140 $generated@@532 $generated@@533)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@141) (= ($generated@@513 ($generated@@277 $generated@@534)) ($generated@@514 $generated@@534)))
 :pattern ( ($generated@@513 ($generated@@277 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@150) ($generated@@217 $generated@@535 ($generated@@77 0))) (and (= ($generated@@277 ($generated@@328 $generated@@2 $generated@@535)) $generated@@535) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@535) ($generated@@77 0))))
 :pattern ( ($generated@@217 $generated@@535 ($generated@@77 0)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@150) (= (type $generated@@537) $generated@@66)) ($generated@@217 $generated@@536 ($generated@@226 $generated@@537))) (and (= ($generated@@277 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@536)) $generated@@536) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@536) ($generated@@226 $generated@@537))))
 :pattern ( ($generated@@217 $generated@@536 ($generated@@226 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@150) (= (type $generated@@539) $generated@@66)) ($generated@@217 $generated@@538 ($generated@@231 $generated@@539))) (and (= ($generated@@277 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@538)) $generated@@538) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@538) ($generated@@231 $generated@@539))))
 :pattern ( ($generated@@217 $generated@@538 ($generated@@231 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@150) (= (type $generated@@541) $generated@@66)) ($generated@@217 $generated@@540 ($generated@@155 $generated@@541))) (and (= ($generated@@277 ($generated@@328 ($generated@@78 $generated@@150 $generated@@2) $generated@@540)) $generated@@540) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@2) $generated@@540) ($generated@@155 $generated@@541))))
 :pattern ( ($generated@@217 $generated@@540 ($generated@@155 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@150) (= (type $generated@@543) $generated@@66)) ($generated@@217 $generated@@542 ($generated@@475 $generated@@543))) (and (= ($generated@@277 ($generated@@328 ($generated@@270 $generated@@150) $generated@@542)) $generated@@542) ($generated@@137 ($generated@@328 ($generated@@270 $generated@@150) $generated@@542) ($generated@@475 $generated@@543))))
 :pattern ( ($generated@@217 $generated@@542 ($generated@@475 $generated@@543)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@530 $generated@@134) $generated@@64))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@545) $generated@@66)) (= (type $generated@@546) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@544 ($generated@@155 $generated@@545) $generated@@546) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@544 $generated@@547)))) ($generated@@243 $generated@@547 $generated@@545 $generated@@546))
 :pattern ( ($generated@@83 $generated@@544 $generated@@547))
))))
 :pattern ( ($generated@@76 $generated@@544 ($generated@@155 $generated@@545) $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@141) (= (type $generated@@549) $generated@@66)) (= (type $generated@@550) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@550) (and ($generated@@139 $generated@@548) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@66) ($generated@@76 $generated@@548 ($generated@@140 $generated@@549 $generated@@551) $generated@@550))
 :pattern ( ($generated@@76 $generated@@548 ($generated@@140 $generated@@549 $generated@@551) $generated@@550))
))))) ($generated@@243 ($generated@@148 $generated@@548) $generated@@549 $generated@@550))
 :pattern ( ($generated@@243 ($generated@@148 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@141) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@554) (and ($generated@@139 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@66) ($generated@@76 $generated@@552 ($generated@@140 $generated@@555 $generated@@553) $generated@@554))
 :pattern ( ($generated@@76 $generated@@552 ($generated@@140 $generated@@555 $generated@@553) $generated@@554))
))))) ($generated@@243 ($generated@@149 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@243 ($generated@@149 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@150) (= (type $generated@@557) $generated@@150)) (= ($generated@@216 ($generated@@238 $generated@@556) ($generated@@238 $generated@@557)) ($generated@@238 ($generated@@216 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@216 ($generated@@238 $generated@@556) ($generated@@238 $generated@@557)))
)))
(assert (forall (($generated@@558 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@236 $generated@@558))) ($generated@@238 ($generated@@277 ($generated@@8 $generated@@558))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@236 $generated@@558))))
)))
(assert (forall (($generated@@559 T@U) ) (! (= ($generated@@277 ($generated@@238 $generated@@559)) ($generated@@238 ($generated@@277 $generated@@559)))
 :pattern ( ($generated@@277 ($generated@@238 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@271 (type $generated@@560))))
 (=> (and (= (type $generated@@560) ($generated@@270 $generated@@561)) (= ($generated@@269 $generated@@560) 0)) (= $generated@@560 ($generated@@268 $generated@@561))))
 :pattern ( ($generated@@269 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (! (let (($generated@@565 (type $generated@@563)))
 (=> (and (and (= (type $generated@@562) ($generated@@78 $generated@@565 $generated@@2)) (= (type $generated@@564) $generated@@2)) (<= 0 ($generated $generated@@564))) (= ($generated@@283 ($generated@@84 $generated@@562 $generated@@563 $generated@@564)) (+ (- ($generated@@283 $generated@@562) ($generated ($generated@@83 $generated@@562 $generated@@563))) ($generated $generated@@564)))))
 :pattern ( ($generated@@283 ($generated@@84 $generated@@562 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@567) $generated@@2)) ($generated@@76 $generated@@567 $generated@@46 $generated@@566))
 :pattern ( ($generated@@76 $generated@@567 $generated@@46 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@569) $generated@@3)) ($generated@@76 $generated@@569 $generated@@47 $generated@@568))
 :pattern ( ($generated@@76 $generated@@569 $generated@@47 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@571) $generated@@4)) ($generated@@76 $generated@@571 $generated@@44 $generated@@570))
 :pattern ( ($generated@@76 $generated@@571 $generated@@44 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@573) $generated@@433)) ($generated@@76 $generated@@573 $generated@@45 $generated@@572))
 :pattern ( ($generated@@76 $generated@@573 $generated@@45 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@575) $generated@@150)) ($generated@@76 $generated@@575 $generated@@48 $generated@@574))
 :pattern ( ($generated@@76 $generated@@575 $generated@@48 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@270 $generated@@150)) (= (type $generated@@577) $generated@@66)) (= ($generated@@137 $generated@@576 ($generated@@475 $generated@@577)) (forall (($generated@@578 Int) ) (!  (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@269 $generated@@576))) ($generated@@217 ($generated@@476 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@476 $generated@@576 $generated@@578))
))))
 :pattern ( ($generated@@137 $generated@@576 ($generated@@475 $generated@@577)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 Int) ) (!  (=> (= (type $generated@@580) ($generated@@270 $generated@@150)) (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@269 $generated@@580))) (< ($generated@@514 ($generated@@328 $generated@@141 ($generated@@476 $generated@@580 $generated@@581))) ($generated@@579 $generated@@580))))
 :pattern ( ($generated@@514 ($generated@@328 $generated@@141 ($generated@@476 $generated@@580 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@583) $generated@@66)) (= (type $generated@@584) $generated@@66)) ($generated@@137 $generated@@582 ($generated@@393 $generated@@583 $generated@@584))) (and (and ($generated@@137 ($generated@@289 $generated@@582) ($generated@@226 $generated@@583)) ($generated@@137 ($generated@@336 $generated@@582) ($generated@@226 $generated@@584))) ($generated@@137 ($generated@@367 $generated@@582) ($generated@@226 ($generated@@140 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@137 $generated@@582 ($generated@@393 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@586) $generated@@66)) (= (type $generated@@587) $generated@@66)) ($generated@@137 $generated@@585 ($generated@@401 $generated@@586 $generated@@587))) (and (and ($generated@@137 ($generated@@307 $generated@@585) ($generated@@231 $generated@@586)) ($generated@@137 ($generated@@347 $generated@@585) ($generated@@231 $generated@@587))) ($generated@@137 ($generated@@375 $generated@@585) ($generated@@231 ($generated@@140 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@137 $generated@@585 ($generated@@401 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@2) ($generated@@137 $generated@@588 $generated@@46))
 :pattern ( ($generated@@137 $generated@@588 $generated@@46))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@3) ($generated@@137 $generated@@589 $generated@@47))
 :pattern ( ($generated@@137 $generated@@589 $generated@@47))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@4) ($generated@@137 $generated@@590 $generated@@44))
 :pattern ( ($generated@@137 $generated@@590 $generated@@44))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@433) ($generated@@137 $generated@@591 $generated@@45))
 :pattern ( ($generated@@137 $generated@@591 $generated@@45))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@150) ($generated@@137 $generated@@592 $generated@@48))
 :pattern ( ($generated@@137 $generated@@592 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@593 () Int)
(declare-fun $generated@@594 () Int)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 (T@U) Bool)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(assert  (and (and (and (and (= (type $generated@@595) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@600) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@598) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@602) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@603) $generated@@79)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@604  (=> ($generated@@137 ($generated@@8 (+ $generated@@593 1)) $generated@@134) (=> (and (and (= $generated@@594 (+ $generated@@593 1)) ($generated@@76 ($generated@@8 $generated@@594) $generated@@134 $generated@@595)) (and ($generated@@255 (+ $generated@@593 1)) ($generated@@255 (+ $generated@@593 1)))) (and (=> (= (ControlFlow 0 10) (- 0 14)) ($generated@@137 ($generated@@8 (+ $generated@@593 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (+ $generated@@593 1)) $generated@@134) (=> (= $generated@@596 (+ $generated@@593 1)) (and (=> (= (ControlFlow 0 10) (- 0 13)) (or (<= 0 (- $generated@@597 $generated@@593)) (= (- $generated@@597 $generated@@596) (- $generated@@597 $generated@@593)))) (=> (or (<= 0 (- $generated@@597 $generated@@593)) (= (- $generated@@597 $generated@@596) (- $generated@@597 $generated@@593))) (and (=> (= (ControlFlow 0 10) (- 0 12)) (< (- $generated@@597 $generated@@596) (- $generated@@597 $generated@@593))) (=> (< (- $generated@@597 $generated@@596) (- $generated@@597 $generated@@593)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (=> $generated@@253 (or ($generated@@0 ($generated@@238 ($generated@@11 $generated@@256))) (forall (($generated@@605 Int) ($generated@@606 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@605) (= $generated@@606 (+ $generated@@605 1))) (< ($generated@@254 ($generated@@254 $generated@@605)) ($generated@@254 $generated@@606)))
 :pattern ( ($generated@@254 $generated@@606) ($generated@@254 ($generated@@254 $generated@@605)))
))))) (=> (=> $generated@@253 (or ($generated@@0 ($generated@@238 ($generated@@11 $generated@@256))) (forall (($generated@@607 Int) ($generated@@608 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@607) (= $generated@@608 (+ $generated@@607 1))) (< ($generated@@254 ($generated@@254 $generated@@607)) ($generated@@254 $generated@@608)))
 :pattern ( ($generated@@254 $generated@@608) ($generated@@254 ($generated@@254 $generated@@607)))
)))) (=> (and (and (and (and ($generated@@242 $generated@@598) ($generated@@599 $generated@@598)) (=> (<= $generated@@596 $generated@@597) (and ($generated@@255 $generated@@596) ($generated@@255 $generated@@597)))) (and (=> (<= $generated@@596 $generated@@597) (<= ($generated@@254 $generated@@596) ($generated@@254 $generated@@597))) (= $generated@@595 $generated@@598))) (and (and ($generated@@76 ($generated@@8 $generated@@597) $generated@@134 $generated@@598) ($generated@@255 $generated@@597)) (and ($generated@@255 $generated@@597) (= (ControlFlow 0 10) (- 0 9))))) (<= ($generated@@254 (+ $generated@@593 1)) ($generated@@254 $generated@@597))))))))))))))))
(let (($generated@@609  (=> ($generated@@76 ($generated@@8 $generated@@593) $generated@@134 $generated@@595) (=> (and ($generated@@255 $generated@@593) ($generated@@255 $generated@@593)) (and (=> (= (ControlFlow 0 6) (- 0 8)) (=> $generated@@253 (or ($generated@@0 ($generated@@238 ($generated@@11 $generated@@256))) (forall (($generated@@610 Int) ($generated@@611 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@610) (= $generated@@611 (+ $generated@@610 1))) (< ($generated@@254 ($generated@@254 $generated@@610)) ($generated@@254 $generated@@611)))
 :pattern ( ($generated@@254 $generated@@611) ($generated@@254 ($generated@@254 $generated@@610)))
))))) (=> (=> $generated@@253 (or ($generated@@0 ($generated@@238 ($generated@@11 $generated@@256))) (forall (($generated@@612 Int) ($generated@@613 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@612) (= $generated@@613 (+ $generated@@612 1))) (< ($generated@@254 ($generated@@254 $generated@@612)) ($generated@@254 $generated@@613)))
 :pattern ( ($generated@@254 $generated@@613) ($generated@@254 ($generated@@254 $generated@@612)))
)))) (=> (and ($generated@@242 $generated@@600) ($generated@@599 $generated@@600)) (=> (and (and ($generated@@255 $generated@@593) ($generated@@255 (+ $generated@@593 1))) (and (<= ($generated@@254 $generated@@593) ($generated@@254 (+ $generated@@593 1))) (= $generated@@595 $generated@@600))) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@137 ($generated@@8 (+ $generated@@593 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (+ $generated@@593 1)) $generated@@134) (=> (= $generated@@601 (+ $generated@@593 1)) (=> (and (and ($generated@@76 ($generated@@8 $generated@@601) $generated@@134 $generated@@600) ($generated@@255 (+ $generated@@593 1))) (and ($generated@@255 (+ $generated@@593 1)) (= (ControlFlow 0 6) (- 0 5)))) (<= ($generated@@254 $generated@@593) ($generated@@254 (+ $generated@@593 1)))))))))))))))
(let (($generated@@614 true))
(let (($generated@@615  (=> (= (ControlFlow 0 2) (- 0 1)) (=> (<= $generated@@593 $generated@@597) (<= ($generated@@254 $generated@@593) ($generated@@254 $generated@@597))))))
(let (($generated@@616  (=> (and (<= ($generated@@254 $generated@@593) ($generated@@254 $generated@@597)) (= (ControlFlow 0 15) 2)) $generated@@615)))
(let (($generated@@617  (=> (< $generated@@593 $generated@@597) (and (and (and (=> (= (ControlFlow 0 16) 4) $generated@@614) (=> (= (ControlFlow 0 16) 6) $generated@@609)) (=> (= (ControlFlow 0 16) 10) $generated@@604)) (=> (= (ControlFlow 0 16) 15) $generated@@616)))))
(let (($generated@@618  (=> (and (<= $generated@@597 $generated@@593) (= (ControlFlow 0 3) 2)) $generated@@615)))
(let (($generated@@619  (=> (= $generated@@602 ($generated@@161 $generated@@603 $generated@@595 $generated@@60 false)) (and (=> (= (ControlFlow 0 17) 16) $generated@@617) (=> (= (ControlFlow 0 17) 3) $generated@@618)))))
(let (($generated@@620  (=> (and (and (and (and ($generated@@242 $generated@@595) ($generated@@599 $generated@@595)) (<= ($generated@@236 0) $generated@@593)) (and (<= ($generated@@236 0) $generated@@597) (= 5 $generated@@252))) (and (and $generated@@253 (and ($generated@@0 ($generated@@238 ($generated@@11 $generated@@256))) (forall (($generated@@621 Int) ($generated@@622 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@621) (= $generated@@622 (+ $generated@@621 1))) (< ($generated@@254 ($generated@@254 $generated@@621)) ($generated@@254 $generated@@622)))
 :pattern ( ($generated@@254 $generated@@622) ($generated@@254 ($generated@@254 $generated@@621)))
)))) (= (ControlFlow 0 18) 17))) $generated@@619)))
$generated@@620))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@252 () Int)
(declare-fun $generated@@253 () Bool)
(declare-fun $generated@@254 (Int) Int)
(declare-fun $generated@@255 (Int) Bool)
(declare-fun $generated@@256 () Bool)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@328 (T@T T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@T) T@U)
(declare-fun $generated@@433 () T@T)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@476 (T@U Int) T@U)
(declare-fun $generated@@485 (T@U) Int)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@579 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@141)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@66) (= (type $generated@@221) $generated@@66)) (= (type $generated@@222) $generated@@150)) (= (type $generated@@223) $generated@@150)) (= ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221))  (and ($generated@@217 $generated@@222 $generated@@220) ($generated@@217 $generated@@223 $generated@@221))))
 :pattern ( ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@141) (= (type $generated@@225) $generated@@141)) (= ($generated@@147 $generated@@224 $generated@@225) (= $generated@@224 $generated@@225)))
 :pattern ( ($generated@@147 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@66)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@229) $generated@@66)) (= ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@150) ($generated@@0 ($generated@@83 $generated@@228 $generated@@230))) ($generated@@217 $generated@@230 $generated@@229))
 :pattern ( ($generated@@83 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@66)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@150) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@217 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@236 $generated@@237) $generated@@237)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@66) (= (type $generated@@245) $generated@@66)) (= (type $generated@@246) $generated@@150)) (= (type $generated@@247) $generated@@150)) (= (type $generated@@248) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@242 $generated@@248)) (= ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@141) (= ($generated@@139 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@251))
)))
(assert  (=> (<= 2 $generated@@252) (=> (or $generated@@253 (not (= 2 $generated@@252))) (and (forall (($generated@@257 Int) ($generated@@258 Int) ) (!  (=> (<= ($generated@@236 0) $generated@@257) (=> (= $generated@@258 (+ $generated@@257 1)) (and (and ($generated@@255 $generated@@257) ($generated@@255 ($generated@@254 $generated@@257))) ($generated@@255 $generated@@258))))
 :pattern ( ($generated@@254 $generated@@258) ($generated@@254 ($generated@@254 $generated@@257)))
)) (= $generated@@256 (forall (($generated@@259 Int) ($generated@@260 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@259) (= $generated@@260 (+ $generated@@259 1))) (< ($generated@@254 ($generated@@254 $generated@@259)) ($generated@@254 $generated@@260)))
 :pattern ( ($generated@@254 $generated@@260) ($generated@@254 ($generated@@254 $generated@@259)))
)))))))
(assert  (=> (<= 2 $generated@@252) (=> (or $generated@@253 (not (= 2 $generated@@252))) (and (forall (($generated@@261 Int) ($generated@@262 Int) ) (!  (=> (<= ($generated@@236 0) $generated@@261) (=> (= $generated@@262 (+ $generated@@261 1)) (and (and ($generated@@255 $generated@@261) ($generated@@255 ($generated@@254 $generated@@261))) ($generated@@255 $generated@@262))))
 :pattern ( ($generated@@254 $generated@@262) ($generated@@254 ($generated@@254 $generated@@261)))
)) (= $generated@@256 (forall (($generated@@263 Int) ($generated@@264 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@263) (= $generated@@264 (+ $generated@@263 1))) (< ($generated@@254 ($generated@@254 $generated@@263)) ($generated@@254 $generated@@264)))
 :pattern ( ($generated@@254 $generated@@264) ($generated@@254 ($generated@@254 $generated@@263)))
)))))))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@141) ($generated@@139 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@150) (= (type $generated@@267) $generated@@150)) (= $generated@@265 ($generated@@216 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@139 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@2) (= ($generated@@137 $generated@@276 $generated@@134) (<= ($generated@@236 0) ($generated $generated@@276))))
 :pattern ( ($generated@@137 $generated@@276 $generated@@134))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@150)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@66) (= (type $generated@@281) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@243 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@76 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@243 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert  (=> (<= 1 $generated@@252) (forall (($generated@@282 Int) ) (!  (=> (or ($generated@@255 $generated@@282) (and (not (= 1 $generated@@252)) (<= ($generated@@236 0) $generated@@282))) (<= ($generated@@236 0) ($generated@@254 $generated@@282)))
 :pattern ( ($generated@@254 $generated@@282))
))))
(assert (forall (($generated@@285 T@T) ) (! (= (type ($generated@@284 $generated@@285)) ($generated@@78 $generated@@285 $generated@@2))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@81 (type $generated@@286))))
 (=> (= (type $generated@@286) ($generated@@78 $generated@@287 $generated@@2)) (and (= (= ($generated@@283 $generated@@286) 0) (= $generated@@286 ($generated@@284 $generated@@287))) (=> (not (= ($generated@@283 $generated@@286) 0)) (exists (($generated@@288 T@U) ) (!  (and (= (type $generated@@288) $generated@@287) (< 0 ($generated ($generated@@83 $generated@@286 $generated@@288))))
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
))))))
 :pattern ( ($generated@@283 $generated@@286))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 18)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@78 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@83 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@83 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 19)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@78 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@83 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@83 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@81 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@78 $generated@@326 $generated@@2)) (= ($generated@@156 $generated@@325) (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@326) (and (<= 0 ($generated ($generated@@83 $generated@@325 $generated@@327))) (<= ($generated ($generated@@83 $generated@@325 $generated@@327)) ($generated@@283 $generated@@325))))
 :pattern ( ($generated@@83 $generated@@325 $generated@@327))
)))))
 :pattern ( ($generated@@156 $generated@@325))
)))
(assert (forall (($generated@@329 T@T) ($generated@@330 T@U) ) (! (= (type ($generated@@328 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@328 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@150) ($generated@@217 $generated@@331 $generated@@134)) (and (= ($generated@@277 ($generated@@328 $generated@@2 $generated@@331)) $generated@@331) ($generated@@137 ($generated@@328 $generated@@2 $generated@@331) $generated@@134)))
 :pattern ( ($generated@@217 $generated@@331 $generated@@134))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@293 (type $generated@@332))))
(let (($generated@@334 ($generated@@292 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@291 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@290 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@289 $generated@@332))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@293 (type $generated@@337))))
(= (type ($generated@@336 $generated@@337)) ($generated@@78 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@293 (type $generated@@339))))
(let (($generated@@341 ($generated@@292 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@291 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@290 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@340) ($generated@@0 ($generated@@83 ($generated@@336 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@311 (type $generated@@343))))
(let (($generated@@345 ($generated@@310 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@309 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@308 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@307 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@311 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@78 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@311 (type $generated@@350))))
(let (($generated@@352 ($generated@@310 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@309 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@308 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@83 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@355) $generated@@66)) (= ($generated@@137 $generated@@354 ($generated@@155 $generated@@355)) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@354 $generated@@356)))) ($generated@@217 $generated@@356 $generated@@355))
 :pattern ( ($generated@@83 $generated@@354 $generated@@356))
))))
 :pattern ( ($generated@@137 $generated@@354 ($generated@@155 $generated@@355)))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@358) $generated@@66)) (= (type $generated@@359) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@357 ($generated@@226 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@150) ($generated@@0 ($generated@@83 $generated@@357 $generated@@360))) ($generated@@243 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@83 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@76 $generated@@357 ($generated@@226 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@362) $generated@@66)) (= (type $generated@@363) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@361 ($generated@@231 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@150) ($generated@@0 ($generated@@83 $generated@@361 $generated@@364))) ($generated@@243 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@83 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@76 $generated@@361 ($generated@@231 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(= ($generated ($generated@@83 ($generated@@284 $generated@@366) $generated@@365)) 0))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@83 ($generated@@284 $generated@@366) $generated@@365)))
)))
(assert  (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@369)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@367 $generated@@369))
)) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@293 (type $generated@@370))))
(let (($generated@@372 ($generated@@292 (type $generated@@370))))
(= (type ($generated@@368 $generated@@370)) ($generated@@78 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@368 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@374) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@367 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@83 ($generated@@289 $generated@@373) ($generated@@148 ($generated@@328 $generated@@141 $generated@@374)))) (= ($generated@@83 ($generated@@368 $generated@@373) ($generated@@148 ($generated@@328 $generated@@141 $generated@@374))) ($generated@@149 ($generated@@328 $generated@@141 $generated@@374))))))
 :pattern ( ($generated@@83 ($generated@@367 $generated@@373) $generated@@374))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@311 (type $generated@@378))))
(let (($generated@@380 ($generated@@310 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@78 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@382) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@83 ($generated@@307 $generated@@381) ($generated@@148 ($generated@@328 $generated@@141 $generated@@382)))) (= ($generated@@83 ($generated@@376 $generated@@381) ($generated@@148 ($generated@@328 $generated@@141 $generated@@382))) ($generated@@149 ($generated@@328 $generated@@141 $generated@@382))))))
 :pattern ( ($generated@@83 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@292 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@291 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@83 ($generated@@336 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@83 ($generated@@289 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@83 ($generated@@368 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@383) $generated@@387))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@83 ($generated@@336 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@310 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@309 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@83 ($generated@@347 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@83 ($generated@@307 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@83 ($generated@@376 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@388) $generated@@392))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@83 ($generated@@347 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@66)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@397) $generated@@66)) (= (type $generated@@398) $generated@@66)) (= (type $generated@@399) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@396) $generated@@400))) (and ($generated@@243 ($generated@@83 ($generated@@368 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@243 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@396) $generated@@400))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@76 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@66)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@405) $generated@@66)) (= (type $generated@@406) $generated@@66)) (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@404) $generated@@408))) (and ($generated@@243 ($generated@@83 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@243 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@76 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert  (=> (<= 2 $generated@@252) (=> (or $generated@@253 (not (= 2 $generated@@252))) true)))
(assert (forall (($generated@@410 T@T) ) (! (= (type ($generated@@409 $generated@@410)) ($generated@@78 $generated@@410 $generated@@4))
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@311 (type $generated@@411))))
(let (($generated@@413 ($generated@@310 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@309 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@308 $generated@@413 $generated@@412)) (= ($generated@@307 $generated@@411) ($generated@@409 $generated@@413))))))
 :pattern ( ($generated@@307 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@311 (type $generated@@414))))
(let (($generated@@416 ($generated@@310 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@309 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@308 $generated@@416 $generated@@415)) (= ($generated@@347 $generated@@414) ($generated@@409 $generated@@415))))))
 :pattern ( ($generated@@347 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@311 (type $generated@@417))))
(let (($generated@@419 ($generated@@310 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@309 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@308 $generated@@419 $generated@@418)) (= ($generated@@375 $generated@@417) ($generated@@409 $generated@@150))))))
 :pattern ( ($generated@@375 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@293 (type $generated@@420))))
(let (($generated@@422 ($generated@@292 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@291 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@290 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@150) (= (type $generated@@424) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@367 $generated@@420) ($generated@@277 ($generated@@216 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@367 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@311 (type $generated@@425))))
(let (($generated@@427 ($generated@@310 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@309 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@308 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@150) (= (type $generated@@429) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@375 $generated@@425) ($generated@@277 ($generated@@216 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@375 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@150) ($generated@@217 $generated@@430 $generated@@46)) (and (= ($generated@@277 ($generated@@328 $generated@@2 $generated@@430)) $generated@@430) ($generated@@137 ($generated@@328 $generated@@2 $generated@@430) $generated@@46)))
 :pattern ( ($generated@@217 $generated@@430 $generated@@46))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@150) ($generated@@217 $generated@@431 $generated@@47)) (and (= ($generated@@277 ($generated@@328 $generated@@3 $generated@@431)) $generated@@431) ($generated@@137 ($generated@@328 $generated@@3 $generated@@431) $generated@@47)))
 :pattern ( ($generated@@217 $generated@@431 $generated@@47))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@150) ($generated@@217 $generated@@432 $generated@@44)) (and (= ($generated@@277 ($generated@@328 $generated@@4 $generated@@432)) $generated@@432) ($generated@@137 ($generated@@328 $generated@@4 $generated@@432) $generated@@44)))
 :pattern ( ($generated@@217 $generated@@432 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@433) 20))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@150) ($generated@@217 $generated@@434 $generated@@45)) (and (= ($generated@@277 ($generated@@328 $generated@@433 $generated@@434)) $generated@@434) ($generated@@137 ($generated@@328 $generated@@433 $generated@@434) $generated@@45)))
 :pattern ( ($generated@@217 $generated@@434 $generated@@45))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@66) (= ($generated@@217 ($generated@@277 $generated@@435) $generated@@436) ($generated@@137 $generated@@435 $generated@@436)))
 :pattern ( ($generated@@217 ($generated@@277 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@81 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@78 $generated@@438 $generated@@2)) (<= 0 ($generated@@283 $generated@@437))))
 :pattern ( ($generated@@283 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@271 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@270 $generated@@440)) (<= 0 ($generated@@269 $generated@@439))))
 :pattern ( ($generated@@269 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@66)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@66) (= (type $generated@@444) $generated@@66)) (= ($generated@@441 ($generated@@393 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@393 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@66)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@66) (= (type $generated@@448) $generated@@66)) (= ($generated@@445 ($generated@@393 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@393 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@66) (= (type $generated@@450) $generated@@66)) (= ($generated@@74 ($generated@@393 $generated@@449 $generated@@450)) $generated@@58))
 :pattern ( ($generated@@393 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@451 ($generated@@401 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@401 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@66)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@455 ($generated@@401 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@401 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@74 ($generated@@401 $generated@@459 $generated@@460)) $generated@@59))
 :pattern ( ($generated@@401 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@150) (= (type $generated@@462) $generated@@150)) (= ($generated@@249 ($generated@@216 $generated@@461 $generated@@462)) $generated@@62))
 :pattern ( ($generated@@216 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@140 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@140 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@467 ($generated@@140 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@140 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@150) (= (type $generated@@472) $generated@@150)) (= ($generated@@148 ($generated@@216 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@216 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@150) (= (type $generated@@474) $generated@@150)) (= ($generated@@149 ($generated@@216 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@216 $generated@@473 $generated@@474))
)))
(assert  (and (forall (($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@477)) $generated@@66)
 :pattern ( ($generated@@475 $generated@@477))
)) (forall (($generated@@478 T@U) ($generated@@479 Int) ) (! (let (($generated@@480 ($generated@@271 (type $generated@@478))))
(= (type ($generated@@476 $generated@@478 $generated@@479)) $generated@@480))
 :pattern ( ($generated@@476 $generated@@478 $generated@@479))
))))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@270 $generated@@150)) (= (type $generated@@482) $generated@@66)) (= (type $generated@@483) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@481 ($generated@@475 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@269 $generated@@481))) ($generated@@243 ($generated@@476 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@476 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@76 $generated@@481 ($generated@@475 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 Int) ) (! (= ($generated@@485 ($generated@@77 $generated@@486)) $generated@@486)
 :pattern ( ($generated@@77 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@66)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@66) (= ($generated@@487 ($generated@@226 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@226 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@74 ($generated@@226 $generated@@490)) $generated@@54))
 :pattern ( ($generated@@226 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@66) (= ($generated@@491 ($generated@@231 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@231 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@74 ($generated@@231 $generated@@494)) $generated@@55))
 :pattern ( ($generated@@231 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@66)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@66) (= ($generated@@495 ($generated@@155 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@155 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@498)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@66)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@66) (= ($generated@@499 ($generated@@475 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@475 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@74 ($generated@@475 $generated@@502)) $generated@@57))
 :pattern ( ($generated@@475 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 (type $generated@@503)))
(= ($generated@@328 $generated@@504 ($generated@@277 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@277 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@506) $generated@@66)) (= (type $generated@@507) $generated@@66)) (= ($generated@@137 $generated@@505 ($generated@@393 $generated@@506 $generated@@507)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@505) $generated@@508))) (and ($generated@@217 ($generated@@83 ($generated@@368 $generated@@505) $generated@@508) $generated@@507) ($generated@@217 $generated@@508 $generated@@506)))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@505) $generated@@508))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@505) $generated@@508))
))))
 :pattern ( ($generated@@137 $generated@@505 ($generated@@393 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@510) $generated@@66)) (= (type $generated@@511) $generated@@66)) (= ($generated@@137 $generated@@509 ($generated@@401 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@509) $generated@@512))) (and ($generated@@217 ($generated@@83 ($generated@@376 $generated@@509) $generated@@512) $generated@@511) ($generated@@217 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@509) $generated@@512))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@137 $generated@@509 ($generated@@401 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@150) (= (type $generated@@516) $generated@@150)) (< ($generated@@513 $generated@@515) ($generated@@514 ($generated@@216 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@216 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@150) (= (type $generated@@518) $generated@@150)) (< ($generated@@513 $generated@@518) ($generated@@514 ($generated@@216 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@216 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@150) (= (type $generated@@520) $generated@@66)) (= (type $generated@@521) $generated@@66)) ($generated@@217 $generated@@519 ($generated@@393 $generated@@520 $generated@@521))) (and (= ($generated@@277 ($generated@@328 ($generated@@291 $generated@@150 $generated@@150) $generated@@519)) $generated@@519) ($generated@@137 ($generated@@328 ($generated@@291 $generated@@150 $generated@@150) $generated@@519) ($generated@@393 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@217 $generated@@519 ($generated@@393 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@150) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) ($generated@@217 $generated@@522 ($generated@@401 $generated@@523 $generated@@524))) (and (= ($generated@@277 ($generated@@328 ($generated@@309 $generated@@150 $generated@@150) $generated@@522)) $generated@@522) ($generated@@137 ($generated@@328 ($generated@@309 $generated@@150 $generated@@150) $generated@@522) ($generated@@401 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@217 $generated@@522 ($generated@@401 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@66) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@150)) ($generated@@217 $generated@@527 ($generated@@140 $generated@@525 $generated@@526))) (and (= ($generated@@277 ($generated@@328 $generated@@141 $generated@@527)) $generated@@527) ($generated@@137 ($generated@@328 $generated@@141 $generated@@527) ($generated@@140 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@217 $generated@@527 ($generated@@140 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
 (not ($generated@@0 ($generated@@83 ($generated@@409 $generated@@529) $generated@@528))))
 :pattern ( (let (($generated@@529 (type $generated@@528)))
($generated@@83 ($generated@@409 $generated@@529) $generated@@528)))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@71)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@66) (= (type $generated@@533) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@532 $generated@@533)) $generated@@63) (= ($generated@@530 ($generated@@140 $generated@@532 $generated@@533)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@141) (= ($generated@@513 ($generated@@277 $generated@@534)) ($generated@@514 $generated@@534)))
 :pattern ( ($generated@@513 ($generated@@277 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@150) ($generated@@217 $generated@@535 ($generated@@77 0))) (and (= ($generated@@277 ($generated@@328 $generated@@2 $generated@@535)) $generated@@535) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@535) ($generated@@77 0))))
 :pattern ( ($generated@@217 $generated@@535 ($generated@@77 0)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@150) (= (type $generated@@537) $generated@@66)) ($generated@@217 $generated@@536 ($generated@@226 $generated@@537))) (and (= ($generated@@277 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@536)) $generated@@536) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@536) ($generated@@226 $generated@@537))))
 :pattern ( ($generated@@217 $generated@@536 ($generated@@226 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@150) (= (type $generated@@539) $generated@@66)) ($generated@@217 $generated@@538 ($generated@@231 $generated@@539))) (and (= ($generated@@277 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@538)) $generated@@538) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@538) ($generated@@231 $generated@@539))))
 :pattern ( ($generated@@217 $generated@@538 ($generated@@231 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@150) (= (type $generated@@541) $generated@@66)) ($generated@@217 $generated@@540 ($generated@@155 $generated@@541))) (and (= ($generated@@277 ($generated@@328 ($generated@@78 $generated@@150 $generated@@2) $generated@@540)) $generated@@540) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@2) $generated@@540) ($generated@@155 $generated@@541))))
 :pattern ( ($generated@@217 $generated@@540 ($generated@@155 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@150) (= (type $generated@@543) $generated@@66)) ($generated@@217 $generated@@542 ($generated@@475 $generated@@543))) (and (= ($generated@@277 ($generated@@328 ($generated@@270 $generated@@150) $generated@@542)) $generated@@542) ($generated@@137 ($generated@@328 ($generated@@270 $generated@@150) $generated@@542) ($generated@@475 $generated@@543))))
 :pattern ( ($generated@@217 $generated@@542 ($generated@@475 $generated@@543)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@530 $generated@@134) $generated@@64))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@545) $generated@@66)) (= (type $generated@@546) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@544 ($generated@@155 $generated@@545) $generated@@546) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@544 $generated@@547)))) ($generated@@243 $generated@@547 $generated@@545 $generated@@546))
 :pattern ( ($generated@@83 $generated@@544 $generated@@547))
))))
 :pattern ( ($generated@@76 $generated@@544 ($generated@@155 $generated@@545) $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@141) (= (type $generated@@549) $generated@@66)) (= (type $generated@@550) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@550) (and ($generated@@139 $generated@@548) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@66) ($generated@@76 $generated@@548 ($generated@@140 $generated@@549 $generated@@551) $generated@@550))
 :pattern ( ($generated@@76 $generated@@548 ($generated@@140 $generated@@549 $generated@@551) $generated@@550))
))))) ($generated@@243 ($generated@@148 $generated@@548) $generated@@549 $generated@@550))
 :pattern ( ($generated@@243 ($generated@@148 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@141) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@554) (and ($generated@@139 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@66) ($generated@@76 $generated@@552 ($generated@@140 $generated@@555 $generated@@553) $generated@@554))
 :pattern ( ($generated@@76 $generated@@552 ($generated@@140 $generated@@555 $generated@@553) $generated@@554))
))))) ($generated@@243 ($generated@@149 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@243 ($generated@@149 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@150) (= (type $generated@@557) $generated@@150)) (= ($generated@@216 ($generated@@238 $generated@@556) ($generated@@238 $generated@@557)) ($generated@@238 ($generated@@216 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@216 ($generated@@238 $generated@@556) ($generated@@238 $generated@@557)))
)))
(assert (forall (($generated@@558 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@236 $generated@@558))) ($generated@@238 ($generated@@277 ($generated@@8 $generated@@558))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@236 $generated@@558))))
)))
(assert (forall (($generated@@559 T@U) ) (! (= ($generated@@277 ($generated@@238 $generated@@559)) ($generated@@238 ($generated@@277 $generated@@559)))
 :pattern ( ($generated@@277 ($generated@@238 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@271 (type $generated@@560))))
 (=> (and (= (type $generated@@560) ($generated@@270 $generated@@561)) (= ($generated@@269 $generated@@560) 0)) (= $generated@@560 ($generated@@268 $generated@@561))))
 :pattern ( ($generated@@269 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (! (let (($generated@@565 (type $generated@@563)))
 (=> (and (and (= (type $generated@@562) ($generated@@78 $generated@@565 $generated@@2)) (= (type $generated@@564) $generated@@2)) (<= 0 ($generated $generated@@564))) (= ($generated@@283 ($generated@@84 $generated@@562 $generated@@563 $generated@@564)) (+ (- ($generated@@283 $generated@@562) ($generated ($generated@@83 $generated@@562 $generated@@563))) ($generated $generated@@564)))))
 :pattern ( ($generated@@283 ($generated@@84 $generated@@562 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@567) $generated@@2)) ($generated@@76 $generated@@567 $generated@@46 $generated@@566))
 :pattern ( ($generated@@76 $generated@@567 $generated@@46 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@569) $generated@@3)) ($generated@@76 $generated@@569 $generated@@47 $generated@@568))
 :pattern ( ($generated@@76 $generated@@569 $generated@@47 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@571) $generated@@4)) ($generated@@76 $generated@@571 $generated@@44 $generated@@570))
 :pattern ( ($generated@@76 $generated@@571 $generated@@44 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@573) $generated@@433)) ($generated@@76 $generated@@573 $generated@@45 $generated@@572))
 :pattern ( ($generated@@76 $generated@@573 $generated@@45 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@575) $generated@@150)) ($generated@@76 $generated@@575 $generated@@48 $generated@@574))
 :pattern ( ($generated@@76 $generated@@575 $generated@@48 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@270 $generated@@150)) (= (type $generated@@577) $generated@@66)) (= ($generated@@137 $generated@@576 ($generated@@475 $generated@@577)) (forall (($generated@@578 Int) ) (!  (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@269 $generated@@576))) ($generated@@217 ($generated@@476 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@476 $generated@@576 $generated@@578))
))))
 :pattern ( ($generated@@137 $generated@@576 ($generated@@475 $generated@@577)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 Int) ) (!  (=> (= (type $generated@@580) ($generated@@270 $generated@@150)) (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@269 $generated@@580))) (< ($generated@@514 ($generated@@328 $generated@@141 ($generated@@476 $generated@@580 $generated@@581))) ($generated@@579 $generated@@580))))
 :pattern ( ($generated@@514 ($generated@@328 $generated@@141 ($generated@@476 $generated@@580 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@583) $generated@@66)) (= (type $generated@@584) $generated@@66)) ($generated@@137 $generated@@582 ($generated@@393 $generated@@583 $generated@@584))) (and (and ($generated@@137 ($generated@@289 $generated@@582) ($generated@@226 $generated@@583)) ($generated@@137 ($generated@@336 $generated@@582) ($generated@@226 $generated@@584))) ($generated@@137 ($generated@@367 $generated@@582) ($generated@@226 ($generated@@140 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@137 $generated@@582 ($generated@@393 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@586) $generated@@66)) (= (type $generated@@587) $generated@@66)) ($generated@@137 $generated@@585 ($generated@@401 $generated@@586 $generated@@587))) (and (and ($generated@@137 ($generated@@307 $generated@@585) ($generated@@231 $generated@@586)) ($generated@@137 ($generated@@347 $generated@@585) ($generated@@231 $generated@@587))) ($generated@@137 ($generated@@375 $generated@@585) ($generated@@231 ($generated@@140 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@137 $generated@@585 ($generated@@401 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@2) ($generated@@137 $generated@@588 $generated@@46))
 :pattern ( ($generated@@137 $generated@@588 $generated@@46))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@3) ($generated@@137 $generated@@589 $generated@@47))
 :pattern ( ($generated@@137 $generated@@589 $generated@@47))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@4) ($generated@@137 $generated@@590 $generated@@44))
 :pattern ( ($generated@@137 $generated@@590 $generated@@44))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@433) ($generated@@137 $generated@@591 $generated@@45))
 :pattern ( ($generated@@137 $generated@@591 $generated@@45))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@150) ($generated@@137 $generated@@592 $generated@@48))
 :pattern ( ($generated@@137 $generated@@592 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () T@U)
(declare-fun $generated@@597 (T@U) Bool)
(declare-fun $generated@@598 () Int)
(assert  (and (and (and (= (type $generated@@593) ($generated@@162 $generated@@79 $generated@@4)) (= (type $generated@@594) $generated@@79)) (= (type $generated@@595) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@596) ($generated@@78 $generated@@79 $generated@@80))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@599  (=> (= $generated@@593 ($generated@@161 $generated@@594 $generated@@595 $generated@@60 false)) (=> (and (and (and $generated@@253 ($generated@@0 ($generated@@238 ($generated@@11 $generated@@256)))) (and ($generated@@242 $generated@@596) ($generated@@597 $generated@@596))) (and (and (= $generated@@595 $generated@@596) ($generated@@76 ($generated@@8 $generated@@598) $generated@@134 $generated@@596)) (and ($generated@@255 $generated@@598) (= (ControlFlow 0 2) (- 0 1))))) ($generated@@137 ($generated@@8 (+ $generated@@598 1)) $generated@@134)))))
(let (($generated@@600  (=> (and (and (and ($generated@@242 $generated@@595) ($generated@@597 $generated@@595)) (<= ($generated@@236 0) $generated@@598)) (and (= 4 $generated@@252) (= (ControlFlow 0 3) 2))) $generated@@599)))
$generated@@600)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@165 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U) Bool)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (T@U) T@U)
(declare-fun $generated@@236 (Int) Int)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@242 (T@U) Bool)
(declare-fun $generated@@243 (T@U T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@252 () Int)
(declare-fun $generated@@253 () Bool)
(declare-fun $generated@@254 (Int) Int)
(declare-fun $generated@@255 (Int) Bool)
(declare-fun $generated@@256 () Bool)
(declare-fun $generated@@268 (T@T) T@U)
(declare-fun $generated@@269 (T@U) Int)
(declare-fun $generated@@270 (T@T) T@T)
(declare-fun $generated@@271 (T@T) T@T)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@283 (T@U) Int)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@328 (T@T T@U) T@U)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@393 (T@U T@U) T@U)
(declare-fun $generated@@401 (T@U T@U) T@U)
(declare-fun $generated@@409 (T@T) T@U)
(declare-fun $generated@@433 () T@T)
(declare-fun $generated@@441 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@451 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@476 (T@U Int) T@U)
(declare-fun $generated@@485 (T@U) Int)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@579 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@66) 6) (= (type $generated@@44) $generated@@66)) (= (type $generated@@45) $generated@@66)) (= (type $generated@@46) $generated@@66)) (= (type $generated@@47) $generated@@66)) (= (type $generated@@48) $generated@@66)) (= ($generated@@1 $generated@@67) 7)) (= (type $generated@@49) $generated@@67)) (= (type $generated@@50) $generated@@67)) (= (type $generated@@51) $generated@@67)) (= (type $generated@@52) $generated@@67)) (= (type $generated@@53) $generated@@67)) (= (type $generated@@54) $generated@@67)) (= (type $generated@@55) $generated@@67)) (= (type $generated@@56) $generated@@67)) (= (type $generated@@57) $generated@@67)) (= (type $generated@@58) $generated@@67)) (= (type $generated@@59) $generated@@67)) (forall (($generated@@72 T@T) ) (= ($generated@@1 ($generated@@68 $generated@@72)) 8))) (forall (($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@68 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@68 $generated@@73))
))) (= (type $generated@@60) ($generated@@68 $generated@@4))) (= (type $generated@@61) $generated@@67)) (= ($generated@@1 $generated@@70) 9)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@67)) (= ($generated@@1 $generated@@71) 10)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65)
)
(assert (forall (($generated@@75 T@U) ) (! (= (type ($generated@@74 $generated@@75)) $generated@@67)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (= ($generated@@74 $generated@@44) $generated@@49))
(assert (= ($generated@@74 $generated@@45) $generated@@50))
(assert (= ($generated@@74 $generated@@46) $generated@@51))
(assert (= ($generated@@74 $generated@@47) $generated@@52))
(assert (= ($generated@@74 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@1 ($generated@@78 $generated@@87 $generated@@88)) 11)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@78 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (let (($generated@@95 ($generated@@82 (type $generated@@93))))
(= (type ($generated@@83 $generated@@93 $generated@@94)) $generated@@95))
 :pattern ( ($generated@@83 $generated@@93 $generated@@94))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 (type $generated@@98)))
(let (($generated@@100 (type $generated@@97)))
(= (type ($generated@@84 $generated@@96 $generated@@97 $generated@@98)) ($generated@@78 $generated@@100 $generated@@99))))
 :pattern ( ($generated@@84 $generated@@96 $generated@@97 $generated@@98))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@82 (type $generated@@101))))
 (=> (= (type $generated@@103) $generated@@104) (= ($generated@@83 ($generated@@84 $generated@@101 $generated@@102 $generated@@103) $generated@@102) $generated@@103)))
 :weight 0
))) (and (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@107 $generated@@108) (= ($generated@@83 ($generated@@84 $generated@@106 $generated@@107 $generated@@105) $generated@@108) ($generated@@83 $generated@@106 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@83 $generated@@110 $generated@@112)))
 :weight 0
)))) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@69 (type $generated@@114))))
(= (type ($generated@@85 $generated@@113 $generated@@114)) $generated@@115))
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
))) (= ($generated@@1 $generated@@80) 13)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= (type ($generated@@86 $generated@@116 $generated@@117 $generated@@118)) $generated@@80)
 :pattern ( ($generated@@86 $generated@@116 $generated@@117 $generated@@118))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@69 (type $generated@@120))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@85 ($generated@@86 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@85 ($generated@@86 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@85 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@85 $generated@@128 $generated@@130)))
 :weight 0
)))) (forall (($generated@@131 Int) ) (! (= (type ($generated@@77 $generated@@131)) $generated@@66)
 :pattern ( ($generated@@77 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and (= (type $generated@@132) $generated@@2) (= (type $generated@@133) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
 :pattern ( ($generated@@76 $generated@@132 ($generated@@77 0) $generated@@133))
)))
(assert (= (type $generated@@134) $generated@@66))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
 :pattern ( ($generated@@76 $generated@@135 $generated@@134 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@77 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@77 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= (type ($generated@@140 $generated@@142 $generated@@143)) $generated@@66)
 :pattern ( ($generated@@140 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (and (= (type $generated@@144) $generated@@66) (= (type $generated@@145) $generated@@66)) (= (type $generated@@146) $generated@@141)) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145))) ($generated@@139 $generated@@146))
 :pattern ( ($generated@@139 $generated@@146) ($generated@@137 $generated@@146 ($generated@@140 $generated@@144 $generated@@145)))
)))
(assert  (and (and (= ($generated@@1 $generated@@150) 15) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@148 $generated@@151))
))) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@150)
 :pattern ( ($generated@@149 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) $generated@@141) (= (type $generated@@154) $generated@@141)) true) (= ($generated@@147 $generated@@153 $generated@@154)  (and (= ($generated@@148 $generated@@153) ($generated@@148 $generated@@154)) (= ($generated@@149 $generated@@153) ($generated@@149 $generated@@154)))))
 :pattern ( ($generated@@147 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (! (= (type ($generated@@155 $generated@@157)) $generated@@66)
 :pattern ( ($generated@@155 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@159) $generated@@66)) ($generated@@137 $generated@@158 ($generated@@155 $generated@@159))) ($generated@@156 $generated@@158))
 :pattern ( ($generated@@137 $generated@@158 ($generated@@155 $generated@@159)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@1 ($generated@@162 $generated@@166 $generated@@167)) 16)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@163 ($generated@@162 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@164 ($generated@@162 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@162 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 ($generated@@164 (type $generated@@172))))
(= (type ($generated@@160 $generated@@172 $generated@@173 $generated@@174)) $generated@@175))
 :pattern ( ($generated@@160 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 (type $generated@@179)))
(let (($generated@@181 (type $generated@@177)))
(= (type ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179)) ($generated@@162 $generated@@181 $generated@@180))))
 :pattern ( ($generated@@165 $generated@@176 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 ($generated@@164 (type $generated@@182))))
 (=> (= (type $generated@@185) $generated@@186) (= ($generated@@160 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@183 $generated@@184) $generated@@185)))
 :weight 0
))) (and (and (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@160 ($generated@@165 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@160 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@160 ($generated@@165 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@160 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or true (= ($generated@@160 ($generated@@165 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@160 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ) (! (= (type ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208)) ($generated@@162 $generated@@79 $generated@@4))
 :pattern ( ($generated@@161 $generated@@205 $generated@@206 $generated@@207 $generated@@208))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 ($generated@@69 (type $generated@@214))))
 (=> (and (and (and (and (= (type $generated@@209) $generated@@79) (= (type $generated@@210) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@211) ($generated@@68 $generated@@4))) (= (type $generated@@213) $generated@@79)) (= (type $generated@@214) ($generated@@68 $generated@@215))) (= ($generated@@0 ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (not (= $generated@@213 $generated@@209)) ($generated@@0 ($generated@@85 ($generated@@83 $generated@@210 $generated@@213) $generated@@211))) $generated@@212))))
 :pattern ( ($generated@@160 ($generated@@161 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= (type ($generated@@216 $generated@@218 $generated@@219)) $generated@@141)
 :pattern ( ($generated@@216 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (and (and (= (type $generated@@220) $generated@@66) (= (type $generated@@221) $generated@@66)) (= (type $generated@@222) $generated@@150)) (= (type $generated@@223) $generated@@150)) (= ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221))  (and ($generated@@217 $generated@@222 $generated@@220) ($generated@@217 $generated@@223 $generated@@221))))
 :pattern ( ($generated@@137 ($generated@@216 $generated@@222 $generated@@223) ($generated@@140 $generated@@220 $generated@@221)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@224) $generated@@141) (= (type $generated@@225) $generated@@141)) (= ($generated@@147 $generated@@224 $generated@@225) (= $generated@@224 $generated@@225)))
 :pattern ( ($generated@@147 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@66)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@229) $generated@@66)) (= ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@150) ($generated@@0 ($generated@@83 $generated@@228 $generated@@230))) ($generated@@217 $generated@@230 $generated@@229))
 :pattern ( ($generated@@83 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@137 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= (type ($generated@@231 $generated@@232)) $generated@@66)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@233) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@234) $generated@@66)) (= ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)) (forall (($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@150) ($generated@@0 ($generated@@83 $generated@@233 $generated@@235))) ($generated@@217 $generated@@235 $generated@@234))
 :pattern ( ($generated@@83 $generated@@233 $generated@@235))
))))
 :pattern ( ($generated@@137 $generated@@233 ($generated@@231 $generated@@234)))
)))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@236 $generated@@237) $generated@@237)
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (let (($generated@@240 (type $generated@@239)))
(= (type ($generated@@238 $generated@@239)) $generated@@240))
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! (= ($generated@@238 $generated@@241) $generated@@241)
 :pattern ( ($generated@@238 $generated@@241))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@244) $generated@@66) (= (type $generated@@245) $generated@@66)) (= (type $generated@@246) $generated@@150)) (= (type $generated@@247) $generated@@150)) (= (type $generated@@248) ($generated@@78 $generated@@79 $generated@@80))) ($generated@@242 $generated@@248)) (= ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248)  (and ($generated@@243 $generated@@246 $generated@@244 $generated@@248) ($generated@@243 $generated@@247 $generated@@245 $generated@@248))))
 :pattern ( ($generated@@76 ($generated@@216 $generated@@246 $generated@@247) ($generated@@140 $generated@@244 $generated@@245) $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@70)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (= (type $generated@@251) $generated@@141) (= ($generated@@139 $generated@@251) (= ($generated@@249 $generated@@251) $generated@@62)))
 :pattern ( ($generated@@139 $generated@@251))
)))
(assert  (=> (<= 2 $generated@@252) (=> (or $generated@@253 (not (= 2 $generated@@252))) (and (forall (($generated@@257 Int) ($generated@@258 Int) ) (!  (=> (<= ($generated@@236 0) $generated@@257) (=> (= $generated@@258 (+ $generated@@257 1)) (and (and ($generated@@255 $generated@@257) ($generated@@255 ($generated@@254 $generated@@257))) ($generated@@255 $generated@@258))))
 :pattern ( ($generated@@254 $generated@@258) ($generated@@254 ($generated@@254 $generated@@257)))
)) (= $generated@@256 (forall (($generated@@259 Int) ($generated@@260 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@259) (= $generated@@260 (+ $generated@@259 1))) (< ($generated@@254 ($generated@@254 $generated@@259)) ($generated@@254 $generated@@260)))
 :pattern ( ($generated@@254 $generated@@260) ($generated@@254 ($generated@@254 $generated@@259)))
)))))))
(assert  (=> (<= 2 $generated@@252) (=> (or $generated@@253 (not (= 2 $generated@@252))) (and (forall (($generated@@261 Int) ($generated@@262 Int) ) (!  (=> (<= ($generated@@236 0) $generated@@261) (=> (= $generated@@262 (+ $generated@@261 1)) (and (and ($generated@@255 $generated@@261) ($generated@@255 ($generated@@254 $generated@@261))) ($generated@@255 $generated@@262))))
 :pattern ( ($generated@@254 $generated@@262) ($generated@@254 ($generated@@254 $generated@@261)))
)) (= $generated@@256 (forall (($generated@@263 Int) ($generated@@264 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@263) (= $generated@@264 (+ $generated@@263 1))) (< ($generated@@254 ($generated@@254 $generated@@263)) ($generated@@254 $generated@@264)))
 :pattern ( ($generated@@254 $generated@@264) ($generated@@254 ($generated@@254 $generated@@263)))
)))))))
(assert (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@141) ($generated@@139 $generated@@265)) (exists (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (and (= (type $generated@@266) $generated@@150) (= (type $generated@@267) $generated@@150)) (= $generated@@265 ($generated@@216 $generated@@266 $generated@@267)))
 :no-pattern (type $generated@@266)
 :no-pattern (type $generated@@267)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
 :no-pattern ($generated $generated@@267)
 :no-pattern ($generated@@0 $generated@@267)
)))
 :pattern ( ($generated@@139 $generated@@265))
)))
(assert  (and (and (forall (($generated@@272 T@T) ) (= ($generated@@1 ($generated@@270 $generated@@272)) 17)) (forall (($generated@@273 T@T) ) (! (= ($generated@@271 ($generated@@270 $generated@@273)) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
))) (forall (($generated@@274 T@T) ) (! (= (type ($generated@@268 $generated@@274)) ($generated@@270 $generated@@274))
 :pattern ( ($generated@@268 $generated@@274))
))))
(assert (forall (($generated@@275 T@T) ) (! (= ($generated@@269 ($generated@@268 $generated@@275)) 0)
 :pattern ( ($generated@@268 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@2) (= ($generated@@137 $generated@@276 $generated@@134) (<= ($generated@@236 0) ($generated $generated@@276))))
 :pattern ( ($generated@@137 $generated@@276 $generated@@134))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@150)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@66) (= (type $generated@@281) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@243 ($generated@@277 $generated@@279) $generated@@280 $generated@@281) ($generated@@76 $generated@@279 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@243 ($generated@@277 $generated@@279) $generated@@280 $generated@@281))
)))
(assert  (=> (<= 1 $generated@@252) (forall (($generated@@282 Int) ) (!  (=> (or ($generated@@255 $generated@@282) (and (not (= 1 $generated@@252)) (<= ($generated@@236 0) $generated@@282))) (<= ($generated@@236 0) ($generated@@254 $generated@@282)))
 :pattern ( ($generated@@254 $generated@@282))
))))
(assert (forall (($generated@@285 T@T) ) (! (= (type ($generated@@284 $generated@@285)) ($generated@@78 $generated@@285 $generated@@2))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (! (let (($generated@@287 ($generated@@81 (type $generated@@286))))
 (=> (= (type $generated@@286) ($generated@@78 $generated@@287 $generated@@2)) (and (= (= ($generated@@283 $generated@@286) 0) (= $generated@@286 ($generated@@284 $generated@@287))) (=> (not (= ($generated@@283 $generated@@286) 0)) (exists (($generated@@288 T@U) ) (!  (and (= (type $generated@@288) $generated@@287) (< 0 ($generated ($generated@@83 $generated@@286 $generated@@288))))
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
))))))
 :pattern ( ($generated@@283 $generated@@286))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 18)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@78 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@83 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@83 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 19)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@78 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@83 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@83 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@81 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@78 $generated@@326 $generated@@2)) (= ($generated@@156 $generated@@325) (forall (($generated@@327 T@U) ) (!  (=> (= (type $generated@@327) $generated@@326) (and (<= 0 ($generated ($generated@@83 $generated@@325 $generated@@327))) (<= ($generated ($generated@@83 $generated@@325 $generated@@327)) ($generated@@283 $generated@@325))))
 :pattern ( ($generated@@83 $generated@@325 $generated@@327))
)))))
 :pattern ( ($generated@@156 $generated@@325))
)))
(assert (forall (($generated@@329 T@T) ($generated@@330 T@U) ) (! (= (type ($generated@@328 $generated@@329 $generated@@330)) $generated@@329)
 :pattern ( ($generated@@328 $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@331 T@U) ) (!  (=> (and (= (type $generated@@331) $generated@@150) ($generated@@217 $generated@@331 $generated@@134)) (and (= ($generated@@277 ($generated@@328 $generated@@2 $generated@@331)) $generated@@331) ($generated@@137 ($generated@@328 $generated@@2 $generated@@331) $generated@@134)))
 :pattern ( ($generated@@217 $generated@@331 $generated@@134))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@293 (type $generated@@332))))
(let (($generated@@334 ($generated@@292 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@291 $generated@@334 $generated@@333)) (or (= $generated@@332 ($generated@@290 $generated@@334 $generated@@333)) (exists (($generated@@335 T@U) ) (!  (and (= (type $generated@@335) $generated@@334) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@332) $generated@@335)))
 :no-pattern (type $generated@@335)
 :no-pattern ($generated $generated@@335)
 :no-pattern ($generated@@0 $generated@@335)
))))))
 :pattern ( ($generated@@289 $generated@@332))
)))
(assert (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@293 (type $generated@@337))))
(= (type ($generated@@336 $generated@@337)) ($generated@@78 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@293 (type $generated@@339))))
(let (($generated@@341 ($generated@@292 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@291 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@290 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@340) ($generated@@0 ($generated@@83 ($generated@@336 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@311 (type $generated@@343))))
(let (($generated@@345 ($generated@@310 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@309 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@308 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@345) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@307 $generated@@343))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@311 (type $generated@@348))))
(= (type ($generated@@347 $generated@@348)) ($generated@@78 $generated@@349 $generated@@4)))
 :pattern ( ($generated@@347 $generated@@348))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@311 (type $generated@@350))))
(let (($generated@@352 ($generated@@310 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@309 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@308 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@351) ($generated@@0 ($generated@@83 ($generated@@347 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@347 $generated@@350))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@355) $generated@@66)) (= ($generated@@137 $generated@@354 ($generated@@155 $generated@@355)) (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@354 $generated@@356)))) ($generated@@217 $generated@@356 $generated@@355))
 :pattern ( ($generated@@83 $generated@@354 $generated@@356))
))))
 :pattern ( ($generated@@137 $generated@@354 ($generated@@155 $generated@@355)))
)))
(assert (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (and (= (type $generated@@357) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@358) $generated@@66)) (= (type $generated@@359) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@357 ($generated@@226 $generated@@358) $generated@@359) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@150) ($generated@@0 ($generated@@83 $generated@@357 $generated@@360))) ($generated@@243 $generated@@360 $generated@@358 $generated@@359))
 :pattern ( ($generated@@83 $generated@@357 $generated@@360))
))))
 :pattern ( ($generated@@76 $generated@@357 ($generated@@226 $generated@@358) $generated@@359))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@78 $generated@@150 $generated@@4)) (= (type $generated@@362) $generated@@66)) (= (type $generated@@363) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@361 ($generated@@231 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@150) ($generated@@0 ($generated@@83 $generated@@361 $generated@@364))) ($generated@@243 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@83 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@76 $generated@@361 ($generated@@231 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(= ($generated ($generated@@83 ($generated@@284 $generated@@366) $generated@@365)) 0))
 :pattern ( (let (($generated@@366 (type $generated@@365)))
($generated@@83 ($generated@@284 $generated@@366) $generated@@365)))
)))
(assert  (and (forall (($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@369)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@367 $generated@@369))
)) (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@293 (type $generated@@370))))
(let (($generated@@372 ($generated@@292 (type $generated@@370))))
(= (type ($generated@@368 $generated@@370)) ($generated@@78 $generated@@372 $generated@@371))))
 :pattern ( ($generated@@368 $generated@@370))
))))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@374) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@367 $generated@@373) $generated@@374))  (and ($generated@@0 ($generated@@83 ($generated@@289 $generated@@373) ($generated@@148 ($generated@@328 $generated@@141 $generated@@374)))) (= ($generated@@83 ($generated@@368 $generated@@373) ($generated@@148 ($generated@@328 $generated@@141 $generated@@374))) ($generated@@149 ($generated@@328 $generated@@141 $generated@@374))))))
 :pattern ( ($generated@@83 ($generated@@367 $generated@@373) $generated@@374))
)))
(assert  (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@375 $generated@@377)) ($generated@@78 $generated@@150 $generated@@4))
 :pattern ( ($generated@@375 $generated@@377))
)) (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@311 (type $generated@@378))))
(let (($generated@@380 ($generated@@310 (type $generated@@378))))
(= (type ($generated@@376 $generated@@378)) ($generated@@78 $generated@@380 $generated@@379))))
 :pattern ( ($generated@@376 $generated@@378))
))))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@381) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@382) $generated@@150)) (= ($generated@@0 ($generated@@83 ($generated@@375 $generated@@381) $generated@@382))  (and ($generated@@0 ($generated@@83 ($generated@@307 $generated@@381) ($generated@@148 ($generated@@328 $generated@@141 $generated@@382)))) (= ($generated@@83 ($generated@@376 $generated@@381) ($generated@@148 ($generated@@328 $generated@@141 $generated@@382))) ($generated@@149 ($generated@@328 $generated@@141 $generated@@382))))))
 :pattern ( ($generated@@83 ($generated@@375 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(let (($generated@@386 ($generated@@292 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@291 $generated@@386 $generated@@385)) (= ($generated@@0 ($generated@@83 ($generated@@336 $generated@@383) $generated@@384)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) (and ($generated@@0 ($generated@@83 ($generated@@289 $generated@@383) $generated@@387)) (= $generated@@384 ($generated@@83 ($generated@@368 $generated@@383) $generated@@387))))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@383) $generated@@387))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@383) $generated@@387))
))))))
 :pattern ( ($generated@@83 ($generated@@336 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (! (let (($generated@@390 (type $generated@@389)))
(let (($generated@@391 ($generated@@310 (type $generated@@388))))
 (=> (= (type $generated@@388) ($generated@@309 $generated@@391 $generated@@390)) (= ($generated@@0 ($generated@@83 ($generated@@347 $generated@@388) $generated@@389)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@391) (and ($generated@@0 ($generated@@83 ($generated@@307 $generated@@388) $generated@@392)) (= $generated@@389 ($generated@@83 ($generated@@376 $generated@@388) $generated@@392))))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@388) $generated@@392))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@388) $generated@@392))
))))))
 :pattern ( ($generated@@83 ($generated@@347 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (! (= (type ($generated@@393 $generated@@394 $generated@@395)) $generated@@66)
 :pattern ( ($generated@@393 $generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (and (= (type $generated@@396) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@397) $generated@@66)) (= (type $generated@@398) $generated@@66)) (= (type $generated@@399) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@396) $generated@@400))) (and ($generated@@243 ($generated@@83 ($generated@@368 $generated@@396) $generated@@400) $generated@@398 $generated@@399) ($generated@@243 $generated@@400 $generated@@397 $generated@@399)))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@396) $generated@@400))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@396) $generated@@400))
))))
 :pattern ( ($generated@@76 $generated@@396 ($generated@@393 $generated@@397 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@402 $generated@@403)) $generated@@66)
 :pattern ( ($generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (and (and (= (type $generated@@404) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@405) $generated@@66)) (= (type $generated@@406) $generated@@66)) (= (type $generated@@407) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@404) $generated@@408))) (and ($generated@@243 ($generated@@83 ($generated@@376 $generated@@404) $generated@@408) $generated@@406 $generated@@407) ($generated@@243 $generated@@408 $generated@@405 $generated@@407)))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@404) $generated@@408))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@404) $generated@@408))
))))
 :pattern ( ($generated@@76 $generated@@404 ($generated@@401 $generated@@405 $generated@@406) $generated@@407))
)))
(assert  (=> (<= 2 $generated@@252) (=> (or $generated@@253 (not (= 2 $generated@@252))) true)))
(assert (forall (($generated@@410 T@T) ) (! (= (type ($generated@@409 $generated@@410)) ($generated@@78 $generated@@410 $generated@@4))
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@311 (type $generated@@411))))
(let (($generated@@413 ($generated@@310 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@309 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@308 $generated@@413 $generated@@412)) (= ($generated@@307 $generated@@411) ($generated@@409 $generated@@413))))))
 :pattern ( ($generated@@307 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@311 (type $generated@@414))))
(let (($generated@@416 ($generated@@310 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@309 $generated@@416 $generated@@415)) (= (= $generated@@414 ($generated@@308 $generated@@416 $generated@@415)) (= ($generated@@347 $generated@@414) ($generated@@409 $generated@@415))))))
 :pattern ( ($generated@@347 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@311 (type $generated@@417))))
(let (($generated@@419 ($generated@@310 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@309 $generated@@419 $generated@@418)) (= (= $generated@@417 ($generated@@308 $generated@@419 $generated@@418)) (= ($generated@@375 $generated@@417) ($generated@@409 $generated@@150))))))
 :pattern ( ($generated@@375 $generated@@417))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@293 (type $generated@@420))))
(let (($generated@@422 ($generated@@292 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@291 $generated@@422 $generated@@421)) (or (= $generated@@420 ($generated@@290 $generated@@422 $generated@@421)) (exists (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (and (and (= (type $generated@@423) $generated@@150) (= (type $generated@@424) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@367 $generated@@420) ($generated@@277 ($generated@@216 $generated@@423 $generated@@424)))))
 :no-pattern (type $generated@@423)
 :no-pattern (type $generated@@424)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
))))))
 :pattern ( ($generated@@367 $generated@@420))
)))
(assert (forall (($generated@@425 T@U) ) (! (let (($generated@@426 ($generated@@311 (type $generated@@425))))
(let (($generated@@427 ($generated@@310 (type $generated@@425))))
 (=> (= (type $generated@@425) ($generated@@309 $generated@@427 $generated@@426)) (or (= $generated@@425 ($generated@@308 $generated@@427 $generated@@426)) (exists (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (and (and (= (type $generated@@428) $generated@@150) (= (type $generated@@429) $generated@@150)) ($generated@@0 ($generated@@83 ($generated@@375 $generated@@425) ($generated@@277 ($generated@@216 $generated@@428 $generated@@429)))))
 :no-pattern (type $generated@@428)
 :no-pattern (type $generated@@429)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
))))))
 :pattern ( ($generated@@375 $generated@@425))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@150) ($generated@@217 $generated@@430 $generated@@46)) (and (= ($generated@@277 ($generated@@328 $generated@@2 $generated@@430)) $generated@@430) ($generated@@137 ($generated@@328 $generated@@2 $generated@@430) $generated@@46)))
 :pattern ( ($generated@@217 $generated@@430 $generated@@46))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@150) ($generated@@217 $generated@@431 $generated@@47)) (and (= ($generated@@277 ($generated@@328 $generated@@3 $generated@@431)) $generated@@431) ($generated@@137 ($generated@@328 $generated@@3 $generated@@431) $generated@@47)))
 :pattern ( ($generated@@217 $generated@@431 $generated@@47))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@150) ($generated@@217 $generated@@432 $generated@@44)) (and (= ($generated@@277 ($generated@@328 $generated@@4 $generated@@432)) $generated@@432) ($generated@@137 ($generated@@328 $generated@@4 $generated@@432) $generated@@44)))
 :pattern ( ($generated@@217 $generated@@432 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@433) 20))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@150) ($generated@@217 $generated@@434 $generated@@45)) (and (= ($generated@@277 ($generated@@328 $generated@@433 $generated@@434)) $generated@@434) ($generated@@137 ($generated@@328 $generated@@433 $generated@@434) $generated@@45)))
 :pattern ( ($generated@@217 $generated@@434 $generated@@45))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (= (type $generated@@436) $generated@@66) (= ($generated@@217 ($generated@@277 $generated@@435) $generated@@436) ($generated@@137 $generated@@435 $generated@@436)))
 :pattern ( ($generated@@217 ($generated@@277 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@81 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@78 $generated@@438 $generated@@2)) (<= 0 ($generated@@283 $generated@@437))))
 :pattern ( ($generated@@283 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@271 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@270 $generated@@440)) (<= 0 ($generated@@269 $generated@@439))))
 :pattern ( ($generated@@269 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (= (type ($generated@@441 $generated@@442)) $generated@@66)
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@66) (= (type $generated@@444) $generated@@66)) (= ($generated@@441 ($generated@@393 $generated@@443 $generated@@444)) $generated@@443))
 :pattern ( ($generated@@393 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@66)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@66) (= (type $generated@@448) $generated@@66)) (= ($generated@@445 ($generated@@393 $generated@@447 $generated@@448)) $generated@@448))
 :pattern ( ($generated@@393 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@66) (= (type $generated@@450) $generated@@66)) (= ($generated@@74 ($generated@@393 $generated@@449 $generated@@450)) $generated@@58))
 :pattern ( ($generated@@393 $generated@@449 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ) (! (= (type ($generated@@451 $generated@@452)) $generated@@66)
 :pattern ( ($generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@66) (= (type $generated@@454) $generated@@66)) (= ($generated@@451 ($generated@@401 $generated@@453 $generated@@454)) $generated@@453))
 :pattern ( ($generated@@401 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@66)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@66) (= (type $generated@@458) $generated@@66)) (= ($generated@@455 ($generated@@401 $generated@@457 $generated@@458)) $generated@@458))
 :pattern ( ($generated@@401 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@66) (= (type $generated@@460) $generated@@66)) (= ($generated@@74 ($generated@@401 $generated@@459 $generated@@460)) $generated@@59))
 :pattern ( ($generated@@401 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@150) (= (type $generated@@462) $generated@@150)) (= ($generated@@249 ($generated@@216 $generated@@461 $generated@@462)) $generated@@62))
 :pattern ( ($generated@@216 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@66)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@66) (= (type $generated@@466) $generated@@66)) (= ($generated@@463 ($generated@@140 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@140 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@66)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@66) (= (type $generated@@470) $generated@@66)) (= ($generated@@467 ($generated@@140 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@140 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@150) (= (type $generated@@472) $generated@@150)) (= ($generated@@148 ($generated@@216 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@216 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@150) (= (type $generated@@474) $generated@@150)) (= ($generated@@149 ($generated@@216 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@216 $generated@@473 $generated@@474))
)))
(assert  (and (forall (($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@477)) $generated@@66)
 :pattern ( ($generated@@475 $generated@@477))
)) (forall (($generated@@478 T@U) ($generated@@479 Int) ) (! (let (($generated@@480 ($generated@@271 (type $generated@@478))))
(= (type ($generated@@476 $generated@@478 $generated@@479)) $generated@@480))
 :pattern ( ($generated@@476 $generated@@478 $generated@@479))
))))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (and (= (type $generated@@481) ($generated@@270 $generated@@150)) (= (type $generated@@482) $generated@@66)) (= (type $generated@@483) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@481 ($generated@@475 $generated@@482) $generated@@483) (forall (($generated@@484 Int) ) (!  (=> (and (<= 0 $generated@@484) (< $generated@@484 ($generated@@269 $generated@@481))) ($generated@@243 ($generated@@476 $generated@@481 $generated@@484) $generated@@482 $generated@@483))
 :pattern ( ($generated@@476 $generated@@481 $generated@@484))
))))
 :pattern ( ($generated@@76 $generated@@481 ($generated@@475 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@486 Int) ) (! (= ($generated@@485 ($generated@@77 $generated@@486)) $generated@@486)
 :pattern ( ($generated@@77 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@66)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@66) (= ($generated@@487 ($generated@@226 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@226 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@66) (= ($generated@@74 ($generated@@226 $generated@@490)) $generated@@54))
 :pattern ( ($generated@@226 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@66)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@66) (= ($generated@@491 ($generated@@231 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@231 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@66) (= ($generated@@74 ($generated@@231 $generated@@494)) $generated@@55))
 :pattern ( ($generated@@231 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@66)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@66) (= ($generated@@495 ($generated@@155 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@155 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@66) (= ($generated@@74 ($generated@@155 $generated@@498)) $generated@@56))
 :pattern ( ($generated@@155 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@66)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@66) (= ($generated@@499 ($generated@@475 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@475 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (!  (=> (= (type $generated@@502) $generated@@66) (= ($generated@@74 ($generated@@475 $generated@@502)) $generated@@57))
 :pattern ( ($generated@@475 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 (type $generated@@503)))
(= ($generated@@328 $generated@@504 ($generated@@277 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@277 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@506) $generated@@66)) (= (type $generated@@507) $generated@@66)) (= ($generated@@137 $generated@@505 ($generated@@393 $generated@@506 $generated@@507)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@289 $generated@@505) $generated@@508))) (and ($generated@@217 ($generated@@83 ($generated@@368 $generated@@505) $generated@@508) $generated@@507) ($generated@@217 $generated@@508 $generated@@506)))
 :pattern ( ($generated@@83 ($generated@@368 $generated@@505) $generated@@508))
 :pattern ( ($generated@@83 ($generated@@289 $generated@@505) $generated@@508))
))))
 :pattern ( ($generated@@137 $generated@@505 ($generated@@393 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@510) $generated@@66)) (= (type $generated@@511) $generated@@66)) (= ($generated@@137 $generated@@509 ($generated@@401 $generated@@510 $generated@@511)) (forall (($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@150) ($generated@@0 ($generated@@83 ($generated@@307 $generated@@509) $generated@@512))) (and ($generated@@217 ($generated@@83 ($generated@@376 $generated@@509) $generated@@512) $generated@@511) ($generated@@217 $generated@@512 $generated@@510)))
 :pattern ( ($generated@@83 ($generated@@376 $generated@@509) $generated@@512))
 :pattern ( ($generated@@83 ($generated@@307 $generated@@509) $generated@@512))
))))
 :pattern ( ($generated@@137 $generated@@509 ($generated@@401 $generated@@510 $generated@@511)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@150) (= (type $generated@@516) $generated@@150)) (< ($generated@@513 $generated@@515) ($generated@@514 ($generated@@216 $generated@@515 $generated@@516))))
 :pattern ( ($generated@@216 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@150) (= (type $generated@@518) $generated@@150)) (< ($generated@@513 $generated@@518) ($generated@@514 ($generated@@216 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@216 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@150) (= (type $generated@@520) $generated@@66)) (= (type $generated@@521) $generated@@66)) ($generated@@217 $generated@@519 ($generated@@393 $generated@@520 $generated@@521))) (and (= ($generated@@277 ($generated@@328 ($generated@@291 $generated@@150 $generated@@150) $generated@@519)) $generated@@519) ($generated@@137 ($generated@@328 ($generated@@291 $generated@@150 $generated@@150) $generated@@519) ($generated@@393 $generated@@520 $generated@@521))))
 :pattern ( ($generated@@217 $generated@@519 ($generated@@393 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (and (= (type $generated@@522) $generated@@150) (= (type $generated@@523) $generated@@66)) (= (type $generated@@524) $generated@@66)) ($generated@@217 $generated@@522 ($generated@@401 $generated@@523 $generated@@524))) (and (= ($generated@@277 ($generated@@328 ($generated@@309 $generated@@150 $generated@@150) $generated@@522)) $generated@@522) ($generated@@137 ($generated@@328 ($generated@@309 $generated@@150 $generated@@150) $generated@@522) ($generated@@401 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@217 $generated@@522 ($generated@@401 $generated@@523 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@66) (= (type $generated@@526) $generated@@66)) (= (type $generated@@527) $generated@@150)) ($generated@@217 $generated@@527 ($generated@@140 $generated@@525 $generated@@526))) (and (= ($generated@@277 ($generated@@328 $generated@@141 $generated@@527)) $generated@@527) ($generated@@137 ($generated@@328 $generated@@141 $generated@@527) ($generated@@140 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@217 $generated@@527 ($generated@@140 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
 (not ($generated@@0 ($generated@@83 ($generated@@409 $generated@@529) $generated@@528))))
 :pattern ( (let (($generated@@529 (type $generated@@528)))
($generated@@83 ($generated@@409 $generated@@529) $generated@@528)))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@71)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@66) (= (type $generated@@533) $generated@@66)) (and (= ($generated@@74 ($generated@@140 $generated@@532 $generated@@533)) $generated@@63) (= ($generated@@530 ($generated@@140 $generated@@532 $generated@@533)) $generated@@65)))
 :pattern ( ($generated@@140 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@141) (= ($generated@@513 ($generated@@277 $generated@@534)) ($generated@@514 $generated@@534)))
 :pattern ( ($generated@@513 ($generated@@277 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@150) ($generated@@217 $generated@@535 ($generated@@77 0))) (and (= ($generated@@277 ($generated@@328 $generated@@2 $generated@@535)) $generated@@535) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@535) ($generated@@77 0))))
 :pattern ( ($generated@@217 $generated@@535 ($generated@@77 0)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@150) (= (type $generated@@537) $generated@@66)) ($generated@@217 $generated@@536 ($generated@@226 $generated@@537))) (and (= ($generated@@277 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@536)) $generated@@536) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@536) ($generated@@226 $generated@@537))))
 :pattern ( ($generated@@217 $generated@@536 ($generated@@226 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@150) (= (type $generated@@539) $generated@@66)) ($generated@@217 $generated@@538 ($generated@@231 $generated@@539))) (and (= ($generated@@277 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@538)) $generated@@538) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@4) $generated@@538) ($generated@@231 $generated@@539))))
 :pattern ( ($generated@@217 $generated@@538 ($generated@@231 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@150) (= (type $generated@@541) $generated@@66)) ($generated@@217 $generated@@540 ($generated@@155 $generated@@541))) (and (= ($generated@@277 ($generated@@328 ($generated@@78 $generated@@150 $generated@@2) $generated@@540)) $generated@@540) ($generated@@137 ($generated@@328 ($generated@@78 $generated@@150 $generated@@2) $generated@@540) ($generated@@155 $generated@@541))))
 :pattern ( ($generated@@217 $generated@@540 ($generated@@155 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@150) (= (type $generated@@543) $generated@@66)) ($generated@@217 $generated@@542 ($generated@@475 $generated@@543))) (and (= ($generated@@277 ($generated@@328 ($generated@@270 $generated@@150) $generated@@542)) $generated@@542) ($generated@@137 ($generated@@328 ($generated@@270 $generated@@150) $generated@@542) ($generated@@475 $generated@@543))))
 :pattern ( ($generated@@217 $generated@@542 ($generated@@475 $generated@@543)))
)))
(assert (= ($generated@@74 $generated@@134) $generated@@61))
(assert (= ($generated@@530 $generated@@134) $generated@@64))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@78 $generated@@150 $generated@@2)) (= (type $generated@@545) $generated@@66)) (= (type $generated@@546) ($generated@@78 $generated@@79 $generated@@80))) (= ($generated@@76 $generated@@544 ($generated@@155 $generated@@545) $generated@@546) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@150) (< 0 ($generated ($generated@@83 $generated@@544 $generated@@547)))) ($generated@@243 $generated@@547 $generated@@545 $generated@@546))
 :pattern ( ($generated@@83 $generated@@544 $generated@@547))
))))
 :pattern ( ($generated@@76 $generated@@544 ($generated@@155 $generated@@545) $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@141) (= (type $generated@@549) $generated@@66)) (= (type $generated@@550) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@550) (and ($generated@@139 $generated@@548) (exists (($generated@@551 T@U) ) (!  (and (= (type $generated@@551) $generated@@66) ($generated@@76 $generated@@548 ($generated@@140 $generated@@549 $generated@@551) $generated@@550))
 :pattern ( ($generated@@76 $generated@@548 ($generated@@140 $generated@@549 $generated@@551) $generated@@550))
))))) ($generated@@243 ($generated@@148 $generated@@548) $generated@@549 $generated@@550))
 :pattern ( ($generated@@243 ($generated@@148 $generated@@548) $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@141) (= (type $generated@@553) $generated@@66)) (= (type $generated@@554) ($generated@@78 $generated@@79 $generated@@80))) (and ($generated@@242 $generated@@554) (and ($generated@@139 $generated@@552) (exists (($generated@@555 T@U) ) (!  (and (= (type $generated@@555) $generated@@66) ($generated@@76 $generated@@552 ($generated@@140 $generated@@555 $generated@@553) $generated@@554))
 :pattern ( ($generated@@76 $generated@@552 ($generated@@140 $generated@@555 $generated@@553) $generated@@554))
))))) ($generated@@243 ($generated@@149 $generated@@552) $generated@@553 $generated@@554))
 :pattern ( ($generated@@243 ($generated@@149 $generated@@552) $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@150) (= (type $generated@@557) $generated@@150)) (= ($generated@@216 ($generated@@238 $generated@@556) ($generated@@238 $generated@@557)) ($generated@@238 ($generated@@216 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@216 ($generated@@238 $generated@@556) ($generated@@238 $generated@@557)))
)))
(assert (forall (($generated@@558 Int) ) (! (= ($generated@@277 ($generated@@8 ($generated@@236 $generated@@558))) ($generated@@238 ($generated@@277 ($generated@@8 $generated@@558))))
 :pattern ( ($generated@@277 ($generated@@8 ($generated@@236 $generated@@558))))
)))
(assert (forall (($generated@@559 T@U) ) (! (= ($generated@@277 ($generated@@238 $generated@@559)) ($generated@@238 ($generated@@277 $generated@@559)))
 :pattern ( ($generated@@277 ($generated@@238 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@271 (type $generated@@560))))
 (=> (and (= (type $generated@@560) ($generated@@270 $generated@@561)) (= ($generated@@269 $generated@@560) 0)) (= $generated@@560 ($generated@@268 $generated@@561))))
 :pattern ( ($generated@@269 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (! (let (($generated@@565 (type $generated@@563)))
 (=> (and (and (= (type $generated@@562) ($generated@@78 $generated@@565 $generated@@2)) (= (type $generated@@564) $generated@@2)) (<= 0 ($generated $generated@@564))) (= ($generated@@283 ($generated@@84 $generated@@562 $generated@@563 $generated@@564)) (+ (- ($generated@@283 $generated@@562) ($generated ($generated@@83 $generated@@562 $generated@@563))) ($generated $generated@@564)))))
 :pattern ( ($generated@@283 ($generated@@84 $generated@@562 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@567) $generated@@2)) ($generated@@76 $generated@@567 $generated@@46 $generated@@566))
 :pattern ( ($generated@@76 $generated@@567 $generated@@46 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@569) $generated@@3)) ($generated@@76 $generated@@569 $generated@@47 $generated@@568))
 :pattern ( ($generated@@76 $generated@@569 $generated@@47 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@571) $generated@@4)) ($generated@@76 $generated@@571 $generated@@44 $generated@@570))
 :pattern ( ($generated@@76 $generated@@571 $generated@@44 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@573) $generated@@433)) ($generated@@76 $generated@@573 $generated@@45 $generated@@572))
 :pattern ( ($generated@@76 $generated@@573 $generated@@45 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@575) $generated@@150)) ($generated@@76 $generated@@575 $generated@@48 $generated@@574))
 :pattern ( ($generated@@76 $generated@@575 $generated@@48 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@270 $generated@@150)) (= (type $generated@@577) $generated@@66)) (= ($generated@@137 $generated@@576 ($generated@@475 $generated@@577)) (forall (($generated@@578 Int) ) (!  (=> (and (<= 0 $generated@@578) (< $generated@@578 ($generated@@269 $generated@@576))) ($generated@@217 ($generated@@476 $generated@@576 $generated@@578) $generated@@577))
 :pattern ( ($generated@@476 $generated@@576 $generated@@578))
))))
 :pattern ( ($generated@@137 $generated@@576 ($generated@@475 $generated@@577)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 Int) ) (!  (=> (= (type $generated@@580) ($generated@@270 $generated@@150)) (=> (and (<= 0 $generated@@581) (< $generated@@581 ($generated@@269 $generated@@580))) (< ($generated@@514 ($generated@@328 $generated@@141 ($generated@@476 $generated@@580 $generated@@581))) ($generated@@579 $generated@@580))))
 :pattern ( ($generated@@514 ($generated@@328 $generated@@141 ($generated@@476 $generated@@580 $generated@@581))))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) ($generated@@291 $generated@@150 $generated@@150)) (= (type $generated@@583) $generated@@66)) (= (type $generated@@584) $generated@@66)) ($generated@@137 $generated@@582 ($generated@@393 $generated@@583 $generated@@584))) (and (and ($generated@@137 ($generated@@289 $generated@@582) ($generated@@226 $generated@@583)) ($generated@@137 ($generated@@336 $generated@@582) ($generated@@226 $generated@@584))) ($generated@@137 ($generated@@367 $generated@@582) ($generated@@226 ($generated@@140 $generated@@583 $generated@@584)))))
 :pattern ( ($generated@@137 $generated@@582 ($generated@@393 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) ($generated@@309 $generated@@150 $generated@@150)) (= (type $generated@@586) $generated@@66)) (= (type $generated@@587) $generated@@66)) ($generated@@137 $generated@@585 ($generated@@401 $generated@@586 $generated@@587))) (and (and ($generated@@137 ($generated@@307 $generated@@585) ($generated@@231 $generated@@586)) ($generated@@137 ($generated@@347 $generated@@585) ($generated@@231 $generated@@587))) ($generated@@137 ($generated@@375 $generated@@585) ($generated@@231 ($generated@@140 $generated@@586 $generated@@587)))))
 :pattern ( ($generated@@137 $generated@@585 ($generated@@401 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@2) ($generated@@137 $generated@@588 $generated@@46))
 :pattern ( ($generated@@137 $generated@@588 $generated@@46))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@3) ($generated@@137 $generated@@589 $generated@@47))
 :pattern ( ($generated@@137 $generated@@589 $generated@@47))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@4) ($generated@@137 $generated@@590 $generated@@44))
 :pattern ( ($generated@@137 $generated@@590 $generated@@44))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@433) ($generated@@137 $generated@@591 $generated@@45))
 :pattern ( ($generated@@137 $generated@@591 $generated@@45))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@150) ($generated@@137 $generated@@592 $generated@@48))
 :pattern ( ($generated@@137 $generated@@592 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@593 () Int)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () Int)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 (T@U) Bool)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(assert  (and (and (and (= (type $generated@@594) ($generated@@78 $generated@@79 $generated@@80)) (= (type $generated@@599) ($generated@@78 $generated@@79 $generated@@80))) (= (type $generated@@602) ($generated@@162 $generated@@79 $generated@@4))) (= (type $generated@@603) $generated@@79)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@604  (=> (= (ControlFlow 0 9) (- 0 8)) (<= ($generated@@254 $generated@@593) ($generated@@254 (+ $generated@@593 1))))))
(let (($generated@@605  (=> (and (<= ($generated@@254 $generated@@593) ($generated@@254 (+ $generated@@593 1))) (= (ControlFlow 0 10) 9)) $generated@@604)))
(let (($generated@@606  (=> ($generated@@76 ($generated@@8 $generated@@593) $generated@@134 $generated@@594) (=> (and ($generated@@255 $generated@@593) (= $generated@@595 ($generated@@254 $generated@@593))) (=> (and (and ($generated@@76 ($generated@@8 $generated@@595) $generated@@134 $generated@@594) ($generated@@255 ($generated@@254 $generated@@593))) (and ($generated@@255 $generated@@593) ($generated@@255 ($generated@@254 $generated@@593)))) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@137 ($generated@@8 (+ $generated@@593 1)) $generated@@134)) (=> ($generated@@137 ($generated@@8 (+ $generated@@593 1)) $generated@@134) (=> (= $generated@@596 (+ $generated@@593 1)) (=> (and (and ($generated@@76 ($generated@@8 $generated@@596) $generated@@134 $generated@@594) ($generated@@255 (+ $generated@@593 1))) (and ($generated@@255 (+ $generated@@593 1)) (= (ControlFlow 0 6) (- 0 5)))) (<= ($generated@@254 ($generated@@254 $generated@@593)) ($generated@@254 (+ $generated@@593 1))))))))))))
(let (($generated@@607  (=> ($generated@@76 ($generated@@8 $generated@@593) $generated@@134 $generated@@594) (=> (and ($generated@@255 $generated@@593) ($generated@@255 $generated@@593)) (=> (and (and (and ($generated@@76 ($generated@@8 $generated@@593) $generated@@134 $generated@@594) ($generated@@255 $generated@@593)) (and ($generated@@255 $generated@@593) (= $generated@@597 ($generated@@254 $generated@@593)))) (and (and ($generated@@76 ($generated@@8 $generated@@593) $generated@@134 $generated@@594) ($generated@@255 $generated@@593)) (and ($generated@@255 $generated@@593) (= $generated@@598 ($generated@@254 $generated@@593))))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> $generated@@253 (or ($generated@@0 ($generated@@238 ($generated@@11 $generated@@256))) (forall (($generated@@608 Int) ($generated@@609 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@608) (= $generated@@609 (+ $generated@@608 1))) (< ($generated@@254 ($generated@@254 $generated@@608)) ($generated@@254 $generated@@609)))
 :pattern ( ($generated@@254 $generated@@609) ($generated@@254 ($generated@@254 $generated@@608)))
))))) (=> (=> $generated@@253 (or ($generated@@0 ($generated@@238 ($generated@@11 $generated@@256))) (forall (($generated@@610 Int) ($generated@@611 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@610) (= $generated@@611 (+ $generated@@610 1))) (< ($generated@@254 ($generated@@254 $generated@@610)) ($generated@@254 $generated@@611)))
 :pattern ( ($generated@@254 $generated@@611) ($generated@@254 ($generated@@254 $generated@@610)))
)))) (=> (and ($generated@@242 $generated@@599) ($generated@@600 $generated@@599)) (=> (and (and (=> (<= $generated@@597 $generated@@598) ($generated@@255 $generated@@598)) (=> (<= $generated@@597 $generated@@598) (<= $generated@@597 ($generated@@254 $generated@@598)))) (and (= $generated@@594 $generated@@599) ($generated@@76 ($generated@@8 $generated@@593) $generated@@134 $generated@@599))) (=> (and (and (and ($generated@@255 $generated@@593) (= $generated@@601 ($generated@@254 $generated@@593))) (and ($generated@@76 ($generated@@8 $generated@@601) $generated@@134 $generated@@599) ($generated@@255 ($generated@@254 $generated@@593)))) (and (and ($generated@@255 $generated@@593) ($generated@@255 ($generated@@254 $generated@@593))) (= (ControlFlow 0 3) (- 0 2)))) (<= ($generated@@254 $generated@@593) ($generated@@254 ($generated@@254 $generated@@593)))))))))))))
(let (($generated@@612 true))
(let (($generated@@613  (=> (= $generated@@602 ($generated@@161 $generated@@603 $generated@@594 $generated@@60 false)) (and (and (and (=> (= (ControlFlow 0 11) 1) $generated@@612) (=> (= (ControlFlow 0 11) 3) $generated@@607)) (=> (= (ControlFlow 0 11) 6) $generated@@606)) (=> (= (ControlFlow 0 11) 10) $generated@@605)))))
(let (($generated@@614  (=> (and (and (and ($generated@@242 $generated@@594) ($generated@@600 $generated@@594)) (and (<= ($generated@@236 0) $generated@@593) (= 4 $generated@@252))) (and (and $generated@@253 (and ($generated@@0 ($generated@@238 ($generated@@11 $generated@@256))) (forall (($generated@@615 Int) ($generated@@616 Int) ) (!  (=> (and (<= ($generated@@236 0) $generated@@615) (= $generated@@616 (+ $generated@@615 1))) (< ($generated@@254 ($generated@@254 $generated@@615)) ($generated@@254 $generated@@616)))
 :pattern ( ($generated@@254 $generated@@616) ($generated@@254 ($generated@@254 $generated@@615)))
)))) (= (ControlFlow 0 12) 11))) $generated@@613)))
$generated@@614))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
