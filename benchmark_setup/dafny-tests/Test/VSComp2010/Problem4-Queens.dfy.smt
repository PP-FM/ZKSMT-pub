(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) Bool)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (Int) Int)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@T) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@317 () Int)
(declare-fun $generated@@318 (T@U Int) Bool)
(declare-fun $generated@@319 (T@U Int) Bool)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@T T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U Int) T@U)
(declare-fun $generated@@484 (T@U) Int)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@584 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and (= (type $generated@@133) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@132 $generated@@133 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@133 $generated@@135) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60))
)))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) $generated@@64)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@158) $generated@@64)) ($generated@@136 $generated@@157 ($generated@@154 $generated@@158))) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@136 $generated@@157 ($generated@@154 $generated@@158)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@77 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@67 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@77) (= (type $generated@@209) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@210) ($generated@@66 $generated@@4))) (= (type $generated@@212) $generated@@77)) (= (type $generated@@213) ($generated@@66 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= (type ($generated@@215 $generated@@217 $generated@@218)) $generated@@140)
 :pattern ( ($generated@@215 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@64) (= (type $generated@@220) $generated@@64)) (= (type $generated@@221) $generated@@149)) (= (type $generated@@222) $generated@@149)) (= ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220))  (and ($generated@@216 $generated@@221 $generated@@219) ($generated@@216 $generated@@222 $generated@@220))))
 :pattern ( ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@140) (= (type $generated@@224) $generated@@140)) (= ($generated@@146 $generated@@223 $generated@@224) (= $generated@@223 $generated@@224)))
 :pattern ( ($generated@@146 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (! (= (type ($generated@@225 $generated@@226)) $generated@@64)
 :pattern ( ($generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@228) $generated@@64)) (= ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)) (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@149) ($generated@@0 ($generated@@81 $generated@@227 $generated@@229))) ($generated@@216 $generated@@229 $generated@@228))
 :pattern ( ($generated@@81 $generated@@227 $generated@@229))
))))
 :pattern ( ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@149) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@216 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 Int) ) (! (= ($generated@@235 $generated@@236) $generated@@236)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(= (type ($generated@@237 $generated@@238)) $generated@@239))
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= ($generated@@237 $generated@@240) $generated@@240)
 :pattern ( ($generated@@237 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@243) $generated@@64) (= (type $generated@@244) $generated@@64)) (= (type $generated@@245) $generated@@149)) (= (type $generated@@246) $generated@@149)) (= (type $generated@@247) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@241 $generated@@247)) (= ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247)  (and ($generated@@242 $generated@@245 $generated@@243 $generated@@247) ($generated@@242 $generated@@246 $generated@@244 $generated@@247))))
 :pattern ( ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@68)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@140) (= ($generated@@138 $generated@@250) (= ($generated@@248 $generated@@250) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@140) ($generated@@138 $generated@@251)) (exists (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (and (and (= (type $generated@@252) $generated@@149) (= (type $generated@@253) $generated@@149)) (= $generated@@251 ($generated@@215 $generated@@252 $generated@@253)))
 :no-pattern (type $generated@@252)
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@252)
 :no-pattern ($generated@@0 $generated@@252)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
)))
 :pattern ( ($generated@@138 $generated@@251))
)))
(assert  (and (and (forall (($generated@@258 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@258)) 17)) (forall (($generated@@259 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@259)) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
))) (forall (($generated@@260 T@T) ) (! (= (type ($generated@@254 $generated@@260)) ($generated@@256 $generated@@260))
 :pattern ( ($generated@@254 $generated@@260))
))))
(assert (forall (($generated@@261 T@T) ) (! (= ($generated@@255 ($generated@@254 $generated@@261)) 0)
 :pattern ( ($generated@@254 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@149)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@64) (= (type $generated@@266) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266) ($generated@@74 $generated@@264 $generated@@265 $generated@@266)))
 :pattern ( ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@269) $generated@@149)) (= (type $generated@@270) $generated@@64)) ($generated@@132 $generated@@267 $generated@@268)) ($generated@@242 $generated@@269 $generated@@270 $generated@@267)) ($generated@@242 $generated@@269 $generated@@270 $generated@@268))
 :pattern ( ($generated@@132 $generated@@267 $generated@@268) ($generated@@242 $generated@@269 $generated@@270 $generated@@267))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@271) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@272) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@274) $generated@@64)) ($generated@@132 $generated@@271 $generated@@272)) ($generated@@74 $generated@@273 $generated@@274 $generated@@271)) ($generated@@74 $generated@@273 $generated@@274 $generated@@272))
 :pattern ( ($generated@@132 $generated@@271 $generated@@272) ($generated@@74 $generated@@273 $generated@@274 $generated@@271))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@64)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert  (=> (<= 0 $generated@@317) (forall (($generated@@322 T@U) ($generated@@323 Int) ) (!  (=> (and (= (type $generated@@322) ($generated@@256 $generated@@149)) (or ($generated@@319 $generated@@322 $generated@@323) (and (not (= 0 $generated@@317)) ($generated@@136 $generated@@322 ($generated@@320 $generated@@46))))) true)
 :pattern ( ($generated@@318 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@79 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@76 $generated@@325 $generated@@2)) (= ($generated@@155 $generated@@324) (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@325) (and (<= 0 ($generated ($generated@@81 $generated@@324 $generated@@326))) (<= ($generated ($generated@@81 $generated@@324 $generated@@326)) ($generated@@275 $generated@@324))))
 :pattern ( ($generated@@81 $generated@@324 $generated@@326))
)))))
 :pattern ( ($generated@@155 $generated@@324))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@285 (type $generated@@327))))
(let (($generated@@329 ($generated@@284 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@283 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@282 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@281 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@285 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@76 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@285 (type $generated@@334))))
(let (($generated@@336 ($generated@@284 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@283 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@282 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@81 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@299 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@303 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@76 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@303 (type $generated@@345))))
(let (($generated@@347 ($generated@@302 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@301 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@300 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@81 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@350) $generated@@64)) (= ($generated@@136 $generated@@349 ($generated@@154 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@349 $generated@@351)))) ($generated@@216 $generated@@351 $generated@@350))
 :pattern ( ($generated@@81 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@136 $generated@@349 ($generated@@154 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@353) $generated@@64)) (= (type $generated@@354) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@352 ($generated@@225 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@149) ($generated@@0 ($generated@@81 $generated@@352 $generated@@355))) ($generated@@242 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@81 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@74 $generated@@352 ($generated@@225 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@357) $generated@@64)) (= (type $generated@@358) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@356 ($generated@@230 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@149) ($generated@@0 ($generated@@81 $generated@@356 $generated@@359))) ($generated@@242 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@81 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@74 $generated@@356 ($generated@@230 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@81 ($generated@@276 $generated@@361) $generated@@360)))
)))
(assert  (and (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@362 $generated@@365)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@362 $generated@@365))
)) (forall (($generated@@366 T@T) ($generated@@367 T@U) ) (! (= (type ($generated@@363 $generated@@366 $generated@@367)) $generated@@366)
 :pattern ( ($generated@@363 $generated@@366 $generated@@367))
))) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@285 (type $generated@@368))))
(let (($generated@@370 ($generated@@284 (type $generated@@368))))
(= (type ($generated@@364 $generated@@368)) ($generated@@76 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@364 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@372) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@362 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@371) ($generated@@147 ($generated@@363 $generated@@140 $generated@@372)))) (= ($generated@@81 ($generated@@364 $generated@@371) ($generated@@147 ($generated@@363 $generated@@140 $generated@@372))) ($generated@@148 ($generated@@363 $generated@@140 $generated@@372))))))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@303 (type $generated@@376))))
(let (($generated@@378 ($generated@@302 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@76 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@380) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@379) ($generated@@147 ($generated@@363 $generated@@140 $generated@@380)))) (= ($generated@@81 ($generated@@374 $generated@@379) ($generated@@147 ($generated@@363 $generated@@140 $generated@@380))) ($generated@@148 ($generated@@363 $generated@@140 $generated@@380))))))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@284 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@283 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@81 ($generated@@331 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@81 ($generated@@364 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@381) $generated@@385))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@81 ($generated@@331 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@302 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@301 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@81 ($generated@@342 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@81 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@386) $generated@@390))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@81 ($generated@@342 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@64)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@394) $generated@@398))) (and ($generated@@242 ($generated@@81 ($generated@@364 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@242 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@394) $generated@@398))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@64)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@402) $generated@@406))) (and ($generated@@242 ($generated@@81 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@242 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@407) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@408) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@407 $generated@@409))) (and ($generated@@132 $generated@@407 $generated@@408) ($generated@@132 $generated@@408 $generated@@409))) ($generated@@132 $generated@@407 $generated@@409))
 :pattern ( ($generated@@132 $generated@@407 $generated@@408) ($generated@@132 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@76 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@303 (type $generated@@412))))
(let (($generated@@414 ($generated@@302 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@301 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@300 $generated@@414 $generated@@413)) (= ($generated@@299 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@299 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@303 (type $generated@@415))))
(let (($generated@@417 ($generated@@302 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@301 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@300 $generated@@417 $generated@@416)) (= ($generated@@342 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@342 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@303 (type $generated@@418))))
(let (($generated@@420 ($generated@@302 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@301 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@300 $generated@@420 $generated@@419)) (= ($generated@@373 $generated@@418) ($generated@@410 $generated@@149))))))
 :pattern ( ($generated@@373 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@285 (type $generated@@421))))
(let (($generated@@423 ($generated@@284 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@283 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@282 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@149) (= (type $generated@@425) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@362 $generated@@421) ($generated@@262 ($generated@@215 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@362 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@303 (type $generated@@426))))
(let (($generated@@428 ($generated@@302 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@301 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@300 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@149) (= (type $generated@@430) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@373 $generated@@426) ($generated@@262 ($generated@@215 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@149) ($generated@@216 $generated@@431 $generated@@46)) (and (= ($generated@@262 ($generated@@363 $generated@@2 $generated@@431)) $generated@@431) ($generated@@136 ($generated@@363 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@216 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@149) ($generated@@216 $generated@@432 $generated@@47)) (and (= ($generated@@262 ($generated@@363 $generated@@3 $generated@@432)) $generated@@432) ($generated@@136 ($generated@@363 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@216 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@149) ($generated@@216 $generated@@433 $generated@@44)) (and (= ($generated@@262 ($generated@@363 $generated@@4 $generated@@433)) $generated@@433) ($generated@@136 ($generated@@363 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@216 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@149) ($generated@@216 $generated@@435 $generated@@45)) (and (= ($generated@@262 ($generated@@363 $generated@@434 $generated@@435)) $generated@@435) ($generated@@136 ($generated@@363 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@216 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@64) (= ($generated@@216 ($generated@@262 $generated@@436) $generated@@437) ($generated@@136 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@216 ($generated@@262 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@79 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@76 $generated@@439 $generated@@2)) (<= 0 ($generated@@275 $generated@@438))))
 :pattern ( ($generated@@275 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@257 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@256 $generated@@441)) (<= 0 ($generated@@255 $generated@@440))))
 :pattern ( ($generated@@255 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@391 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@391 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@391 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@391 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@72 ($generated@@391 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@399 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@399 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@399 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@72 ($generated@@399 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@149) (= (type $generated@@463) $generated@@149)) (= ($generated@@248 ($generated@@215 $generated@@462 $generated@@463)) $generated@@61))
 :pattern ( ($generated@@215 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@464 ($generated@@139 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@139 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@139 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@139 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@149) (= (type $generated@@473) $generated@@149)) (= ($generated@@147 ($generated@@215 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@215 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@149) (= (type $generated@@475) $generated@@149)) (= ($generated@@148 ($generated@@215 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@215 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 Int) ) (! (let (($generated@@479 ($generated@@257 (type $generated@@477))))
(= (type ($generated@@476 $generated@@477 $generated@@478)) $generated@@479))
 :pattern ( ($generated@@476 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@480) ($generated@@256 $generated@@149)) (= (type $generated@@481) $generated@@64)) (= (type $generated@@482) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@480 ($generated@@320 $generated@@481) $generated@@482) (forall (($generated@@483 Int) ) (!  (=> (and (<= 0 $generated@@483) (< $generated@@483 ($generated@@255 $generated@@480))) ($generated@@242 ($generated@@476 $generated@@480 $generated@@483) $generated@@481 $generated@@482))
 :pattern ( ($generated@@476 $generated@@480 $generated@@483))
))))
 :pattern ( ($generated@@74 $generated@@480 ($generated@@320 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@485 Int) ) (! (= ($generated@@484 ($generated@@75 $generated@@485)) $generated@@485)
 :pattern ( ($generated@@75 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@225 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@225 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@225 $generated@@489)) $generated@@54))
 :pattern ( ($generated@@225 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@490 ($generated@@230 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@230 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@493)) $generated@@55))
 :pattern ( ($generated@@230 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@154 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@154 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@154 $generated@@497)) $generated@@56))
 :pattern ( ($generated@@154 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@498 ($generated@@320 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@320 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@72 ($generated@@320 $generated@@501)) $generated@@57))
 :pattern ( ($generated@@320 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 (type $generated@@502)))
(= ($generated@@363 $generated@@503 ($generated@@262 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@262 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@64)) (= ($generated@@136 $generated@@504 ($generated@@391 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@504) $generated@@507))) (and ($generated@@216 ($generated@@81 ($generated@@364 $generated@@504) $generated@@507) $generated@@506) ($generated@@216 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@504) $generated@@507))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@136 $generated@@504 ($generated@@391 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@509) $generated@@64)) (= (type $generated@@510) $generated@@64)) (= ($generated@@136 $generated@@508 ($generated@@399 $generated@@509 $generated@@510)) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@508) $generated@@511))) (and ($generated@@216 ($generated@@81 ($generated@@374 $generated@@508) $generated@@511) $generated@@510) ($generated@@216 $generated@@511 $generated@@509)))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@508) $generated@@511))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@508) $generated@@511))
))))
 :pattern ( ($generated@@136 $generated@@508 ($generated@@399 $generated@@509 $generated@@510)))
)))
(assert  (=> (<= 0 $generated@@317) (forall (($generated@@512 T@U) ($generated@@513 Int) ) (!  (=> (and (= (type $generated@@512) ($generated@@256 $generated@@149)) (or ($generated@@319 ($generated@@237 $generated@@512) ($generated@@235 $generated@@513)) (and (not (= 0 $generated@@317)) ($generated@@136 $generated@@512 ($generated@@320 $generated@@46))))) (= ($generated@@318 ($generated@@237 $generated@@512) ($generated@@235 $generated@@513))  (and (and (<= ($generated@@235 0) ($generated@@235 $generated@@513)) (< $generated@@513 ($generated@@255 ($generated@@237 $generated@@512)))) (forall (($generated@@514 Int) ) (!  (=> true (and (and (=> (and (<= ($generated@@235 0) $generated@@514) (< $generated@@514 $generated@@513)) (not (= ($generated ($generated@@363 $generated@@2 ($generated@@476 ($generated@@237 $generated@@512) $generated@@514))) ($generated ($generated@@363 $generated@@2 ($generated@@476 ($generated@@237 $generated@@512) ($generated@@235 $generated@@513))))))) (=> (and (<= ($generated@@235 0) $generated@@514) (< $generated@@514 $generated@@513)) (not (= (- ($generated ($generated@@363 $generated@@2 ($generated@@476 ($generated@@237 $generated@@512) $generated@@514))) ($generated ($generated@@363 $generated@@2 ($generated@@476 ($generated@@237 $generated@@512) ($generated@@235 $generated@@513))))) (- $generated@@513 $generated@@514))))) (=> (and (<= ($generated@@235 0) $generated@@514) (< $generated@@514 $generated@@513)) (not (= (- ($generated ($generated@@363 $generated@@2 ($generated@@476 ($generated@@237 $generated@@512) ($generated@@235 $generated@@513)))) ($generated ($generated@@363 $generated@@2 ($generated@@476 ($generated@@237 $generated@@512) $generated@@514)))) (- $generated@@513 $generated@@514))))))
 :pattern ( ($generated@@363 $generated@@2 ($generated@@476 $generated@@512 $generated@@514)))
)))))
 :weight 3
 :pattern ( ($generated@@318 ($generated@@237 $generated@@512) ($generated@@235 $generated@@513)))
))))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@149) (= (type $generated@@518) $generated@@149)) (< ($generated@@515 $generated@@517) ($generated@@516 ($generated@@215 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@215 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@149) (= (type $generated@@520) $generated@@149)) (< ($generated@@515 $generated@@520) ($generated@@516 ($generated@@215 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@215 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@149) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) $generated@@64)) ($generated@@216 $generated@@521 ($generated@@391 $generated@@522 $generated@@523))) (and (= ($generated@@262 ($generated@@363 ($generated@@283 $generated@@149 $generated@@149) $generated@@521)) $generated@@521) ($generated@@136 ($generated@@363 ($generated@@283 $generated@@149 $generated@@149) $generated@@521) ($generated@@391 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@216 $generated@@521 ($generated@@391 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@149) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) ($generated@@216 $generated@@524 ($generated@@399 $generated@@525 $generated@@526))) (and (= ($generated@@262 ($generated@@363 ($generated@@301 $generated@@149 $generated@@149) $generated@@524)) $generated@@524) ($generated@@136 ($generated@@363 ($generated@@301 $generated@@149 $generated@@149) $generated@@524) ($generated@@399 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@216 $generated@@524 ($generated@@399 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@64) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@149)) ($generated@@216 $generated@@529 ($generated@@139 $generated@@527 $generated@@528))) (and (= ($generated@@262 ($generated@@363 $generated@@140 $generated@@529)) $generated@@529) ($generated@@136 ($generated@@363 $generated@@140 $generated@@529) ($generated@@139 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@216 $generated@@529 ($generated@@139 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
 (not ($generated@@0 ($generated@@81 ($generated@@410 $generated@@531) $generated@@530))))
 :pattern ( (let (($generated@@531 (type $generated@@530)))
($generated@@81 ($generated@@410 $generated@@531) $generated@@530)))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@69)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (and (= ($generated@@72 ($generated@@139 $generated@@534 $generated@@535)) $generated@@62) (= ($generated@@532 ($generated@@139 $generated@@534 $generated@@535)) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@534 $generated@@535))
)))
(assert  (=> (<= 0 $generated@@317) (forall (($generated@@536 T@U) ($generated@@537 Int) ) (!  (=> (and (= (type $generated@@536) ($generated@@256 $generated@@149)) (or ($generated@@319 $generated@@536 $generated@@537) (and (not (= 0 $generated@@317)) ($generated@@136 $generated@@536 ($generated@@320 $generated@@46))))) (= ($generated@@318 $generated@@536 $generated@@537)  (and (and (<= ($generated@@235 0) $generated@@537) (< $generated@@537 ($generated@@255 $generated@@536))) (forall (($generated@@538 Int) ) (!  (=> true (and (and (=> (and (<= ($generated@@235 0) $generated@@538) (< $generated@@538 $generated@@537)) (not (= ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@538))) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@537)))))) (=> (and (<= ($generated@@235 0) $generated@@538) (< $generated@@538 $generated@@537)) (not (= (- ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@538))) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@537)))) (- $generated@@537 $generated@@538))))) (=> (and (<= ($generated@@235 0) $generated@@538) (< $generated@@538 $generated@@537)) (not (= (- ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@537))) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@538)))) (- $generated@@537 $generated@@538))))))
 :pattern ( ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@538)))
)))))
 :pattern ( ($generated@@318 $generated@@536 $generated@@537))
))))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@140) (= ($generated@@515 ($generated@@262 $generated@@539)) ($generated@@516 $generated@@539)))
 :pattern ( ($generated@@515 ($generated@@262 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@149) ($generated@@216 $generated@@540 ($generated@@75 0))) (and (= ($generated@@262 ($generated@@363 $generated@@2 $generated@@540)) $generated@@540) ($generated@@136 ($generated@@363 ($generated@@76 $generated@@149 $generated@@4) $generated@@540) ($generated@@75 0))))
 :pattern ( ($generated@@216 $generated@@540 ($generated@@75 0)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@149) (= (type $generated@@542) $generated@@64)) ($generated@@216 $generated@@541 ($generated@@225 $generated@@542))) (and (= ($generated@@262 ($generated@@363 ($generated@@76 $generated@@149 $generated@@4) $generated@@541)) $generated@@541) ($generated@@136 ($generated@@363 ($generated@@76 $generated@@149 $generated@@4) $generated@@541) ($generated@@225 $generated@@542))))
 :pattern ( ($generated@@216 $generated@@541 ($generated@@225 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@149) (= (type $generated@@544) $generated@@64)) ($generated@@216 $generated@@543 ($generated@@230 $generated@@544))) (and (= ($generated@@262 ($generated@@363 ($generated@@76 $generated@@149 $generated@@4) $generated@@543)) $generated@@543) ($generated@@136 ($generated@@363 ($generated@@76 $generated@@149 $generated@@4) $generated@@543) ($generated@@230 $generated@@544))))
 :pattern ( ($generated@@216 $generated@@543 ($generated@@230 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@149) (= (type $generated@@546) $generated@@64)) ($generated@@216 $generated@@545 ($generated@@154 $generated@@546))) (and (= ($generated@@262 ($generated@@363 ($generated@@76 $generated@@149 $generated@@2) $generated@@545)) $generated@@545) ($generated@@136 ($generated@@363 ($generated@@76 $generated@@149 $generated@@2) $generated@@545) ($generated@@154 $generated@@546))))
 :pattern ( ($generated@@216 $generated@@545 ($generated@@154 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@149) (= (type $generated@@548) $generated@@64)) ($generated@@216 $generated@@547 ($generated@@320 $generated@@548))) (and (= ($generated@@262 ($generated@@363 ($generated@@256 $generated@@149) $generated@@547)) $generated@@547) ($generated@@136 ($generated@@363 ($generated@@256 $generated@@149) $generated@@547) ($generated@@320 $generated@@548))))
 :pattern ( ($generated@@216 $generated@@547 ($generated@@320 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@549 ($generated@@154 $generated@@550) $generated@@551) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@549 $generated@@552)))) ($generated@@242 $generated@@552 $generated@@550 $generated@@551))
 :pattern ( ($generated@@81 $generated@@549 $generated@@552))
))))
 :pattern ( ($generated@@74 $generated@@549 ($generated@@154 $generated@@550) $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@140) (= (type $generated@@554) $generated@@64)) (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@555) (and ($generated@@138 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@64) ($generated@@74 $generated@@553 ($generated@@139 $generated@@554 $generated@@556) $generated@@555))
 :pattern ( ($generated@@74 $generated@@553 ($generated@@139 $generated@@554 $generated@@556) $generated@@555))
))))) ($generated@@242 ($generated@@147 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@242 ($generated@@147 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@140) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@559) (and ($generated@@138 $generated@@557) (exists (($generated@@560 T@U) ) (!  (and (= (type $generated@@560) $generated@@64) ($generated@@74 $generated@@557 ($generated@@139 $generated@@560 $generated@@558) $generated@@559))
 :pattern ( ($generated@@74 $generated@@557 ($generated@@139 $generated@@560 $generated@@558) $generated@@559))
))))) ($generated@@242 ($generated@@148 $generated@@557) $generated@@558 $generated@@559))
 :pattern ( ($generated@@242 ($generated@@148 $generated@@557) $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@149) (= (type $generated@@562) $generated@@149)) (= ($generated@@215 ($generated@@237 $generated@@561) ($generated@@237 $generated@@562)) ($generated@@237 ($generated@@215 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@215 ($generated@@237 $generated@@561) ($generated@@237 $generated@@562)))
)))
(assert (forall (($generated@@563 Int) ) (! (= ($generated@@262 ($generated@@8 ($generated@@235 $generated@@563))) ($generated@@237 ($generated@@262 ($generated@@8 $generated@@563))))
 :pattern ( ($generated@@262 ($generated@@8 ($generated@@235 $generated@@563))))
)))
(assert (forall (($generated@@564 T@U) ) (! (= ($generated@@262 ($generated@@237 $generated@@564)) ($generated@@237 ($generated@@262 $generated@@564)))
 :pattern ( ($generated@@262 ($generated@@237 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@257 (type $generated@@565))))
 (=> (and (= (type $generated@@565) ($generated@@256 $generated@@566)) (= ($generated@@255 $generated@@565) 0)) (= $generated@@565 ($generated@@254 $generated@@566))))
 :pattern ( ($generated@@255 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@568)))
 (=> (and (and (= (type $generated@@567) ($generated@@76 $generated@@570 $generated@@2)) (= (type $generated@@569) $generated@@2)) (<= 0 ($generated $generated@@569))) (= ($generated@@275 ($generated@@82 $generated@@567 $generated@@568 $generated@@569)) (+ (- ($generated@@275 $generated@@567) ($generated ($generated@@81 $generated@@567 $generated@@568))) ($generated $generated@@569)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@567 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@2)) ($generated@@74 $generated@@572 $generated@@46 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@46 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@574) $generated@@3)) ($generated@@74 $generated@@574 $generated@@47 $generated@@573))
 :pattern ( ($generated@@74 $generated@@574 $generated@@47 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@4)) ($generated@@74 $generated@@576 $generated@@44 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@44 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@434)) ($generated@@74 $generated@@578 $generated@@45 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@45 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@149)) ($generated@@74 $generated@@580 $generated@@48 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@48 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@256 $generated@@149)) (= (type $generated@@582) $generated@@64)) (= ($generated@@136 $generated@@581 ($generated@@320 $generated@@582)) (forall (($generated@@583 Int) ) (!  (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@255 $generated@@581))) ($generated@@216 ($generated@@476 $generated@@581 $generated@@583) $generated@@582))
 :pattern ( ($generated@@476 $generated@@581 $generated@@583))
))))
 :pattern ( ($generated@@136 $generated@@581 ($generated@@320 $generated@@582)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 Int) ) (!  (=> (= (type $generated@@585) ($generated@@256 $generated@@149)) (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@255 $generated@@585))) (< ($generated@@516 ($generated@@363 $generated@@140 ($generated@@476 $generated@@585 $generated@@586))) ($generated@@584 $generated@@585))))
 :pattern ( ($generated@@516 ($generated@@363 $generated@@140 ($generated@@476 $generated@@585 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@588) $generated@@64)) (= (type $generated@@589) $generated@@64)) ($generated@@136 $generated@@587 ($generated@@391 $generated@@588 $generated@@589))) (and (and ($generated@@136 ($generated@@281 $generated@@587) ($generated@@225 $generated@@588)) ($generated@@136 ($generated@@331 $generated@@587) ($generated@@225 $generated@@589))) ($generated@@136 ($generated@@362 $generated@@587) ($generated@@225 ($generated@@139 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@136 $generated@@587 ($generated@@391 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@591) $generated@@64)) (= (type $generated@@592) $generated@@64)) ($generated@@136 $generated@@590 ($generated@@399 $generated@@591 $generated@@592))) (and (and ($generated@@136 ($generated@@299 $generated@@590) ($generated@@230 $generated@@591)) ($generated@@136 ($generated@@342 $generated@@590) ($generated@@230 $generated@@592))) ($generated@@136 ($generated@@373 $generated@@590) ($generated@@230 ($generated@@139 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@136 $generated@@590 ($generated@@399 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@2) ($generated@@136 $generated@@593 $generated@@46))
 :pattern ( ($generated@@136 $generated@@593 $generated@@46))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@3) ($generated@@136 $generated@@594 $generated@@47))
 :pattern ( ($generated@@136 $generated@@594 $generated@@47))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@4) ($generated@@136 $generated@@595 $generated@@44))
 :pattern ( ($generated@@136 $generated@@595 $generated@@44))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@434) ($generated@@136 $generated@@596 $generated@@45))
 :pattern ( ($generated@@136 $generated@@596 $generated@@45))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@149) ($generated@@136 $generated@@597 $generated@@48))
 :pattern ( ($generated@@136 $generated@@597 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@598 () Int)
(declare-fun $generated@@599 () Int)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () Int)
(declare-fun $generated@@603 () Bool)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () Int)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 (T@U) Bool)
(declare-fun $generated@@610 () T@U)
(assert  (and (and (and (and (and (and (= (type $generated@@600) ($generated@@256 $generated@@149)) (= (type $generated@@601) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@604) ($generated@@256 $generated@@149))) (= (type $generated@@606) ($generated@@161 $generated@@77 $generated@@4))) (= (type $generated@@607) $generated@@77)) (= (type $generated@@608) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@610) ($generated@@256 $generated@@149))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 40) (let (($generated@@611 true))
(let (($generated@@612 true))
(let (($generated@@613 true))
(let (($generated@@614 true))
(let (($generated@@615  (=> (and (not (and (<= ($generated@@235 0) $generated@@598) (< $generated@@598 $generated@@599))) (= (ControlFlow 0 7) 2)) $generated@@614)))
(let (($generated@@616  (=> (and (<= ($generated@@235 0) $generated@@598) (< $generated@@598 $generated@@599)) (=> (and (and ($generated@@74 $generated@@600 ($generated@@320 $generated@@46) $generated@@601) ($generated@@74 ($generated@@8 $generated@@598) $generated@@46 $generated@@601)) (and ($generated@@319 $generated@@600 $generated@@598) (= (ControlFlow 0 6) 2))) $generated@@614))))
(let (($generated@@617  (=> (< $generated@@598 ($generated@@235 0)) (and (=> (= (ControlFlow 0 9) 6) $generated@@616) (=> (= (ControlFlow 0 9) 7) $generated@@615)))))
(let (($generated@@618  (=> (<= ($generated@@235 0) $generated@@598) (and (=> (= (ControlFlow 0 8) 6) $generated@@616) (=> (= (ControlFlow 0 8) 7) $generated@@615)))))
(let (($generated@@619  (and (=> (= (ControlFlow 0 10) 8) $generated@@618) (=> (= (ControlFlow 0 10) 9) $generated@@617))))
(let (($generated@@620  (=> (and (= ($generated@@255 $generated@@600) $generated@@599) (forall (($generated@@621 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@621) (< $generated@@621 $generated@@599)) (<= ($generated@@235 0) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@600 $generated@@621))))) (=> (and (<= ($generated@@235 0) $generated@@621) (< $generated@@621 $generated@@599)) (< ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@600 $generated@@621))) $generated@@599))))
 :pattern ( ($generated@@363 $generated@@2 ($generated@@476 $generated@@600 $generated@@621)))
))) (and (=> (= (ControlFlow 0 11) 10) $generated@@619) (=> (= (ControlFlow 0 11) 5) $generated@@613)))))
(let (($generated@@622  (=> (and (not (and (= ($generated@@255 $generated@@600) $generated@@599) (forall (($generated@@623 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@623) (< $generated@@623 $generated@@599)) (<= ($generated@@235 0) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@600 $generated@@623))))) (=> (and (<= ($generated@@235 0) $generated@@623) (< $generated@@623 $generated@@599)) (< ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@600 $generated@@623))) $generated@@599))))
 :pattern ( ($generated@@363 $generated@@2 ($generated@@476 $generated@@600 $generated@@623)))
)))) (= (ControlFlow 0 4) 2)) $generated@@614)))
(let (($generated@@624  (=> (not (and (<= ($generated@@235 0) $generated@@602) (< $generated@@602 $generated@@599))) (and (=> (= (ControlFlow 0 17) 11) $generated@@620) (=> (= (ControlFlow 0 17) 4) $generated@@622)))))
(let (($generated@@625  (=> (and (<= ($generated@@235 0) $generated@@602) (< $generated@@602 $generated@@599)) (and (=> (= (ControlFlow 0 15) (- 0 16)) (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@255 $generated@@600)))) (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@255 $generated@@600))) (and (=> (= (ControlFlow 0 15) 11) $generated@@620) (=> (= (ControlFlow 0 15) 4) $generated@@622)))))))
(let (($generated@@626  (=> (< $generated@@602 ($generated@@235 0)) (and (=> (= (ControlFlow 0 19) 15) $generated@@625) (=> (= (ControlFlow 0 19) 17) $generated@@624)))))
(let (($generated@@627  (=> (<= ($generated@@235 0) $generated@@602) (and (=> (= (ControlFlow 0 18) 15) $generated@@625) (=> (= (ControlFlow 0 18) 17) $generated@@624)))))
(let (($generated@@628  (=> (=> (and (<= ($generated@@235 0) $generated@@602) (< $generated@@602 $generated@@599)) (<= ($generated@@235 0) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@600 $generated@@602))))) (and (=> (= (ControlFlow 0 20) 18) $generated@@627) (=> (= (ControlFlow 0 20) 19) $generated@@626)))))
(let (($generated@@629  (=> (not (=> (and (<= ($generated@@235 0) $generated@@602) (< $generated@@602 $generated@@599)) (<= ($generated@@235 0) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@600 $generated@@602)))))) (and (=> (= (ControlFlow 0 14) 11) $generated@@620) (=> (= (ControlFlow 0 14) 4) $generated@@622)))))
(let (($generated@@630  (=> (not (and (<= ($generated@@235 0) $generated@@602) (< $generated@@602 $generated@@599))) (and (=> (= (ControlFlow 0 23) 20) $generated@@628) (=> (= (ControlFlow 0 23) 14) $generated@@629)))))
(let (($generated@@631  (=> (and (<= ($generated@@235 0) $generated@@602) (< $generated@@602 $generated@@599)) (and (=> (= (ControlFlow 0 21) (- 0 22)) (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@255 $generated@@600)))) (=> (and (<= 0 $generated@@602) (< $generated@@602 ($generated@@255 $generated@@600))) (and (=> (= (ControlFlow 0 21) 20) $generated@@628) (=> (= (ControlFlow 0 21) 14) $generated@@629)))))))
(let (($generated@@632  (=> (< $generated@@602 ($generated@@235 0)) (and (=> (= (ControlFlow 0 25) 21) $generated@@631) (=> (= (ControlFlow 0 25) 23) $generated@@630)))))
(let (($generated@@633  (=> (<= ($generated@@235 0) $generated@@602) (and (=> (= (ControlFlow 0 24) 21) $generated@@631) (=> (= (ControlFlow 0 24) 23) $generated@@630)))))
(let (($generated@@634  (and (=> (= (ControlFlow 0 26) 24) $generated@@633) (=> (= (ControlFlow 0 26) 25) $generated@@632))))
(let (($generated@@635  (=> (= ($generated@@255 $generated@@600) $generated@@599) (and (=> (= (ControlFlow 0 27) 26) $generated@@634) (=> (= (ControlFlow 0 27) 13) $generated@@612)))))
(let (($generated@@636  (=> (not (= ($generated@@255 $generated@@600) $generated@@599)) (and (=> (= (ControlFlow 0 12) 11) $generated@@620) (=> (= (ControlFlow 0 12) 4) $generated@@622)))))
(let (($generated@@637  (=> (and ($generated@@136 $generated@@600 ($generated@@320 $generated@@46)) ($generated@@74 $generated@@600 ($generated@@320 $generated@@46) $generated@@601)) (and (=> (= (ControlFlow 0 28) 27) $generated@@635) (=> (= (ControlFlow 0 28) 12) $generated@@636)))))
(let (($generated@@638  (=> (and (not (and ($generated@@136 $generated@@600 ($generated@@320 $generated@@46)) ($generated@@74 $generated@@600 ($generated@@320 $generated@@46) $generated@@601))) (= (ControlFlow 0 3) 2)) $generated@@614)))
(let (($generated@@639  (=> (not $generated@@603) (and (=> (= (ControlFlow 0 29) 28) $generated@@637) (=> (= (ControlFlow 0 29) 3) $generated@@638)))))
(let (($generated@@640 true))
(let (($generated@@641  (=> (forall (($generated@@642 Int) ) (!  (=> true (=> (and (<= ($generated@@235 0) $generated@@642) (< $generated@@642 $generated@@599)) ($generated@@318 $generated@@604 $generated@@642)))
 :pattern ( ($generated@@318 $generated@@604 $generated@@642))
)) (and (=> (= (ControlFlow 0 32) 29) $generated@@639) (=> (= (ControlFlow 0 32) 1) $generated@@640)))))
(let (($generated@@643  (=> (and (not (and (<= ($generated@@235 0) $generated@@605) (< $generated@@605 $generated@@599))) (= (ControlFlow 0 34) 32)) $generated@@641)))
(let (($generated@@644  (=> (and (<= ($generated@@235 0) $generated@@605) (< $generated@@605 $generated@@599)) (=> (and (and ($generated@@74 $generated@@604 ($generated@@320 $generated@@46) $generated@@601) ($generated@@74 ($generated@@8 $generated@@605) $generated@@46 $generated@@601)) (and ($generated@@319 $generated@@604 $generated@@605) (= (ControlFlow 0 33) 32))) $generated@@641))))
(let (($generated@@645  (=> (< $generated@@605 ($generated@@235 0)) (and (=> (= (ControlFlow 0 36) 33) $generated@@644) (=> (= (ControlFlow 0 36) 34) $generated@@643)))))
(let (($generated@@646  (=> (<= ($generated@@235 0) $generated@@605) (and (=> (= (ControlFlow 0 35) 33) $generated@@644) (=> (= (ControlFlow 0 35) 34) $generated@@643)))))
(let (($generated@@647  (and (=> (= (ControlFlow 0 37) 35) $generated@@646) (=> (= (ControlFlow 0 37) 36) $generated@@645))))
(let (($generated@@648  (=> (and $generated@@603 (= ($generated@@255 $generated@@604) $generated@@599)) (and (=> (= (ControlFlow 0 38) 37) $generated@@647) (=> (= (ControlFlow 0 38) 31) $generated@@611)))))
(let (($generated@@649  (=> (=> $generated@@603 (and (= ($generated@@255 $generated@@604) $generated@@599) (forall (($generated@@650 Int) ) (!  (=> true (=> (and (<= ($generated@@235 0) $generated@@650) (< $generated@@650 $generated@@599)) ($generated@@318 $generated@@604 $generated@@650)))
 :pattern ( ($generated@@318 $generated@@604 $generated@@650))
)))) (and (=> (= (ControlFlow 0 30) 29) $generated@@639) (=> (= (ControlFlow 0 30) 1) $generated@@640)))))
(let (($generated@@651  (=> (and (and (and (= $generated@@606 ($generated@@160 $generated@@607 $generated@@608 $generated@@60 false)) (<= ($generated@@235 0) $generated@@599)) (and ($generated@@241 $generated@@601) ($generated@@609 $generated@@601))) (and (and (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@77) (=> (and (not (= $generated@@652 $generated@@607)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@608 $generated@@652) $generated@@60))) (= ($generated@@81 $generated@@601 $generated@@652) ($generated@@81 $generated@@608 $generated@@652))))
 :pattern ( ($generated@@81 $generated@@601 $generated@@652))
)) ($generated@@132 $generated@@608 $generated@@601)) (and ($generated@@136 $generated@@604 ($generated@@320 $generated@@46)) ($generated@@74 $generated@@604 ($generated@@320 $generated@@46) $generated@@601)))) (and (=> (= (ControlFlow 0 39) 38) $generated@@648) (=> (= (ControlFlow 0 39) 30) $generated@@649)))))
(let (($generated@@653  (=> (and ($generated@@241 $generated@@608) ($generated@@609 $generated@@608)) (=> (and (and ($generated@@136 $generated@@610 ($generated@@320 $generated@@46)) ($generated@@74 $generated@@610 ($generated@@320 $generated@@46) $generated@@608)) (and (= 2 $generated@@317) (= (ControlFlow 0 40) 39))) $generated@@651))))
$generated@@653)))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) Bool)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (Int) Int)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@T) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@317 () Int)
(declare-fun $generated@@318 (T@U Int) Bool)
(declare-fun $generated@@319 (T@U Int) Bool)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@T T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U Int) T@U)
(declare-fun $generated@@484 (T@U) Int)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@553 (T@U T@U Int) Bool)
(declare-fun $generated@@590 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and (= (type $generated@@133) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@132 $generated@@133 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@133 $generated@@135) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60))
)))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) $generated@@64)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@158) $generated@@64)) ($generated@@136 $generated@@157 ($generated@@154 $generated@@158))) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@136 $generated@@157 ($generated@@154 $generated@@158)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@77 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@67 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@77) (= (type $generated@@209) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@210) ($generated@@66 $generated@@4))) (= (type $generated@@212) $generated@@77)) (= (type $generated@@213) ($generated@@66 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= (type ($generated@@215 $generated@@217 $generated@@218)) $generated@@140)
 :pattern ( ($generated@@215 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@64) (= (type $generated@@220) $generated@@64)) (= (type $generated@@221) $generated@@149)) (= (type $generated@@222) $generated@@149)) (= ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220))  (and ($generated@@216 $generated@@221 $generated@@219) ($generated@@216 $generated@@222 $generated@@220))))
 :pattern ( ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@140) (= (type $generated@@224) $generated@@140)) (= ($generated@@146 $generated@@223 $generated@@224) (= $generated@@223 $generated@@224)))
 :pattern ( ($generated@@146 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (! (= (type ($generated@@225 $generated@@226)) $generated@@64)
 :pattern ( ($generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@228) $generated@@64)) (= ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)) (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@149) ($generated@@0 ($generated@@81 $generated@@227 $generated@@229))) ($generated@@216 $generated@@229 $generated@@228))
 :pattern ( ($generated@@81 $generated@@227 $generated@@229))
))))
 :pattern ( ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@149) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@216 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 Int) ) (! (= ($generated@@235 $generated@@236) $generated@@236)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(= (type ($generated@@237 $generated@@238)) $generated@@239))
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= ($generated@@237 $generated@@240) $generated@@240)
 :pattern ( ($generated@@237 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@243) $generated@@64) (= (type $generated@@244) $generated@@64)) (= (type $generated@@245) $generated@@149)) (= (type $generated@@246) $generated@@149)) (= (type $generated@@247) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@241 $generated@@247)) (= ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247)  (and ($generated@@242 $generated@@245 $generated@@243 $generated@@247) ($generated@@242 $generated@@246 $generated@@244 $generated@@247))))
 :pattern ( ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@68)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@140) (= ($generated@@138 $generated@@250) (= ($generated@@248 $generated@@250) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@140) ($generated@@138 $generated@@251)) (exists (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (and (and (= (type $generated@@252) $generated@@149) (= (type $generated@@253) $generated@@149)) (= $generated@@251 ($generated@@215 $generated@@252 $generated@@253)))
 :no-pattern (type $generated@@252)
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@252)
 :no-pattern ($generated@@0 $generated@@252)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
)))
 :pattern ( ($generated@@138 $generated@@251))
)))
(assert  (and (and (forall (($generated@@258 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@258)) 17)) (forall (($generated@@259 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@259)) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
))) (forall (($generated@@260 T@T) ) (! (= (type ($generated@@254 $generated@@260)) ($generated@@256 $generated@@260))
 :pattern ( ($generated@@254 $generated@@260))
))))
(assert (forall (($generated@@261 T@T) ) (! (= ($generated@@255 ($generated@@254 $generated@@261)) 0)
 :pattern ( ($generated@@254 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@149)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@64) (= (type $generated@@266) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266) ($generated@@74 $generated@@264 $generated@@265 $generated@@266)))
 :pattern ( ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@269) $generated@@149)) (= (type $generated@@270) $generated@@64)) ($generated@@132 $generated@@267 $generated@@268)) ($generated@@242 $generated@@269 $generated@@270 $generated@@267)) ($generated@@242 $generated@@269 $generated@@270 $generated@@268))
 :pattern ( ($generated@@132 $generated@@267 $generated@@268) ($generated@@242 $generated@@269 $generated@@270 $generated@@267))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@271) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@272) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@274) $generated@@64)) ($generated@@132 $generated@@271 $generated@@272)) ($generated@@74 $generated@@273 $generated@@274 $generated@@271)) ($generated@@74 $generated@@273 $generated@@274 $generated@@272))
 :pattern ( ($generated@@132 $generated@@271 $generated@@272) ($generated@@74 $generated@@273 $generated@@274 $generated@@271))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@64)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert  (=> (<= 0 $generated@@317) (forall (($generated@@322 T@U) ($generated@@323 Int) ) (!  (=> (and (= (type $generated@@322) ($generated@@256 $generated@@149)) (or ($generated@@319 $generated@@322 $generated@@323) (and (not (= 0 $generated@@317)) ($generated@@136 $generated@@322 ($generated@@320 $generated@@46))))) true)
 :pattern ( ($generated@@318 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@79 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@76 $generated@@325 $generated@@2)) (= ($generated@@155 $generated@@324) (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@325) (and (<= 0 ($generated ($generated@@81 $generated@@324 $generated@@326))) (<= ($generated ($generated@@81 $generated@@324 $generated@@326)) ($generated@@275 $generated@@324))))
 :pattern ( ($generated@@81 $generated@@324 $generated@@326))
)))))
 :pattern ( ($generated@@155 $generated@@324))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@285 (type $generated@@327))))
(let (($generated@@329 ($generated@@284 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@283 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@282 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@281 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@285 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@76 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@285 (type $generated@@334))))
(let (($generated@@336 ($generated@@284 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@283 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@282 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@81 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@299 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@303 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@76 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@303 (type $generated@@345))))
(let (($generated@@347 ($generated@@302 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@301 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@300 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@81 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@350) $generated@@64)) (= ($generated@@136 $generated@@349 ($generated@@154 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@349 $generated@@351)))) ($generated@@216 $generated@@351 $generated@@350))
 :pattern ( ($generated@@81 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@136 $generated@@349 ($generated@@154 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@353) $generated@@64)) (= (type $generated@@354) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@352 ($generated@@225 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@149) ($generated@@0 ($generated@@81 $generated@@352 $generated@@355))) ($generated@@242 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@81 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@74 $generated@@352 ($generated@@225 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@357) $generated@@64)) (= (type $generated@@358) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@356 ($generated@@230 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@149) ($generated@@0 ($generated@@81 $generated@@356 $generated@@359))) ($generated@@242 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@81 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@74 $generated@@356 ($generated@@230 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@81 ($generated@@276 $generated@@361) $generated@@360)))
)))
(assert  (and (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@362 $generated@@365)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@362 $generated@@365))
)) (forall (($generated@@366 T@T) ($generated@@367 T@U) ) (! (= (type ($generated@@363 $generated@@366 $generated@@367)) $generated@@366)
 :pattern ( ($generated@@363 $generated@@366 $generated@@367))
))) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@285 (type $generated@@368))))
(let (($generated@@370 ($generated@@284 (type $generated@@368))))
(= (type ($generated@@364 $generated@@368)) ($generated@@76 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@364 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@372) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@362 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@371) ($generated@@147 ($generated@@363 $generated@@140 $generated@@372)))) (= ($generated@@81 ($generated@@364 $generated@@371) ($generated@@147 ($generated@@363 $generated@@140 $generated@@372))) ($generated@@148 ($generated@@363 $generated@@140 $generated@@372))))))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@303 (type $generated@@376))))
(let (($generated@@378 ($generated@@302 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@76 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@380) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@379) ($generated@@147 ($generated@@363 $generated@@140 $generated@@380)))) (= ($generated@@81 ($generated@@374 $generated@@379) ($generated@@147 ($generated@@363 $generated@@140 $generated@@380))) ($generated@@148 ($generated@@363 $generated@@140 $generated@@380))))))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@284 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@283 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@81 ($generated@@331 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@81 ($generated@@364 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@381) $generated@@385))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@81 ($generated@@331 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@302 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@301 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@81 ($generated@@342 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@81 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@386) $generated@@390))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@81 ($generated@@342 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@64)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@394) $generated@@398))) (and ($generated@@242 ($generated@@81 ($generated@@364 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@242 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@394) $generated@@398))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@64)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@402) $generated@@406))) (and ($generated@@242 ($generated@@81 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@242 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@407) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@408) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@407 $generated@@409))) (and ($generated@@132 $generated@@407 $generated@@408) ($generated@@132 $generated@@408 $generated@@409))) ($generated@@132 $generated@@407 $generated@@409))
 :pattern ( ($generated@@132 $generated@@407 $generated@@408) ($generated@@132 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@76 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@303 (type $generated@@412))))
(let (($generated@@414 ($generated@@302 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@301 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@300 $generated@@414 $generated@@413)) (= ($generated@@299 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@299 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@303 (type $generated@@415))))
(let (($generated@@417 ($generated@@302 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@301 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@300 $generated@@417 $generated@@416)) (= ($generated@@342 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@342 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@303 (type $generated@@418))))
(let (($generated@@420 ($generated@@302 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@301 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@300 $generated@@420 $generated@@419)) (= ($generated@@373 $generated@@418) ($generated@@410 $generated@@149))))))
 :pattern ( ($generated@@373 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@285 (type $generated@@421))))
(let (($generated@@423 ($generated@@284 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@283 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@282 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@149) (= (type $generated@@425) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@362 $generated@@421) ($generated@@262 ($generated@@215 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@362 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@303 (type $generated@@426))))
(let (($generated@@428 ($generated@@302 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@301 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@300 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@149) (= (type $generated@@430) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@373 $generated@@426) ($generated@@262 ($generated@@215 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@149) ($generated@@216 $generated@@431 $generated@@46)) (and (= ($generated@@262 ($generated@@363 $generated@@2 $generated@@431)) $generated@@431) ($generated@@136 ($generated@@363 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@216 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@149) ($generated@@216 $generated@@432 $generated@@47)) (and (= ($generated@@262 ($generated@@363 $generated@@3 $generated@@432)) $generated@@432) ($generated@@136 ($generated@@363 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@216 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@149) ($generated@@216 $generated@@433 $generated@@44)) (and (= ($generated@@262 ($generated@@363 $generated@@4 $generated@@433)) $generated@@433) ($generated@@136 ($generated@@363 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@216 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@149) ($generated@@216 $generated@@435 $generated@@45)) (and (= ($generated@@262 ($generated@@363 $generated@@434 $generated@@435)) $generated@@435) ($generated@@136 ($generated@@363 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@216 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@64) (= ($generated@@216 ($generated@@262 $generated@@436) $generated@@437) ($generated@@136 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@216 ($generated@@262 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@79 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@76 $generated@@439 $generated@@2)) (<= 0 ($generated@@275 $generated@@438))))
 :pattern ( ($generated@@275 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@257 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@256 $generated@@441)) (<= 0 ($generated@@255 $generated@@440))))
 :pattern ( ($generated@@255 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@391 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@391 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@391 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@391 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@72 ($generated@@391 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@399 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@399 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@399 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@72 ($generated@@399 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@149) (= (type $generated@@463) $generated@@149)) (= ($generated@@248 ($generated@@215 $generated@@462 $generated@@463)) $generated@@61))
 :pattern ( ($generated@@215 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@464 ($generated@@139 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@139 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@139 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@139 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@149) (= (type $generated@@473) $generated@@149)) (= ($generated@@147 ($generated@@215 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@215 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@149) (= (type $generated@@475) $generated@@149)) (= ($generated@@148 ($generated@@215 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@215 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 Int) ) (! (let (($generated@@479 ($generated@@257 (type $generated@@477))))
(= (type ($generated@@476 $generated@@477 $generated@@478)) $generated@@479))
 :pattern ( ($generated@@476 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@480) ($generated@@256 $generated@@149)) (= (type $generated@@481) $generated@@64)) (= (type $generated@@482) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@480 ($generated@@320 $generated@@481) $generated@@482) (forall (($generated@@483 Int) ) (!  (=> (and (<= 0 $generated@@483) (< $generated@@483 ($generated@@255 $generated@@480))) ($generated@@242 ($generated@@476 $generated@@480 $generated@@483) $generated@@481 $generated@@482))
 :pattern ( ($generated@@476 $generated@@480 $generated@@483))
))))
 :pattern ( ($generated@@74 $generated@@480 ($generated@@320 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@485 Int) ) (! (= ($generated@@484 ($generated@@75 $generated@@485)) $generated@@485)
 :pattern ( ($generated@@75 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@225 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@225 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@225 $generated@@489)) $generated@@54))
 :pattern ( ($generated@@225 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@490 ($generated@@230 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@230 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@493)) $generated@@55))
 :pattern ( ($generated@@230 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@154 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@154 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@154 $generated@@497)) $generated@@56))
 :pattern ( ($generated@@154 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@498 ($generated@@320 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@320 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@72 ($generated@@320 $generated@@501)) $generated@@57))
 :pattern ( ($generated@@320 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 (type $generated@@502)))
(= ($generated@@363 $generated@@503 ($generated@@262 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@262 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@64)) (= ($generated@@136 $generated@@504 ($generated@@391 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@504) $generated@@507))) (and ($generated@@216 ($generated@@81 ($generated@@364 $generated@@504) $generated@@507) $generated@@506) ($generated@@216 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@504) $generated@@507))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@136 $generated@@504 ($generated@@391 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@509) $generated@@64)) (= (type $generated@@510) $generated@@64)) (= ($generated@@136 $generated@@508 ($generated@@399 $generated@@509 $generated@@510)) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@508) $generated@@511))) (and ($generated@@216 ($generated@@81 ($generated@@374 $generated@@508) $generated@@511) $generated@@510) ($generated@@216 $generated@@511 $generated@@509)))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@508) $generated@@511))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@508) $generated@@511))
))))
 :pattern ( ($generated@@136 $generated@@508 ($generated@@399 $generated@@509 $generated@@510)))
)))
(assert  (=> (<= 0 $generated@@317) (forall (($generated@@512 T@U) ($generated@@513 Int) ) (!  (=> (and (= (type $generated@@512) ($generated@@256 $generated@@149)) (or ($generated@@319 ($generated@@237 $generated@@512) ($generated@@235 $generated@@513)) (and (not (= 0 $generated@@317)) ($generated@@136 $generated@@512 ($generated@@320 $generated@@46))))) (= ($generated@@318 ($generated@@237 $generated@@512) ($generated@@235 $generated@@513))  (and (and (<= ($generated@@235 0) ($generated@@235 $generated@@513)) (< $generated@@513 ($generated@@255 ($generated@@237 $generated@@512)))) (forall (($generated@@514 Int) ) (!  (=> true (and (and (=> (and (<= ($generated@@235 0) $generated@@514) (< $generated@@514 $generated@@513)) (not (= ($generated ($generated@@363 $generated@@2 ($generated@@476 ($generated@@237 $generated@@512) $generated@@514))) ($generated ($generated@@363 $generated@@2 ($generated@@476 ($generated@@237 $generated@@512) ($generated@@235 $generated@@513))))))) (=> (and (<= ($generated@@235 0) $generated@@514) (< $generated@@514 $generated@@513)) (not (= (- ($generated ($generated@@363 $generated@@2 ($generated@@476 ($generated@@237 $generated@@512) $generated@@514))) ($generated ($generated@@363 $generated@@2 ($generated@@476 ($generated@@237 $generated@@512) ($generated@@235 $generated@@513))))) (- $generated@@513 $generated@@514))))) (=> (and (<= ($generated@@235 0) $generated@@514) (< $generated@@514 $generated@@513)) (not (= (- ($generated ($generated@@363 $generated@@2 ($generated@@476 ($generated@@237 $generated@@512) ($generated@@235 $generated@@513)))) ($generated ($generated@@363 $generated@@2 ($generated@@476 ($generated@@237 $generated@@512) $generated@@514)))) (- $generated@@513 $generated@@514))))))
 :pattern ( ($generated@@363 $generated@@2 ($generated@@476 $generated@@512 $generated@@514)))
)))))
 :weight 3
 :pattern ( ($generated@@318 ($generated@@237 $generated@@512) ($generated@@235 $generated@@513)))
))))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@149) (= (type $generated@@518) $generated@@149)) (< ($generated@@515 $generated@@517) ($generated@@516 ($generated@@215 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@215 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@149) (= (type $generated@@520) $generated@@149)) (< ($generated@@515 $generated@@520) ($generated@@516 ($generated@@215 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@215 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@149) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) $generated@@64)) ($generated@@216 $generated@@521 ($generated@@391 $generated@@522 $generated@@523))) (and (= ($generated@@262 ($generated@@363 ($generated@@283 $generated@@149 $generated@@149) $generated@@521)) $generated@@521) ($generated@@136 ($generated@@363 ($generated@@283 $generated@@149 $generated@@149) $generated@@521) ($generated@@391 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@216 $generated@@521 ($generated@@391 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@149) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) ($generated@@216 $generated@@524 ($generated@@399 $generated@@525 $generated@@526))) (and (= ($generated@@262 ($generated@@363 ($generated@@301 $generated@@149 $generated@@149) $generated@@524)) $generated@@524) ($generated@@136 ($generated@@363 ($generated@@301 $generated@@149 $generated@@149) $generated@@524) ($generated@@399 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@216 $generated@@524 ($generated@@399 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@64) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@149)) ($generated@@216 $generated@@529 ($generated@@139 $generated@@527 $generated@@528))) (and (= ($generated@@262 ($generated@@363 $generated@@140 $generated@@529)) $generated@@529) ($generated@@136 ($generated@@363 $generated@@140 $generated@@529) ($generated@@139 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@216 $generated@@529 ($generated@@139 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
 (not ($generated@@0 ($generated@@81 ($generated@@410 $generated@@531) $generated@@530))))
 :pattern ( (let (($generated@@531 (type $generated@@530)))
($generated@@81 ($generated@@410 $generated@@531) $generated@@530)))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@69)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (and (= ($generated@@72 ($generated@@139 $generated@@534 $generated@@535)) $generated@@62) (= ($generated@@532 ($generated@@139 $generated@@534 $generated@@535)) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@534 $generated@@535))
)))
(assert  (=> (<= 0 $generated@@317) (forall (($generated@@536 T@U) ($generated@@537 Int) ) (!  (=> (and (= (type $generated@@536) ($generated@@256 $generated@@149)) (or ($generated@@319 $generated@@536 $generated@@537) (and (not (= 0 $generated@@317)) ($generated@@136 $generated@@536 ($generated@@320 $generated@@46))))) (= ($generated@@318 $generated@@536 $generated@@537)  (and (and (<= ($generated@@235 0) $generated@@537) (< $generated@@537 ($generated@@255 $generated@@536))) (forall (($generated@@538 Int) ) (!  (=> true (and (and (=> (and (<= ($generated@@235 0) $generated@@538) (< $generated@@538 $generated@@537)) (not (= ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@538))) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@537)))))) (=> (and (<= ($generated@@235 0) $generated@@538) (< $generated@@538 $generated@@537)) (not (= (- ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@538))) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@537)))) (- $generated@@537 $generated@@538))))) (=> (and (<= ($generated@@235 0) $generated@@538) (< $generated@@538 $generated@@537)) (not (= (- ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@537))) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@538)))) (- $generated@@537 $generated@@538))))))
 :pattern ( ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@538)))
)))))
 :pattern ( ($generated@@318 $generated@@536 $generated@@537))
))))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@140) (= ($generated@@515 ($generated@@262 $generated@@539)) ($generated@@516 $generated@@539)))
 :pattern ( ($generated@@515 ($generated@@262 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@149) ($generated@@216 $generated@@540 ($generated@@75 0))) (and (= ($generated@@262 ($generated@@363 $generated@@2 $generated@@540)) $generated@@540) ($generated@@136 ($generated@@363 ($generated@@76 $generated@@149 $generated@@4) $generated@@540) ($generated@@75 0))))
 :pattern ( ($generated@@216 $generated@@540 ($generated@@75 0)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@149) (= (type $generated@@542) $generated@@64)) ($generated@@216 $generated@@541 ($generated@@225 $generated@@542))) (and (= ($generated@@262 ($generated@@363 ($generated@@76 $generated@@149 $generated@@4) $generated@@541)) $generated@@541) ($generated@@136 ($generated@@363 ($generated@@76 $generated@@149 $generated@@4) $generated@@541) ($generated@@225 $generated@@542))))
 :pattern ( ($generated@@216 $generated@@541 ($generated@@225 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@149) (= (type $generated@@544) $generated@@64)) ($generated@@216 $generated@@543 ($generated@@230 $generated@@544))) (and (= ($generated@@262 ($generated@@363 ($generated@@76 $generated@@149 $generated@@4) $generated@@543)) $generated@@543) ($generated@@136 ($generated@@363 ($generated@@76 $generated@@149 $generated@@4) $generated@@543) ($generated@@230 $generated@@544))))
 :pattern ( ($generated@@216 $generated@@543 ($generated@@230 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@149) (= (type $generated@@546) $generated@@64)) ($generated@@216 $generated@@545 ($generated@@154 $generated@@546))) (and (= ($generated@@262 ($generated@@363 ($generated@@76 $generated@@149 $generated@@2) $generated@@545)) $generated@@545) ($generated@@136 ($generated@@363 ($generated@@76 $generated@@149 $generated@@2) $generated@@545) ($generated@@154 $generated@@546))))
 :pattern ( ($generated@@216 $generated@@545 ($generated@@154 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@149) (= (type $generated@@548) $generated@@64)) ($generated@@216 $generated@@547 ($generated@@320 $generated@@548))) (and (= ($generated@@262 ($generated@@363 ($generated@@256 $generated@@149) $generated@@547)) $generated@@547) ($generated@@136 ($generated@@363 ($generated@@256 $generated@@149) $generated@@547) ($generated@@320 $generated@@548))))
 :pattern ( ($generated@@216 $generated@@547 ($generated@@320 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@549 ($generated@@154 $generated@@550) $generated@@551) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@549 $generated@@552)))) ($generated@@242 $generated@@552 $generated@@550 $generated@@551))
 :pattern ( ($generated@@81 $generated@@549 $generated@@552))
))))
 :pattern ( ($generated@@74 $generated@@549 ($generated@@154 $generated@@550) $generated@@551))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 Int) ) (! (let (($generated@@557 ($generated@@257 (type $generated@@554))))
 (=> (and (= (type $generated@@554) ($generated@@256 $generated@@557)) (= (type $generated@@555) ($generated@@256 $generated@@557))) (= ($generated@@553 $generated@@554 $generated@@555 $generated@@556) (forall (($generated@@558 Int) ) (!  (=> (and (<= 0 $generated@@558) (< $generated@@558 $generated@@556)) (= ($generated@@476 $generated@@554 $generated@@558) ($generated@@476 $generated@@555 $generated@@558)))
 :pattern ( ($generated@@476 $generated@@554 $generated@@558))
 :pattern ( ($generated@@476 $generated@@555 $generated@@558))
)))))
 :pattern ( ($generated@@553 $generated@@554 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@140) (= (type $generated@@560) $generated@@64)) (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@561) (and ($generated@@138 $generated@@559) (exists (($generated@@562 T@U) ) (!  (and (= (type $generated@@562) $generated@@64) ($generated@@74 $generated@@559 ($generated@@139 $generated@@560 $generated@@562) $generated@@561))
 :pattern ( ($generated@@74 $generated@@559 ($generated@@139 $generated@@560 $generated@@562) $generated@@561))
))))) ($generated@@242 ($generated@@147 $generated@@559) $generated@@560 $generated@@561))
 :pattern ( ($generated@@242 ($generated@@147 $generated@@559) $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@140) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@565) (and ($generated@@138 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@64) ($generated@@74 $generated@@563 ($generated@@139 $generated@@566 $generated@@564) $generated@@565))
 :pattern ( ($generated@@74 $generated@@563 ($generated@@139 $generated@@566 $generated@@564) $generated@@565))
))))) ($generated@@242 ($generated@@148 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@242 ($generated@@148 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@149) (= (type $generated@@568) $generated@@149)) (= ($generated@@215 ($generated@@237 $generated@@567) ($generated@@237 $generated@@568)) ($generated@@237 ($generated@@215 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@215 ($generated@@237 $generated@@567) ($generated@@237 $generated@@568)))
)))
(assert (forall (($generated@@569 Int) ) (! (= ($generated@@262 ($generated@@8 ($generated@@235 $generated@@569))) ($generated@@237 ($generated@@262 ($generated@@8 $generated@@569))))
 :pattern ( ($generated@@262 ($generated@@8 ($generated@@235 $generated@@569))))
)))
(assert (forall (($generated@@570 T@U) ) (! (= ($generated@@262 ($generated@@237 $generated@@570)) ($generated@@237 ($generated@@262 $generated@@570)))
 :pattern ( ($generated@@262 ($generated@@237 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@257 (type $generated@@571))))
 (=> (and (= (type $generated@@571) ($generated@@256 $generated@@572)) (= ($generated@@255 $generated@@571) 0)) (= $generated@@571 ($generated@@254 $generated@@572))))
 :pattern ( ($generated@@255 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@574)))
 (=> (and (and (= (type $generated@@573) ($generated@@76 $generated@@576 $generated@@2)) (= (type $generated@@575) $generated@@2)) (<= 0 ($generated $generated@@575))) (= ($generated@@275 ($generated@@82 $generated@@573 $generated@@574 $generated@@575)) (+ (- ($generated@@275 $generated@@573) ($generated ($generated@@81 $generated@@573 $generated@@574))) ($generated $generated@@575)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@573 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@2)) ($generated@@74 $generated@@578 $generated@@46 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@46 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@3)) ($generated@@74 $generated@@580 $generated@@47 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@47 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@4)) ($generated@@74 $generated@@582 $generated@@44 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@44 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@434)) ($generated@@74 $generated@@584 $generated@@45 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@45 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@149)) ($generated@@74 $generated@@586 $generated@@48 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@48 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@256 $generated@@149)) (= (type $generated@@588) $generated@@64)) (= ($generated@@136 $generated@@587 ($generated@@320 $generated@@588)) (forall (($generated@@589 Int) ) (!  (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@255 $generated@@587))) ($generated@@216 ($generated@@476 $generated@@587 $generated@@589) $generated@@588))
 :pattern ( ($generated@@476 $generated@@587 $generated@@589))
))))
 :pattern ( ($generated@@136 $generated@@587 ($generated@@320 $generated@@588)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 Int) ) (!  (=> (= (type $generated@@591) ($generated@@256 $generated@@149)) (=> (and (<= 0 $generated@@592) (< $generated@@592 ($generated@@255 $generated@@591))) (< ($generated@@516 ($generated@@363 $generated@@140 ($generated@@476 $generated@@591 $generated@@592))) ($generated@@590 $generated@@591))))
 :pattern ( ($generated@@516 ($generated@@363 $generated@@140 ($generated@@476 $generated@@591 $generated@@592))))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@594) $generated@@64)) (= (type $generated@@595) $generated@@64)) ($generated@@136 $generated@@593 ($generated@@391 $generated@@594 $generated@@595))) (and (and ($generated@@136 ($generated@@281 $generated@@593) ($generated@@225 $generated@@594)) ($generated@@136 ($generated@@331 $generated@@593) ($generated@@225 $generated@@595))) ($generated@@136 ($generated@@362 $generated@@593) ($generated@@225 ($generated@@139 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@136 $generated@@593 ($generated@@391 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@597) $generated@@64)) (= (type $generated@@598) $generated@@64)) ($generated@@136 $generated@@596 ($generated@@399 $generated@@597 $generated@@598))) (and (and ($generated@@136 ($generated@@299 $generated@@596) ($generated@@230 $generated@@597)) ($generated@@136 ($generated@@342 $generated@@596) ($generated@@230 $generated@@598))) ($generated@@136 ($generated@@373 $generated@@596) ($generated@@230 ($generated@@139 $generated@@597 $generated@@598)))))
 :pattern ( ($generated@@136 $generated@@596 ($generated@@399 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@2) ($generated@@136 $generated@@599 $generated@@46))
 :pattern ( ($generated@@136 $generated@@599 $generated@@46))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@3) ($generated@@136 $generated@@600 $generated@@47))
 :pattern ( ($generated@@136 $generated@@600 $generated@@47))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@4) ($generated@@136 $generated@@601 $generated@@44))
 :pattern ( ($generated@@136 $generated@@601 $generated@@44))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@434) ($generated@@136 $generated@@602 $generated@@45))
 :pattern ( ($generated@@136 $generated@@602 $generated@@45))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@149) ($generated@@136 $generated@@603 $generated@@48))
 :pattern ( ($generated@@136 $generated@@603 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () T@U)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () Int)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 (T@U) Bool)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () Bool)
(declare-fun $generated@@614 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@604) ($generated@@161 $generated@@77 $generated@@4)) (= (type $generated@@605) $generated@@77)) (= (type $generated@@606) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@607) ($generated@@256 $generated@@149))) (= (type $generated@@608) ($generated@@256 $generated@@149))) (= (type $generated@@610) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@612) ($generated@@256 $generated@@149))) (= (type $generated@@614) ($generated@@256 $generated@@149))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@615  (=> (and (and (= $generated@@604 ($generated@@160 $generated@@605 $generated@@606 $generated@@60 false)) (= $generated@@607 ($generated@@237 ($generated@@254 $generated@@149)))) (and ($generated@@136 $generated@@608 ($generated@@320 $generated@@46)) ($generated@@74 $generated@@608 ($generated@@320 $generated@@46) $generated@@606))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (<= ($generated@@235 0) $generated@@609)) (=> (<= ($generated@@235 0) $generated@@609) (and (=> (= (ControlFlow 0 2) (- 0 6)) (<= ($generated@@255 $generated@@607) $generated@@609)) (=> (<= ($generated@@255 $generated@@607) $generated@@609) (and (=> (= (ControlFlow 0 2) (- 0 5)) (forall (($generated@@616 Int) ) (!  (=> true (=> (and (<= ($generated@@235 0) $generated@@616) (< $generated@@616 ($generated@@255 $generated@@607))) ($generated@@318 $generated@@607 $generated@@616)))
 :pattern ( ($generated@@318 $generated@@607 $generated@@616))
))) (=> (forall (($generated@@617 Int) ) (!  (=> true (=> (and (<= ($generated@@235 0) $generated@@617) (< $generated@@617 ($generated@@255 $generated@@607))) ($generated@@318 $generated@@607 $generated@@617)))
 :pattern ( ($generated@@318 $generated@@607 $generated@@617))
)) (=> (and ($generated@@241 $generated@@610) ($generated@@611 $generated@@610)) (=> (and (and ($generated@@136 $generated@@612 ($generated@@320 $generated@@46)) ($generated@@74 $generated@@612 ($generated@@320 $generated@@46) $generated@@610)) (=> $generated@@613 (=> (= ($generated@@255 $generated@@612) $generated@@609) (forall (($generated@@618 Int) ) (!  (=> (<= ($generated@@235 0) $generated@@618) (=> (< $generated@@618 $generated@@609) ($generated@@319 $generated@@612 $generated@@618)))
 :pattern ( ($generated@@318 $generated@@612 $generated@@618))
))))) (=> (and (and (and (=> $generated@@613 (= ($generated@@255 $generated@@612) $generated@@609)) (=> $generated@@613 (forall (($generated@@619 Int) ) (!  (=> true (=> (and (<= ($generated@@235 0) $generated@@619) (< $generated@@619 $generated@@609)) ($generated@@318 $generated@@612 $generated@@619)))
 :pattern ( ($generated@@318 $generated@@612 $generated@@619))
)))) (and (=> (not $generated@@613) (forall (($generated@@620 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@620) ($generated@@256 $generated@@149)) ($generated@@136 $generated@@620 ($generated@@320 $generated@@46))) (= ($generated@@255 $generated@@620) $generated@@609)) (forall (($generated@@621 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@621) (< $generated@@621 $generated@@609)) (<= ($generated@@235 0) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@620 $generated@@621))))) (=> (and (<= ($generated@@235 0) $generated@@621) (< $generated@@621 $generated@@609)) (< ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@620 $generated@@621))) $generated@@609))))
 :pattern ( ($generated@@363 $generated@@2 ($generated@@476 $generated@@620 $generated@@621)))
))) (and (<= ($generated@@255 $generated@@607) ($generated@@255 $generated@@620)) ($generated@@553 $generated@@607 $generated@@620 ($generated@@255 $generated@@607)))) (forall (($generated@@622 Int) ) (!  (=> (<= ($generated@@235 0) $generated@@622) (=> (< $generated@@622 $generated@@609) ($generated@@319 $generated@@620 $generated@@622)))
 :pattern ( ($generated@@318 $generated@@620 $generated@@622))
)))
 :pattern ( ($generated@@255 $generated@@620))
))) (=> (not $generated@@613) (forall (($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@256 $generated@@149)) ($generated@@136 $generated@@623 ($generated@@320 $generated@@46))) (=> (and (and (= ($generated@@255 $generated@@623) $generated@@609) (forall (($generated@@624 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@624) (< $generated@@624 $generated@@609)) (<= ($generated@@235 0) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@623 $generated@@624))))) (=> (and (<= ($generated@@235 0) $generated@@624) (< $generated@@624 $generated@@609)) (< ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@623 $generated@@624))) $generated@@609))))
 :pattern ( ($generated@@363 $generated@@2 ($generated@@476 $generated@@623 $generated@@624)))
))) (and (<= ($generated@@255 $generated@@607) ($generated@@255 $generated@@623)) ($generated@@553 $generated@@607 $generated@@623 ($generated@@255 $generated@@607)))) (exists (($generated@@625 Int) ) (!  (and (and (<= ($generated@@235 0) $generated@@625) (< $generated@@625 $generated@@609)) (not ($generated@@318 $generated@@623 $generated@@625)))
 :pattern ( ($generated@@318 $generated@@623 $generated@@625))
))))
 :pattern ( ($generated@@255 $generated@@623))
))))) (and (and (forall (($generated@@626 T@U) ($generated@@627 Int) ) (!  (=> (and (= (type $generated@@626) ($generated@@256 $generated@@149)) ($generated@@136 $generated@@626 ($generated@@320 $generated@@46))) (and ($generated@@319 $generated@@626 $generated@@627) ($generated@@319 $generated@@626 $generated@@627)))
 :pattern ( ($generated@@318 $generated@@626 $generated@@627))
 :pattern ( ($generated@@318 $generated@@626 $generated@@627))
)) (forall (($generated@@628 T@U) ($generated@@629 Int) ) (!  (=> (and (= (type $generated@@628) ($generated@@256 $generated@@149)) ($generated@@136 $generated@@628 ($generated@@320 $generated@@46))) (= ($generated@@318 $generated@@628 $generated@@629) ($generated@@318 $generated@@628 $generated@@629)))
 :pattern ( ($generated@@318 $generated@@628 $generated@@629))
 :pattern ( ($generated@@318 $generated@@628 $generated@@629))
))) (and (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@77) (=> (and (not (= $generated@@630 $generated@@605)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@606 $generated@@630) $generated@@60))) (= ($generated@@81 $generated@@610 $generated@@630) ($generated@@81 $generated@@606 $generated@@630))))
 :pattern ( ($generated@@81 $generated@@610 $generated@@630))
)) ($generated@@132 $generated@@606 $generated@@610)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> $generated@@613 (= ($generated@@255 $generated@@612) $generated@@609))) (=> (=> $generated@@613 (= ($generated@@255 $generated@@612) $generated@@609)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> $generated@@613 (forall (($generated@@631 Int) ) (!  (=> true (=> (and (<= ($generated@@235 0) $generated@@631) (< $generated@@631 $generated@@609)) ($generated@@318 $generated@@612 $generated@@631)))
 :pattern ( ($generated@@318 $generated@@612 $generated@@631))
)))) (=> (=> $generated@@613 (forall (($generated@@632 Int) ) (!  (=> true (=> (and (<= ($generated@@235 0) $generated@@632) (< $generated@@632 $generated@@609)) ($generated@@318 $generated@@612 $generated@@632)))
 :pattern ( ($generated@@318 $generated@@612 $generated@@632))
))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> (not $generated@@613) (forall (($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@633) ($generated@@256 $generated@@149)) ($generated@@136 $generated@@633 ($generated@@320 $generated@@46))) (and (= ($generated@@255 $generated@@633) $generated@@609) (forall (($generated@@634 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@634) (< $generated@@634 $generated@@609)) (<= ($generated@@235 0) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@633 $generated@@634))))) (=> (and (<= ($generated@@235 0) $generated@@634) (< $generated@@634 $generated@@609)) (< ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@633 $generated@@634))) $generated@@609))))
 :pattern ( ($generated@@363 $generated@@2 ($generated@@476 $generated@@633 $generated@@634)))
)))) (exists (($generated@@635 Int) ) (!  (and (and (<= ($generated@@235 0) $generated@@635) (< $generated@@635 $generated@@609)) (not ($generated@@318 $generated@@633 $generated@@635)))
 :pattern ( ($generated@@318 $generated@@633 $generated@@635))
)))
 :pattern ( ($generated@@255 $generated@@633))
))))))))))))))))))))
(let (($generated@@636  (=> (and ($generated@@241 $generated@@606) ($generated@@611 $generated@@606)) (=> (and (and (and ($generated@@136 $generated@@614 ($generated@@320 $generated@@46)) ($generated@@74 $generated@@614 ($generated@@320 $generated@@46) $generated@@606)) (= 2 $generated@@317)) (and (<= ($generated@@235 0) $generated@@609) (= (ControlFlow 0 8) 2))) $generated@@615))))
$generated@@636)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@243 (Int) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U T@U) Bool)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@262 (T@T) T@U)
(declare-fun $generated@@263 (T@U) Int)
(declare-fun $generated@@264 (T@T) T@T)
(declare-fun $generated@@265 (T@T) T@T)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@317 () Int)
(declare-fun $generated@@318 (T@U Int) Bool)
(declare-fun $generated@@319 (T@U Int) Bool)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@T T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@407 (T@T) T@U)
(declare-fun $generated@@431 () T@T)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@443 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@465 (T@U) T@U)
(declare-fun $generated@@473 (T@U Int) T@U)
(declare-fun $generated@@481 (T@U) Int)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@581 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ) (! (= (type ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 ($generated@@67 (type $generated@@221))))
 (=> (and (and (and (and (= (type $generated@@216) $generated@@77) (= (type $generated@@217) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@218) ($generated@@66 $generated@@4))) (= (type $generated@@220) $generated@@77)) (= (type $generated@@221) ($generated@@66 $generated@@222))) (= ($generated@@0 ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (not (= $generated@@220 $generated@@216)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@217 $generated@@220) $generated@@218))) $generated@@219))))
 :pattern ( ($generated@@155 ($generated@@211 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@136)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@64) (= (type $generated@@228) $generated@@64)) (= (type $generated@@229) $generated@@145)) (= (type $generated@@230) $generated@@145)) (= ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@132 ($generated@@223 $generated@@229 $generated@@230) ($generated@@135 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) $generated@@136) (= (type $generated@@232) $generated@@136)) (= ($generated@@142 $generated@@231 $generated@@232) (= $generated@@231 $generated@@232)))
 :pattern ( ($generated@@142 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (= (type ($generated@@233 $generated@@234)) $generated@@64)
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@236) $generated@@64)) (= ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)) (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@145) ($generated@@0 ($generated@@81 $generated@@235 $generated@@237))) ($generated@@224 $generated@@237 $generated@@236))
 :pattern ( ($generated@@81 $generated@@235 $generated@@237))
))))
 :pattern ( ($generated@@132 $generated@@235 ($generated@@233 $generated@@236)))
)))
(assert (forall (($generated@@239 T@U) ) (! (= (type ($generated@@238 $generated@@239)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@240) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@241) $generated@@64)) (= ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)) (forall (($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@145) ($generated@@0 ($generated@@81 $generated@@240 $generated@@242))) ($generated@@224 $generated@@242 $generated@@241))
 :pattern ( ($generated@@81 $generated@@240 $generated@@242))
))))
 :pattern ( ($generated@@132 $generated@@240 ($generated@@238 $generated@@241)))
)))
(assert (forall (($generated@@244 Int) ) (! (= ($generated@@243 $generated@@244) $generated@@244)
 :pattern ( ($generated@@243 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@245 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@248 T@U) ) (! (= ($generated@@245 $generated@@248) $generated@@248)
 :pattern ( ($generated@@245 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@251) $generated@@64) (= (type $generated@@252) $generated@@64)) (= (type $generated@@253) $generated@@145)) (= (type $generated@@254) $generated@@145)) (= (type $generated@@255) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@249 $generated@@255)) (= ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255)  (and ($generated@@250 $generated@@253 $generated@@251 $generated@@255) ($generated@@250 $generated@@254 $generated@@252 $generated@@255))))
 :pattern ( ($generated@@74 ($generated@@223 $generated@@253 $generated@@254) ($generated@@135 $generated@@251 $generated@@252) $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ) (!  (=> (= (type $generated@@258) $generated@@136) (= ($generated@@134 $generated@@258) (= ($generated@@256 $generated@@258) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@136) ($generated@@134 $generated@@259)) (exists (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (and (and (= (type $generated@@260) $generated@@145) (= (type $generated@@261) $generated@@145)) (= $generated@@259 ($generated@@223 $generated@@260 $generated@@261)))
 :no-pattern (type $generated@@260)
 :no-pattern (type $generated@@261)
 :no-pattern ($generated $generated@@260)
 :no-pattern ($generated@@0 $generated@@260)
 :no-pattern ($generated $generated@@261)
 :no-pattern ($generated@@0 $generated@@261)
)))
 :pattern ( ($generated@@134 $generated@@259))
)))
(assert  (and (and (forall (($generated@@266 T@T) ) (= ($generated@@1 ($generated@@264 $generated@@266)) 17)) (forall (($generated@@267 T@T) ) (! (= ($generated@@265 ($generated@@264 $generated@@267)) $generated@@267)
 :pattern ( ($generated@@264 $generated@@267))
))) (forall (($generated@@268 T@T) ) (! (= (type ($generated@@262 $generated@@268)) ($generated@@264 $generated@@268))
 :pattern ( ($generated@@262 $generated@@268))
))))
(assert (forall (($generated@@269 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@269)) 0)
 :pattern ( ($generated@@262 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@145)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@64) (= (type $generated@@274) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274) ($generated@@74 $generated@@272 $generated@@273 $generated@@274)))
 :pattern ( ($generated@@250 ($generated@@270 $generated@@272) $generated@@273 $generated@@274))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@64)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert  (=> (<= 0 $generated@@317) (forall (($generated@@322 T@U) ($generated@@323 Int) ) (!  (=> (and (= (type $generated@@322) ($generated@@264 $generated@@145)) (or ($generated@@319 $generated@@322 $generated@@323) (and (not (= 0 $generated@@317)) ($generated@@132 $generated@@322 ($generated@@320 $generated@@46))))) true)
 :pattern ( ($generated@@318 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@79 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@76 $generated@@325 $generated@@2)) (= ($generated@@151 $generated@@324) (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@325) (and (<= 0 ($generated ($generated@@81 $generated@@324 $generated@@326))) (<= ($generated ($generated@@81 $generated@@324 $generated@@326)) ($generated@@275 $generated@@324))))
 :pattern ( ($generated@@81 $generated@@324 $generated@@326))
)))))
 :pattern ( ($generated@@151 $generated@@324))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@285 (type $generated@@327))))
(let (($generated@@329 ($generated@@284 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@283 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@282 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@281 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@285 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@76 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@285 (type $generated@@334))))
(let (($generated@@336 ($generated@@284 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@283 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@282 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@81 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@299 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@303 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@76 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@303 (type $generated@@345))))
(let (($generated@@347 ($generated@@302 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@301 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@300 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@81 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@350) $generated@@64)) (= ($generated@@132 $generated@@349 ($generated@@150 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@349 $generated@@351)))) ($generated@@224 $generated@@351 $generated@@350))
 :pattern ( ($generated@@81 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@132 $generated@@349 ($generated@@150 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@353) $generated@@64)) (= (type $generated@@354) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@352 ($generated@@233 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@145) ($generated@@0 ($generated@@81 $generated@@352 $generated@@355))) ($generated@@250 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@81 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@74 $generated@@352 ($generated@@233 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@357) $generated@@64)) (= (type $generated@@358) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@356 ($generated@@238 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@145) ($generated@@0 ($generated@@81 $generated@@356 $generated@@359))) ($generated@@250 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@81 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@74 $generated@@356 ($generated@@238 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@81 ($generated@@276 $generated@@361) $generated@@360)))
)))
(assert  (and (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@362 $generated@@365)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@362 $generated@@365))
)) (forall (($generated@@366 T@T) ($generated@@367 T@U) ) (! (= (type ($generated@@363 $generated@@366 $generated@@367)) $generated@@366)
 :pattern ( ($generated@@363 $generated@@366 $generated@@367))
))) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@285 (type $generated@@368))))
(let (($generated@@370 ($generated@@284 (type $generated@@368))))
(= (type ($generated@@364 $generated@@368)) ($generated@@76 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@364 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@372) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@362 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@371) ($generated@@143 ($generated@@363 $generated@@136 $generated@@372)))) (= ($generated@@81 ($generated@@364 $generated@@371) ($generated@@143 ($generated@@363 $generated@@136 $generated@@372))) ($generated@@144 ($generated@@363 $generated@@136 $generated@@372))))))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@303 (type $generated@@376))))
(let (($generated@@378 ($generated@@302 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@76 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@380) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@379) ($generated@@143 ($generated@@363 $generated@@136 $generated@@380)))) (= ($generated@@81 ($generated@@374 $generated@@379) ($generated@@143 ($generated@@363 $generated@@136 $generated@@380))) ($generated@@144 ($generated@@363 $generated@@136 $generated@@380))))))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@284 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@283 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@81 ($generated@@331 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@81 ($generated@@364 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@381) $generated@@385))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@81 ($generated@@331 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@302 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@301 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@81 ($generated@@342 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@81 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@386) $generated@@390))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@81 ($generated@@342 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@64)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@394) $generated@@398))) (and ($generated@@250 ($generated@@81 ($generated@@364 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@250 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@394) $generated@@398))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@64)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@402) $generated@@406))) (and ($generated@@250 ($generated@@81 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@250 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@408 T@T) ) (! (= (type ($generated@@407 $generated@@408)) ($generated@@76 $generated@@408 $generated@@4))
 :pattern ( ($generated@@407 $generated@@408))
)))
(assert (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@303 (type $generated@@409))))
(let (($generated@@411 ($generated@@302 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@301 $generated@@411 $generated@@410)) (= (= $generated@@409 ($generated@@300 $generated@@411 $generated@@410)) (= ($generated@@299 $generated@@409) ($generated@@407 $generated@@411))))))
 :pattern ( ($generated@@299 $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@303 (type $generated@@412))))
(let (($generated@@414 ($generated@@302 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@301 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@300 $generated@@414 $generated@@413)) (= ($generated@@342 $generated@@412) ($generated@@407 $generated@@413))))))
 :pattern ( ($generated@@342 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@303 (type $generated@@415))))
(let (($generated@@417 ($generated@@302 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@301 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@300 $generated@@417 $generated@@416)) (= ($generated@@373 $generated@@415) ($generated@@407 $generated@@145))))))
 :pattern ( ($generated@@373 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@285 (type $generated@@418))))
(let (($generated@@420 ($generated@@284 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@283 $generated@@420 $generated@@419)) (or (= $generated@@418 ($generated@@282 $generated@@420 $generated@@419)) (exists (($generated@@421 T@U) ($generated@@422 T@U) ) (!  (and (and (= (type $generated@@421) $generated@@145) (= (type $generated@@422) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@362 $generated@@418) ($generated@@270 ($generated@@223 $generated@@421 $generated@@422)))))
 :no-pattern (type $generated@@421)
 :no-pattern (type $generated@@422)
 :no-pattern ($generated $generated@@421)
 :no-pattern ($generated@@0 $generated@@421)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
))))))
 :pattern ( ($generated@@362 $generated@@418))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@303 (type $generated@@423))))
(let (($generated@@425 ($generated@@302 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@301 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@300 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ($generated@@427 T@U) ) (!  (and (and (= (type $generated@@426) $generated@@145) (= (type $generated@@427) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@373 $generated@@423) ($generated@@270 ($generated@@223 $generated@@426 $generated@@427)))))
 :no-pattern (type $generated@@426)
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@373 $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@145) ($generated@@224 $generated@@428 $generated@@46)) (and (= ($generated@@270 ($generated@@363 $generated@@2 $generated@@428)) $generated@@428) ($generated@@132 ($generated@@363 $generated@@2 $generated@@428) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@428 $generated@@46))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@145) ($generated@@224 $generated@@429 $generated@@47)) (and (= ($generated@@270 ($generated@@363 $generated@@3 $generated@@429)) $generated@@429) ($generated@@132 ($generated@@363 $generated@@3 $generated@@429) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@429 $generated@@47))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@145) ($generated@@224 $generated@@430 $generated@@44)) (and (= ($generated@@270 ($generated@@363 $generated@@4 $generated@@430)) $generated@@430) ($generated@@132 ($generated@@363 $generated@@4 $generated@@430) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@430 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@431) 20))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@145) ($generated@@224 $generated@@432 $generated@@45)) (and (= ($generated@@270 ($generated@@363 $generated@@431 $generated@@432)) $generated@@432) ($generated@@132 ($generated@@363 $generated@@431 $generated@@432) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@432 $generated@@45))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (= (type $generated@@434) $generated@@64) (= ($generated@@224 ($generated@@270 $generated@@433) $generated@@434) ($generated@@132 $generated@@433 $generated@@434)))
 :pattern ( ($generated@@224 ($generated@@270 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@79 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@76 $generated@@436 $generated@@2)) (<= 0 ($generated@@275 $generated@@435))))
 :pattern ( ($generated@@275 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@265 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@264 $generated@@438)) (<= 0 ($generated@@263 $generated@@437))))
 :pattern ( ($generated@@263 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@64)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@439 ($generated@@391 $generated@@441 $generated@@442)) $generated@@441))
 :pattern ( ($generated@@391 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ) (! (= (type ($generated@@443 $generated@@444)) $generated@@64)
 :pattern ( ($generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@64) (= (type $generated@@446) $generated@@64)) (= ($generated@@443 ($generated@@391 $generated@@445 $generated@@446)) $generated@@446))
 :pattern ( ($generated@@391 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@72 ($generated@@391 $generated@@447 $generated@@448)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@399 $generated@@451 $generated@@452)) $generated@@451))
 :pattern ( ($generated@@399 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@399 $generated@@455 $generated@@456)) $generated@@456))
 :pattern ( ($generated@@399 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@64) (= (type $generated@@458) $generated@@64)) (= ($generated@@72 ($generated@@399 $generated@@457 $generated@@458)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@145) (= (type $generated@@460) $generated@@145)) (= ($generated@@256 ($generated@@223 $generated@@459 $generated@@460)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@135 $generated@@463 $generated@@464)) $generated@@463))
 :pattern ( ($generated@@135 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (= (type ($generated@@465 $generated@@466)) $generated@@64)
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@64) (= (type $generated@@468) $generated@@64)) (= ($generated@@465 ($generated@@135 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@135 $generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@145) (= (type $generated@@470) $generated@@145)) (= ($generated@@143 ($generated@@223 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@223 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@145) (= (type $generated@@472) $generated@@145)) (= ($generated@@144 ($generated@@223 $generated@@471 $generated@@472)) $generated@@472))
 :pattern ( ($generated@@223 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 Int) ) (! (let (($generated@@476 ($generated@@265 (type $generated@@474))))
(= (type ($generated@@473 $generated@@474 $generated@@475)) $generated@@476))
 :pattern ( ($generated@@473 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (and (= (type $generated@@477) ($generated@@264 $generated@@145)) (= (type $generated@@478) $generated@@64)) (= (type $generated@@479) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@477 ($generated@@320 $generated@@478) $generated@@479) (forall (($generated@@480 Int) ) (!  (=> (and (<= 0 $generated@@480) (< $generated@@480 ($generated@@263 $generated@@477))) ($generated@@250 ($generated@@473 $generated@@477 $generated@@480) $generated@@478 $generated@@479))
 :pattern ( ($generated@@473 $generated@@477 $generated@@480))
))))
 :pattern ( ($generated@@74 $generated@@477 ($generated@@320 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@482 Int) ) (! (= ($generated@@481 ($generated@@75 $generated@@482)) $generated@@482)
 :pattern ( ($generated@@75 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@64)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (= (type $generated@@485) $generated@@64) (= ($generated@@483 ($generated@@233 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@233 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@64) (= ($generated@@72 ($generated@@233 $generated@@486)) $generated@@54))
 :pattern ( ($generated@@233 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@64)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@487 ($generated@@238 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@238 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@490)) $generated@@55))
 :pattern ( ($generated@@238 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@64)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@491 ($generated@@150 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@150 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (= (type $generated@@494) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@494)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@64)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@495 ($generated@@320 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@320 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (= (type $generated@@498) $generated@@64) (= ($generated@@72 ($generated@@320 $generated@@498)) $generated@@57))
 :pattern ( ($generated@@320 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (! (let (($generated@@500 (type $generated@@499)))
(= ($generated@@363 $generated@@500 ($generated@@270 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@270 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@502) $generated@@64)) (= (type $generated@@503) $generated@@64)) (= ($generated@@132 $generated@@501 ($generated@@391 $generated@@502 $generated@@503)) (forall (($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@501) $generated@@504))) (and ($generated@@224 ($generated@@81 ($generated@@364 $generated@@501) $generated@@504) $generated@@503) ($generated@@224 $generated@@504 $generated@@502)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@501) $generated@@504))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@501) $generated@@504))
))))
 :pattern ( ($generated@@132 $generated@@501 ($generated@@391 $generated@@502 $generated@@503)))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (and (= (type $generated@@505) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@506) $generated@@64)) (= (type $generated@@507) $generated@@64)) (= ($generated@@132 $generated@@505 ($generated@@399 $generated@@506 $generated@@507)) (forall (($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@505) $generated@@508))) (and ($generated@@224 ($generated@@81 ($generated@@374 $generated@@505) $generated@@508) $generated@@507) ($generated@@224 $generated@@508 $generated@@506)))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@505) $generated@@508))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@505) $generated@@508))
))))
 :pattern ( ($generated@@132 $generated@@505 ($generated@@399 $generated@@506 $generated@@507)))
)))
(assert  (=> (<= 0 $generated@@317) (forall (($generated@@509 T@U) ($generated@@510 Int) ) (!  (=> (and (= (type $generated@@509) ($generated@@264 $generated@@145)) (or ($generated@@319 ($generated@@245 $generated@@509) ($generated@@243 $generated@@510)) (and (not (= 0 $generated@@317)) ($generated@@132 $generated@@509 ($generated@@320 $generated@@46))))) (= ($generated@@318 ($generated@@245 $generated@@509) ($generated@@243 $generated@@510))  (and (and (<= ($generated@@243 0) ($generated@@243 $generated@@510)) (< $generated@@510 ($generated@@263 ($generated@@245 $generated@@509)))) (forall (($generated@@511 Int) ) (!  (=> true (and (and (=> (and (<= ($generated@@243 0) $generated@@511) (< $generated@@511 $generated@@510)) (not (= ($generated ($generated@@363 $generated@@2 ($generated@@473 ($generated@@245 $generated@@509) $generated@@511))) ($generated ($generated@@363 $generated@@2 ($generated@@473 ($generated@@245 $generated@@509) ($generated@@243 $generated@@510))))))) (=> (and (<= ($generated@@243 0) $generated@@511) (< $generated@@511 $generated@@510)) (not (= (- ($generated ($generated@@363 $generated@@2 ($generated@@473 ($generated@@245 $generated@@509) $generated@@511))) ($generated ($generated@@363 $generated@@2 ($generated@@473 ($generated@@245 $generated@@509) ($generated@@243 $generated@@510))))) (- $generated@@510 $generated@@511))))) (=> (and (<= ($generated@@243 0) $generated@@511) (< $generated@@511 $generated@@510)) (not (= (- ($generated ($generated@@363 $generated@@2 ($generated@@473 ($generated@@245 $generated@@509) ($generated@@243 $generated@@510)))) ($generated ($generated@@363 $generated@@2 ($generated@@473 ($generated@@245 $generated@@509) $generated@@511)))) (- $generated@@510 $generated@@511))))))
 :pattern ( ($generated@@363 $generated@@2 ($generated@@473 $generated@@509 $generated@@511)))
)))))
 :weight 3
 :pattern ( ($generated@@318 ($generated@@245 $generated@@509) ($generated@@243 $generated@@510)))
))))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) (= (type $generated@@515) $generated@@145)) (< ($generated@@512 $generated@@514) ($generated@@513 ($generated@@223 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@223 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@145) (= (type $generated@@517) $generated@@145)) (< ($generated@@512 $generated@@517) ($generated@@513 ($generated@@223 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@223 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (and (= (type $generated@@518) $generated@@145) (= (type $generated@@519) $generated@@64)) (= (type $generated@@520) $generated@@64)) ($generated@@224 $generated@@518 ($generated@@391 $generated@@519 $generated@@520))) (and (= ($generated@@270 ($generated@@363 ($generated@@283 $generated@@145 $generated@@145) $generated@@518)) $generated@@518) ($generated@@132 ($generated@@363 ($generated@@283 $generated@@145 $generated@@145) $generated@@518) ($generated@@391 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@224 $generated@@518 ($generated@@391 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@145) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) $generated@@64)) ($generated@@224 $generated@@521 ($generated@@399 $generated@@522 $generated@@523))) (and (= ($generated@@270 ($generated@@363 ($generated@@301 $generated@@145 $generated@@145) $generated@@521)) $generated@@521) ($generated@@132 ($generated@@363 ($generated@@301 $generated@@145 $generated@@145) $generated@@521) ($generated@@399 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@224 $generated@@521 ($generated@@399 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@64) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@145)) ($generated@@224 $generated@@526 ($generated@@135 $generated@@524 $generated@@525))) (and (= ($generated@@270 ($generated@@363 $generated@@136 $generated@@526)) $generated@@526) ($generated@@132 ($generated@@363 $generated@@136 $generated@@526) ($generated@@135 $generated@@524 $generated@@525))))
 :pattern ( ($generated@@224 $generated@@526 ($generated@@135 $generated@@524 $generated@@525)))
)))
(assert (forall (($generated@@527 T@U) ) (! (let (($generated@@528 (type $generated@@527)))
 (not ($generated@@0 ($generated@@81 ($generated@@407 $generated@@528) $generated@@527))))
 :pattern ( (let (($generated@@528 (type $generated@@527)))
($generated@@81 ($generated@@407 $generated@@528) $generated@@527)))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@69)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@531 $generated@@532)) $generated@@62) (= ($generated@@529 ($generated@@135 $generated@@531 $generated@@532)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@531 $generated@@532))
)))
(assert  (=> (<= 0 $generated@@317) (forall (($generated@@533 T@U) ($generated@@534 Int) ) (!  (=> (and (= (type $generated@@533) ($generated@@264 $generated@@145)) (or ($generated@@319 $generated@@533 $generated@@534) (and (not (= 0 $generated@@317)) ($generated@@132 $generated@@533 ($generated@@320 $generated@@46))))) (= ($generated@@318 $generated@@533 $generated@@534)  (and (and (<= ($generated@@243 0) $generated@@534) (< $generated@@534 ($generated@@263 $generated@@533))) (forall (($generated@@535 Int) ) (!  (=> true (and (and (=> (and (<= ($generated@@243 0) $generated@@535) (< $generated@@535 $generated@@534)) (not (= ($generated ($generated@@363 $generated@@2 ($generated@@473 $generated@@533 $generated@@535))) ($generated ($generated@@363 $generated@@2 ($generated@@473 $generated@@533 $generated@@534)))))) (=> (and (<= ($generated@@243 0) $generated@@535) (< $generated@@535 $generated@@534)) (not (= (- ($generated ($generated@@363 $generated@@2 ($generated@@473 $generated@@533 $generated@@535))) ($generated ($generated@@363 $generated@@2 ($generated@@473 $generated@@533 $generated@@534)))) (- $generated@@534 $generated@@535))))) (=> (and (<= ($generated@@243 0) $generated@@535) (< $generated@@535 $generated@@534)) (not (= (- ($generated ($generated@@363 $generated@@2 ($generated@@473 $generated@@533 $generated@@534))) ($generated ($generated@@363 $generated@@2 ($generated@@473 $generated@@533 $generated@@535)))) (- $generated@@534 $generated@@535))))))
 :pattern ( ($generated@@363 $generated@@2 ($generated@@473 $generated@@533 $generated@@535)))
)))))
 :pattern ( ($generated@@318 $generated@@533 $generated@@534))
))))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@136) (= ($generated@@512 ($generated@@270 $generated@@536)) ($generated@@513 $generated@@536)))
 :pattern ( ($generated@@512 ($generated@@270 $generated@@536)))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@145) ($generated@@224 $generated@@537 ($generated@@75 0))) (and (= ($generated@@270 ($generated@@363 $generated@@2 $generated@@537)) $generated@@537) ($generated@@132 ($generated@@363 ($generated@@76 $generated@@145 $generated@@4) $generated@@537) ($generated@@75 0))))
 :pattern ( ($generated@@224 $generated@@537 ($generated@@75 0)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@538) $generated@@145) (= (type $generated@@539) $generated@@64)) ($generated@@224 $generated@@538 ($generated@@233 $generated@@539))) (and (= ($generated@@270 ($generated@@363 ($generated@@76 $generated@@145 $generated@@4) $generated@@538)) $generated@@538) ($generated@@132 ($generated@@363 ($generated@@76 $generated@@145 $generated@@4) $generated@@538) ($generated@@233 $generated@@539))))
 :pattern ( ($generated@@224 $generated@@538 ($generated@@233 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@540) $generated@@145) (= (type $generated@@541) $generated@@64)) ($generated@@224 $generated@@540 ($generated@@238 $generated@@541))) (and (= ($generated@@270 ($generated@@363 ($generated@@76 $generated@@145 $generated@@4) $generated@@540)) $generated@@540) ($generated@@132 ($generated@@363 ($generated@@76 $generated@@145 $generated@@4) $generated@@540) ($generated@@238 $generated@@541))))
 :pattern ( ($generated@@224 $generated@@540 ($generated@@238 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@542) $generated@@145) (= (type $generated@@543) $generated@@64)) ($generated@@224 $generated@@542 ($generated@@150 $generated@@543))) (and (= ($generated@@270 ($generated@@363 ($generated@@76 $generated@@145 $generated@@2) $generated@@542)) $generated@@542) ($generated@@132 ($generated@@363 ($generated@@76 $generated@@145 $generated@@2) $generated@@542) ($generated@@150 $generated@@543))))
 :pattern ( ($generated@@224 $generated@@542 ($generated@@150 $generated@@543)))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@145) (= (type $generated@@545) $generated@@64)) ($generated@@224 $generated@@544 ($generated@@320 $generated@@545))) (and (= ($generated@@270 ($generated@@363 ($generated@@264 $generated@@145) $generated@@544)) $generated@@544) ($generated@@132 ($generated@@363 ($generated@@264 $generated@@145) $generated@@544) ($generated@@320 $generated@@545))))
 :pattern ( ($generated@@224 $generated@@544 ($generated@@320 $generated@@545)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@546 ($generated@@150 $generated@@547) $generated@@548) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@546 $generated@@549)))) ($generated@@250 $generated@@549 $generated@@547 $generated@@548))
 :pattern ( ($generated@@81 $generated@@546 $generated@@549))
))))
 :pattern ( ($generated@@74 $generated@@546 ($generated@@150 $generated@@547) $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@136) (= (type $generated@@551) $generated@@64)) (= (type $generated@@552) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@552) (and ($generated@@134 $generated@@550) (exists (($generated@@553 T@U) ) (!  (and (= (type $generated@@553) $generated@@64) ($generated@@74 $generated@@550 ($generated@@135 $generated@@551 $generated@@553) $generated@@552))
 :pattern ( ($generated@@74 $generated@@550 ($generated@@135 $generated@@551 $generated@@553) $generated@@552))
))))) ($generated@@250 ($generated@@143 $generated@@550) $generated@@551 $generated@@552))
 :pattern ( ($generated@@250 ($generated@@143 $generated@@550) $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@136) (= (type $generated@@555) $generated@@64)) (= (type $generated@@556) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@249 $generated@@556) (and ($generated@@134 $generated@@554) (exists (($generated@@557 T@U) ) (!  (and (= (type $generated@@557) $generated@@64) ($generated@@74 $generated@@554 ($generated@@135 $generated@@557 $generated@@555) $generated@@556))
 :pattern ( ($generated@@74 $generated@@554 ($generated@@135 $generated@@557 $generated@@555) $generated@@556))
))))) ($generated@@250 ($generated@@144 $generated@@554) $generated@@555 $generated@@556))
 :pattern ( ($generated@@250 ($generated@@144 $generated@@554) $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@145) (= (type $generated@@559) $generated@@145)) (= ($generated@@223 ($generated@@245 $generated@@558) ($generated@@245 $generated@@559)) ($generated@@245 ($generated@@223 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@223 ($generated@@245 $generated@@558) ($generated@@245 $generated@@559)))
)))
(assert (forall (($generated@@560 Int) ) (! (= ($generated@@270 ($generated@@8 ($generated@@243 $generated@@560))) ($generated@@245 ($generated@@270 ($generated@@8 $generated@@560))))
 :pattern ( ($generated@@270 ($generated@@8 ($generated@@243 $generated@@560))))
)))
(assert (forall (($generated@@561 T@U) ) (! (= ($generated@@270 ($generated@@245 $generated@@561)) ($generated@@245 ($generated@@270 $generated@@561)))
 :pattern ( ($generated@@270 ($generated@@245 $generated@@561)))
)))
(assert (forall (($generated@@562 T@U) ) (! (let (($generated@@563 ($generated@@265 (type $generated@@562))))
 (=> (and (= (type $generated@@562) ($generated@@264 $generated@@563)) (= ($generated@@263 $generated@@562) 0)) (= $generated@@562 ($generated@@262 $generated@@563))))
 :pattern ( ($generated@@263 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@565)))
 (=> (and (and (= (type $generated@@564) ($generated@@76 $generated@@567 $generated@@2)) (= (type $generated@@566) $generated@@2)) (<= 0 ($generated $generated@@566))) (= ($generated@@275 ($generated@@82 $generated@@564 $generated@@565 $generated@@566)) (+ (- ($generated@@275 $generated@@564) ($generated ($generated@@81 $generated@@564 $generated@@565))) ($generated $generated@@566)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@564 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@2)) ($generated@@74 $generated@@569 $generated@@46 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@46 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@571) $generated@@3)) ($generated@@74 $generated@@571 $generated@@47 $generated@@570))
 :pattern ( ($generated@@74 $generated@@571 $generated@@47 $generated@@570))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@573) $generated@@4)) ($generated@@74 $generated@@573 $generated@@44 $generated@@572))
 :pattern ( ($generated@@74 $generated@@573 $generated@@44 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@575) $generated@@431)) ($generated@@74 $generated@@575 $generated@@45 $generated@@574))
 :pattern ( ($generated@@74 $generated@@575 $generated@@45 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@577) $generated@@145)) ($generated@@74 $generated@@577 $generated@@48 $generated@@576))
 :pattern ( ($generated@@74 $generated@@577 $generated@@48 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@264 $generated@@145)) (= (type $generated@@579) $generated@@64)) (= ($generated@@132 $generated@@578 ($generated@@320 $generated@@579)) (forall (($generated@@580 Int) ) (!  (=> (and (<= 0 $generated@@580) (< $generated@@580 ($generated@@263 $generated@@578))) ($generated@@224 ($generated@@473 $generated@@578 $generated@@580) $generated@@579))
 :pattern ( ($generated@@473 $generated@@578 $generated@@580))
))))
 :pattern ( ($generated@@132 $generated@@578 ($generated@@320 $generated@@579)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 Int) ) (!  (=> (= (type $generated@@582) ($generated@@264 $generated@@145)) (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@263 $generated@@582))) (< ($generated@@513 ($generated@@363 $generated@@136 ($generated@@473 $generated@@582 $generated@@583))) ($generated@@581 $generated@@582))))
 :pattern ( ($generated@@513 ($generated@@363 $generated@@136 ($generated@@473 $generated@@582 $generated@@583))))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) ($generated@@283 $generated@@145 $generated@@145)) (= (type $generated@@585) $generated@@64)) (= (type $generated@@586) $generated@@64)) ($generated@@132 $generated@@584 ($generated@@391 $generated@@585 $generated@@586))) (and (and ($generated@@132 ($generated@@281 $generated@@584) ($generated@@233 $generated@@585)) ($generated@@132 ($generated@@331 $generated@@584) ($generated@@233 $generated@@586))) ($generated@@132 ($generated@@362 $generated@@584) ($generated@@233 ($generated@@135 $generated@@585 $generated@@586)))))
 :pattern ( ($generated@@132 $generated@@584 ($generated@@391 $generated@@585 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@301 $generated@@145 $generated@@145)) (= (type $generated@@588) $generated@@64)) (= (type $generated@@589) $generated@@64)) ($generated@@132 $generated@@587 ($generated@@399 $generated@@588 $generated@@589))) (and (and ($generated@@132 ($generated@@299 $generated@@587) ($generated@@238 $generated@@588)) ($generated@@132 ($generated@@342 $generated@@587) ($generated@@238 $generated@@589))) ($generated@@132 ($generated@@373 $generated@@587) ($generated@@238 ($generated@@135 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@132 $generated@@587 ($generated@@399 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@2) ($generated@@132 $generated@@590 $generated@@46))
 :pattern ( ($generated@@132 $generated@@590 $generated@@46))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@3) ($generated@@132 $generated@@591 $generated@@47))
 :pattern ( ($generated@@132 $generated@@591 $generated@@47))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@4) ($generated@@132 $generated@@592 $generated@@44))
 :pattern ( ($generated@@132 $generated@@592 $generated@@44))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@431) ($generated@@132 $generated@@593 $generated@@45))
 :pattern ( ($generated@@132 $generated@@593 $generated@@45))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@145) ($generated@@132 $generated@@594 $generated@@48))
 :pattern ( ($generated@@132 $generated@@594 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@595 () T@U)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 () Int)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@595) ($generated@@264 $generated@@145)) (= (type $generated@@598) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@599) $generated@@77)) (= (type $generated@@600) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@601) ($generated@@157 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 25) (let (($generated@@603 true))
(let (($generated@@604 true))
(let (($generated@@605  (=> (and (not (and (not (= ($generated ($generated@@363 $generated@@2 ($generated@@473 $generated@@595 $generated@@596))) ($generated ($generated@@363 $generated@@2 ($generated@@473 $generated@@595 $generated@@597))))) (not (= (- ($generated ($generated@@363 $generated@@2 ($generated@@473 $generated@@595 $generated@@596))) ($generated ($generated@@363 $generated@@2 ($generated@@473 $generated@@595 $generated@@597)))) (- $generated@@597 $generated@@596))))) (= (ControlFlow 0 9) 2)) $generated@@604)))
(let (($generated@@606  (=> (and (not (= ($generated ($generated@@363 $generated@@2 ($generated@@473 $generated@@595 $generated@@596))) ($generated ($generated@@363 $generated@@2 ($generated@@473 $generated@@595 $generated@@597))))) (not (= (- ($generated ($generated@@363 $generated@@2 ($generated@@473 $generated@@595 $generated@@596))) ($generated ($generated@@363 $generated@@2 ($generated@@473 $generated@@595 $generated@@597)))) (- $generated@@597 $generated@@596)))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@263 $generated@@595)))) (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@263 $generated@@595))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@263 $generated@@595)))) (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@263 $generated@@595))) (=> (= (ControlFlow 0 6) 2) $generated@@604))))))))
(let (($generated@@607  (=> (= ($generated ($generated@@363 $generated@@2 ($generated@@473 $generated@@595 $generated@@596))) ($generated ($generated@@363 $generated@@2 ($generated@@473 $generated@@595 $generated@@597)))) (and (=> (= (ControlFlow 0 13) 6) $generated@@606) (=> (= (ControlFlow 0 13) 9) $generated@@605)))))
(let (($generated@@608  (=> (not (= ($generated ($generated@@363 $generated@@2 ($generated@@473 $generated@@595 $generated@@596))) ($generated ($generated@@363 $generated@@2 ($generated@@473 $generated@@595 $generated@@597))))) (and (=> (= (ControlFlow 0 10) (- 0 12)) (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@263 $generated@@595)))) (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@263 $generated@@595))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@263 $generated@@595)))) (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@263 $generated@@595))) (and (=> (= (ControlFlow 0 10) 6) $generated@@606) (=> (= (ControlFlow 0 10) 9) $generated@@605)))))))))
(let (($generated@@609  (=> (and (<= ($generated@@243 0) $generated@@596) (< $generated@@596 $generated@@597)) (and (=> (= (ControlFlow 0 14) (- 0 16)) (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@263 $generated@@595)))) (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@263 $generated@@595))) (and (=> (= (ControlFlow 0 14) (- 0 15)) (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@263 $generated@@595)))) (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@263 $generated@@595))) (and (=> (= (ControlFlow 0 14) 10) $generated@@608) (=> (= (ControlFlow 0 14) 13) $generated@@607)))))))))
(let (($generated@@610  (=> (and (not (and (<= ($generated@@243 0) $generated@@596) (< $generated@@596 $generated@@597))) (= (ControlFlow 0 5) 2)) $generated@@604)))
(let (($generated@@611  (=> (< $generated@@596 ($generated@@243 0)) (and (=> (= (ControlFlow 0 18) 14) $generated@@609) (=> (= (ControlFlow 0 18) 5) $generated@@610)))))
(let (($generated@@612  (=> (<= ($generated@@243 0) $generated@@596) (and (=> (= (ControlFlow 0 17) 14) $generated@@609) (=> (= (ControlFlow 0 17) 5) $generated@@610)))))
(let (($generated@@613  (and (=> (= (ControlFlow 0 19) 17) $generated@@612) (=> (= (ControlFlow 0 19) 18) $generated@@611))))
(let (($generated@@614  (=> (and (<= ($generated@@243 0) $generated@@597) (< $generated@@597 ($generated@@263 $generated@@595))) (and (=> (= (ControlFlow 0 20) 19) $generated@@613) (=> (= (ControlFlow 0 20) 4) $generated@@603)))))
(let (($generated@@615  (=> (and (not (and (<= ($generated@@243 0) $generated@@597) (< $generated@@597 ($generated@@263 $generated@@595)))) (= (ControlFlow 0 3) 2)) $generated@@604)))
(let (($generated@@616  (=> (< $generated@@597 ($generated@@243 0)) (and (=> (= (ControlFlow 0 22) 20) $generated@@614) (=> (= (ControlFlow 0 22) 3) $generated@@615)))))
(let (($generated@@617  (=> (<= ($generated@@243 0) $generated@@597) (and (=> (= (ControlFlow 0 21) 20) $generated@@614) (=> (= (ControlFlow 0 21) 3) $generated@@615)))))
(let (($generated@@618  (=> (= $generated@@598 ($generated@@211 $generated@@599 $generated@@600 $generated@@60 false)) (and (=> (= (ControlFlow 0 23) 21) $generated@@617) (=> (= (ControlFlow 0 23) 22) $generated@@616)))))
(let (($generated@@619 true))
(let (($generated@@620  (=> (= $generated@@601 ($generated@@156 $generated@@599 $generated@@600 $generated@@60 false)) (and (=> (= (ControlFlow 0 24) 1) $generated@@619) (=> (= (ControlFlow 0 24) 23) $generated@@618)))))
(let (($generated@@621  (=> (and (and (and ($generated@@249 $generated@@600) ($generated@@602 $generated@@600)) ($generated@@132 $generated@@595 ($generated@@320 $generated@@46))) (and (= 0 $generated@@317) (= (ControlFlow 0 25) 24))) $generated@@620)))
$generated@@621))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) Bool)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (Int) Int)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@T) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@317 () Int)
(declare-fun $generated@@318 (T@U Int) Bool)
(declare-fun $generated@@319 (T@U Int) Bool)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@T T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U Int) T@U)
(declare-fun $generated@@484 (T@U) Int)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@553 (T@U T@U Int) Bool)
(declare-fun $generated@@590 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and (= (type $generated@@133) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@132 $generated@@133 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@133 $generated@@135) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60))
)))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) $generated@@64)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@158) $generated@@64)) ($generated@@136 $generated@@157 ($generated@@154 $generated@@158))) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@136 $generated@@157 ($generated@@154 $generated@@158)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@77 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@67 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@77) (= (type $generated@@209) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@210) ($generated@@66 $generated@@4))) (= (type $generated@@212) $generated@@77)) (= (type $generated@@213) ($generated@@66 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= (type ($generated@@215 $generated@@217 $generated@@218)) $generated@@140)
 :pattern ( ($generated@@215 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@64) (= (type $generated@@220) $generated@@64)) (= (type $generated@@221) $generated@@149)) (= (type $generated@@222) $generated@@149)) (= ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220))  (and ($generated@@216 $generated@@221 $generated@@219) ($generated@@216 $generated@@222 $generated@@220))))
 :pattern ( ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@140) (= (type $generated@@224) $generated@@140)) (= ($generated@@146 $generated@@223 $generated@@224) (= $generated@@223 $generated@@224)))
 :pattern ( ($generated@@146 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (! (= (type ($generated@@225 $generated@@226)) $generated@@64)
 :pattern ( ($generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@228) $generated@@64)) (= ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)) (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@149) ($generated@@0 ($generated@@81 $generated@@227 $generated@@229))) ($generated@@216 $generated@@229 $generated@@228))
 :pattern ( ($generated@@81 $generated@@227 $generated@@229))
))))
 :pattern ( ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@149) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@216 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 Int) ) (! (= ($generated@@235 $generated@@236) $generated@@236)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(= (type ($generated@@237 $generated@@238)) $generated@@239))
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= ($generated@@237 $generated@@240) $generated@@240)
 :pattern ( ($generated@@237 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@243) $generated@@64) (= (type $generated@@244) $generated@@64)) (= (type $generated@@245) $generated@@149)) (= (type $generated@@246) $generated@@149)) (= (type $generated@@247) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@241 $generated@@247)) (= ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247)  (and ($generated@@242 $generated@@245 $generated@@243 $generated@@247) ($generated@@242 $generated@@246 $generated@@244 $generated@@247))))
 :pattern ( ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@68)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@140) (= ($generated@@138 $generated@@250) (= ($generated@@248 $generated@@250) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@140) ($generated@@138 $generated@@251)) (exists (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (and (and (= (type $generated@@252) $generated@@149) (= (type $generated@@253) $generated@@149)) (= $generated@@251 ($generated@@215 $generated@@252 $generated@@253)))
 :no-pattern (type $generated@@252)
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@252)
 :no-pattern ($generated@@0 $generated@@252)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
)))
 :pattern ( ($generated@@138 $generated@@251))
)))
(assert  (and (and (forall (($generated@@258 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@258)) 17)) (forall (($generated@@259 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@259)) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
))) (forall (($generated@@260 T@T) ) (! (= (type ($generated@@254 $generated@@260)) ($generated@@256 $generated@@260))
 :pattern ( ($generated@@254 $generated@@260))
))))
(assert (forall (($generated@@261 T@T) ) (! (= ($generated@@255 ($generated@@254 $generated@@261)) 0)
 :pattern ( ($generated@@254 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@149)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@64) (= (type $generated@@266) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266) ($generated@@74 $generated@@264 $generated@@265 $generated@@266)))
 :pattern ( ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@269) $generated@@149)) (= (type $generated@@270) $generated@@64)) ($generated@@132 $generated@@267 $generated@@268)) ($generated@@242 $generated@@269 $generated@@270 $generated@@267)) ($generated@@242 $generated@@269 $generated@@270 $generated@@268))
 :pattern ( ($generated@@132 $generated@@267 $generated@@268) ($generated@@242 $generated@@269 $generated@@270 $generated@@267))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@271) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@272) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@274) $generated@@64)) ($generated@@132 $generated@@271 $generated@@272)) ($generated@@74 $generated@@273 $generated@@274 $generated@@271)) ($generated@@74 $generated@@273 $generated@@274 $generated@@272))
 :pattern ( ($generated@@132 $generated@@271 $generated@@272) ($generated@@74 $generated@@273 $generated@@274 $generated@@271))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@64)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert  (=> (<= 0 $generated@@317) (forall (($generated@@322 T@U) ($generated@@323 Int) ) (!  (=> (and (= (type $generated@@322) ($generated@@256 $generated@@149)) (or ($generated@@319 $generated@@322 $generated@@323) (and (not (= 0 $generated@@317)) ($generated@@136 $generated@@322 ($generated@@320 $generated@@46))))) true)
 :pattern ( ($generated@@318 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@79 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@76 $generated@@325 $generated@@2)) (= ($generated@@155 $generated@@324) (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@325) (and (<= 0 ($generated ($generated@@81 $generated@@324 $generated@@326))) (<= ($generated ($generated@@81 $generated@@324 $generated@@326)) ($generated@@275 $generated@@324))))
 :pattern ( ($generated@@81 $generated@@324 $generated@@326))
)))))
 :pattern ( ($generated@@155 $generated@@324))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@285 (type $generated@@327))))
(let (($generated@@329 ($generated@@284 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@283 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@282 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@281 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@285 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@76 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@285 (type $generated@@334))))
(let (($generated@@336 ($generated@@284 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@283 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@282 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@81 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@299 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@303 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@76 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@303 (type $generated@@345))))
(let (($generated@@347 ($generated@@302 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@301 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@300 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@81 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@350) $generated@@64)) (= ($generated@@136 $generated@@349 ($generated@@154 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@349 $generated@@351)))) ($generated@@216 $generated@@351 $generated@@350))
 :pattern ( ($generated@@81 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@136 $generated@@349 ($generated@@154 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@353) $generated@@64)) (= (type $generated@@354) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@352 ($generated@@225 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@149) ($generated@@0 ($generated@@81 $generated@@352 $generated@@355))) ($generated@@242 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@81 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@74 $generated@@352 ($generated@@225 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@357) $generated@@64)) (= (type $generated@@358) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@356 ($generated@@230 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@149) ($generated@@0 ($generated@@81 $generated@@356 $generated@@359))) ($generated@@242 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@81 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@74 $generated@@356 ($generated@@230 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@81 ($generated@@276 $generated@@361) $generated@@360)))
)))
(assert  (and (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@362 $generated@@365)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@362 $generated@@365))
)) (forall (($generated@@366 T@T) ($generated@@367 T@U) ) (! (= (type ($generated@@363 $generated@@366 $generated@@367)) $generated@@366)
 :pattern ( ($generated@@363 $generated@@366 $generated@@367))
))) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@285 (type $generated@@368))))
(let (($generated@@370 ($generated@@284 (type $generated@@368))))
(= (type ($generated@@364 $generated@@368)) ($generated@@76 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@364 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@372) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@362 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@371) ($generated@@147 ($generated@@363 $generated@@140 $generated@@372)))) (= ($generated@@81 ($generated@@364 $generated@@371) ($generated@@147 ($generated@@363 $generated@@140 $generated@@372))) ($generated@@148 ($generated@@363 $generated@@140 $generated@@372))))))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@303 (type $generated@@376))))
(let (($generated@@378 ($generated@@302 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@76 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@380) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@379) ($generated@@147 ($generated@@363 $generated@@140 $generated@@380)))) (= ($generated@@81 ($generated@@374 $generated@@379) ($generated@@147 ($generated@@363 $generated@@140 $generated@@380))) ($generated@@148 ($generated@@363 $generated@@140 $generated@@380))))))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@284 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@283 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@81 ($generated@@331 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@81 ($generated@@364 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@381) $generated@@385))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@81 ($generated@@331 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@302 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@301 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@81 ($generated@@342 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@81 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@386) $generated@@390))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@81 ($generated@@342 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@64)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@394) $generated@@398))) (and ($generated@@242 ($generated@@81 ($generated@@364 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@242 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@394) $generated@@398))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@64)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@402) $generated@@406))) (and ($generated@@242 ($generated@@81 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@242 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@407) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@408) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@407 $generated@@409))) (and ($generated@@132 $generated@@407 $generated@@408) ($generated@@132 $generated@@408 $generated@@409))) ($generated@@132 $generated@@407 $generated@@409))
 :pattern ( ($generated@@132 $generated@@407 $generated@@408) ($generated@@132 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@76 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@303 (type $generated@@412))))
(let (($generated@@414 ($generated@@302 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@301 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@300 $generated@@414 $generated@@413)) (= ($generated@@299 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@299 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@303 (type $generated@@415))))
(let (($generated@@417 ($generated@@302 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@301 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@300 $generated@@417 $generated@@416)) (= ($generated@@342 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@342 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@303 (type $generated@@418))))
(let (($generated@@420 ($generated@@302 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@301 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@300 $generated@@420 $generated@@419)) (= ($generated@@373 $generated@@418) ($generated@@410 $generated@@149))))))
 :pattern ( ($generated@@373 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@285 (type $generated@@421))))
(let (($generated@@423 ($generated@@284 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@283 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@282 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@149) (= (type $generated@@425) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@362 $generated@@421) ($generated@@262 ($generated@@215 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@362 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@303 (type $generated@@426))))
(let (($generated@@428 ($generated@@302 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@301 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@300 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@149) (= (type $generated@@430) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@373 $generated@@426) ($generated@@262 ($generated@@215 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@149) ($generated@@216 $generated@@431 $generated@@46)) (and (= ($generated@@262 ($generated@@363 $generated@@2 $generated@@431)) $generated@@431) ($generated@@136 ($generated@@363 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@216 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@149) ($generated@@216 $generated@@432 $generated@@47)) (and (= ($generated@@262 ($generated@@363 $generated@@3 $generated@@432)) $generated@@432) ($generated@@136 ($generated@@363 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@216 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@149) ($generated@@216 $generated@@433 $generated@@44)) (and (= ($generated@@262 ($generated@@363 $generated@@4 $generated@@433)) $generated@@433) ($generated@@136 ($generated@@363 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@216 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@149) ($generated@@216 $generated@@435 $generated@@45)) (and (= ($generated@@262 ($generated@@363 $generated@@434 $generated@@435)) $generated@@435) ($generated@@136 ($generated@@363 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@216 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@64) (= ($generated@@216 ($generated@@262 $generated@@436) $generated@@437) ($generated@@136 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@216 ($generated@@262 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@79 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@76 $generated@@439 $generated@@2)) (<= 0 ($generated@@275 $generated@@438))))
 :pattern ( ($generated@@275 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@257 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@256 $generated@@441)) (<= 0 ($generated@@255 $generated@@440))))
 :pattern ( ($generated@@255 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@391 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@391 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@391 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@391 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@72 ($generated@@391 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@399 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@399 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@399 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@72 ($generated@@399 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@149) (= (type $generated@@463) $generated@@149)) (= ($generated@@248 ($generated@@215 $generated@@462 $generated@@463)) $generated@@61))
 :pattern ( ($generated@@215 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@464 ($generated@@139 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@139 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@139 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@139 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@149) (= (type $generated@@473) $generated@@149)) (= ($generated@@147 ($generated@@215 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@215 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@149) (= (type $generated@@475) $generated@@149)) (= ($generated@@148 ($generated@@215 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@215 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 Int) ) (! (let (($generated@@479 ($generated@@257 (type $generated@@477))))
(= (type ($generated@@476 $generated@@477 $generated@@478)) $generated@@479))
 :pattern ( ($generated@@476 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@480) ($generated@@256 $generated@@149)) (= (type $generated@@481) $generated@@64)) (= (type $generated@@482) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@480 ($generated@@320 $generated@@481) $generated@@482) (forall (($generated@@483 Int) ) (!  (=> (and (<= 0 $generated@@483) (< $generated@@483 ($generated@@255 $generated@@480))) ($generated@@242 ($generated@@476 $generated@@480 $generated@@483) $generated@@481 $generated@@482))
 :pattern ( ($generated@@476 $generated@@480 $generated@@483))
))))
 :pattern ( ($generated@@74 $generated@@480 ($generated@@320 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@485 Int) ) (! (= ($generated@@484 ($generated@@75 $generated@@485)) $generated@@485)
 :pattern ( ($generated@@75 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@225 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@225 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@225 $generated@@489)) $generated@@54))
 :pattern ( ($generated@@225 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@490 ($generated@@230 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@230 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@493)) $generated@@55))
 :pattern ( ($generated@@230 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@154 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@154 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@154 $generated@@497)) $generated@@56))
 :pattern ( ($generated@@154 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@498 ($generated@@320 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@320 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@72 ($generated@@320 $generated@@501)) $generated@@57))
 :pattern ( ($generated@@320 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 (type $generated@@502)))
(= ($generated@@363 $generated@@503 ($generated@@262 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@262 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@64)) (= ($generated@@136 $generated@@504 ($generated@@391 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@504) $generated@@507))) (and ($generated@@216 ($generated@@81 ($generated@@364 $generated@@504) $generated@@507) $generated@@506) ($generated@@216 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@504) $generated@@507))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@136 $generated@@504 ($generated@@391 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@509) $generated@@64)) (= (type $generated@@510) $generated@@64)) (= ($generated@@136 $generated@@508 ($generated@@399 $generated@@509 $generated@@510)) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@508) $generated@@511))) (and ($generated@@216 ($generated@@81 ($generated@@374 $generated@@508) $generated@@511) $generated@@510) ($generated@@216 $generated@@511 $generated@@509)))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@508) $generated@@511))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@508) $generated@@511))
))))
 :pattern ( ($generated@@136 $generated@@508 ($generated@@399 $generated@@509 $generated@@510)))
)))
(assert  (=> (<= 0 $generated@@317) (forall (($generated@@512 T@U) ($generated@@513 Int) ) (!  (=> (and (= (type $generated@@512) ($generated@@256 $generated@@149)) (or ($generated@@319 ($generated@@237 $generated@@512) ($generated@@235 $generated@@513)) (and (not (= 0 $generated@@317)) ($generated@@136 $generated@@512 ($generated@@320 $generated@@46))))) (= ($generated@@318 ($generated@@237 $generated@@512) ($generated@@235 $generated@@513))  (and (and (<= ($generated@@235 0) ($generated@@235 $generated@@513)) (< $generated@@513 ($generated@@255 ($generated@@237 $generated@@512)))) (forall (($generated@@514 Int) ) (!  (=> true (and (and (=> (and (<= ($generated@@235 0) $generated@@514) (< $generated@@514 $generated@@513)) (not (= ($generated ($generated@@363 $generated@@2 ($generated@@476 ($generated@@237 $generated@@512) $generated@@514))) ($generated ($generated@@363 $generated@@2 ($generated@@476 ($generated@@237 $generated@@512) ($generated@@235 $generated@@513))))))) (=> (and (<= ($generated@@235 0) $generated@@514) (< $generated@@514 $generated@@513)) (not (= (- ($generated ($generated@@363 $generated@@2 ($generated@@476 ($generated@@237 $generated@@512) $generated@@514))) ($generated ($generated@@363 $generated@@2 ($generated@@476 ($generated@@237 $generated@@512) ($generated@@235 $generated@@513))))) (- $generated@@513 $generated@@514))))) (=> (and (<= ($generated@@235 0) $generated@@514) (< $generated@@514 $generated@@513)) (not (= (- ($generated ($generated@@363 $generated@@2 ($generated@@476 ($generated@@237 $generated@@512) ($generated@@235 $generated@@513)))) ($generated ($generated@@363 $generated@@2 ($generated@@476 ($generated@@237 $generated@@512) $generated@@514)))) (- $generated@@513 $generated@@514))))))
 :pattern ( ($generated@@363 $generated@@2 ($generated@@476 $generated@@512 $generated@@514)))
)))))
 :weight 3
 :pattern ( ($generated@@318 ($generated@@237 $generated@@512) ($generated@@235 $generated@@513)))
))))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@149) (= (type $generated@@518) $generated@@149)) (< ($generated@@515 $generated@@517) ($generated@@516 ($generated@@215 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@215 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@149) (= (type $generated@@520) $generated@@149)) (< ($generated@@515 $generated@@520) ($generated@@516 ($generated@@215 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@215 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@149) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) $generated@@64)) ($generated@@216 $generated@@521 ($generated@@391 $generated@@522 $generated@@523))) (and (= ($generated@@262 ($generated@@363 ($generated@@283 $generated@@149 $generated@@149) $generated@@521)) $generated@@521) ($generated@@136 ($generated@@363 ($generated@@283 $generated@@149 $generated@@149) $generated@@521) ($generated@@391 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@216 $generated@@521 ($generated@@391 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@149) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) ($generated@@216 $generated@@524 ($generated@@399 $generated@@525 $generated@@526))) (and (= ($generated@@262 ($generated@@363 ($generated@@301 $generated@@149 $generated@@149) $generated@@524)) $generated@@524) ($generated@@136 ($generated@@363 ($generated@@301 $generated@@149 $generated@@149) $generated@@524) ($generated@@399 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@216 $generated@@524 ($generated@@399 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@64) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@149)) ($generated@@216 $generated@@529 ($generated@@139 $generated@@527 $generated@@528))) (and (= ($generated@@262 ($generated@@363 $generated@@140 $generated@@529)) $generated@@529) ($generated@@136 ($generated@@363 $generated@@140 $generated@@529) ($generated@@139 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@216 $generated@@529 ($generated@@139 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
 (not ($generated@@0 ($generated@@81 ($generated@@410 $generated@@531) $generated@@530))))
 :pattern ( (let (($generated@@531 (type $generated@@530)))
($generated@@81 ($generated@@410 $generated@@531) $generated@@530)))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@69)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (and (= ($generated@@72 ($generated@@139 $generated@@534 $generated@@535)) $generated@@62) (= ($generated@@532 ($generated@@139 $generated@@534 $generated@@535)) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@534 $generated@@535))
)))
(assert  (=> (<= 0 $generated@@317) (forall (($generated@@536 T@U) ($generated@@537 Int) ) (!  (=> (and (= (type $generated@@536) ($generated@@256 $generated@@149)) (or ($generated@@319 $generated@@536 $generated@@537) (and (not (= 0 $generated@@317)) ($generated@@136 $generated@@536 ($generated@@320 $generated@@46))))) (= ($generated@@318 $generated@@536 $generated@@537)  (and (and (<= ($generated@@235 0) $generated@@537) (< $generated@@537 ($generated@@255 $generated@@536))) (forall (($generated@@538 Int) ) (!  (=> true (and (and (=> (and (<= ($generated@@235 0) $generated@@538) (< $generated@@538 $generated@@537)) (not (= ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@538))) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@537)))))) (=> (and (<= ($generated@@235 0) $generated@@538) (< $generated@@538 $generated@@537)) (not (= (- ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@538))) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@537)))) (- $generated@@537 $generated@@538))))) (=> (and (<= ($generated@@235 0) $generated@@538) (< $generated@@538 $generated@@537)) (not (= (- ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@537))) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@538)))) (- $generated@@537 $generated@@538))))))
 :pattern ( ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@538)))
)))))
 :pattern ( ($generated@@318 $generated@@536 $generated@@537))
))))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@140) (= ($generated@@515 ($generated@@262 $generated@@539)) ($generated@@516 $generated@@539)))
 :pattern ( ($generated@@515 ($generated@@262 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@149) ($generated@@216 $generated@@540 ($generated@@75 0))) (and (= ($generated@@262 ($generated@@363 $generated@@2 $generated@@540)) $generated@@540) ($generated@@136 ($generated@@363 ($generated@@76 $generated@@149 $generated@@4) $generated@@540) ($generated@@75 0))))
 :pattern ( ($generated@@216 $generated@@540 ($generated@@75 0)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@149) (= (type $generated@@542) $generated@@64)) ($generated@@216 $generated@@541 ($generated@@225 $generated@@542))) (and (= ($generated@@262 ($generated@@363 ($generated@@76 $generated@@149 $generated@@4) $generated@@541)) $generated@@541) ($generated@@136 ($generated@@363 ($generated@@76 $generated@@149 $generated@@4) $generated@@541) ($generated@@225 $generated@@542))))
 :pattern ( ($generated@@216 $generated@@541 ($generated@@225 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@149) (= (type $generated@@544) $generated@@64)) ($generated@@216 $generated@@543 ($generated@@230 $generated@@544))) (and (= ($generated@@262 ($generated@@363 ($generated@@76 $generated@@149 $generated@@4) $generated@@543)) $generated@@543) ($generated@@136 ($generated@@363 ($generated@@76 $generated@@149 $generated@@4) $generated@@543) ($generated@@230 $generated@@544))))
 :pattern ( ($generated@@216 $generated@@543 ($generated@@230 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@149) (= (type $generated@@546) $generated@@64)) ($generated@@216 $generated@@545 ($generated@@154 $generated@@546))) (and (= ($generated@@262 ($generated@@363 ($generated@@76 $generated@@149 $generated@@2) $generated@@545)) $generated@@545) ($generated@@136 ($generated@@363 ($generated@@76 $generated@@149 $generated@@2) $generated@@545) ($generated@@154 $generated@@546))))
 :pattern ( ($generated@@216 $generated@@545 ($generated@@154 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@149) (= (type $generated@@548) $generated@@64)) ($generated@@216 $generated@@547 ($generated@@320 $generated@@548))) (and (= ($generated@@262 ($generated@@363 ($generated@@256 $generated@@149) $generated@@547)) $generated@@547) ($generated@@136 ($generated@@363 ($generated@@256 $generated@@149) $generated@@547) ($generated@@320 $generated@@548))))
 :pattern ( ($generated@@216 $generated@@547 ($generated@@320 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@549 ($generated@@154 $generated@@550) $generated@@551) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@549 $generated@@552)))) ($generated@@242 $generated@@552 $generated@@550 $generated@@551))
 :pattern ( ($generated@@81 $generated@@549 $generated@@552))
))))
 :pattern ( ($generated@@74 $generated@@549 ($generated@@154 $generated@@550) $generated@@551))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 Int) ) (! (let (($generated@@557 ($generated@@257 (type $generated@@554))))
 (=> (and (= (type $generated@@554) ($generated@@256 $generated@@557)) (= (type $generated@@555) ($generated@@256 $generated@@557))) (= ($generated@@553 $generated@@554 $generated@@555 $generated@@556) (forall (($generated@@558 Int) ) (!  (=> (and (<= 0 $generated@@558) (< $generated@@558 $generated@@556)) (= ($generated@@476 $generated@@554 $generated@@558) ($generated@@476 $generated@@555 $generated@@558)))
 :pattern ( ($generated@@476 $generated@@554 $generated@@558))
 :pattern ( ($generated@@476 $generated@@555 $generated@@558))
)))))
 :pattern ( ($generated@@553 $generated@@554 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@140) (= (type $generated@@560) $generated@@64)) (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@561) (and ($generated@@138 $generated@@559) (exists (($generated@@562 T@U) ) (!  (and (= (type $generated@@562) $generated@@64) ($generated@@74 $generated@@559 ($generated@@139 $generated@@560 $generated@@562) $generated@@561))
 :pattern ( ($generated@@74 $generated@@559 ($generated@@139 $generated@@560 $generated@@562) $generated@@561))
))))) ($generated@@242 ($generated@@147 $generated@@559) $generated@@560 $generated@@561))
 :pattern ( ($generated@@242 ($generated@@147 $generated@@559) $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@140) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@565) (and ($generated@@138 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@64) ($generated@@74 $generated@@563 ($generated@@139 $generated@@566 $generated@@564) $generated@@565))
 :pattern ( ($generated@@74 $generated@@563 ($generated@@139 $generated@@566 $generated@@564) $generated@@565))
))))) ($generated@@242 ($generated@@148 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@242 ($generated@@148 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@149) (= (type $generated@@568) $generated@@149)) (= ($generated@@215 ($generated@@237 $generated@@567) ($generated@@237 $generated@@568)) ($generated@@237 ($generated@@215 $generated@@567 $generated@@568))))
 :pattern ( ($generated@@215 ($generated@@237 $generated@@567) ($generated@@237 $generated@@568)))
)))
(assert (forall (($generated@@569 Int) ) (! (= ($generated@@262 ($generated@@8 ($generated@@235 $generated@@569))) ($generated@@237 ($generated@@262 ($generated@@8 $generated@@569))))
 :pattern ( ($generated@@262 ($generated@@8 ($generated@@235 $generated@@569))))
)))
(assert (forall (($generated@@570 T@U) ) (! (= ($generated@@262 ($generated@@237 $generated@@570)) ($generated@@237 ($generated@@262 $generated@@570)))
 :pattern ( ($generated@@262 ($generated@@237 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@257 (type $generated@@571))))
 (=> (and (= (type $generated@@571) ($generated@@256 $generated@@572)) (= ($generated@@255 $generated@@571) 0)) (= $generated@@571 ($generated@@254 $generated@@572))))
 :pattern ( ($generated@@255 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (! (let (($generated@@576 (type $generated@@574)))
 (=> (and (and (= (type $generated@@573) ($generated@@76 $generated@@576 $generated@@2)) (= (type $generated@@575) $generated@@2)) (<= 0 ($generated $generated@@575))) (= ($generated@@275 ($generated@@82 $generated@@573 $generated@@574 $generated@@575)) (+ (- ($generated@@275 $generated@@573) ($generated ($generated@@81 $generated@@573 $generated@@574))) ($generated $generated@@575)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@573 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@2)) ($generated@@74 $generated@@578 $generated@@46 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@46 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@3)) ($generated@@74 $generated@@580 $generated@@47 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@47 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@4)) ($generated@@74 $generated@@582 $generated@@44 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@44 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@434)) ($generated@@74 $generated@@584 $generated@@45 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@45 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@149)) ($generated@@74 $generated@@586 $generated@@48 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@48 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@256 $generated@@149)) (= (type $generated@@588) $generated@@64)) (= ($generated@@136 $generated@@587 ($generated@@320 $generated@@588)) (forall (($generated@@589 Int) ) (!  (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@255 $generated@@587))) ($generated@@216 ($generated@@476 $generated@@587 $generated@@589) $generated@@588))
 :pattern ( ($generated@@476 $generated@@587 $generated@@589))
))))
 :pattern ( ($generated@@136 $generated@@587 ($generated@@320 $generated@@588)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 Int) ) (!  (=> (= (type $generated@@591) ($generated@@256 $generated@@149)) (=> (and (<= 0 $generated@@592) (< $generated@@592 ($generated@@255 $generated@@591))) (< ($generated@@516 ($generated@@363 $generated@@140 ($generated@@476 $generated@@591 $generated@@592))) ($generated@@590 $generated@@591))))
 :pattern ( ($generated@@516 ($generated@@363 $generated@@140 ($generated@@476 $generated@@591 $generated@@592))))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@594) $generated@@64)) (= (type $generated@@595) $generated@@64)) ($generated@@136 $generated@@593 ($generated@@391 $generated@@594 $generated@@595))) (and (and ($generated@@136 ($generated@@281 $generated@@593) ($generated@@225 $generated@@594)) ($generated@@136 ($generated@@331 $generated@@593) ($generated@@225 $generated@@595))) ($generated@@136 ($generated@@362 $generated@@593) ($generated@@225 ($generated@@139 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@136 $generated@@593 ($generated@@391 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@597) $generated@@64)) (= (type $generated@@598) $generated@@64)) ($generated@@136 $generated@@596 ($generated@@399 $generated@@597 $generated@@598))) (and (and ($generated@@136 ($generated@@299 $generated@@596) ($generated@@230 $generated@@597)) ($generated@@136 ($generated@@342 $generated@@596) ($generated@@230 $generated@@598))) ($generated@@136 ($generated@@373 $generated@@596) ($generated@@230 ($generated@@139 $generated@@597 $generated@@598)))))
 :pattern ( ($generated@@136 $generated@@596 ($generated@@399 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@2) ($generated@@136 $generated@@599 $generated@@46))
 :pattern ( ($generated@@136 $generated@@599 $generated@@46))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@3) ($generated@@136 $generated@@600 $generated@@47))
 :pattern ( ($generated@@136 $generated@@600 $generated@@47))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@4) ($generated@@136 $generated@@601 $generated@@44))
 :pattern ( ($generated@@136 $generated@@601 $generated@@44))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@434) ($generated@@136 $generated@@602 $generated@@45))
 :pattern ( ($generated@@136 $generated@@602 $generated@@45))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@149) ($generated@@136 $generated@@603 $generated@@48))
 :pattern ( ($generated@@136 $generated@@603 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () Int)
(declare-fun $generated@@607 () T@U)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () Int)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () Int)
(declare-fun $generated@@613 () Bool)
(declare-fun $generated@@614 () T@U)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 (T@U) Bool)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () T@U)
(declare-fun $generated@@620 () T@U)
(assert  (and (and (and (and (and (and (and (and (= (type $generated@@604) ($generated@@256 $generated@@149)) (= (type $generated@@605) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@607) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@609) ($generated@@256 $generated@@149))) (= (type $generated@@611) ($generated@@256 $generated@@149))) (= (type $generated@@614) ($generated@@256 $generated@@149))) (= (type $generated@@617) $generated@@77)) (= (type $generated@@619) ($generated@@161 $generated@@77 $generated@@4))) (= (type $generated@@620) ($generated@@256 $generated@@149))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 53) (let (($generated@@621 true))
(let (($generated@@622 true))
(let (($generated@@623 true))
(let (($generated@@624 true))
(let (($generated@@625  (=> (and (not (and ($generated@@136 $generated@@604 ($generated@@320 $generated@@46)) ($generated@@74 $generated@@604 ($generated@@320 $generated@@46) $generated@@605))) (= (ControlFlow 0 5) 2)) $generated@@624)))
(let (($generated@@626  (=> (and (and (and ($generated@@136 $generated@@604 ($generated@@320 $generated@@46)) ($generated@@74 $generated@@604 ($generated@@320 $generated@@46) $generated@@605)) ($generated@@74 $generated@@604 ($generated@@320 $generated@@46) $generated@@605)) (and ($generated@@74 ($generated@@8 $generated@@606) $generated@@46 $generated@@605) ($generated@@319 $generated@@604 $generated@@606))) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@74 $generated@@604 ($generated@@320 $generated@@46) $generated@@607)) (=> ($generated@@74 $generated@@604 ($generated@@320 $generated@@46) $generated@@607) (=> (and ($generated@@319 $generated@@604 $generated@@606) (= (ControlFlow 0 3) 2)) $generated@@624))))))
(let (($generated@@627  (=> (forall (($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@256 $generated@@149)) ($generated@@136 $generated@@628 ($generated@@320 $generated@@46))) (=> (and (and (= ($generated@@255 $generated@@628) $generated@@608) (forall (($generated@@629 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@629) (< $generated@@629 $generated@@608)) (<= ($generated@@235 0) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@628 $generated@@629))))) (=> (and (<= ($generated@@235 0) $generated@@629) (< $generated@@629 $generated@@608)) (< ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@628 $generated@@629))) $generated@@608))))
 :pattern ( ($generated@@363 $generated@@2 ($generated@@476 $generated@@628 $generated@@629)))
))) (and (<= ($generated@@255 $generated@@609) ($generated@@255 $generated@@628)) ($generated@@553 $generated@@609 $generated@@628 ($generated@@255 $generated@@609)))) (exists (($generated@@630 Int) ) (!  (and (and (<= ($generated@@235 0) $generated@@630) (< $generated@@630 $generated@@608)) (not ($generated@@318 $generated@@628 $generated@@630)))
 :pattern ( ($generated@@318 $generated@@628 $generated@@630))
))))
 :pattern ( ($generated@@255 $generated@@628))
)) (and (=> (= (ControlFlow 0 7) 3) $generated@@626) (=> (= (ControlFlow 0 7) 5) $generated@@625)))))
(let (($generated@@631  (=> (and (not (and (<= ($generated@@235 0) $generated@@610) (< $generated@@610 $generated@@608))) (= (ControlFlow 0 12) 7)) $generated@@627)))
(let (($generated@@632  (=> (and (<= ($generated@@235 0) $generated@@610) (< $generated@@610 $generated@@608)) (=> (and (and ($generated@@74 $generated@@611 ($generated@@320 $generated@@46) $generated@@605) ($generated@@74 ($generated@@8 $generated@@610) $generated@@46 $generated@@605)) (and ($generated@@319 $generated@@611 $generated@@610) (= (ControlFlow 0 11) 7))) $generated@@627))))
(let (($generated@@633  (=> (< $generated@@610 ($generated@@235 0)) (and (=> (= (ControlFlow 0 14) 11) $generated@@632) (=> (= (ControlFlow 0 14) 12) $generated@@631)))))
(let (($generated@@634  (=> (<= ($generated@@235 0) $generated@@610) (and (=> (= (ControlFlow 0 13) 11) $generated@@632) (=> (= (ControlFlow 0 13) 12) $generated@@631)))))
(let (($generated@@635  (and (=> (= (ControlFlow 0 15) 13) $generated@@634) (=> (= (ControlFlow 0 15) 14) $generated@@633))))
(let (($generated@@636  (=> (and (and (= ($generated@@255 $generated@@611) $generated@@608) (forall (($generated@@637 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@637) (< $generated@@637 $generated@@608)) (<= ($generated@@235 0) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@611 $generated@@637))))) (=> (and (<= ($generated@@235 0) $generated@@637) (< $generated@@637 $generated@@608)) (< ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@611 $generated@@637))) $generated@@608))))
 :pattern ( ($generated@@363 $generated@@2 ($generated@@476 $generated@@611 $generated@@637)))
))) (and (<= ($generated@@255 $generated@@609) ($generated@@255 $generated@@611)) ($generated@@553 $generated@@609 $generated@@611 ($generated@@255 $generated@@609)))) (and (=> (= (ControlFlow 0 16) 15) $generated@@635) (=> (= (ControlFlow 0 16) 10) $generated@@623)))))
(let (($generated@@638  (=> (and (not (and (and (= ($generated@@255 $generated@@611) $generated@@608) (forall (($generated@@639 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@639) (< $generated@@639 $generated@@608)) (<= ($generated@@235 0) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@611 $generated@@639))))) (=> (and (<= ($generated@@235 0) $generated@@639) (< $generated@@639 $generated@@608)) (< ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@611 $generated@@639))) $generated@@608))))
 :pattern ( ($generated@@363 $generated@@2 ($generated@@476 $generated@@611 $generated@@639)))
))) (and (<= ($generated@@255 $generated@@609) ($generated@@255 $generated@@611)) ($generated@@553 $generated@@609 $generated@@611 ($generated@@255 $generated@@609))))) (= (ControlFlow 0 9) 7)) $generated@@627)))
(let (($generated@@640  (=> (not (and (= ($generated@@255 $generated@@611) $generated@@608) (forall (($generated@@641 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@641) (< $generated@@641 $generated@@608)) (<= ($generated@@235 0) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@611 $generated@@641))))) (=> (and (<= ($generated@@235 0) $generated@@641) (< $generated@@641 $generated@@608)) (< ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@611 $generated@@641))) $generated@@608))))
 :pattern ( ($generated@@363 $generated@@2 ($generated@@476 $generated@@611 $generated@@641)))
)))) (and (=> (= (ControlFlow 0 18) 16) $generated@@636) (=> (= (ControlFlow 0 18) 9) $generated@@638)))))
(let (($generated@@642  (=> (and (= ($generated@@255 $generated@@611) $generated@@608) (forall (($generated@@643 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@643) (< $generated@@643 $generated@@608)) (<= ($generated@@235 0) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@611 $generated@@643))))) (=> (and (<= ($generated@@235 0) $generated@@643) (< $generated@@643 $generated@@608)) (< ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@611 $generated@@643))) $generated@@608))))
 :pattern ( ($generated@@363 $generated@@2 ($generated@@476 $generated@@611 $generated@@643)))
))) (and (=> (= (ControlFlow 0 17) 16) $generated@@636) (=> (= (ControlFlow 0 17) 9) $generated@@638)))))
(let (($generated@@644  (=> (not (and (<= ($generated@@235 0) $generated@@612) (< $generated@@612 $generated@@608))) (and (=> (= (ControlFlow 0 24) 17) $generated@@642) (=> (= (ControlFlow 0 24) 18) $generated@@640)))))
(let (($generated@@645  (=> (and (<= ($generated@@235 0) $generated@@612) (< $generated@@612 $generated@@608)) (and (=> (= (ControlFlow 0 22) (- 0 23)) (and (<= 0 $generated@@612) (< $generated@@612 ($generated@@255 $generated@@611)))) (=> (and (<= 0 $generated@@612) (< $generated@@612 ($generated@@255 $generated@@611))) (and (=> (= (ControlFlow 0 22) 17) $generated@@642) (=> (= (ControlFlow 0 22) 18) $generated@@640)))))))
(let (($generated@@646  (=> (< $generated@@612 ($generated@@235 0)) (and (=> (= (ControlFlow 0 26) 22) $generated@@645) (=> (= (ControlFlow 0 26) 24) $generated@@644)))))
(let (($generated@@647  (=> (<= ($generated@@235 0) $generated@@612) (and (=> (= (ControlFlow 0 25) 22) $generated@@645) (=> (= (ControlFlow 0 25) 24) $generated@@644)))))
(let (($generated@@648  (=> (=> (and (<= ($generated@@235 0) $generated@@612) (< $generated@@612 $generated@@608)) (<= ($generated@@235 0) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@611 $generated@@612))))) (and (=> (= (ControlFlow 0 27) 25) $generated@@647) (=> (= (ControlFlow 0 27) 26) $generated@@646)))))
(let (($generated@@649  (=> (not (=> (and (<= ($generated@@235 0) $generated@@612) (< $generated@@612 $generated@@608)) (<= ($generated@@235 0) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@611 $generated@@612)))))) (and (=> (= (ControlFlow 0 21) 17) $generated@@642) (=> (= (ControlFlow 0 21) 18) $generated@@640)))))
(let (($generated@@650  (=> (not (and (<= ($generated@@235 0) $generated@@612) (< $generated@@612 $generated@@608))) (and (=> (= (ControlFlow 0 30) 27) $generated@@648) (=> (= (ControlFlow 0 30) 21) $generated@@649)))))
(let (($generated@@651  (=> (and (<= ($generated@@235 0) $generated@@612) (< $generated@@612 $generated@@608)) (and (=> (= (ControlFlow 0 28) (- 0 29)) (and (<= 0 $generated@@612) (< $generated@@612 ($generated@@255 $generated@@611)))) (=> (and (<= 0 $generated@@612) (< $generated@@612 ($generated@@255 $generated@@611))) (and (=> (= (ControlFlow 0 28) 27) $generated@@648) (=> (= (ControlFlow 0 28) 21) $generated@@649)))))))
(let (($generated@@652  (=> (< $generated@@612 ($generated@@235 0)) (and (=> (= (ControlFlow 0 32) 28) $generated@@651) (=> (= (ControlFlow 0 32) 30) $generated@@650)))))
(let (($generated@@653  (=> (<= ($generated@@235 0) $generated@@612) (and (=> (= (ControlFlow 0 31) 28) $generated@@651) (=> (= (ControlFlow 0 31) 30) $generated@@650)))))
(let (($generated@@654  (and (=> (= (ControlFlow 0 33) 31) $generated@@653) (=> (= (ControlFlow 0 33) 32) $generated@@652))))
(let (($generated@@655  (=> (= ($generated@@255 $generated@@611) $generated@@608) (and (=> (= (ControlFlow 0 34) 33) $generated@@654) (=> (= (ControlFlow 0 34) 20) $generated@@622)))))
(let (($generated@@656  (=> (not (= ($generated@@255 $generated@@611) $generated@@608)) (and (=> (= (ControlFlow 0 19) 17) $generated@@642) (=> (= (ControlFlow 0 19) 18) $generated@@640)))))
(let (($generated@@657  (=> (and ($generated@@136 $generated@@611 ($generated@@320 $generated@@46)) ($generated@@74 $generated@@611 ($generated@@320 $generated@@46) $generated@@605)) (and (=> (= (ControlFlow 0 35) 34) $generated@@655) (=> (= (ControlFlow 0 35) 19) $generated@@656)))))
(let (($generated@@658  (=> (and (not (and ($generated@@136 $generated@@611 ($generated@@320 $generated@@46)) ($generated@@74 $generated@@611 ($generated@@320 $generated@@46) $generated@@605))) (= (ControlFlow 0 8) 7)) $generated@@627)))
(let (($generated@@659  (=> (not $generated@@613) (and (=> (= (ControlFlow 0 36) 35) $generated@@657) (=> (= (ControlFlow 0 36) 8) $generated@@658)))))
(let (($generated@@660  (=> (=> (not $generated@@613) (forall (($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@256 $generated@@149)) ($generated@@136 $generated@@661 ($generated@@320 $generated@@46))) (=> (and (and (= ($generated@@255 $generated@@661) $generated@@608) (forall (($generated@@662 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@662) (< $generated@@662 $generated@@608)) (<= ($generated@@235 0) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@661 $generated@@662))))) (=> (and (<= ($generated@@235 0) $generated@@662) (< $generated@@662 $generated@@608)) (< ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@661 $generated@@662))) $generated@@608))))
 :pattern ( ($generated@@363 $generated@@2 ($generated@@476 $generated@@661 $generated@@662)))
))) (and (<= ($generated@@255 $generated@@609) ($generated@@255 $generated@@661)) ($generated@@553 $generated@@609 $generated@@661 ($generated@@255 $generated@@609)))) (exists (($generated@@663 Int) ) (!  (and (and (<= ($generated@@235 0) $generated@@663) (< $generated@@663 $generated@@608)) (not ($generated@@318 $generated@@661 $generated@@663)))
 :pattern ( ($generated@@318 $generated@@661 $generated@@663))
))))
 :pattern ( ($generated@@255 $generated@@661))
))) (and (=> (= (ControlFlow 0 6) 3) $generated@@626) (=> (= (ControlFlow 0 6) 5) $generated@@625)))))
(let (($generated@@664  (=> (forall (($generated@@665 Int) ) (!  (=> true (=> (and (<= ($generated@@235 0) $generated@@665) (< $generated@@665 $generated@@608)) ($generated@@318 $generated@@614 $generated@@665)))
 :pattern ( ($generated@@318 $generated@@614 $generated@@665))
)) (and (=> (= (ControlFlow 0 39) 36) $generated@@659) (=> (= (ControlFlow 0 39) 6) $generated@@660)))))
(let (($generated@@666  (=> (and (not (and (<= ($generated@@235 0) $generated@@615) (< $generated@@615 $generated@@608))) (= (ControlFlow 0 41) 39)) $generated@@664)))
(let (($generated@@667  (=> (and (<= ($generated@@235 0) $generated@@615) (< $generated@@615 $generated@@608)) (=> (and (and ($generated@@74 $generated@@614 ($generated@@320 $generated@@46) $generated@@605) ($generated@@74 ($generated@@8 $generated@@615) $generated@@46 $generated@@605)) (and ($generated@@319 $generated@@614 $generated@@615) (= (ControlFlow 0 40) 39))) $generated@@664))))
(let (($generated@@668  (=> (< $generated@@615 ($generated@@235 0)) (and (=> (= (ControlFlow 0 43) 40) $generated@@667) (=> (= (ControlFlow 0 43) 41) $generated@@666)))))
(let (($generated@@669  (=> (<= ($generated@@235 0) $generated@@615) (and (=> (= (ControlFlow 0 42) 40) $generated@@667) (=> (= (ControlFlow 0 42) 41) $generated@@666)))))
(let (($generated@@670  (and (=> (= (ControlFlow 0 44) 42) $generated@@669) (=> (= (ControlFlow 0 44) 43) $generated@@668))))
(let (($generated@@671  (=> (and $generated@@613 (= ($generated@@255 $generated@@614) $generated@@608)) (and (=> (= (ControlFlow 0 45) 44) $generated@@670) (=> (= (ControlFlow 0 45) 38) $generated@@621)))))
(let (($generated@@672  (=> (=> $generated@@613 (and (= ($generated@@255 $generated@@614) $generated@@608) (forall (($generated@@673 Int) ) (!  (=> true (=> (and (<= ($generated@@235 0) $generated@@673) (< $generated@@673 $generated@@608)) ($generated@@318 $generated@@614 $generated@@673)))
 :pattern ( ($generated@@318 $generated@@614 $generated@@673))
)))) (and (=> (= (ControlFlow 0 37) 36) $generated@@659) (=> (= (ControlFlow 0 37) 6) $generated@@660)))))
(let (($generated@@674  (=> (forall (($generated@@675 Int) ) (!  (=> true (=> (and (<= ($generated@@235 0) $generated@@675) (< $generated@@675 ($generated@@255 $generated@@609))) ($generated@@318 $generated@@609 $generated@@675)))
 :pattern ( ($generated@@318 $generated@@609 $generated@@675))
)) (=> (and ($generated@@241 $generated@@605) ($generated@@616 $generated@@605)) (=> (and (and (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@77) (=> (and (not (= $generated@@676 $generated@@617)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@607 $generated@@676) $generated@@60))) (= ($generated@@81 $generated@@605 $generated@@676) ($generated@@81 $generated@@607 $generated@@676))))
 :pattern ( ($generated@@81 $generated@@605 $generated@@676))
)) ($generated@@132 $generated@@607 $generated@@605)) (and ($generated@@136 $generated@@614 ($generated@@320 $generated@@46)) ($generated@@74 $generated@@614 ($generated@@320 $generated@@46) $generated@@605))) (and (=> (= (ControlFlow 0 46) 45) $generated@@671) (=> (= (ControlFlow 0 46) 37) $generated@@672)))))))
(let (($generated@@677  (=> (and (not (and (<= ($generated@@235 0) $generated@@618) (< $generated@@618 ($generated@@255 $generated@@609)))) (= (ControlFlow 0 48) 46)) $generated@@674)))
(let (($generated@@678  (=> (and (<= ($generated@@235 0) $generated@@618) (< $generated@@618 ($generated@@255 $generated@@609))) (=> (and (and ($generated@@74 $generated@@609 ($generated@@320 $generated@@46) $generated@@607) ($generated@@74 ($generated@@8 $generated@@618) $generated@@46 $generated@@607)) (and ($generated@@319 $generated@@609 $generated@@618) (= (ControlFlow 0 47) 46))) $generated@@674))))
(let (($generated@@679  (=> (< $generated@@618 ($generated@@235 0)) (and (=> (= (ControlFlow 0 50) 47) $generated@@678) (=> (= (ControlFlow 0 50) 48) $generated@@677)))))
(let (($generated@@680  (=> (<= ($generated@@235 0) $generated@@618) (and (=> (= (ControlFlow 0 49) 47) $generated@@678) (=> (= (ControlFlow 0 49) 48) $generated@@677)))))
(let (($generated@@681  (and (=> (= (ControlFlow 0 51) 49) $generated@@680) (=> (= (ControlFlow 0 51) 50) $generated@@679))))
(let (($generated@@682 true))
(let (($generated@@683  (=> (= $generated@@619 ($generated@@160 $generated@@617 $generated@@607 $generated@@60 false)) (=> (and (<= ($generated@@235 0) $generated@@608) (<= ($generated@@255 $generated@@609) $generated@@608)) (and (=> (= (ControlFlow 0 52) 51) $generated@@681) (=> (= (ControlFlow 0 52) 1) $generated@@682))))))
(let (($generated@@684  (=> (and (and (and ($generated@@241 $generated@@607) ($generated@@616 $generated@@607)) (and ($generated@@136 $generated@@609 ($generated@@320 $generated@@46)) ($generated@@74 $generated@@609 ($generated@@320 $generated@@46) $generated@@607))) (and (and ($generated@@136 $generated@@620 ($generated@@320 $generated@@46)) ($generated@@74 $generated@@620 ($generated@@320 $generated@@46) $generated@@607)) (and (= 1 $generated@@317) (= (ControlFlow 0 53) 52)))) $generated@@683)))
$generated@@684)))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) Bool)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (Int) Int)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@241 (T@U T@U) T@U)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@243 (T@T) T@T)
(declare-fun $generated@@244 (T@T) T@T)
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@267 (T@T) T@U)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 (T@T T@T) T@U)
(declare-fun $generated@@295 (T@T T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@329 () Int)
(declare-fun $generated@@330 (T@U Int) Bool)
(declare-fun $generated@@331 (T@U Int) Bool)
(declare-fun $generated@@334 (T@U T@U) T@U)
(declare-fun $generated@@344 (T@U Int) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@388 (T@T T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@416 (T@U T@U) T@U)
(declare-fun $generated@@424 (T@U T@U) T@U)
(declare-fun $generated@@435 (T@T) T@U)
(declare-fun $generated@@459 () T@T)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@505 (T@U) Int)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@583 (T@U T@U Int) Bool)
(declare-fun $generated@@624 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and (= (type $generated@@133) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@132 $generated@@133 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@133 $generated@@135) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60))
)))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) $generated@@64)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@158) $generated@@64)) ($generated@@136 $generated@@157 ($generated@@154 $generated@@158))) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@136 $generated@@157 ($generated@@154 $generated@@158)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@77 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@67 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@77) (= (type $generated@@209) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@210) ($generated@@66 $generated@@4))) (= (type $generated@@212) $generated@@77)) (= (type $generated@@213) ($generated@@66 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= (type ($generated@@215 $generated@@217 $generated@@218)) $generated@@140)
 :pattern ( ($generated@@215 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@64) (= (type $generated@@220) $generated@@64)) (= (type $generated@@221) $generated@@149)) (= (type $generated@@222) $generated@@149)) (= ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220))  (and ($generated@@216 $generated@@221 $generated@@219) ($generated@@216 $generated@@222 $generated@@220))))
 :pattern ( ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@140) (= (type $generated@@224) $generated@@140)) (= ($generated@@146 $generated@@223 $generated@@224) (= $generated@@223 $generated@@224)))
 :pattern ( ($generated@@146 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (! (= (type ($generated@@225 $generated@@226)) $generated@@64)
 :pattern ( ($generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@228) $generated@@64)) (= ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)) (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@149) ($generated@@0 ($generated@@81 $generated@@227 $generated@@229))) ($generated@@216 $generated@@229 $generated@@228))
 :pattern ( ($generated@@81 $generated@@227 $generated@@229))
))))
 :pattern ( ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@149) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@216 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 Int) ) (! (= ($generated@@235 $generated@@236) $generated@@236)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(= (type ($generated@@237 $generated@@238)) $generated@@239))
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= ($generated@@237 $generated@@240) $generated@@240)
 :pattern ( ($generated@@237 $generated@@240))
)))
(assert  (and (and (and (forall (($generated@@245 T@T) ) (= ($generated@@1 ($generated@@243 $generated@@245)) 17)) (forall (($generated@@246 T@T) ) (! (= ($generated@@244 ($generated@@243 $generated@@246)) $generated@@246)
 :pattern ( ($generated@@243 $generated@@246))
))) (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 (type $generated@@248)))
(= (type ($generated@@241 $generated@@247 $generated@@248)) ($generated@@243 $generated@@249)))
 :pattern ( ($generated@@241 $generated@@247 $generated@@248))
))) (forall (($generated@@250 T@U) ) (! (= (type ($generated@@242 $generated@@250)) $generated@@64)
 :pattern ( ($generated@@242 $generated@@250))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (= (type $generated@@251) ($generated@@243 $generated@@149)) (= (type $generated@@252) $generated@@149)) (= (type $generated@@253) $generated@@64)) (and ($generated@@136 $generated@@251 ($generated@@242 $generated@@253)) ($generated@@216 $generated@@252 $generated@@253))) ($generated@@136 ($generated@@241 $generated@@251 $generated@@252) ($generated@@242 $generated@@253)))
 :pattern ( ($generated@@136 ($generated@@241 $generated@@251 $generated@@252) ($generated@@242 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@256) $generated@@64) (= (type $generated@@257) $generated@@64)) (= (type $generated@@258) $generated@@149)) (= (type $generated@@259) $generated@@149)) (= (type $generated@@260) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@254 $generated@@260)) (= ($generated@@74 ($generated@@215 $generated@@258 $generated@@259) ($generated@@139 $generated@@256 $generated@@257) $generated@@260)  (and ($generated@@255 $generated@@258 $generated@@256 $generated@@260) ($generated@@255 $generated@@259 $generated@@257 $generated@@260))))
 :pattern ( ($generated@@74 ($generated@@215 $generated@@258 $generated@@259) ($generated@@139 $generated@@256 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@68)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ) (!  (=> (= (type $generated@@263) $generated@@140) (= ($generated@@138 $generated@@263) (= ($generated@@261 $generated@@263) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@264) $generated@@140) ($generated@@138 $generated@@264)) (exists (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (and (and (= (type $generated@@265) $generated@@149) (= (type $generated@@266) $generated@@149)) (= $generated@@264 ($generated@@215 $generated@@265 $generated@@266)))
 :no-pattern (type $generated@@265)
 :no-pattern (type $generated@@266)
 :no-pattern ($generated $generated@@265)
 :no-pattern ($generated@@0 $generated@@265)
 :no-pattern ($generated $generated@@266)
 :no-pattern ($generated@@0 $generated@@266)
)))
 :pattern ( ($generated@@138 $generated@@264))
)))
(assert (forall (($generated@@269 T@T) ) (! (= (type ($generated@@267 $generated@@269)) ($generated@@243 $generated@@269))
 :pattern ( ($generated@@267 $generated@@269))
)))
(assert (forall (($generated@@270 T@T) ) (! (= ($generated@@268 ($generated@@267 $generated@@270)) 0)
 :pattern ( ($generated@@267 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (! (let (($generated@@273 (type $generated@@272)))
 (=> (= (type $generated@@271) ($generated@@243 $generated@@273)) (= ($generated@@268 ($generated@@241 $generated@@271 $generated@@272)) (+ 1 ($generated@@268 $generated@@271)))))
 :pattern ( ($generated@@241 $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@149)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@64) (= (type $generated@@278) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@255 ($generated@@274 $generated@@276) $generated@@277 $generated@@278) ($generated@@74 $generated@@276 $generated@@277 $generated@@278)))
 :pattern ( ($generated@@255 ($generated@@274 $generated@@276) $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@279) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@280) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@281) $generated@@149)) (= (type $generated@@282) $generated@@64)) ($generated@@132 $generated@@279 $generated@@280)) ($generated@@255 $generated@@281 $generated@@282 $generated@@279)) ($generated@@255 $generated@@281 $generated@@282 $generated@@280))
 :pattern ( ($generated@@132 $generated@@279 $generated@@280) ($generated@@255 $generated@@281 $generated@@282 $generated@@279))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@283) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@284) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@286) $generated@@64)) ($generated@@132 $generated@@283 $generated@@284)) ($generated@@74 $generated@@285 $generated@@286 $generated@@283)) ($generated@@74 $generated@@285 $generated@@286 $generated@@284))
 :pattern ( ($generated@@132 $generated@@283 $generated@@284) ($generated@@74 $generated@@285 $generated@@286 $generated@@283))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@76 $generated@@289 $generated@@2))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@79 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@76 $generated@@291 $generated@@2)) (and (= (= ($generated@@287 $generated@@290) 0) (= $generated@@290 ($generated@@288 $generated@@291))) (=> (not (= ($generated@@287 $generated@@290) 0)) (exists (($generated@@292 T@U) ) (!  (and (= (type $generated@@292) $generated@@291) (< 0 ($generated ($generated@@81 $generated@@290 $generated@@292))))
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
))))))
 :pattern ( ($generated@@287 $generated@@290))
)))
(assert  (and (and (and (and (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@298 $generated@@299)) 18)) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@295 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@295 $generated@@302 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@295 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@296 (type $generated@@304))))
(= (type ($generated@@293 $generated@@304)) ($generated@@76 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@293 $generated@@304))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@294 $generated@@306 $generated@@307)) ($generated@@295 $generated@@306 $generated@@307))
 :pattern ( ($generated@@294 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@81 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@81 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 19)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@76 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@81 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@81 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert  (=> (<= 0 $generated@@329) (forall (($generated@@332 T@U) ($generated@@333 Int) ) (!  (=> (and (= (type $generated@@332) ($generated@@243 $generated@@149)) (or ($generated@@331 $generated@@332 $generated@@333) (and (not (= 0 $generated@@329)) ($generated@@136 $generated@@332 ($generated@@242 $generated@@46))))) true)
 :pattern ( ($generated@@330 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@244 (type $generated@@335))))
(= (type ($generated@@334 $generated@@335 $generated@@336)) ($generated@@243 $generated@@337)))
 :pattern ( ($generated@@334 $generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@244 (type $generated@@338))))
 (=> (and (= (type $generated@@338) ($generated@@243 $generated@@340)) (= (type $generated@@339) ($generated@@243 $generated@@340))) (= ($generated@@268 ($generated@@334 $generated@@338 $generated@@339)) (+ ($generated@@268 $generated@@338) ($generated@@268 $generated@@339)))))
 :pattern ( ($generated@@268 ($generated@@334 $generated@@338 $generated@@339)))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@79 (type $generated@@341))))
 (=> (= (type $generated@@341) ($generated@@76 $generated@@342 $generated@@2)) (= ($generated@@155 $generated@@341) (forall (($generated@@343 T@U) ) (!  (=> (= (type $generated@@343) $generated@@342) (and (<= 0 ($generated ($generated@@81 $generated@@341 $generated@@343))) (<= ($generated ($generated@@81 $generated@@341 $generated@@343)) ($generated@@287 $generated@@341))))
 :pattern ( ($generated@@81 $generated@@341 $generated@@343))
)))))
 :pattern ( ($generated@@155 $generated@@341))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 Int) ) (! (let (($generated@@347 ($generated@@244 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345 $generated@@346)) $generated@@347))
 :pattern ( ($generated@@344 $generated@@345 $generated@@346))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 Int) ($generated@@350 T@U) ) (! (let (($generated@@351 (type $generated@@350)))
 (=> (= (type $generated@@348) ($generated@@243 $generated@@351)) (and (=> (= $generated@@349 ($generated@@268 $generated@@348)) (= ($generated@@344 ($generated@@241 $generated@@348 $generated@@350) $generated@@349) $generated@@350)) (=> (not (= $generated@@349 ($generated@@268 $generated@@348))) (= ($generated@@344 ($generated@@241 $generated@@348 $generated@@350) $generated@@349) ($generated@@344 $generated@@348 $generated@@349))))))
 :pattern ( ($generated@@344 ($generated@@241 $generated@@348 $generated@@350) $generated@@349))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@297 (type $generated@@352))))
(let (($generated@@354 ($generated@@296 (type $generated@@352))))
 (=> (= (type $generated@@352) ($generated@@295 $generated@@354 $generated@@353)) (or (= $generated@@352 ($generated@@294 $generated@@354 $generated@@353)) (exists (($generated@@355 T@U) ) (!  (and (= (type $generated@@355) $generated@@354) ($generated@@0 ($generated@@81 ($generated@@293 $generated@@352) $generated@@355)))
 :no-pattern (type $generated@@355)
 :no-pattern ($generated $generated@@355)
 :no-pattern ($generated@@0 $generated@@355)
))))))
 :pattern ( ($generated@@293 $generated@@352))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@297 (type $generated@@357))))
(= (type ($generated@@356 $generated@@357)) ($generated@@76 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@356 $generated@@357))
)))
(assert (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@297 (type $generated@@359))))
(let (($generated@@361 ($generated@@296 (type $generated@@359))))
 (=> (= (type $generated@@359) ($generated@@295 $generated@@361 $generated@@360)) (or (= $generated@@359 ($generated@@294 $generated@@361 $generated@@360)) (exists (($generated@@362 T@U) ) (!  (and (= (type $generated@@362) $generated@@360) ($generated@@0 ($generated@@81 ($generated@@356 $generated@@359) $generated@@362)))
 :no-pattern (type $generated@@362)
 :no-pattern ($generated $generated@@362)
 :no-pattern ($generated@@0 $generated@@362)
))))))
 :pattern ( ($generated@@356 $generated@@359))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@315 (type $generated@@363))))
(let (($generated@@365 ($generated@@314 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@313 $generated@@365 $generated@@364)) (or (= $generated@@363 ($generated@@312 $generated@@365 $generated@@364)) (exists (($generated@@366 T@U) ) (!  (and (= (type $generated@@366) $generated@@365) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@363) $generated@@366)))
 :no-pattern (type $generated@@366)
 :no-pattern ($generated $generated@@366)
 :no-pattern ($generated@@0 $generated@@366)
))))))
 :pattern ( ($generated@@311 $generated@@363))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@315 (type $generated@@368))))
(= (type ($generated@@367 $generated@@368)) ($generated@@76 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@315 (type $generated@@370))))
(let (($generated@@372 ($generated@@314 (type $generated@@370))))
 (=> (= (type $generated@@370) ($generated@@313 $generated@@372 $generated@@371)) (or (= $generated@@370 ($generated@@312 $generated@@372 $generated@@371)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@371) ($generated@@0 ($generated@@81 ($generated@@367 $generated@@370) $generated@@373)))
 :no-pattern (type $generated@@373)
 :no-pattern ($generated $generated@@373)
 :no-pattern ($generated@@0 $generated@@373)
))))))
 :pattern ( ($generated@@367 $generated@@370))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@374) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@375) $generated@@64)) (= ($generated@@136 $generated@@374 ($generated@@154 $generated@@375)) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@374 $generated@@376)))) ($generated@@216 $generated@@376 $generated@@375))
 :pattern ( ($generated@@81 $generated@@374 $generated@@376))
))))
 :pattern ( ($generated@@136 $generated@@374 ($generated@@154 $generated@@375)))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@378) $generated@@64)) (= (type $generated@@379) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@377 ($generated@@225 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@149) ($generated@@0 ($generated@@81 $generated@@377 $generated@@380))) ($generated@@255 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@81 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@74 $generated@@377 ($generated@@225 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (and (= (type $generated@@381) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@382) $generated@@64)) (= (type $generated@@383) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@381 ($generated@@230 $generated@@382) $generated@@383) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@149) ($generated@@0 ($generated@@81 $generated@@381 $generated@@384))) ($generated@@255 $generated@@384 $generated@@382 $generated@@383))
 :pattern ( ($generated@@81 $generated@@381 $generated@@384))
))))
 :pattern ( ($generated@@74 $generated@@381 ($generated@@230 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 (type $generated@@385)))
(= ($generated ($generated@@81 ($generated@@288 $generated@@386) $generated@@385)) 0))
 :pattern ( (let (($generated@@386 (type $generated@@385)))
($generated@@81 ($generated@@288 $generated@@386) $generated@@385)))
)))
(assert  (and (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@387 $generated@@390)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@387 $generated@@390))
)) (forall (($generated@@391 T@T) ($generated@@392 T@U) ) (! (= (type ($generated@@388 $generated@@391 $generated@@392)) $generated@@391)
 :pattern ( ($generated@@388 $generated@@391 $generated@@392))
))) (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@297 (type $generated@@393))))
(let (($generated@@395 ($generated@@296 (type $generated@@393))))
(= (type ($generated@@389 $generated@@393)) ($generated@@76 $generated@@395 $generated@@394))))
 :pattern ( ($generated@@389 $generated@@393))
))))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@295 $generated@@149 $generated@@149)) (= (type $generated@@397) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@387 $generated@@396) $generated@@397))  (and ($generated@@0 ($generated@@81 ($generated@@293 $generated@@396) ($generated@@147 ($generated@@388 $generated@@140 $generated@@397)))) (= ($generated@@81 ($generated@@389 $generated@@396) ($generated@@147 ($generated@@388 $generated@@140 $generated@@397))) ($generated@@148 ($generated@@388 $generated@@140 $generated@@397))))))
 :pattern ( ($generated@@81 ($generated@@387 $generated@@396) $generated@@397))
)))
(assert  (and (forall (($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@400)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@398 $generated@@400))
)) (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@315 (type $generated@@401))))
(let (($generated@@403 ($generated@@314 (type $generated@@401))))
(= (type ($generated@@399 $generated@@401)) ($generated@@76 $generated@@403 $generated@@402))))
 :pattern ( ($generated@@399 $generated@@401))
))))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@313 $generated@@149 $generated@@149)) (= (type $generated@@405) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@398 $generated@@404) $generated@@405))  (and ($generated@@0 ($generated@@81 ($generated@@311 $generated@@404) ($generated@@147 ($generated@@388 $generated@@140 $generated@@405)))) (= ($generated@@81 ($generated@@399 $generated@@404) ($generated@@147 ($generated@@388 $generated@@140 $generated@@405))) ($generated@@148 ($generated@@388 $generated@@140 $generated@@405))))))
 :pattern ( ($generated@@81 ($generated@@398 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@296 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@295 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@81 ($generated@@356 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@81 ($generated@@293 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@81 ($generated@@389 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@81 ($generated@@293 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@389 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(let (($generated@@414 ($generated@@314 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@313 $generated@@414 $generated@@413)) (= ($generated@@0 ($generated@@81 ($generated@@367 $generated@@411) $generated@@412)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) (and ($generated@@0 ($generated@@81 ($generated@@311 $generated@@411) $generated@@415)) (= $generated@@412 ($generated@@81 ($generated@@399 $generated@@411) $generated@@415))))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@411) $generated@@415))
 :pattern ( ($generated@@81 ($generated@@399 $generated@@411) $generated@@415))
))))))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@417 $generated@@418)) $generated@@64)
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (= (type $generated@@419) ($generated@@295 $generated@@149 $generated@@149)) (= (type $generated@@420) $generated@@64)) (= (type $generated@@421) $generated@@64)) (= (type $generated@@422) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@293 $generated@@419) $generated@@423))) (and ($generated@@255 ($generated@@81 ($generated@@389 $generated@@419) $generated@@423) $generated@@421 $generated@@422) ($generated@@255 $generated@@423 $generated@@420 $generated@@422)))
 :pattern ( ($generated@@81 ($generated@@389 $generated@@419) $generated@@423))
 :pattern ( ($generated@@81 ($generated@@293 $generated@@419) $generated@@423))
))))
 :pattern ( ($generated@@74 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@425 $generated@@426)) $generated@@64)
 :pattern ( ($generated@@424 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) ($generated@@313 $generated@@149 $generated@@149)) (= (type $generated@@428) $generated@@64)) (= (type $generated@@429) $generated@@64)) (= (type $generated@@430) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@427) $generated@@431))) (and ($generated@@255 ($generated@@81 ($generated@@399 $generated@@427) $generated@@431) $generated@@429 $generated@@430) ($generated@@255 $generated@@431 $generated@@428 $generated@@430)))
 :pattern ( ($generated@@81 ($generated@@399 $generated@@427) $generated@@431))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@427) $generated@@431))
))))
 :pattern ( ($generated@@74 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@432) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@433) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@434) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@432 $generated@@434))) (and ($generated@@132 $generated@@432 $generated@@433) ($generated@@132 $generated@@433 $generated@@434))) ($generated@@132 $generated@@432 $generated@@434))
 :pattern ( ($generated@@132 $generated@@432 $generated@@433) ($generated@@132 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@436 T@T) ) (! (= (type ($generated@@435 $generated@@436)) ($generated@@76 $generated@@436 $generated@@4))
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@315 (type $generated@@437))))
(let (($generated@@439 ($generated@@314 (type $generated@@437))))
 (=> (= (type $generated@@437) ($generated@@313 $generated@@439 $generated@@438)) (= (= $generated@@437 ($generated@@312 $generated@@439 $generated@@438)) (= ($generated@@311 $generated@@437) ($generated@@435 $generated@@439))))))
 :pattern ( ($generated@@311 $generated@@437))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@315 (type $generated@@440))))
(let (($generated@@442 ($generated@@314 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@313 $generated@@442 $generated@@441)) (= (= $generated@@440 ($generated@@312 $generated@@442 $generated@@441)) (= ($generated@@367 $generated@@440) ($generated@@435 $generated@@441))))))
 :pattern ( ($generated@@367 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@315 (type $generated@@443))))
(let (($generated@@445 ($generated@@314 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@313 $generated@@445 $generated@@444)) (= (= $generated@@443 ($generated@@312 $generated@@445 $generated@@444)) (= ($generated@@398 $generated@@443) ($generated@@435 $generated@@149))))))
 :pattern ( ($generated@@398 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@297 (type $generated@@446))))
(let (($generated@@448 ($generated@@296 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@295 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@294 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (and (and (= (type $generated@@449) $generated@@149) (= (type $generated@@450) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@387 $generated@@446) ($generated@@274 ($generated@@215 $generated@@449 $generated@@450)))))
 :no-pattern (type $generated@@449)
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@387 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@315 (type $generated@@451))))
(let (($generated@@453 ($generated@@314 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@313 $generated@@453 $generated@@452)) (or (= $generated@@451 ($generated@@312 $generated@@453 $generated@@452)) (exists (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (and (and (= (type $generated@@454) $generated@@149) (= (type $generated@@455) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@398 $generated@@451) ($generated@@274 ($generated@@215 $generated@@454 $generated@@455)))))
 :no-pattern (type $generated@@454)
 :no-pattern (type $generated@@455)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
))))))
 :pattern ( ($generated@@398 $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@149) ($generated@@216 $generated@@456 $generated@@46)) (and (= ($generated@@274 ($generated@@388 $generated@@2 $generated@@456)) $generated@@456) ($generated@@136 ($generated@@388 $generated@@2 $generated@@456) $generated@@46)))
 :pattern ( ($generated@@216 $generated@@456 $generated@@46))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@149) ($generated@@216 $generated@@457 $generated@@47)) (and (= ($generated@@274 ($generated@@388 $generated@@3 $generated@@457)) $generated@@457) ($generated@@136 ($generated@@388 $generated@@3 $generated@@457) $generated@@47)))
 :pattern ( ($generated@@216 $generated@@457 $generated@@47))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@149) ($generated@@216 $generated@@458 $generated@@44)) (and (= ($generated@@274 ($generated@@388 $generated@@4 $generated@@458)) $generated@@458) ($generated@@136 ($generated@@388 $generated@@4 $generated@@458) $generated@@44)))
 :pattern ( ($generated@@216 $generated@@458 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@459) 20))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@149) ($generated@@216 $generated@@460 $generated@@45)) (and (= ($generated@@274 ($generated@@388 $generated@@459 $generated@@460)) $generated@@460) ($generated@@136 ($generated@@388 $generated@@459 $generated@@460) $generated@@45)))
 :pattern ( ($generated@@216 $generated@@460 $generated@@45))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (= (type $generated@@462) $generated@@64) (= ($generated@@216 ($generated@@274 $generated@@461) $generated@@462) ($generated@@136 $generated@@461 $generated@@462)))
 :pattern ( ($generated@@216 ($generated@@274 $generated@@461) $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@79 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@76 $generated@@464 $generated@@2)) (<= 0 ($generated@@287 $generated@@463))))
 :pattern ( ($generated@@287 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@244 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@243 $generated@@466)) (<= 0 ($generated@@268 $generated@@465))))
 :pattern ( ($generated@@268 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@467 ($generated@@416 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@416 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@64)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@64) (= (type $generated@@474) $generated@@64)) (= ($generated@@471 ($generated@@416 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@416 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@64) (= (type $generated@@476) $generated@@64)) (= ($generated@@72 ($generated@@416 $generated@@475 $generated@@476)) $generated@@58))
 :pattern ( ($generated@@416 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@64)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@64) (= (type $generated@@480) $generated@@64)) (= ($generated@@477 ($generated@@424 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@424 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@64) (= (type $generated@@484) $generated@@64)) (= ($generated@@481 ($generated@@424 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@424 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@64) (= (type $generated@@486) $generated@@64)) (= ($generated@@72 ($generated@@424 $generated@@485 $generated@@486)) $generated@@59))
 :pattern ( ($generated@@424 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@149) (= (type $generated@@488) $generated@@149)) (= ($generated@@261 ($generated@@215 $generated@@487 $generated@@488)) $generated@@61))
 :pattern ( ($generated@@215 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@64) (= (type $generated@@492) $generated@@64)) (= ($generated@@489 ($generated@@139 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@139 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@64) (= (type $generated@@496) $generated@@64)) (= ($generated@@493 ($generated@@139 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@139 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@149) (= (type $generated@@498) $generated@@149)) (= ($generated@@147 ($generated@@215 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@215 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@149) (= (type $generated@@500) $generated@@149)) (= ($generated@@148 ($generated@@215 $generated@@499 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@215 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (and (= (type $generated@@501) ($generated@@243 $generated@@149)) (= (type $generated@@502) $generated@@64)) (= (type $generated@@503) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@501 ($generated@@242 $generated@@502) $generated@@503) (forall (($generated@@504 Int) ) (!  (=> (and (<= 0 $generated@@504) (< $generated@@504 ($generated@@268 $generated@@501))) ($generated@@255 ($generated@@344 $generated@@501 $generated@@504) $generated@@502 $generated@@503))
 :pattern ( ($generated@@344 $generated@@501 $generated@@504))
))))
 :pattern ( ($generated@@74 $generated@@501 ($generated@@242 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@506 Int) ) (! (= ($generated@@505 ($generated@@75 $generated@@506)) $generated@@506)
 :pattern ( ($generated@@75 $generated@@506))
)))
(assert (forall (($generated@@508 T@U) ) (! (= (type ($generated@@507 $generated@@508)) $generated@@64)
 :pattern ( ($generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (!  (=> (= (type $generated@@509) $generated@@64) (= ($generated@@507 ($generated@@225 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@225 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ) (!  (=> (= (type $generated@@510) $generated@@64) (= ($generated@@72 ($generated@@225 $generated@@510)) $generated@@54))
 :pattern ( ($generated@@225 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@64)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (!  (=> (= (type $generated@@513) $generated@@64) (= ($generated@@511 ($generated@@230 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@230 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@514)) $generated@@55))
 :pattern ( ($generated@@230 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@64)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@64) (= ($generated@@515 ($generated@@154 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@154 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@64) (= ($generated@@72 ($generated@@154 $generated@@518)) $generated@@56))
 :pattern ( ($generated@@154 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@64)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@64) (= ($generated@@519 ($generated@@242 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@242 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@64) (= ($generated@@72 ($generated@@242 $generated@@522)) $generated@@57))
 :pattern ( ($generated@@242 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
(= ($generated@@388 $generated@@524 ($generated@@274 $generated@@523)) $generated@@523))
 :pattern ( ($generated@@274 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@295 $generated@@149 $generated@@149)) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) $generated@@64)) (= ($generated@@136 $generated@@525 ($generated@@416 $generated@@526 $generated@@527)) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@293 $generated@@525) $generated@@528))) (and ($generated@@216 ($generated@@81 ($generated@@389 $generated@@525) $generated@@528) $generated@@527) ($generated@@216 $generated@@528 $generated@@526)))
 :pattern ( ($generated@@81 ($generated@@389 $generated@@525) $generated@@528))
 :pattern ( ($generated@@81 ($generated@@293 $generated@@525) $generated@@528))
))))
 :pattern ( ($generated@@136 $generated@@525 ($generated@@416 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@313 $generated@@149 $generated@@149)) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) $generated@@64)) (= ($generated@@136 $generated@@529 ($generated@@424 $generated@@530 $generated@@531)) (forall (($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@311 $generated@@529) $generated@@532))) (and ($generated@@216 ($generated@@81 ($generated@@399 $generated@@529) $generated@@532) $generated@@531) ($generated@@216 $generated@@532 $generated@@530)))
 :pattern ( ($generated@@81 ($generated@@399 $generated@@529) $generated@@532))
 :pattern ( ($generated@@81 ($generated@@311 $generated@@529) $generated@@532))
))))
 :pattern ( ($generated@@136 $generated@@529 ($generated@@424 $generated@@530 $generated@@531)))
)))
(assert  (=> (<= 0 $generated@@329) (forall (($generated@@533 T@U) ($generated@@534 Int) ) (!  (=> (and (= (type $generated@@533) ($generated@@243 $generated@@149)) (or ($generated@@331 ($generated@@237 $generated@@533) ($generated@@235 $generated@@534)) (and (not (= 0 $generated@@329)) ($generated@@136 $generated@@533 ($generated@@242 $generated@@46))))) (= ($generated@@330 ($generated@@237 $generated@@533) ($generated@@235 $generated@@534))  (and (and (<= ($generated@@235 0) ($generated@@235 $generated@@534)) (< $generated@@534 ($generated@@268 ($generated@@237 $generated@@533)))) (forall (($generated@@535 Int) ) (!  (=> true (and (and (=> (and (<= ($generated@@235 0) $generated@@535) (< $generated@@535 $generated@@534)) (not (= ($generated ($generated@@388 $generated@@2 ($generated@@344 ($generated@@237 $generated@@533) $generated@@535))) ($generated ($generated@@388 $generated@@2 ($generated@@344 ($generated@@237 $generated@@533) ($generated@@235 $generated@@534))))))) (=> (and (<= ($generated@@235 0) $generated@@535) (< $generated@@535 $generated@@534)) (not (= (- ($generated ($generated@@388 $generated@@2 ($generated@@344 ($generated@@237 $generated@@533) $generated@@535))) ($generated ($generated@@388 $generated@@2 ($generated@@344 ($generated@@237 $generated@@533) ($generated@@235 $generated@@534))))) (- $generated@@534 $generated@@535))))) (=> (and (<= ($generated@@235 0) $generated@@535) (< $generated@@535 $generated@@534)) (not (= (- ($generated ($generated@@388 $generated@@2 ($generated@@344 ($generated@@237 $generated@@533) ($generated@@235 $generated@@534)))) ($generated ($generated@@388 $generated@@2 ($generated@@344 ($generated@@237 $generated@@533) $generated@@535)))) (- $generated@@534 $generated@@535))))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@533 $generated@@535)))
)))))
 :weight 3
 :pattern ( ($generated@@330 ($generated@@237 $generated@@533) ($generated@@235 $generated@@534)))
))))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@149) (= (type $generated@@539) $generated@@149)) (< ($generated@@536 $generated@@538) ($generated@@537 ($generated@@215 $generated@@538 $generated@@539))))
 :pattern ( ($generated@@215 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@149) (= (type $generated@@541) $generated@@149)) (< ($generated@@536 $generated@@541) ($generated@@537 ($generated@@215 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@215 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@149) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) $generated@@64)) ($generated@@216 $generated@@542 ($generated@@416 $generated@@543 $generated@@544))) (and (= ($generated@@274 ($generated@@388 ($generated@@295 $generated@@149 $generated@@149) $generated@@542)) $generated@@542) ($generated@@136 ($generated@@388 ($generated@@295 $generated@@149 $generated@@149) $generated@@542) ($generated@@416 $generated@@543 $generated@@544))))
 :pattern ( ($generated@@216 $generated@@542 ($generated@@416 $generated@@543 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@149) (= (type $generated@@546) $generated@@64)) (= (type $generated@@547) $generated@@64)) ($generated@@216 $generated@@545 ($generated@@424 $generated@@546 $generated@@547))) (and (= ($generated@@274 ($generated@@388 ($generated@@313 $generated@@149 $generated@@149) $generated@@545)) $generated@@545) ($generated@@136 ($generated@@388 ($generated@@313 $generated@@149 $generated@@149) $generated@@545) ($generated@@424 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@216 $generated@@545 ($generated@@424 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@64) (= (type $generated@@549) $generated@@64)) (= (type $generated@@550) $generated@@149)) ($generated@@216 $generated@@550 ($generated@@139 $generated@@548 $generated@@549))) (and (= ($generated@@274 ($generated@@388 $generated@@140 $generated@@550)) $generated@@550) ($generated@@136 ($generated@@388 $generated@@140 $generated@@550) ($generated@@139 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@216 $generated@@550 ($generated@@139 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 (type $generated@@551)))
 (not ($generated@@0 ($generated@@81 ($generated@@435 $generated@@552) $generated@@551))))
 :pattern ( (let (($generated@@552 (type $generated@@551)))
($generated@@81 ($generated@@435 $generated@@552) $generated@@551)))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@69)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@64) (= (type $generated@@556) $generated@@64)) (and (= ($generated@@72 ($generated@@139 $generated@@555 $generated@@556)) $generated@@62) (= ($generated@@553 ($generated@@139 $generated@@555 $generated@@556)) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@555 $generated@@556))
)))
(assert  (and (forall (($generated@@559 T@U) ) (! (let (($generated@@560 ($generated@@244 (type $generated@@559))))
(= (type ($generated@@557 $generated@@559)) ($generated@@243 $generated@@560)))
 :pattern ( ($generated@@557 $generated@@559))
)) (forall (($generated@@561 T@U) ) (! (let (($generated@@562 ($generated@@244 (type $generated@@561))))
(= (type ($generated@@558 $generated@@561)) $generated@@562))
 :pattern ( ($generated@@558 $generated@@561))
))))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (! (let (($generated@@565 (type $generated@@564)))
 (=> (= (type $generated@@563) ($generated@@243 $generated@@565)) (and (= ($generated@@557 ($generated@@241 $generated@@563 $generated@@564)) $generated@@563) (= ($generated@@558 ($generated@@241 $generated@@563 $generated@@564)) $generated@@564))))
 :pattern ( ($generated@@241 $generated@@563 $generated@@564))
)))
(assert  (=> (<= 0 $generated@@329) (forall (($generated@@566 T@U) ($generated@@567 Int) ) (!  (=> (and (= (type $generated@@566) ($generated@@243 $generated@@149)) (or ($generated@@331 $generated@@566 $generated@@567) (and (not (= 0 $generated@@329)) ($generated@@136 $generated@@566 ($generated@@242 $generated@@46))))) (= ($generated@@330 $generated@@566 $generated@@567)  (and (and (<= ($generated@@235 0) $generated@@567) (< $generated@@567 ($generated@@268 $generated@@566))) (forall (($generated@@568 Int) ) (!  (=> true (and (and (=> (and (<= ($generated@@235 0) $generated@@568) (< $generated@@568 $generated@@567)) (not (= ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@566 $generated@@568))) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@566 $generated@@567)))))) (=> (and (<= ($generated@@235 0) $generated@@568) (< $generated@@568 $generated@@567)) (not (= (- ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@566 $generated@@568))) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@566 $generated@@567)))) (- $generated@@567 $generated@@568))))) (=> (and (<= ($generated@@235 0) $generated@@568) (< $generated@@568 $generated@@567)) (not (= (- ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@566 $generated@@567))) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@566 $generated@@568)))) (- $generated@@567 $generated@@568))))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@566 $generated@@568)))
)))))
 :pattern ( ($generated@@330 $generated@@566 $generated@@567))
))))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@140) (= ($generated@@536 ($generated@@274 $generated@@569)) ($generated@@537 $generated@@569)))
 :pattern ( ($generated@@536 ($generated@@274 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@149) ($generated@@216 $generated@@570 ($generated@@75 0))) (and (= ($generated@@274 ($generated@@388 $generated@@2 $generated@@570)) $generated@@570) ($generated@@136 ($generated@@388 ($generated@@76 $generated@@149 $generated@@4) $generated@@570) ($generated@@75 0))))
 :pattern ( ($generated@@216 $generated@@570 ($generated@@75 0)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@149) (= (type $generated@@572) $generated@@64)) ($generated@@216 $generated@@571 ($generated@@225 $generated@@572))) (and (= ($generated@@274 ($generated@@388 ($generated@@76 $generated@@149 $generated@@4) $generated@@571)) $generated@@571) ($generated@@136 ($generated@@388 ($generated@@76 $generated@@149 $generated@@4) $generated@@571) ($generated@@225 $generated@@572))))
 :pattern ( ($generated@@216 $generated@@571 ($generated@@225 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@149) (= (type $generated@@574) $generated@@64)) ($generated@@216 $generated@@573 ($generated@@230 $generated@@574))) (and (= ($generated@@274 ($generated@@388 ($generated@@76 $generated@@149 $generated@@4) $generated@@573)) $generated@@573) ($generated@@136 ($generated@@388 ($generated@@76 $generated@@149 $generated@@4) $generated@@573) ($generated@@230 $generated@@574))))
 :pattern ( ($generated@@216 $generated@@573 ($generated@@230 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@149) (= (type $generated@@576) $generated@@64)) ($generated@@216 $generated@@575 ($generated@@154 $generated@@576))) (and (= ($generated@@274 ($generated@@388 ($generated@@76 $generated@@149 $generated@@2) $generated@@575)) $generated@@575) ($generated@@136 ($generated@@388 ($generated@@76 $generated@@149 $generated@@2) $generated@@575) ($generated@@154 $generated@@576))))
 :pattern ( ($generated@@216 $generated@@575 ($generated@@154 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@149) (= (type $generated@@578) $generated@@64)) ($generated@@216 $generated@@577 ($generated@@242 $generated@@578))) (and (= ($generated@@274 ($generated@@388 ($generated@@243 $generated@@149) $generated@@577)) $generated@@577) ($generated@@136 ($generated@@388 ($generated@@243 $generated@@149) $generated@@577) ($generated@@242 $generated@@578))))
 :pattern ( ($generated@@216 $generated@@577 ($generated@@242 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@579 ($generated@@154 $generated@@580) $generated@@581) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@579 $generated@@582)))) ($generated@@255 $generated@@582 $generated@@580 $generated@@581))
 :pattern ( ($generated@@81 $generated@@579 $generated@@582))
))))
 :pattern ( ($generated@@74 $generated@@579 ($generated@@154 $generated@@580) $generated@@581))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 Int) ) (! (let (($generated@@587 ($generated@@244 (type $generated@@584))))
 (=> (and (= (type $generated@@584) ($generated@@243 $generated@@587)) (= (type $generated@@585) ($generated@@243 $generated@@587))) (= ($generated@@583 $generated@@584 $generated@@585 $generated@@586) (forall (($generated@@588 Int) ) (!  (=> (and (<= 0 $generated@@588) (< $generated@@588 $generated@@586)) (= ($generated@@344 $generated@@584 $generated@@588) ($generated@@344 $generated@@585 $generated@@588)))
 :pattern ( ($generated@@344 $generated@@584 $generated@@588))
 :pattern ( ($generated@@344 $generated@@585 $generated@@588))
)))))
 :pattern ( ($generated@@583 $generated@@584 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@140) (= (type $generated@@590) $generated@@64)) (= (type $generated@@591) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@254 $generated@@591) (and ($generated@@138 $generated@@589) (exists (($generated@@592 T@U) ) (!  (and (= (type $generated@@592) $generated@@64) ($generated@@74 $generated@@589 ($generated@@139 $generated@@590 $generated@@592) $generated@@591))
 :pattern ( ($generated@@74 $generated@@589 ($generated@@139 $generated@@590 $generated@@592) $generated@@591))
))))) ($generated@@255 ($generated@@147 $generated@@589) $generated@@590 $generated@@591))
 :pattern ( ($generated@@255 ($generated@@147 $generated@@589) $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) $generated@@140) (= (type $generated@@594) $generated@@64)) (= (type $generated@@595) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@254 $generated@@595) (and ($generated@@138 $generated@@593) (exists (($generated@@596 T@U) ) (!  (and (= (type $generated@@596) $generated@@64) ($generated@@74 $generated@@593 ($generated@@139 $generated@@596 $generated@@594) $generated@@595))
 :pattern ( ($generated@@74 $generated@@593 ($generated@@139 $generated@@596 $generated@@594) $generated@@595))
))))) ($generated@@255 ($generated@@148 $generated@@593) $generated@@594 $generated@@595))
 :pattern ( ($generated@@255 ($generated@@148 $generated@@593) $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 Int) ) (! (let (($generated@@600 ($generated@@244 (type $generated@@597))))
 (=> (and (= (type $generated@@597) ($generated@@243 $generated@@600)) (= (type $generated@@598) ($generated@@243 $generated@@600))) (and (=> (< $generated@@599 ($generated@@268 $generated@@597)) (= ($generated@@344 ($generated@@334 $generated@@597 $generated@@598) $generated@@599) ($generated@@344 $generated@@597 $generated@@599))) (=> (<= ($generated@@268 $generated@@597) $generated@@599) (= ($generated@@344 ($generated@@334 $generated@@597 $generated@@598) $generated@@599) ($generated@@344 $generated@@598 (- $generated@@599 ($generated@@268 $generated@@597))))))))
 :pattern ( ($generated@@344 ($generated@@334 $generated@@597 $generated@@598) $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@149) (= (type $generated@@602) $generated@@149)) (= ($generated@@215 ($generated@@237 $generated@@601) ($generated@@237 $generated@@602)) ($generated@@237 ($generated@@215 $generated@@601 $generated@@602))))
 :pattern ( ($generated@@215 ($generated@@237 $generated@@601) ($generated@@237 $generated@@602)))
)))
(assert (forall (($generated@@603 Int) ) (! (= ($generated@@274 ($generated@@8 ($generated@@235 $generated@@603))) ($generated@@237 ($generated@@274 ($generated@@8 $generated@@603))))
 :pattern ( ($generated@@274 ($generated@@8 ($generated@@235 $generated@@603))))
)))
(assert (forall (($generated@@604 T@U) ) (! (= ($generated@@274 ($generated@@237 $generated@@604)) ($generated@@237 ($generated@@274 $generated@@604)))
 :pattern ( ($generated@@274 ($generated@@237 $generated@@604)))
)))
(assert (forall (($generated@@605 T@U) ) (! (let (($generated@@606 ($generated@@244 (type $generated@@605))))
 (=> (and (= (type $generated@@605) ($generated@@243 $generated@@606)) (= ($generated@@268 $generated@@605) 0)) (= $generated@@605 ($generated@@267 $generated@@606))))
 :pattern ( ($generated@@268 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (! (let (($generated@@610 (type $generated@@608)))
 (=> (and (and (= (type $generated@@607) ($generated@@76 $generated@@610 $generated@@2)) (= (type $generated@@609) $generated@@2)) (<= 0 ($generated $generated@@609))) (= ($generated@@287 ($generated@@82 $generated@@607 $generated@@608 $generated@@609)) (+ (- ($generated@@287 $generated@@607) ($generated ($generated@@81 $generated@@607 $generated@@608))) ($generated $generated@@609)))))
 :pattern ( ($generated@@287 ($generated@@82 $generated@@607 $generated@@608 $generated@@609)))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@612) $generated@@2)) ($generated@@74 $generated@@612 $generated@@46 $generated@@611))
 :pattern ( ($generated@@74 $generated@@612 $generated@@46 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@614) $generated@@3)) ($generated@@74 $generated@@614 $generated@@47 $generated@@613))
 :pattern ( ($generated@@74 $generated@@614 $generated@@47 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@616) $generated@@4)) ($generated@@74 $generated@@616 $generated@@44 $generated@@615))
 :pattern ( ($generated@@74 $generated@@616 $generated@@44 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@618) $generated@@459)) ($generated@@74 $generated@@618 $generated@@45 $generated@@617))
 :pattern ( ($generated@@74 $generated@@618 $generated@@45 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@620) $generated@@149)) ($generated@@74 $generated@@620 $generated@@48 $generated@@619))
 :pattern ( ($generated@@74 $generated@@620 $generated@@48 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@243 $generated@@149)) (= (type $generated@@622) $generated@@64)) (= ($generated@@136 $generated@@621 ($generated@@242 $generated@@622)) (forall (($generated@@623 Int) ) (!  (=> (and (<= 0 $generated@@623) (< $generated@@623 ($generated@@268 $generated@@621))) ($generated@@216 ($generated@@344 $generated@@621 $generated@@623) $generated@@622))
 :pattern ( ($generated@@344 $generated@@621 $generated@@623))
))))
 :pattern ( ($generated@@136 $generated@@621 ($generated@@242 $generated@@622)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 Int) ) (!  (=> (= (type $generated@@625) ($generated@@243 $generated@@149)) (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@268 $generated@@625))) (< ($generated@@537 ($generated@@388 $generated@@140 ($generated@@344 $generated@@625 $generated@@626))) ($generated@@624 $generated@@625))))
 :pattern ( ($generated@@537 ($generated@@388 $generated@@140 ($generated@@344 $generated@@625 $generated@@626))))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) ($generated@@295 $generated@@149 $generated@@149)) (= (type $generated@@628) $generated@@64)) (= (type $generated@@629) $generated@@64)) ($generated@@136 $generated@@627 ($generated@@416 $generated@@628 $generated@@629))) (and (and ($generated@@136 ($generated@@293 $generated@@627) ($generated@@225 $generated@@628)) ($generated@@136 ($generated@@356 $generated@@627) ($generated@@225 $generated@@629))) ($generated@@136 ($generated@@387 $generated@@627) ($generated@@225 ($generated@@139 $generated@@628 $generated@@629)))))
 :pattern ( ($generated@@136 $generated@@627 ($generated@@416 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@313 $generated@@149 $generated@@149)) (= (type $generated@@631) $generated@@64)) (= (type $generated@@632) $generated@@64)) ($generated@@136 $generated@@630 ($generated@@424 $generated@@631 $generated@@632))) (and (and ($generated@@136 ($generated@@311 $generated@@630) ($generated@@230 $generated@@631)) ($generated@@136 ($generated@@367 $generated@@630) ($generated@@230 $generated@@632))) ($generated@@136 ($generated@@398 $generated@@630) ($generated@@230 ($generated@@139 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@136 $generated@@630 ($generated@@424 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ) (!  (=> (= (type $generated@@633) $generated@@2) ($generated@@136 $generated@@633 $generated@@46))
 :pattern ( ($generated@@136 $generated@@633 $generated@@46))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@3) ($generated@@136 $generated@@634 $generated@@47))
 :pattern ( ($generated@@136 $generated@@634 $generated@@47))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@4) ($generated@@136 $generated@@635 $generated@@44))
 :pattern ( ($generated@@136 $generated@@635 $generated@@44))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@459) ($generated@@136 $generated@@636 $generated@@45))
 :pattern ( ($generated@@136 $generated@@636 $generated@@45))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@149) ($generated@@136 $generated@@637 $generated@@48))
 :pattern ( ($generated@@136 $generated@@637 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@638 () Int)
(declare-fun $generated@@639 () Int)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () Int)
(declare-fun $generated@@644 () Int)
(declare-fun $generated@@645 () Int)
(declare-fun $generated@@646 () Bool)
(declare-fun $generated@@647 () Bool)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () Bool)
(declare-fun $generated@@650 () Bool)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () Bool)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () Bool)
(declare-fun $generated@@655 () Int)
(declare-fun $generated@@656 () Int)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 (T@U) Bool)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () Int)
(declare-fun $generated@@664 () T@U)
(declare-fun $generated@@665 () Int)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () Int)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@642) ($generated@@243 $generated@@149)) (= (type $generated@@657) ($generated@@243 $generated@@149))) (= (type $generated@@664) ($generated@@243 $generated@@149))) (= (type $generated@@641) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@648) ($generated@@243 $generated@@149))) (= (type $generated@@653) ($generated@@243 $generated@@149))) (= (type $generated@@651) ($generated@@243 $generated@@149))) (= (type $generated@@658) ($generated@@243 $generated@@149))) (= (type $generated@@659) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@660) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@662) $generated@@77)) (= (type $generated@@640) ($generated@@243 $generated@@149))) (= (type $generated@@666) ($generated@@243 $generated@@149))) (= (type $generated@@667) ($generated@@243 $generated@@149))) (= (type $generated@@669) ($generated@@161 $generated@@77 $generated@@4))) (= (type $generated@@671) ($generated@@243 $generated@@149))) (= (type $generated@@672) ($generated@@243 $generated@@149))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 101) (let (($generated@@673 true))
(let (($generated@@674 true))
(let (($generated@@675 true))
(let (($generated@@676  (=> (and (not (and (<= ($generated@@235 0) $generated@@638) (< $generated@@638 $generated@@639))) (= (ControlFlow 0 64) 59)) $generated@@675)))
(let (($generated@@677  (=> (and (<= ($generated@@235 0) $generated@@638) (< $generated@@638 $generated@@639)) (=> (and (and ($generated@@74 $generated@@640 ($generated@@242 $generated@@46) $generated@@641) ($generated@@74 ($generated@@8 $generated@@638) $generated@@46 $generated@@641)) (and ($generated@@331 $generated@@640 $generated@@638) (= (ControlFlow 0 63) 59))) $generated@@675))))
(let (($generated@@678  (=> (< $generated@@638 ($generated@@235 0)) (and (=> (= (ControlFlow 0 66) 63) $generated@@677) (=> (= (ControlFlow 0 66) 64) $generated@@676)))))
(let (($generated@@679  (=> (<= ($generated@@235 0) $generated@@638) (and (=> (= (ControlFlow 0 65) 63) $generated@@677) (=> (= (ControlFlow 0 65) 64) $generated@@676)))))
(let (($generated@@680  (and (=> (= (ControlFlow 0 67) 65) $generated@@679) (=> (= (ControlFlow 0 67) 66) $generated@@678))))
(let (($generated@@681  (=> (and (and (and (and (= ($generated@@268 $generated@@640) $generated@@639) (forall (($generated@@682 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@682) (< $generated@@682 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@682))))) (=> (and (<= ($generated@@235 0) $generated@@682) (< $generated@@682 $generated@@639)) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@682))) $generated@@639))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@682)))
))) (and (<= ($generated@@268 $generated@@642) ($generated@@268 $generated@@640)) ($generated@@583 $generated@@642 $generated@@640 ($generated@@268 $generated@@642)))) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@643))))) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@643))) $generated@@644)) (and (=> (= (ControlFlow 0 68) 67) $generated@@680) (=> (= (ControlFlow 0 68) 62) $generated@@674)))))
(let (($generated@@683  (=> (and (not (and (and (and (and (= ($generated@@268 $generated@@640) $generated@@639) (forall (($generated@@684 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@684) (< $generated@@684 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@684))))) (=> (and (<= ($generated@@235 0) $generated@@684) (< $generated@@684 $generated@@639)) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@684))) $generated@@639))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@684)))
))) (and (<= ($generated@@268 $generated@@642) ($generated@@268 $generated@@640)) ($generated@@583 $generated@@642 $generated@@640 ($generated@@268 $generated@@642)))) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@643))))) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@643))) $generated@@644))) (= (ControlFlow 0 61) 59)) $generated@@675)))
(let (($generated@@685  (=> (not (and (and (and (= ($generated@@268 $generated@@640) $generated@@639) (forall (($generated@@686 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@686) (< $generated@@686 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@686))))) (=> (and (<= ($generated@@235 0) $generated@@686) (< $generated@@686 $generated@@639)) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@686))) $generated@@639))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@686)))
))) (and (<= ($generated@@268 $generated@@642) ($generated@@268 $generated@@640)) ($generated@@583 $generated@@642 $generated@@640 ($generated@@268 $generated@@642)))) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@643)))))) (and (=> (= (ControlFlow 0 71) 68) $generated@@681) (=> (= (ControlFlow 0 71) 61) $generated@@683)))))
(let (($generated@@687  (=> (and (and (and (= ($generated@@268 $generated@@640) $generated@@639) (forall (($generated@@688 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@688) (< $generated@@688 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@688))))) (=> (and (<= ($generated@@235 0) $generated@@688) (< $generated@@688 $generated@@639)) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@688))) $generated@@639))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@688)))
))) (and (<= ($generated@@268 $generated@@642) ($generated@@268 $generated@@640)) ($generated@@583 $generated@@642 $generated@@640 ($generated@@268 $generated@@642)))) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@643))))) (and (=> (= (ControlFlow 0 69) (- 0 70)) (and (<= 0 $generated@@643) (< $generated@@643 ($generated@@268 $generated@@640)))) (and (=> (= (ControlFlow 0 69) 68) $generated@@681) (=> (= (ControlFlow 0 69) 61) $generated@@683))))))
(let (($generated@@689  (=> (not (and (and (= ($generated@@268 $generated@@640) $generated@@639) (forall (($generated@@690 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@690) (< $generated@@690 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@690))))) (=> (and (<= ($generated@@235 0) $generated@@690) (< $generated@@690 $generated@@639)) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@690))) $generated@@639))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@690)))
))) (and (<= ($generated@@268 $generated@@642) ($generated@@268 $generated@@640)) ($generated@@583 $generated@@642 $generated@@640 ($generated@@268 $generated@@642))))) (and (=> (= (ControlFlow 0 74) 69) $generated@@687) (=> (= (ControlFlow 0 74) 71) $generated@@685)))))
(let (($generated@@691  (=> (and (and (= ($generated@@268 $generated@@640) $generated@@639) (forall (($generated@@692 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@692) (< $generated@@692 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@692))))) (=> (and (<= ($generated@@235 0) $generated@@692) (< $generated@@692 $generated@@639)) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@692))) $generated@@639))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@692)))
))) (and (<= ($generated@@268 $generated@@642) ($generated@@268 $generated@@640)) ($generated@@583 $generated@@642 $generated@@640 ($generated@@268 $generated@@642)))) (and (=> (= (ControlFlow 0 72) (- 0 73)) (and (<= 0 $generated@@643) (< $generated@@643 ($generated@@268 $generated@@640)))) (and (=> (= (ControlFlow 0 72) 69) $generated@@687) (=> (= (ControlFlow 0 72) 71) $generated@@685))))))
(let (($generated@@693  (=> (not (and (= ($generated@@268 $generated@@640) $generated@@639) (forall (($generated@@694 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@694) (< $generated@@694 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@694))))) (=> (and (<= ($generated@@235 0) $generated@@694) (< $generated@@694 $generated@@639)) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@694))) $generated@@639))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@694)))
)))) (and (=> (= (ControlFlow 0 76) 72) $generated@@691) (=> (= (ControlFlow 0 76) 74) $generated@@689)))))
(let (($generated@@695  (=> (and (= ($generated@@268 $generated@@640) $generated@@639) (forall (($generated@@696 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@696) (< $generated@@696 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@696))))) (=> (and (<= ($generated@@235 0) $generated@@696) (< $generated@@696 $generated@@639)) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@696))) $generated@@639))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@696)))
))) (and (=> (= (ControlFlow 0 75) 72) $generated@@691) (=> (= (ControlFlow 0 75) 74) $generated@@689)))))
(let (($generated@@697  (=> (not (and (<= ($generated@@235 0) $generated@@645) (< $generated@@645 $generated@@639))) (and (=> (= (ControlFlow 0 82) 75) $generated@@695) (=> (= (ControlFlow 0 82) 76) $generated@@693)))))
(let (($generated@@698  (=> (and (<= ($generated@@235 0) $generated@@645) (< $generated@@645 $generated@@639)) (and (=> (= (ControlFlow 0 80) (- 0 81)) (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@268 $generated@@640)))) (and (=> (= (ControlFlow 0 80) 75) $generated@@695) (=> (= (ControlFlow 0 80) 76) $generated@@693))))))
(let (($generated@@699  (=> (< $generated@@645 ($generated@@235 0)) (and (=> (= (ControlFlow 0 84) 80) $generated@@698) (=> (= (ControlFlow 0 84) 82) $generated@@697)))))
(let (($generated@@700  (=> (<= ($generated@@235 0) $generated@@645) (and (=> (= (ControlFlow 0 83) 80) $generated@@698) (=> (= (ControlFlow 0 83) 82) $generated@@697)))))
(let (($generated@@701  (=> (=> (and (<= ($generated@@235 0) $generated@@645) (< $generated@@645 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@645))))) (and (=> (= (ControlFlow 0 85) 83) $generated@@700) (=> (= (ControlFlow 0 85) 84) $generated@@699)))))
(let (($generated@@702  (=> (not (=> (and (<= ($generated@@235 0) $generated@@645) (< $generated@@645 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@640 $generated@@645)))))) (and (=> (= (ControlFlow 0 79) 75) $generated@@695) (=> (= (ControlFlow 0 79) 76) $generated@@693)))))
(let (($generated@@703  (=> (not (and (<= ($generated@@235 0) $generated@@645) (< $generated@@645 $generated@@639))) (and (=> (= (ControlFlow 0 88) 85) $generated@@701) (=> (= (ControlFlow 0 88) 79) $generated@@702)))))
(let (($generated@@704  (=> (and (<= ($generated@@235 0) $generated@@645) (< $generated@@645 $generated@@639)) (and (=> (= (ControlFlow 0 86) (- 0 87)) (and (<= 0 $generated@@645) (< $generated@@645 ($generated@@268 $generated@@640)))) (and (=> (= (ControlFlow 0 86) 85) $generated@@701) (=> (= (ControlFlow 0 86) 79) $generated@@702))))))
(let (($generated@@705  (=> (< $generated@@645 ($generated@@235 0)) (and (=> (= (ControlFlow 0 90) 86) $generated@@704) (=> (= (ControlFlow 0 90) 88) $generated@@703)))))
(let (($generated@@706  (=> (<= ($generated@@235 0) $generated@@645) (and (=> (= (ControlFlow 0 89) 86) $generated@@704) (=> (= (ControlFlow 0 89) 88) $generated@@703)))))
(let (($generated@@707  (and (=> (= (ControlFlow 0 91) 89) $generated@@706) (=> (= (ControlFlow 0 91) 90) $generated@@705))))
(let (($generated@@708  (=> (= ($generated@@268 $generated@@640) $generated@@639) (and (=> (= (ControlFlow 0 92) 91) $generated@@707) (=> (= (ControlFlow 0 92) 78) $generated@@673)))))
(let (($generated@@709  (=> (not (= ($generated@@268 $generated@@640) $generated@@639)) (and (=> (= (ControlFlow 0 77) 75) $generated@@695) (=> (= (ControlFlow 0 77) 76) $generated@@693)))))
(let (($generated@@710  (=> (and ($generated@@136 $generated@@640 ($generated@@242 $generated@@46)) ($generated@@74 $generated@@640 ($generated@@242 $generated@@46) $generated@@641)) (and (=> (= (ControlFlow 0 93) 92) $generated@@708) (=> (= (ControlFlow 0 93) 77) $generated@@709)))))
(let (($generated@@711  (=> (and (not (and ($generated@@136 $generated@@640 ($generated@@242 $generated@@46)) ($generated@@74 $generated@@640 ($generated@@242 $generated@@46) $generated@@641))) (= (ControlFlow 0 60) 59)) $generated@@675)))
(let (($generated@@712  (=> (and (not $generated@@646) (<= $generated@@644 $generated@@639)) (and (=> (= (ControlFlow 0 94) 93) $generated@@710) (=> (= (ControlFlow 0 94) 60) $generated@@711)))))
(let (($generated@@713  (and (=> (= (ControlFlow 0 35) (- 0 38)) (=> $generated@@647 (= ($generated@@268 $generated@@648) $generated@@639))) (=> (=> $generated@@647 (= ($generated@@268 $generated@@648) $generated@@639)) (and (=> (= (ControlFlow 0 35) (- 0 37)) (=> $generated@@647 (forall (($generated@@714 Int) ) (!  (=> true (=> (and (<= ($generated@@235 0) $generated@@714) (< $generated@@714 $generated@@639)) ($generated@@330 $generated@@648 $generated@@714)))
 :pattern ( ($generated@@330 $generated@@648 $generated@@714))
)))) (=> (=> $generated@@647 (forall (($generated@@715 Int) ) (!  (=> true (=> (and (<= ($generated@@235 0) $generated@@715) (< $generated@@715 $generated@@639)) ($generated@@330 $generated@@648 $generated@@715)))
 :pattern ( ($generated@@330 $generated@@648 $generated@@715))
))) (and (=> (= (ControlFlow 0 35) (- 0 36)) (=> (not $generated@@647) (forall (($generated@@716 T@U) ) (!  (=> (and (= (type $generated@@716) ($generated@@243 $generated@@149)) ($generated@@136 $generated@@716 ($generated@@242 $generated@@46))) (=> (and (and (= ($generated@@268 $generated@@716) $generated@@639) (forall (($generated@@717 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@717) (< $generated@@717 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@716 $generated@@717))))) (=> (and (<= ($generated@@235 0) $generated@@717) (< $generated@@717 $generated@@639)) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@716 $generated@@717))) $generated@@639))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@716 $generated@@717)))
))) (and (<= ($generated@@268 $generated@@642) ($generated@@268 $generated@@716)) ($generated@@583 $generated@@642 $generated@@716 ($generated@@268 $generated@@642)))) (exists (($generated@@718 Int) ) (!  (and (and (<= ($generated@@235 0) $generated@@718) (< $generated@@718 $generated@@639)) (not ($generated@@330 $generated@@716 $generated@@718)))
 :pattern ( ($generated@@330 $generated@@716 $generated@@718))
))))
 :pattern ( ($generated@@268 $generated@@716))
)))) (=> (=> (not $generated@@647) (forall (($generated@@719 T@U) ) (!  (=> (and (= (type $generated@@719) ($generated@@243 $generated@@149)) ($generated@@136 $generated@@719 ($generated@@242 $generated@@46))) (=> (and (and (= ($generated@@268 $generated@@719) $generated@@639) (forall (($generated@@720 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@720) (< $generated@@720 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@719 $generated@@720))))) (=> (and (<= ($generated@@235 0) $generated@@720) (< $generated@@720 $generated@@639)) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@719 $generated@@720))) $generated@@639))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@719 $generated@@720)))
))) (and (<= ($generated@@268 $generated@@642) ($generated@@268 $generated@@719)) ($generated@@583 $generated@@642 $generated@@719 ($generated@@268 $generated@@642)))) (exists (($generated@@721 Int) ) (!  (and (and (<= ($generated@@235 0) $generated@@721) (< $generated@@721 $generated@@639)) (not ($generated@@330 $generated@@719 $generated@@721)))
 :pattern ( ($generated@@330 $generated@@719 $generated@@721))
))))
 :pattern ( ($generated@@268 $generated@@719))
))) (=> (= (ControlFlow 0 35) (- 0 34)) (forall (($generated@@722 T@U) ($generated@@723 Int) ) (!  (=> (and (= (type $generated@@722) ($generated@@243 $generated@@149)) ($generated@@136 $generated@@722 ($generated@@242 $generated@@46))) (= ($generated@@330 $generated@@722 $generated@@723) ($generated@@330 $generated@@722 $generated@@723)))
 :pattern ( ($generated@@330 $generated@@722 $generated@@723))
 :pattern ( ($generated@@330 $generated@@722 $generated@@723))
)))))))))))
(let (($generated@@724  (=> $generated@@649 (=> (and (and (= $generated@@650 ($generated@@0 ($generated@@237 ($generated@@11 true)))) (= $generated@@648 $generated@@651)) (and (= $generated@@647 $generated@@650) (= (ControlFlow 0 41) 35))) $generated@@713))))
(let (($generated@@725  (=> (<= $generated@@639 $generated@@644) (=> (and (and (= $generated@@652 ($generated@@0 ($generated@@237 ($generated@@11 false)))) (= $generated@@648 $generated@@653)) (and (= $generated@@647 $generated@@652) (= (ControlFlow 0 40) 35))) $generated@@713))))
(let (($generated@@726  (=> (= $generated@@643 $generated@@639) (=> (and (and (= $generated@@654 ($generated@@0 ($generated@@237 ($generated@@11 true)))) (= $generated@@648 $generated@@642)) (and (= $generated@@647 $generated@@654) (= (ControlFlow 0 39) 35))) $generated@@713))))
(let (($generated@@727 true))
(let (($generated@@728 true))
(let (($generated@@729  (=> (= $generated@@655 (+ $generated@@644 1)) (and (=> (= (ControlFlow 0 3) (- 0 6)) (or (<= 0 $generated@@656) (= (- $generated@@639 $generated@@655) $generated@@656))) (=> (or (<= 0 $generated@@656) (= (- $generated@@639 $generated@@655) $generated@@656)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (< (- $generated@@639 $generated@@655) $generated@@656)) (=> (< (- $generated@@639 $generated@@655) $generated@@656) (=> (=> (<= $generated@@655 $generated@@639) (forall (($generated@@730 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@730) ($generated@@243 $generated@@149)) ($generated@@136 $generated@@730 ($generated@@242 $generated@@46))) (= ($generated@@268 $generated@@730) $generated@@639)) (forall (($generated@@731 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@731) (< $generated@@731 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@730 $generated@@731))))) (=> (and (<= ($generated@@235 0) $generated@@731) (< $generated@@731 $generated@@639)) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@730 $generated@@731))) $generated@@639))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@730 $generated@@731)))
))) (and (<= ($generated@@268 $generated@@642) ($generated@@268 $generated@@730)) ($generated@@583 $generated@@642 $generated@@730 ($generated@@268 $generated@@642)))) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@730 $generated@@643))))) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@730 $generated@@643))) $generated@@655)) (forall (($generated@@732 Int) ) (!  (=> (<= ($generated@@235 0) $generated@@732) (=> (< $generated@@732 $generated@@639) ($generated@@331 $generated@@730 $generated@@732)))
 :pattern ( ($generated@@330 $generated@@730 $generated@@732))
)))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@730 $generated@@643)))
 :pattern ( ($generated@@268 $generated@@730))
))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> $generated@@646 (<= $generated@@655 $generated@@639))) (=> (=> $generated@@646 (<= $generated@@655 $generated@@639)) (=> (= (ControlFlow 0 3) (- 0 2)) (=> $generated@@646 (forall (($generated@@733 T@U) ) (!  (=> (and (= (type $generated@@733) ($generated@@243 $generated@@149)) ($generated@@136 $generated@@733 ($generated@@242 $generated@@46))) (=> (and (and (and (and (= ($generated@@268 $generated@@733) $generated@@639) (forall (($generated@@734 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@734) (< $generated@@734 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@733 $generated@@734))))) (=> (and (<= ($generated@@235 0) $generated@@734) (< $generated@@734 $generated@@639)) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@733 $generated@@734))) $generated@@639))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@733 $generated@@734)))
))) (and (<= ($generated@@268 $generated@@642) ($generated@@268 $generated@@733)) ($generated@@583 $generated@@642 $generated@@733 ($generated@@268 $generated@@642)))) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@733 $generated@@643))))) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@733 $generated@@643))) $generated@@655)) (exists (($generated@@735 Int) ) (!  (and (and (<= ($generated@@235 0) $generated@@735) (< $generated@@735 $generated@@639)) (not ($generated@@330 $generated@@733 $generated@@735)))
 :pattern ( ($generated@@330 $generated@@733 $generated@@735))
))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@733 $generated@@643)))
 :pattern ( ($generated@@268 $generated@@733))
))))))))))))))
(let (($generated@@736  (=> (and (not $generated@@649) (= (ControlFlow 0 33) 3)) $generated@@729)))
(let (($generated@@737  (=> (forall (($generated@@738 Int) ) (!  (=> (<= ($generated@@235 0) $generated@@738) (=> (< $generated@@738 ($generated@@268 $generated@@642)) (and ($generated@@331 $generated@@642 $generated@@738) (=> ($generated@@330 $generated@@642 $generated@@738) ($generated@@331 $generated@@657 $generated@@738)))))
 :pattern ( ($generated@@330 $generated@@657 $generated@@738))
 :pattern ( ($generated@@330 $generated@@642 $generated@@738))
)) (and (=> (= (ControlFlow 0 42) (- 0 48)) (forall (($generated@@739 Int) ) (!  (=> true (=> (and (and (<= ($generated@@235 0) $generated@@739) (< $generated@@739 ($generated@@268 $generated@@642))) ($generated@@330 $generated@@642 $generated@@739)) ($generated@@330 $generated@@657 $generated@@739)))
 :pattern ( ($generated@@330 $generated@@657 $generated@@739))
 :pattern ( ($generated@@330 $generated@@642 $generated@@739))
))) (=> (forall (($generated@@740 Int) ) (!  (=> true (=> (and (and (<= ($generated@@235 0) $generated@@740) (< $generated@@740 ($generated@@268 $generated@@642))) ($generated@@330 $generated@@642 $generated@@740)) ($generated@@330 $generated@@657 $generated@@740)))
 :pattern ( ($generated@@330 $generated@@657 $generated@@740))
 :pattern ( ($generated@@330 $generated@@642 $generated@@740))
)) (and (=> (= (ControlFlow 0 42) (- 0 47)) (or (<= 0 (- $generated@@639 ($generated@@268 $generated@@642))) (= (- $generated@@639 ($generated@@268 $generated@@657)) (- $generated@@639 ($generated@@268 $generated@@642))))) (=> (or (<= 0 (- $generated@@639 ($generated@@268 $generated@@642))) (= (- $generated@@639 ($generated@@268 $generated@@657)) (- $generated@@639 ($generated@@268 $generated@@642)))) (and (=> (= (ControlFlow 0 42) (- 0 46)) (< (- $generated@@639 ($generated@@268 $generated@@657)) (- $generated@@639 ($generated@@268 $generated@@642)))) (=> (< (- $generated@@639 ($generated@@268 $generated@@657)) (- $generated@@639 ($generated@@268 $generated@@642))) (=> (and ($generated@@136 $generated@@658 ($generated@@242 $generated@@46)) ($generated@@74 $generated@@658 ($generated@@242 $generated@@46) $generated@@659)) (and (=> (= (ControlFlow 0 42) (- 0 45)) (<= ($generated@@235 0) $generated@@639)) (=> (<= ($generated@@235 0) $generated@@639) (and (=> (= (ControlFlow 0 42) (- 0 44)) (<= ($generated@@268 $generated@@657) $generated@@639)) (=> (<= ($generated@@268 $generated@@657) $generated@@639) (and (=> (= (ControlFlow 0 42) (- 0 43)) (forall (($generated@@741 Int) ) (!  (=> true (=> (and (<= ($generated@@235 0) $generated@@741) (< $generated@@741 ($generated@@268 $generated@@657))) ($generated@@330 $generated@@657 $generated@@741)))
 :pattern ( ($generated@@330 $generated@@657 $generated@@741))
))) (=> (forall (($generated@@742 Int) ) (!  (=> true (=> (and (<= ($generated@@235 0) $generated@@742) (< $generated@@742 ($generated@@268 $generated@@657))) ($generated@@330 $generated@@657 $generated@@742)))
 :pattern ( ($generated@@330 $generated@@657 $generated@@742))
)) (=> (and ($generated@@254 $generated@@660) ($generated@@661 $generated@@660)) (=> (and (and ($generated@@136 $generated@@651 ($generated@@242 $generated@@46)) ($generated@@74 $generated@@651 ($generated@@242 $generated@@46) $generated@@660)) (=> $generated@@649 (=> (= ($generated@@268 $generated@@651) $generated@@639) (forall (($generated@@743 Int) ) (!  (=> (<= ($generated@@235 0) $generated@@743) (=> (< $generated@@743 $generated@@639) ($generated@@331 $generated@@651 $generated@@743)))
 :pattern ( ($generated@@330 $generated@@651 $generated@@743))
))))) (=> (and (and (and (=> $generated@@649 (= ($generated@@268 $generated@@651) $generated@@639)) (=> $generated@@649 (forall (($generated@@744 Int) ) (!  (=> true (=> (and (<= ($generated@@235 0) $generated@@744) (< $generated@@744 $generated@@639)) ($generated@@330 $generated@@651 $generated@@744)))
 :pattern ( ($generated@@330 $generated@@651 $generated@@744))
)))) (and (=> (not $generated@@649) (forall (($generated@@745 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@745) ($generated@@243 $generated@@149)) ($generated@@136 $generated@@745 ($generated@@242 $generated@@46))) (= ($generated@@268 $generated@@745) $generated@@639)) (forall (($generated@@746 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@746) (< $generated@@746 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@745 $generated@@746))))) (=> (and (<= ($generated@@235 0) $generated@@746) (< $generated@@746 $generated@@639)) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@745 $generated@@746))) $generated@@639))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@745 $generated@@746)))
))) (and (<= ($generated@@268 $generated@@657) ($generated@@268 $generated@@745)) ($generated@@583 $generated@@657 $generated@@745 ($generated@@268 $generated@@657)))) (forall (($generated@@747 Int) ) (!  (=> (<= ($generated@@235 0) $generated@@747) (=> (< $generated@@747 $generated@@639) ($generated@@331 $generated@@745 $generated@@747)))
 :pattern ( ($generated@@330 $generated@@745 $generated@@747))
)))
 :pattern ( ($generated@@268 $generated@@745))
))) (=> (not $generated@@649) (forall (($generated@@748 T@U) ) (!  (=> (and (= (type $generated@@748) ($generated@@243 $generated@@149)) ($generated@@136 $generated@@748 ($generated@@242 $generated@@46))) (=> (and (and (= ($generated@@268 $generated@@748) $generated@@639) (forall (($generated@@749 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@749) (< $generated@@749 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@748 $generated@@749))))) (=> (and (<= ($generated@@235 0) $generated@@749) (< $generated@@749 $generated@@639)) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@748 $generated@@749))) $generated@@639))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@748 $generated@@749)))
))) (and (<= ($generated@@268 $generated@@657) ($generated@@268 $generated@@748)) ($generated@@583 $generated@@657 $generated@@748 ($generated@@268 $generated@@657)))) (exists (($generated@@750 Int) ) (!  (and (and (<= ($generated@@235 0) $generated@@750) (< $generated@@750 $generated@@639)) (not ($generated@@330 $generated@@748 $generated@@750)))
 :pattern ( ($generated@@330 $generated@@748 $generated@@750))
))))
 :pattern ( ($generated@@268 $generated@@748))
))))) (and (and (forall (($generated@@751 T@U) ($generated@@752 Int) ) (!  (=> (and (= (type $generated@@751) ($generated@@243 $generated@@149)) ($generated@@136 $generated@@751 ($generated@@242 $generated@@46))) (and ($generated@@331 $generated@@751 $generated@@752) ($generated@@331 $generated@@751 $generated@@752)))
 :pattern ( ($generated@@330 $generated@@751 $generated@@752))
 :pattern ( ($generated@@330 $generated@@751 $generated@@752))
)) (forall (($generated@@753 T@U) ($generated@@754 Int) ) (!  (=> (and (= (type $generated@@753) ($generated@@243 $generated@@149)) ($generated@@136 $generated@@753 ($generated@@242 $generated@@46))) (= ($generated@@330 $generated@@753 $generated@@754) ($generated@@330 $generated@@753 $generated@@754)))
 :pattern ( ($generated@@330 $generated@@753 $generated@@754))
 :pattern ( ($generated@@330 $generated@@753 $generated@@754))
))) (and (forall (($generated@@755 T@U) ) (!  (=> (= (type $generated@@755) $generated@@77) (=> (and (not (= $generated@@755 $generated@@662)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@641 $generated@@755) $generated@@60))) (= ($generated@@81 $generated@@660 $generated@@755) ($generated@@81 $generated@@641 $generated@@755))))
 :pattern ( ($generated@@81 $generated@@660 $generated@@755))
)) ($generated@@132 $generated@@641 $generated@@660)))) (and (=> (= (ControlFlow 0 42) 41) $generated@@724) (=> (= (ControlFlow 0 42) 33) $generated@@736)))))))))))))))))))))
(let (($generated@@756  (=> (and (not (and (and (<= ($generated@@235 0) $generated@@663) (< $generated@@663 ($generated@@268 $generated@@642))) ($generated@@330 $generated@@642 $generated@@663))) (= (ControlFlow 0 50) 42)) $generated@@737)))
(let (($generated@@757  (=> (and (and (and (<= ($generated@@235 0) $generated@@663) (< $generated@@663 ($generated@@268 $generated@@642))) ($generated@@330 $generated@@642 $generated@@663)) (and (and ($generated@@74 $generated@@657 ($generated@@242 $generated@@46) $generated@@641) ($generated@@74 ($generated@@8 $generated@@663) $generated@@46 $generated@@641)) (and ($generated@@331 $generated@@657 $generated@@663) (= (ControlFlow 0 49) 42)))) $generated@@737)))
(let (($generated@@758  (=> (not (and (<= ($generated@@235 0) $generated@@663) (< $generated@@663 ($generated@@268 $generated@@642)))) (and (=> (= (ControlFlow 0 52) 49) $generated@@757) (=> (= (ControlFlow 0 52) 50) $generated@@756)))))
(let (($generated@@759  (=> (and (and (and (<= ($generated@@235 0) $generated@@663) (< $generated@@663 ($generated@@268 $generated@@642))) ($generated@@74 $generated@@642 ($generated@@242 $generated@@46) $generated@@641)) (and ($generated@@74 ($generated@@8 $generated@@663) $generated@@46 $generated@@641) ($generated@@331 $generated@@642 $generated@@663))) (and (=> (= (ControlFlow 0 51) 49) $generated@@757) (=> (= (ControlFlow 0 51) 50) $generated@@756)))))
(let (($generated@@760  (=> (< $generated@@663 ($generated@@235 0)) (and (=> (= (ControlFlow 0 54) 51) $generated@@759) (=> (= (ControlFlow 0 54) 52) $generated@@758)))))
(let (($generated@@761  (=> (<= ($generated@@235 0) $generated@@663) (and (=> (= (ControlFlow 0 53) 51) $generated@@759) (=> (= (ControlFlow 0 53) 52) $generated@@758)))))
(let (($generated@@762  (and (=> (= (ControlFlow 0 55) 53) $generated@@761) (=> (= (ControlFlow 0 55) 54) $generated@@760))))
(let (($generated@@763  (=> ($generated@@330 $generated@@657 $generated@@643) (and (=> (= (ControlFlow 0 56) 55) $generated@@762) (=> (= (ControlFlow 0 56) 32) $generated@@727)))))
(let (($generated@@764  (=> (forall (($generated@@765 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@765) ($generated@@243 $generated@@149)) ($generated@@136 $generated@@765 ($generated@@242 $generated@@46))) (= ($generated@@268 $generated@@765) $generated@@639)) (forall (($generated@@766 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@766) (< $generated@@766 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@765 $generated@@766))))) (=> (and (<= ($generated@@235 0) $generated@@766) (< $generated@@766 $generated@@639)) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@765 $generated@@766))) $generated@@639))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@765 $generated@@766)))
))) (and (<= ($generated@@268 $generated@@657) ($generated@@268 $generated@@765)) ($generated@@583 $generated@@657 $generated@@765 ($generated@@268 $generated@@657)))) ($generated@@331 $generated@@765 $generated@@643))
 :pattern ( ($generated@@330 $generated@@765 $generated@@643))
 :pattern ( ($generated@@268 $generated@@765))
)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (forall (($generated@@767 T@U) ) (!  (=> (and (= (type $generated@@767) ($generated@@243 $generated@@149)) ($generated@@136 $generated@@767 ($generated@@242 $generated@@46))) (=> (and (and (= ($generated@@268 $generated@@767) $generated@@639) (forall (($generated@@768 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@768) (< $generated@@768 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@767 $generated@@768))))) (=> (and (<= ($generated@@235 0) $generated@@768) (< $generated@@768 $generated@@639)) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@767 $generated@@768))) $generated@@639))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@767 $generated@@768)))
))) (and (<= ($generated@@268 $generated@@657) ($generated@@268 $generated@@767)) ($generated@@583 $generated@@657 $generated@@767 ($generated@@268 $generated@@657)))) (not ($generated@@330 $generated@@767 $generated@@643))))
 :pattern ( ($generated@@330 $generated@@767 $generated@@643))
 :pattern ( ($generated@@268 $generated@@767))
))) (=> (forall (($generated@@769 T@U) ) (!  (=> (and (= (type $generated@@769) ($generated@@243 $generated@@149)) ($generated@@136 $generated@@769 ($generated@@242 $generated@@46))) (=> (and (and (= ($generated@@268 $generated@@769) $generated@@639) (forall (($generated@@770 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@770) (< $generated@@770 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@769 $generated@@770))))) (=> (and (<= ($generated@@235 0) $generated@@770) (< $generated@@770 $generated@@639)) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@769 $generated@@770))) $generated@@639))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@769 $generated@@770)))
))) (and (<= ($generated@@268 $generated@@657) ($generated@@268 $generated@@769)) ($generated@@583 $generated@@657 $generated@@769 ($generated@@268 $generated@@657)))) (not ($generated@@330 $generated@@769 $generated@@643))))
 :pattern ( ($generated@@330 $generated@@769 $generated@@643))
 :pattern ( ($generated@@268 $generated@@769))
)) (=> (= (ControlFlow 0 7) 3) $generated@@729))))))
(let (($generated@@771  (=> (and (not (and (and (= ($generated@@268 $generated@@664) $generated@@639) (forall (($generated@@772 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@772) (< $generated@@772 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@664 $generated@@772))))) (=> (and (<= ($generated@@235 0) $generated@@772) (< $generated@@772 $generated@@639)) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@664 $generated@@772))) $generated@@639))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@664 $generated@@772)))
))) (and (<= ($generated@@268 $generated@@657) ($generated@@268 $generated@@664)) ($generated@@583 $generated@@657 $generated@@664 ($generated@@268 $generated@@657))))) (= (ControlFlow 0 11) 7)) $generated@@764)))
(let (($generated@@773  (=> (and (and (and (= ($generated@@268 $generated@@664) $generated@@639) (forall (($generated@@774 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@774) (< $generated@@774 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@664 $generated@@774))))) (=> (and (<= ($generated@@235 0) $generated@@774) (< $generated@@774 $generated@@639)) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@664 $generated@@774))) $generated@@639))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@664 $generated@@774)))
))) (and (<= ($generated@@268 $generated@@657) ($generated@@268 $generated@@664)) ($generated@@583 $generated@@657 $generated@@664 ($generated@@268 $generated@@657)))) (and (and ($generated@@74 $generated@@664 ($generated@@242 $generated@@46) $generated@@641) ($generated@@74 ($generated@@8 $generated@@643) $generated@@46 $generated@@641)) (and ($generated@@331 $generated@@664 $generated@@643) (= (ControlFlow 0 10) 7)))) $generated@@764)))
(let (($generated@@775  (=> (not (and (= ($generated@@268 $generated@@664) $generated@@639) (forall (($generated@@776 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@776) (< $generated@@776 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@664 $generated@@776))))) (=> (and (<= ($generated@@235 0) $generated@@776) (< $generated@@776 $generated@@639)) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@664 $generated@@776))) $generated@@639))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@664 $generated@@776)))
)))) (and (=> (= (ControlFlow 0 13) 10) $generated@@773) (=> (= (ControlFlow 0 13) 11) $generated@@771)))))
(let (($generated@@777  (=> (and (= ($generated@@268 $generated@@664) $generated@@639) (forall (($generated@@778 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@778) (< $generated@@778 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@664 $generated@@778))))) (=> (and (<= ($generated@@235 0) $generated@@778) (< $generated@@778 $generated@@639)) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@664 $generated@@778))) $generated@@639))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@664 $generated@@778)))
))) (and (=> (= (ControlFlow 0 12) 10) $generated@@773) (=> (= (ControlFlow 0 12) 11) $generated@@771)))))
(let (($generated@@779  (=> (not (and (<= ($generated@@235 0) $generated@@665) (< $generated@@665 $generated@@639))) (and (=> (= (ControlFlow 0 19) 12) $generated@@777) (=> (= (ControlFlow 0 19) 13) $generated@@775)))))
(let (($generated@@780  (=> (and (<= ($generated@@235 0) $generated@@665) (< $generated@@665 $generated@@639)) (and (=> (= (ControlFlow 0 17) (- 0 18)) (and (<= 0 $generated@@665) (< $generated@@665 ($generated@@268 $generated@@664)))) (and (=> (= (ControlFlow 0 17) 12) $generated@@777) (=> (= (ControlFlow 0 17) 13) $generated@@775))))))
(let (($generated@@781  (=> (< $generated@@665 ($generated@@235 0)) (and (=> (= (ControlFlow 0 21) 17) $generated@@780) (=> (= (ControlFlow 0 21) 19) $generated@@779)))))
(let (($generated@@782  (=> (<= ($generated@@235 0) $generated@@665) (and (=> (= (ControlFlow 0 20) 17) $generated@@780) (=> (= (ControlFlow 0 20) 19) $generated@@779)))))
(let (($generated@@783  (=> (=> (and (<= ($generated@@235 0) $generated@@665) (< $generated@@665 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@664 $generated@@665))))) (and (=> (= (ControlFlow 0 22) 20) $generated@@782) (=> (= (ControlFlow 0 22) 21) $generated@@781)))))
(let (($generated@@784  (=> (not (=> (and (<= ($generated@@235 0) $generated@@665) (< $generated@@665 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@664 $generated@@665)))))) (and (=> (= (ControlFlow 0 16) 12) $generated@@777) (=> (= (ControlFlow 0 16) 13) $generated@@775)))))
(let (($generated@@785  (=> (not (and (<= ($generated@@235 0) $generated@@665) (< $generated@@665 $generated@@639))) (and (=> (= (ControlFlow 0 25) 22) $generated@@783) (=> (= (ControlFlow 0 25) 16) $generated@@784)))))
(let (($generated@@786  (=> (and (<= ($generated@@235 0) $generated@@665) (< $generated@@665 $generated@@639)) (and (=> (= (ControlFlow 0 23) (- 0 24)) (and (<= 0 $generated@@665) (< $generated@@665 ($generated@@268 $generated@@664)))) (and (=> (= (ControlFlow 0 23) 22) $generated@@783) (=> (= (ControlFlow 0 23) 16) $generated@@784))))))
(let (($generated@@787  (=> (< $generated@@665 ($generated@@235 0)) (and (=> (= (ControlFlow 0 27) 23) $generated@@786) (=> (= (ControlFlow 0 27) 25) $generated@@785)))))
(let (($generated@@788  (=> (<= ($generated@@235 0) $generated@@665) (and (=> (= (ControlFlow 0 26) 23) $generated@@786) (=> (= (ControlFlow 0 26) 25) $generated@@785)))))
(let (($generated@@789  (and (=> (= (ControlFlow 0 28) 26) $generated@@788) (=> (= (ControlFlow 0 28) 27) $generated@@787))))
(let (($generated@@790  (=> (= ($generated@@268 $generated@@664) $generated@@639) (and (=> (= (ControlFlow 0 29) 28) $generated@@789) (=> (= (ControlFlow 0 29) 15) $generated@@728)))))
(let (($generated@@791  (=> (not (= ($generated@@268 $generated@@664) $generated@@639)) (and (=> (= (ControlFlow 0 14) 12) $generated@@777) (=> (= (ControlFlow 0 14) 13) $generated@@775)))))
(let (($generated@@792  (=> (and ($generated@@136 $generated@@664 ($generated@@242 $generated@@46)) ($generated@@74 $generated@@664 ($generated@@242 $generated@@46) $generated@@641)) (and (=> (= (ControlFlow 0 30) 29) $generated@@790) (=> (= (ControlFlow 0 30) 14) $generated@@791)))))
(let (($generated@@793  (=> (and (not (and ($generated@@136 $generated@@664 ($generated@@242 $generated@@46)) ($generated@@74 $generated@@664 ($generated@@242 $generated@@46) $generated@@641))) (= (ControlFlow 0 9) 7)) $generated@@764)))
(let (($generated@@794  (=> (not ($generated@@330 $generated@@657 $generated@@643)) (and (=> (= (ControlFlow 0 31) 30) $generated@@792) (=> (= (ControlFlow 0 31) 9) $generated@@793)))))
(let (($generated@@795  (=> (< $generated@@644 $generated@@639) (=> (and (= $generated@@656 (- $generated@@639 $generated@@644)) (= $generated@@657 ($generated@@334 $generated@@642 ($generated@@241 ($generated@@267 $generated@@149) ($generated@@274 ($generated@@8 $generated@@644)))))) (=> (and (and ($generated@@74 $generated@@657 ($generated@@242 $generated@@46) $generated@@641) ($generated@@74 ($generated@@8 $generated@@643) $generated@@46 $generated@@641)) (and ($generated@@331 $generated@@657 $generated@@643) ($generated@@331 $generated@@657 $generated@@643))) (and (=> (= (ControlFlow 0 57) 56) $generated@@763) (=> (= (ControlFlow 0 57) 31) $generated@@794)))))))
(let (($generated@@796  (=> $generated@@646 (and (=> (= (ControlFlow 0 58) 40) $generated@@725) (=> (= (ControlFlow 0 58) 57) $generated@@795)))))
(let (($generated@@797  (and (=> (= (ControlFlow 0 95) 94) $generated@@712) (=> (= (ControlFlow 0 95) 58) $generated@@796))))
(let (($generated@@798 true))
(let (($generated@@799  (=> (and ($generated@@254 $generated@@641) ($generated@@661 $generated@@641)) (=> (and (and ($generated@@136 $generated@@666 ($generated@@242 $generated@@46)) ($generated@@74 $generated@@666 ($generated@@242 $generated@@46) $generated@@641)) (and ($generated@@136 $generated@@667 ($generated@@242 $generated@@46)) ($generated@@74 $generated@@667 ($generated@@242 $generated@@46) $generated@@641))) (=> (and (and (and (and (not false) (<= 0 $generated@@644)) (<= 0 $generated@@668)) (=> $generated@@646 true)) (and (and (and (=> $generated@@646 (<= $generated@@644 $generated@@639)) (=> $generated@@646 (forall (($generated@@800 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@800) ($generated@@243 $generated@@149)) ($generated@@136 $generated@@800 ($generated@@242 $generated@@46))) (= ($generated@@268 $generated@@800) $generated@@639)) (forall (($generated@@801 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@801) (< $generated@@801 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@800 $generated@@801))))) (=> (and (<= ($generated@@235 0) $generated@@801) (< $generated@@801 $generated@@639)) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@800 $generated@@801))) $generated@@639))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@800 $generated@@801)))
))) (and (<= ($generated@@268 $generated@@642) ($generated@@268 $generated@@800)) ($generated@@583 $generated@@642 $generated@@800 ($generated@@268 $generated@@642)))) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@800 $generated@@643))))) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@800 $generated@@643))) $generated@@644)) (forall (($generated@@802 Int) ) (!  (=> (<= ($generated@@235 0) $generated@@802) (=> (< $generated@@802 $generated@@639) ($generated@@331 $generated@@800 $generated@@802)))
 :pattern ( ($generated@@330 $generated@@800 $generated@@802))
)))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@800 $generated@@643)))
 :pattern ( ($generated@@268 $generated@@800))
)))) (and (=> $generated@@646 (forall (($generated@@803 T@U) ) (!  (=> (and (= (type $generated@@803) ($generated@@243 $generated@@149)) ($generated@@136 $generated@@803 ($generated@@242 $generated@@46))) (=> (and (and (and (and (= ($generated@@268 $generated@@803) $generated@@639) (forall (($generated@@804 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@804) (< $generated@@804 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@803 $generated@@804))))) (=> (and (<= ($generated@@235 0) $generated@@804) (< $generated@@804 $generated@@639)) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@803 $generated@@804))) $generated@@639))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@803 $generated@@804)))
))) (and (<= ($generated@@268 $generated@@642) ($generated@@268 $generated@@803)) ($generated@@583 $generated@@642 $generated@@803 ($generated@@268 $generated@@642)))) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@803 $generated@@643))))) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@803 $generated@@643))) $generated@@644)) (exists (($generated@@805 Int) ) (!  (and (and (<= ($generated@@235 0) $generated@@805) (< $generated@@805 $generated@@639)) (not ($generated@@330 $generated@@803 $generated@@805)))
 :pattern ( ($generated@@330 $generated@@803 $generated@@805))
))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@803 $generated@@643)))
 :pattern ( ($generated@@268 $generated@@803))
))) (forall (($generated@@806 T@U) ) (!  (=> (= (type $generated@@806) $generated@@77) (=> (and (not (= $generated@@806 $generated@@662)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@659 $generated@@806) $generated@@60))) (= ($generated@@81 $generated@@641 $generated@@806) ($generated@@81 $generated@@659 $generated@@806))))
 :pattern ( ($generated@@81 $generated@@641 $generated@@806))
)))) (and (and ($generated@@132 $generated@@659 $generated@@641) (forall (($generated@@807 T@U) ($generated@@808 T@U) ) (! (let (($generated@@809 ($generated@@67 (type $generated@@808))))
 (=> (and (and (= (type $generated@@807) $generated@@77) (= (type $generated@@808) ($generated@@66 $generated@@809))) (and (not (= $generated@@807 $generated@@662)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@659 $generated@@807) $generated@@60)))) (or (= ($generated@@83 ($generated@@81 $generated@@641 $generated@@807) $generated@@808) ($generated@@83 ($generated@@81 $generated@@659 $generated@@807) $generated@@808)) ($generated@@0 ($generated@@159 $generated@@669 $generated@@807 $generated@@808)))))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@641 $generated@@807) $generated@@808))
))) (and (<= (- $generated@@639 $generated@@644) $generated@@668) (=> (= (- $generated@@639 $generated@@644) $generated@@668) true))))) (and (=> (= (ControlFlow 0 96) 1) $generated@@798) (=> (= (ControlFlow 0 96) 95) $generated@@797)))))))
(let (($generated@@810  (=> (not (= $generated@@643 $generated@@639)) (=> (and (= $generated@@670 ($generated@@235 0)) (= $generated@@668 (- $generated@@639 $generated@@670))) (and (=> (= (ControlFlow 0 97) (- 0 99)) (=> $generated@@646 (<= $generated@@670 $generated@@639))) (=> (=> $generated@@646 (<= $generated@@670 $generated@@639)) (and (=> (= (ControlFlow 0 97) (- 0 98)) (=> $generated@@646 (forall (($generated@@811 T@U) ) (!  (=> (and (= (type $generated@@811) ($generated@@243 $generated@@149)) ($generated@@136 $generated@@811 ($generated@@242 $generated@@46))) (=> (and (and (and (and (= ($generated@@268 $generated@@811) $generated@@639) (forall (($generated@@812 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@812) (< $generated@@812 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@811 $generated@@812))))) (=> (and (<= ($generated@@235 0) $generated@@812) (< $generated@@812 $generated@@639)) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@811 $generated@@812))) $generated@@639))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@811 $generated@@812)))
))) (and (<= ($generated@@268 $generated@@642) ($generated@@268 $generated@@811)) ($generated@@583 $generated@@642 $generated@@811 ($generated@@268 $generated@@642)))) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@811 $generated@@643))))) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@811 $generated@@643))) $generated@@670)) (exists (($generated@@813 Int) ) (!  (and (and (<= ($generated@@235 0) $generated@@813) (< $generated@@813 $generated@@639)) (not ($generated@@330 $generated@@811 $generated@@813)))
 :pattern ( ($generated@@330 $generated@@811 $generated@@813))
))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@811 $generated@@643)))
 :pattern ( ($generated@@268 $generated@@811))
)))) (=> (=> $generated@@646 (forall (($generated@@814 T@U) ) (!  (=> (and (= (type $generated@@814) ($generated@@243 $generated@@149)) ($generated@@136 $generated@@814 ($generated@@242 $generated@@46))) (=> (and (and (and (and (= ($generated@@268 $generated@@814) $generated@@639) (forall (($generated@@815 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@815) (< $generated@@815 $generated@@639)) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@814 $generated@@815))))) (=> (and (<= ($generated@@235 0) $generated@@815) (< $generated@@815 $generated@@639)) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@814 $generated@@815))) $generated@@639))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@814 $generated@@815)))
))) (and (<= ($generated@@268 $generated@@642) ($generated@@268 $generated@@814)) ($generated@@583 $generated@@642 $generated@@814 ($generated@@268 $generated@@642)))) (<= ($generated@@235 0) ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@814 $generated@@643))))) (< ($generated ($generated@@388 $generated@@2 ($generated@@344 $generated@@814 $generated@@643))) $generated@@670)) (exists (($generated@@816 Int) ) (!  (and (and (<= ($generated@@235 0) $generated@@816) (< $generated@@816 $generated@@639)) (not ($generated@@330 $generated@@814 $generated@@816)))
 :pattern ( ($generated@@330 $generated@@814 $generated@@816))
))))
 :pattern ( ($generated@@388 $generated@@2 ($generated@@344 $generated@@814 $generated@@643)))
 :pattern ( ($generated@@268 $generated@@814))
))) (=> (= (ControlFlow 0 97) 96) $generated@@799)))))))))
(let (($generated@@817  (=> (and (= $generated@@669 ($generated@@160 $generated@@662 $generated@@659 $generated@@60 false)) (= $generated@@643 ($generated@@268 $generated@@642))) (and (=> (= (ControlFlow 0 100) 39) $generated@@726) (=> (= (ControlFlow 0 100) 97) $generated@@810)))))
(let (($generated@@818  (=> (and ($generated@@254 $generated@@659) ($generated@@661 $generated@@659)) (=> (and (and (and ($generated@@136 $generated@@642 ($generated@@242 $generated@@46)) ($generated@@74 $generated@@642 ($generated@@242 $generated@@46) $generated@@659)) (and ($generated@@136 $generated@@653 ($generated@@242 $generated@@46)) ($generated@@74 $generated@@653 ($generated@@242 $generated@@46) $generated@@659))) (and (and ($generated@@136 $generated@@671 ($generated@@242 $generated@@46)) ($generated@@74 $generated@@671 ($generated@@242 $generated@@46) $generated@@659)) true)) (=> (and (and (and (and ($generated@@136 $generated@@672 ($generated@@242 $generated@@46)) ($generated@@74 $generated@@672 ($generated@@242 $generated@@46) $generated@@659)) true) (= 1 $generated@@329)) (and (and (<= ($generated@@235 0) $generated@@639) (<= ($generated@@268 $generated@@642) $generated@@639)) (and (forall (($generated@@819 Int) ) (!  (=> true (=> (and (<= ($generated@@235 0) $generated@@819) (< $generated@@819 ($generated@@268 $generated@@642))) ($generated@@330 $generated@@642 $generated@@819)))
 :pattern ( ($generated@@330 $generated@@642 $generated@@819))
)) (= (ControlFlow 0 101) 100)))) $generated@@817)))))
$generated@@818)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) Bool)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (Int) Int)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@T) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@317 () Int)
(declare-fun $generated@@318 (T@U Int) Bool)
(declare-fun $generated@@319 (T@U Int) Bool)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@T T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@391 (T@U T@U) T@U)
(declare-fun $generated@@399 (T@U T@U) T@U)
(declare-fun $generated@@410 (T@T) T@U)
(declare-fun $generated@@434 () T@T)
(declare-fun $generated@@442 (T@U) T@U)
(declare-fun $generated@@446 (T@U) T@U)
(declare-fun $generated@@452 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@476 (T@U Int) T@U)
(declare-fun $generated@@484 (T@U) Int)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@584 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and (= (type $generated@@133) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@132 $generated@@133 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@133 $generated@@135) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60))
)))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) $generated@@64)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@158) $generated@@64)) ($generated@@136 $generated@@157 ($generated@@154 $generated@@158))) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@136 $generated@@157 ($generated@@154 $generated@@158)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@77 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@67 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@77) (= (type $generated@@209) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@210) ($generated@@66 $generated@@4))) (= (type $generated@@212) $generated@@77)) (= (type $generated@@213) ($generated@@66 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= (type ($generated@@215 $generated@@217 $generated@@218)) $generated@@140)
 :pattern ( ($generated@@215 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@64) (= (type $generated@@220) $generated@@64)) (= (type $generated@@221) $generated@@149)) (= (type $generated@@222) $generated@@149)) (= ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220))  (and ($generated@@216 $generated@@221 $generated@@219) ($generated@@216 $generated@@222 $generated@@220))))
 :pattern ( ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@140) (= (type $generated@@224) $generated@@140)) (= ($generated@@146 $generated@@223 $generated@@224) (= $generated@@223 $generated@@224)))
 :pattern ( ($generated@@146 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (! (= (type ($generated@@225 $generated@@226)) $generated@@64)
 :pattern ( ($generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@228) $generated@@64)) (= ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)) (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@149) ($generated@@0 ($generated@@81 $generated@@227 $generated@@229))) ($generated@@216 $generated@@229 $generated@@228))
 :pattern ( ($generated@@81 $generated@@227 $generated@@229))
))))
 :pattern ( ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@149) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@216 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 Int) ) (! (= ($generated@@235 $generated@@236) $generated@@236)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(= (type ($generated@@237 $generated@@238)) $generated@@239))
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= ($generated@@237 $generated@@240) $generated@@240)
 :pattern ( ($generated@@237 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@243) $generated@@64) (= (type $generated@@244) $generated@@64)) (= (type $generated@@245) $generated@@149)) (= (type $generated@@246) $generated@@149)) (= (type $generated@@247) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@241 $generated@@247)) (= ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247)  (and ($generated@@242 $generated@@245 $generated@@243 $generated@@247) ($generated@@242 $generated@@246 $generated@@244 $generated@@247))))
 :pattern ( ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@68)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@140) (= ($generated@@138 $generated@@250) (= ($generated@@248 $generated@@250) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@140) ($generated@@138 $generated@@251)) (exists (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (and (and (= (type $generated@@252) $generated@@149) (= (type $generated@@253) $generated@@149)) (= $generated@@251 ($generated@@215 $generated@@252 $generated@@253)))
 :no-pattern (type $generated@@252)
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@252)
 :no-pattern ($generated@@0 $generated@@252)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
)))
 :pattern ( ($generated@@138 $generated@@251))
)))
(assert  (and (and (forall (($generated@@258 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@258)) 17)) (forall (($generated@@259 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@259)) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
))) (forall (($generated@@260 T@T) ) (! (= (type ($generated@@254 $generated@@260)) ($generated@@256 $generated@@260))
 :pattern ( ($generated@@254 $generated@@260))
))))
(assert (forall (($generated@@261 T@T) ) (! (= ($generated@@255 ($generated@@254 $generated@@261)) 0)
 :pattern ( ($generated@@254 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@149)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@64) (= (type $generated@@266) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266) ($generated@@74 $generated@@264 $generated@@265 $generated@@266)))
 :pattern ( ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@269) $generated@@149)) (= (type $generated@@270) $generated@@64)) ($generated@@132 $generated@@267 $generated@@268)) ($generated@@242 $generated@@269 $generated@@270 $generated@@267)) ($generated@@242 $generated@@269 $generated@@270 $generated@@268))
 :pattern ( ($generated@@132 $generated@@267 $generated@@268) ($generated@@242 $generated@@269 $generated@@270 $generated@@267))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@271) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@272) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@274) $generated@@64)) ($generated@@132 $generated@@271 $generated@@272)) ($generated@@74 $generated@@273 $generated@@274 $generated@@271)) ($generated@@74 $generated@@273 $generated@@274 $generated@@272))
 :pattern ( ($generated@@132 $generated@@271 $generated@@272) ($generated@@74 $generated@@273 $generated@@274 $generated@@271))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@64)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert  (=> (<= 0 $generated@@317) (forall (($generated@@322 T@U) ($generated@@323 Int) ) (!  (=> (and (= (type $generated@@322) ($generated@@256 $generated@@149)) (or ($generated@@319 $generated@@322 $generated@@323) (and (not (= 0 $generated@@317)) ($generated@@136 $generated@@322 ($generated@@320 $generated@@46))))) true)
 :pattern ( ($generated@@318 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ) (! (let (($generated@@325 ($generated@@79 (type $generated@@324))))
 (=> (= (type $generated@@324) ($generated@@76 $generated@@325 $generated@@2)) (= ($generated@@155 $generated@@324) (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@325) (and (<= 0 ($generated ($generated@@81 $generated@@324 $generated@@326))) (<= ($generated ($generated@@81 $generated@@324 $generated@@326)) ($generated@@275 $generated@@324))))
 :pattern ( ($generated@@81 $generated@@324 $generated@@326))
)))))
 :pattern ( ($generated@@155 $generated@@324))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@285 (type $generated@@327))))
(let (($generated@@329 ($generated@@284 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@283 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@282 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@329) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@281 $generated@@327))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@285 (type $generated@@332))))
(= (type ($generated@@331 $generated@@332)) ($generated@@76 $generated@@333 $generated@@4)))
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@285 (type $generated@@334))))
(let (($generated@@336 ($generated@@284 (type $generated@@334))))
 (=> (= (type $generated@@334) ($generated@@283 $generated@@336 $generated@@335)) (or (= $generated@@334 ($generated@@282 $generated@@336 $generated@@335)) (exists (($generated@@337 T@U) ) (!  (and (= (type $generated@@337) $generated@@335) ($generated@@0 ($generated@@81 ($generated@@331 $generated@@334) $generated@@337)))
 :no-pattern (type $generated@@337)
 :no-pattern ($generated $generated@@337)
 :no-pattern ($generated@@0 $generated@@337)
))))))
 :pattern ( ($generated@@331 $generated@@334))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@299 $generated@@338))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@303 (type $generated@@343))))
(= (type ($generated@@342 $generated@@343)) ($generated@@76 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@303 (type $generated@@345))))
(let (($generated@@347 ($generated@@302 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@301 $generated@@347 $generated@@346)) (or (= $generated@@345 ($generated@@300 $generated@@347 $generated@@346)) (exists (($generated@@348 T@U) ) (!  (and (= (type $generated@@348) $generated@@346) ($generated@@0 ($generated@@81 ($generated@@342 $generated@@345) $generated@@348)))
 :no-pattern (type $generated@@348)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
))))))
 :pattern ( ($generated@@342 $generated@@345))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@350) $generated@@64)) (= ($generated@@136 $generated@@349 ($generated@@154 $generated@@350)) (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@349 $generated@@351)))) ($generated@@216 $generated@@351 $generated@@350))
 :pattern ( ($generated@@81 $generated@@349 $generated@@351))
))))
 :pattern ( ($generated@@136 $generated@@349 ($generated@@154 $generated@@350)))
)))
(assert (forall (($generated@@352 T@U) ($generated@@353 T@U) ($generated@@354 T@U) ) (!  (=> (and (and (= (type $generated@@352) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@353) $generated@@64)) (= (type $generated@@354) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@352 ($generated@@225 $generated@@353) $generated@@354) (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@149) ($generated@@0 ($generated@@81 $generated@@352 $generated@@355))) ($generated@@242 $generated@@355 $generated@@353 $generated@@354))
 :pattern ( ($generated@@81 $generated@@352 $generated@@355))
))))
 :pattern ( ($generated@@74 $generated@@352 ($generated@@225 $generated@@353) $generated@@354))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@357) $generated@@64)) (= (type $generated@@358) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@356 ($generated@@230 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@149) ($generated@@0 ($generated@@81 $generated@@356 $generated@@359))) ($generated@@242 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@81 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@74 $generated@@356 ($generated@@230 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 (type $generated@@360)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@361) $generated@@360)) 0))
 :pattern ( (let (($generated@@361 (type $generated@@360)))
($generated@@81 ($generated@@276 $generated@@361) $generated@@360)))
)))
(assert  (and (and (forall (($generated@@365 T@U) ) (! (= (type ($generated@@362 $generated@@365)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@362 $generated@@365))
)) (forall (($generated@@366 T@T) ($generated@@367 T@U) ) (! (= (type ($generated@@363 $generated@@366 $generated@@367)) $generated@@366)
 :pattern ( ($generated@@363 $generated@@366 $generated@@367))
))) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@285 (type $generated@@368))))
(let (($generated@@370 ($generated@@284 (type $generated@@368))))
(= (type ($generated@@364 $generated@@368)) ($generated@@76 $generated@@370 $generated@@369))))
 :pattern ( ($generated@@364 $generated@@368))
))))
(assert (forall (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@371) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@372) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@362 $generated@@371) $generated@@372))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@371) ($generated@@147 ($generated@@363 $generated@@140 $generated@@372)))) (= ($generated@@81 ($generated@@364 $generated@@371) ($generated@@147 ($generated@@363 $generated@@140 $generated@@372))) ($generated@@148 ($generated@@363 $generated@@140 $generated@@372))))))
 :pattern ( ($generated@@81 ($generated@@362 $generated@@371) $generated@@372))
)))
(assert  (and (forall (($generated@@375 T@U) ) (! (= (type ($generated@@373 $generated@@375)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@373 $generated@@375))
)) (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@303 (type $generated@@376))))
(let (($generated@@378 ($generated@@302 (type $generated@@376))))
(= (type ($generated@@374 $generated@@376)) ($generated@@76 $generated@@378 $generated@@377))))
 :pattern ( ($generated@@374 $generated@@376))
))))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@380) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@373 $generated@@379) $generated@@380))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@379) ($generated@@147 ($generated@@363 $generated@@140 $generated@@380)))) (= ($generated@@81 ($generated@@374 $generated@@379) ($generated@@147 ($generated@@363 $generated@@140 $generated@@380))) ($generated@@148 ($generated@@363 $generated@@140 $generated@@380))))))
 :pattern ( ($generated@@81 ($generated@@373 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@381 T@U) ($generated@@382 T@U) ) (! (let (($generated@@383 (type $generated@@382)))
(let (($generated@@384 ($generated@@284 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@283 $generated@@384 $generated@@383)) (= ($generated@@0 ($generated@@81 ($generated@@331 $generated@@381) $generated@@382)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@381) $generated@@385)) (= $generated@@382 ($generated@@81 ($generated@@364 $generated@@381) $generated@@385))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@381) $generated@@385))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@381) $generated@@385))
))))))
 :pattern ( ($generated@@81 ($generated@@331 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (! (let (($generated@@388 (type $generated@@387)))
(let (($generated@@389 ($generated@@302 (type $generated@@386))))
 (=> (= (type $generated@@386) ($generated@@301 $generated@@389 $generated@@388)) (= ($generated@@0 ($generated@@81 ($generated@@342 $generated@@386) $generated@@387)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@389) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@386) $generated@@390)) (= $generated@@387 ($generated@@81 ($generated@@374 $generated@@386) $generated@@390))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@386) $generated@@390))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@386) $generated@@390))
))))))
 :pattern ( ($generated@@81 ($generated@@342 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (= (type ($generated@@391 $generated@@392 $generated@@393)) $generated@@64)
 :pattern ( ($generated@@391 $generated@@392 $generated@@393))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (and (= (type $generated@@394) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@395) $generated@@64)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@394) $generated@@398))) (and ($generated@@242 ($generated@@81 ($generated@@364 $generated@@394) $generated@@398) $generated@@396 $generated@@397) ($generated@@242 $generated@@398 $generated@@395 $generated@@397)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@394) $generated@@398))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@394) $generated@@398))
))))
 :pattern ( ($generated@@74 $generated@@394 ($generated@@391 $generated@@395 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@400 $generated@@401)) $generated@@64)
 :pattern ( ($generated@@399 $generated@@400 $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (and (and (= (type $generated@@402) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@403) $generated@@64)) (= (type $generated@@404) $generated@@64)) (= (type $generated@@405) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@402) $generated@@406))) (and ($generated@@242 ($generated@@81 ($generated@@374 $generated@@402) $generated@@406) $generated@@404 $generated@@405) ($generated@@242 $generated@@406 $generated@@403 $generated@@405)))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@402) $generated@@406))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@402) $generated@@406))
))))
 :pattern ( ($generated@@74 $generated@@402 ($generated@@399 $generated@@403 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@407) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@408) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@407 $generated@@409))) (and ($generated@@132 $generated@@407 $generated@@408) ($generated@@132 $generated@@408 $generated@@409))) ($generated@@132 $generated@@407 $generated@@409))
 :pattern ( ($generated@@132 $generated@@407 $generated@@408) ($generated@@132 $generated@@408 $generated@@409))
)))
(assert (forall (($generated@@411 T@T) ) (! (= (type ($generated@@410 $generated@@411)) ($generated@@76 $generated@@411 $generated@@4))
 :pattern ( ($generated@@410 $generated@@411))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@303 (type $generated@@412))))
(let (($generated@@414 ($generated@@302 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@301 $generated@@414 $generated@@413)) (= (= $generated@@412 ($generated@@300 $generated@@414 $generated@@413)) (= ($generated@@299 $generated@@412) ($generated@@410 $generated@@414))))))
 :pattern ( ($generated@@299 $generated@@412))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@303 (type $generated@@415))))
(let (($generated@@417 ($generated@@302 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@301 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@300 $generated@@417 $generated@@416)) (= ($generated@@342 $generated@@415) ($generated@@410 $generated@@416))))))
 :pattern ( ($generated@@342 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@303 (type $generated@@418))))
(let (($generated@@420 ($generated@@302 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@301 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@300 $generated@@420 $generated@@419)) (= ($generated@@373 $generated@@418) ($generated@@410 $generated@@149))))))
 :pattern ( ($generated@@373 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@285 (type $generated@@421))))
(let (($generated@@423 ($generated@@284 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@283 $generated@@423 $generated@@422)) (or (= $generated@@421 ($generated@@282 $generated@@423 $generated@@422)) (exists (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (and (and (= (type $generated@@424) $generated@@149) (= (type $generated@@425) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@362 $generated@@421) ($generated@@262 ($generated@@215 $generated@@424 $generated@@425)))))
 :no-pattern (type $generated@@424)
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@424)
 :no-pattern ($generated@@0 $generated@@424)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@362 $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ) (! (let (($generated@@427 ($generated@@303 (type $generated@@426))))
(let (($generated@@428 ($generated@@302 (type $generated@@426))))
 (=> (= (type $generated@@426) ($generated@@301 $generated@@428 $generated@@427)) (or (= $generated@@426 ($generated@@300 $generated@@428 $generated@@427)) (exists (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (and (and (= (type $generated@@429) $generated@@149) (= (type $generated@@430) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@373 $generated@@426) ($generated@@262 ($generated@@215 $generated@@429 $generated@@430)))))
 :no-pattern (type $generated@@429)
 :no-pattern (type $generated@@430)
 :no-pattern ($generated $generated@@429)
 :no-pattern ($generated@@0 $generated@@429)
 :no-pattern ($generated $generated@@430)
 :no-pattern ($generated@@0 $generated@@430)
))))))
 :pattern ( ($generated@@373 $generated@@426))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@149) ($generated@@216 $generated@@431 $generated@@46)) (and (= ($generated@@262 ($generated@@363 $generated@@2 $generated@@431)) $generated@@431) ($generated@@136 ($generated@@363 $generated@@2 $generated@@431) $generated@@46)))
 :pattern ( ($generated@@216 $generated@@431 $generated@@46))
)))
(assert (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@149) ($generated@@216 $generated@@432 $generated@@47)) (and (= ($generated@@262 ($generated@@363 $generated@@3 $generated@@432)) $generated@@432) ($generated@@136 ($generated@@363 $generated@@3 $generated@@432) $generated@@47)))
 :pattern ( ($generated@@216 $generated@@432 $generated@@47))
)))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@149) ($generated@@216 $generated@@433 $generated@@44)) (and (= ($generated@@262 ($generated@@363 $generated@@4 $generated@@433)) $generated@@433) ($generated@@136 ($generated@@363 $generated@@4 $generated@@433) $generated@@44)))
 :pattern ( ($generated@@216 $generated@@433 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@434) 20))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@149) ($generated@@216 $generated@@435 $generated@@45)) (and (= ($generated@@262 ($generated@@363 $generated@@434 $generated@@435)) $generated@@435) ($generated@@136 ($generated@@363 $generated@@434 $generated@@435) $generated@@45)))
 :pattern ( ($generated@@216 $generated@@435 $generated@@45))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (= (type $generated@@437) $generated@@64) (= ($generated@@216 ($generated@@262 $generated@@436) $generated@@437) ($generated@@136 $generated@@436 $generated@@437)))
 :pattern ( ($generated@@216 ($generated@@262 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@79 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@76 $generated@@439 $generated@@2)) (<= 0 ($generated@@275 $generated@@438))))
 :pattern ( ($generated@@275 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@257 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@256 $generated@@441)) (<= 0 ($generated@@255 $generated@@440))))
 :pattern ( ($generated@@255 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (= (type ($generated@@442 $generated@@443)) $generated@@64)
 :pattern ( ($generated@@442 $generated@@443))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@64) (= (type $generated@@445) $generated@@64)) (= ($generated@@442 ($generated@@391 $generated@@444 $generated@@445)) $generated@@444))
 :pattern ( ($generated@@391 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (= (type ($generated@@446 $generated@@447)) $generated@@64)
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@64) (= (type $generated@@449) $generated@@64)) (= ($generated@@446 ($generated@@391 $generated@@448 $generated@@449)) $generated@@449))
 :pattern ( ($generated@@391 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@72 ($generated@@391 $generated@@450 $generated@@451)) $generated@@58))
 :pattern ( ($generated@@391 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ) (! (= (type ($generated@@452 $generated@@453)) $generated@@64)
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@64) (= (type $generated@@455) $generated@@64)) (= ($generated@@452 ($generated@@399 $generated@@454 $generated@@455)) $generated@@454))
 :pattern ( ($generated@@399 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (= (type ($generated@@456 $generated@@457)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@64) (= (type $generated@@459) $generated@@64)) (= ($generated@@456 ($generated@@399 $generated@@458 $generated@@459)) $generated@@459))
 :pattern ( ($generated@@399 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@64) (= (type $generated@@461) $generated@@64)) (= ($generated@@72 ($generated@@399 $generated@@460 $generated@@461)) $generated@@59))
 :pattern ( ($generated@@399 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@149) (= (type $generated@@463) $generated@@149)) (= ($generated@@248 ($generated@@215 $generated@@462 $generated@@463)) $generated@@61))
 :pattern ( ($generated@@215 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@64)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@64) (= (type $generated@@467) $generated@@64)) (= ($generated@@464 ($generated@@139 $generated@@466 $generated@@467)) $generated@@466))
 :pattern ( ($generated@@139 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@64) (= (type $generated@@471) $generated@@64)) (= ($generated@@468 ($generated@@139 $generated@@470 $generated@@471)) $generated@@471))
 :pattern ( ($generated@@139 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@149) (= (type $generated@@473) $generated@@149)) (= ($generated@@147 ($generated@@215 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@215 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@149) (= (type $generated@@475) $generated@@149)) (= ($generated@@148 ($generated@@215 $generated@@474 $generated@@475)) $generated@@475))
 :pattern ( ($generated@@215 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 Int) ) (! (let (($generated@@479 ($generated@@257 (type $generated@@477))))
(= (type ($generated@@476 $generated@@477 $generated@@478)) $generated@@479))
 :pattern ( ($generated@@476 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@480) ($generated@@256 $generated@@149)) (= (type $generated@@481) $generated@@64)) (= (type $generated@@482) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@480 ($generated@@320 $generated@@481) $generated@@482) (forall (($generated@@483 Int) ) (!  (=> (and (<= 0 $generated@@483) (< $generated@@483 ($generated@@255 $generated@@480))) ($generated@@242 ($generated@@476 $generated@@480 $generated@@483) $generated@@481 $generated@@482))
 :pattern ( ($generated@@476 $generated@@480 $generated@@483))
))))
 :pattern ( ($generated@@74 $generated@@480 ($generated@@320 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@485 Int) ) (! (= ($generated@@484 ($generated@@75 $generated@@485)) $generated@@485)
 :pattern ( ($generated@@75 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@64)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@486 ($generated@@225 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@225 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@64) (= ($generated@@72 ($generated@@225 $generated@@489)) $generated@@54))
 :pattern ( ($generated@@225 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@64)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@490 ($generated@@230 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@230 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@493)) $generated@@55))
 :pattern ( ($generated@@230 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@64)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@494 ($generated@@154 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@154 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@64) (= ($generated@@72 ($generated@@154 $generated@@497)) $generated@@56))
 :pattern ( ($generated@@154 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@64)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@498 ($generated@@320 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@320 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@64) (= ($generated@@72 ($generated@@320 $generated@@501)) $generated@@57))
 :pattern ( ($generated@@320 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ) (! (let (($generated@@503 (type $generated@@502)))
(= ($generated@@363 $generated@@503 ($generated@@262 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@262 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (and (= (type $generated@@504) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@505) $generated@@64)) (= (type $generated@@506) $generated@@64)) (= ($generated@@136 $generated@@504 ($generated@@391 $generated@@505 $generated@@506)) (forall (($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@504) $generated@@507))) (and ($generated@@216 ($generated@@81 ($generated@@364 $generated@@504) $generated@@507) $generated@@506) ($generated@@216 $generated@@507 $generated@@505)))
 :pattern ( ($generated@@81 ($generated@@364 $generated@@504) $generated@@507))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@504) $generated@@507))
))))
 :pattern ( ($generated@@136 $generated@@504 ($generated@@391 $generated@@505 $generated@@506)))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@509) $generated@@64)) (= (type $generated@@510) $generated@@64)) (= ($generated@@136 $generated@@508 ($generated@@399 $generated@@509 $generated@@510)) (forall (($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@508) $generated@@511))) (and ($generated@@216 ($generated@@81 ($generated@@374 $generated@@508) $generated@@511) $generated@@510) ($generated@@216 $generated@@511 $generated@@509)))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@508) $generated@@511))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@508) $generated@@511))
))))
 :pattern ( ($generated@@136 $generated@@508 ($generated@@399 $generated@@509 $generated@@510)))
)))
(assert  (=> (<= 0 $generated@@317) (forall (($generated@@512 T@U) ($generated@@513 Int) ) (!  (=> (and (= (type $generated@@512) ($generated@@256 $generated@@149)) (or ($generated@@319 ($generated@@237 $generated@@512) ($generated@@235 $generated@@513)) (and (not (= 0 $generated@@317)) ($generated@@136 $generated@@512 ($generated@@320 $generated@@46))))) (= ($generated@@318 ($generated@@237 $generated@@512) ($generated@@235 $generated@@513))  (and (and (<= ($generated@@235 0) ($generated@@235 $generated@@513)) (< $generated@@513 ($generated@@255 ($generated@@237 $generated@@512)))) (forall (($generated@@514 Int) ) (!  (=> true (and (and (=> (and (<= ($generated@@235 0) $generated@@514) (< $generated@@514 $generated@@513)) (not (= ($generated ($generated@@363 $generated@@2 ($generated@@476 ($generated@@237 $generated@@512) $generated@@514))) ($generated ($generated@@363 $generated@@2 ($generated@@476 ($generated@@237 $generated@@512) ($generated@@235 $generated@@513))))))) (=> (and (<= ($generated@@235 0) $generated@@514) (< $generated@@514 $generated@@513)) (not (= (- ($generated ($generated@@363 $generated@@2 ($generated@@476 ($generated@@237 $generated@@512) $generated@@514))) ($generated ($generated@@363 $generated@@2 ($generated@@476 ($generated@@237 $generated@@512) ($generated@@235 $generated@@513))))) (- $generated@@513 $generated@@514))))) (=> (and (<= ($generated@@235 0) $generated@@514) (< $generated@@514 $generated@@513)) (not (= (- ($generated ($generated@@363 $generated@@2 ($generated@@476 ($generated@@237 $generated@@512) ($generated@@235 $generated@@513)))) ($generated ($generated@@363 $generated@@2 ($generated@@476 ($generated@@237 $generated@@512) $generated@@514)))) (- $generated@@513 $generated@@514))))))
 :pattern ( ($generated@@363 $generated@@2 ($generated@@476 $generated@@512 $generated@@514)))
)))))
 :weight 3
 :pattern ( ($generated@@318 ($generated@@237 $generated@@512) ($generated@@235 $generated@@513)))
))))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@149) (= (type $generated@@518) $generated@@149)) (< ($generated@@515 $generated@@517) ($generated@@516 ($generated@@215 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@215 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@149) (= (type $generated@@520) $generated@@149)) (< ($generated@@515 $generated@@520) ($generated@@516 ($generated@@215 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@215 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@149) (= (type $generated@@522) $generated@@64)) (= (type $generated@@523) $generated@@64)) ($generated@@216 $generated@@521 ($generated@@391 $generated@@522 $generated@@523))) (and (= ($generated@@262 ($generated@@363 ($generated@@283 $generated@@149 $generated@@149) $generated@@521)) $generated@@521) ($generated@@136 ($generated@@363 ($generated@@283 $generated@@149 $generated@@149) $generated@@521) ($generated@@391 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@216 $generated@@521 ($generated@@391 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@149) (= (type $generated@@525) $generated@@64)) (= (type $generated@@526) $generated@@64)) ($generated@@216 $generated@@524 ($generated@@399 $generated@@525 $generated@@526))) (and (= ($generated@@262 ($generated@@363 ($generated@@301 $generated@@149 $generated@@149) $generated@@524)) $generated@@524) ($generated@@136 ($generated@@363 ($generated@@301 $generated@@149 $generated@@149) $generated@@524) ($generated@@399 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@216 $generated@@524 ($generated@@399 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@64) (= (type $generated@@528) $generated@@64)) (= (type $generated@@529) $generated@@149)) ($generated@@216 $generated@@529 ($generated@@139 $generated@@527 $generated@@528))) (and (= ($generated@@262 ($generated@@363 $generated@@140 $generated@@529)) $generated@@529) ($generated@@136 ($generated@@363 $generated@@140 $generated@@529) ($generated@@139 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@216 $generated@@529 ($generated@@139 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
 (not ($generated@@0 ($generated@@81 ($generated@@410 $generated@@531) $generated@@530))))
 :pattern ( (let (($generated@@531 (type $generated@@530)))
($generated@@81 ($generated@@410 $generated@@531) $generated@@530)))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@69)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@534) $generated@@64) (= (type $generated@@535) $generated@@64)) (and (= ($generated@@72 ($generated@@139 $generated@@534 $generated@@535)) $generated@@62) (= ($generated@@532 ($generated@@139 $generated@@534 $generated@@535)) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@534 $generated@@535))
)))
(assert  (=> (<= 0 $generated@@317) (forall (($generated@@536 T@U) ($generated@@537 Int) ) (!  (=> (and (= (type $generated@@536) ($generated@@256 $generated@@149)) (or ($generated@@319 $generated@@536 $generated@@537) (and (not (= 0 $generated@@317)) ($generated@@136 $generated@@536 ($generated@@320 $generated@@46))))) (= ($generated@@318 $generated@@536 $generated@@537)  (and (and (<= ($generated@@235 0) $generated@@537) (< $generated@@537 ($generated@@255 $generated@@536))) (forall (($generated@@538 Int) ) (!  (=> true (and (and (=> (and (<= ($generated@@235 0) $generated@@538) (< $generated@@538 $generated@@537)) (not (= ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@538))) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@537)))))) (=> (and (<= ($generated@@235 0) $generated@@538) (< $generated@@538 $generated@@537)) (not (= (- ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@538))) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@537)))) (- $generated@@537 $generated@@538))))) (=> (and (<= ($generated@@235 0) $generated@@538) (< $generated@@538 $generated@@537)) (not (= (- ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@537))) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@538)))) (- $generated@@537 $generated@@538))))))
 :pattern ( ($generated@@363 $generated@@2 ($generated@@476 $generated@@536 $generated@@538)))
)))))
 :pattern ( ($generated@@318 $generated@@536 $generated@@537))
))))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@140) (= ($generated@@515 ($generated@@262 $generated@@539)) ($generated@@516 $generated@@539)))
 :pattern ( ($generated@@515 ($generated@@262 $generated@@539)))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@149) ($generated@@216 $generated@@540 ($generated@@75 0))) (and (= ($generated@@262 ($generated@@363 $generated@@2 $generated@@540)) $generated@@540) ($generated@@136 ($generated@@363 ($generated@@76 $generated@@149 $generated@@4) $generated@@540) ($generated@@75 0))))
 :pattern ( ($generated@@216 $generated@@540 ($generated@@75 0)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@149) (= (type $generated@@542) $generated@@64)) ($generated@@216 $generated@@541 ($generated@@225 $generated@@542))) (and (= ($generated@@262 ($generated@@363 ($generated@@76 $generated@@149 $generated@@4) $generated@@541)) $generated@@541) ($generated@@136 ($generated@@363 ($generated@@76 $generated@@149 $generated@@4) $generated@@541) ($generated@@225 $generated@@542))))
 :pattern ( ($generated@@216 $generated@@541 ($generated@@225 $generated@@542)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@149) (= (type $generated@@544) $generated@@64)) ($generated@@216 $generated@@543 ($generated@@230 $generated@@544))) (and (= ($generated@@262 ($generated@@363 ($generated@@76 $generated@@149 $generated@@4) $generated@@543)) $generated@@543) ($generated@@136 ($generated@@363 ($generated@@76 $generated@@149 $generated@@4) $generated@@543) ($generated@@230 $generated@@544))))
 :pattern ( ($generated@@216 $generated@@543 ($generated@@230 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@149) (= (type $generated@@546) $generated@@64)) ($generated@@216 $generated@@545 ($generated@@154 $generated@@546))) (and (= ($generated@@262 ($generated@@363 ($generated@@76 $generated@@149 $generated@@2) $generated@@545)) $generated@@545) ($generated@@136 ($generated@@363 ($generated@@76 $generated@@149 $generated@@2) $generated@@545) ($generated@@154 $generated@@546))))
 :pattern ( ($generated@@216 $generated@@545 ($generated@@154 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@149) (= (type $generated@@548) $generated@@64)) ($generated@@216 $generated@@547 ($generated@@320 $generated@@548))) (and (= ($generated@@262 ($generated@@363 ($generated@@256 $generated@@149) $generated@@547)) $generated@@547) ($generated@@136 ($generated@@363 ($generated@@256 $generated@@149) $generated@@547) ($generated@@320 $generated@@548))))
 :pattern ( ($generated@@216 $generated@@547 ($generated@@320 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@549) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@550) $generated@@64)) (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@549 ($generated@@154 $generated@@550) $generated@@551) (forall (($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@552) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@549 $generated@@552)))) ($generated@@242 $generated@@552 $generated@@550 $generated@@551))
 :pattern ( ($generated@@81 $generated@@549 $generated@@552))
))))
 :pattern ( ($generated@@74 $generated@@549 ($generated@@154 $generated@@550) $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@140) (= (type $generated@@554) $generated@@64)) (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@555) (and ($generated@@138 $generated@@553) (exists (($generated@@556 T@U) ) (!  (and (= (type $generated@@556) $generated@@64) ($generated@@74 $generated@@553 ($generated@@139 $generated@@554 $generated@@556) $generated@@555))
 :pattern ( ($generated@@74 $generated@@553 ($generated@@139 $generated@@554 $generated@@556) $generated@@555))
))))) ($generated@@242 ($generated@@147 $generated@@553) $generated@@554 $generated@@555))
 :pattern ( ($generated@@242 ($generated@@147 $generated@@553) $generated@@554 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@140) (= (type $generated@@558) $generated@@64)) (= (type $generated@@559) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@559) (and ($generated@@138 $generated@@557) (exists (($generated@@560 T@U) ) (!  (and (= (type $generated@@560) $generated@@64) ($generated@@74 $generated@@557 ($generated@@139 $generated@@560 $generated@@558) $generated@@559))
 :pattern ( ($generated@@74 $generated@@557 ($generated@@139 $generated@@560 $generated@@558) $generated@@559))
))))) ($generated@@242 ($generated@@148 $generated@@557) $generated@@558 $generated@@559))
 :pattern ( ($generated@@242 ($generated@@148 $generated@@557) $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@149) (= (type $generated@@562) $generated@@149)) (= ($generated@@215 ($generated@@237 $generated@@561) ($generated@@237 $generated@@562)) ($generated@@237 ($generated@@215 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@215 ($generated@@237 $generated@@561) ($generated@@237 $generated@@562)))
)))
(assert (forall (($generated@@563 Int) ) (! (= ($generated@@262 ($generated@@8 ($generated@@235 $generated@@563))) ($generated@@237 ($generated@@262 ($generated@@8 $generated@@563))))
 :pattern ( ($generated@@262 ($generated@@8 ($generated@@235 $generated@@563))))
)))
(assert (forall (($generated@@564 T@U) ) (! (= ($generated@@262 ($generated@@237 $generated@@564)) ($generated@@237 ($generated@@262 $generated@@564)))
 :pattern ( ($generated@@262 ($generated@@237 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 ($generated@@257 (type $generated@@565))))
 (=> (and (= (type $generated@@565) ($generated@@256 $generated@@566)) (= ($generated@@255 $generated@@565) 0)) (= $generated@@565 ($generated@@254 $generated@@566))))
 :pattern ( ($generated@@255 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@568)))
 (=> (and (and (= (type $generated@@567) ($generated@@76 $generated@@570 $generated@@2)) (= (type $generated@@569) $generated@@2)) (<= 0 ($generated $generated@@569))) (= ($generated@@275 ($generated@@82 $generated@@567 $generated@@568 $generated@@569)) (+ (- ($generated@@275 $generated@@567) ($generated ($generated@@81 $generated@@567 $generated@@568))) ($generated $generated@@569)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@567 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@572) $generated@@2)) ($generated@@74 $generated@@572 $generated@@46 $generated@@571))
 :pattern ( ($generated@@74 $generated@@572 $generated@@46 $generated@@571))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@574) $generated@@3)) ($generated@@74 $generated@@574 $generated@@47 $generated@@573))
 :pattern ( ($generated@@74 $generated@@574 $generated@@47 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@576) $generated@@4)) ($generated@@74 $generated@@576 $generated@@44 $generated@@575))
 :pattern ( ($generated@@74 $generated@@576 $generated@@44 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@577) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@578) $generated@@434)) ($generated@@74 $generated@@578 $generated@@45 $generated@@577))
 :pattern ( ($generated@@74 $generated@@578 $generated@@45 $generated@@577))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@580) $generated@@149)) ($generated@@74 $generated@@580 $generated@@48 $generated@@579))
 :pattern ( ($generated@@74 $generated@@580 $generated@@48 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@256 $generated@@149)) (= (type $generated@@582) $generated@@64)) (= ($generated@@136 $generated@@581 ($generated@@320 $generated@@582)) (forall (($generated@@583 Int) ) (!  (=> (and (<= 0 $generated@@583) (< $generated@@583 ($generated@@255 $generated@@581))) ($generated@@216 ($generated@@476 $generated@@581 $generated@@583) $generated@@582))
 :pattern ( ($generated@@476 $generated@@581 $generated@@583))
))))
 :pattern ( ($generated@@136 $generated@@581 ($generated@@320 $generated@@582)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 Int) ) (!  (=> (= (type $generated@@585) ($generated@@256 $generated@@149)) (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@255 $generated@@585))) (< ($generated@@516 ($generated@@363 $generated@@140 ($generated@@476 $generated@@585 $generated@@586))) ($generated@@584 $generated@@585))))
 :pattern ( ($generated@@516 ($generated@@363 $generated@@140 ($generated@@476 $generated@@585 $generated@@586))))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (and (= (type $generated@@587) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@588) $generated@@64)) (= (type $generated@@589) $generated@@64)) ($generated@@136 $generated@@587 ($generated@@391 $generated@@588 $generated@@589))) (and (and ($generated@@136 ($generated@@281 $generated@@587) ($generated@@225 $generated@@588)) ($generated@@136 ($generated@@331 $generated@@587) ($generated@@225 $generated@@589))) ($generated@@136 ($generated@@362 $generated@@587) ($generated@@225 ($generated@@139 $generated@@588 $generated@@589)))))
 :pattern ( ($generated@@136 $generated@@587 ($generated@@391 $generated@@588 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@591) $generated@@64)) (= (type $generated@@592) $generated@@64)) ($generated@@136 $generated@@590 ($generated@@399 $generated@@591 $generated@@592))) (and (and ($generated@@136 ($generated@@299 $generated@@590) ($generated@@230 $generated@@591)) ($generated@@136 ($generated@@342 $generated@@590) ($generated@@230 $generated@@592))) ($generated@@136 ($generated@@373 $generated@@590) ($generated@@230 ($generated@@139 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@136 $generated@@590 ($generated@@399 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@2) ($generated@@136 $generated@@593 $generated@@46))
 :pattern ( ($generated@@136 $generated@@593 $generated@@46))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@3) ($generated@@136 $generated@@594 $generated@@47))
 :pattern ( ($generated@@136 $generated@@594 $generated@@47))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@4) ($generated@@136 $generated@@595 $generated@@44))
 :pattern ( ($generated@@136 $generated@@595 $generated@@44))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@434) ($generated@@136 $generated@@596 $generated@@45))
 :pattern ( ($generated@@136 $generated@@596 $generated@@45))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@149) ($generated@@136 $generated@@597 $generated@@48))
 :pattern ( ($generated@@136 $generated@@597 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@598 () T@U)
(declare-fun $generated@@599 () T@U)
(declare-fun $generated@@600 () T@U)
(declare-fun $generated@@601 () Int)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 (T@U) Bool)
(declare-fun $generated@@605 () T@U)
(declare-fun $generated@@606 () Bool)
(declare-fun $generated@@607 () Int)
(declare-fun $generated@@608 () T@U)
(declare-fun $generated@@609 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@598) ($generated@@161 $generated@@77 $generated@@4)) (= (type $generated@@599) $generated@@77)) (= (type $generated@@600) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@602) ($generated@@256 $generated@@149))) (= (type $generated@@603) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@605) ($generated@@256 $generated@@149))) (= (type $generated@@608) ($generated@@256 $generated@@149))) (= (type $generated@@609) ($generated@@256 $generated@@149))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@610  (=> (and (and (= $generated@@598 ($generated@@160 $generated@@599 $generated@@600 $generated@@60 false)) (= $generated@@601 ($generated@@235 2))) (and ($generated@@136 $generated@@602 ($generated@@320 $generated@@46)) ($generated@@74 $generated@@602 ($generated@@320 $generated@@46) $generated@@600))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@235 0) $generated@@601)) (=> (<= ($generated@@235 0) $generated@@601) (=> (and (and (and (and ($generated@@241 $generated@@603) ($generated@@604 $generated@@603)) (and ($generated@@136 $generated@@605 ($generated@@320 $generated@@46)) ($generated@@74 $generated@@605 ($generated@@320 $generated@@46) $generated@@603))) (and (and (=> $generated@@606 (=> (= ($generated@@255 $generated@@605) $generated@@601) (forall (($generated@@611 Int) ) (!  (=> (<= ($generated@@235 0) $generated@@611) (=> (< $generated@@611 $generated@@601) ($generated@@319 $generated@@605 $generated@@611)))
 :pattern ( ($generated@@318 $generated@@605 $generated@@611))
)))) (=> $generated@@606 (= ($generated@@255 $generated@@605) $generated@@601))) (and (=> $generated@@606 (forall (($generated@@612 Int) ) (!  (=> true (=> (and (<= ($generated@@235 0) $generated@@612) (< $generated@@612 $generated@@601)) ($generated@@318 $generated@@605 $generated@@612)))
 :pattern ( ($generated@@318 $generated@@605 $generated@@612))
))) (=> (not $generated@@606) (forall (($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) ($generated@@256 $generated@@149)) ($generated@@136 $generated@@613 ($generated@@320 $generated@@46))) (= ($generated@@255 $generated@@613) $generated@@601)) (forall (($generated@@614 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@614) (< $generated@@614 $generated@@601)) (<= ($generated@@235 0) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@613 $generated@@614))))) (=> (and (<= ($generated@@235 0) $generated@@614) (< $generated@@614 $generated@@601)) (< ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@613 $generated@@614))) $generated@@601))))
 :pattern ( ($generated@@363 $generated@@2 ($generated@@476 $generated@@613 $generated@@614)))
))) (forall (($generated@@615 Int) ) (!  (=> (<= ($generated@@235 0) $generated@@615) (=> (< $generated@@615 $generated@@601) ($generated@@319 $generated@@613 $generated@@615)))
 :pattern ( ($generated@@318 $generated@@613 $generated@@615))
)))
 :pattern ( ($generated@@255 $generated@@613))
)))))) (and (and (and (=> (not $generated@@606) (forall (($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@616) ($generated@@256 $generated@@149)) ($generated@@136 $generated@@616 ($generated@@320 $generated@@46))) (and (= ($generated@@255 $generated@@616) $generated@@601) (forall (($generated@@617 Int) ) (!  (=> true (and (=> (and (<= ($generated@@235 0) $generated@@617) (< $generated@@617 $generated@@601)) (<= ($generated@@235 0) ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@616 $generated@@617))))) (=> (and (<= ($generated@@235 0) $generated@@617) (< $generated@@617 $generated@@601)) (< ($generated ($generated@@363 $generated@@2 ($generated@@476 $generated@@616 $generated@@617))) $generated@@601))))
 :pattern ( ($generated@@363 $generated@@2 ($generated@@476 $generated@@616 $generated@@617)))
)))) (exists (($generated@@618 Int) ) (!  (and (and (<= ($generated@@235 0) $generated@@618) (< $generated@@618 $generated@@601)) (not ($generated@@318 $generated@@616 $generated@@618)))
 :pattern ( ($generated@@318 $generated@@616 $generated@@618))
)))
 :pattern ( ($generated@@255 $generated@@616))
))) (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@77) (=> (and (not (= $generated@@619 $generated@@599)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@600 $generated@@619) $generated@@60))) (= ($generated@@81 $generated@@603 $generated@@619) ($generated@@81 $generated@@600 $generated@@619))))
 :pattern ( ($generated@@81 $generated@@603 $generated@@619))
))) (and ($generated@@132 $generated@@600 $generated@@603) (= $generated@@607 ($generated@@235 4)))) (and (and ($generated@@136 $generated@@608 ($generated@@320 $generated@@46)) ($generated@@74 $generated@@608 ($generated@@320 $generated@@46) $generated@@600)) (= (ControlFlow 0 2) (- 0 1))))) (<= ($generated@@235 0) $generated@@607)))))))
(let (($generated@@620  (=> (and ($generated@@241 $generated@@600) ($generated@@604 $generated@@600)) (=> (and (and (and ($generated@@136 $generated@@609 ($generated@@320 $generated@@46)) ($generated@@74 $generated@@609 ($generated@@320 $generated@@46) $generated@@600)) true) (and (= 3 $generated@@317) (= (ControlFlow 0 4) 2))) $generated@@610))))
$generated@@620)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@159 (T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) T@U)
(declare-fun $generated@@216 (T@U T@U) Bool)
(declare-fun $generated@@225 (T@U) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (Int) Int)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@242 (T@U T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) T@U)
(declare-fun $generated@@254 (T@T) T@U)
(declare-fun $generated@@255 (T@U) Int)
(declare-fun $generated@@256 (T@T) T@T)
(declare-fun $generated@@257 (T@T) T@T)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@T T@T) T@U)
(declare-fun $generated@@283 (T@T T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@300 (T@T T@T) T@U)
(declare-fun $generated@@301 (T@T T@T) T@T)
(declare-fun $generated@@302 (T@T) T@T)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@335 (T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@356 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@384 (T@U T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@403 (T@T) T@U)
(declare-fun $generated@@427 () T@T)
(declare-fun $generated@@435 (T@U) T@U)
(declare-fun $generated@@439 (T@U) T@U)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@461 (T@U) T@U)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@470 (T@U Int) T@U)
(declare-fun $generated@@479 (T@U) Int)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@507 (T@U) Int)
(declare-fun $generated@@508 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@573 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and (= (type $generated@@133) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@132 $generated@@133 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@77) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@133 $generated@@135) $generated@@60))) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60)))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@134 $generated@@135) $generated@@60))
)))
 :pattern ( ($generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@75 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@64)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@64) (= (type $generated@@144) $generated@@64)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@64)
 :pattern ( ($generated@@154 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (= (type $generated@@157) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@158) $generated@@64)) ($generated@@136 $generated@@157 ($generated@@154 $generated@@158))) ($generated@@155 $generated@@157))
 :pattern ( ($generated@@136 $generated@@157 ($generated@@154 $generated@@158)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@1 ($generated@@161 $generated@@165 $generated@@166)) 16)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@162 ($generated@@161 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@163 ($generated@@161 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@161 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (let (($generated@@174 ($generated@@163 (type $generated@@171))))
(= (type ($generated@@159 $generated@@171 $generated@@172 $generated@@173)) $generated@@174))
 :pattern ( ($generated@@159 $generated@@171 $generated@@172 $generated@@173))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (let (($generated@@179 (type $generated@@178)))
(let (($generated@@180 (type $generated@@176)))
(= (type ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178)) ($generated@@161 $generated@@180 $generated@@179))))
 :pattern ( ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@178))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 ($generated@@163 (type $generated@@181))))
 (=> (= (type $generated@@184) $generated@@185) (= ($generated@@159 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@182 $generated@@183) $generated@@184)))
 :weight 0
))) (and (and (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@159 ($generated@@164 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@159 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@159 ($generated@@164 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@159 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or true (= ($generated@@159 ($generated@@164 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@159 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ) (! (= (type ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207)) ($generated@@161 $generated@@77 $generated@@4))
 :pattern ( ($generated@@160 $generated@@204 $generated@@205 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (let (($generated@@214 ($generated@@67 (type $generated@@213))))
 (=> (and (and (and (and (= (type $generated@@208) $generated@@77) (= (type $generated@@209) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@210) ($generated@@66 $generated@@4))) (= (type $generated@@212) $generated@@77)) (= (type $generated@@213) ($generated@@66 $generated@@214))) (= ($generated@@0 ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (not (= $generated@@212 $generated@@208)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@209 $generated@@212) $generated@@210))) $generated@@211))))
 :pattern ( ($generated@@159 ($generated@@160 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= (type ($generated@@215 $generated@@217 $generated@@218)) $generated@@140)
 :pattern ( ($generated@@215 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (and (= (type $generated@@219) $generated@@64) (= (type $generated@@220) $generated@@64)) (= (type $generated@@221) $generated@@149)) (= (type $generated@@222) $generated@@149)) (= ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220))  (and ($generated@@216 $generated@@221 $generated@@219) ($generated@@216 $generated@@222 $generated@@220))))
 :pattern ( ($generated@@136 ($generated@@215 $generated@@221 $generated@@222) ($generated@@139 $generated@@219 $generated@@220)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@140) (= (type $generated@@224) $generated@@140)) (= ($generated@@146 $generated@@223 $generated@@224) (= $generated@@223 $generated@@224)))
 :pattern ( ($generated@@146 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (! (= (type ($generated@@225 $generated@@226)) $generated@@64)
 :pattern ( ($generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@227) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@228) $generated@@64)) (= ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)) (forall (($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@229) $generated@@149) ($generated@@0 ($generated@@81 $generated@@227 $generated@@229))) ($generated@@216 $generated@@229 $generated@@228))
 :pattern ( ($generated@@81 $generated@@227 $generated@@229))
))))
 :pattern ( ($generated@@136 $generated@@227 ($generated@@225 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@64)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@233) $generated@@64)) (= ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@149) ($generated@@0 ($generated@@81 $generated@@232 $generated@@234))) ($generated@@216 $generated@@234 $generated@@233))
 :pattern ( ($generated@@81 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@136 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 Int) ) (! (= ($generated@@235 $generated@@236) $generated@@236)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! (let (($generated@@239 (type $generated@@238)))
(= (type ($generated@@237 $generated@@238)) $generated@@239))
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= ($generated@@237 $generated@@240) $generated@@240)
 :pattern ( ($generated@@237 $generated@@240))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@243) $generated@@64) (= (type $generated@@244) $generated@@64)) (= (type $generated@@245) $generated@@149)) (= (type $generated@@246) $generated@@149)) (= (type $generated@@247) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@241 $generated@@247)) (= ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247)  (and ($generated@@242 $generated@@245 $generated@@243 $generated@@247) ($generated@@242 $generated@@246 $generated@@244 $generated@@247))))
 :pattern ( ($generated@@74 ($generated@@215 $generated@@245 $generated@@246) ($generated@@139 $generated@@243 $generated@@244) $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ) (! (= (type ($generated@@248 $generated@@249)) $generated@@68)
 :pattern ( ($generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ) (!  (=> (= (type $generated@@250) $generated@@140) (= ($generated@@138 $generated@@250) (= ($generated@@248 $generated@@250) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@140) ($generated@@138 $generated@@251)) (exists (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (and (and (= (type $generated@@252) $generated@@149) (= (type $generated@@253) $generated@@149)) (= $generated@@251 ($generated@@215 $generated@@252 $generated@@253)))
 :no-pattern (type $generated@@252)
 :no-pattern (type $generated@@253)
 :no-pattern ($generated $generated@@252)
 :no-pattern ($generated@@0 $generated@@252)
 :no-pattern ($generated $generated@@253)
 :no-pattern ($generated@@0 $generated@@253)
)))
 :pattern ( ($generated@@138 $generated@@251))
)))
(assert  (and (and (forall (($generated@@258 T@T) ) (= ($generated@@1 ($generated@@256 $generated@@258)) 17)) (forall (($generated@@259 T@T) ) (! (= ($generated@@257 ($generated@@256 $generated@@259)) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
))) (forall (($generated@@260 T@T) ) (! (= (type ($generated@@254 $generated@@260)) ($generated@@256 $generated@@260))
 :pattern ( ($generated@@254 $generated@@260))
))))
(assert (forall (($generated@@261 T@T) ) (! (= ($generated@@255 ($generated@@254 $generated@@261)) 0)
 :pattern ( ($generated@@254 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@149)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@64) (= (type $generated@@266) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266) ($generated@@74 $generated@@264 $generated@@265 $generated@@266)))
 :pattern ( ($generated@@242 ($generated@@262 $generated@@264) $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@267) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@268) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@269) $generated@@149)) (= (type $generated@@270) $generated@@64)) ($generated@@132 $generated@@267 $generated@@268)) ($generated@@242 $generated@@269 $generated@@270 $generated@@267)) ($generated@@242 $generated@@269 $generated@@270 $generated@@268))
 :pattern ( ($generated@@132 $generated@@267 $generated@@268) ($generated@@242 $generated@@269 $generated@@270 $generated@@267))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@271) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@272) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@274) $generated@@64)) ($generated@@132 $generated@@271 $generated@@272)) ($generated@@74 $generated@@273 $generated@@274 $generated@@271)) ($generated@@74 $generated@@273 $generated@@274 $generated@@272))
 :pattern ( ($generated@@132 $generated@@271 $generated@@272) ($generated@@74 $generated@@273 $generated@@274 $generated@@271))
)))
(assert (forall (($generated@@277 T@T) ) (! (= (type ($generated@@276 $generated@@277)) ($generated@@76 $generated@@277 $generated@@2))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 ($generated@@79 (type $generated@@278))))
 (=> (= (type $generated@@278) ($generated@@76 $generated@@279 $generated@@2)) (and (= (= ($generated@@275 $generated@@278) 0) (= $generated@@278 ($generated@@276 $generated@@279))) (=> (not (= ($generated@@275 $generated@@278) 0)) (exists (($generated@@280 T@U) ) (!  (and (= (type $generated@@280) $generated@@279) (< 0 ($generated ($generated@@81 $generated@@278 $generated@@280))))
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
))))))
 :pattern ( ($generated@@275 $generated@@278))
)))
(assert  (and (and (and (and (forall (($generated@@286 T@T) ($generated@@287 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@286 $generated@@287)) 18)) (forall (($generated@@288 T@T) ($generated@@289 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@288 $generated@@289)) $generated@@288)
 :pattern ( ($generated@@283 $generated@@288 $generated@@289))
))) (forall (($generated@@290 T@T) ($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@283 $generated@@290 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@283 $generated@@290 $generated@@291))
))) (forall (($generated@@292 T@U) ) (! (let (($generated@@293 ($generated@@284 (type $generated@@292))))
(= (type ($generated@@281 $generated@@292)) ($generated@@76 $generated@@293 $generated@@4)))
 :pattern ( ($generated@@281 $generated@@292))
))) (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (! (= (type ($generated@@282 $generated@@294 $generated@@295)) ($generated@@283 $generated@@294 $generated@@295))
 :pattern ( ($generated@@282 $generated@@294 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@T) ) (! (let (($generated@@298 (type $generated@@296)))
 (not ($generated@@0 ($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296))))
 :pattern ( (let (($generated@@298 (type $generated@@296)))
($generated@@81 ($generated@@281 ($generated@@282 $generated@@298 $generated@@297)) $generated@@296)))
)))
(assert  (and (and (and (and (forall (($generated@@304 T@T) ($generated@@305 T@T) ) (= ($generated@@1 ($generated@@301 $generated@@304 $generated@@305)) 19)) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@306 $generated@@307)) $generated@@306)
 :pattern ( ($generated@@301 $generated@@306 $generated@@307))
))) (forall (($generated@@308 T@T) ($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@301 $generated@@308 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@301 $generated@@308 $generated@@309))
))) (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@302 (type $generated@@310))))
(= (type ($generated@@299 $generated@@310)) ($generated@@76 $generated@@311 $generated@@4)))
 :pattern ( ($generated@@299 $generated@@310))
))) (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (! (= (type ($generated@@300 $generated@@312 $generated@@313)) ($generated@@301 $generated@@312 $generated@@313))
 :pattern ( ($generated@@300 $generated@@312 $generated@@313))
))))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@T) ) (! (let (($generated@@316 (type $generated@@314)))
 (not ($generated@@0 ($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314))))
 :pattern ( (let (($generated@@316 (type $generated@@314)))
($generated@@81 ($generated@@299 ($generated@@300 $generated@@316 $generated@@315)) $generated@@314)))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@79 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@76 $generated@@318 $generated@@2)) (= ($generated@@155 $generated@@317) (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@318) (and (<= 0 ($generated ($generated@@81 $generated@@317 $generated@@319))) (<= ($generated ($generated@@81 $generated@@317 $generated@@319)) ($generated@@275 $generated@@317))))
 :pattern ( ($generated@@81 $generated@@317 $generated@@319))
)))))
 :pattern ( ($generated@@155 $generated@@317))
)))
(assert (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@285 (type $generated@@320))))
(let (($generated@@322 ($generated@@284 (type $generated@@320))))
 (=> (= (type $generated@@320) ($generated@@283 $generated@@322 $generated@@321)) (or (= $generated@@320 ($generated@@282 $generated@@322 $generated@@321)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@320) $generated@@323)))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@281 $generated@@320))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@285 (type $generated@@325))))
(= (type ($generated@@324 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@285 (type $generated@@327))))
(let (($generated@@329 ($generated@@284 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@283 $generated@@329 $generated@@328)) (or (= $generated@@327 ($generated@@282 $generated@@329 $generated@@328)) (exists (($generated@@330 T@U) ) (!  (and (= (type $generated@@330) $generated@@328) ($generated@@0 ($generated@@81 ($generated@@324 $generated@@327) $generated@@330)))
 :no-pattern (type $generated@@330)
 :no-pattern ($generated $generated@@330)
 :no-pattern ($generated@@0 $generated@@330)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@303 (type $generated@@331))))
(let (($generated@@333 ($generated@@302 (type $generated@@331))))
 (=> (= (type $generated@@331) ($generated@@301 $generated@@333 $generated@@332)) (or (= $generated@@331 ($generated@@300 $generated@@333 $generated@@332)) (exists (($generated@@334 T@U) ) (!  (and (= (type $generated@@334) $generated@@333) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@331) $generated@@334)))
 :no-pattern (type $generated@@334)
 :no-pattern ($generated $generated@@334)
 :no-pattern ($generated@@0 $generated@@334)
))))))
 :pattern ( ($generated@@299 $generated@@331))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@303 (type $generated@@336))))
(= (type ($generated@@335 $generated@@336)) ($generated@@76 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@335 $generated@@336))
)))
(assert (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@303 (type $generated@@338))))
(let (($generated@@340 ($generated@@302 (type $generated@@338))))
 (=> (= (type $generated@@338) ($generated@@301 $generated@@340 $generated@@339)) (or (= $generated@@338 ($generated@@300 $generated@@340 $generated@@339)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@339) ($generated@@0 ($generated@@81 ($generated@@335 $generated@@338) $generated@@341)))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@335 $generated@@338))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@342) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@343) $generated@@64)) (= ($generated@@136 $generated@@342 ($generated@@154 $generated@@343)) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@342 $generated@@344)))) ($generated@@216 $generated@@344 $generated@@343))
 :pattern ( ($generated@@81 $generated@@342 $generated@@344))
))))
 :pattern ( ($generated@@136 $generated@@342 ($generated@@154 $generated@@343)))
)))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (= (type $generated@@345) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@346) $generated@@64)) (= (type $generated@@347) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@345 ($generated@@225 $generated@@346) $generated@@347) (forall (($generated@@348 T@U) ) (!  (=> (and (= (type $generated@@348) $generated@@149) ($generated@@0 ($generated@@81 $generated@@345 $generated@@348))) ($generated@@242 $generated@@348 $generated@@346 $generated@@347))
 :pattern ( ($generated@@81 $generated@@345 $generated@@348))
))))
 :pattern ( ($generated@@74 $generated@@345 ($generated@@225 $generated@@346) $generated@@347))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) ($generated@@76 $generated@@149 $generated@@4)) (= (type $generated@@350) $generated@@64)) (= (type $generated@@351) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@349 ($generated@@230 $generated@@350) $generated@@351) (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@149) ($generated@@0 ($generated@@81 $generated@@349 $generated@@352))) ($generated@@242 $generated@@352 $generated@@350 $generated@@351))
 :pattern ( ($generated@@81 $generated@@349 $generated@@352))
))))
 :pattern ( ($generated@@74 $generated@@349 ($generated@@230 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 (type $generated@@353)))
(= ($generated ($generated@@81 ($generated@@276 $generated@@354) $generated@@353)) 0))
 :pattern ( (let (($generated@@354 (type $generated@@353)))
($generated@@81 ($generated@@276 $generated@@354) $generated@@353)))
)))
(assert  (and (and (forall (($generated@@358 T@U) ) (! (= (type ($generated@@355 $generated@@358)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@355 $generated@@358))
)) (forall (($generated@@359 T@T) ($generated@@360 T@U) ) (! (= (type ($generated@@356 $generated@@359 $generated@@360)) $generated@@359)
 :pattern ( ($generated@@356 $generated@@359 $generated@@360))
))) (forall (($generated@@361 T@U) ) (! (let (($generated@@362 ($generated@@285 (type $generated@@361))))
(let (($generated@@363 ($generated@@284 (type $generated@@361))))
(= (type ($generated@@357 $generated@@361)) ($generated@@76 $generated@@363 $generated@@362))))
 :pattern ( ($generated@@357 $generated@@361))
))))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@365) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))  (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@364) ($generated@@147 ($generated@@356 $generated@@140 $generated@@365)))) (= ($generated@@81 ($generated@@357 $generated@@364) ($generated@@147 ($generated@@356 $generated@@140 $generated@@365))) ($generated@@148 ($generated@@356 $generated@@140 $generated@@365))))))
 :pattern ( ($generated@@81 ($generated@@355 $generated@@364) $generated@@365))
)))
(assert  (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@368)) ($generated@@76 $generated@@149 $generated@@4))
 :pattern ( ($generated@@366 $generated@@368))
)) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@303 (type $generated@@369))))
(let (($generated@@371 ($generated@@302 (type $generated@@369))))
(= (type ($generated@@367 $generated@@369)) ($generated@@76 $generated@@371 $generated@@370))))
 :pattern ( ($generated@@367 $generated@@369))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@373) $generated@@149)) (= ($generated@@0 ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@372) ($generated@@147 ($generated@@356 $generated@@140 $generated@@373)))) (= ($generated@@81 ($generated@@367 $generated@@372) ($generated@@147 ($generated@@356 $generated@@140 $generated@@373))) ($generated@@148 ($generated@@356 $generated@@140 $generated@@373))))))
 :pattern ( ($generated@@81 ($generated@@366 $generated@@372) $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ) (! (let (($generated@@376 (type $generated@@375)))
(let (($generated@@377 ($generated@@284 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@283 $generated@@377 $generated@@376)) (= ($generated@@0 ($generated@@81 ($generated@@324 $generated@@374) $generated@@375)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) (and ($generated@@0 ($generated@@81 ($generated@@281 $generated@@374) $generated@@378)) (= $generated@@375 ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@374) $generated@@378))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@374) $generated@@378))
))))))
 :pattern ( ($generated@@81 ($generated@@324 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (! (let (($generated@@381 (type $generated@@380)))
(let (($generated@@382 ($generated@@302 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@301 $generated@@382 $generated@@381)) (= ($generated@@0 ($generated@@81 ($generated@@335 $generated@@379) $generated@@380)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) (and ($generated@@0 ($generated@@81 ($generated@@299 $generated@@379) $generated@@383)) (= $generated@@380 ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@379) $generated@@383))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@379) $generated@@383))
))))))
 :pattern ( ($generated@@81 ($generated@@335 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (! (= (type ($generated@@384 $generated@@385 $generated@@386)) $generated@@64)
 :pattern ( ($generated@@384 $generated@@385 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (and (and (= (type $generated@@387) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@388) $generated@@64)) (= (type $generated@@389) $generated@@64)) (= (type $generated@@390) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@387) $generated@@391))) (and ($generated@@242 ($generated@@81 ($generated@@357 $generated@@387) $generated@@391) $generated@@389 $generated@@390) ($generated@@242 $generated@@391 $generated@@388 $generated@@390)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@387) $generated@@391))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@387) $generated@@391))
))))
 :pattern ( ($generated@@74 $generated@@387 ($generated@@384 $generated@@388 $generated@@389) $generated@@390))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@64)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@395) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@396) $generated@@64)) (= (type $generated@@397) $generated@@64)) (= (type $generated@@398) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@395) $generated@@399))) (and ($generated@@242 ($generated@@81 ($generated@@367 $generated@@395) $generated@@399) $generated@@397 $generated@@398) ($generated@@242 $generated@@399 $generated@@396 $generated@@398)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@395) $generated@@399))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@395) $generated@@399))
))))
 :pattern ( ($generated@@74 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@400) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@401) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@402) ($generated@@76 $generated@@77 $generated@@78))) (not (= $generated@@400 $generated@@402))) (and ($generated@@132 $generated@@400 $generated@@401) ($generated@@132 $generated@@401 $generated@@402))) ($generated@@132 $generated@@400 $generated@@402))
 :pattern ( ($generated@@132 $generated@@400 $generated@@401) ($generated@@132 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@404 T@T) ) (! (= (type ($generated@@403 $generated@@404)) ($generated@@76 $generated@@404 $generated@@4))
 :pattern ( ($generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@303 (type $generated@@405))))
(let (($generated@@407 ($generated@@302 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@301 $generated@@407 $generated@@406)) (= (= $generated@@405 ($generated@@300 $generated@@407 $generated@@406)) (= ($generated@@299 $generated@@405) ($generated@@403 $generated@@407))))))
 :pattern ( ($generated@@299 $generated@@405))
)))
(assert (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@303 (type $generated@@408))))
(let (($generated@@410 ($generated@@302 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@301 $generated@@410 $generated@@409)) (= (= $generated@@408 ($generated@@300 $generated@@410 $generated@@409)) (= ($generated@@335 $generated@@408) ($generated@@403 $generated@@409))))))
 :pattern ( ($generated@@335 $generated@@408))
)))
(assert (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@303 (type $generated@@411))))
(let (($generated@@413 ($generated@@302 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@301 $generated@@413 $generated@@412)) (= (= $generated@@411 ($generated@@300 $generated@@413 $generated@@412)) (= ($generated@@366 $generated@@411) ($generated@@403 $generated@@149))))))
 :pattern ( ($generated@@366 $generated@@411))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@285 (type $generated@@414))))
(let (($generated@@416 ($generated@@284 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@283 $generated@@416 $generated@@415)) (or (= $generated@@414 ($generated@@282 $generated@@416 $generated@@415)) (exists (($generated@@417 T@U) ($generated@@418 T@U) ) (!  (and (and (= (type $generated@@417) $generated@@149) (= (type $generated@@418) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@355 $generated@@414) ($generated@@262 ($generated@@215 $generated@@417 $generated@@418)))))
 :no-pattern (type $generated@@417)
 :no-pattern (type $generated@@418)
 :no-pattern ($generated $generated@@417)
 :no-pattern ($generated@@0 $generated@@417)
 :no-pattern ($generated $generated@@418)
 :no-pattern ($generated@@0 $generated@@418)
))))))
 :pattern ( ($generated@@355 $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@303 (type $generated@@419))))
(let (($generated@@421 ($generated@@302 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@301 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@300 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@149) (= (type $generated@@423) $generated@@149)) ($generated@@0 ($generated@@81 ($generated@@366 $generated@@419) ($generated@@262 ($generated@@215 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@366 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@149) ($generated@@216 $generated@@424 $generated@@46)) (and (= ($generated@@262 ($generated@@356 $generated@@2 $generated@@424)) $generated@@424) ($generated@@136 ($generated@@356 $generated@@2 $generated@@424) $generated@@46)))
 :pattern ( ($generated@@216 $generated@@424 $generated@@46))
)))
(assert (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@149) ($generated@@216 $generated@@425 $generated@@47)) (and (= ($generated@@262 ($generated@@356 $generated@@3 $generated@@425)) $generated@@425) ($generated@@136 ($generated@@356 $generated@@3 $generated@@425) $generated@@47)))
 :pattern ( ($generated@@216 $generated@@425 $generated@@47))
)))
(assert (forall (($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@426) $generated@@149) ($generated@@216 $generated@@426 $generated@@44)) (and (= ($generated@@262 ($generated@@356 $generated@@4 $generated@@426)) $generated@@426) ($generated@@136 ($generated@@356 $generated@@4 $generated@@426) $generated@@44)))
 :pattern ( ($generated@@216 $generated@@426 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@427) 20))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@149) ($generated@@216 $generated@@428 $generated@@45)) (and (= ($generated@@262 ($generated@@356 $generated@@427 $generated@@428)) $generated@@428) ($generated@@136 ($generated@@356 $generated@@427 $generated@@428) $generated@@45)))
 :pattern ( ($generated@@216 $generated@@428 $generated@@45))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (= (type $generated@@430) $generated@@64) (= ($generated@@216 ($generated@@262 $generated@@429) $generated@@430) ($generated@@136 $generated@@429 $generated@@430)))
 :pattern ( ($generated@@216 ($generated@@262 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@79 (type $generated@@431))))
 (=> (= (type $generated@@431) ($generated@@76 $generated@@432 $generated@@2)) (<= 0 ($generated@@275 $generated@@431))))
 :pattern ( ($generated@@275 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@257 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@256 $generated@@434)) (<= 0 ($generated@@255 $generated@@433))))
 :pattern ( ($generated@@255 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (= (type ($generated@@435 $generated@@436)) $generated@@64)
 :pattern ( ($generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@64) (= (type $generated@@438) $generated@@64)) (= ($generated@@435 ($generated@@384 $generated@@437 $generated@@438)) $generated@@437))
 :pattern ( ($generated@@384 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (= (type ($generated@@439 $generated@@440)) $generated@@64)
 :pattern ( ($generated@@439 $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@64) (= (type $generated@@442) $generated@@64)) (= ($generated@@439 ($generated@@384 $generated@@441 $generated@@442)) $generated@@442))
 :pattern ( ($generated@@384 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@64) (= (type $generated@@444) $generated@@64)) (= ($generated@@72 ($generated@@384 $generated@@443 $generated@@444)) $generated@@58))
 :pattern ( ($generated@@384 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@64)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@64) (= (type $generated@@448) $generated@@64)) (= ($generated@@445 ($generated@@392 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@392 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@64)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@64) (= (type $generated@@452) $generated@@64)) (= ($generated@@449 ($generated@@392 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@392 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@64) (= (type $generated@@454) $generated@@64)) (= ($generated@@72 ($generated@@392 $generated@@453 $generated@@454)) $generated@@59))
 :pattern ( ($generated@@392 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@149) (= (type $generated@@456) $generated@@149)) (= ($generated@@248 ($generated@@215 $generated@@455 $generated@@456)) $generated@@61))
 :pattern ( ($generated@@215 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@139 $generated@@459 $generated@@460)) $generated@@459))
 :pattern ( ($generated@@139 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (! (= (type ($generated@@461 $generated@@462)) $generated@@64)
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@64) (= (type $generated@@464) $generated@@64)) (= ($generated@@461 ($generated@@139 $generated@@463 $generated@@464)) $generated@@464))
 :pattern ( ($generated@@139 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@149) (= (type $generated@@466) $generated@@149)) (= ($generated@@147 ($generated@@215 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@215 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@149) (= (type $generated@@468) $generated@@149)) (= ($generated@@148 ($generated@@215 $generated@@467 $generated@@468)) $generated@@468))
 :pattern ( ($generated@@215 $generated@@467 $generated@@468))
)))
(assert  (and (forall (($generated@@471 T@U) ) (! (= (type ($generated@@469 $generated@@471)) $generated@@64)
 :pattern ( ($generated@@469 $generated@@471))
)) (forall (($generated@@472 T@U) ($generated@@473 Int) ) (! (let (($generated@@474 ($generated@@257 (type $generated@@472))))
(= (type ($generated@@470 $generated@@472 $generated@@473)) $generated@@474))
 :pattern ( ($generated@@470 $generated@@472 $generated@@473))
))))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (and (= (type $generated@@475) ($generated@@256 $generated@@149)) (= (type $generated@@476) $generated@@64)) (= (type $generated@@477) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@475 ($generated@@469 $generated@@476) $generated@@477) (forall (($generated@@478 Int) ) (!  (=> (and (<= 0 $generated@@478) (< $generated@@478 ($generated@@255 $generated@@475))) ($generated@@242 ($generated@@470 $generated@@475 $generated@@478) $generated@@476 $generated@@477))
 :pattern ( ($generated@@470 $generated@@475 $generated@@478))
))))
 :pattern ( ($generated@@74 $generated@@475 ($generated@@469 $generated@@476) $generated@@477))
)))
(assert (forall (($generated@@480 Int) ) (! (= ($generated@@479 ($generated@@75 $generated@@480)) $generated@@480)
 :pattern ( ($generated@@75 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@64)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@481 ($generated@@225 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@225 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@64) (= ($generated@@72 ($generated@@225 $generated@@484)) $generated@@54))
 :pattern ( ($generated@@225 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ) (! (= (type ($generated@@485 $generated@@486)) $generated@@64)
 :pattern ( ($generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (!  (=> (= (type $generated@@487) $generated@@64) (= ($generated@@485 ($generated@@230 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@230 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@64) (= ($generated@@72 ($generated@@230 $generated@@488)) $generated@@55))
 :pattern ( ($generated@@230 $generated@@488))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@64)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (!  (=> (= (type $generated@@491) $generated@@64) (= ($generated@@489 ($generated@@154 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@154 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@64) (= ($generated@@72 ($generated@@154 $generated@@492)) $generated@@56))
 :pattern ( ($generated@@154 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@469 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@469 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@469 $generated@@496)) $generated@@57))
 :pattern ( ($generated@@469 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (! (let (($generated@@498 (type $generated@@497)))
(= ($generated@@356 $generated@@498 ($generated@@262 $generated@@497)) $generated@@497))
 :pattern ( ($generated@@262 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (and (= (type $generated@@499) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@500) $generated@@64)) (= (type $generated@@501) $generated@@64)) (= ($generated@@136 $generated@@499 ($generated@@384 $generated@@500 $generated@@501)) (forall (($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@281 $generated@@499) $generated@@502))) (and ($generated@@216 ($generated@@81 ($generated@@357 $generated@@499) $generated@@502) $generated@@501) ($generated@@216 $generated@@502 $generated@@500)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@499) $generated@@502))
 :pattern ( ($generated@@81 ($generated@@281 $generated@@499) $generated@@502))
))))
 :pattern ( ($generated@@136 $generated@@499 ($generated@@384 $generated@@500 $generated@@501)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (= (type $generated@@503) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) $generated@@64)) (= ($generated@@136 $generated@@503 ($generated@@392 $generated@@504 $generated@@505)) (forall (($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@149) ($generated@@0 ($generated@@81 ($generated@@299 $generated@@503) $generated@@506))) (and ($generated@@216 ($generated@@81 ($generated@@367 $generated@@503) $generated@@506) $generated@@505) ($generated@@216 $generated@@506 $generated@@504)))
 :pattern ( ($generated@@81 ($generated@@367 $generated@@503) $generated@@506))
 :pattern ( ($generated@@81 ($generated@@299 $generated@@503) $generated@@506))
))))
 :pattern ( ($generated@@136 $generated@@503 ($generated@@392 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@149) (= (type $generated@@510) $generated@@149)) (< ($generated@@507 $generated@@509) ($generated@@508 ($generated@@215 $generated@@509 $generated@@510))))
 :pattern ( ($generated@@215 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@149) (= (type $generated@@512) $generated@@149)) (< ($generated@@507 $generated@@512) ($generated@@508 ($generated@@215 $generated@@511 $generated@@512))))
 :pattern ( ($generated@@215 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (and (= (type $generated@@513) $generated@@149) (= (type $generated@@514) $generated@@64)) (= (type $generated@@515) $generated@@64)) ($generated@@216 $generated@@513 ($generated@@384 $generated@@514 $generated@@515))) (and (= ($generated@@262 ($generated@@356 ($generated@@283 $generated@@149 $generated@@149) $generated@@513)) $generated@@513) ($generated@@136 ($generated@@356 ($generated@@283 $generated@@149 $generated@@149) $generated@@513) ($generated@@384 $generated@@514 $generated@@515))))
 :pattern ( ($generated@@216 $generated@@513 ($generated@@384 $generated@@514 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (and (= (type $generated@@516) $generated@@149) (= (type $generated@@517) $generated@@64)) (= (type $generated@@518) $generated@@64)) ($generated@@216 $generated@@516 ($generated@@392 $generated@@517 $generated@@518))) (and (= ($generated@@262 ($generated@@356 ($generated@@301 $generated@@149 $generated@@149) $generated@@516)) $generated@@516) ($generated@@136 ($generated@@356 ($generated@@301 $generated@@149 $generated@@149) $generated@@516) ($generated@@392 $generated@@517 $generated@@518))))
 :pattern ( ($generated@@216 $generated@@516 ($generated@@392 $generated@@517 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (and (= (type $generated@@519) $generated@@64) (= (type $generated@@520) $generated@@64)) (= (type $generated@@521) $generated@@149)) ($generated@@216 $generated@@521 ($generated@@139 $generated@@519 $generated@@520))) (and (= ($generated@@262 ($generated@@356 $generated@@140 $generated@@521)) $generated@@521) ($generated@@136 ($generated@@356 $generated@@140 $generated@@521) ($generated@@139 $generated@@519 $generated@@520))))
 :pattern ( ($generated@@216 $generated@@521 ($generated@@139 $generated@@519 $generated@@520)))
)))
(assert (forall (($generated@@522 T@U) ) (! (let (($generated@@523 (type $generated@@522)))
 (not ($generated@@0 ($generated@@81 ($generated@@403 $generated@@523) $generated@@522))))
 :pattern ( (let (($generated@@523 (type $generated@@522)))
($generated@@81 ($generated@@403 $generated@@523) $generated@@522)))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@69)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@64) (= (type $generated@@527) $generated@@64)) (and (= ($generated@@72 ($generated@@139 $generated@@526 $generated@@527)) $generated@@62) (= ($generated@@524 ($generated@@139 $generated@@526 $generated@@527)) $generated@@63)))
 :pattern ( ($generated@@139 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@140) (= ($generated@@507 ($generated@@262 $generated@@528)) ($generated@@508 $generated@@528)))
 :pattern ( ($generated@@507 ($generated@@262 $generated@@528)))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@149) ($generated@@216 $generated@@529 ($generated@@75 0))) (and (= ($generated@@262 ($generated@@356 $generated@@2 $generated@@529)) $generated@@529) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@529) ($generated@@75 0))))
 :pattern ( ($generated@@216 $generated@@529 ($generated@@75 0)))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@530) $generated@@149) (= (type $generated@@531) $generated@@64)) ($generated@@216 $generated@@530 ($generated@@225 $generated@@531))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@530)) $generated@@530) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@530) ($generated@@225 $generated@@531))))
 :pattern ( ($generated@@216 $generated@@530 ($generated@@225 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (= (type $generated@@532) $generated@@149) (= (type $generated@@533) $generated@@64)) ($generated@@216 $generated@@532 ($generated@@230 $generated@@533))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@532)) $generated@@532) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@4) $generated@@532) ($generated@@230 $generated@@533))))
 :pattern ( ($generated@@216 $generated@@532 ($generated@@230 $generated@@533)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (= (type $generated@@534) $generated@@149) (= (type $generated@@535) $generated@@64)) ($generated@@216 $generated@@534 ($generated@@154 $generated@@535))) (and (= ($generated@@262 ($generated@@356 ($generated@@76 $generated@@149 $generated@@2) $generated@@534)) $generated@@534) ($generated@@136 ($generated@@356 ($generated@@76 $generated@@149 $generated@@2) $generated@@534) ($generated@@154 $generated@@535))))
 :pattern ( ($generated@@216 $generated@@534 ($generated@@154 $generated@@535)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@536) $generated@@149) (= (type $generated@@537) $generated@@64)) ($generated@@216 $generated@@536 ($generated@@469 $generated@@537))) (and (= ($generated@@262 ($generated@@356 ($generated@@256 $generated@@149) $generated@@536)) $generated@@536) ($generated@@136 ($generated@@356 ($generated@@256 $generated@@149) $generated@@536) ($generated@@469 $generated@@537))))
 :pattern ( ($generated@@216 $generated@@536 ($generated@@469 $generated@@537)))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@538) ($generated@@76 $generated@@149 $generated@@2)) (= (type $generated@@539) $generated@@64)) (= (type $generated@@540) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@538 ($generated@@154 $generated@@539) $generated@@540) (forall (($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@149) (< 0 ($generated ($generated@@81 $generated@@538 $generated@@541)))) ($generated@@242 $generated@@541 $generated@@539 $generated@@540))
 :pattern ( ($generated@@81 $generated@@538 $generated@@541))
))))
 :pattern ( ($generated@@74 $generated@@538 ($generated@@154 $generated@@539) $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (and (= (type $generated@@542) $generated@@140) (= (type $generated@@543) $generated@@64)) (= (type $generated@@544) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@544) (and ($generated@@138 $generated@@542) (exists (($generated@@545 T@U) ) (!  (and (= (type $generated@@545) $generated@@64) ($generated@@74 $generated@@542 ($generated@@139 $generated@@543 $generated@@545) $generated@@544))
 :pattern ( ($generated@@74 $generated@@542 ($generated@@139 $generated@@543 $generated@@545) $generated@@544))
))))) ($generated@@242 ($generated@@147 $generated@@542) $generated@@543 $generated@@544))
 :pattern ( ($generated@@242 ($generated@@147 $generated@@542) $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@140) (= (type $generated@@547) $generated@@64)) (= (type $generated@@548) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@241 $generated@@548) (and ($generated@@138 $generated@@546) (exists (($generated@@549 T@U) ) (!  (and (= (type $generated@@549) $generated@@64) ($generated@@74 $generated@@546 ($generated@@139 $generated@@549 $generated@@547) $generated@@548))
 :pattern ( ($generated@@74 $generated@@546 ($generated@@139 $generated@@549 $generated@@547) $generated@@548))
))))) ($generated@@242 ($generated@@148 $generated@@546) $generated@@547 $generated@@548))
 :pattern ( ($generated@@242 ($generated@@148 $generated@@546) $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@149) (= (type $generated@@551) $generated@@149)) (= ($generated@@215 ($generated@@237 $generated@@550) ($generated@@237 $generated@@551)) ($generated@@237 ($generated@@215 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@215 ($generated@@237 $generated@@550) ($generated@@237 $generated@@551)))
)))
(assert (forall (($generated@@552 Int) ) (! (= ($generated@@262 ($generated@@8 ($generated@@235 $generated@@552))) ($generated@@237 ($generated@@262 ($generated@@8 $generated@@552))))
 :pattern ( ($generated@@262 ($generated@@8 ($generated@@235 $generated@@552))))
)))
(assert (forall (($generated@@553 T@U) ) (! (= ($generated@@262 ($generated@@237 $generated@@553)) ($generated@@237 ($generated@@262 $generated@@553)))
 :pattern ( ($generated@@262 ($generated@@237 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 ($generated@@257 (type $generated@@554))))
 (=> (and (= (type $generated@@554) ($generated@@256 $generated@@555)) (= ($generated@@255 $generated@@554) 0)) (= $generated@@554 ($generated@@254 $generated@@555))))
 :pattern ( ($generated@@255 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (! (let (($generated@@559 (type $generated@@557)))
 (=> (and (and (= (type $generated@@556) ($generated@@76 $generated@@559 $generated@@2)) (= (type $generated@@558) $generated@@2)) (<= 0 ($generated $generated@@558))) (= ($generated@@275 ($generated@@82 $generated@@556 $generated@@557 $generated@@558)) (+ (- ($generated@@275 $generated@@556) ($generated ($generated@@81 $generated@@556 $generated@@557))) ($generated $generated@@558)))))
 :pattern ( ($generated@@275 ($generated@@82 $generated@@556 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@561) $generated@@2)) ($generated@@74 $generated@@561 $generated@@46 $generated@@560))
 :pattern ( ($generated@@74 $generated@@561 $generated@@46 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@563) $generated@@3)) ($generated@@74 $generated@@563 $generated@@47 $generated@@562))
 :pattern ( ($generated@@74 $generated@@563 $generated@@47 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@565) $generated@@4)) ($generated@@74 $generated@@565 $generated@@44 $generated@@564))
 :pattern ( ($generated@@74 $generated@@565 $generated@@44 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@567) $generated@@427)) ($generated@@74 $generated@@567 $generated@@45 $generated@@566))
 :pattern ( ($generated@@74 $generated@@567 $generated@@45 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@568) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@569) $generated@@149)) ($generated@@74 $generated@@569 $generated@@48 $generated@@568))
 :pattern ( ($generated@@74 $generated@@569 $generated@@48 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) ($generated@@256 $generated@@149)) (= (type $generated@@571) $generated@@64)) (= ($generated@@136 $generated@@570 ($generated@@469 $generated@@571)) (forall (($generated@@572 Int) ) (!  (=> (and (<= 0 $generated@@572) (< $generated@@572 ($generated@@255 $generated@@570))) ($generated@@216 ($generated@@470 $generated@@570 $generated@@572) $generated@@571))
 :pattern ( ($generated@@470 $generated@@570 $generated@@572))
))))
 :pattern ( ($generated@@136 $generated@@570 ($generated@@469 $generated@@571)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 Int) ) (!  (=> (= (type $generated@@574) ($generated@@256 $generated@@149)) (=> (and (<= 0 $generated@@575) (< $generated@@575 ($generated@@255 $generated@@574))) (< ($generated@@508 ($generated@@356 $generated@@140 ($generated@@470 $generated@@574 $generated@@575))) ($generated@@573 $generated@@574))))
 :pattern ( ($generated@@508 ($generated@@356 $generated@@140 ($generated@@470 $generated@@574 $generated@@575))))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) ($generated@@283 $generated@@149 $generated@@149)) (= (type $generated@@577) $generated@@64)) (= (type $generated@@578) $generated@@64)) ($generated@@136 $generated@@576 ($generated@@384 $generated@@577 $generated@@578))) (and (and ($generated@@136 ($generated@@281 $generated@@576) ($generated@@225 $generated@@577)) ($generated@@136 ($generated@@324 $generated@@576) ($generated@@225 $generated@@578))) ($generated@@136 ($generated@@355 $generated@@576) ($generated@@225 ($generated@@139 $generated@@577 $generated@@578)))))
 :pattern ( ($generated@@136 $generated@@576 ($generated@@384 $generated@@577 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (and (= (type $generated@@579) ($generated@@301 $generated@@149 $generated@@149)) (= (type $generated@@580) $generated@@64)) (= (type $generated@@581) $generated@@64)) ($generated@@136 $generated@@579 ($generated@@392 $generated@@580 $generated@@581))) (and (and ($generated@@136 ($generated@@299 $generated@@579) ($generated@@230 $generated@@580)) ($generated@@136 ($generated@@335 $generated@@579) ($generated@@230 $generated@@581))) ($generated@@136 ($generated@@366 $generated@@579) ($generated@@230 ($generated@@139 $generated@@580 $generated@@581)))))
 :pattern ( ($generated@@136 $generated@@579 ($generated@@392 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@2) ($generated@@136 $generated@@582 $generated@@46))
 :pattern ( ($generated@@136 $generated@@582 $generated@@46))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@3) ($generated@@136 $generated@@583 $generated@@47))
 :pattern ( ($generated@@136 $generated@@583 $generated@@47))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@4) ($generated@@136 $generated@@584 $generated@@44))
 :pattern ( ($generated@@136 $generated@@584 $generated@@44))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (= (type $generated@@585) $generated@@427) ($generated@@136 $generated@@585 $generated@@45))
 :pattern ( ($generated@@136 $generated@@585 $generated@@45))
)))
(assert (forall (($generated@@586 T@U) ) (!  (=> (= (type $generated@@586) $generated@@149) ($generated@@136 $generated@@586 $generated@@48))
 :pattern ( ($generated@@136 $generated@@586 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@587 () Int)
(declare-fun $generated@@588 () T@U)
(declare-fun $generated@@589 () Int)
(declare-fun $generated@@590 () Int)
(declare-fun $generated@@591 () Bool)
(declare-fun $generated@@592 () T@U)
(declare-fun $generated@@593 () T@U)
(declare-fun $generated@@594 () T@U)
(declare-fun $generated@@595 () Int)
(declare-fun $generated@@596 () Int)
(declare-fun $generated@@597 (T@U) Bool)
(declare-fun $generated@@598 () Int)
(assert  (and (and (and (= (type $generated@@588) ($generated@@256 $generated@@149)) (= (type $generated@@592) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@593) $generated@@77)) (= (type $generated@@594) ($generated@@161 $generated@@77 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@599  (=> (and (< $generated@@587 ($generated@@255 $generated@@588)) (= $generated@@589 (- ($generated@@255 $generated@@588) $generated@@587))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (and (<= 0 $generated@@587) (< $generated@@587 ($generated@@255 $generated@@588)))) (=> (= $generated@@590 (+ $generated@@587 1)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0 $generated@@589) (= (- ($generated@@255 $generated@@588) $generated@@590) $generated@@589))) (=> (or (<= 0 $generated@@589) (= (- ($generated@@255 $generated@@588) $generated@@590) $generated@@589)) (=> (= (ControlFlow 0 5) (- 0 4)) (< (- ($generated@@255 $generated@@588) $generated@@590) $generated@@589)))))))))
(let (($generated@@600 true))
(let (($generated@@601  (=> $generated@@591 (and (=> (= (ControlFlow 0 8) 3) $generated@@600) (=> (= (ControlFlow 0 8) 5) $generated@@599)))))
(let (($generated@@602 true))
(let (($generated@@603  (and (=> (= (ControlFlow 0 9) 2) $generated@@602) (=> (= (ControlFlow 0 9) 8) $generated@@601))))
(let (($generated@@604 true))
(let (($generated@@605  (=> (and (and (and (not false) (<= 0 $generated@@587)) (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@77) (=> (and (not (= $generated@@606 $generated@@593)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@592 $generated@@606) $generated@@60))) (= ($generated@@81 $generated@@592 $generated@@606) ($generated@@81 $generated@@592 $generated@@606))))
 :pattern ( ($generated@@81 $generated@@592 $generated@@606))
))) (and (and ($generated@@132 $generated@@592 $generated@@592) (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (! (let (($generated@@609 ($generated@@67 (type $generated@@608))))
 (=> (and (and (= (type $generated@@607) $generated@@77) (= (type $generated@@608) ($generated@@66 $generated@@609))) (and (not (= $generated@@607 $generated@@593)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@592 $generated@@607) $generated@@60)))) (or (= ($generated@@83 ($generated@@81 $generated@@592 $generated@@607) $generated@@608) ($generated@@83 ($generated@@81 $generated@@592 $generated@@607) $generated@@608)) ($generated@@0 ($generated@@159 $generated@@594 $generated@@607 $generated@@608)))))
 :pattern ( ($generated@@83 ($generated@@81 $generated@@592 $generated@@607) $generated@@608))
))) (and (<= (- ($generated@@255 $generated@@588) $generated@@587) $generated@@595) (=> (= (- ($generated@@255 $generated@@588) $generated@@587) $generated@@595) true)))) (and (=> (= (ControlFlow 0 10) 1) $generated@@604) (=> (= (ControlFlow 0 10) 9) $generated@@603)))))
(let (($generated@@610  (=> (and (and (= $generated@@594 ($generated@@160 $generated@@593 $generated@@592 $generated@@60 false)) (= $generated@@596 ($generated@@235 0))) (and (= $generated@@595 (- ($generated@@255 $generated@@588) $generated@@596)) (= (ControlFlow 0 11) 10))) $generated@@605)))
(let (($generated@@611  (=> (and ($generated@@241 $generated@@592) ($generated@@597 $generated@@592)) (=> (and (and ($generated@@136 $generated@@588 ($generated@@469 $generated@@46)) ($generated@@74 $generated@@588 ($generated@@469 $generated@@46) $generated@@592)) (and (= 1 $generated@@598) (= (ControlFlow 0 12) 11))) $generated@@610))))
$generated@@611))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
