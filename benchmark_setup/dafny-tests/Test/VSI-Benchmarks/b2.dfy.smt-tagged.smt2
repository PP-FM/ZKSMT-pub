(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) Int)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (Int) T@U)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@U) Int)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@176 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 () T@T)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@190 (T@U T@U T@U) T@U)
(declare-fun $generated@@191 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@192 (T@T T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (Int) Int)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@311 (T@T) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@T T@T) T@U)
(declare-fun $generated@@340 (T@T T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@359 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@428 (T@U T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@447 (Int) T@U)
(declare-fun $generated@@453 (T@T) T@U)
(declare-fun $generated@@477 () T@T)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@521 (T@U Int) T@U)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@572 (T@U) Int)
(declare-fun $generated@@639 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@78 $generated@@60) 0))
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@71)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@44) $generated@@49))
(assert (= ($generated@@79 $generated@@45) $generated@@50))
(assert (= ($generated@@79 $generated@@46) $generated@@51))
(assert (= ($generated@@79 $generated@@47) $generated@@52))
(assert (= ($generated@@79 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@92 $generated@@93)) 11)) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@83 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@83 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@83 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@83 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@83 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 12)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@73 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@85)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@73 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ) (! (= (type ($generated@@82 $generated@@136)) $generated@@70)
 :pattern ( ($generated@@82 $generated@@136))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@2) (= (type $generated@@138) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
 :pattern ( ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
)))
(assert  (and (and (forall (($generated@@144 T@U) ) (! (= (type ($generated@@140 $generated@@144)) $generated@@70)
 :pattern ( ($generated@@140 $generated@@144))
)) (= (type $generated@@141) $generated@@84)) (forall (($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@145)) $generated@@70)
 :pattern ( ($generated@@142 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) $generated@@70) (= (type $generated@@147) $generated@@84)) (and (not (= $generated@@147 $generated@@141)) (= ($generated@@142 $generated@@147) ($generated@@140 $generated@@146)))) ($generated@@143 ($generated@@8 ($generated@@139 $generated@@147)) $generated@@46))
 :pattern ( ($generated@@139 $generated@@147) ($generated@@140 $generated@@146))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@149) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@150) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@148 $generated@@149 $generated@@150)) (forall (($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@84) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@149 $generated@@151) $generated@@60))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@150 $generated@@151) $generated@@60)))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@150 $generated@@151) $generated@@60))
)))
 :pattern ( ($generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@70) (= (type $generated@@153) $generated@@84)) (= (type $generated@@154) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@153 ($generated@@140 $generated@@152) $generated@@154)  (or (= $generated@@153 $generated@@141) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@154 $generated@@153) $generated@@60)))))
 :pattern ( ($generated@@81 $generated@@153 ($generated@@140 $generated@@152) $generated@@154))
)))
(assert (= (type $generated@@155) $generated@@70))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@84) (= (type $generated@@157) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@156 $generated@@155 $generated@@157)  (or (= $generated@@156 $generated@@141) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@157 $generated@@156) $generated@@60)))))
 :pattern ( ($generated@@81 $generated@@156 $generated@@155 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (and (= (type $generated@@159) $generated@@70) (= (type $generated@@160) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@161) $generated@@84)) (and (and ($generated@@158 $generated@@160) (and (not (= $generated@@161 $generated@@141)) (= ($generated@@142 $generated@@161) ($generated@@140 $generated@@159)))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@160 $generated@@161) $generated@@60)))) ($generated@@81 ($generated@@8 ($generated@@139 $generated@@161)) $generated@@46 $generated@@160))
 :pattern ( ($generated@@139 $generated@@161) ($generated@@90 ($generated@@88 $generated@@160 $generated@@161) $generated@@60) ($generated@@140 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> (= (type $generated@@162) $generated@@2) ($generated@@143 $generated@@162 ($generated@@82 0)))
 :pattern ( ($generated@@143 $generated@@162 ($generated@@82 0)))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@163 $generated@@164)) $generated@@70)
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@70) (= (type $generated@@166) $generated@@84)) (= (type $generated@@167) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@166 ($generated@@163 $generated@@165) $generated@@167) ($generated@@81 $generated@@166 ($generated@@140 $generated@@165) $generated@@167)))
 :pattern ( ($generated@@81 $generated@@166 ($generated@@163 $generated@@165) $generated@@167))
)))
(assert  (and (= ($generated@@1 $generated@@170) 14) (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@171 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@169 $generated@@171 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (and (= (type $generated@@173) $generated@@70) (= (type $generated@@174) $generated@@70)) (= (type $generated@@175) $generated@@170)) ($generated@@143 $generated@@175 ($generated@@169 $generated@@173 $generated@@174))) ($generated@@168 $generated@@175))
 :pattern ( ($generated@@168 $generated@@175) ($generated@@143 $generated@@175 ($generated@@169 $generated@@173 $generated@@174)))
)))
(assert  (and (and (= ($generated@@1 $generated@@179) 15) (forall (($generated@@180 T@U) ) (! (= (type ($generated@@177 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@177 $generated@@180))
))) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@178 $generated@@181)) $generated@@179)
 :pattern ( ($generated@@178 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@170) (= (type $generated@@183) $generated@@170)) true) (= ($generated@@176 $generated@@182 $generated@@183)  (and (= ($generated@@177 $generated@@182) ($generated@@177 $generated@@183)) (= ($generated@@178 $generated@@182) ($generated@@178 $generated@@183)))))
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@70)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@83 $generated@@179 $generated@@2)) (= (type $generated@@188) $generated@@70)) ($generated@@143 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@143 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert (forall (($generated@@189 T@U) ) (!  (=> (= (type $generated@@189) $generated@@84) (= ($generated@@143 $generated@@189 $generated@@155)  (or (= $generated@@189 $generated@@141) (= ($generated@@142 $generated@@189) $generated@@155))))
 :pattern ( ($generated@@143 $generated@@189 $generated@@155))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (= ($generated@@1 ($generated@@192 $generated@@196 $generated@@197)) 16)) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@193 ($generated@@192 $generated@@198 $generated@@199)) $generated@@198)
 :pattern ( ($generated@@192 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@194 ($generated@@192 $generated@@200 $generated@@201)) $generated@@201)
 :pattern ( ($generated@@192 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@194 (type $generated@@202))))
(= (type ($generated@@190 $generated@@202 $generated@@203 $generated@@204)) $generated@@205))
 :pattern ( ($generated@@190 $generated@@202 $generated@@203 $generated@@204))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 (type $generated@@209)))
(let (($generated@@211 (type $generated@@207)))
(= (type ($generated@@195 $generated@@206 $generated@@207 $generated@@208 $generated@@209)) ($generated@@192 $generated@@211 $generated@@210))))
 :pattern ( ($generated@@195 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@194 (type $generated@@212))))
 (=> (= (type $generated@@215) $generated@@216) (= ($generated@@190 ($generated@@195 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@213 $generated@@214) $generated@@215)))
 :weight 0
))) (and (and (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@190 ($generated@@195 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@190 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or (= $generated@@226 $generated@@228) (= ($generated@@190 ($generated@@195 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@190 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
))) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or true (= ($generated@@190 ($generated@@195 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@190 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
)))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ) (! (= (type ($generated@@191 $generated@@235 $generated@@236 $generated@@237 $generated@@238)) ($generated@@192 $generated@@84 $generated@@4))
 :pattern ( ($generated@@191 $generated@@235 $generated@@236 $generated@@237 $generated@@238))
))))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@73 (type $generated@@244))))
 (=> (and (and (and (and (= (type $generated@@239) $generated@@84) (= (type $generated@@240) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@241) ($generated@@72 $generated@@4))) (= (type $generated@@243) $generated@@84)) (= (type $generated@@244) ($generated@@72 $generated@@245))) (= ($generated@@0 ($generated@@190 ($generated@@191 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))  (=> (and (not (= $generated@@243 $generated@@239)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@240 $generated@@243) $generated@@241))) $generated@@242))))
 :pattern ( ($generated@@190 ($generated@@191 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))
)))
(assert (= (type $generated@@246) $generated@@70))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@84) (= (type $generated@@248) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@247 $generated@@246 $generated@@248) ($generated@@81 $generated@@247 $generated@@155 $generated@@248)))
 :pattern ( ($generated@@81 $generated@@247 $generated@@246 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@249 $generated@@251 $generated@@252)) $generated@@170)
 :pattern ( ($generated@@249 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (= (type $generated@@253) $generated@@70) (= (type $generated@@254) $generated@@70)) (= (type $generated@@255) $generated@@179)) (= (type $generated@@256) $generated@@179)) (= ($generated@@143 ($generated@@249 $generated@@255 $generated@@256) ($generated@@169 $generated@@253 $generated@@254))  (and ($generated@@250 $generated@@255 $generated@@253) ($generated@@250 $generated@@256 $generated@@254))))
 :pattern ( ($generated@@143 ($generated@@249 $generated@@255 $generated@@256) ($generated@@169 $generated@@253 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@170) (= (type $generated@@258) $generated@@170)) (= ($generated@@176 $generated@@257 $generated@@258) (= $generated@@257 $generated@@258)))
 :pattern ( ($generated@@176 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@70)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@83 $generated@@179 $generated@@4)) (= (type $generated@@262) $generated@@70)) (= ($generated@@143 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@179) ($generated@@0 ($generated@@88 $generated@@261 $generated@@263))) ($generated@@250 $generated@@263 $generated@@262))
 :pattern ( ($generated@@88 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@143 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@70)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@83 $generated@@179 $generated@@4)) (= (type $generated@@267) $generated@@70)) (= ($generated@@143 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@179) ($generated@@0 ($generated@@88 $generated@@266 $generated@@268))) ($generated@@250 $generated@@268 $generated@@267))
 :pattern ( ($generated@@88 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@143 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 Int) ) (! (= ($generated@@269 $generated@@270) $generated@@270)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 (type $generated@@272)))
(= (type ($generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= ($generated@@271 $generated@@274) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@70) (= (type $generated@@277) $generated@@70)) (= (type $generated@@278) $generated@@179)) (= (type $generated@@279) $generated@@179)) (= (type $generated@@280) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@158 $generated@@280)) (= ($generated@@81 ($generated@@249 $generated@@278 $generated@@279) ($generated@@169 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@81 ($generated@@249 $generated@@278 $generated@@279) ($generated@@169 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@74)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@170) (= ($generated@@168 $generated@@283) (= ($generated@@281 $generated@@283) $generated@@63)))
 :pattern ( ($generated@@168 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@170) ($generated@@168 $generated@@284)) (exists (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (and (and (= (type $generated@@285) $generated@@179) (= (type $generated@@286) $generated@@179)) (= $generated@@284 ($generated@@249 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@285)
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@168 $generated@@284))
)))
(assert  (and (and (forall (($generated@@291 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@291)) 17)) (forall (($generated@@292 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@289 $generated@@292))
))) (forall (($generated@@293 T@T) ) (! (= (type ($generated@@287 $generated@@293)) ($generated@@289 $generated@@293))
 :pattern ( ($generated@@287 $generated@@293))
))))
(assert (forall (($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@294)) 0)
 :pattern ( ($generated@@287 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@70) (= (type $generated@@296) $generated@@84)) (= ($generated@@143 $generated@@296 ($generated@@163 $generated@@295))  (and ($generated@@143 $generated@@296 ($generated@@140 $generated@@295)) (not (= $generated@@296 $generated@@141)))))
 :pattern ( ($generated@@143 $generated@@296 ($generated@@163 $generated@@295)))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@179)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@70) (= (type $generated@@301) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@275 ($generated@@297 $generated@@299) $generated@@300 $generated@@301) ($generated@@81 $generated@@299 $generated@@300 $generated@@301)))
 :pattern ( ($generated@@275 ($generated@@297 $generated@@299) $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@302) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@303) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@304) $generated@@179)) (= (type $generated@@305) $generated@@70)) ($generated@@148 $generated@@302 $generated@@303)) ($generated@@275 $generated@@304 $generated@@305 $generated@@302)) ($generated@@275 $generated@@304 $generated@@305 $generated@@303))
 :pattern ( ($generated@@148 $generated@@302 $generated@@303) ($generated@@275 $generated@@304 $generated@@305 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@306) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@307) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@309) $generated@@70)) ($generated@@148 $generated@@306 $generated@@307)) ($generated@@81 $generated@@308 $generated@@309 $generated@@306)) ($generated@@81 $generated@@308 $generated@@309 $generated@@307))
 :pattern ( ($generated@@148 $generated@@306 $generated@@307) ($generated@@81 $generated@@308 $generated@@309 $generated@@306))
)))
(assert (forall (($generated@@312 T@T) ) (! (= (type ($generated@@311 $generated@@312)) ($generated@@83 $generated@@312 $generated@@2))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@86 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@83 $generated@@314 $generated@@2)) (and (= (= ($generated@@310 $generated@@313) 0) (= $generated@@313 ($generated@@311 $generated@@314))) (=> (not (= ($generated@@310 $generated@@313) 0)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) (< 0 ($generated ($generated@@88 $generated@@313 $generated@@315))))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ) (! (= (type ($generated@@316 $generated@@317)) $generated@@75)
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@70) (and (= ($generated@@79 ($generated@@140 $generated@@318)) $generated@@61) (= ($generated@@316 ($generated@@140 $generated@@318)) $generated@@67)))
 :pattern ( ($generated@@140 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@70) (and (= ($generated@@79 ($generated@@163 $generated@@319)) $generated@@62) (= ($generated@@316 ($generated@@163 $generated@@319)) $generated@@67)))
 :pattern ( ($generated@@163 $generated@@319))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 18)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@83 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@88 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@88 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert  (and (and (and (and (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (= ($generated@@1 ($generated@@340 $generated@@343 $generated@@344)) 19)) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@341 ($generated@@340 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@340 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@342 ($generated@@340 $generated@@347 $generated@@348)) $generated@@348)
 :pattern ( ($generated@@340 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@341 (type $generated@@349))))
(= (type ($generated@@338 $generated@@349)) ($generated@@83 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@349))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= (type ($generated@@339 $generated@@351 $generated@@352)) ($generated@@340 $generated@@351 $generated@@352))
 :pattern ( ($generated@@339 $generated@@351 $generated@@352))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@T) ) (! (let (($generated@@355 (type $generated@@353)))
 (not ($generated@@0 ($generated@@88 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353))))
 :pattern ( (let (($generated@@355 (type $generated@@353)))
($generated@@88 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353)))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@86 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@83 $generated@@357 $generated@@2)) (= ($generated@@185 $generated@@356) (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@357) (and (<= 0 ($generated ($generated@@88 $generated@@356 $generated@@358))) (<= ($generated ($generated@@88 $generated@@356 $generated@@358)) ($generated@@310 $generated@@356))))
 :pattern ( ($generated@@88 $generated@@356 $generated@@358))
)))))
 :pattern ( ($generated@@185 $generated@@356))
)))
(assert (forall (($generated@@360 T@T) ($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@360 $generated@@361)) $generated@@360)
 :pattern ( ($generated@@359 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@179) ($generated@@250 $generated@@362 $generated@@155)) (and (= ($generated@@297 ($generated@@359 $generated@@84 $generated@@362)) $generated@@362) ($generated@@143 ($generated@@359 $generated@@84 $generated@@362) $generated@@155)))
 :pattern ( ($generated@@250 $generated@@362 $generated@@155))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@179) ($generated@@250 $generated@@363 $generated@@246)) (and (= ($generated@@297 ($generated@@359 $generated@@84 $generated@@363)) $generated@@363) ($generated@@143 ($generated@@359 $generated@@84 $generated@@363) $generated@@246)))
 :pattern ( ($generated@@250 $generated@@363 $generated@@246))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@70) (= (type $generated@@365) $generated@@84)) (= ($generated@@143 $generated@@365 ($generated@@140 $generated@@364))  (or (= $generated@@365 $generated@@141) (= ($generated@@142 $generated@@365) ($generated@@140 $generated@@364)))))
 :pattern ( ($generated@@143 $generated@@365 ($generated@@140 $generated@@364)))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@84) (= ($generated@@143 $generated@@366 $generated@@246)  (and ($generated@@143 $generated@@366 $generated@@155) (not (= $generated@@366 $generated@@141)))))
 :pattern ( ($generated@@143 $generated@@366 $generated@@246))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@324 (type $generated@@367))))
(let (($generated@@369 ($generated@@323 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@322 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@321 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@88 ($generated@@320 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@320 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@324 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@83 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@324 (type $generated@@374))))
(let (($generated@@376 ($generated@@323 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@322 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@321 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@88 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@342 (type $generated@@378))))
(let (($generated@@380 ($generated@@341 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@340 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@339 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@88 ($generated@@338 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@338 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@342 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@83 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@342 (type $generated@@385))))
(let (($generated@@387 ($generated@@341 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@340 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@339 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@88 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@83 $generated@@179 $generated@@2)) (= (type $generated@@390) $generated@@70)) (= ($generated@@143 $generated@@389 ($generated@@184 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@179) (< 0 ($generated ($generated@@88 $generated@@389 $generated@@391)))) ($generated@@250 $generated@@391 $generated@@390))
 :pattern ( ($generated@@88 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@143 $generated@@389 ($generated@@184 $generated@@390)))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@83 $generated@@179 $generated@@4)) (= (type $generated@@393) $generated@@70)) (= (type $generated@@394) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@392 ($generated@@259 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@179) ($generated@@0 ($generated@@88 $generated@@392 $generated@@395))) ($generated@@275 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@88 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@81 $generated@@392 ($generated@@259 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@83 $generated@@179 $generated@@4)) (= (type $generated@@397) $generated@@70)) (= (type $generated@@398) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@396 ($generated@@264 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@179) ($generated@@0 ($generated@@88 $generated@@396 $generated@@399))) ($generated@@275 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@88 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@81 $generated@@396 ($generated@@264 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(= ($generated ($generated@@88 ($generated@@311 $generated@@401) $generated@@400)) 0))
 :pattern ( (let (($generated@@401 (type $generated@@400)))
($generated@@88 ($generated@@311 $generated@@401) $generated@@400)))
)))
(assert  (and (forall (($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@404)) ($generated@@83 $generated@@179 $generated@@4))
 :pattern ( ($generated@@402 $generated@@404))
)) (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@324 (type $generated@@405))))
(let (($generated@@407 ($generated@@323 (type $generated@@405))))
(= (type ($generated@@403 $generated@@405)) ($generated@@83 $generated@@407 $generated@@406))))
 :pattern ( ($generated@@403 $generated@@405))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@322 $generated@@179 $generated@@179)) (= (type $generated@@409) $generated@@179)) (= ($generated@@0 ($generated@@88 ($generated@@402 $generated@@408) $generated@@409))  (and ($generated@@0 ($generated@@88 ($generated@@320 $generated@@408) ($generated@@177 ($generated@@359 $generated@@170 $generated@@409)))) (= ($generated@@88 ($generated@@403 $generated@@408) ($generated@@177 ($generated@@359 $generated@@170 $generated@@409))) ($generated@@178 ($generated@@359 $generated@@170 $generated@@409))))))
 :pattern ( ($generated@@88 ($generated@@402 $generated@@408) $generated@@409))
)))
(assert  (and (forall (($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@412)) ($generated@@83 $generated@@179 $generated@@4))
 :pattern ( ($generated@@410 $generated@@412))
)) (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@342 (type $generated@@413))))
(let (($generated@@415 ($generated@@341 (type $generated@@413))))
(= (type ($generated@@411 $generated@@413)) ($generated@@83 $generated@@415 $generated@@414))))
 :pattern ( ($generated@@411 $generated@@413))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@340 $generated@@179 $generated@@179)) (= (type $generated@@417) $generated@@179)) (= ($generated@@0 ($generated@@88 ($generated@@410 $generated@@416) $generated@@417))  (and ($generated@@0 ($generated@@88 ($generated@@338 $generated@@416) ($generated@@177 ($generated@@359 $generated@@170 $generated@@417)))) (= ($generated@@88 ($generated@@411 $generated@@416) ($generated@@177 ($generated@@359 $generated@@170 $generated@@417))) ($generated@@178 ($generated@@359 $generated@@170 $generated@@417))))))
 :pattern ( ($generated@@88 ($generated@@410 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@323 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@322 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@88 ($generated@@371 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@88 ($generated@@320 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@88 ($generated@@403 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@88 ($generated@@320 $generated@@418) $generated@@422))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@88 ($generated@@371 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(let (($generated@@426 ($generated@@341 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@340 $generated@@426 $generated@@425)) (= ($generated@@0 ($generated@@88 ($generated@@382 $generated@@423) $generated@@424)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) (and ($generated@@0 ($generated@@88 ($generated@@338 $generated@@423) $generated@@427)) (= $generated@@424 ($generated@@88 ($generated@@411 $generated@@423) $generated@@427))))
 :pattern ( ($generated@@88 ($generated@@338 $generated@@423) $generated@@427))
 :pattern ( ($generated@@88 ($generated@@411 $generated@@423) $generated@@427))
))))))
 :pattern ( ($generated@@88 ($generated@@382 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@429 $generated@@430)) $generated@@70)
 :pattern ( ($generated@@428 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (= (type $generated@@431) ($generated@@322 $generated@@179 $generated@@179)) (= (type $generated@@432) $generated@@70)) (= (type $generated@@433) $generated@@70)) (= (type $generated@@434) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@179) ($generated@@0 ($generated@@88 ($generated@@320 $generated@@431) $generated@@435))) (and ($generated@@275 ($generated@@88 ($generated@@403 $generated@@431) $generated@@435) $generated@@433 $generated@@434) ($generated@@275 $generated@@435 $generated@@432 $generated@@434)))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@431) $generated@@435))
 :pattern ( ($generated@@88 ($generated@@320 $generated@@431) $generated@@435))
))))
 :pattern ( ($generated@@81 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@70)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@340 $generated@@179 $generated@@179)) (= (type $generated@@440) $generated@@70)) (= (type $generated@@441) $generated@@70)) (= (type $generated@@442) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@179) ($generated@@0 ($generated@@88 ($generated@@338 $generated@@439) $generated@@443))) (and ($generated@@275 ($generated@@88 ($generated@@411 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@275 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@88 ($generated@@411 $generated@@439) $generated@@443))
 :pattern ( ($generated@@88 ($generated@@338 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@81 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@444) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@445) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@446) ($generated@@83 $generated@@84 $generated@@85))) (not (= $generated@@444 $generated@@446))) (and ($generated@@148 $generated@@444 $generated@@445) ($generated@@148 $generated@@445 $generated@@446))) ($generated@@148 $generated@@444 $generated@@446))
 :pattern ( ($generated@@148 $generated@@444 $generated@@445) ($generated@@148 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 Int) ) (! (= (type ($generated@@447 $generated@@448)) ($generated@@72 $generated@@179))
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 Int) ) (!  (=> (and (and (= (type $generated@@449) $generated@@70) (= (type $generated@@450) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@451) $generated@@84)) (=> (and (and (and ($generated@@158 $generated@@450) (and (not (= $generated@@451 $generated@@141)) (= ($generated@@142 $generated@@451) ($generated@@140 $generated@@449)))) (and (<= 0 $generated@@452) (< $generated@@452 ($generated@@139 $generated@@451)))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@450 $generated@@451) $generated@@60))) ($generated@@275 ($generated@@90 ($generated@@88 $generated@@450 $generated@@451) ($generated@@447 $generated@@452)) $generated@@449 $generated@@450)))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@450 $generated@@451) ($generated@@447 $generated@@452)) ($generated@@140 $generated@@449))
)))
(assert (forall (($generated@@454 T@T) ) (! (= (type ($generated@@453 $generated@@454)) ($generated@@83 $generated@@454 $generated@@4))
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@342 (type $generated@@455))))
(let (($generated@@457 ($generated@@341 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@340 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@339 $generated@@457 $generated@@456)) (= ($generated@@338 $generated@@455) ($generated@@453 $generated@@457))))))
 :pattern ( ($generated@@338 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@342 (type $generated@@458))))
(let (($generated@@460 ($generated@@341 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@340 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@339 $generated@@460 $generated@@459)) (= ($generated@@382 $generated@@458) ($generated@@453 $generated@@459))))))
 :pattern ( ($generated@@382 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@342 (type $generated@@461))))
(let (($generated@@463 ($generated@@341 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@340 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@339 $generated@@463 $generated@@462)) (= ($generated@@410 $generated@@461) ($generated@@453 $generated@@179))))))
 :pattern ( ($generated@@410 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@324 (type $generated@@464))))
(let (($generated@@466 ($generated@@323 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@322 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@321 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (and (and (= (type $generated@@467) $generated@@179) (= (type $generated@@468) $generated@@179)) ($generated@@0 ($generated@@88 ($generated@@402 $generated@@464) ($generated@@297 ($generated@@249 $generated@@467 $generated@@468)))))
 :no-pattern (type $generated@@467)
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
))))))
 :pattern ( ($generated@@402 $generated@@464))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@342 (type $generated@@469))))
(let (($generated@@471 ($generated@@341 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@340 $generated@@471 $generated@@470)) (or (= $generated@@469 ($generated@@339 $generated@@471 $generated@@470)) (exists (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (and (and (= (type $generated@@472) $generated@@179) (= (type $generated@@473) $generated@@179)) ($generated@@0 ($generated@@88 ($generated@@410 $generated@@469) ($generated@@297 ($generated@@249 $generated@@472 $generated@@473)))))
 :no-pattern (type $generated@@472)
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@410 $generated@@469))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@179) ($generated@@250 $generated@@474 $generated@@46)) (and (= ($generated@@297 ($generated@@359 $generated@@2 $generated@@474)) $generated@@474) ($generated@@143 ($generated@@359 $generated@@2 $generated@@474) $generated@@46)))
 :pattern ( ($generated@@250 $generated@@474 $generated@@46))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@179) ($generated@@250 $generated@@475 $generated@@47)) (and (= ($generated@@297 ($generated@@359 $generated@@3 $generated@@475)) $generated@@475) ($generated@@143 ($generated@@359 $generated@@3 $generated@@475) $generated@@47)))
 :pattern ( ($generated@@250 $generated@@475 $generated@@47))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@179) ($generated@@250 $generated@@476 $generated@@44)) (and (= ($generated@@297 ($generated@@359 $generated@@4 $generated@@476)) $generated@@476) ($generated@@143 ($generated@@359 $generated@@4 $generated@@476) $generated@@44)))
 :pattern ( ($generated@@250 $generated@@476 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@477) 20))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@179) ($generated@@250 $generated@@478 $generated@@45)) (and (= ($generated@@297 ($generated@@359 $generated@@477 $generated@@478)) $generated@@478) ($generated@@143 ($generated@@359 $generated@@477 $generated@@478) $generated@@45)))
 :pattern ( ($generated@@250 $generated@@478 $generated@@45))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@70) (= ($generated@@250 ($generated@@297 $generated@@479) $generated@@480) ($generated@@143 $generated@@479 $generated@@480)))
 :pattern ( ($generated@@250 ($generated@@297 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@84) (<= 0 ($generated@@139 $generated@@481)))
 :no-pattern (type $generated@@481)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@86 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@83 $generated@@483 $generated@@2)) (<= 0 ($generated@@310 $generated@@482))))
 :pattern ( ($generated@@310 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@290 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@289 $generated@@485)) (<= 0 ($generated@@288 $generated@@484))))
 :pattern ( ($generated@@288 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@70)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@70) (= (type $generated@@489) $generated@@70)) (= ($generated@@486 ($generated@@428 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@428 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@70)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@70) (= (type $generated@@493) $generated@@70)) (= ($generated@@490 ($generated@@428 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@428 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@70) (= (type $generated@@495) $generated@@70)) (= ($generated@@79 ($generated@@428 $generated@@494 $generated@@495)) $generated@@58))
 :pattern ( ($generated@@428 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@70)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@70) (= (type $generated@@499) $generated@@70)) (= ($generated@@496 ($generated@@436 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@436 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@70) (= (type $generated@@503) $generated@@70)) (= ($generated@@500 ($generated@@436 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@436 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@70) (= (type $generated@@505) $generated@@70)) (= ($generated@@79 ($generated@@436 $generated@@504 $generated@@505)) $generated@@59))
 :pattern ( ($generated@@436 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@179) (= (type $generated@@507) $generated@@179)) (= ($generated@@281 ($generated@@249 $generated@@506 $generated@@507)) $generated@@63))
 :pattern ( ($generated@@249 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@70)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@70) (= (type $generated@@511) $generated@@70)) (= ($generated@@508 ($generated@@169 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@169 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@70)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@70) (= (type $generated@@515) $generated@@70)) (= ($generated@@512 ($generated@@169 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@169 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@179) (= (type $generated@@517) $generated@@179)) (= ($generated@@177 ($generated@@249 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@249 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@179) (= (type $generated@@519) $generated@@179)) (= ($generated@@178 ($generated@@249 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@249 $generated@@518 $generated@@519))
)))
(assert  (and (forall (($generated@@522 T@U) ) (! (= (type ($generated@@520 $generated@@522)) $generated@@70)
 :pattern ( ($generated@@520 $generated@@522))
)) (forall (($generated@@523 T@U) ($generated@@524 Int) ) (! (let (($generated@@525 ($generated@@290 (type $generated@@523))))
(= (type ($generated@@521 $generated@@523 $generated@@524)) $generated@@525))
 :pattern ( ($generated@@521 $generated@@523 $generated@@524))
))))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@289 $generated@@179)) (= (type $generated@@527) $generated@@70)) (= (type $generated@@528) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@526 ($generated@@520 $generated@@527) $generated@@528) (forall (($generated@@529 Int) ) (!  (=> (and (<= 0 $generated@@529) (< $generated@@529 ($generated@@288 $generated@@526))) ($generated@@275 ($generated@@521 $generated@@526 $generated@@529) $generated@@527 $generated@@528))
 :pattern ( ($generated@@521 $generated@@526 $generated@@529))
))))
 :pattern ( ($generated@@81 $generated@@526 ($generated@@520 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@531 Int) ) (! (= ($generated@@530 ($generated@@82 $generated@@531)) $generated@@531)
 :pattern ( ($generated@@82 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@70)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@70) (= ($generated@@532 ($generated@@259 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@259 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@70) (= ($generated@@79 ($generated@@259 $generated@@535)) $generated@@54))
 :pattern ( ($generated@@259 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@70)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@70) (= ($generated@@536 ($generated@@264 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@264 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@70) (= ($generated@@79 ($generated@@264 $generated@@539)) $generated@@55))
 :pattern ( ($generated@@264 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@70)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@70) (= ($generated@@540 ($generated@@184 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@184 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@70) (= ($generated@@79 ($generated@@184 $generated@@543)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@70)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@70) (= ($generated@@544 ($generated@@520 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@520 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@70) (= ($generated@@79 ($generated@@520 $generated@@547)) $generated@@57))
 :pattern ( ($generated@@520 $generated@@547))
)))
(assert (forall (($generated@@548 Int) ) (! (= ($generated@@78 ($generated@@447 $generated@@548)) 1)
 :pattern ( ($generated@@447 $generated@@548))
)))
(assert (forall (($generated@@550 Int) ) (! (= ($generated@@549 ($generated@@447 $generated@@550)) $generated@@550)
 :pattern ( ($generated@@447 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@70)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@70) (= ($generated@@551 ($generated@@140 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@140 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@70)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@70) (= ($generated@@554 ($generated@@163 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@163 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
(= ($generated@@359 $generated@@558 ($generated@@297 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@297 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@322 $generated@@179 $generated@@179)) (= (type $generated@@560) $generated@@70)) (= (type $generated@@561) $generated@@70)) (= ($generated@@143 $generated@@559 ($generated@@428 $generated@@560 $generated@@561)) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@179) ($generated@@0 ($generated@@88 ($generated@@320 $generated@@559) $generated@@562))) (and ($generated@@250 ($generated@@88 ($generated@@403 $generated@@559) $generated@@562) $generated@@561) ($generated@@250 $generated@@562 $generated@@560)))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@559) $generated@@562))
 :pattern ( ($generated@@88 ($generated@@320 $generated@@559) $generated@@562))
))))
 :pattern ( ($generated@@143 $generated@@559 ($generated@@428 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@340 $generated@@179 $generated@@179)) (= (type $generated@@564) $generated@@70)) (= (type $generated@@565) $generated@@70)) (= ($generated@@143 $generated@@563 ($generated@@436 $generated@@564 $generated@@565)) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@179) ($generated@@0 ($generated@@88 ($generated@@338 $generated@@563) $generated@@566))) (and ($generated@@250 ($generated@@88 ($generated@@411 $generated@@563) $generated@@566) $generated@@565) ($generated@@250 $generated@@566 $generated@@564)))
 :pattern ( ($generated@@88 ($generated@@411 $generated@@563) $generated@@566))
 :pattern ( ($generated@@88 ($generated@@338 $generated@@563) $generated@@566))
))))
 :pattern ( ($generated@@143 $generated@@563 ($generated@@436 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 Int) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@70) (= (type $generated@@568) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@569) $generated@@84)) (and (and ($generated@@158 $generated@@568) (and (not (= $generated@@569 $generated@@141)) (= ($generated@@142 $generated@@569) ($generated@@140 $generated@@567)))) (and (<= 0 $generated@@570) (< $generated@@570 ($generated@@139 $generated@@569))))) ($generated@@250 ($generated@@90 ($generated@@88 $generated@@568 $generated@@569) ($generated@@447 $generated@@570)) $generated@@567))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@568 $generated@@569) ($generated@@447 $generated@@570)) ($generated@@140 $generated@@567))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@179) (= (type $generated@@574) $generated@@179)) (< ($generated@@571 $generated@@573) ($generated@@572 ($generated@@249 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@249 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@179) (= (type $generated@@576) $generated@@179)) (< ($generated@@571 $generated@@576) ($generated@@572 ($generated@@249 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@249 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@179) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) $generated@@70)) ($generated@@250 $generated@@577 ($generated@@428 $generated@@578 $generated@@579))) (and (= ($generated@@297 ($generated@@359 ($generated@@322 $generated@@179 $generated@@179) $generated@@577)) $generated@@577) ($generated@@143 ($generated@@359 ($generated@@322 $generated@@179 $generated@@179) $generated@@577) ($generated@@428 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@250 $generated@@577 ($generated@@428 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@179) (= (type $generated@@581) $generated@@70)) (= (type $generated@@582) $generated@@70)) ($generated@@250 $generated@@580 ($generated@@436 $generated@@581 $generated@@582))) (and (= ($generated@@297 ($generated@@359 ($generated@@340 $generated@@179 $generated@@179) $generated@@580)) $generated@@580) ($generated@@143 ($generated@@359 ($generated@@340 $generated@@179 $generated@@179) $generated@@580) ($generated@@436 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@250 $generated@@580 ($generated@@436 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@70) (= (type $generated@@584) $generated@@70)) (= (type $generated@@585) $generated@@179)) ($generated@@250 $generated@@585 ($generated@@169 $generated@@583 $generated@@584))) (and (= ($generated@@297 ($generated@@359 $generated@@170 $generated@@585)) $generated@@585) ($generated@@143 ($generated@@359 $generated@@170 $generated@@585) ($generated@@169 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@250 $generated@@585 ($generated@@169 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@586)))
 (not ($generated@@0 ($generated@@88 ($generated@@453 $generated@@587) $generated@@586))))
 :pattern ( (let (($generated@@587 (type $generated@@586)))
($generated@@88 ($generated@@453 $generated@@587) $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@70) (= (type $generated@@589) $generated@@70)) (and (= ($generated@@79 ($generated@@169 $generated@@588 $generated@@589)) $generated@@64) (= ($generated@@316 ($generated@@169 $generated@@588 $generated@@589)) $generated@@68)))
 :pattern ( ($generated@@169 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@170) (= ($generated@@571 ($generated@@297 $generated@@590)) ($generated@@572 $generated@@590)))
 :pattern ( ($generated@@571 ($generated@@297 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@179) ($generated@@250 $generated@@591 ($generated@@82 0))) (and (= ($generated@@297 ($generated@@359 $generated@@2 $generated@@591)) $generated@@591) ($generated@@143 ($generated@@359 ($generated@@83 $generated@@179 $generated@@4) $generated@@591) ($generated@@82 0))))
 :pattern ( ($generated@@250 $generated@@591 ($generated@@82 0)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@179) (= (type $generated@@593) $generated@@70)) ($generated@@250 $generated@@592 ($generated@@259 $generated@@593))) (and (= ($generated@@297 ($generated@@359 ($generated@@83 $generated@@179 $generated@@4) $generated@@592)) $generated@@592) ($generated@@143 ($generated@@359 ($generated@@83 $generated@@179 $generated@@4) $generated@@592) ($generated@@259 $generated@@593))))
 :pattern ( ($generated@@250 $generated@@592 ($generated@@259 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@594) $generated@@179) (= (type $generated@@595) $generated@@70)) ($generated@@250 $generated@@594 ($generated@@264 $generated@@595))) (and (= ($generated@@297 ($generated@@359 ($generated@@83 $generated@@179 $generated@@4) $generated@@594)) $generated@@594) ($generated@@143 ($generated@@359 ($generated@@83 $generated@@179 $generated@@4) $generated@@594) ($generated@@264 $generated@@595))))
 :pattern ( ($generated@@250 $generated@@594 ($generated@@264 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@179) (= (type $generated@@597) $generated@@70)) ($generated@@250 $generated@@596 ($generated@@184 $generated@@597))) (and (= ($generated@@297 ($generated@@359 ($generated@@83 $generated@@179 $generated@@2) $generated@@596)) $generated@@596) ($generated@@143 ($generated@@359 ($generated@@83 $generated@@179 $generated@@2) $generated@@596) ($generated@@184 $generated@@597))))
 :pattern ( ($generated@@250 $generated@@596 ($generated@@184 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@179) (= (type $generated@@599) $generated@@70)) ($generated@@250 $generated@@598 ($generated@@520 $generated@@599))) (and (= ($generated@@297 ($generated@@359 ($generated@@289 $generated@@179) $generated@@598)) $generated@@598) ($generated@@143 ($generated@@359 ($generated@@289 $generated@@179) $generated@@598) ($generated@@520 $generated@@599))))
 :pattern ( ($generated@@250 $generated@@598 ($generated@@520 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@600) $generated@@70) (= (type $generated@@601) $generated@@179)) ($generated@@250 $generated@@601 ($generated@@140 $generated@@600))) (and (= ($generated@@297 ($generated@@359 $generated@@84 $generated@@601)) $generated@@601) ($generated@@143 ($generated@@359 $generated@@84 $generated@@601) ($generated@@140 $generated@@600))))
 :pattern ( ($generated@@250 $generated@@601 ($generated@@140 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@602) $generated@@70) (= (type $generated@@603) $generated@@179)) ($generated@@250 $generated@@603 ($generated@@163 $generated@@602))) (and (= ($generated@@297 ($generated@@359 $generated@@84 $generated@@603)) $generated@@603) ($generated@@143 ($generated@@359 $generated@@84 $generated@@603) ($generated@@163 $generated@@602))))
 :pattern ( ($generated@@250 $generated@@603 ($generated@@163 $generated@@602)))
)))
(assert (= ($generated@@79 $generated@@155) $generated@@65))
(assert (= ($generated@@316 $generated@@155) $generated@@69))
(assert (= ($generated@@79 $generated@@246) $generated@@66))
(assert (= ($generated@@316 $generated@@246) $generated@@69))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@604) ($generated@@83 $generated@@179 $generated@@2)) (= (type $generated@@605) $generated@@70)) (= (type $generated@@606) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@604 ($generated@@184 $generated@@605) $generated@@606) (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@179) (< 0 ($generated ($generated@@88 $generated@@604 $generated@@607)))) ($generated@@275 $generated@@607 $generated@@605 $generated@@606))
 :pattern ( ($generated@@88 $generated@@604 $generated@@607))
))))
 :pattern ( ($generated@@81 $generated@@604 ($generated@@184 $generated@@605) $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@170) (= (type $generated@@609) $generated@@70)) (= (type $generated@@610) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@158 $generated@@610) (and ($generated@@168 $generated@@608) (exists (($generated@@611 T@U) ) (!  (and (= (type $generated@@611) $generated@@70) ($generated@@81 $generated@@608 ($generated@@169 $generated@@609 $generated@@611) $generated@@610))
 :pattern ( ($generated@@81 $generated@@608 ($generated@@169 $generated@@609 $generated@@611) $generated@@610))
))))) ($generated@@275 ($generated@@177 $generated@@608) $generated@@609 $generated@@610))
 :pattern ( ($generated@@275 ($generated@@177 $generated@@608) $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (and (= (type $generated@@612) $generated@@170) (= (type $generated@@613) $generated@@70)) (= (type $generated@@614) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@158 $generated@@614) (and ($generated@@168 $generated@@612) (exists (($generated@@615 T@U) ) (!  (and (= (type $generated@@615) $generated@@70) ($generated@@81 $generated@@612 ($generated@@169 $generated@@615 $generated@@613) $generated@@614))
 :pattern ( ($generated@@81 $generated@@612 ($generated@@169 $generated@@615 $generated@@613) $generated@@614))
))))) ($generated@@275 ($generated@@178 $generated@@612) $generated@@613 $generated@@614))
 :pattern ( ($generated@@275 ($generated@@178 $generated@@612) $generated@@613 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) $generated@@179) (= (type $generated@@617) $generated@@179)) (= ($generated@@249 ($generated@@271 $generated@@616) ($generated@@271 $generated@@617)) ($generated@@271 ($generated@@249 $generated@@616 $generated@@617))))
 :pattern ( ($generated@@249 ($generated@@271 $generated@@616) ($generated@@271 $generated@@617)))
)))
(assert (forall (($generated@@618 Int) ) (! (= ($generated@@297 ($generated@@8 ($generated@@269 $generated@@618))) ($generated@@271 ($generated@@297 ($generated@@8 $generated@@618))))
 :pattern ( ($generated@@297 ($generated@@8 ($generated@@269 $generated@@618))))
)))
(assert (forall (($generated@@619 T@U) ) (! (= ($generated@@297 ($generated@@271 $generated@@619)) ($generated@@271 ($generated@@297 $generated@@619)))
 :pattern ( ($generated@@297 ($generated@@271 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (! (let (($generated@@621 ($generated@@290 (type $generated@@620))))
 (=> (and (= (type $generated@@620) ($generated@@289 $generated@@621)) (= ($generated@@288 $generated@@620) 0)) (= $generated@@620 ($generated@@287 $generated@@621))))
 :pattern ( ($generated@@288 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (! (let (($generated@@625 (type $generated@@623)))
 (=> (and (and (= (type $generated@@622) ($generated@@83 $generated@@625 $generated@@2)) (= (type $generated@@624) $generated@@2)) (<= 0 ($generated $generated@@624))) (= ($generated@@310 ($generated@@89 $generated@@622 $generated@@623 $generated@@624)) (+ (- ($generated@@310 $generated@@622) ($generated ($generated@@88 $generated@@622 $generated@@623))) ($generated $generated@@624)))))
 :pattern ( ($generated@@310 ($generated@@89 $generated@@622 $generated@@623 $generated@@624)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@627) $generated@@2)) ($generated@@81 $generated@@627 $generated@@46 $generated@@626))
 :pattern ( ($generated@@81 $generated@@627 $generated@@46 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@629) $generated@@3)) ($generated@@81 $generated@@629 $generated@@47 $generated@@628))
 :pattern ( ($generated@@81 $generated@@629 $generated@@47 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@631) $generated@@4)) ($generated@@81 $generated@@631 $generated@@44 $generated@@630))
 :pattern ( ($generated@@81 $generated@@631 $generated@@44 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@633) $generated@@477)) ($generated@@81 $generated@@633 $generated@@45 $generated@@632))
 :pattern ( ($generated@@81 $generated@@633 $generated@@45 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (= (type $generated@@634) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@635) $generated@@179)) ($generated@@81 $generated@@635 $generated@@48 $generated@@634))
 :pattern ( ($generated@@81 $generated@@635 $generated@@48 $generated@@634))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@636) ($generated@@289 $generated@@179)) (= (type $generated@@637) $generated@@70)) (= ($generated@@143 $generated@@636 ($generated@@520 $generated@@637)) (forall (($generated@@638 Int) ) (!  (=> (and (<= 0 $generated@@638) (< $generated@@638 ($generated@@288 $generated@@636))) ($generated@@250 ($generated@@521 $generated@@636 $generated@@638) $generated@@637))
 :pattern ( ($generated@@521 $generated@@636 $generated@@638))
))))
 :pattern ( ($generated@@143 $generated@@636 ($generated@@520 $generated@@637)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 Int) ) (!  (=> (= (type $generated@@640) ($generated@@289 $generated@@179)) (=> (and (<= 0 $generated@@641) (< $generated@@641 ($generated@@288 $generated@@640))) (< ($generated@@572 ($generated@@359 $generated@@170 ($generated@@521 $generated@@640 $generated@@641))) ($generated@@639 $generated@@640))))
 :pattern ( ($generated@@572 ($generated@@359 $generated@@170 ($generated@@521 $generated@@640 $generated@@641))))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (and (= (type $generated@@642) ($generated@@322 $generated@@179 $generated@@179)) (= (type $generated@@643) $generated@@70)) (= (type $generated@@644) $generated@@70)) ($generated@@143 $generated@@642 ($generated@@428 $generated@@643 $generated@@644))) (and (and ($generated@@143 ($generated@@320 $generated@@642) ($generated@@259 $generated@@643)) ($generated@@143 ($generated@@371 $generated@@642) ($generated@@259 $generated@@644))) ($generated@@143 ($generated@@402 $generated@@642) ($generated@@259 ($generated@@169 $generated@@643 $generated@@644)))))
 :pattern ( ($generated@@143 $generated@@642 ($generated@@428 $generated@@643 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (and (= (type $generated@@645) ($generated@@340 $generated@@179 $generated@@179)) (= (type $generated@@646) $generated@@70)) (= (type $generated@@647) $generated@@70)) ($generated@@143 $generated@@645 ($generated@@436 $generated@@646 $generated@@647))) (and (and ($generated@@143 ($generated@@338 $generated@@645) ($generated@@264 $generated@@646)) ($generated@@143 ($generated@@382 $generated@@645) ($generated@@264 $generated@@647))) ($generated@@143 ($generated@@410 $generated@@645) ($generated@@264 ($generated@@169 $generated@@646 $generated@@647)))))
 :pattern ( ($generated@@143 $generated@@645 ($generated@@436 $generated@@646 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ) (!  (=> (= (type $generated@@648) $generated@@2) ($generated@@143 $generated@@648 $generated@@46))
 :pattern ( ($generated@@143 $generated@@648 $generated@@46))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@3) ($generated@@143 $generated@@649 $generated@@47))
 :pattern ( ($generated@@143 $generated@@649 $generated@@47))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@4) ($generated@@143 $generated@@650 $generated@@44))
 :pattern ( ($generated@@143 $generated@@650 $generated@@44))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@477) ($generated@@143 $generated@@651 $generated@@45))
 :pattern ( ($generated@@143 $generated@@651 $generated@@45))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@179) ($generated@@143 $generated@@652 $generated@@48))
 :pattern ( ($generated@@143 $generated@@652 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@653 () Int)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () Int)
(declare-fun $generated@@657 () Int)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 (T@U) Bool)
(declare-fun $generated@@660 () Int)
(declare-fun $generated@@661 () Int)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () Int)
(assert  (and (and (and (and (= (type $generated@@654) $generated@@84) (= (type $generated@@655) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@658) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@662) ($generated@@192 $generated@@84 $generated@@4))) (= (type $generated@@663) $generated@@84)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 26) (let (($generated@@665 true))
(let (($generated@@666  (=> (and (=> (and (<= ($generated@@269 0) $generated@@653) (< $generated@@653 ($generated@@139 $generated@@654))) (not (= ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@655 $generated@@654) ($generated@@447 $generated@@653)))) $generated@@656))) (= (ControlFlow 0 7) 2)) $generated@@665)))
(let (($generated@@667  (=> (<= ($generated@@269 0) $generated@@653) (and (=> (= (ControlFlow 0 3) (- 0 6)) (not (= $generated@@654 $generated@@141))) (=> (not (= $generated@@654 $generated@@141)) (=> (< $generated@@653 ($generated@@139 $generated@@654)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (not (= $generated@@654 $generated@@141))) (=> (not (= $generated@@654 $generated@@141)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= 0 $generated@@653) (< $generated@@653 ($generated@@139 $generated@@654)))) (=> (and (<= 0 $generated@@653) (< $generated@@653 ($generated@@139 $generated@@654))) (=> (and (not (= ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@655 $generated@@654) ($generated@@447 $generated@@653)))) $generated@@656)) (= (ControlFlow 0 3) 2)) $generated@@665)))))))))))
(let (($generated@@668  (=> (= $generated@@657 ($generated@@269 (- 0 1))) (and (=> (= (ControlFlow 0 8) 3) $generated@@667) (=> (= (ControlFlow 0 8) 7) $generated@@666)))))
(let (($generated@@669 true))
(let (($generated@@670  (=> (=> (<= ($generated@@269 0) $generated@@657) (= ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@655 $generated@@654) ($generated@@447 $generated@@657)))) $generated@@656)) (and (=> (= (ControlFlow 0 12) 8) $generated@@668) (=> (= (ControlFlow 0 12) 1) $generated@@669)))))
(let (($generated@@671  (=> (<= ($generated@@269 0) $generated@@657) (and (=> (= (ControlFlow 0 9) (- 0 11)) (not (= $generated@@654 $generated@@141))) (=> (not (= $generated@@654 $generated@@141)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (and (<= 0 $generated@@657) (< $generated@@657 ($generated@@139 $generated@@654)))) (=> (and (<= 0 $generated@@657) (< $generated@@657 ($generated@@139 $generated@@654))) (=> (= ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@655 $generated@@654) ($generated@@447 $generated@@657)))) $generated@@656) (and (=> (= (ControlFlow 0 9) 8) $generated@@668) (=> (= (ControlFlow 0 9) 1) $generated@@669))))))))))
(let (($generated@@672  (=> (and (<= ($generated@@269 (- 0 1)) $generated@@657) (< $generated@@657 ($generated@@139 $generated@@654))) (and (=> (= (ControlFlow 0 13) 9) $generated@@671) (=> (= (ControlFlow 0 13) 12) $generated@@670)))))
(let (($generated@@673  (=> (and (< $generated@@657 ($generated@@269 (- 0 1))) (= (ControlFlow 0 16) 13)) $generated@@672)))
(let (($generated@@674  (=> (<= ($generated@@269 (- 0 1)) $generated@@657) (and (=> (= (ControlFlow 0 14) (- 0 15)) (not (= $generated@@654 $generated@@141))) (=> (not (= $generated@@654 $generated@@141)) (=> (= (ControlFlow 0 14) 13) $generated@@672))))))
(let (($generated@@675  (=> (forall (($generated@@676 Int) ($generated@@677 Int) ) (!  (=> true (=> (and (and (<= ($generated@@269 0) $generated@@676) (< $generated@@676 $generated@@677)) (< $generated@@677 ($generated@@139 $generated@@654))) (<= ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@658 $generated@@654) ($generated@@447 $generated@@676)))) ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@658 $generated@@654) ($generated@@447 $generated@@677)))))))
 :pattern ( ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@658 $generated@@654) ($generated@@447 $generated@@677))) ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@658 $generated@@654) ($generated@@447 $generated@@676))))
)) (=> (and (and ($generated@@158 $generated@@655) ($generated@@659 $generated@@655)) (and (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@84) (=> (and (not (= $generated@@678 $generated@@141)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@658 $generated@@678) $generated@@60))) (= ($generated@@88 $generated@@655 $generated@@678) ($generated@@88 $generated@@658 $generated@@678))))
 :pattern ( ($generated@@88 $generated@@655 $generated@@678))
)) ($generated@@148 $generated@@658 $generated@@655))) (and (=> (= (ControlFlow 0 17) 14) $generated@@674) (=> (= (ControlFlow 0 17) 16) $generated@@673))))))
(let (($generated@@679  (=> (and (=> (and (and (<= ($generated@@269 0) $generated@@660) (< $generated@@660 $generated@@661)) (< $generated@@661 ($generated@@139 $generated@@654))) (<= ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@658 $generated@@654) ($generated@@447 $generated@@660)))) ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@658 $generated@@654) ($generated@@447 $generated@@661)))))) (= (ControlFlow 0 24) 17)) $generated@@675)))
(let (($generated@@680  (=> (and (<= ($generated@@269 0) $generated@@660) (< $generated@@660 $generated@@661)) (and (=> (= (ControlFlow 0 18) (- 0 23)) (not (= $generated@@654 $generated@@141))) (=> (not (= $generated@@654 $generated@@141)) (=> (< $generated@@661 ($generated@@139 $generated@@654)) (and (=> (= (ControlFlow 0 18) (- 0 22)) (not (= $generated@@654 $generated@@141))) (=> (not (= $generated@@654 $generated@@141)) (and (=> (= (ControlFlow 0 18) (- 0 21)) (and (<= 0 $generated@@660) (< $generated@@660 ($generated@@139 $generated@@654)))) (=> (and (<= 0 $generated@@660) (< $generated@@660 ($generated@@139 $generated@@654))) (and (=> (= (ControlFlow 0 18) (- 0 20)) (not (= $generated@@654 $generated@@141))) (=> (not (= $generated@@654 $generated@@141)) (and (=> (= (ControlFlow 0 18) (- 0 19)) (and (<= 0 $generated@@661) (< $generated@@661 ($generated@@139 $generated@@654)))) (=> (and (<= 0 $generated@@661) (< $generated@@661 ($generated@@139 $generated@@654))) (=> (and (<= ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@658 $generated@@654) ($generated@@447 $generated@@660)))) ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@658 $generated@@654) ($generated@@447 $generated@@661))))) (= (ControlFlow 0 18) 17)) $generated@@675)))))))))))))))
(let (($generated@@681  (=> (= $generated@@662 ($generated@@191 $generated@@141 $generated@@658 $generated@@60 false)) (and (=> (= (ControlFlow 0 25) 18) $generated@@680) (=> (= (ControlFlow 0 25) 24) $generated@@679)))))
(let (($generated@@682  (=> (and (and (and ($generated@@158 $generated@@658) ($generated@@659 $generated@@658)) (and (not (= $generated@@663 $generated@@141)) (and ($generated@@143 $generated@@663 $generated@@246) ($generated@@81 $generated@@663 $generated@@246 $generated@@658)))) (and (and ($generated@@143 $generated@@654 ($generated@@163 $generated@@46)) ($generated@@81 $generated@@654 ($generated@@163 $generated@@46) $generated@@658)) (and (= 1 $generated@@664) (= (ControlFlow 0 26) 25)))) $generated@@681)))
$generated@@682))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) Int)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (Int) T@U)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@U) Int)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@176 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 () T@T)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@190 (T@U T@U T@U) T@U)
(declare-fun $generated@@191 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@192 (T@T T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (Int) Int)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@311 (T@T) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@T T@T) T@U)
(declare-fun $generated@@340 (T@T T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@359 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@428 (T@U T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@444 (Int Int) Int)
(declare-fun $generated@@450 (Int) T@U)
(declare-fun $generated@@456 (T@T) T@U)
(declare-fun $generated@@480 () T@T)
(declare-fun $generated@@489 (T@U) T@U)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@524 (T@U Int) T@U)
(declare-fun $generated@@533 (T@U) Int)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@543 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@574 (T@U) Int)
(declare-fun $generated@@575 (T@U) Int)
(declare-fun $generated@@642 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@78 $generated@@60) 0))
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@71)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@44) $generated@@49))
(assert (= ($generated@@79 $generated@@45) $generated@@50))
(assert (= ($generated@@79 $generated@@46) $generated@@51))
(assert (= ($generated@@79 $generated@@47) $generated@@52))
(assert (= ($generated@@79 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@92 $generated@@93)) 11)) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@83 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@83 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@83 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@83 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@83 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 12)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@73 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@85)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@73 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ) (! (= (type ($generated@@82 $generated@@136)) $generated@@70)
 :pattern ( ($generated@@82 $generated@@136))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@2) (= (type $generated@@138) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
 :pattern ( ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
)))
(assert  (and (and (forall (($generated@@144 T@U) ) (! (= (type ($generated@@140 $generated@@144)) $generated@@70)
 :pattern ( ($generated@@140 $generated@@144))
)) (= (type $generated@@141) $generated@@84)) (forall (($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@145)) $generated@@70)
 :pattern ( ($generated@@142 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) $generated@@70) (= (type $generated@@147) $generated@@84)) (and (not (= $generated@@147 $generated@@141)) (= ($generated@@142 $generated@@147) ($generated@@140 $generated@@146)))) ($generated@@143 ($generated@@8 ($generated@@139 $generated@@147)) $generated@@46))
 :pattern ( ($generated@@139 $generated@@147) ($generated@@140 $generated@@146))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@149) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@150) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@148 $generated@@149 $generated@@150)) (forall (($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@84) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@149 $generated@@151) $generated@@60))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@150 $generated@@151) $generated@@60)))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@150 $generated@@151) $generated@@60))
)))
 :pattern ( ($generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@70) (= (type $generated@@153) $generated@@84)) (= (type $generated@@154) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@153 ($generated@@140 $generated@@152) $generated@@154)  (or (= $generated@@153 $generated@@141) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@154 $generated@@153) $generated@@60)))))
 :pattern ( ($generated@@81 $generated@@153 ($generated@@140 $generated@@152) $generated@@154))
)))
(assert (= (type $generated@@155) $generated@@70))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@84) (= (type $generated@@157) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@156 $generated@@155 $generated@@157)  (or (= $generated@@156 $generated@@141) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@157 $generated@@156) $generated@@60)))))
 :pattern ( ($generated@@81 $generated@@156 $generated@@155 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (and (= (type $generated@@159) $generated@@70) (= (type $generated@@160) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@161) $generated@@84)) (and (and ($generated@@158 $generated@@160) (and (not (= $generated@@161 $generated@@141)) (= ($generated@@142 $generated@@161) ($generated@@140 $generated@@159)))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@160 $generated@@161) $generated@@60)))) ($generated@@81 ($generated@@8 ($generated@@139 $generated@@161)) $generated@@46 $generated@@160))
 :pattern ( ($generated@@139 $generated@@161) ($generated@@90 ($generated@@88 $generated@@160 $generated@@161) $generated@@60) ($generated@@140 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> (= (type $generated@@162) $generated@@2) ($generated@@143 $generated@@162 ($generated@@82 0)))
 :pattern ( ($generated@@143 $generated@@162 ($generated@@82 0)))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@163 $generated@@164)) $generated@@70)
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@70) (= (type $generated@@166) $generated@@84)) (= (type $generated@@167) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@166 ($generated@@163 $generated@@165) $generated@@167) ($generated@@81 $generated@@166 ($generated@@140 $generated@@165) $generated@@167)))
 :pattern ( ($generated@@81 $generated@@166 ($generated@@163 $generated@@165) $generated@@167))
)))
(assert  (and (= ($generated@@1 $generated@@170) 14) (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@171 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@169 $generated@@171 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (and (= (type $generated@@173) $generated@@70) (= (type $generated@@174) $generated@@70)) (= (type $generated@@175) $generated@@170)) ($generated@@143 $generated@@175 ($generated@@169 $generated@@173 $generated@@174))) ($generated@@168 $generated@@175))
 :pattern ( ($generated@@168 $generated@@175) ($generated@@143 $generated@@175 ($generated@@169 $generated@@173 $generated@@174)))
)))
(assert  (and (and (= ($generated@@1 $generated@@179) 15) (forall (($generated@@180 T@U) ) (! (= (type ($generated@@177 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@177 $generated@@180))
))) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@178 $generated@@181)) $generated@@179)
 :pattern ( ($generated@@178 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@170) (= (type $generated@@183) $generated@@170)) true) (= ($generated@@176 $generated@@182 $generated@@183)  (and (= ($generated@@177 $generated@@182) ($generated@@177 $generated@@183)) (= ($generated@@178 $generated@@182) ($generated@@178 $generated@@183)))))
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@70)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@83 $generated@@179 $generated@@2)) (= (type $generated@@188) $generated@@70)) ($generated@@143 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@143 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert (forall (($generated@@189 T@U) ) (!  (=> (= (type $generated@@189) $generated@@84) (= ($generated@@143 $generated@@189 $generated@@155)  (or (= $generated@@189 $generated@@141) (= ($generated@@142 $generated@@189) $generated@@155))))
 :pattern ( ($generated@@143 $generated@@189 $generated@@155))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (= ($generated@@1 ($generated@@192 $generated@@196 $generated@@197)) 16)) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@193 ($generated@@192 $generated@@198 $generated@@199)) $generated@@198)
 :pattern ( ($generated@@192 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@194 ($generated@@192 $generated@@200 $generated@@201)) $generated@@201)
 :pattern ( ($generated@@192 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@194 (type $generated@@202))))
(= (type ($generated@@190 $generated@@202 $generated@@203 $generated@@204)) $generated@@205))
 :pattern ( ($generated@@190 $generated@@202 $generated@@203 $generated@@204))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 (type $generated@@209)))
(let (($generated@@211 (type $generated@@207)))
(= (type ($generated@@195 $generated@@206 $generated@@207 $generated@@208 $generated@@209)) ($generated@@192 $generated@@211 $generated@@210))))
 :pattern ( ($generated@@195 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@194 (type $generated@@212))))
 (=> (= (type $generated@@215) $generated@@216) (= ($generated@@190 ($generated@@195 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@213 $generated@@214) $generated@@215)))
 :weight 0
))) (and (and (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@190 ($generated@@195 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@190 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or (= $generated@@226 $generated@@228) (= ($generated@@190 ($generated@@195 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@190 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
))) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or true (= ($generated@@190 ($generated@@195 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@190 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
)))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ) (! (= (type ($generated@@191 $generated@@235 $generated@@236 $generated@@237 $generated@@238)) ($generated@@192 $generated@@84 $generated@@4))
 :pattern ( ($generated@@191 $generated@@235 $generated@@236 $generated@@237 $generated@@238))
))))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@73 (type $generated@@244))))
 (=> (and (and (and (and (= (type $generated@@239) $generated@@84) (= (type $generated@@240) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@241) ($generated@@72 $generated@@4))) (= (type $generated@@243) $generated@@84)) (= (type $generated@@244) ($generated@@72 $generated@@245))) (= ($generated@@0 ($generated@@190 ($generated@@191 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))  (=> (and (not (= $generated@@243 $generated@@239)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@240 $generated@@243) $generated@@241))) $generated@@242))))
 :pattern ( ($generated@@190 ($generated@@191 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))
)))
(assert (= (type $generated@@246) $generated@@70))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@84) (= (type $generated@@248) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@247 $generated@@246 $generated@@248) ($generated@@81 $generated@@247 $generated@@155 $generated@@248)))
 :pattern ( ($generated@@81 $generated@@247 $generated@@246 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@249 $generated@@251 $generated@@252)) $generated@@170)
 :pattern ( ($generated@@249 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (= (type $generated@@253) $generated@@70) (= (type $generated@@254) $generated@@70)) (= (type $generated@@255) $generated@@179)) (= (type $generated@@256) $generated@@179)) (= ($generated@@143 ($generated@@249 $generated@@255 $generated@@256) ($generated@@169 $generated@@253 $generated@@254))  (and ($generated@@250 $generated@@255 $generated@@253) ($generated@@250 $generated@@256 $generated@@254))))
 :pattern ( ($generated@@143 ($generated@@249 $generated@@255 $generated@@256) ($generated@@169 $generated@@253 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@170) (= (type $generated@@258) $generated@@170)) (= ($generated@@176 $generated@@257 $generated@@258) (= $generated@@257 $generated@@258)))
 :pattern ( ($generated@@176 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@70)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@83 $generated@@179 $generated@@4)) (= (type $generated@@262) $generated@@70)) (= ($generated@@143 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@179) ($generated@@0 ($generated@@88 $generated@@261 $generated@@263))) ($generated@@250 $generated@@263 $generated@@262))
 :pattern ( ($generated@@88 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@143 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@70)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@83 $generated@@179 $generated@@4)) (= (type $generated@@267) $generated@@70)) (= ($generated@@143 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@179) ($generated@@0 ($generated@@88 $generated@@266 $generated@@268))) ($generated@@250 $generated@@268 $generated@@267))
 :pattern ( ($generated@@88 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@143 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 Int) ) (! (= ($generated@@269 $generated@@270) $generated@@270)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 (type $generated@@272)))
(= (type ($generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= ($generated@@271 $generated@@274) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@70) (= (type $generated@@277) $generated@@70)) (= (type $generated@@278) $generated@@179)) (= (type $generated@@279) $generated@@179)) (= (type $generated@@280) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@158 $generated@@280)) (= ($generated@@81 ($generated@@249 $generated@@278 $generated@@279) ($generated@@169 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@81 ($generated@@249 $generated@@278 $generated@@279) ($generated@@169 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@74)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@170) (= ($generated@@168 $generated@@283) (= ($generated@@281 $generated@@283) $generated@@63)))
 :pattern ( ($generated@@168 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@170) ($generated@@168 $generated@@284)) (exists (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (and (and (= (type $generated@@285) $generated@@179) (= (type $generated@@286) $generated@@179)) (= $generated@@284 ($generated@@249 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@285)
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@168 $generated@@284))
)))
(assert  (and (and (forall (($generated@@291 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@291)) 17)) (forall (($generated@@292 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@289 $generated@@292))
))) (forall (($generated@@293 T@T) ) (! (= (type ($generated@@287 $generated@@293)) ($generated@@289 $generated@@293))
 :pattern ( ($generated@@287 $generated@@293))
))))
(assert (forall (($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@294)) 0)
 :pattern ( ($generated@@287 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@70) (= (type $generated@@296) $generated@@84)) (= ($generated@@143 $generated@@296 ($generated@@163 $generated@@295))  (and ($generated@@143 $generated@@296 ($generated@@140 $generated@@295)) (not (= $generated@@296 $generated@@141)))))
 :pattern ( ($generated@@143 $generated@@296 ($generated@@163 $generated@@295)))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@179)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@70) (= (type $generated@@301) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@275 ($generated@@297 $generated@@299) $generated@@300 $generated@@301) ($generated@@81 $generated@@299 $generated@@300 $generated@@301)))
 :pattern ( ($generated@@275 ($generated@@297 $generated@@299) $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@302) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@303) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@304) $generated@@179)) (= (type $generated@@305) $generated@@70)) ($generated@@148 $generated@@302 $generated@@303)) ($generated@@275 $generated@@304 $generated@@305 $generated@@302)) ($generated@@275 $generated@@304 $generated@@305 $generated@@303))
 :pattern ( ($generated@@148 $generated@@302 $generated@@303) ($generated@@275 $generated@@304 $generated@@305 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@306) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@307) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@309) $generated@@70)) ($generated@@148 $generated@@306 $generated@@307)) ($generated@@81 $generated@@308 $generated@@309 $generated@@306)) ($generated@@81 $generated@@308 $generated@@309 $generated@@307))
 :pattern ( ($generated@@148 $generated@@306 $generated@@307) ($generated@@81 $generated@@308 $generated@@309 $generated@@306))
)))
(assert (forall (($generated@@312 T@T) ) (! (= (type ($generated@@311 $generated@@312)) ($generated@@83 $generated@@312 $generated@@2))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@86 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@83 $generated@@314 $generated@@2)) (and (= (= ($generated@@310 $generated@@313) 0) (= $generated@@313 ($generated@@311 $generated@@314))) (=> (not (= ($generated@@310 $generated@@313) 0)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) (< 0 ($generated ($generated@@88 $generated@@313 $generated@@315))))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ) (! (= (type ($generated@@316 $generated@@317)) $generated@@75)
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@70) (and (= ($generated@@79 ($generated@@140 $generated@@318)) $generated@@61) (= ($generated@@316 ($generated@@140 $generated@@318)) $generated@@67)))
 :pattern ( ($generated@@140 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@70) (and (= ($generated@@79 ($generated@@163 $generated@@319)) $generated@@62) (= ($generated@@316 ($generated@@163 $generated@@319)) $generated@@67)))
 :pattern ( ($generated@@163 $generated@@319))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 18)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@83 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@88 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@88 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert  (and (and (and (and (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (= ($generated@@1 ($generated@@340 $generated@@343 $generated@@344)) 19)) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@341 ($generated@@340 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@340 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@342 ($generated@@340 $generated@@347 $generated@@348)) $generated@@348)
 :pattern ( ($generated@@340 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@341 (type $generated@@349))))
(= (type ($generated@@338 $generated@@349)) ($generated@@83 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@349))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= (type ($generated@@339 $generated@@351 $generated@@352)) ($generated@@340 $generated@@351 $generated@@352))
 :pattern ( ($generated@@339 $generated@@351 $generated@@352))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@T) ) (! (let (($generated@@355 (type $generated@@353)))
 (not ($generated@@0 ($generated@@88 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353))))
 :pattern ( (let (($generated@@355 (type $generated@@353)))
($generated@@88 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353)))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@86 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@83 $generated@@357 $generated@@2)) (= ($generated@@185 $generated@@356) (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@357) (and (<= 0 ($generated ($generated@@88 $generated@@356 $generated@@358))) (<= ($generated ($generated@@88 $generated@@356 $generated@@358)) ($generated@@310 $generated@@356))))
 :pattern ( ($generated@@88 $generated@@356 $generated@@358))
)))))
 :pattern ( ($generated@@185 $generated@@356))
)))
(assert (forall (($generated@@360 T@T) ($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@360 $generated@@361)) $generated@@360)
 :pattern ( ($generated@@359 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@179) ($generated@@250 $generated@@362 $generated@@155)) (and (= ($generated@@297 ($generated@@359 $generated@@84 $generated@@362)) $generated@@362) ($generated@@143 ($generated@@359 $generated@@84 $generated@@362) $generated@@155)))
 :pattern ( ($generated@@250 $generated@@362 $generated@@155))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@179) ($generated@@250 $generated@@363 $generated@@246)) (and (= ($generated@@297 ($generated@@359 $generated@@84 $generated@@363)) $generated@@363) ($generated@@143 ($generated@@359 $generated@@84 $generated@@363) $generated@@246)))
 :pattern ( ($generated@@250 $generated@@363 $generated@@246))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@70) (= (type $generated@@365) $generated@@84)) (= ($generated@@143 $generated@@365 ($generated@@140 $generated@@364))  (or (= $generated@@365 $generated@@141) (= ($generated@@142 $generated@@365) ($generated@@140 $generated@@364)))))
 :pattern ( ($generated@@143 $generated@@365 ($generated@@140 $generated@@364)))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@84) (= ($generated@@143 $generated@@366 $generated@@246)  (and ($generated@@143 $generated@@366 $generated@@155) (not (= $generated@@366 $generated@@141)))))
 :pattern ( ($generated@@143 $generated@@366 $generated@@246))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@324 (type $generated@@367))))
(let (($generated@@369 ($generated@@323 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@322 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@321 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@88 ($generated@@320 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@320 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@324 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@83 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@324 (type $generated@@374))))
(let (($generated@@376 ($generated@@323 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@322 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@321 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@88 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@342 (type $generated@@378))))
(let (($generated@@380 ($generated@@341 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@340 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@339 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@88 ($generated@@338 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@338 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@342 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@83 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@342 (type $generated@@385))))
(let (($generated@@387 ($generated@@341 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@340 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@339 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@88 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@83 $generated@@179 $generated@@2)) (= (type $generated@@390) $generated@@70)) (= ($generated@@143 $generated@@389 ($generated@@184 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@179) (< 0 ($generated ($generated@@88 $generated@@389 $generated@@391)))) ($generated@@250 $generated@@391 $generated@@390))
 :pattern ( ($generated@@88 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@143 $generated@@389 ($generated@@184 $generated@@390)))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@83 $generated@@179 $generated@@4)) (= (type $generated@@393) $generated@@70)) (= (type $generated@@394) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@392 ($generated@@259 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@179) ($generated@@0 ($generated@@88 $generated@@392 $generated@@395))) ($generated@@275 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@88 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@81 $generated@@392 ($generated@@259 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@83 $generated@@179 $generated@@4)) (= (type $generated@@397) $generated@@70)) (= (type $generated@@398) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@396 ($generated@@264 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@179) ($generated@@0 ($generated@@88 $generated@@396 $generated@@399))) ($generated@@275 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@88 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@81 $generated@@396 ($generated@@264 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(= ($generated ($generated@@88 ($generated@@311 $generated@@401) $generated@@400)) 0))
 :pattern ( (let (($generated@@401 (type $generated@@400)))
($generated@@88 ($generated@@311 $generated@@401) $generated@@400)))
)))
(assert  (and (forall (($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@404)) ($generated@@83 $generated@@179 $generated@@4))
 :pattern ( ($generated@@402 $generated@@404))
)) (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@324 (type $generated@@405))))
(let (($generated@@407 ($generated@@323 (type $generated@@405))))
(= (type ($generated@@403 $generated@@405)) ($generated@@83 $generated@@407 $generated@@406))))
 :pattern ( ($generated@@403 $generated@@405))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@322 $generated@@179 $generated@@179)) (= (type $generated@@409) $generated@@179)) (= ($generated@@0 ($generated@@88 ($generated@@402 $generated@@408) $generated@@409))  (and ($generated@@0 ($generated@@88 ($generated@@320 $generated@@408) ($generated@@177 ($generated@@359 $generated@@170 $generated@@409)))) (= ($generated@@88 ($generated@@403 $generated@@408) ($generated@@177 ($generated@@359 $generated@@170 $generated@@409))) ($generated@@178 ($generated@@359 $generated@@170 $generated@@409))))))
 :pattern ( ($generated@@88 ($generated@@402 $generated@@408) $generated@@409))
)))
(assert  (and (forall (($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@412)) ($generated@@83 $generated@@179 $generated@@4))
 :pattern ( ($generated@@410 $generated@@412))
)) (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@342 (type $generated@@413))))
(let (($generated@@415 ($generated@@341 (type $generated@@413))))
(= (type ($generated@@411 $generated@@413)) ($generated@@83 $generated@@415 $generated@@414))))
 :pattern ( ($generated@@411 $generated@@413))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@340 $generated@@179 $generated@@179)) (= (type $generated@@417) $generated@@179)) (= ($generated@@0 ($generated@@88 ($generated@@410 $generated@@416) $generated@@417))  (and ($generated@@0 ($generated@@88 ($generated@@338 $generated@@416) ($generated@@177 ($generated@@359 $generated@@170 $generated@@417)))) (= ($generated@@88 ($generated@@411 $generated@@416) ($generated@@177 ($generated@@359 $generated@@170 $generated@@417))) ($generated@@178 ($generated@@359 $generated@@170 $generated@@417))))))
 :pattern ( ($generated@@88 ($generated@@410 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@323 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@322 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@88 ($generated@@371 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@88 ($generated@@320 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@88 ($generated@@403 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@88 ($generated@@320 $generated@@418) $generated@@422))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@88 ($generated@@371 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(let (($generated@@426 ($generated@@341 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@340 $generated@@426 $generated@@425)) (= ($generated@@0 ($generated@@88 ($generated@@382 $generated@@423) $generated@@424)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) (and ($generated@@0 ($generated@@88 ($generated@@338 $generated@@423) $generated@@427)) (= $generated@@424 ($generated@@88 ($generated@@411 $generated@@423) $generated@@427))))
 :pattern ( ($generated@@88 ($generated@@338 $generated@@423) $generated@@427))
 :pattern ( ($generated@@88 ($generated@@411 $generated@@423) $generated@@427))
))))))
 :pattern ( ($generated@@88 ($generated@@382 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@429 $generated@@430)) $generated@@70)
 :pattern ( ($generated@@428 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (= (type $generated@@431) ($generated@@322 $generated@@179 $generated@@179)) (= (type $generated@@432) $generated@@70)) (= (type $generated@@433) $generated@@70)) (= (type $generated@@434) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@179) ($generated@@0 ($generated@@88 ($generated@@320 $generated@@431) $generated@@435))) (and ($generated@@275 ($generated@@88 ($generated@@403 $generated@@431) $generated@@435) $generated@@433 $generated@@434) ($generated@@275 $generated@@435 $generated@@432 $generated@@434)))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@431) $generated@@435))
 :pattern ( ($generated@@88 ($generated@@320 $generated@@431) $generated@@435))
))))
 :pattern ( ($generated@@81 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@70)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@340 $generated@@179 $generated@@179)) (= (type $generated@@440) $generated@@70)) (= (type $generated@@441) $generated@@70)) (= (type $generated@@442) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@179) ($generated@@0 ($generated@@88 ($generated@@338 $generated@@439) $generated@@443))) (and ($generated@@275 ($generated@@88 ($generated@@411 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@275 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@88 ($generated@@411 $generated@@439) $generated@@443))
 :pattern ( ($generated@@88 ($generated@@338 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@81 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@445 Int) ($generated@@446 Int) ) (! (= ($generated@@444 $generated@@445 $generated@@446) (div $generated@@445 $generated@@446))
 :pattern ( ($generated@@444 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@447) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@448) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@449) ($generated@@83 $generated@@84 $generated@@85))) (not (= $generated@@447 $generated@@449))) (and ($generated@@148 $generated@@447 $generated@@448) ($generated@@148 $generated@@448 $generated@@449))) ($generated@@148 $generated@@447 $generated@@449))
 :pattern ( ($generated@@148 $generated@@447 $generated@@448) ($generated@@148 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 Int) ) (! (= (type ($generated@@450 $generated@@451)) ($generated@@72 $generated@@179))
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 Int) ) (!  (=> (and (and (= (type $generated@@452) $generated@@70) (= (type $generated@@453) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@454) $generated@@84)) (=> (and (and (and ($generated@@158 $generated@@453) (and (not (= $generated@@454 $generated@@141)) (= ($generated@@142 $generated@@454) ($generated@@140 $generated@@452)))) (and (<= 0 $generated@@455) (< $generated@@455 ($generated@@139 $generated@@454)))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@453 $generated@@454) $generated@@60))) ($generated@@275 ($generated@@90 ($generated@@88 $generated@@453 $generated@@454) ($generated@@450 $generated@@455)) $generated@@452 $generated@@453)))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@453 $generated@@454) ($generated@@450 $generated@@455)) ($generated@@140 $generated@@452))
)))
(assert (forall (($generated@@457 T@T) ) (! (= (type ($generated@@456 $generated@@457)) ($generated@@83 $generated@@457 $generated@@4))
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@342 (type $generated@@458))))
(let (($generated@@460 ($generated@@341 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@340 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@339 $generated@@460 $generated@@459)) (= ($generated@@338 $generated@@458) ($generated@@456 $generated@@460))))))
 :pattern ( ($generated@@338 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@342 (type $generated@@461))))
(let (($generated@@463 ($generated@@341 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@340 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@339 $generated@@463 $generated@@462)) (= ($generated@@382 $generated@@461) ($generated@@456 $generated@@462))))))
 :pattern ( ($generated@@382 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@342 (type $generated@@464))))
(let (($generated@@466 ($generated@@341 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@340 $generated@@466 $generated@@465)) (= (= $generated@@464 ($generated@@339 $generated@@466 $generated@@465)) (= ($generated@@410 $generated@@464) ($generated@@456 $generated@@179))))))
 :pattern ( ($generated@@410 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@324 (type $generated@@467))))
(let (($generated@@469 ($generated@@323 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@322 $generated@@469 $generated@@468)) (or (= $generated@@467 ($generated@@321 $generated@@469 $generated@@468)) (exists (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (and (and (= (type $generated@@470) $generated@@179) (= (type $generated@@471) $generated@@179)) ($generated@@0 ($generated@@88 ($generated@@402 $generated@@467) ($generated@@297 ($generated@@249 $generated@@470 $generated@@471)))))
 :no-pattern (type $generated@@470)
 :no-pattern (type $generated@@471)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
))))))
 :pattern ( ($generated@@402 $generated@@467))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@342 (type $generated@@472))))
(let (($generated@@474 ($generated@@341 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@340 $generated@@474 $generated@@473)) (or (= $generated@@472 ($generated@@339 $generated@@474 $generated@@473)) (exists (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (and (and (= (type $generated@@475) $generated@@179) (= (type $generated@@476) $generated@@179)) ($generated@@0 ($generated@@88 ($generated@@410 $generated@@472) ($generated@@297 ($generated@@249 $generated@@475 $generated@@476)))))
 :no-pattern (type $generated@@475)
 :no-pattern (type $generated@@476)
 :no-pattern ($generated $generated@@475)
 :no-pattern ($generated@@0 $generated@@475)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
))))))
 :pattern ( ($generated@@410 $generated@@472))
)))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@179) ($generated@@250 $generated@@477 $generated@@46)) (and (= ($generated@@297 ($generated@@359 $generated@@2 $generated@@477)) $generated@@477) ($generated@@143 ($generated@@359 $generated@@2 $generated@@477) $generated@@46)))
 :pattern ( ($generated@@250 $generated@@477 $generated@@46))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@179) ($generated@@250 $generated@@478 $generated@@47)) (and (= ($generated@@297 ($generated@@359 $generated@@3 $generated@@478)) $generated@@478) ($generated@@143 ($generated@@359 $generated@@3 $generated@@478) $generated@@47)))
 :pattern ( ($generated@@250 $generated@@478 $generated@@47))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@179) ($generated@@250 $generated@@479 $generated@@44)) (and (= ($generated@@297 ($generated@@359 $generated@@4 $generated@@479)) $generated@@479) ($generated@@143 ($generated@@359 $generated@@4 $generated@@479) $generated@@44)))
 :pattern ( ($generated@@250 $generated@@479 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@480) 20))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@179) ($generated@@250 $generated@@481 $generated@@45)) (and (= ($generated@@297 ($generated@@359 $generated@@480 $generated@@481)) $generated@@481) ($generated@@143 ($generated@@359 $generated@@480 $generated@@481) $generated@@45)))
 :pattern ( ($generated@@250 $generated@@481 $generated@@45))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@70) (= ($generated@@250 ($generated@@297 $generated@@482) $generated@@483) ($generated@@143 $generated@@482 $generated@@483)))
 :pattern ( ($generated@@250 ($generated@@297 $generated@@482) $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (= (type $generated@@484) $generated@@84) (<= 0 ($generated@@139 $generated@@484)))
 :no-pattern (type $generated@@484)
 :no-pattern ($generated $generated@@484)
 :no-pattern ($generated@@0 $generated@@484)
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@86 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@83 $generated@@486 $generated@@2)) (<= 0 ($generated@@310 $generated@@485))))
 :pattern ( ($generated@@310 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@290 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@289 $generated@@488)) (<= 0 ($generated@@288 $generated@@487))))
 :pattern ( ($generated@@288 $generated@@487))
)))
(assert (forall (($generated@@490 T@U) ) (! (= (type ($generated@@489 $generated@@490)) $generated@@70)
 :pattern ( ($generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@70) (= (type $generated@@492) $generated@@70)) (= ($generated@@489 ($generated@@428 $generated@@491 $generated@@492)) $generated@@491))
 :pattern ( ($generated@@428 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@70)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@70) (= (type $generated@@496) $generated@@70)) (= ($generated@@493 ($generated@@428 $generated@@495 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@428 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@70) (= (type $generated@@498) $generated@@70)) (= ($generated@@79 ($generated@@428 $generated@@497 $generated@@498)) $generated@@58))
 :pattern ( ($generated@@428 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@70) (= (type $generated@@502) $generated@@70)) (= ($generated@@499 ($generated@@436 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@436 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@70)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@70) (= (type $generated@@506) $generated@@70)) (= ($generated@@503 ($generated@@436 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@436 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@70) (= (type $generated@@508) $generated@@70)) (= ($generated@@79 ($generated@@436 $generated@@507 $generated@@508)) $generated@@59))
 :pattern ( ($generated@@436 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@179) (= (type $generated@@510) $generated@@179)) (= ($generated@@281 ($generated@@249 $generated@@509 $generated@@510)) $generated@@63))
 :pattern ( ($generated@@249 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@70)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@70) (= (type $generated@@514) $generated@@70)) (= ($generated@@511 ($generated@@169 $generated@@513 $generated@@514)) $generated@@513))
 :pattern ( ($generated@@169 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@70)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@70) (= (type $generated@@518) $generated@@70)) (= ($generated@@515 ($generated@@169 $generated@@517 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@169 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@179) (= (type $generated@@520) $generated@@179)) (= ($generated@@177 ($generated@@249 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@249 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@179) (= (type $generated@@522) $generated@@179)) (= ($generated@@178 ($generated@@249 $generated@@521 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@249 $generated@@521 $generated@@522))
)))
(assert  (and (forall (($generated@@525 T@U) ) (! (= (type ($generated@@523 $generated@@525)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@525))
)) (forall (($generated@@526 T@U) ($generated@@527 Int) ) (! (let (($generated@@528 ($generated@@290 (type $generated@@526))))
(= (type ($generated@@524 $generated@@526 $generated@@527)) $generated@@528))
 :pattern ( ($generated@@524 $generated@@526 $generated@@527))
))))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (= (type $generated@@529) ($generated@@289 $generated@@179)) (= (type $generated@@530) $generated@@70)) (= (type $generated@@531) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@529 ($generated@@523 $generated@@530) $generated@@531) (forall (($generated@@532 Int) ) (!  (=> (and (<= 0 $generated@@532) (< $generated@@532 ($generated@@288 $generated@@529))) ($generated@@275 ($generated@@524 $generated@@529 $generated@@532) $generated@@530 $generated@@531))
 :pattern ( ($generated@@524 $generated@@529 $generated@@532))
))))
 :pattern ( ($generated@@81 $generated@@529 ($generated@@523 $generated@@530) $generated@@531))
)))
(assert (forall (($generated@@534 Int) ) (! (= ($generated@@533 ($generated@@82 $generated@@534)) $generated@@534)
 :pattern ( ($generated@@82 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@70)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@70) (= ($generated@@535 ($generated@@259 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@259 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@70) (= ($generated@@79 ($generated@@259 $generated@@538)) $generated@@54))
 :pattern ( ($generated@@259 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@70)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@70) (= ($generated@@539 ($generated@@264 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@264 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@70) (= ($generated@@79 ($generated@@264 $generated@@542)) $generated@@55))
 :pattern ( ($generated@@264 $generated@@542))
)))
(assert (forall (($generated@@544 T@U) ) (! (= (type ($generated@@543 $generated@@544)) $generated@@70)
 :pattern ( ($generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@70) (= ($generated@@543 ($generated@@184 $generated@@545)) $generated@@545))
 :pattern ( ($generated@@184 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@70) (= ($generated@@79 ($generated@@184 $generated@@546)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@70)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@70) (= ($generated@@547 ($generated@@523 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@523 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@70) (= ($generated@@79 ($generated@@523 $generated@@550)) $generated@@57))
 :pattern ( ($generated@@523 $generated@@550))
)))
(assert (forall (($generated@@551 Int) ) (! (= ($generated@@78 ($generated@@450 $generated@@551)) 1)
 :pattern ( ($generated@@450 $generated@@551))
)))
(assert (forall (($generated@@553 Int) ) (! (= ($generated@@552 ($generated@@450 $generated@@553)) $generated@@553)
 :pattern ( ($generated@@450 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@70)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@70) (= ($generated@@554 ($generated@@140 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@140 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@70)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@70) (= ($generated@@557 ($generated@@163 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@163 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
(= ($generated@@359 $generated@@561 ($generated@@297 $generated@@560)) $generated@@560))
 :pattern ( ($generated@@297 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@562) ($generated@@322 $generated@@179 $generated@@179)) (= (type $generated@@563) $generated@@70)) (= (type $generated@@564) $generated@@70)) (= ($generated@@143 $generated@@562 ($generated@@428 $generated@@563 $generated@@564)) (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@179) ($generated@@0 ($generated@@88 ($generated@@320 $generated@@562) $generated@@565))) (and ($generated@@250 ($generated@@88 ($generated@@403 $generated@@562) $generated@@565) $generated@@564) ($generated@@250 $generated@@565 $generated@@563)))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@562) $generated@@565))
 :pattern ( ($generated@@88 ($generated@@320 $generated@@562) $generated@@565))
))))
 :pattern ( ($generated@@143 $generated@@562 ($generated@@428 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@566) ($generated@@340 $generated@@179 $generated@@179)) (= (type $generated@@567) $generated@@70)) (= (type $generated@@568) $generated@@70)) (= ($generated@@143 $generated@@566 ($generated@@436 $generated@@567 $generated@@568)) (forall (($generated@@569 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@179) ($generated@@0 ($generated@@88 ($generated@@338 $generated@@566) $generated@@569))) (and ($generated@@250 ($generated@@88 ($generated@@411 $generated@@566) $generated@@569) $generated@@568) ($generated@@250 $generated@@569 $generated@@567)))
 :pattern ( ($generated@@88 ($generated@@411 $generated@@566) $generated@@569))
 :pattern ( ($generated@@88 ($generated@@338 $generated@@566) $generated@@569))
))))
 :pattern ( ($generated@@143 $generated@@566 ($generated@@436 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 Int) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@70) (= (type $generated@@571) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@572) $generated@@84)) (and (and ($generated@@158 $generated@@571) (and (not (= $generated@@572 $generated@@141)) (= ($generated@@142 $generated@@572) ($generated@@140 $generated@@570)))) (and (<= 0 $generated@@573) (< $generated@@573 ($generated@@139 $generated@@572))))) ($generated@@250 ($generated@@90 ($generated@@88 $generated@@571 $generated@@572) ($generated@@450 $generated@@573)) $generated@@570))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@571 $generated@@572) ($generated@@450 $generated@@573)) ($generated@@140 $generated@@570))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@179) (= (type $generated@@577) $generated@@179)) (< ($generated@@574 $generated@@576) ($generated@@575 ($generated@@249 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@249 $generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@179) (= (type $generated@@579) $generated@@179)) (< ($generated@@574 $generated@@579) ($generated@@575 ($generated@@249 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@249 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@179) (= (type $generated@@581) $generated@@70)) (= (type $generated@@582) $generated@@70)) ($generated@@250 $generated@@580 ($generated@@428 $generated@@581 $generated@@582))) (and (= ($generated@@297 ($generated@@359 ($generated@@322 $generated@@179 $generated@@179) $generated@@580)) $generated@@580) ($generated@@143 ($generated@@359 ($generated@@322 $generated@@179 $generated@@179) $generated@@580) ($generated@@428 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@250 $generated@@580 ($generated@@428 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@179) (= (type $generated@@584) $generated@@70)) (= (type $generated@@585) $generated@@70)) ($generated@@250 $generated@@583 ($generated@@436 $generated@@584 $generated@@585))) (and (= ($generated@@297 ($generated@@359 ($generated@@340 $generated@@179 $generated@@179) $generated@@583)) $generated@@583) ($generated@@143 ($generated@@359 ($generated@@340 $generated@@179 $generated@@179) $generated@@583) ($generated@@436 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@250 $generated@@583 ($generated@@436 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) $generated@@70) (= (type $generated@@587) $generated@@70)) (= (type $generated@@588) $generated@@179)) ($generated@@250 $generated@@588 ($generated@@169 $generated@@586 $generated@@587))) (and (= ($generated@@297 ($generated@@359 $generated@@170 $generated@@588)) $generated@@588) ($generated@@143 ($generated@@359 $generated@@170 $generated@@588) ($generated@@169 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@250 $generated@@588 ($generated@@169 $generated@@586 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 (type $generated@@589)))
 (not ($generated@@0 ($generated@@88 ($generated@@456 $generated@@590) $generated@@589))))
 :pattern ( (let (($generated@@590 (type $generated@@589)))
($generated@@88 ($generated@@456 $generated@@590) $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@70) (= (type $generated@@592) $generated@@70)) (and (= ($generated@@79 ($generated@@169 $generated@@591 $generated@@592)) $generated@@64) (= ($generated@@316 ($generated@@169 $generated@@591 $generated@@592)) $generated@@68)))
 :pattern ( ($generated@@169 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@170) (= ($generated@@574 ($generated@@297 $generated@@593)) ($generated@@575 $generated@@593)))
 :pattern ( ($generated@@574 ($generated@@297 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@179) ($generated@@250 $generated@@594 ($generated@@82 0))) (and (= ($generated@@297 ($generated@@359 $generated@@2 $generated@@594)) $generated@@594) ($generated@@143 ($generated@@359 ($generated@@83 $generated@@179 $generated@@4) $generated@@594) ($generated@@82 0))))
 :pattern ( ($generated@@250 $generated@@594 ($generated@@82 0)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (= (type $generated@@595) $generated@@179) (= (type $generated@@596) $generated@@70)) ($generated@@250 $generated@@595 ($generated@@259 $generated@@596))) (and (= ($generated@@297 ($generated@@359 ($generated@@83 $generated@@179 $generated@@4) $generated@@595)) $generated@@595) ($generated@@143 ($generated@@359 ($generated@@83 $generated@@179 $generated@@4) $generated@@595) ($generated@@259 $generated@@596))))
 :pattern ( ($generated@@250 $generated@@595 ($generated@@259 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@597) $generated@@179) (= (type $generated@@598) $generated@@70)) ($generated@@250 $generated@@597 ($generated@@264 $generated@@598))) (and (= ($generated@@297 ($generated@@359 ($generated@@83 $generated@@179 $generated@@4) $generated@@597)) $generated@@597) ($generated@@143 ($generated@@359 ($generated@@83 $generated@@179 $generated@@4) $generated@@597) ($generated@@264 $generated@@598))))
 :pattern ( ($generated@@250 $generated@@597 ($generated@@264 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@599) $generated@@179) (= (type $generated@@600) $generated@@70)) ($generated@@250 $generated@@599 ($generated@@184 $generated@@600))) (and (= ($generated@@297 ($generated@@359 ($generated@@83 $generated@@179 $generated@@2) $generated@@599)) $generated@@599) ($generated@@143 ($generated@@359 ($generated@@83 $generated@@179 $generated@@2) $generated@@599) ($generated@@184 $generated@@600))))
 :pattern ( ($generated@@250 $generated@@599 ($generated@@184 $generated@@600)))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@601) $generated@@179) (= (type $generated@@602) $generated@@70)) ($generated@@250 $generated@@601 ($generated@@523 $generated@@602))) (and (= ($generated@@297 ($generated@@359 ($generated@@289 $generated@@179) $generated@@601)) $generated@@601) ($generated@@143 ($generated@@359 ($generated@@289 $generated@@179) $generated@@601) ($generated@@523 $generated@@602))))
 :pattern ( ($generated@@250 $generated@@601 ($generated@@523 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@603) $generated@@70) (= (type $generated@@604) $generated@@179)) ($generated@@250 $generated@@604 ($generated@@140 $generated@@603))) (and (= ($generated@@297 ($generated@@359 $generated@@84 $generated@@604)) $generated@@604) ($generated@@143 ($generated@@359 $generated@@84 $generated@@604) ($generated@@140 $generated@@603))))
 :pattern ( ($generated@@250 $generated@@604 ($generated@@140 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@70) (= (type $generated@@606) $generated@@179)) ($generated@@250 $generated@@606 ($generated@@163 $generated@@605))) (and (= ($generated@@297 ($generated@@359 $generated@@84 $generated@@606)) $generated@@606) ($generated@@143 ($generated@@359 $generated@@84 $generated@@606) ($generated@@163 $generated@@605))))
 :pattern ( ($generated@@250 $generated@@606 ($generated@@163 $generated@@605)))
)))
(assert (= ($generated@@79 $generated@@155) $generated@@65))
(assert (= ($generated@@316 $generated@@155) $generated@@69))
(assert (= ($generated@@79 $generated@@246) $generated@@66))
(assert (= ($generated@@316 $generated@@246) $generated@@69))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@607) ($generated@@83 $generated@@179 $generated@@2)) (= (type $generated@@608) $generated@@70)) (= (type $generated@@609) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@607 ($generated@@184 $generated@@608) $generated@@609) (forall (($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@179) (< 0 ($generated ($generated@@88 $generated@@607 $generated@@610)))) ($generated@@275 $generated@@610 $generated@@608 $generated@@609))
 :pattern ( ($generated@@88 $generated@@607 $generated@@610))
))))
 :pattern ( ($generated@@81 $generated@@607 ($generated@@184 $generated@@608) $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) $generated@@170) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@158 $generated@@613) (and ($generated@@168 $generated@@611) (exists (($generated@@614 T@U) ) (!  (and (= (type $generated@@614) $generated@@70) ($generated@@81 $generated@@611 ($generated@@169 $generated@@612 $generated@@614) $generated@@613))
 :pattern ( ($generated@@81 $generated@@611 ($generated@@169 $generated@@612 $generated@@614) $generated@@613))
))))) ($generated@@275 ($generated@@177 $generated@@611) $generated@@612 $generated@@613))
 :pattern ( ($generated@@275 ($generated@@177 $generated@@611) $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (and (= (type $generated@@615) $generated@@170) (= (type $generated@@616) $generated@@70)) (= (type $generated@@617) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@158 $generated@@617) (and ($generated@@168 $generated@@615) (exists (($generated@@618 T@U) ) (!  (and (= (type $generated@@618) $generated@@70) ($generated@@81 $generated@@615 ($generated@@169 $generated@@618 $generated@@616) $generated@@617))
 :pattern ( ($generated@@81 $generated@@615 ($generated@@169 $generated@@618 $generated@@616) $generated@@617))
))))) ($generated@@275 ($generated@@178 $generated@@615) $generated@@616 $generated@@617))
 :pattern ( ($generated@@275 ($generated@@178 $generated@@615) $generated@@616 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@179) (= (type $generated@@620) $generated@@179)) (= ($generated@@249 ($generated@@271 $generated@@619) ($generated@@271 $generated@@620)) ($generated@@271 ($generated@@249 $generated@@619 $generated@@620))))
 :pattern ( ($generated@@249 ($generated@@271 $generated@@619) ($generated@@271 $generated@@620)))
)))
(assert (forall (($generated@@621 Int) ) (! (= ($generated@@297 ($generated@@8 ($generated@@269 $generated@@621))) ($generated@@271 ($generated@@297 ($generated@@8 $generated@@621))))
 :pattern ( ($generated@@297 ($generated@@8 ($generated@@269 $generated@@621))))
)))
(assert (forall (($generated@@622 T@U) ) (! (= ($generated@@297 ($generated@@271 $generated@@622)) ($generated@@271 ($generated@@297 $generated@@622)))
 :pattern ( ($generated@@297 ($generated@@271 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ) (! (let (($generated@@624 ($generated@@290 (type $generated@@623))))
 (=> (and (= (type $generated@@623) ($generated@@289 $generated@@624)) (= ($generated@@288 $generated@@623) 0)) (= $generated@@623 ($generated@@287 $generated@@624))))
 :pattern ( ($generated@@288 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (! (let (($generated@@628 (type $generated@@626)))
 (=> (and (and (= (type $generated@@625) ($generated@@83 $generated@@628 $generated@@2)) (= (type $generated@@627) $generated@@2)) (<= 0 ($generated $generated@@627))) (= ($generated@@310 ($generated@@89 $generated@@625 $generated@@626 $generated@@627)) (+ (- ($generated@@310 $generated@@625) ($generated ($generated@@88 $generated@@625 $generated@@626))) ($generated $generated@@627)))))
 :pattern ( ($generated@@310 ($generated@@89 $generated@@625 $generated@@626 $generated@@627)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@630) $generated@@2)) ($generated@@81 $generated@@630 $generated@@46 $generated@@629))
 :pattern ( ($generated@@81 $generated@@630 $generated@@46 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@632) $generated@@3)) ($generated@@81 $generated@@632 $generated@@47 $generated@@631))
 :pattern ( ($generated@@81 $generated@@632 $generated@@47 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@634) $generated@@4)) ($generated@@81 $generated@@634 $generated@@44 $generated@@633))
 :pattern ( ($generated@@81 $generated@@634 $generated@@44 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@636) $generated@@480)) ($generated@@81 $generated@@636 $generated@@45 $generated@@635))
 :pattern ( ($generated@@81 $generated@@636 $generated@@45 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@638) $generated@@179)) ($generated@@81 $generated@@638 $generated@@48 $generated@@637))
 :pattern ( ($generated@@81 $generated@@638 $generated@@48 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@289 $generated@@179)) (= (type $generated@@640) $generated@@70)) (= ($generated@@143 $generated@@639 ($generated@@523 $generated@@640)) (forall (($generated@@641 Int) ) (!  (=> (and (<= 0 $generated@@641) (< $generated@@641 ($generated@@288 $generated@@639))) ($generated@@250 ($generated@@524 $generated@@639 $generated@@641) $generated@@640))
 :pattern ( ($generated@@524 $generated@@639 $generated@@641))
))))
 :pattern ( ($generated@@143 $generated@@639 ($generated@@523 $generated@@640)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 Int) ) (!  (=> (= (type $generated@@643) ($generated@@289 $generated@@179)) (=> (and (<= 0 $generated@@644) (< $generated@@644 ($generated@@288 $generated@@643))) (< ($generated@@575 ($generated@@359 $generated@@170 ($generated@@524 $generated@@643 $generated@@644))) ($generated@@642 $generated@@643))))
 :pattern ( ($generated@@575 ($generated@@359 $generated@@170 ($generated@@524 $generated@@643 $generated@@644))))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (and (= (type $generated@@645) ($generated@@322 $generated@@179 $generated@@179)) (= (type $generated@@646) $generated@@70)) (= (type $generated@@647) $generated@@70)) ($generated@@143 $generated@@645 ($generated@@428 $generated@@646 $generated@@647))) (and (and ($generated@@143 ($generated@@320 $generated@@645) ($generated@@259 $generated@@646)) ($generated@@143 ($generated@@371 $generated@@645) ($generated@@259 $generated@@647))) ($generated@@143 ($generated@@402 $generated@@645) ($generated@@259 ($generated@@169 $generated@@646 $generated@@647)))))
 :pattern ( ($generated@@143 $generated@@645 ($generated@@428 $generated@@646 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) ($generated@@340 $generated@@179 $generated@@179)) (= (type $generated@@649) $generated@@70)) (= (type $generated@@650) $generated@@70)) ($generated@@143 $generated@@648 ($generated@@436 $generated@@649 $generated@@650))) (and (and ($generated@@143 ($generated@@338 $generated@@648) ($generated@@264 $generated@@649)) ($generated@@143 ($generated@@382 $generated@@648) ($generated@@264 $generated@@650))) ($generated@@143 ($generated@@410 $generated@@648) ($generated@@264 ($generated@@169 $generated@@649 $generated@@650)))))
 :pattern ( ($generated@@143 $generated@@648 ($generated@@436 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@2) ($generated@@143 $generated@@651 $generated@@46))
 :pattern ( ($generated@@143 $generated@@651 $generated@@46))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@3) ($generated@@143 $generated@@652 $generated@@47))
 :pattern ( ($generated@@143 $generated@@652 $generated@@47))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@4) ($generated@@143 $generated@@653 $generated@@44))
 :pattern ( ($generated@@143 $generated@@653 $generated@@44))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@480) ($generated@@143 $generated@@654 $generated@@45))
 :pattern ( ($generated@@143 $generated@@654 $generated@@45))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@179) ($generated@@143 $generated@@655 $generated@@48))
 :pattern ( ($generated@@143 $generated@@655 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@656 () Int)
(declare-fun $generated@@657 () Int)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () Int)
(declare-fun $generated@@661 () Int)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () Bool)
(declare-fun $generated@@664 () Int)
(declare-fun $generated@@665 () Int)
(declare-fun $generated@@666 () Int)
(declare-fun $generated@@667 () Int)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () Int)
(declare-fun $generated@@670 () Int)
(declare-fun $generated@@671 () Int)
(declare-fun $generated@@672 () T@U)
(declare-fun $generated@@673 () Int)
(declare-fun $generated@@674 () Int)
(declare-fun $generated@@675 () Int)
(declare-fun $generated@@676 (T@U) Bool)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () Int)
(assert  (and (and (and (= (type $generated@@658) $generated@@84) (= (type $generated@@659) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@672) ($generated@@192 $generated@@84 $generated@@4))) (= (type $generated@@677) $generated@@84)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 60) (let (($generated@@679 true))
(let (($generated@@680  (=> (and (not (and (<= $generated@@656 $generated@@657) (< $generated@@657 ($generated@@139 $generated@@658)))) (= (ControlFlow 0 31) 27)) $generated@@679)))
(let (($generated@@681  (=> (and (<= $generated@@656 $generated@@657) (< $generated@@657 ($generated@@139 $generated@@658))) (and (=> (= (ControlFlow 0 28) (- 0 30)) (not (= $generated@@658 $generated@@141))) (=> (not (= $generated@@658 $generated@@141)) (and (=> (= (ControlFlow 0 28) (- 0 29)) (and (<= 0 $generated@@657) (< $generated@@657 ($generated@@139 $generated@@658)))) (=> (= (ControlFlow 0 28) 27) $generated@@679)))))))
(let (($generated@@682  (=> (< $generated@@657 $generated@@656) (and (=> (= (ControlFlow 0 34) 28) $generated@@681) (=> (= (ControlFlow 0 34) 31) $generated@@680)))))
(let (($generated@@683  (=> (<= $generated@@656 $generated@@657) (and (=> (= (ControlFlow 0 32) (- 0 33)) (not (= $generated@@658 $generated@@141))) (and (=> (= (ControlFlow 0 32) 28) $generated@@681) (=> (= (ControlFlow 0 32) 31) $generated@@680))))))
(let (($generated@@684  (and (=> (= (ControlFlow 0 35) 32) $generated@@683) (=> (= (ControlFlow 0 35) 34) $generated@@682))))
(let (($generated@@685 true))
(let (($generated@@686  (=> (forall (($generated@@687 Int) ) (!  (=> true (=> (and (<= ($generated@@269 0) $generated@@687) (< $generated@@687 $generated@@660)) (< ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@687)))) $generated@@661)))
 :pattern ( ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@687))))
)) (and (=> (= (ControlFlow 0 36) 35) $generated@@684) (=> (= (ControlFlow 0 36) 26) $generated@@685)))))
(let (($generated@@688  (=> (and (not (and (<= ($generated@@269 0) $generated@@662) (< $generated@@662 $generated@@660))) (= (ControlFlow 0 40) 36)) $generated@@686)))
(let (($generated@@689  (=> (and (<= ($generated@@269 0) $generated@@662) (< $generated@@662 $generated@@660)) (and (=> (= (ControlFlow 0 37) (- 0 39)) (not (= $generated@@658 $generated@@141))) (=> (not (= $generated@@658 $generated@@141)) (and (=> (= (ControlFlow 0 37) (- 0 38)) (and (<= 0 $generated@@662) (< $generated@@662 ($generated@@139 $generated@@658)))) (=> (= (ControlFlow 0 37) 36) $generated@@686)))))))
(let (($generated@@690  (=> (< $generated@@662 ($generated@@269 0)) (and (=> (= (ControlFlow 0 42) 37) $generated@@689) (=> (= (ControlFlow 0 42) 40) $generated@@688)))))
(let (($generated@@691  (=> (<= ($generated@@269 0) $generated@@662) (and (=> (= (ControlFlow 0 41) 37) $generated@@689) (=> (= (ControlFlow 0 41) 40) $generated@@688)))))
(let (($generated@@692  (and (=> (= (ControlFlow 0 43) 41) $generated@@691) (=> (= (ControlFlow 0 43) 42) $generated@@690))))
(let (($generated@@693 true))
(let (($generated@@694  (=> (and (and (<= ($generated@@269 0) $generated@@660) (<= $generated@@660 $generated@@656)) (<= $generated@@656 ($generated@@139 $generated@@658))) (and (=> (= (ControlFlow 0 44) 43) $generated@@692) (=> (= (ControlFlow 0 44) 25) $generated@@693)))))
(let (($generated@@695  (=> (and (not (and (<= ($generated@@269 0) $generated@@660) (<= $generated@@660 $generated@@656))) (= (ControlFlow 0 47) 44)) $generated@@694)))
(let (($generated@@696  (=> (and (<= ($generated@@269 0) $generated@@660) (<= $generated@@660 $generated@@656)) (and (=> (= (ControlFlow 0 45) (- 0 46)) (not (= $generated@@658 $generated@@141))) (=> (= (ControlFlow 0 45) 44) $generated@@694)))))
(let (($generated@@697  (=> (< $generated@@660 ($generated@@269 0)) (and (=> (= (ControlFlow 0 49) 45) $generated@@696) (=> (= (ControlFlow 0 49) 47) $generated@@695)))))
(let (($generated@@698  (=> (<= ($generated@@269 0) $generated@@660) (and (=> (= (ControlFlow 0 48) 45) $generated@@696) (=> (= (ControlFlow 0 48) 47) $generated@@695)))))
(let (($generated@@699  (=> (not $generated@@663) (and (=> (= (ControlFlow 0 50) 48) $generated@@698) (=> (= (ControlFlow 0 50) 49) $generated@@697)))))
(let (($generated@@700  (and (=> (= (ControlFlow 0 10) (- 0 16)) (or (<= 0 $generated@@664) (= (- $generated@@665 $generated@@666) $generated@@664))) (=> (or (<= 0 $generated@@664) (= (- $generated@@665 $generated@@666) $generated@@664)) (and (=> (= (ControlFlow 0 10) (- 0 15)) (< (- $generated@@665 $generated@@666) $generated@@664)) (=> (< (- $generated@@665 $generated@@666) $generated@@664) (and (=> (= (ControlFlow 0 10) (- 0 14)) (=> $generated@@663 (<= ($generated@@269 0) $generated@@666))) (=> (=> $generated@@663 (<= ($generated@@269 0) $generated@@666)) (and (=> (= (ControlFlow 0 10) (- 0 13)) (=> $generated@@663 (<= $generated@@666 $generated@@665))) (=> (=> $generated@@663 (<= $generated@@666 $generated@@665)) (and (=> (= (ControlFlow 0 10) (- 0 12)) (=> $generated@@663 (<= $generated@@665 ($generated@@139 $generated@@658)))) (=> (=> $generated@@663 (<= $generated@@665 ($generated@@139 $generated@@658))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (=> $generated@@663 (forall (($generated@@701 Int) ) (!  (=> true (=> (and (<= ($generated@@269 0) $generated@@701) (< $generated@@701 $generated@@666)) (< ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@701)))) $generated@@661)))
 :pattern ( ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@701))))
)))) (=> (=> $generated@@663 (forall (($generated@@702 Int) ) (!  (=> true (=> (and (<= ($generated@@269 0) $generated@@702) (< $generated@@702 $generated@@666)) (< ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@702)))) $generated@@661)))
 :pattern ( ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@702))))
))) (=> (= (ControlFlow 0 10) (- 0 9)) (=> $generated@@663 (forall (($generated@@703 Int) ) (!  (=> true (=> (and (<= $generated@@665 $generated@@703) (< $generated@@703 ($generated@@139 $generated@@658))) (< $generated@@661 ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@703)))))))
 :pattern ( ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@703))))
))))))))))))))))))
(let (($generated@@704  (=> (and (and (< $generated@@661 $generated@@667) (= $generated@@666 $generated@@660)) (and (= $generated@@665 $generated@@668) (= (ControlFlow 0 18) 10))) $generated@@700)))
(let (($generated@@705  (=> (< $generated@@667 $generated@@661) (=> (and (and (= $generated@@669 (+ $generated@@668 1)) (= $generated@@666 $generated@@669)) (and (= $generated@@665 $generated@@656) (= (ControlFlow 0 17) 10))) $generated@@700))))
(let (($generated@@706  (and (=> (= (ControlFlow 0 3) (- 0 6)) (<= ($generated@@269 (- 0 1)) $generated@@670)) (=> (<= ($generated@@269 (- 0 1)) $generated@@670) (and (=> (= (ControlFlow 0 3) (- 0 5)) (< $generated@@670 ($generated@@139 $generated@@658))) (=> (< $generated@@670 ($generated@@139 $generated@@658)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> (<= ($generated@@269 0) $generated@@670) (= ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@670)))) $generated@@661))) (=> (=> (<= ($generated@@269 0) $generated@@670) (= ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@670)))) $generated@@661)) (=> (= (ControlFlow 0 3) (- 0 2)) (=> (= $generated@@670 ($generated@@269 (- 0 1))) (forall (($generated@@707 Int) ) (!  (=> true (=> (and (<= ($generated@@269 0) $generated@@707) (< $generated@@707 ($generated@@139 $generated@@658))) (not (= ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@707)))) $generated@@661))))
 :pattern ( ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@707))))
))))))))))))
(let (($generated@@708  (=> (<= $generated@@667 $generated@@661) (=> (and (= $generated@@670 $generated@@668) (= (ControlFlow 0 8) 3)) $generated@@706))))
(let (($generated@@709  (=> (<= $generated@@661 $generated@@667) (and (=> (= (ControlFlow 0 19) 18) $generated@@704) (=> (= (ControlFlow 0 19) 8) $generated@@708)))))
(let (($generated@@710  (=> (and (< $generated@@660 $generated@@656) (= $generated@@664 (- $generated@@656 $generated@@660))) (and (=> (= (ControlFlow 0 20) (- 0 23)) (not (= ($generated@@269 2) 0))) (=> (not (= ($generated@@269 2) 0)) (=> (= $generated@@668 (+ $generated@@660 ($generated@@444 (- $generated@@656 $generated@@660) ($generated@@269 2)))) (and (=> (= (ControlFlow 0 20) (- 0 22)) (not (= $generated@@658 $generated@@141))) (=> (not (= $generated@@658 $generated@@141)) (and (=> (= (ControlFlow 0 20) (- 0 21)) (and (<= 0 $generated@@668) (< $generated@@668 ($generated@@139 $generated@@658)))) (=> (and (<= 0 $generated@@668) (< $generated@@668 ($generated@@139 $generated@@658))) (=> (= $generated@@667 ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@668))))) (and (=> (= (ControlFlow 0 20) 17) $generated@@705) (=> (= (ControlFlow 0 20) 19) $generated@@709)))))))))))))
(let (($generated@@711  (=> (and (and (<= $generated@@656 $generated@@660) (= $generated@@671 ($generated@@269 (- 0 1)))) (and (= $generated@@670 $generated@@671) (= (ControlFlow 0 7) 3))) $generated@@706)))
(let (($generated@@712  (=> $generated@@663 (and (=> (= (ControlFlow 0 24) 7) $generated@@711) (=> (= (ControlFlow 0 24) 20) $generated@@710)))))
(let (($generated@@713  (and (=> (= (ControlFlow 0 51) 50) $generated@@699) (=> (= (ControlFlow 0 51) 24) $generated@@712))))
(let (($generated@@714 true))
(let (($generated@@715  (=> (and (and (and (and (not false) (<= 0 $generated@@660)) (=> $generated@@663 true)) (and (and (=> $generated@@663 (<= ($generated@@269 0) $generated@@660)) (=> $generated@@663 (<= $generated@@660 $generated@@656))) (and (=> $generated@@663 (<= $generated@@656 ($generated@@139 $generated@@658))) (=> $generated@@663 true)))) (and (and (and (=> $generated@@663 (forall (($generated@@716 Int) ) (!  (=> true (=> (and (<= ($generated@@269 0) $generated@@716) (< $generated@@716 $generated@@660)) (< ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@716)))) $generated@@661)))
 :pattern ( ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@716))))
))) (=> $generated@@663 true)) (and (=> $generated@@663 (forall (($generated@@717 Int) ) (!  (=> true (=> (and (<= $generated@@656 $generated@@717) (< $generated@@717 ($generated@@139 $generated@@658))) (< $generated@@661 ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@717)))))))
 :pattern ( ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@717))))
))) (forall (($generated@@718 T@U) ) (!  (=> (= (type $generated@@718) $generated@@84) (=> (and (not (= $generated@@718 $generated@@141)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@659 $generated@@718) $generated@@60))) (= ($generated@@88 $generated@@659 $generated@@718) ($generated@@88 $generated@@659 $generated@@718))))
 :pattern ( ($generated@@88 $generated@@659 $generated@@718))
)))) (and (and ($generated@@148 $generated@@659 $generated@@659) (forall (($generated@@719 T@U) ($generated@@720 T@U) ) (! (let (($generated@@721 ($generated@@73 (type $generated@@720))))
 (=> (and (and (= (type $generated@@719) $generated@@84) (= (type $generated@@720) ($generated@@72 $generated@@721))) (and (not (= $generated@@719 $generated@@141)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@659 $generated@@719) $generated@@60)))) (or (= ($generated@@90 ($generated@@88 $generated@@659 $generated@@719) $generated@@720) ($generated@@90 ($generated@@88 $generated@@659 $generated@@719) $generated@@720)) ($generated@@0 ($generated@@190 $generated@@672 $generated@@719 $generated@@720)))))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@659 $generated@@719) $generated@@720))
))) (and (<= (- $generated@@656 $generated@@660) $generated@@673) (=> (= (- $generated@@656 $generated@@660) $generated@@673) true))))) (and (=> (= (ControlFlow 0 52) 1) $generated@@714) (=> (= (ControlFlow 0 52) 51) $generated@@713)))))
(let (($generated@@722  (=> (and (= $generated@@672 ($generated@@191 $generated@@141 $generated@@659 $generated@@60 false)) (= $generated@@674 ($generated@@269 0))) (and (=> (= (ControlFlow 0 53) (- 0 59)) (not (= $generated@@658 $generated@@141))) (=> (not (= $generated@@658 $generated@@141)) (=> (and (= $generated@@675 ($generated@@139 $generated@@658)) (= $generated@@673 (- $generated@@675 $generated@@674))) (and (=> (= (ControlFlow 0 53) (- 0 58)) (=> $generated@@663 (<= ($generated@@269 0) $generated@@674))) (=> (=> $generated@@663 (<= ($generated@@269 0) $generated@@674)) (and (=> (= (ControlFlow 0 53) (- 0 57)) (=> $generated@@663 (<= $generated@@674 $generated@@675))) (=> (=> $generated@@663 (<= $generated@@674 $generated@@675)) (and (=> (= (ControlFlow 0 53) (- 0 56)) (=> $generated@@663 (<= $generated@@675 ($generated@@139 $generated@@658)))) (=> (=> $generated@@663 (<= $generated@@675 ($generated@@139 $generated@@658))) (and (=> (= (ControlFlow 0 53) (- 0 55)) (=> $generated@@663 (forall (($generated@@723 Int) ) (!  (=> true (=> (and (<= ($generated@@269 0) $generated@@723) (< $generated@@723 $generated@@674)) (< ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@723)))) $generated@@661)))
 :pattern ( ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@723))))
)))) (=> (=> $generated@@663 (forall (($generated@@724 Int) ) (!  (=> true (=> (and (<= ($generated@@269 0) $generated@@724) (< $generated@@724 $generated@@674)) (< ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@724)))) $generated@@661)))
 :pattern ( ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@724))))
))) (and (=> (= (ControlFlow 0 53) (- 0 54)) (=> $generated@@663 (forall (($generated@@725 Int) ) (!  (=> true (=> (and (<= $generated@@675 $generated@@725) (< $generated@@725 ($generated@@139 $generated@@658))) (< $generated@@661 ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@725)))))))
 :pattern ( ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@725))))
)))) (=> (=> $generated@@663 (forall (($generated@@726 Int) ) (!  (=> true (=> (and (<= $generated@@675 $generated@@726) (< $generated@@726 ($generated@@139 $generated@@658))) (< $generated@@661 ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@726)))))))
 :pattern ( ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@726))))
))) (=> (= (ControlFlow 0 53) 52) $generated@@715)))))))))))))))))
(let (($generated@@727  (=> (and (and ($generated@@158 $generated@@659) ($generated@@676 $generated@@659)) (and (not (= $generated@@677 $generated@@141)) (and ($generated@@143 $generated@@677 $generated@@246) ($generated@@81 $generated@@677 $generated@@246 $generated@@659)))) (=> (and (and (and ($generated@@143 $generated@@658 ($generated@@163 $generated@@46)) ($generated@@81 $generated@@658 ($generated@@163 $generated@@46) $generated@@659)) (= 1 $generated@@678)) (and (forall (($generated@@728 Int) ($generated@@729 Int) ) (!  (=> true (=> (and (and (<= ($generated@@269 0) $generated@@728) (< $generated@@728 $generated@@729)) (< $generated@@729 ($generated@@139 $generated@@658))) (<= ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@728)))) ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@729)))))))
 :pattern ( ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@729))) ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@658) ($generated@@450 $generated@@728))))
)) (= (ControlFlow 0 60) 53))) $generated@@722))))
$generated@@727)))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@185 (T@T T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@T T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@434 (Int) T@U)
(declare-fun $generated@@440 (T@T) T@U)
(declare-fun $generated@@464 () T@T)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@508 (T@U Int) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@559 (T@U) Int)
(declare-fun $generated@@631 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@182) $generated@@67)) ($generated@@140 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@140 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@189 $generated@@190)) 16)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@186 ($generated@@185 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@185 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@187 ($generated@@185 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@185 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@187 (type $generated@@195))))
(= (type ($generated@@183 $generated@@195 $generated@@196 $generated@@197)) $generated@@198))
 :pattern ( ($generated@@183 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 (type $generated@@202)))
(let (($generated@@204 (type $generated@@200)))
(= (type ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202)) ($generated@@185 $generated@@204 $generated@@203))))
 :pattern ( ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@187 (type $generated@@205))))
 (=> (= (type $generated@@208) $generated@@209) (= ($generated@@183 ($generated@@188 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@206 $generated@@207) $generated@@208)))
 :weight 0
))) (and (and (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@183 ($generated@@188 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@183 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@183 ($generated@@188 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@183 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or true (= ($generated@@183 ($generated@@188 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@183 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@185 $generated@@81 $generated@@4))
 :pattern ( ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@70 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@81) (= (type $generated@@233) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@234) ($generated@@69 $generated@@4))) (= (type $generated@@236) $generated@@81)) (= (type $generated@@237) ($generated@@69 $generated@@238))) (= ($generated@@0 ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@164)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@67) (= (type $generated@@244) $generated@@67)) (= (type $generated@@245) $generated@@173)) (= (type $generated@@246) $generated@@173)) (= ($generated@@140 ($generated@@239 $generated@@245 $generated@@246) ($generated@@163 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@140 ($generated@@239 $generated@@245 $generated@@246) ($generated@@163 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@164) (= (type $generated@@248) $generated@@164)) (= ($generated@@170 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@170 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@67)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@252) $generated@@67)) (= ($generated@@140 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@173) ($generated@@0 ($generated@@85 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@85 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@140 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@67)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@257) $generated@@67)) (= ($generated@@140 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@173) ($generated@@0 ($generated@@85 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@85 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@140 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@67) (= (type $generated@@267) $generated@@67)) (= (type $generated@@268) $generated@@173)) (= (type $generated@@269) $generated@@173)) (= (type $generated@@270) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@270)) (= ($generated@@78 ($generated@@239 $generated@@268 $generated@@269) ($generated@@163 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@78 ($generated@@239 $generated@@268 $generated@@269) ($generated@@163 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@71)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@164) (= ($generated@@162 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@164) ($generated@@162 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@173) (= (type $generated@@276) $generated@@173)) (= $generated@@274 ($generated@@239 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@162 $generated@@274))
)))
(assert  (and (and (forall (($generated@@281 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@281)) 17)) (forall (($generated@@282 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
))) (forall (($generated@@283 T@T) ) (! (= (type ($generated@@277 $generated@@283)) ($generated@@279 $generated@@283))
 :pattern ( ($generated@@277 $generated@@283))
))))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@284)) 0)
 :pattern ( ($generated@@277 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@67) (= (type $generated@@286) $generated@@81)) (= ($generated@@140 $generated@@286 ($generated@@157 $generated@@285))  (and ($generated@@140 $generated@@286 ($generated@@137 $generated@@285)) (not (= $generated@@286 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@286 ($generated@@157 $generated@@285)))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@173)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@67) (= (type $generated@@291) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@265 ($generated@@287 $generated@@289) $generated@@290 $generated@@291) ($generated@@78 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@265 ($generated@@287 $generated@@289) $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@292) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@293) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@294) $generated@@173)) (= (type $generated@@295) $generated@@67)) ($generated@@145 $generated@@292 $generated@@293)) ($generated@@265 $generated@@294 $generated@@295 $generated@@292)) ($generated@@265 $generated@@294 $generated@@295 $generated@@293))
 :pattern ( ($generated@@145 $generated@@292 $generated@@293) ($generated@@265 $generated@@294 $generated@@295 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@296) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@297) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@299) $generated@@67)) ($generated@@145 $generated@@296 $generated@@297)) ($generated@@78 $generated@@298 $generated@@299 $generated@@296)) ($generated@@78 $generated@@298 $generated@@299 $generated@@297))
 :pattern ( ($generated@@145 $generated@@296 $generated@@297) ($generated@@78 $generated@@298 $generated@@299 $generated@@296))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@80 $generated@@302 $generated@@2))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@83 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@80 $generated@@304 $generated@@2)) (and (= (= ($generated@@300 $generated@@303) 0) (= $generated@@303 ($generated@@301 $generated@@304))) (=> (not (= ($generated@@300 $generated@@303) 0)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@304) (< 0 ($generated ($generated@@85 $generated@@303 $generated@@305))))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@72)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@308)) $generated@@61) (= ($generated@@306 ($generated@@137 $generated@@308)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@309)) $generated@@62) (= ($generated@@306 ($generated@@157 $generated@@309)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@309))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 18)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@80 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@85 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@85 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 19)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@80 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@85 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@85 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@83 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@80 $generated@@347 $generated@@2)) (= ($generated@@179 $generated@@346) (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@347) (and (<= 0 ($generated ($generated@@85 $generated@@346 $generated@@348))) (<= ($generated ($generated@@85 $generated@@346 $generated@@348)) ($generated@@300 $generated@@346))))
 :pattern ( ($generated@@85 $generated@@346 $generated@@348))
)))))
 :pattern ( ($generated@@179 $generated@@346))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@67) (= (type $generated@@350) $generated@@81)) (= ($generated@@140 $generated@@350 ($generated@@137 $generated@@349))  (or (= $generated@@350 $generated@@138) (= ($generated@@139 $generated@@350) ($generated@@137 $generated@@349)))))
 :pattern ( ($generated@@140 $generated@@350 ($generated@@137 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@314 (type $generated@@351))))
(let (($generated@@353 ($generated@@313 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@312 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@311 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@310 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@314 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@80 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@314 (type $generated@@358))))
(let (($generated@@360 ($generated@@313 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@312 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@311 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@85 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@332 (type $generated@@362))))
(let (($generated@@364 ($generated@@331 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@330 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@329 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@328 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@332 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@80 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@332 (type $generated@@369))))
(let (($generated@@371 ($generated@@331 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@330 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@329 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@85 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@374) $generated@@67)) (= ($generated@@140 $generated@@373 ($generated@@178 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@373 $generated@@375)))) ($generated@@240 $generated@@375 $generated@@374))
 :pattern ( ($generated@@85 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@140 $generated@@373 ($generated@@178 $generated@@374)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@377) $generated@@67)) (= (type $generated@@378) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@376 ($generated@@249 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@173) ($generated@@0 ($generated@@85 $generated@@376 $generated@@379))) ($generated@@265 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@85 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@78 $generated@@376 ($generated@@249 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@381) $generated@@67)) (= (type $generated@@382) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@380 ($generated@@254 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@173) ($generated@@0 ($generated@@85 $generated@@380 $generated@@383))) ($generated@@265 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@85 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@78 $generated@@380 ($generated@@254 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@85 ($generated@@301 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@85 ($generated@@301 $generated@@385) $generated@@384)))
)))
(assert  (and (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@386 $generated@@389)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@386 $generated@@389))
)) (forall (($generated@@390 T@T) ($generated@@391 T@U) ) (! (= (type ($generated@@387 $generated@@390 $generated@@391)) $generated@@390)
 :pattern ( ($generated@@387 $generated@@390 $generated@@391))
))) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@314 (type $generated@@392))))
(let (($generated@@394 ($generated@@313 (type $generated@@392))))
(= (type ($generated@@388 $generated@@392)) ($generated@@80 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@388 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@396) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@386 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@85 ($generated@@310 $generated@@395) ($generated@@171 ($generated@@387 $generated@@164 $generated@@396)))) (= ($generated@@85 ($generated@@388 $generated@@395) ($generated@@171 ($generated@@387 $generated@@164 $generated@@396))) ($generated@@172 ($generated@@387 $generated@@164 $generated@@396))))))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@332 (type $generated@@400))))
(let (($generated@@402 ($generated@@331 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@80 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@404) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@85 ($generated@@328 $generated@@403) ($generated@@171 ($generated@@387 $generated@@164 $generated@@404)))) (= ($generated@@85 ($generated@@398 $generated@@403) ($generated@@171 ($generated@@387 $generated@@164 $generated@@404))) ($generated@@172 ($generated@@387 $generated@@164 $generated@@404))))))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@313 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@312 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@85 ($generated@@355 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@85 ($generated@@310 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@85 ($generated@@388 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@405) $generated@@409))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@85 ($generated@@355 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@331 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@330 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@85 ($generated@@366 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@85 ($generated@@328 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@85 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@410) $generated@@414))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@85 ($generated@@366 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@67)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) $generated@@67)) (= (type $generated@@421) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@418) $generated@@422))) (and ($generated@@265 ($generated@@85 ($generated@@388 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@265 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@418) $generated@@422))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@78 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@67)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@427) $generated@@67)) (= (type $generated@@428) $generated@@67)) (= (type $generated@@429) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@426) $generated@@430))) (and ($generated@@265 ($generated@@85 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@265 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@431) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@432) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@433) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@431 $generated@@433))) (and ($generated@@145 $generated@@431 $generated@@432) ($generated@@145 $generated@@432 $generated@@433))) ($generated@@145 $generated@@431 $generated@@433))
 :pattern ( ($generated@@145 $generated@@431 $generated@@432) ($generated@@145 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 Int) ) (! (= (type ($generated@@434 $generated@@435)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 Int) ) (!  (=> (and (and (= (type $generated@@436) $generated@@67) (= (type $generated@@437) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@438) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@437) (and (not (= $generated@@438 $generated@@138)) (= ($generated@@139 $generated@@438) ($generated@@137 $generated@@436)))) (and (<= 0 $generated@@439) (< $generated@@439 ($generated@@136 $generated@@438)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@437 $generated@@438) $generated@@60))) ($generated@@265 ($generated@@87 ($generated@@85 $generated@@437 $generated@@438) ($generated@@434 $generated@@439)) $generated@@436 $generated@@437)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@437 $generated@@438) ($generated@@434 $generated@@439)) ($generated@@137 $generated@@436))
)))
(assert (forall (($generated@@441 T@T) ) (! (= (type ($generated@@440 $generated@@441)) ($generated@@80 $generated@@441 $generated@@4))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@332 (type $generated@@442))))
(let (($generated@@444 ($generated@@331 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@330 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@329 $generated@@444 $generated@@443)) (= ($generated@@328 $generated@@442) ($generated@@440 $generated@@444))))))
 :pattern ( ($generated@@328 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@332 (type $generated@@445))))
(let (($generated@@447 ($generated@@331 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@330 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@329 $generated@@447 $generated@@446)) (= ($generated@@366 $generated@@445) ($generated@@440 $generated@@446))))))
 :pattern ( ($generated@@366 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@332 (type $generated@@448))))
(let (($generated@@450 ($generated@@331 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@330 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@329 $generated@@450 $generated@@449)) (= ($generated@@397 $generated@@448) ($generated@@440 $generated@@173))))))
 :pattern ( ($generated@@397 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@314 (type $generated@@451))))
(let (($generated@@453 ($generated@@313 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@312 $generated@@453 $generated@@452)) (or (= $generated@@451 ($generated@@311 $generated@@453 $generated@@452)) (exists (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (and (and (= (type $generated@@454) $generated@@173) (= (type $generated@@455) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@386 $generated@@451) ($generated@@287 ($generated@@239 $generated@@454 $generated@@455)))))
 :no-pattern (type $generated@@454)
 :no-pattern (type $generated@@455)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
))))))
 :pattern ( ($generated@@386 $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@332 (type $generated@@456))))
(let (($generated@@458 ($generated@@331 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@330 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@329 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@173) (= (type $generated@@460) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@397 $generated@@456) ($generated@@287 ($generated@@239 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@397 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@173) ($generated@@240 $generated@@461 $generated@@46)) (and (= ($generated@@287 ($generated@@387 $generated@@2 $generated@@461)) $generated@@461) ($generated@@140 ($generated@@387 $generated@@2 $generated@@461) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@461 $generated@@46))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@173) ($generated@@240 $generated@@462 $generated@@47)) (and (= ($generated@@287 ($generated@@387 $generated@@3 $generated@@462)) $generated@@462) ($generated@@140 ($generated@@387 $generated@@3 $generated@@462) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@462 $generated@@47))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@173) ($generated@@240 $generated@@463 $generated@@44)) (and (= ($generated@@287 ($generated@@387 $generated@@4 $generated@@463)) $generated@@463) ($generated@@140 ($generated@@387 $generated@@4 $generated@@463) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@463 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@464) 20))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@173) ($generated@@240 $generated@@465 $generated@@45)) (and (= ($generated@@287 ($generated@@387 $generated@@464 $generated@@465)) $generated@@465) ($generated@@140 ($generated@@387 $generated@@464 $generated@@465) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@465 $generated@@45))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@67) (= ($generated@@240 ($generated@@287 $generated@@466) $generated@@467) ($generated@@140 $generated@@466 $generated@@467)))
 :pattern ( ($generated@@240 ($generated@@287 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@81) (<= 0 ($generated@@136 $generated@@468)))
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@83 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@80 $generated@@470 $generated@@2)) (<= 0 ($generated@@300 $generated@@469))))
 :pattern ( ($generated@@300 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@280 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@279 $generated@@472)) (<= 0 ($generated@@278 $generated@@471))))
 :pattern ( ($generated@@278 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@67) (= (type $generated@@476) $generated@@67)) (= ($generated@@473 ($generated@@415 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@415 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@67) (= (type $generated@@480) $generated@@67)) (= ($generated@@477 ($generated@@415 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@415 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@67) (= (type $generated@@482) $generated@@67)) (= ($generated@@76 ($generated@@415 $generated@@481 $generated@@482)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@67) (= (type $generated@@486) $generated@@67)) (= ($generated@@483 ($generated@@423 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@423 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@67)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@67) (= (type $generated@@490) $generated@@67)) (= ($generated@@487 ($generated@@423 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@423 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@67) (= (type $generated@@492) $generated@@67)) (= ($generated@@76 ($generated@@423 $generated@@491 $generated@@492)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@173) (= (type $generated@@494) $generated@@173)) (= ($generated@@271 ($generated@@239 $generated@@493 $generated@@494)) $generated@@63))
 :pattern ( ($generated@@239 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@67) (= (type $generated@@498) $generated@@67)) (= ($generated@@495 ($generated@@163 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@163 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@67) (= (type $generated@@502) $generated@@67)) (= ($generated@@499 ($generated@@163 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@163 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@173) (= (type $generated@@504) $generated@@173)) (= ($generated@@171 ($generated@@239 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@239 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@173) (= (type $generated@@506) $generated@@173)) (= ($generated@@172 ($generated@@239 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@239 $generated@@505 $generated@@506))
)))
(assert  (and (forall (($generated@@509 T@U) ) (! (= (type ($generated@@507 $generated@@509)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@509))
)) (forall (($generated@@510 T@U) ($generated@@511 Int) ) (! (let (($generated@@512 ($generated@@280 (type $generated@@510))))
(= (type ($generated@@508 $generated@@510 $generated@@511)) $generated@@512))
 :pattern ( ($generated@@508 $generated@@510 $generated@@511))
))))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@279 $generated@@173)) (= (type $generated@@514) $generated@@67)) (= (type $generated@@515) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@513 ($generated@@507 $generated@@514) $generated@@515) (forall (($generated@@516 Int) ) (!  (=> (and (<= 0 $generated@@516) (< $generated@@516 ($generated@@278 $generated@@513))) ($generated@@265 ($generated@@508 $generated@@513 $generated@@516) $generated@@514 $generated@@515))
 :pattern ( ($generated@@508 $generated@@513 $generated@@516))
))))
 :pattern ( ($generated@@78 $generated@@513 ($generated@@507 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@518 Int) ) (! (= ($generated@@517 ($generated@@79 $generated@@518)) $generated@@518)
 :pattern ( ($generated@@79 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@67)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@67) (= ($generated@@519 ($generated@@249 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@249 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@76 ($generated@@249 $generated@@522)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@67)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@67) (= ($generated@@523 ($generated@@254 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@254 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@76 ($generated@@254 $generated@@526)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@67)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@67) (= ($generated@@527 ($generated@@178 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@178 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@76 ($generated@@178 $generated@@530)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@531 ($generated@@507 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@507 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@67) (= ($generated@@76 ($generated@@507 $generated@@534)) $generated@@57))
 :pattern ( ($generated@@507 $generated@@534))
)))
(assert (forall (($generated@@535 Int) ) (! (= ($generated@@75 ($generated@@434 $generated@@535)) 1)
 :pattern ( ($generated@@434 $generated@@535))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@536 ($generated@@434 $generated@@537)) $generated@@537)
 :pattern ( ($generated@@434 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@67)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@67) (= ($generated@@538 ($generated@@137 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@137 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@67)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@67) (= ($generated@@541 ($generated@@157 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@157 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
(= ($generated@@387 $generated@@545 ($generated@@287 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@287 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@547) $generated@@67)) (= (type $generated@@548) $generated@@67)) (= ($generated@@140 $generated@@546 ($generated@@415 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@546) $generated@@549))) (and ($generated@@240 ($generated@@85 ($generated@@388 $generated@@546) $generated@@549) $generated@@548) ($generated@@240 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@546) $generated@@549))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@140 $generated@@546 ($generated@@415 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@551) $generated@@67)) (= (type $generated@@552) $generated@@67)) (= ($generated@@140 $generated@@550 ($generated@@423 $generated@@551 $generated@@552)) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@550) $generated@@553))) (and ($generated@@240 ($generated@@85 ($generated@@398 $generated@@550) $generated@@553) $generated@@552) ($generated@@240 $generated@@553 $generated@@551)))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@550) $generated@@553))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@550) $generated@@553))
))))
 :pattern ( ($generated@@140 $generated@@550 ($generated@@423 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 Int) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@67) (= (type $generated@@555) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@556) $generated@@81)) (and (and ($generated@@152 $generated@@555) (and (not (= $generated@@556 $generated@@138)) (= ($generated@@139 $generated@@556) ($generated@@137 $generated@@554)))) (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@136 $generated@@556))))) ($generated@@240 ($generated@@87 ($generated@@85 $generated@@555 $generated@@556) ($generated@@434 $generated@@557)) $generated@@554))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@555 $generated@@556) ($generated@@434 $generated@@557)) ($generated@@137 $generated@@554))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@173) (= (type $generated@@561) $generated@@173)) (< ($generated@@558 $generated@@560) ($generated@@559 ($generated@@239 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@239 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@173) (= (type $generated@@563) $generated@@173)) (< ($generated@@558 $generated@@563) ($generated@@559 ($generated@@239 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@239 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@173) (= (type $generated@@565) $generated@@67)) (= (type $generated@@566) $generated@@67)) ($generated@@240 $generated@@564 ($generated@@415 $generated@@565 $generated@@566))) (and (= ($generated@@287 ($generated@@387 ($generated@@312 $generated@@173 $generated@@173) $generated@@564)) $generated@@564) ($generated@@140 ($generated@@387 ($generated@@312 $generated@@173 $generated@@173) $generated@@564) ($generated@@415 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@415 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@173) (= (type $generated@@568) $generated@@67)) (= (type $generated@@569) $generated@@67)) ($generated@@240 $generated@@567 ($generated@@423 $generated@@568 $generated@@569))) (and (= ($generated@@287 ($generated@@387 ($generated@@330 $generated@@173 $generated@@173) $generated@@567)) $generated@@567) ($generated@@140 ($generated@@387 ($generated@@330 $generated@@173 $generated@@173) $generated@@567) ($generated@@423 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@240 $generated@@567 ($generated@@423 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@67) (= (type $generated@@571) $generated@@67)) (= (type $generated@@572) $generated@@173)) ($generated@@240 $generated@@572 ($generated@@163 $generated@@570 $generated@@571))) (and (= ($generated@@287 ($generated@@387 $generated@@164 $generated@@572)) $generated@@572) ($generated@@140 ($generated@@387 $generated@@164 $generated@@572) ($generated@@163 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@240 $generated@@572 ($generated@@163 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@573)))
 (not ($generated@@0 ($generated@@85 ($generated@@440 $generated@@574) $generated@@573))))
 :pattern ( (let (($generated@@574 (type $generated@@573)))
($generated@@85 ($generated@@440 $generated@@574) $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@575 $generated@@576)) $generated@@64) (= ($generated@@306 ($generated@@163 $generated@@575 $generated@@576)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@164) (= ($generated@@558 ($generated@@287 $generated@@577)) ($generated@@559 $generated@@577)))
 :pattern ( ($generated@@558 ($generated@@287 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@173) ($generated@@240 $generated@@578 ($generated@@79 0))) (and (= ($generated@@287 ($generated@@387 $generated@@2 $generated@@578)) $generated@@578) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@578) ($generated@@79 0))))
 :pattern ( ($generated@@240 $generated@@578 ($generated@@79 0)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@173) (= (type $generated@@580) $generated@@67)) ($generated@@240 $generated@@579 ($generated@@249 $generated@@580))) (and (= ($generated@@287 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@579)) $generated@@579) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@579) ($generated@@249 $generated@@580))))
 :pattern ( ($generated@@240 $generated@@579 ($generated@@249 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@173) (= (type $generated@@582) $generated@@67)) ($generated@@240 $generated@@581 ($generated@@254 $generated@@582))) (and (= ($generated@@287 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@581)) $generated@@581) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@581) ($generated@@254 $generated@@582))))
 :pattern ( ($generated@@240 $generated@@581 ($generated@@254 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@173) (= (type $generated@@584) $generated@@67)) ($generated@@240 $generated@@583 ($generated@@178 $generated@@584))) (and (= ($generated@@287 ($generated@@387 ($generated@@80 $generated@@173 $generated@@2) $generated@@583)) $generated@@583) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@2) $generated@@583) ($generated@@178 $generated@@584))))
 :pattern ( ($generated@@240 $generated@@583 ($generated@@178 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@173) (= (type $generated@@586) $generated@@67)) ($generated@@240 $generated@@585 ($generated@@507 $generated@@586))) (and (= ($generated@@287 ($generated@@387 ($generated@@279 $generated@@173) $generated@@585)) $generated@@585) ($generated@@140 ($generated@@387 ($generated@@279 $generated@@173) $generated@@585) ($generated@@507 $generated@@586))))
 :pattern ( ($generated@@240 $generated@@585 ($generated@@507 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@67) (= (type $generated@@588) $generated@@173)) ($generated@@240 $generated@@588 ($generated@@137 $generated@@587))) (and (= ($generated@@287 ($generated@@387 $generated@@81 $generated@@588)) $generated@@588) ($generated@@140 ($generated@@387 $generated@@81 $generated@@588) ($generated@@137 $generated@@587))))
 :pattern ( ($generated@@240 $generated@@588 ($generated@@137 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@67) (= (type $generated@@590) $generated@@173)) ($generated@@240 $generated@@590 ($generated@@157 $generated@@589))) (and (= ($generated@@287 ($generated@@387 $generated@@81 $generated@@590)) $generated@@590) ($generated@@140 ($generated@@387 $generated@@81 $generated@@590) ($generated@@157 $generated@@589))))
 :pattern ( ($generated@@240 $generated@@590 ($generated@@157 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@594)))
 (=> (and (and (and (= (type $generated@@591) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@592) $generated@@81)) (= (type $generated@@593) ($generated@@69 $generated@@595))) ($generated@@152 ($generated@@86 $generated@@591 $generated@@592 ($generated@@88 ($generated@@85 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))) ($generated@@145 $generated@@591 ($generated@@86 $generated@@591 $generated@@592 ($generated@@88 ($generated@@85 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))))
 :pattern ( ($generated@@86 $generated@@591 $generated@@592 ($generated@@88 ($generated@@85 $generated@@591 $generated@@592) $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (= (type $generated@@596) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@597) $generated@@67)) (= (type $generated@@598) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@596 ($generated@@178 $generated@@597) $generated@@598) (forall (($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@596 $generated@@599)))) ($generated@@265 $generated@@599 $generated@@597 $generated@@598))
 :pattern ( ($generated@@85 $generated@@596 $generated@@599))
))))
 :pattern ( ($generated@@78 $generated@@596 ($generated@@178 $generated@@597) $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@164) (= (type $generated@@601) $generated@@67)) (= (type $generated@@602) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@602) (and ($generated@@162 $generated@@600) (exists (($generated@@603 T@U) ) (!  (and (= (type $generated@@603) $generated@@67) ($generated@@78 $generated@@600 ($generated@@163 $generated@@601 $generated@@603) $generated@@602))
 :pattern ( ($generated@@78 $generated@@600 ($generated@@163 $generated@@601 $generated@@603) $generated@@602))
))))) ($generated@@265 ($generated@@171 $generated@@600) $generated@@601 $generated@@602))
 :pattern ( ($generated@@265 ($generated@@171 $generated@@600) $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@164) (= (type $generated@@605) $generated@@67)) (= (type $generated@@606) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@606) (and ($generated@@162 $generated@@604) (exists (($generated@@607 T@U) ) (!  (and (= (type $generated@@607) $generated@@67) ($generated@@78 $generated@@604 ($generated@@163 $generated@@607 $generated@@605) $generated@@606))
 :pattern ( ($generated@@78 $generated@@604 ($generated@@163 $generated@@607 $generated@@605) $generated@@606))
))))) ($generated@@265 ($generated@@172 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@265 ($generated@@172 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@173) (= (type $generated@@609) $generated@@173)) (= ($generated@@239 ($generated@@261 $generated@@608) ($generated@@261 $generated@@609)) ($generated@@261 ($generated@@239 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@608) ($generated@@261 $generated@@609)))
)))
(assert (forall (($generated@@610 Int) ) (! (= ($generated@@287 ($generated@@8 ($generated@@259 $generated@@610))) ($generated@@261 ($generated@@287 ($generated@@8 $generated@@610))))
 :pattern ( ($generated@@287 ($generated@@8 ($generated@@259 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ) (! (= ($generated@@287 ($generated@@261 $generated@@611)) ($generated@@261 ($generated@@287 $generated@@611)))
 :pattern ( ($generated@@287 ($generated@@261 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ) (! (let (($generated@@613 ($generated@@280 (type $generated@@612))))
 (=> (and (= (type $generated@@612) ($generated@@279 $generated@@613)) (= ($generated@@278 $generated@@612) 0)) (= $generated@@612 ($generated@@277 $generated@@613))))
 :pattern ( ($generated@@278 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (! (let (($generated@@617 (type $generated@@615)))
 (=> (and (and (= (type $generated@@614) ($generated@@80 $generated@@617 $generated@@2)) (= (type $generated@@616) $generated@@2)) (<= 0 ($generated $generated@@616))) (= ($generated@@300 ($generated@@86 $generated@@614 $generated@@615 $generated@@616)) (+ (- ($generated@@300 $generated@@614) ($generated ($generated@@85 $generated@@614 $generated@@615))) ($generated $generated@@616)))))
 :pattern ( ($generated@@300 ($generated@@86 $generated@@614 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@619) $generated@@2)) ($generated@@78 $generated@@619 $generated@@46 $generated@@618))
 :pattern ( ($generated@@78 $generated@@619 $generated@@46 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@621) $generated@@3)) ($generated@@78 $generated@@621 $generated@@47 $generated@@620))
 :pattern ( ($generated@@78 $generated@@621 $generated@@47 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@623) $generated@@4)) ($generated@@78 $generated@@623 $generated@@44 $generated@@622))
 :pattern ( ($generated@@78 $generated@@623 $generated@@44 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@625) $generated@@464)) ($generated@@78 $generated@@625 $generated@@45 $generated@@624))
 :pattern ( ($generated@@78 $generated@@625 $generated@@45 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@627) $generated@@173)) ($generated@@78 $generated@@627 $generated@@48 $generated@@626))
 :pattern ( ($generated@@78 $generated@@627 $generated@@48 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@279 $generated@@173)) (= (type $generated@@629) $generated@@67)) (= ($generated@@140 $generated@@628 ($generated@@507 $generated@@629)) (forall (($generated@@630 Int) ) (!  (=> (and (<= 0 $generated@@630) (< $generated@@630 ($generated@@278 $generated@@628))) ($generated@@240 ($generated@@508 $generated@@628 $generated@@630) $generated@@629))
 :pattern ( ($generated@@508 $generated@@628 $generated@@630))
))))
 :pattern ( ($generated@@140 $generated@@628 ($generated@@507 $generated@@629)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 Int) ) (!  (=> (= (type $generated@@632) ($generated@@279 $generated@@173)) (=> (and (<= 0 $generated@@633) (< $generated@@633 ($generated@@278 $generated@@632))) (< ($generated@@559 ($generated@@387 $generated@@164 ($generated@@508 $generated@@632 $generated@@633))) ($generated@@631 $generated@@632))))
 :pattern ( ($generated@@559 ($generated@@387 $generated@@164 ($generated@@508 $generated@@632 $generated@@633))))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@635) $generated@@67)) (= (type $generated@@636) $generated@@67)) ($generated@@140 $generated@@634 ($generated@@415 $generated@@635 $generated@@636))) (and (and ($generated@@140 ($generated@@310 $generated@@634) ($generated@@249 $generated@@635)) ($generated@@140 ($generated@@355 $generated@@634) ($generated@@249 $generated@@636))) ($generated@@140 ($generated@@386 $generated@@634) ($generated@@249 ($generated@@163 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@140 $generated@@634 ($generated@@415 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@638) $generated@@67)) (= (type $generated@@639) $generated@@67)) ($generated@@140 $generated@@637 ($generated@@423 $generated@@638 $generated@@639))) (and (and ($generated@@140 ($generated@@328 $generated@@637) ($generated@@254 $generated@@638)) ($generated@@140 ($generated@@366 $generated@@637) ($generated@@254 $generated@@639))) ($generated@@140 ($generated@@397 $generated@@637) ($generated@@254 ($generated@@163 $generated@@638 $generated@@639)))))
 :pattern ( ($generated@@140 $generated@@637 ($generated@@423 $generated@@638 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@2) ($generated@@140 $generated@@640 $generated@@46))
 :pattern ( ($generated@@140 $generated@@640 $generated@@46))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@3) ($generated@@140 $generated@@641 $generated@@47))
 :pattern ( ($generated@@140 $generated@@641 $generated@@47))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@4) ($generated@@140 $generated@@642 $generated@@44))
 :pattern ( ($generated@@140 $generated@@642 $generated@@44))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@464) ($generated@@140 $generated@@643 $generated@@45))
 :pattern ( ($generated@@140 $generated@@643 $generated@@45))
)))
(assert (forall (($generated@@644 T@U) ) (!  (=> (= (type $generated@@644) $generated@@173) ($generated@@140 $generated@@644 $generated@@48))
 :pattern ( ($generated@@140 $generated@@644 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 (T@U) Bool)
(declare-fun $generated@@650 () Int)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 () Int)
(declare-fun $generated@@653 () T@U)
(declare-fun $generated@@654 () Int)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () Int)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () Int)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () Int)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () Int)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () Int)
(declare-fun $generated@@667 () T@U)
(declare-fun $generated@@668 () Int)
(declare-fun $generated@@669 () T@U)
(declare-fun $generated@@670 () Int)
(declare-fun $generated@@671 () T@U)
(declare-fun $generated@@672 () Int)
(declare-fun $generated@@673 () T@U)
(declare-fun $generated@@674 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@645) ($generated@@185 $generated@@81 $generated@@4)) (= (type $generated@@646) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@647) $generated@@81)) (= (type $generated@@648) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@651) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@653) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@655) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@657) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@659) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@661) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@663) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@665) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@667) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@669) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@671) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@673) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 25) (let (($generated@@675  (=> (= $generated@@645 ($generated@@184 $generated@@138 $generated@@646 $generated@@60 false)) (and (=> (= (ControlFlow 0 2) (- 0 24)) (<= 0 ($generated@@259 5))) (=> (<= 0 ($generated@@259 5)) (=> (and (and (and (not (= $generated@@647 $generated@@138)) (= ($generated@@139 $generated@@647) ($generated@@137 $generated@@46))) (not ($generated@@0 ($generated@@87 ($generated@@85 $generated@@646 $generated@@647) $generated@@60)))) (and (and (= ($generated@@136 $generated@@647) ($generated@@259 5)) (= $generated@@648 ($generated@@86 $generated@@646 $generated@@647 ($generated@@88 ($generated@@85 $generated@@646 $generated@@647) $generated@@60 ($generated@@11 true))))) (and ($generated@@152 $generated@@648) ($generated@@649 $generated@@648)))) (and (=> (= (ControlFlow 0 2) (- 0 23)) (not (= $generated@@647 $generated@@138))) (=> (not (= $generated@@647 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 22)) (and (<= 0 ($generated@@259 0)) (< ($generated@@259 0) ($generated@@136 $generated@@647)))) (=> (and (<= 0 ($generated@@259 0)) (< ($generated@@259 0) ($generated@@136 $generated@@647))) (and (=> (= (ControlFlow 0 2) (- 0 21)) ($generated@@0 ($generated@@183 $generated@@645 $generated@@647 ($generated@@434 ($generated@@259 0))))) (=> ($generated@@0 ($generated@@183 $generated@@645 $generated@@647 ($generated@@434 ($generated@@259 0)))) (=> (= $generated@@650 ($generated@@259 (- 0 4))) (=> (and (= $generated@@651 ($generated@@86 $generated@@648 $generated@@647 ($generated@@88 ($generated@@85 $generated@@648 $generated@@647) ($generated@@434 ($generated@@259 0)) ($generated@@287 ($generated@@8 $generated@@650))))) ($generated@@152 $generated@@651)) (and (=> (= (ControlFlow 0 2) (- 0 20)) (not (= $generated@@647 $generated@@138))) (=> (not (= $generated@@647 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 19)) (and (<= 0 ($generated@@259 1)) (< ($generated@@259 1) ($generated@@136 $generated@@647)))) (=> (and (<= 0 ($generated@@259 1)) (< ($generated@@259 1) ($generated@@136 $generated@@647))) (and (=> (= (ControlFlow 0 2) (- 0 18)) ($generated@@0 ($generated@@183 $generated@@645 $generated@@647 ($generated@@434 ($generated@@259 1))))) (=> ($generated@@0 ($generated@@183 $generated@@645 $generated@@647 ($generated@@434 ($generated@@259 1)))) (=> (= $generated@@652 ($generated@@259 (- 0 2))) (=> (and (= $generated@@653 ($generated@@86 $generated@@651 $generated@@647 ($generated@@88 ($generated@@85 $generated@@651 $generated@@647) ($generated@@434 ($generated@@259 1)) ($generated@@287 ($generated@@8 $generated@@652))))) ($generated@@152 $generated@@653)) (and (=> (= (ControlFlow 0 2) (- 0 17)) (not (= $generated@@647 $generated@@138))) (=> (not (= $generated@@647 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 16)) (and (<= 0 ($generated@@259 2)) (< ($generated@@259 2) ($generated@@136 $generated@@647)))) (=> (and (<= 0 ($generated@@259 2)) (< ($generated@@259 2) ($generated@@136 $generated@@647))) (and (=> (= (ControlFlow 0 2) (- 0 15)) ($generated@@0 ($generated@@183 $generated@@645 $generated@@647 ($generated@@434 ($generated@@259 2))))) (=> ($generated@@0 ($generated@@183 $generated@@645 $generated@@647 ($generated@@434 ($generated@@259 2)))) (=> (= $generated@@654 ($generated@@259 (- 0 2))) (=> (and (= $generated@@655 ($generated@@86 $generated@@653 $generated@@647 ($generated@@88 ($generated@@85 $generated@@653 $generated@@647) ($generated@@434 ($generated@@259 2)) ($generated@@287 ($generated@@8 $generated@@654))))) ($generated@@152 $generated@@655)) (and (=> (= (ControlFlow 0 2) (- 0 14)) (not (= $generated@@647 $generated@@138))) (=> (not (= $generated@@647 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 13)) (and (<= 0 ($generated@@259 3)) (< ($generated@@259 3) ($generated@@136 $generated@@647)))) (=> (and (<= 0 ($generated@@259 3)) (< ($generated@@259 3) ($generated@@136 $generated@@647))) (and (=> (= (ControlFlow 0 2) (- 0 12)) ($generated@@0 ($generated@@183 $generated@@645 $generated@@647 ($generated@@434 ($generated@@259 3))))) (=> ($generated@@0 ($generated@@183 $generated@@645 $generated@@647 ($generated@@434 ($generated@@259 3)))) (=> (= $generated@@656 ($generated@@259 0)) (=> (and (= $generated@@657 ($generated@@86 $generated@@655 $generated@@647 ($generated@@88 ($generated@@85 $generated@@655 $generated@@647) ($generated@@434 ($generated@@259 3)) ($generated@@287 ($generated@@8 $generated@@656))))) ($generated@@152 $generated@@657)) (and (=> (= (ControlFlow 0 2) (- 0 11)) (not (= $generated@@647 $generated@@138))) (=> (not (= $generated@@647 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 10)) (and (<= 0 ($generated@@259 4)) (< ($generated@@259 4) ($generated@@136 $generated@@647)))) (=> (and (<= 0 ($generated@@259 4)) (< ($generated@@259 4) ($generated@@136 $generated@@647))) (and (=> (= (ControlFlow 0 2) (- 0 9)) ($generated@@0 ($generated@@183 $generated@@645 $generated@@647 ($generated@@434 ($generated@@259 4))))) (=> ($generated@@0 ($generated@@183 $generated@@645 $generated@@647 ($generated@@434 ($generated@@259 4)))) (=> (and (and (= $generated@@658 ($generated@@259 25)) (= $generated@@659 ($generated@@86 $generated@@657 $generated@@647 ($generated@@88 ($generated@@85 $generated@@657 $generated@@647) ($generated@@434 ($generated@@259 4)) ($generated@@287 ($generated@@8 $generated@@658)))))) (and ($generated@@152 $generated@@659) (= $generated@@660 ($generated@@259 4)))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (forall (($generated@@676 Int) ($generated@@677 Int) ) (!  (=> true (=> (and (and (<= ($generated@@259 0) $generated@@676) (< $generated@@676 $generated@@677)) (< $generated@@677 ($generated@@136 $generated@@647))) (<= ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@659 $generated@@647) ($generated@@434 $generated@@676)))) ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@659 $generated@@647) ($generated@@434 $generated@@677)))))))
 :pattern ( ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@659 $generated@@647) ($generated@@434 $generated@@677))) ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@659 $generated@@647) ($generated@@434 $generated@@676))))
))) (=> (forall (($generated@@678 Int) ($generated@@679 Int) ) (!  (=> true (=> (and (and (<= ($generated@@259 0) $generated@@678) (< $generated@@678 $generated@@679)) (< $generated@@679 ($generated@@136 $generated@@647))) (<= ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@659 $generated@@647) ($generated@@434 $generated@@678)))) ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@659 $generated@@647) ($generated@@434 $generated@@679)))))))
 :pattern ( ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@659 $generated@@647) ($generated@@434 $generated@@679))) ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@659 $generated@@647) ($generated@@434 $generated@@678))))
)) (=> (and (and (and ($generated@@152 $generated@@661) ($generated@@649 $generated@@661)) (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@81) (=> (and (not (= $generated@@680 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@659 $generated@@680) $generated@@60))) (= ($generated@@85 $generated@@661 $generated@@680) ($generated@@85 $generated@@659 $generated@@680))))
 :pattern ( ($generated@@85 $generated@@661 $generated@@680))
))) (and ($generated@@145 $generated@@659 $generated@@661) (= $generated@@662 ($generated@@259 (- 0 8))))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (forall (($generated@@681 Int) ($generated@@682 Int) ) (!  (=> true (=> (and (and (<= ($generated@@259 0) $generated@@681) (< $generated@@681 $generated@@682)) (< $generated@@682 ($generated@@136 $generated@@647))) (<= ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@661 $generated@@647) ($generated@@434 $generated@@681)))) ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@661 $generated@@647) ($generated@@434 $generated@@682)))))))
 :pattern ( ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@661 $generated@@647) ($generated@@434 $generated@@682))) ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@661 $generated@@647) ($generated@@434 $generated@@681))))
))) (=> (forall (($generated@@683 Int) ($generated@@684 Int) ) (!  (=> true (=> (and (and (<= ($generated@@259 0) $generated@@683) (< $generated@@683 $generated@@684)) (< $generated@@684 ($generated@@136 $generated@@647))) (<= ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@661 $generated@@647) ($generated@@434 $generated@@683)))) ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@661 $generated@@647) ($generated@@434 $generated@@684)))))))
 :pattern ( ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@661 $generated@@647) ($generated@@434 $generated@@684))) ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@661 $generated@@647) ($generated@@434 $generated@@683))))
)) (=> (and (and (and ($generated@@152 $generated@@663) ($generated@@649 $generated@@663)) (forall (($generated@@685 T@U) ) (!  (=> (= (type $generated@@685) $generated@@81) (=> (and (not (= $generated@@685 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@661 $generated@@685) $generated@@60))) (= ($generated@@85 $generated@@663 $generated@@685) ($generated@@85 $generated@@661 $generated@@685))))
 :pattern ( ($generated@@85 $generated@@663 $generated@@685))
))) (and ($generated@@145 $generated@@661 $generated@@663) (= $generated@@664 ($generated@@259 (- 0 2))))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (forall (($generated@@686 Int) ($generated@@687 Int) ) (!  (=> true (=> (and (and (<= ($generated@@259 0) $generated@@686) (< $generated@@686 $generated@@687)) (< $generated@@687 ($generated@@136 $generated@@647))) (<= ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@663 $generated@@647) ($generated@@434 $generated@@686)))) ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@663 $generated@@647) ($generated@@434 $generated@@687)))))))
 :pattern ( ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@663 $generated@@647) ($generated@@434 $generated@@687))) ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@663 $generated@@647) ($generated@@434 $generated@@686))))
))) (=> (forall (($generated@@688 Int) ($generated@@689 Int) ) (!  (=> true (=> (and (and (<= ($generated@@259 0) $generated@@688) (< $generated@@688 $generated@@689)) (< $generated@@689 ($generated@@136 $generated@@647))) (<= ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@663 $generated@@647) ($generated@@434 $generated@@688)))) ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@663 $generated@@647) ($generated@@434 $generated@@689)))))))
 :pattern ( ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@663 $generated@@647) ($generated@@434 $generated@@689))) ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@663 $generated@@647) ($generated@@434 $generated@@688))))
)) (=> (and (and (and ($generated@@152 $generated@@665) ($generated@@649 $generated@@665)) (forall (($generated@@690 T@U) ) (!  (=> (= (type $generated@@690) $generated@@81) (=> (and (not (= $generated@@690 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@663 $generated@@690) $generated@@60))) (= ($generated@@85 $generated@@665 $generated@@690) ($generated@@85 $generated@@663 $generated@@690))))
 :pattern ( ($generated@@85 $generated@@665 $generated@@690))
))) (and ($generated@@145 $generated@@663 $generated@@665) (= $generated@@666 ($generated@@259 0)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (forall (($generated@@691 Int) ($generated@@692 Int) ) (!  (=> true (=> (and (and (<= ($generated@@259 0) $generated@@691) (< $generated@@691 $generated@@692)) (< $generated@@692 ($generated@@136 $generated@@647))) (<= ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@647) ($generated@@434 $generated@@691)))) ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@647) ($generated@@434 $generated@@692)))))))
 :pattern ( ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@647) ($generated@@434 $generated@@692))) ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@647) ($generated@@434 $generated@@691))))
))) (=> (forall (($generated@@693 Int) ($generated@@694 Int) ) (!  (=> true (=> (and (and (<= ($generated@@259 0) $generated@@693) (< $generated@@693 $generated@@694)) (< $generated@@694 ($generated@@136 $generated@@647))) (<= ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@647) ($generated@@434 $generated@@693)))) ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@647) ($generated@@434 $generated@@694)))))))
 :pattern ( ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@647) ($generated@@434 $generated@@694))) ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@665 $generated@@647) ($generated@@434 $generated@@693))))
)) (=> (and (and (and ($generated@@152 $generated@@667) ($generated@@649 $generated@@667)) (forall (($generated@@695 T@U) ) (!  (=> (= (type $generated@@695) $generated@@81) (=> (and (not (= $generated@@695 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@665 $generated@@695) $generated@@60))) (= ($generated@@85 $generated@@667 $generated@@695) ($generated@@85 $generated@@665 $generated@@695))))
 :pattern ( ($generated@@85 $generated@@667 $generated@@695))
))) (and ($generated@@145 $generated@@665 $generated@@667) (= $generated@@668 ($generated@@259 23)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (forall (($generated@@696 Int) ($generated@@697 Int) ) (!  (=> true (=> (and (and (<= ($generated@@259 0) $generated@@696) (< $generated@@696 $generated@@697)) (< $generated@@697 ($generated@@136 $generated@@647))) (<= ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@667 $generated@@647) ($generated@@434 $generated@@696)))) ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@667 $generated@@647) ($generated@@434 $generated@@697)))))))
 :pattern ( ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@667 $generated@@647) ($generated@@434 $generated@@697))) ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@667 $generated@@647) ($generated@@434 $generated@@696))))
))) (=> (forall (($generated@@698 Int) ($generated@@699 Int) ) (!  (=> true (=> (and (and (<= ($generated@@259 0) $generated@@698) (< $generated@@698 $generated@@699)) (< $generated@@699 ($generated@@136 $generated@@647))) (<= ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@667 $generated@@647) ($generated@@434 $generated@@698)))) ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@667 $generated@@647) ($generated@@434 $generated@@699)))))))
 :pattern ( ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@667 $generated@@647) ($generated@@434 $generated@@699))) ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@667 $generated@@647) ($generated@@434 $generated@@698))))
)) (=> (and (and (and ($generated@@152 $generated@@669) ($generated@@649 $generated@@669)) (forall (($generated@@700 T@U) ) (!  (=> (= (type $generated@@700) $generated@@81) (=> (and (not (= $generated@@700 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@667 $generated@@700) $generated@@60))) (= ($generated@@85 $generated@@669 $generated@@700) ($generated@@85 $generated@@667 $generated@@700))))
 :pattern ( ($generated@@85 $generated@@669 $generated@@700))
))) (and ($generated@@145 $generated@@667 $generated@@669) (= $generated@@670 ($generated@@259 25)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@701 Int) ($generated@@702 Int) ) (!  (=> true (=> (and (and (<= ($generated@@259 0) $generated@@701) (< $generated@@701 $generated@@702)) (< $generated@@702 ($generated@@136 $generated@@647))) (<= ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@669 $generated@@647) ($generated@@434 $generated@@701)))) ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@669 $generated@@647) ($generated@@434 $generated@@702)))))))
 :pattern ( ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@669 $generated@@647) ($generated@@434 $generated@@702))) ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@669 $generated@@647) ($generated@@434 $generated@@701))))
))) (=> (forall (($generated@@703 Int) ($generated@@704 Int) ) (!  (=> true (=> (and (and (<= ($generated@@259 0) $generated@@703) (< $generated@@703 $generated@@704)) (< $generated@@704 ($generated@@136 $generated@@647))) (<= ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@669 $generated@@647) ($generated@@434 $generated@@703)))) ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@669 $generated@@647) ($generated@@434 $generated@@704)))))))
 :pattern ( ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@669 $generated@@647) ($generated@@434 $generated@@704))) ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@669 $generated@@647) ($generated@@434 $generated@@703))))
)) (=> (and ($generated@@152 $generated@@671) ($generated@@649 $generated@@671)) (=> (and (and (forall (($generated@@705 T@U) ) (!  (=> (= (type $generated@@705) $generated@@81) (=> (and (not (= $generated@@705 $generated@@138)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@669 $generated@@705) $generated@@60))) (= ($generated@@85 $generated@@671 $generated@@705) ($generated@@85 $generated@@669 $generated@@705))))
 :pattern ( ($generated@@85 $generated@@671 $generated@@705))
)) ($generated@@145 $generated@@669 $generated@@671)) (and (= $generated@@672 ($generated@@259 27)) (= (ControlFlow 0 2) (- 0 1)))) (forall (($generated@@706 Int) ($generated@@707 Int) ) (!  (=> true (=> (and (and (<= ($generated@@259 0) $generated@@706) (< $generated@@706 $generated@@707)) (< $generated@@707 ($generated@@136 $generated@@647))) (<= ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@671 $generated@@647) ($generated@@434 $generated@@706)))) ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@671 $generated@@647) ($generated@@434 $generated@@707)))))))
 :pattern ( ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@671 $generated@@647) ($generated@@434 $generated@@707))) ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@671 $generated@@647) ($generated@@434 $generated@@706))))
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@708  (=> (and ($generated@@152 $generated@@646) ($generated@@649 $generated@@646)) (=> (and (and (and ($generated@@140 $generated@@673 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@673 ($generated@@157 $generated@@46) $generated@@646)) true) (and (= 3 $generated@@674) (= (ControlFlow 0 25) 2))) $generated@@675))))
$generated@@708)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@170 (T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@185 (T@T T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U T@U T@U) Bool)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@T) T@U)
(declare-fun $generated@@278 (T@U) Int)
(declare-fun $generated@@279 (T@T) T@T)
(declare-fun $generated@@280 (T@T) T@T)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@300 (T@U) Int)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@311 (T@T T@T) T@U)
(declare-fun $generated@@312 (T@T T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@T T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@415 (T@U T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@434 (Int) T@U)
(declare-fun $generated@@440 (T@T) T@U)
(declare-fun $generated@@464 () T@T)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@508 (T@U Int) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@536 (T@U) Int)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@559 (T@U) Int)
(declare-fun $generated@@626 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@68)) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (= ($generated@@75 $generated@@60) 0))
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@68)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@70 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@70 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@67)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (and (forall (($generated@@141 T@U) ) (! (= (type ($generated@@137 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@137 $generated@@141))
)) (= (type $generated@@138) $generated@@81)) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@142)) $generated@@67)
 :pattern ( ($generated@@139 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (= (type $generated@@143) $generated@@67) (= (type $generated@@144) $generated@@81)) (and (not (= $generated@@144 $generated@@138)) (= ($generated@@139 $generated@@144) ($generated@@137 $generated@@143)))) ($generated@@140 ($generated@@8 ($generated@@136 $generated@@144)) $generated@@46))
 :pattern ( ($generated@@136 $generated@@144) ($generated@@137 $generated@@143))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@147) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@145 $generated@@146 $generated@@147)) (forall (($generated@@148 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@81) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@146 $generated@@148) $generated@@60))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@147 $generated@@148) $generated@@60))
)))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@67) (= (type $generated@@150) $generated@@81)) (= (type $generated@@151) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151)  (or (= $generated@@150 $generated@@138) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@151 $generated@@150) $generated@@60)))))
 :pattern ( ($generated@@78 $generated@@150 ($generated@@137 $generated@@149) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (and (= (type $generated@@153) $generated@@67) (= (type $generated@@154) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@155) $generated@@81)) (and (and ($generated@@152 $generated@@154) (and (not (= $generated@@155 $generated@@138)) (= ($generated@@139 $generated@@155) ($generated@@137 $generated@@153)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60)))) ($generated@@78 ($generated@@8 ($generated@@136 $generated@@155)) $generated@@46 $generated@@154))
 :pattern ( ($generated@@136 $generated@@155) ($generated@@87 ($generated@@85 $generated@@154 $generated@@155) $generated@@60) ($generated@@137 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> (= (type $generated@@156) $generated@@2) ($generated@@140 $generated@@156 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@156 ($generated@@79 0)))
)))
(assert (forall (($generated@@158 T@U) ) (! (= (type ($generated@@157 $generated@@158)) $generated@@67)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@67) (= (type $generated@@160) $generated@@81)) (= (type $generated@@161) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161) ($generated@@78 $generated@@160 ($generated@@137 $generated@@159) $generated@@161)))
 :pattern ( ($generated@@78 $generated@@160 ($generated@@157 $generated@@159) $generated@@161))
)))
(assert  (and (= ($generated@@1 $generated@@164) 14) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@165 $generated@@166)) $generated@@67)
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (and (= (type $generated@@167) $generated@@67) (= (type $generated@@168) $generated@@67)) (= (type $generated@@169) $generated@@164)) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168))) ($generated@@162 $generated@@169))
 :pattern ( ($generated@@162 $generated@@169) ($generated@@140 $generated@@169 ($generated@@163 $generated@@167 $generated@@168)))
)))
(assert  (and (and (= ($generated@@1 $generated@@173) 15) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@174))
))) (forall (($generated@@175 T@U) ) (! (= (type ($generated@@172 $generated@@175)) $generated@@173)
 :pattern ( ($generated@@172 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) $generated@@164) (= (type $generated@@177) $generated@@164)) true) (= ($generated@@170 $generated@@176 $generated@@177)  (and (= ($generated@@171 $generated@@176) ($generated@@171 $generated@@177)) (= ($generated@@172 $generated@@176) ($generated@@172 $generated@@177)))))
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@67)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@182) $generated@@67)) ($generated@@140 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@140 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@189 $generated@@190)) 16)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@186 ($generated@@185 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@185 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@187 ($generated@@185 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@185 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@187 (type $generated@@195))))
(= (type ($generated@@183 $generated@@195 $generated@@196 $generated@@197)) $generated@@198))
 :pattern ( ($generated@@183 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 (type $generated@@202)))
(let (($generated@@204 (type $generated@@200)))
(= (type ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202)) ($generated@@185 $generated@@204 $generated@@203))))
 :pattern ( ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@187 (type $generated@@205))))
 (=> (= (type $generated@@208) $generated@@209) (= ($generated@@183 ($generated@@188 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@206 $generated@@207) $generated@@208)))
 :weight 0
))) (and (and (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@183 ($generated@@188 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@183 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@183 ($generated@@188 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@183 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or true (= ($generated@@183 ($generated@@188 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@183 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@185 $generated@@81 $generated@@4))
 :pattern ( ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@70 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@81) (= (type $generated@@233) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@234) ($generated@@69 $generated@@4))) (= (type $generated@@236) $generated@@81)) (= (type $generated@@237) ($generated@@69 $generated@@238))) (= ($generated@@0 ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@164)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@67) (= (type $generated@@244) $generated@@67)) (= (type $generated@@245) $generated@@173)) (= (type $generated@@246) $generated@@173)) (= ($generated@@140 ($generated@@239 $generated@@245 $generated@@246) ($generated@@163 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@140 ($generated@@239 $generated@@245 $generated@@246) ($generated@@163 $generated@@243 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@164) (= (type $generated@@248) $generated@@164)) (= ($generated@@170 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@170 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@67)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@252) $generated@@67)) (= ($generated@@140 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@173) ($generated@@0 ($generated@@85 $generated@@251 $generated@@253))) ($generated@@240 $generated@@253 $generated@@252))
 :pattern ( ($generated@@85 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@140 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@67)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@257) $generated@@67)) (= ($generated@@140 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@173) ($generated@@0 ($generated@@85 $generated@@256 $generated@@258))) ($generated@@240 $generated@@258 $generated@@257))
 :pattern ( ($generated@@85 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@140 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@266) $generated@@67) (= (type $generated@@267) $generated@@67)) (= (type $generated@@268) $generated@@173)) (= (type $generated@@269) $generated@@173)) (= (type $generated@@270) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@152 $generated@@270)) (= ($generated@@78 ($generated@@239 $generated@@268 $generated@@269) ($generated@@163 $generated@@266 $generated@@267) $generated@@270)  (and ($generated@@265 $generated@@268 $generated@@266 $generated@@270) ($generated@@265 $generated@@269 $generated@@267 $generated@@270))))
 :pattern ( ($generated@@78 ($generated@@239 $generated@@268 $generated@@269) ($generated@@163 $generated@@266 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@71)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (= (type $generated@@273) $generated@@164) (= ($generated@@162 $generated@@273) (= ($generated@@271 $generated@@273) $generated@@63)))
 :pattern ( ($generated@@162 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@164) ($generated@@162 $generated@@274)) (exists (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (and (and (= (type $generated@@275) $generated@@173) (= (type $generated@@276) $generated@@173)) (= $generated@@274 ($generated@@239 $generated@@275 $generated@@276)))
 :no-pattern (type $generated@@275)
 :no-pattern (type $generated@@276)
 :no-pattern ($generated $generated@@275)
 :no-pattern ($generated@@0 $generated@@275)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
)))
 :pattern ( ($generated@@162 $generated@@274))
)))
(assert  (and (and (forall (($generated@@281 T@T) ) (= ($generated@@1 ($generated@@279 $generated@@281)) 17)) (forall (($generated@@282 T@T) ) (! (= ($generated@@280 ($generated@@279 $generated@@282)) $generated@@282)
 :pattern ( ($generated@@279 $generated@@282))
))) (forall (($generated@@283 T@T) ) (! (= (type ($generated@@277 $generated@@283)) ($generated@@279 $generated@@283))
 :pattern ( ($generated@@277 $generated@@283))
))))
(assert (forall (($generated@@284 T@T) ) (! (= ($generated@@278 ($generated@@277 $generated@@284)) 0)
 :pattern ( ($generated@@277 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@67) (= (type $generated@@286) $generated@@81)) (= ($generated@@140 $generated@@286 ($generated@@157 $generated@@285))  (and ($generated@@140 $generated@@286 ($generated@@137 $generated@@285)) (not (= $generated@@286 $generated@@138)))))
 :pattern ( ($generated@@140 $generated@@286 ($generated@@157 $generated@@285)))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@173)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@67) (= (type $generated@@291) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@265 ($generated@@287 $generated@@289) $generated@@290 $generated@@291) ($generated@@78 $generated@@289 $generated@@290 $generated@@291)))
 :pattern ( ($generated@@265 ($generated@@287 $generated@@289) $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@292) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@293) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@294) $generated@@173)) (= (type $generated@@295) $generated@@67)) ($generated@@145 $generated@@292 $generated@@293)) ($generated@@265 $generated@@294 $generated@@295 $generated@@292)) ($generated@@265 $generated@@294 $generated@@295 $generated@@293))
 :pattern ( ($generated@@145 $generated@@292 $generated@@293) ($generated@@265 $generated@@294 $generated@@295 $generated@@292))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@296) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@297) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@299) $generated@@67)) ($generated@@145 $generated@@296 $generated@@297)) ($generated@@78 $generated@@298 $generated@@299 $generated@@296)) ($generated@@78 $generated@@298 $generated@@299 $generated@@297))
 :pattern ( ($generated@@145 $generated@@296 $generated@@297) ($generated@@78 $generated@@298 $generated@@299 $generated@@296))
)))
(assert (forall (($generated@@302 T@T) ) (! (= (type ($generated@@301 $generated@@302)) ($generated@@80 $generated@@302 $generated@@2))
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (! (let (($generated@@304 ($generated@@83 (type $generated@@303))))
 (=> (= (type $generated@@303) ($generated@@80 $generated@@304 $generated@@2)) (and (= (= ($generated@@300 $generated@@303) 0) (= $generated@@303 ($generated@@301 $generated@@304))) (=> (not (= ($generated@@300 $generated@@303) 0)) (exists (($generated@@305 T@U) ) (!  (and (= (type $generated@@305) $generated@@304) (< 0 ($generated ($generated@@85 $generated@@303 $generated@@305))))
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
))))))
 :pattern ( ($generated@@300 $generated@@303))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@72)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ) (!  (=> (= (type $generated@@308) $generated@@67) (and (= ($generated@@76 ($generated@@137 $generated@@308)) $generated@@61) (= ($generated@@306 ($generated@@137 $generated@@308)) $generated@@65)))
 :pattern ( ($generated@@137 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@67) (and (= ($generated@@76 ($generated@@157 $generated@@309)) $generated@@62) (= ($generated@@306 ($generated@@157 $generated@@309)) $generated@@65)))
 :pattern ( ($generated@@157 $generated@@309))
)))
(assert  (and (and (and (and (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (= ($generated@@1 ($generated@@312 $generated@@315 $generated@@316)) 18)) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@313 ($generated@@312 $generated@@317 $generated@@318)) $generated@@317)
 :pattern ( ($generated@@312 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@314 ($generated@@312 $generated@@319 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@312 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@313 (type $generated@@321))))
(= (type ($generated@@310 $generated@@321)) ($generated@@80 $generated@@322 $generated@@4)))
 :pattern ( ($generated@@310 $generated@@321))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= (type ($generated@@311 $generated@@323 $generated@@324)) ($generated@@312 $generated@@323 $generated@@324))
 :pattern ( ($generated@@311 $generated@@323 $generated@@324))
))))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@T) ) (! (let (($generated@@327 (type $generated@@325)))
 (not ($generated@@0 ($generated@@85 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325))))
 :pattern ( (let (($generated@@327 (type $generated@@325)))
($generated@@85 ($generated@@310 ($generated@@311 $generated@@327 $generated@@326)) $generated@@325)))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 19)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@80 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@85 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@85 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@83 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@80 $generated@@347 $generated@@2)) (= ($generated@@179 $generated@@346) (forall (($generated@@348 T@U) ) (!  (=> (= (type $generated@@348) $generated@@347) (and (<= 0 ($generated ($generated@@85 $generated@@346 $generated@@348))) (<= ($generated ($generated@@85 $generated@@346 $generated@@348)) ($generated@@300 $generated@@346))))
 :pattern ( ($generated@@85 $generated@@346 $generated@@348))
)))))
 :pattern ( ($generated@@179 $generated@@346))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@67) (= (type $generated@@350) $generated@@81)) (= ($generated@@140 $generated@@350 ($generated@@137 $generated@@349))  (or (= $generated@@350 $generated@@138) (= ($generated@@139 $generated@@350) ($generated@@137 $generated@@349)))))
 :pattern ( ($generated@@140 $generated@@350 ($generated@@137 $generated@@349)))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@314 (type $generated@@351))))
(let (($generated@@353 ($generated@@313 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@312 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@311 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@310 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@314 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@80 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@314 (type $generated@@358))))
(let (($generated@@360 ($generated@@313 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@312 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@311 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@85 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@332 (type $generated@@362))))
(let (($generated@@364 ($generated@@331 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@330 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@329 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@328 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@332 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@80 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@332 (type $generated@@369))))
(let (($generated@@371 ($generated@@331 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@330 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@329 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@85 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@374) $generated@@67)) (= ($generated@@140 $generated@@373 ($generated@@178 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@373 $generated@@375)))) ($generated@@240 $generated@@375 $generated@@374))
 :pattern ( ($generated@@85 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@140 $generated@@373 ($generated@@178 $generated@@374)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@377) $generated@@67)) (= (type $generated@@378) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@376 ($generated@@249 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@173) ($generated@@0 ($generated@@85 $generated@@376 $generated@@379))) ($generated@@265 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@85 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@78 $generated@@376 ($generated@@249 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@80 $generated@@173 $generated@@4)) (= (type $generated@@381) $generated@@67)) (= (type $generated@@382) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@380 ($generated@@254 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@173) ($generated@@0 ($generated@@85 $generated@@380 $generated@@383))) ($generated@@265 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@85 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@78 $generated@@380 ($generated@@254 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@85 ($generated@@301 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@85 ($generated@@301 $generated@@385) $generated@@384)))
)))
(assert  (and (and (forall (($generated@@389 T@U) ) (! (= (type ($generated@@386 $generated@@389)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@386 $generated@@389))
)) (forall (($generated@@390 T@T) ($generated@@391 T@U) ) (! (= (type ($generated@@387 $generated@@390 $generated@@391)) $generated@@390)
 :pattern ( ($generated@@387 $generated@@390 $generated@@391))
))) (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@314 (type $generated@@392))))
(let (($generated@@394 ($generated@@313 (type $generated@@392))))
(= (type ($generated@@388 $generated@@392)) ($generated@@80 $generated@@394 $generated@@393))))
 :pattern ( ($generated@@388 $generated@@392))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@395) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@396) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@386 $generated@@395) $generated@@396))  (and ($generated@@0 ($generated@@85 ($generated@@310 $generated@@395) ($generated@@171 ($generated@@387 $generated@@164 $generated@@396)))) (= ($generated@@85 ($generated@@388 $generated@@395) ($generated@@171 ($generated@@387 $generated@@164 $generated@@396))) ($generated@@172 ($generated@@387 $generated@@164 $generated@@396))))))
 :pattern ( ($generated@@85 ($generated@@386 $generated@@395) $generated@@396))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@80 $generated@@173 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@332 (type $generated@@400))))
(let (($generated@@402 ($generated@@331 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@80 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@404) $generated@@173)) (= ($generated@@0 ($generated@@85 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@85 ($generated@@328 $generated@@403) ($generated@@171 ($generated@@387 $generated@@164 $generated@@404)))) (= ($generated@@85 ($generated@@398 $generated@@403) ($generated@@171 ($generated@@387 $generated@@164 $generated@@404))) ($generated@@172 ($generated@@387 $generated@@164 $generated@@404))))))
 :pattern ( ($generated@@85 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(let (($generated@@408 ($generated@@313 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@312 $generated@@408 $generated@@407)) (= ($generated@@0 ($generated@@85 ($generated@@355 $generated@@405) $generated@@406)) (exists (($generated@@409 T@U) ) (!  (and (= (type $generated@@409) $generated@@408) (and ($generated@@0 ($generated@@85 ($generated@@310 $generated@@405) $generated@@409)) (= $generated@@406 ($generated@@85 ($generated@@388 $generated@@405) $generated@@409))))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@405) $generated@@409))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@405) $generated@@409))
))))))
 :pattern ( ($generated@@85 ($generated@@355 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ) (! (let (($generated@@412 (type $generated@@411)))
(let (($generated@@413 ($generated@@331 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@330 $generated@@413 $generated@@412)) (= ($generated@@0 ($generated@@85 ($generated@@366 $generated@@410) $generated@@411)) (exists (($generated@@414 T@U) ) (!  (and (= (type $generated@@414) $generated@@413) (and ($generated@@0 ($generated@@85 ($generated@@328 $generated@@410) $generated@@414)) (= $generated@@411 ($generated@@85 ($generated@@398 $generated@@410) $generated@@414))))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@410) $generated@@414))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@410) $generated@@414))
))))))
 :pattern ( ($generated@@85 ($generated@@366 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (= (type ($generated@@415 $generated@@416 $generated@@417)) $generated@@67)
 :pattern ( ($generated@@415 $generated@@416 $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (and (= (type $generated@@418) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@419) $generated@@67)) (= (type $generated@@420) $generated@@67)) (= (type $generated@@421) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421) (forall (($generated@@422 T@U) ) (!  (=> (and (= (type $generated@@422) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@418) $generated@@422))) (and ($generated@@265 ($generated@@85 ($generated@@388 $generated@@418) $generated@@422) $generated@@420 $generated@@421) ($generated@@265 $generated@@422 $generated@@419 $generated@@421)))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@418) $generated@@422))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@418) $generated@@422))
))))
 :pattern ( ($generated@@78 $generated@@418 ($generated@@415 $generated@@419 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@67)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@427) $generated@@67)) (= (type $generated@@428) $generated@@67)) (= (type $generated@@429) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@426) $generated@@430))) (and ($generated@@265 ($generated@@85 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@265 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@78 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@431) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@432) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@433) ($generated@@80 $generated@@81 $generated@@82))) (not (= $generated@@431 $generated@@433))) (and ($generated@@145 $generated@@431 $generated@@432) ($generated@@145 $generated@@432 $generated@@433))) ($generated@@145 $generated@@431 $generated@@433))
 :pattern ( ($generated@@145 $generated@@431 $generated@@432) ($generated@@145 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 Int) ) (! (= (type ($generated@@434 $generated@@435)) ($generated@@69 $generated@@173))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 Int) ) (!  (=> (and (and (= (type $generated@@436) $generated@@67) (= (type $generated@@437) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@438) $generated@@81)) (=> (and (and (and ($generated@@152 $generated@@437) (and (not (= $generated@@438 $generated@@138)) (= ($generated@@139 $generated@@438) ($generated@@137 $generated@@436)))) (and (<= 0 $generated@@439) (< $generated@@439 ($generated@@136 $generated@@438)))) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@437 $generated@@438) $generated@@60))) ($generated@@265 ($generated@@87 ($generated@@85 $generated@@437 $generated@@438) ($generated@@434 $generated@@439)) $generated@@436 $generated@@437)))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@437 $generated@@438) ($generated@@434 $generated@@439)) ($generated@@137 $generated@@436))
)))
(assert (forall (($generated@@441 T@T) ) (! (= (type ($generated@@440 $generated@@441)) ($generated@@80 $generated@@441 $generated@@4))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@332 (type $generated@@442))))
(let (($generated@@444 ($generated@@331 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@330 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@329 $generated@@444 $generated@@443)) (= ($generated@@328 $generated@@442) ($generated@@440 $generated@@444))))))
 :pattern ( ($generated@@328 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@332 (type $generated@@445))))
(let (($generated@@447 ($generated@@331 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@330 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@329 $generated@@447 $generated@@446)) (= ($generated@@366 $generated@@445) ($generated@@440 $generated@@446))))))
 :pattern ( ($generated@@366 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@332 (type $generated@@448))))
(let (($generated@@450 ($generated@@331 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@330 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@329 $generated@@450 $generated@@449)) (= ($generated@@397 $generated@@448) ($generated@@440 $generated@@173))))))
 :pattern ( ($generated@@397 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@314 (type $generated@@451))))
(let (($generated@@453 ($generated@@313 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@312 $generated@@453 $generated@@452)) (or (= $generated@@451 ($generated@@311 $generated@@453 $generated@@452)) (exists (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (and (and (= (type $generated@@454) $generated@@173) (= (type $generated@@455) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@386 $generated@@451) ($generated@@287 ($generated@@239 $generated@@454 $generated@@455)))))
 :no-pattern (type $generated@@454)
 :no-pattern (type $generated@@455)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
))))))
 :pattern ( ($generated@@386 $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@332 (type $generated@@456))))
(let (($generated@@458 ($generated@@331 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@330 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@329 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@173) (= (type $generated@@460) $generated@@173)) ($generated@@0 ($generated@@85 ($generated@@397 $generated@@456) ($generated@@287 ($generated@@239 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@397 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@173) ($generated@@240 $generated@@461 $generated@@46)) (and (= ($generated@@287 ($generated@@387 $generated@@2 $generated@@461)) $generated@@461) ($generated@@140 ($generated@@387 $generated@@2 $generated@@461) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@461 $generated@@46))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@173) ($generated@@240 $generated@@462 $generated@@47)) (and (= ($generated@@287 ($generated@@387 $generated@@3 $generated@@462)) $generated@@462) ($generated@@140 ($generated@@387 $generated@@3 $generated@@462) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@462 $generated@@47))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@173) ($generated@@240 $generated@@463 $generated@@44)) (and (= ($generated@@287 ($generated@@387 $generated@@4 $generated@@463)) $generated@@463) ($generated@@140 ($generated@@387 $generated@@4 $generated@@463) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@463 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@464) 20))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@173) ($generated@@240 $generated@@465 $generated@@45)) (and (= ($generated@@287 ($generated@@387 $generated@@464 $generated@@465)) $generated@@465) ($generated@@140 ($generated@@387 $generated@@464 $generated@@465) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@465 $generated@@45))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@67) (= ($generated@@240 ($generated@@287 $generated@@466) $generated@@467) ($generated@@140 $generated@@466 $generated@@467)))
 :pattern ( ($generated@@240 ($generated@@287 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@81) (<= 0 ($generated@@136 $generated@@468)))
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@83 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@80 $generated@@470 $generated@@2)) (<= 0 ($generated@@300 $generated@@469))))
 :pattern ( ($generated@@300 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@280 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@279 $generated@@472)) (<= 0 ($generated@@278 $generated@@471))))
 :pattern ( ($generated@@278 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@67)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@67) (= (type $generated@@476) $generated@@67)) (= ($generated@@473 ($generated@@415 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@415 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@67)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@67) (= (type $generated@@480) $generated@@67)) (= ($generated@@477 ($generated@@415 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@415 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@67) (= (type $generated@@482) $generated@@67)) (= ($generated@@76 ($generated@@415 $generated@@481 $generated@@482)) $generated@@58))
 :pattern ( ($generated@@415 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@67)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@67) (= (type $generated@@486) $generated@@67)) (= ($generated@@483 ($generated@@423 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@423 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@67)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@67) (= (type $generated@@490) $generated@@67)) (= ($generated@@487 ($generated@@423 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@423 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@67) (= (type $generated@@492) $generated@@67)) (= ($generated@@76 ($generated@@423 $generated@@491 $generated@@492)) $generated@@59))
 :pattern ( ($generated@@423 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@173) (= (type $generated@@494) $generated@@173)) (= ($generated@@271 ($generated@@239 $generated@@493 $generated@@494)) $generated@@63))
 :pattern ( ($generated@@239 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@67)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@67) (= (type $generated@@498) $generated@@67)) (= ($generated@@495 ($generated@@163 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@163 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@67)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@67) (= (type $generated@@502) $generated@@67)) (= ($generated@@499 ($generated@@163 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@163 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@173) (= (type $generated@@504) $generated@@173)) (= ($generated@@171 ($generated@@239 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@239 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@173) (= (type $generated@@506) $generated@@173)) (= ($generated@@172 ($generated@@239 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@239 $generated@@505 $generated@@506))
)))
(assert  (and (forall (($generated@@509 T@U) ) (! (= (type ($generated@@507 $generated@@509)) $generated@@67)
 :pattern ( ($generated@@507 $generated@@509))
)) (forall (($generated@@510 T@U) ($generated@@511 Int) ) (! (let (($generated@@512 ($generated@@280 (type $generated@@510))))
(= (type ($generated@@508 $generated@@510 $generated@@511)) $generated@@512))
 :pattern ( ($generated@@508 $generated@@510 $generated@@511))
))))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@279 $generated@@173)) (= (type $generated@@514) $generated@@67)) (= (type $generated@@515) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@513 ($generated@@507 $generated@@514) $generated@@515) (forall (($generated@@516 Int) ) (!  (=> (and (<= 0 $generated@@516) (< $generated@@516 ($generated@@278 $generated@@513))) ($generated@@265 ($generated@@508 $generated@@513 $generated@@516) $generated@@514 $generated@@515))
 :pattern ( ($generated@@508 $generated@@513 $generated@@516))
))))
 :pattern ( ($generated@@78 $generated@@513 ($generated@@507 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@518 Int) ) (! (= ($generated@@517 ($generated@@79 $generated@@518)) $generated@@518)
 :pattern ( ($generated@@79 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@67)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@67) (= ($generated@@519 ($generated@@249 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@249 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@67) (= ($generated@@76 ($generated@@249 $generated@@522)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@67)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@67) (= ($generated@@523 ($generated@@254 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@254 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@67) (= ($generated@@76 ($generated@@254 $generated@@526)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@67)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@67) (= ($generated@@527 ($generated@@178 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@178 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@67) (= ($generated@@76 ($generated@@178 $generated@@530)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@67)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@67) (= ($generated@@531 ($generated@@507 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@507 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@67) (= ($generated@@76 ($generated@@507 $generated@@534)) $generated@@57))
 :pattern ( ($generated@@507 $generated@@534))
)))
(assert (forall (($generated@@535 Int) ) (! (= ($generated@@75 ($generated@@434 $generated@@535)) 1)
 :pattern ( ($generated@@434 $generated@@535))
)))
(assert (forall (($generated@@537 Int) ) (! (= ($generated@@536 ($generated@@434 $generated@@537)) $generated@@537)
 :pattern ( ($generated@@434 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@67)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@67) (= ($generated@@538 ($generated@@137 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@137 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@67)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@67) (= ($generated@@541 ($generated@@157 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@157 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
(= ($generated@@387 $generated@@545 ($generated@@287 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@287 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@547) $generated@@67)) (= (type $generated@@548) $generated@@67)) (= ($generated@@140 $generated@@546 ($generated@@415 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@310 $generated@@546) $generated@@549))) (and ($generated@@240 ($generated@@85 ($generated@@388 $generated@@546) $generated@@549) $generated@@548) ($generated@@240 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@85 ($generated@@388 $generated@@546) $generated@@549))
 :pattern ( ($generated@@85 ($generated@@310 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@140 $generated@@546 ($generated@@415 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@551) $generated@@67)) (= (type $generated@@552) $generated@@67)) (= ($generated@@140 $generated@@550 ($generated@@423 $generated@@551 $generated@@552)) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@173) ($generated@@0 ($generated@@85 ($generated@@328 $generated@@550) $generated@@553))) (and ($generated@@240 ($generated@@85 ($generated@@398 $generated@@550) $generated@@553) $generated@@552) ($generated@@240 $generated@@553 $generated@@551)))
 :pattern ( ($generated@@85 ($generated@@398 $generated@@550) $generated@@553))
 :pattern ( ($generated@@85 ($generated@@328 $generated@@550) $generated@@553))
))))
 :pattern ( ($generated@@140 $generated@@550 ($generated@@423 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 Int) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@67) (= (type $generated@@555) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@556) $generated@@81)) (and (and ($generated@@152 $generated@@555) (and (not (= $generated@@556 $generated@@138)) (= ($generated@@139 $generated@@556) ($generated@@137 $generated@@554)))) (and (<= 0 $generated@@557) (< $generated@@557 ($generated@@136 $generated@@556))))) ($generated@@240 ($generated@@87 ($generated@@85 $generated@@555 $generated@@556) ($generated@@434 $generated@@557)) $generated@@554))
 :pattern ( ($generated@@87 ($generated@@85 $generated@@555 $generated@@556) ($generated@@434 $generated@@557)) ($generated@@137 $generated@@554))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@173) (= (type $generated@@561) $generated@@173)) (< ($generated@@558 $generated@@560) ($generated@@559 ($generated@@239 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@239 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@173) (= (type $generated@@563) $generated@@173)) (< ($generated@@558 $generated@@563) ($generated@@559 ($generated@@239 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@239 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (and (and (= (type $generated@@564) $generated@@173) (= (type $generated@@565) $generated@@67)) (= (type $generated@@566) $generated@@67)) ($generated@@240 $generated@@564 ($generated@@415 $generated@@565 $generated@@566))) (and (= ($generated@@287 ($generated@@387 ($generated@@312 $generated@@173 $generated@@173) $generated@@564)) $generated@@564) ($generated@@140 ($generated@@387 ($generated@@312 $generated@@173 $generated@@173) $generated@@564) ($generated@@415 $generated@@565 $generated@@566))))
 :pattern ( ($generated@@240 $generated@@564 ($generated@@415 $generated@@565 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@173) (= (type $generated@@568) $generated@@67)) (= (type $generated@@569) $generated@@67)) ($generated@@240 $generated@@567 ($generated@@423 $generated@@568 $generated@@569))) (and (= ($generated@@287 ($generated@@387 ($generated@@330 $generated@@173 $generated@@173) $generated@@567)) $generated@@567) ($generated@@140 ($generated@@387 ($generated@@330 $generated@@173 $generated@@173) $generated@@567) ($generated@@423 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@240 $generated@@567 ($generated@@423 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@67) (= (type $generated@@571) $generated@@67)) (= (type $generated@@572) $generated@@173)) ($generated@@240 $generated@@572 ($generated@@163 $generated@@570 $generated@@571))) (and (= ($generated@@287 ($generated@@387 $generated@@164 $generated@@572)) $generated@@572) ($generated@@140 ($generated@@387 $generated@@164 $generated@@572) ($generated@@163 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@240 $generated@@572 ($generated@@163 $generated@@570 $generated@@571)))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@573)))
 (not ($generated@@0 ($generated@@85 ($generated@@440 $generated@@574) $generated@@573))))
 :pattern ( (let (($generated@@574 (type $generated@@573)))
($generated@@85 ($generated@@440 $generated@@574) $generated@@573)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@67) (= (type $generated@@576) $generated@@67)) (and (= ($generated@@76 ($generated@@163 $generated@@575 $generated@@576)) $generated@@64) (= ($generated@@306 ($generated@@163 $generated@@575 $generated@@576)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@164) (= ($generated@@558 ($generated@@287 $generated@@577)) ($generated@@559 $generated@@577)))
 :pattern ( ($generated@@558 ($generated@@287 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@173) ($generated@@240 $generated@@578 ($generated@@79 0))) (and (= ($generated@@287 ($generated@@387 $generated@@2 $generated@@578)) $generated@@578) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@578) ($generated@@79 0))))
 :pattern ( ($generated@@240 $generated@@578 ($generated@@79 0)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@173) (= (type $generated@@580) $generated@@67)) ($generated@@240 $generated@@579 ($generated@@249 $generated@@580))) (and (= ($generated@@287 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@579)) $generated@@579) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@579) ($generated@@249 $generated@@580))))
 :pattern ( ($generated@@240 $generated@@579 ($generated@@249 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@173) (= (type $generated@@582) $generated@@67)) ($generated@@240 $generated@@581 ($generated@@254 $generated@@582))) (and (= ($generated@@287 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@581)) $generated@@581) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@4) $generated@@581) ($generated@@254 $generated@@582))))
 :pattern ( ($generated@@240 $generated@@581 ($generated@@254 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@173) (= (type $generated@@584) $generated@@67)) ($generated@@240 $generated@@583 ($generated@@178 $generated@@584))) (and (= ($generated@@287 ($generated@@387 ($generated@@80 $generated@@173 $generated@@2) $generated@@583)) $generated@@583) ($generated@@140 ($generated@@387 ($generated@@80 $generated@@173 $generated@@2) $generated@@583) ($generated@@178 $generated@@584))))
 :pattern ( ($generated@@240 $generated@@583 ($generated@@178 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@173) (= (type $generated@@586) $generated@@67)) ($generated@@240 $generated@@585 ($generated@@507 $generated@@586))) (and (= ($generated@@287 ($generated@@387 ($generated@@279 $generated@@173) $generated@@585)) $generated@@585) ($generated@@140 ($generated@@387 ($generated@@279 $generated@@173) $generated@@585) ($generated@@507 $generated@@586))))
 :pattern ( ($generated@@240 $generated@@585 ($generated@@507 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@67) (= (type $generated@@588) $generated@@173)) ($generated@@240 $generated@@588 ($generated@@137 $generated@@587))) (and (= ($generated@@287 ($generated@@387 $generated@@81 $generated@@588)) $generated@@588) ($generated@@140 ($generated@@387 $generated@@81 $generated@@588) ($generated@@137 $generated@@587))))
 :pattern ( ($generated@@240 $generated@@588 ($generated@@137 $generated@@587)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@67) (= (type $generated@@590) $generated@@173)) ($generated@@240 $generated@@590 ($generated@@157 $generated@@589))) (and (= ($generated@@287 ($generated@@387 $generated@@81 $generated@@590)) $generated@@590) ($generated@@140 ($generated@@387 $generated@@81 $generated@@590) ($generated@@157 $generated@@589))))
 :pattern ( ($generated@@240 $generated@@590 ($generated@@157 $generated@@589)))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@80 $generated@@173 $generated@@2)) (= (type $generated@@592) $generated@@67)) (= (type $generated@@593) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@591 ($generated@@178 $generated@@592) $generated@@593) (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@173) (< 0 ($generated ($generated@@85 $generated@@591 $generated@@594)))) ($generated@@265 $generated@@594 $generated@@592 $generated@@593))
 :pattern ( ($generated@@85 $generated@@591 $generated@@594))
))))
 :pattern ( ($generated@@78 $generated@@591 ($generated@@178 $generated@@592) $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@164) (= (type $generated@@596) $generated@@67)) (= (type $generated@@597) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@597) (and ($generated@@162 $generated@@595) (exists (($generated@@598 T@U) ) (!  (and (= (type $generated@@598) $generated@@67) ($generated@@78 $generated@@595 ($generated@@163 $generated@@596 $generated@@598) $generated@@597))
 :pattern ( ($generated@@78 $generated@@595 ($generated@@163 $generated@@596 $generated@@598) $generated@@597))
))))) ($generated@@265 ($generated@@171 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@265 ($generated@@171 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@164) (= (type $generated@@600) $generated@@67)) (= (type $generated@@601) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@152 $generated@@601) (and ($generated@@162 $generated@@599) (exists (($generated@@602 T@U) ) (!  (and (= (type $generated@@602) $generated@@67) ($generated@@78 $generated@@599 ($generated@@163 $generated@@602 $generated@@600) $generated@@601))
 :pattern ( ($generated@@78 $generated@@599 ($generated@@163 $generated@@602 $generated@@600) $generated@@601))
))))) ($generated@@265 ($generated@@172 $generated@@599) $generated@@600 $generated@@601))
 :pattern ( ($generated@@265 ($generated@@172 $generated@@599) $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@173) (= (type $generated@@604) $generated@@173)) (= ($generated@@239 ($generated@@261 $generated@@603) ($generated@@261 $generated@@604)) ($generated@@261 ($generated@@239 $generated@@603 $generated@@604))))
 :pattern ( ($generated@@239 ($generated@@261 $generated@@603) ($generated@@261 $generated@@604)))
)))
(assert (forall (($generated@@605 Int) ) (! (= ($generated@@287 ($generated@@8 ($generated@@259 $generated@@605))) ($generated@@261 ($generated@@287 ($generated@@8 $generated@@605))))
 :pattern ( ($generated@@287 ($generated@@8 ($generated@@259 $generated@@605))))
)))
(assert (forall (($generated@@606 T@U) ) (! (= ($generated@@287 ($generated@@261 $generated@@606)) ($generated@@261 ($generated@@287 $generated@@606)))
 :pattern ( ($generated@@287 ($generated@@261 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (! (let (($generated@@608 ($generated@@280 (type $generated@@607))))
 (=> (and (= (type $generated@@607) ($generated@@279 $generated@@608)) (= ($generated@@278 $generated@@607) 0)) (= $generated@@607 ($generated@@277 $generated@@608))))
 :pattern ( ($generated@@278 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (! (let (($generated@@612 (type $generated@@610)))
 (=> (and (and (= (type $generated@@609) ($generated@@80 $generated@@612 $generated@@2)) (= (type $generated@@611) $generated@@2)) (<= 0 ($generated $generated@@611))) (= ($generated@@300 ($generated@@86 $generated@@609 $generated@@610 $generated@@611)) (+ (- ($generated@@300 $generated@@609) ($generated ($generated@@85 $generated@@609 $generated@@610))) ($generated $generated@@611)))))
 :pattern ( ($generated@@300 ($generated@@86 $generated@@609 $generated@@610 $generated@@611)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@614) $generated@@2)) ($generated@@78 $generated@@614 $generated@@46 $generated@@613))
 :pattern ( ($generated@@78 $generated@@614 $generated@@46 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@616) $generated@@3)) ($generated@@78 $generated@@616 $generated@@47 $generated@@615))
 :pattern ( ($generated@@78 $generated@@616 $generated@@47 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@618) $generated@@4)) ($generated@@78 $generated@@618 $generated@@44 $generated@@617))
 :pattern ( ($generated@@78 $generated@@618 $generated@@44 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@620) $generated@@464)) ($generated@@78 $generated@@620 $generated@@45 $generated@@619))
 :pattern ( ($generated@@78 $generated@@620 $generated@@45 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@622) $generated@@173)) ($generated@@78 $generated@@622 $generated@@48 $generated@@621))
 :pattern ( ($generated@@78 $generated@@622 $generated@@48 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) ($generated@@279 $generated@@173)) (= (type $generated@@624) $generated@@67)) (= ($generated@@140 $generated@@623 ($generated@@507 $generated@@624)) (forall (($generated@@625 Int) ) (!  (=> (and (<= 0 $generated@@625) (< $generated@@625 ($generated@@278 $generated@@623))) ($generated@@240 ($generated@@508 $generated@@623 $generated@@625) $generated@@624))
 :pattern ( ($generated@@508 $generated@@623 $generated@@625))
))))
 :pattern ( ($generated@@140 $generated@@623 ($generated@@507 $generated@@624)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 Int) ) (!  (=> (= (type $generated@@627) ($generated@@279 $generated@@173)) (=> (and (<= 0 $generated@@628) (< $generated@@628 ($generated@@278 $generated@@627))) (< ($generated@@559 ($generated@@387 $generated@@164 ($generated@@508 $generated@@627 $generated@@628))) ($generated@@626 $generated@@627))))
 :pattern ( ($generated@@559 ($generated@@387 $generated@@164 ($generated@@508 $generated@@627 $generated@@628))))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) ($generated@@312 $generated@@173 $generated@@173)) (= (type $generated@@630) $generated@@67)) (= (type $generated@@631) $generated@@67)) ($generated@@140 $generated@@629 ($generated@@415 $generated@@630 $generated@@631))) (and (and ($generated@@140 ($generated@@310 $generated@@629) ($generated@@249 $generated@@630)) ($generated@@140 ($generated@@355 $generated@@629) ($generated@@249 $generated@@631))) ($generated@@140 ($generated@@386 $generated@@629) ($generated@@249 ($generated@@163 $generated@@630 $generated@@631)))))
 :pattern ( ($generated@@140 $generated@@629 ($generated@@415 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) ($generated@@330 $generated@@173 $generated@@173)) (= (type $generated@@633) $generated@@67)) (= (type $generated@@634) $generated@@67)) ($generated@@140 $generated@@632 ($generated@@423 $generated@@633 $generated@@634))) (and (and ($generated@@140 ($generated@@328 $generated@@632) ($generated@@254 $generated@@633)) ($generated@@140 ($generated@@366 $generated@@632) ($generated@@254 $generated@@634))) ($generated@@140 ($generated@@397 $generated@@632) ($generated@@254 ($generated@@163 $generated@@633 $generated@@634)))))
 :pattern ( ($generated@@140 $generated@@632 ($generated@@423 $generated@@633 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@2) ($generated@@140 $generated@@635 $generated@@46))
 :pattern ( ($generated@@140 $generated@@635 $generated@@46))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@3) ($generated@@140 $generated@@636 $generated@@47))
 :pattern ( ($generated@@140 $generated@@636 $generated@@47))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@4) ($generated@@140 $generated@@637 $generated@@44))
 :pattern ( ($generated@@140 $generated@@637 $generated@@44))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@464) ($generated@@140 $generated@@638 $generated@@45))
 :pattern ( ($generated@@140 $generated@@638 $generated@@45))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@173) ($generated@@140 $generated@@639 $generated@@48))
 :pattern ( ($generated@@140 $generated@@639 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@640 () Int)
(declare-fun $generated@@641 () Int)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 (T@U) Bool)
(declare-fun $generated@@646 () Int)
(assert  (and (and (= (type $generated@@642) $generated@@81) (= (type $generated@@643) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@644) ($generated@@185 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@647 true))
(let (($generated@@648  (=> (and (=> (and (and (<= ($generated@@259 0) $generated@@640) (< $generated@@640 $generated@@641)) (< $generated@@641 ($generated@@136 $generated@@642))) (<= ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@643 $generated@@642) ($generated@@434 $generated@@640)))) ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@643 $generated@@642) ($generated@@434 $generated@@641)))))) (= (ControlFlow 0 8) 1)) $generated@@647)))
(let (($generated@@649  (=> (and (<= ($generated@@259 0) $generated@@640) (< $generated@@640 $generated@@641)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (not (= $generated@@642 $generated@@138))) (=> (not (= $generated@@642 $generated@@138)) (=> (< $generated@@641 ($generated@@136 $generated@@642)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (not (= $generated@@642 $generated@@138))) (=> (not (= $generated@@642 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= 0 $generated@@640) (< $generated@@640 ($generated@@136 $generated@@642)))) (=> (and (<= 0 $generated@@640) (< $generated@@640 ($generated@@136 $generated@@642))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@642 $generated@@138))) (=> (not (= $generated@@642 $generated@@138)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 $generated@@641) (< $generated@@641 ($generated@@136 $generated@@642)))) (=> (and (<= 0 $generated@@641) (< $generated@@641 ($generated@@136 $generated@@642))) (=> (and (<= ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@643 $generated@@642) ($generated@@434 $generated@@640)))) ($generated ($generated@@387 $generated@@2 ($generated@@87 ($generated@@85 $generated@@643 $generated@@642) ($generated@@434 $generated@@641))))) (= (ControlFlow 0 2) 1)) $generated@@647)))))))))))))))
(let (($generated@@650  (=> (= $generated@@644 ($generated@@184 $generated@@138 $generated@@643 $generated@@60 false)) (and (=> (= (ControlFlow 0 9) 2) $generated@@649) (=> (= (ControlFlow 0 9) 8) $generated@@648)))))
(let (($generated@@651  (=> (and ($generated@@152 $generated@@643) ($generated@@645 $generated@@643)) (=> (and (and ($generated@@140 $generated@@642 ($generated@@157 $generated@@46)) ($generated@@78 $generated@@642 ($generated@@157 $generated@@46) $generated@@643)) (and (= 2 $generated@@646) (= (ControlFlow 0 10) 9))) $generated@@650))))
$generated@@651))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) Int)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (Int) T@U)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@U) Int)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 (T@U T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@176 (T@U T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 () T@T)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@190 (T@U T@U T@U) T@U)
(declare-fun $generated@@191 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@192 (T@T T@T) T@T)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@195 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) T@U)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (Int) Int)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@310 (T@U) Int)
(declare-fun $generated@@311 (T@T) T@U)
(declare-fun $generated@@316 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@T T@T) T@U)
(declare-fun $generated@@340 (T@T T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@359 (T@T T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@382 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@411 (T@U) T@U)
(declare-fun $generated@@428 (T@U T@U) T@U)
(declare-fun $generated@@436 (T@U T@U) T@U)
(declare-fun $generated@@447 (Int) T@U)
(declare-fun $generated@@453 (T@T) T@U)
(declare-fun $generated@@477 () T@T)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@521 (T@U Int) T@U)
(declare-fun $generated@@530 (T@U) Int)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@544 (T@U) T@U)
(declare-fun $generated@@549 (T@U) Int)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@554 (T@U) T@U)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@572 (T@U) Int)
(declare-fun $generated@@644 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (= ($generated@@78 $generated@@60) 0))
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@71)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@44) $generated@@49))
(assert (= ($generated@@79 $generated@@45) $generated@@50))
(assert (= ($generated@@79 $generated@@46) $generated@@51))
(assert (= ($generated@@79 $generated@@47) $generated@@52))
(assert (= ($generated@@79 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@92 $generated@@93)) 11)) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@83 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@83 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@83 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@83 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@83 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 12)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@73 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@85)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@73 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ) (! (= (type ($generated@@82 $generated@@136)) $generated@@70)
 :pattern ( ($generated@@82 $generated@@136))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@2) (= (type $generated@@138) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
 :pattern ( ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
)))
(assert  (and (and (forall (($generated@@144 T@U) ) (! (= (type ($generated@@140 $generated@@144)) $generated@@70)
 :pattern ( ($generated@@140 $generated@@144))
)) (= (type $generated@@141) $generated@@84)) (forall (($generated@@145 T@U) ) (! (= (type ($generated@@142 $generated@@145)) $generated@@70)
 :pattern ( ($generated@@142 $generated@@145))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (= (type $generated@@146) $generated@@70) (= (type $generated@@147) $generated@@84)) (and (not (= $generated@@147 $generated@@141)) (= ($generated@@142 $generated@@147) ($generated@@140 $generated@@146)))) ($generated@@143 ($generated@@8 ($generated@@139 $generated@@147)) $generated@@46))
 :pattern ( ($generated@@139 $generated@@147) ($generated@@140 $generated@@146))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@149) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@150) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@148 $generated@@149 $generated@@150)) (forall (($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@84) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@149 $generated@@151) $generated@@60))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@150 $generated@@151) $generated@@60)))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@150 $generated@@151) $generated@@60))
)))
 :pattern ( ($generated@@148 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@70) (= (type $generated@@153) $generated@@84)) (= (type $generated@@154) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@153 ($generated@@140 $generated@@152) $generated@@154)  (or (= $generated@@153 $generated@@141) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@154 $generated@@153) $generated@@60)))))
 :pattern ( ($generated@@81 $generated@@153 ($generated@@140 $generated@@152) $generated@@154))
)))
(assert (= (type $generated@@155) $generated@@70))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@84) (= (type $generated@@157) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@156 $generated@@155 $generated@@157)  (or (= $generated@@156 $generated@@141) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@157 $generated@@156) $generated@@60)))))
 :pattern ( ($generated@@81 $generated@@156 $generated@@155 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (and (= (type $generated@@159) $generated@@70) (= (type $generated@@160) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@161) $generated@@84)) (and (and ($generated@@158 $generated@@160) (and (not (= $generated@@161 $generated@@141)) (= ($generated@@142 $generated@@161) ($generated@@140 $generated@@159)))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@160 $generated@@161) $generated@@60)))) ($generated@@81 ($generated@@8 ($generated@@139 $generated@@161)) $generated@@46 $generated@@160))
 :pattern ( ($generated@@139 $generated@@161) ($generated@@90 ($generated@@88 $generated@@160 $generated@@161) $generated@@60) ($generated@@140 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> (= (type $generated@@162) $generated@@2) ($generated@@143 $generated@@162 ($generated@@82 0)))
 :pattern ( ($generated@@143 $generated@@162 ($generated@@82 0)))
)))
(assert (forall (($generated@@164 T@U) ) (! (= (type ($generated@@163 $generated@@164)) $generated@@70)
 :pattern ( ($generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@70) (= (type $generated@@166) $generated@@84)) (= (type $generated@@167) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@166 ($generated@@163 $generated@@165) $generated@@167) ($generated@@81 $generated@@166 ($generated@@140 $generated@@165) $generated@@167)))
 :pattern ( ($generated@@81 $generated@@166 ($generated@@163 $generated@@165) $generated@@167))
)))
(assert  (and (= ($generated@@1 $generated@@170) 14) (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= (type ($generated@@169 $generated@@171 $generated@@172)) $generated@@70)
 :pattern ( ($generated@@169 $generated@@171 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (and (= (type $generated@@173) $generated@@70) (= (type $generated@@174) $generated@@70)) (= (type $generated@@175) $generated@@170)) ($generated@@143 $generated@@175 ($generated@@169 $generated@@173 $generated@@174))) ($generated@@168 $generated@@175))
 :pattern ( ($generated@@168 $generated@@175) ($generated@@143 $generated@@175 ($generated@@169 $generated@@173 $generated@@174)))
)))
(assert  (and (and (= ($generated@@1 $generated@@179) 15) (forall (($generated@@180 T@U) ) (! (= (type ($generated@@177 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@177 $generated@@180))
))) (forall (($generated@@181 T@U) ) (! (= (type ($generated@@178 $generated@@181)) $generated@@179)
 :pattern ( ($generated@@178 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) $generated@@170) (= (type $generated@@183) $generated@@170)) true) (= ($generated@@176 $generated@@182 $generated@@183)  (and (= ($generated@@177 $generated@@182) ($generated@@177 $generated@@183)) (= ($generated@@178 $generated@@182) ($generated@@178 $generated@@183)))))
 :pattern ( ($generated@@176 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@70)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@83 $generated@@179 $generated@@2)) (= (type $generated@@188) $generated@@70)) ($generated@@143 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@143 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert (forall (($generated@@189 T@U) ) (!  (=> (= (type $generated@@189) $generated@@84) (= ($generated@@143 $generated@@189 $generated@@155)  (or (= $generated@@189 $generated@@141) (= ($generated@@142 $generated@@189) $generated@@155))))
 :pattern ( ($generated@@143 $generated@@189 $generated@@155))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (= ($generated@@1 ($generated@@192 $generated@@196 $generated@@197)) 16)) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@193 ($generated@@192 $generated@@198 $generated@@199)) $generated@@198)
 :pattern ( ($generated@@192 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@194 ($generated@@192 $generated@@200 $generated@@201)) $generated@@201)
 :pattern ( ($generated@@192 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@194 (type $generated@@202))))
(= (type ($generated@@190 $generated@@202 $generated@@203 $generated@@204)) $generated@@205))
 :pattern ( ($generated@@190 $generated@@202 $generated@@203 $generated@@204))
))) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 (type $generated@@209)))
(let (($generated@@211 (type $generated@@207)))
(= (type ($generated@@195 $generated@@206 $generated@@207 $generated@@208 $generated@@209)) ($generated@@192 $generated@@211 $generated@@210))))
 :pattern ( ($generated@@195 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
))) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (let (($generated@@216 ($generated@@194 (type $generated@@212))))
 (=> (= (type $generated@@215) $generated@@216) (= ($generated@@190 ($generated@@195 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@213 $generated@@214) $generated@@215)))
 :weight 0
))) (and (and (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@190 ($generated@@195 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@190 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (or (= $generated@@226 $generated@@228) (= ($generated@@190 ($generated@@195 $generated@@224 $generated@@225 $generated@@226 $generated@@223) $generated@@227 $generated@@228) ($generated@@190 $generated@@224 $generated@@227 $generated@@228)))
 :weight 0
))) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or true (= ($generated@@190 ($generated@@195 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@190 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
)))) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ) (! (= (type ($generated@@191 $generated@@235 $generated@@236 $generated@@237 $generated@@238)) ($generated@@192 $generated@@84 $generated@@4))
 :pattern ( ($generated@@191 $generated@@235 $generated@@236 $generated@@237 $generated@@238))
))))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@73 (type $generated@@244))))
 (=> (and (and (and (and (= (type $generated@@239) $generated@@84) (= (type $generated@@240) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@241) ($generated@@72 $generated@@4))) (= (type $generated@@243) $generated@@84)) (= (type $generated@@244) ($generated@@72 $generated@@245))) (= ($generated@@0 ($generated@@190 ($generated@@191 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))  (=> (and (not (= $generated@@243 $generated@@239)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@240 $generated@@243) $generated@@241))) $generated@@242))))
 :pattern ( ($generated@@190 ($generated@@191 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))
)))
(assert (= (type $generated@@246) $generated@@70))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@84) (= (type $generated@@248) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@247 $generated@@246 $generated@@248) ($generated@@81 $generated@@247 $generated@@155 $generated@@248)))
 :pattern ( ($generated@@81 $generated@@247 $generated@@246 $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@249 $generated@@251 $generated@@252)) $generated@@170)
 :pattern ( ($generated@@249 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (= (type $generated@@253) $generated@@70) (= (type $generated@@254) $generated@@70)) (= (type $generated@@255) $generated@@179)) (= (type $generated@@256) $generated@@179)) (= ($generated@@143 ($generated@@249 $generated@@255 $generated@@256) ($generated@@169 $generated@@253 $generated@@254))  (and ($generated@@250 $generated@@255 $generated@@253) ($generated@@250 $generated@@256 $generated@@254))))
 :pattern ( ($generated@@143 ($generated@@249 $generated@@255 $generated@@256) ($generated@@169 $generated@@253 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@170) (= (type $generated@@258) $generated@@170)) (= ($generated@@176 $generated@@257 $generated@@258) (= $generated@@257 $generated@@258)))
 :pattern ( ($generated@@176 $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@260 T@U) ) (! (= (type ($generated@@259 $generated@@260)) $generated@@70)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) ($generated@@83 $generated@@179 $generated@@4)) (= (type $generated@@262) $generated@@70)) (= ($generated@@143 $generated@@261 ($generated@@259 $generated@@262)) (forall (($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@179) ($generated@@0 ($generated@@88 $generated@@261 $generated@@263))) ($generated@@250 $generated@@263 $generated@@262))
 :pattern ( ($generated@@88 $generated@@261 $generated@@263))
))))
 :pattern ( ($generated@@143 $generated@@261 ($generated@@259 $generated@@262)))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@70)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@83 $generated@@179 $generated@@4)) (= (type $generated@@267) $generated@@70)) (= ($generated@@143 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@179) ($generated@@0 ($generated@@88 $generated@@266 $generated@@268))) ($generated@@250 $generated@@268 $generated@@267))
 :pattern ( ($generated@@88 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@143 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 Int) ) (! (= ($generated@@269 $generated@@270) $generated@@270)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ) (! (let (($generated@@273 (type $generated@@272)))
(= (type ($generated@@271 $generated@@272)) $generated@@273))
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ) (! (= ($generated@@271 $generated@@274) $generated@@274)
 :pattern ( ($generated@@271 $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@70) (= (type $generated@@277) $generated@@70)) (= (type $generated@@278) $generated@@179)) (= (type $generated@@279) $generated@@179)) (= (type $generated@@280) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@158 $generated@@280)) (= ($generated@@81 ($generated@@249 $generated@@278 $generated@@279) ($generated@@169 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@81 ($generated@@249 $generated@@278 $generated@@279) ($generated@@169 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@74)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@170) (= ($generated@@168 $generated@@283) (= ($generated@@281 $generated@@283) $generated@@63)))
 :pattern ( ($generated@@168 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@170) ($generated@@168 $generated@@284)) (exists (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (and (and (= (type $generated@@285) $generated@@179) (= (type $generated@@286) $generated@@179)) (= $generated@@284 ($generated@@249 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@285)
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@168 $generated@@284))
)))
(assert  (and (and (forall (($generated@@291 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@291)) 17)) (forall (($generated@@292 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@289 $generated@@292))
))) (forall (($generated@@293 T@T) ) (! (= (type ($generated@@287 $generated@@293)) ($generated@@289 $generated@@293))
 :pattern ( ($generated@@287 $generated@@293))
))))
(assert (forall (($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@294)) 0)
 :pattern ( ($generated@@287 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@70) (= (type $generated@@296) $generated@@84)) (= ($generated@@143 $generated@@296 ($generated@@163 $generated@@295))  (and ($generated@@143 $generated@@296 ($generated@@140 $generated@@295)) (not (= $generated@@296 $generated@@141)))))
 :pattern ( ($generated@@143 $generated@@296 ($generated@@163 $generated@@295)))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@179)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@70) (= (type $generated@@301) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@275 ($generated@@297 $generated@@299) $generated@@300 $generated@@301) ($generated@@81 $generated@@299 $generated@@300 $generated@@301)))
 :pattern ( ($generated@@275 ($generated@@297 $generated@@299) $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@302) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@303) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@304) $generated@@179)) (= (type $generated@@305) $generated@@70)) ($generated@@148 $generated@@302 $generated@@303)) ($generated@@275 $generated@@304 $generated@@305 $generated@@302)) ($generated@@275 $generated@@304 $generated@@305 $generated@@303))
 :pattern ( ($generated@@148 $generated@@302 $generated@@303) ($generated@@275 $generated@@304 $generated@@305 $generated@@302))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@306) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@307) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@309) $generated@@70)) ($generated@@148 $generated@@306 $generated@@307)) ($generated@@81 $generated@@308 $generated@@309 $generated@@306)) ($generated@@81 $generated@@308 $generated@@309 $generated@@307))
 :pattern ( ($generated@@148 $generated@@306 $generated@@307) ($generated@@81 $generated@@308 $generated@@309 $generated@@306))
)))
(assert (forall (($generated@@312 T@T) ) (! (= (type ($generated@@311 $generated@@312)) ($generated@@83 $generated@@312 $generated@@2))
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (! (let (($generated@@314 ($generated@@86 (type $generated@@313))))
 (=> (= (type $generated@@313) ($generated@@83 $generated@@314 $generated@@2)) (and (= (= ($generated@@310 $generated@@313) 0) (= $generated@@313 ($generated@@311 $generated@@314))) (=> (not (= ($generated@@310 $generated@@313) 0)) (exists (($generated@@315 T@U) ) (!  (and (= (type $generated@@315) $generated@@314) (< 0 ($generated ($generated@@88 $generated@@313 $generated@@315))))
 :no-pattern (type $generated@@315)
 :no-pattern ($generated $generated@@315)
 :no-pattern ($generated@@0 $generated@@315)
))))))
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@317 T@U) ) (! (= (type ($generated@@316 $generated@@317)) $generated@@75)
 :pattern ( ($generated@@316 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@70) (and (= ($generated@@79 ($generated@@140 $generated@@318)) $generated@@61) (= ($generated@@316 ($generated@@140 $generated@@318)) $generated@@67)))
 :pattern ( ($generated@@140 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@70) (and (= ($generated@@79 ($generated@@163 $generated@@319)) $generated@@62) (= ($generated@@316 ($generated@@163 $generated@@319)) $generated@@67)))
 :pattern ( ($generated@@163 $generated@@319))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 18)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@83 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@88 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@88 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert  (and (and (and (and (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (= ($generated@@1 ($generated@@340 $generated@@343 $generated@@344)) 19)) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@341 ($generated@@340 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@340 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@342 ($generated@@340 $generated@@347 $generated@@348)) $generated@@348)
 :pattern ( ($generated@@340 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@341 (type $generated@@349))))
(= (type ($generated@@338 $generated@@349)) ($generated@@83 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@349))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= (type ($generated@@339 $generated@@351 $generated@@352)) ($generated@@340 $generated@@351 $generated@@352))
 :pattern ( ($generated@@339 $generated@@351 $generated@@352))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@T) ) (! (let (($generated@@355 (type $generated@@353)))
 (not ($generated@@0 ($generated@@88 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353))))
 :pattern ( (let (($generated@@355 (type $generated@@353)))
($generated@@88 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353)))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@86 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@83 $generated@@357 $generated@@2)) (= ($generated@@185 $generated@@356) (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@357) (and (<= 0 ($generated ($generated@@88 $generated@@356 $generated@@358))) (<= ($generated ($generated@@88 $generated@@356 $generated@@358)) ($generated@@310 $generated@@356))))
 :pattern ( ($generated@@88 $generated@@356 $generated@@358))
)))))
 :pattern ( ($generated@@185 $generated@@356))
)))
(assert (forall (($generated@@360 T@T) ($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@360 $generated@@361)) $generated@@360)
 :pattern ( ($generated@@359 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@179) ($generated@@250 $generated@@362 $generated@@155)) (and (= ($generated@@297 ($generated@@359 $generated@@84 $generated@@362)) $generated@@362) ($generated@@143 ($generated@@359 $generated@@84 $generated@@362) $generated@@155)))
 :pattern ( ($generated@@250 $generated@@362 $generated@@155))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@179) ($generated@@250 $generated@@363 $generated@@246)) (and (= ($generated@@297 ($generated@@359 $generated@@84 $generated@@363)) $generated@@363) ($generated@@143 ($generated@@359 $generated@@84 $generated@@363) $generated@@246)))
 :pattern ( ($generated@@250 $generated@@363 $generated@@246))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@70) (= (type $generated@@365) $generated@@84)) (= ($generated@@143 $generated@@365 ($generated@@140 $generated@@364))  (or (= $generated@@365 $generated@@141) (= ($generated@@142 $generated@@365) ($generated@@140 $generated@@364)))))
 :pattern ( ($generated@@143 $generated@@365 ($generated@@140 $generated@@364)))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@84) (= ($generated@@143 $generated@@366 $generated@@246)  (and ($generated@@143 $generated@@366 $generated@@155) (not (= $generated@@366 $generated@@141)))))
 :pattern ( ($generated@@143 $generated@@366 $generated@@246))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@324 (type $generated@@367))))
(let (($generated@@369 ($generated@@323 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@322 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@321 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) ($generated@@0 ($generated@@88 ($generated@@320 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@320 $generated@@367))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@324 (type $generated@@372))))
(= (type ($generated@@371 $generated@@372)) ($generated@@83 $generated@@373 $generated@@4)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@324 (type $generated@@374))))
(let (($generated@@376 ($generated@@323 (type $generated@@374))))
 (=> (= (type $generated@@374) ($generated@@322 $generated@@376 $generated@@375)) (or (= $generated@@374 ($generated@@321 $generated@@376 $generated@@375)) (exists (($generated@@377 T@U) ) (!  (and (= (type $generated@@377) $generated@@375) ($generated@@0 ($generated@@88 ($generated@@371 $generated@@374) $generated@@377)))
 :no-pattern (type $generated@@377)
 :no-pattern ($generated $generated@@377)
 :no-pattern ($generated@@0 $generated@@377)
))))))
 :pattern ( ($generated@@371 $generated@@374))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@342 (type $generated@@378))))
(let (($generated@@380 ($generated@@341 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@340 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@339 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@380) ($generated@@0 ($generated@@88 ($generated@@338 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@338 $generated@@378))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@342 (type $generated@@383))))
(= (type ($generated@@382 $generated@@383)) ($generated@@83 $generated@@384 $generated@@4)))
 :pattern ( ($generated@@382 $generated@@383))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@342 (type $generated@@385))))
(let (($generated@@387 ($generated@@341 (type $generated@@385))))
 (=> (= (type $generated@@385) ($generated@@340 $generated@@387 $generated@@386)) (or (= $generated@@385 ($generated@@339 $generated@@387 $generated@@386)) (exists (($generated@@388 T@U) ) (!  (and (= (type $generated@@388) $generated@@386) ($generated@@0 ($generated@@88 ($generated@@382 $generated@@385) $generated@@388)))
 :no-pattern (type $generated@@388)
 :no-pattern ($generated $generated@@388)
 :no-pattern ($generated@@0 $generated@@388)
))))))
 :pattern ( ($generated@@382 $generated@@385))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@389) ($generated@@83 $generated@@179 $generated@@2)) (= (type $generated@@390) $generated@@70)) (= ($generated@@143 $generated@@389 ($generated@@184 $generated@@390)) (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@179) (< 0 ($generated ($generated@@88 $generated@@389 $generated@@391)))) ($generated@@250 $generated@@391 $generated@@390))
 :pattern ( ($generated@@88 $generated@@389 $generated@@391))
))))
 :pattern ( ($generated@@143 $generated@@389 ($generated@@184 $generated@@390)))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (and (= (type $generated@@392) ($generated@@83 $generated@@179 $generated@@4)) (= (type $generated@@393) $generated@@70)) (= (type $generated@@394) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@392 ($generated@@259 $generated@@393) $generated@@394) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@179) ($generated@@0 ($generated@@88 $generated@@392 $generated@@395))) ($generated@@275 $generated@@395 $generated@@393 $generated@@394))
 :pattern ( ($generated@@88 $generated@@392 $generated@@395))
))))
 :pattern ( ($generated@@81 $generated@@392 ($generated@@259 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@83 $generated@@179 $generated@@4)) (= (type $generated@@397) $generated@@70)) (= (type $generated@@398) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@396 ($generated@@264 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@179) ($generated@@0 ($generated@@88 $generated@@396 $generated@@399))) ($generated@@275 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@88 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@81 $generated@@396 ($generated@@264 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 (type $generated@@400)))
(= ($generated ($generated@@88 ($generated@@311 $generated@@401) $generated@@400)) 0))
 :pattern ( (let (($generated@@401 (type $generated@@400)))
($generated@@88 ($generated@@311 $generated@@401) $generated@@400)))
)))
(assert  (and (forall (($generated@@404 T@U) ) (! (= (type ($generated@@402 $generated@@404)) ($generated@@83 $generated@@179 $generated@@4))
 :pattern ( ($generated@@402 $generated@@404))
)) (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@324 (type $generated@@405))))
(let (($generated@@407 ($generated@@323 (type $generated@@405))))
(= (type ($generated@@403 $generated@@405)) ($generated@@83 $generated@@407 $generated@@406))))
 :pattern ( ($generated@@403 $generated@@405))
))))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@408) ($generated@@322 $generated@@179 $generated@@179)) (= (type $generated@@409) $generated@@179)) (= ($generated@@0 ($generated@@88 ($generated@@402 $generated@@408) $generated@@409))  (and ($generated@@0 ($generated@@88 ($generated@@320 $generated@@408) ($generated@@177 ($generated@@359 $generated@@170 $generated@@409)))) (= ($generated@@88 ($generated@@403 $generated@@408) ($generated@@177 ($generated@@359 $generated@@170 $generated@@409))) ($generated@@178 ($generated@@359 $generated@@170 $generated@@409))))))
 :pattern ( ($generated@@88 ($generated@@402 $generated@@408) $generated@@409))
)))
(assert  (and (forall (($generated@@412 T@U) ) (! (= (type ($generated@@410 $generated@@412)) ($generated@@83 $generated@@179 $generated@@4))
 :pattern ( ($generated@@410 $generated@@412))
)) (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@342 (type $generated@@413))))
(let (($generated@@415 ($generated@@341 (type $generated@@413))))
(= (type ($generated@@411 $generated@@413)) ($generated@@83 $generated@@415 $generated@@414))))
 :pattern ( ($generated@@411 $generated@@413))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (= (type $generated@@416) ($generated@@340 $generated@@179 $generated@@179)) (= (type $generated@@417) $generated@@179)) (= ($generated@@0 ($generated@@88 ($generated@@410 $generated@@416) $generated@@417))  (and ($generated@@0 ($generated@@88 ($generated@@338 $generated@@416) ($generated@@177 ($generated@@359 $generated@@170 $generated@@417)))) (= ($generated@@88 ($generated@@411 $generated@@416) ($generated@@177 ($generated@@359 $generated@@170 $generated@@417))) ($generated@@178 ($generated@@359 $generated@@170 $generated@@417))))))
 :pattern ( ($generated@@88 ($generated@@410 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@323 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@322 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@88 ($generated@@371 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@88 ($generated@@320 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@88 ($generated@@403 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@88 ($generated@@320 $generated@@418) $generated@@422))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@88 ($generated@@371 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(let (($generated@@426 ($generated@@341 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@340 $generated@@426 $generated@@425)) (= ($generated@@0 ($generated@@88 ($generated@@382 $generated@@423) $generated@@424)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@426) (and ($generated@@0 ($generated@@88 ($generated@@338 $generated@@423) $generated@@427)) (= $generated@@424 ($generated@@88 ($generated@@411 $generated@@423) $generated@@427))))
 :pattern ( ($generated@@88 ($generated@@338 $generated@@423) $generated@@427))
 :pattern ( ($generated@@88 ($generated@@411 $generated@@423) $generated@@427))
))))))
 :pattern ( ($generated@@88 ($generated@@382 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (= (type ($generated@@428 $generated@@429 $generated@@430)) $generated@@70)
 :pattern ( ($generated@@428 $generated@@429 $generated@@430))
)))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (and (and (= (type $generated@@431) ($generated@@322 $generated@@179 $generated@@179)) (= (type $generated@@432) $generated@@70)) (= (type $generated@@433) $generated@@70)) (= (type $generated@@434) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434) (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@179) ($generated@@0 ($generated@@88 ($generated@@320 $generated@@431) $generated@@435))) (and ($generated@@275 ($generated@@88 ($generated@@403 $generated@@431) $generated@@435) $generated@@433 $generated@@434) ($generated@@275 $generated@@435 $generated@@432 $generated@@434)))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@431) $generated@@435))
 :pattern ( ($generated@@88 ($generated@@320 $generated@@431) $generated@@435))
))))
 :pattern ( ($generated@@81 $generated@@431 ($generated@@428 $generated@@432 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ) (! (= (type ($generated@@436 $generated@@437 $generated@@438)) $generated@@70)
 :pattern ( ($generated@@436 $generated@@437 $generated@@438))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ($generated@@442 T@U) ) (!  (=> (and (and (and (= (type $generated@@439) ($generated@@340 $generated@@179 $generated@@179)) (= (type $generated@@440) $generated@@70)) (= (type $generated@@441) $generated@@70)) (= (type $generated@@442) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442) (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@179) ($generated@@0 ($generated@@88 ($generated@@338 $generated@@439) $generated@@443))) (and ($generated@@275 ($generated@@88 ($generated@@411 $generated@@439) $generated@@443) $generated@@441 $generated@@442) ($generated@@275 $generated@@443 $generated@@440 $generated@@442)))
 :pattern ( ($generated@@88 ($generated@@411 $generated@@439) $generated@@443))
 :pattern ( ($generated@@88 ($generated@@338 $generated@@439) $generated@@443))
))))
 :pattern ( ($generated@@81 $generated@@439 ($generated@@436 $generated@@440 $generated@@441) $generated@@442))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@444) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@445) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@446) ($generated@@83 $generated@@84 $generated@@85))) (not (= $generated@@444 $generated@@446))) (and ($generated@@148 $generated@@444 $generated@@445) ($generated@@148 $generated@@445 $generated@@446))) ($generated@@148 $generated@@444 $generated@@446))
 :pattern ( ($generated@@148 $generated@@444 $generated@@445) ($generated@@148 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 Int) ) (! (= (type ($generated@@447 $generated@@448)) ($generated@@72 $generated@@179))
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ($generated@@452 Int) ) (!  (=> (and (and (= (type $generated@@449) $generated@@70) (= (type $generated@@450) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@451) $generated@@84)) (=> (and (and (and ($generated@@158 $generated@@450) (and (not (= $generated@@451 $generated@@141)) (= ($generated@@142 $generated@@451) ($generated@@140 $generated@@449)))) (and (<= 0 $generated@@452) (< $generated@@452 ($generated@@139 $generated@@451)))) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@450 $generated@@451) $generated@@60))) ($generated@@275 ($generated@@90 ($generated@@88 $generated@@450 $generated@@451) ($generated@@447 $generated@@452)) $generated@@449 $generated@@450)))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@450 $generated@@451) ($generated@@447 $generated@@452)) ($generated@@140 $generated@@449))
)))
(assert (forall (($generated@@454 T@T) ) (! (= (type ($generated@@453 $generated@@454)) ($generated@@83 $generated@@454 $generated@@4))
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ) (! (let (($generated@@456 ($generated@@342 (type $generated@@455))))
(let (($generated@@457 ($generated@@341 (type $generated@@455))))
 (=> (= (type $generated@@455) ($generated@@340 $generated@@457 $generated@@456)) (= (= $generated@@455 ($generated@@339 $generated@@457 $generated@@456)) (= ($generated@@338 $generated@@455) ($generated@@453 $generated@@457))))))
 :pattern ( ($generated@@338 $generated@@455))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@342 (type $generated@@458))))
(let (($generated@@460 ($generated@@341 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@340 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@339 $generated@@460 $generated@@459)) (= ($generated@@382 $generated@@458) ($generated@@453 $generated@@459))))))
 :pattern ( ($generated@@382 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@342 (type $generated@@461))))
(let (($generated@@463 ($generated@@341 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@340 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@339 $generated@@463 $generated@@462)) (= ($generated@@410 $generated@@461) ($generated@@453 $generated@@179))))))
 :pattern ( ($generated@@410 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@324 (type $generated@@464))))
(let (($generated@@466 ($generated@@323 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@322 $generated@@466 $generated@@465)) (or (= $generated@@464 ($generated@@321 $generated@@466 $generated@@465)) (exists (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (and (and (= (type $generated@@467) $generated@@179) (= (type $generated@@468) $generated@@179)) ($generated@@0 ($generated@@88 ($generated@@402 $generated@@464) ($generated@@297 ($generated@@249 $generated@@467 $generated@@468)))))
 :no-pattern (type $generated@@467)
 :no-pattern (type $generated@@468)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
 :no-pattern ($generated $generated@@468)
 :no-pattern ($generated@@0 $generated@@468)
))))))
 :pattern ( ($generated@@402 $generated@@464))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@342 (type $generated@@469))))
(let (($generated@@471 ($generated@@341 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@340 $generated@@471 $generated@@470)) (or (= $generated@@469 ($generated@@339 $generated@@471 $generated@@470)) (exists (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (and (and (= (type $generated@@472) $generated@@179) (= (type $generated@@473) $generated@@179)) ($generated@@0 ($generated@@88 ($generated@@410 $generated@@469) ($generated@@297 ($generated@@249 $generated@@472 $generated@@473)))))
 :no-pattern (type $generated@@472)
 :no-pattern (type $generated@@473)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
 :no-pattern ($generated $generated@@473)
 :no-pattern ($generated@@0 $generated@@473)
))))))
 :pattern ( ($generated@@410 $generated@@469))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@179) ($generated@@250 $generated@@474 $generated@@46)) (and (= ($generated@@297 ($generated@@359 $generated@@2 $generated@@474)) $generated@@474) ($generated@@143 ($generated@@359 $generated@@2 $generated@@474) $generated@@46)))
 :pattern ( ($generated@@250 $generated@@474 $generated@@46))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@179) ($generated@@250 $generated@@475 $generated@@47)) (and (= ($generated@@297 ($generated@@359 $generated@@3 $generated@@475)) $generated@@475) ($generated@@143 ($generated@@359 $generated@@3 $generated@@475) $generated@@47)))
 :pattern ( ($generated@@250 $generated@@475 $generated@@47))
)))
(assert (forall (($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@179) ($generated@@250 $generated@@476 $generated@@44)) (and (= ($generated@@297 ($generated@@359 $generated@@4 $generated@@476)) $generated@@476) ($generated@@143 ($generated@@359 $generated@@4 $generated@@476) $generated@@44)))
 :pattern ( ($generated@@250 $generated@@476 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@477) 20))
(assert (forall (($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@179) ($generated@@250 $generated@@478 $generated@@45)) (and (= ($generated@@297 ($generated@@359 $generated@@477 $generated@@478)) $generated@@478) ($generated@@143 ($generated@@359 $generated@@477 $generated@@478) $generated@@45)))
 :pattern ( ($generated@@250 $generated@@478 $generated@@45))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (= (type $generated@@480) $generated@@70) (= ($generated@@250 ($generated@@297 $generated@@479) $generated@@480) ($generated@@143 $generated@@479 $generated@@480)))
 :pattern ( ($generated@@250 ($generated@@297 $generated@@479) $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (= (type $generated@@481) $generated@@84) (<= 0 ($generated@@139 $generated@@481)))
 :no-pattern (type $generated@@481)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@86 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@83 $generated@@483 $generated@@2)) (<= 0 ($generated@@310 $generated@@482))))
 :pattern ( ($generated@@310 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@290 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@289 $generated@@485)) (<= 0 ($generated@@288 $generated@@484))))
 :pattern ( ($generated@@288 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@70)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@70) (= (type $generated@@489) $generated@@70)) (= ($generated@@486 ($generated@@428 $generated@@488 $generated@@489)) $generated@@488))
 :pattern ( ($generated@@428 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@70)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@70) (= (type $generated@@493) $generated@@70)) (= ($generated@@490 ($generated@@428 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@428 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@70) (= (type $generated@@495) $generated@@70)) (= ($generated@@79 ($generated@@428 $generated@@494 $generated@@495)) $generated@@58))
 :pattern ( ($generated@@428 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@70)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@70) (= (type $generated@@499) $generated@@70)) (= ($generated@@496 ($generated@@436 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@436 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@70) (= (type $generated@@503) $generated@@70)) (= ($generated@@500 ($generated@@436 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@436 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@70) (= (type $generated@@505) $generated@@70)) (= ($generated@@79 ($generated@@436 $generated@@504 $generated@@505)) $generated@@59))
 :pattern ( ($generated@@436 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@179) (= (type $generated@@507) $generated@@179)) (= ($generated@@281 ($generated@@249 $generated@@506 $generated@@507)) $generated@@63))
 :pattern ( ($generated@@249 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@70)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@70) (= (type $generated@@511) $generated@@70)) (= ($generated@@508 ($generated@@169 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@169 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@70)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@70) (= (type $generated@@515) $generated@@70)) (= ($generated@@512 ($generated@@169 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@169 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@179) (= (type $generated@@517) $generated@@179)) (= ($generated@@177 ($generated@@249 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@249 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@179) (= (type $generated@@519) $generated@@179)) (= ($generated@@178 ($generated@@249 $generated@@518 $generated@@519)) $generated@@519))
 :pattern ( ($generated@@249 $generated@@518 $generated@@519))
)))
(assert  (and (forall (($generated@@522 T@U) ) (! (= (type ($generated@@520 $generated@@522)) $generated@@70)
 :pattern ( ($generated@@520 $generated@@522))
)) (forall (($generated@@523 T@U) ($generated@@524 Int) ) (! (let (($generated@@525 ($generated@@290 (type $generated@@523))))
(= (type ($generated@@521 $generated@@523 $generated@@524)) $generated@@525))
 :pattern ( ($generated@@521 $generated@@523 $generated@@524))
))))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (and (= (type $generated@@526) ($generated@@289 $generated@@179)) (= (type $generated@@527) $generated@@70)) (= (type $generated@@528) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@526 ($generated@@520 $generated@@527) $generated@@528) (forall (($generated@@529 Int) ) (!  (=> (and (<= 0 $generated@@529) (< $generated@@529 ($generated@@288 $generated@@526))) ($generated@@275 ($generated@@521 $generated@@526 $generated@@529) $generated@@527 $generated@@528))
 :pattern ( ($generated@@521 $generated@@526 $generated@@529))
))))
 :pattern ( ($generated@@81 $generated@@526 ($generated@@520 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@531 Int) ) (! (= ($generated@@530 ($generated@@82 $generated@@531)) $generated@@531)
 :pattern ( ($generated@@82 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@70)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@70) (= ($generated@@532 ($generated@@259 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@259 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@70) (= ($generated@@79 ($generated@@259 $generated@@535)) $generated@@54))
 :pattern ( ($generated@@259 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@70)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@70) (= ($generated@@536 ($generated@@264 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@264 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@70) (= ($generated@@79 ($generated@@264 $generated@@539)) $generated@@55))
 :pattern ( ($generated@@264 $generated@@539))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@70)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (= (type $generated@@542) $generated@@70) (= ($generated@@540 ($generated@@184 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@184 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@70) (= ($generated@@79 ($generated@@184 $generated@@543)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@543))
)))
(assert (forall (($generated@@545 T@U) ) (! (= (type ($generated@@544 $generated@@545)) $generated@@70)
 :pattern ( ($generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (= (type $generated@@546) $generated@@70) (= ($generated@@544 ($generated@@520 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@520 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@70) (= ($generated@@79 ($generated@@520 $generated@@547)) $generated@@57))
 :pattern ( ($generated@@520 $generated@@547))
)))
(assert (forall (($generated@@548 Int) ) (! (= ($generated@@78 ($generated@@447 $generated@@548)) 1)
 :pattern ( ($generated@@447 $generated@@548))
)))
(assert (forall (($generated@@550 Int) ) (! (= ($generated@@549 ($generated@@447 $generated@@550)) $generated@@550)
 :pattern ( ($generated@@447 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@70)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@70) (= ($generated@@551 ($generated@@140 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@140 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ) (! (= (type ($generated@@554 $generated@@555)) $generated@@70)
 :pattern ( ($generated@@554 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@70) (= ($generated@@554 ($generated@@163 $generated@@556)) $generated@@556))
 :pattern ( ($generated@@163 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
(= ($generated@@359 $generated@@558 ($generated@@297 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@297 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@322 $generated@@179 $generated@@179)) (= (type $generated@@560) $generated@@70)) (= (type $generated@@561) $generated@@70)) (= ($generated@@143 $generated@@559 ($generated@@428 $generated@@560 $generated@@561)) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@179) ($generated@@0 ($generated@@88 ($generated@@320 $generated@@559) $generated@@562))) (and ($generated@@250 ($generated@@88 ($generated@@403 $generated@@559) $generated@@562) $generated@@561) ($generated@@250 $generated@@562 $generated@@560)))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@559) $generated@@562))
 :pattern ( ($generated@@88 ($generated@@320 $generated@@559) $generated@@562))
))))
 :pattern ( ($generated@@143 $generated@@559 ($generated@@428 $generated@@560 $generated@@561)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@563) ($generated@@340 $generated@@179 $generated@@179)) (= (type $generated@@564) $generated@@70)) (= (type $generated@@565) $generated@@70)) (= ($generated@@143 $generated@@563 ($generated@@436 $generated@@564 $generated@@565)) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@179) ($generated@@0 ($generated@@88 ($generated@@338 $generated@@563) $generated@@566))) (and ($generated@@250 ($generated@@88 ($generated@@411 $generated@@563) $generated@@566) $generated@@565) ($generated@@250 $generated@@566 $generated@@564)))
 :pattern ( ($generated@@88 ($generated@@411 $generated@@563) $generated@@566))
 :pattern ( ($generated@@88 ($generated@@338 $generated@@563) $generated@@566))
))))
 :pattern ( ($generated@@143 $generated@@563 ($generated@@436 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 Int) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@70) (= (type $generated@@568) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@569) $generated@@84)) (and (and ($generated@@158 $generated@@568) (and (not (= $generated@@569 $generated@@141)) (= ($generated@@142 $generated@@569) ($generated@@140 $generated@@567)))) (and (<= 0 $generated@@570) (< $generated@@570 ($generated@@139 $generated@@569))))) ($generated@@250 ($generated@@90 ($generated@@88 $generated@@568 $generated@@569) ($generated@@447 $generated@@570)) $generated@@567))
 :pattern ( ($generated@@90 ($generated@@88 $generated@@568 $generated@@569) ($generated@@447 $generated@@570)) ($generated@@140 $generated@@567))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@179) (= (type $generated@@574) $generated@@179)) (< ($generated@@571 $generated@@573) ($generated@@572 ($generated@@249 $generated@@573 $generated@@574))))
 :pattern ( ($generated@@249 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@179) (= (type $generated@@576) $generated@@179)) (< ($generated@@571 $generated@@576) ($generated@@572 ($generated@@249 $generated@@575 $generated@@576))))
 :pattern ( ($generated@@249 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@179) (= (type $generated@@578) $generated@@70)) (= (type $generated@@579) $generated@@70)) ($generated@@250 $generated@@577 ($generated@@428 $generated@@578 $generated@@579))) (and (= ($generated@@297 ($generated@@359 ($generated@@322 $generated@@179 $generated@@179) $generated@@577)) $generated@@577) ($generated@@143 ($generated@@359 ($generated@@322 $generated@@179 $generated@@179) $generated@@577) ($generated@@428 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@250 $generated@@577 ($generated@@428 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@179) (= (type $generated@@581) $generated@@70)) (= (type $generated@@582) $generated@@70)) ($generated@@250 $generated@@580 ($generated@@436 $generated@@581 $generated@@582))) (and (= ($generated@@297 ($generated@@359 ($generated@@340 $generated@@179 $generated@@179) $generated@@580)) $generated@@580) ($generated@@143 ($generated@@359 ($generated@@340 $generated@@179 $generated@@179) $generated@@580) ($generated@@436 $generated@@581 $generated@@582))))
 :pattern ( ($generated@@250 $generated@@580 ($generated@@436 $generated@@581 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@70) (= (type $generated@@584) $generated@@70)) (= (type $generated@@585) $generated@@179)) ($generated@@250 $generated@@585 ($generated@@169 $generated@@583 $generated@@584))) (and (= ($generated@@297 ($generated@@359 $generated@@170 $generated@@585)) $generated@@585) ($generated@@143 ($generated@@359 $generated@@170 $generated@@585) ($generated@@169 $generated@@583 $generated@@584))))
 :pattern ( ($generated@@250 $generated@@585 ($generated@@169 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@586 T@U) ) (! (let (($generated@@587 (type $generated@@586)))
 (not ($generated@@0 ($generated@@88 ($generated@@453 $generated@@587) $generated@@586))))
 :pattern ( (let (($generated@@587 (type $generated@@586)))
($generated@@88 ($generated@@453 $generated@@587) $generated@@586)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@70) (= (type $generated@@589) $generated@@70)) (and (= ($generated@@79 ($generated@@169 $generated@@588 $generated@@589)) $generated@@64) (= ($generated@@316 ($generated@@169 $generated@@588 $generated@@589)) $generated@@68)))
 :pattern ( ($generated@@169 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@170) (= ($generated@@571 ($generated@@297 $generated@@590)) ($generated@@572 $generated@@590)))
 :pattern ( ($generated@@571 ($generated@@297 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@179) ($generated@@250 $generated@@591 ($generated@@82 0))) (and (= ($generated@@297 ($generated@@359 $generated@@2 $generated@@591)) $generated@@591) ($generated@@143 ($generated@@359 ($generated@@83 $generated@@179 $generated@@4) $generated@@591) ($generated@@82 0))))
 :pattern ( ($generated@@250 $generated@@591 ($generated@@82 0)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@179) (= (type $generated@@593) $generated@@70)) ($generated@@250 $generated@@592 ($generated@@259 $generated@@593))) (and (= ($generated@@297 ($generated@@359 ($generated@@83 $generated@@179 $generated@@4) $generated@@592)) $generated@@592) ($generated@@143 ($generated@@359 ($generated@@83 $generated@@179 $generated@@4) $generated@@592) ($generated@@259 $generated@@593))))
 :pattern ( ($generated@@250 $generated@@592 ($generated@@259 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@594) $generated@@179) (= (type $generated@@595) $generated@@70)) ($generated@@250 $generated@@594 ($generated@@264 $generated@@595))) (and (= ($generated@@297 ($generated@@359 ($generated@@83 $generated@@179 $generated@@4) $generated@@594)) $generated@@594) ($generated@@143 ($generated@@359 ($generated@@83 $generated@@179 $generated@@4) $generated@@594) ($generated@@264 $generated@@595))))
 :pattern ( ($generated@@250 $generated@@594 ($generated@@264 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@179) (= (type $generated@@597) $generated@@70)) ($generated@@250 $generated@@596 ($generated@@184 $generated@@597))) (and (= ($generated@@297 ($generated@@359 ($generated@@83 $generated@@179 $generated@@2) $generated@@596)) $generated@@596) ($generated@@143 ($generated@@359 ($generated@@83 $generated@@179 $generated@@2) $generated@@596) ($generated@@184 $generated@@597))))
 :pattern ( ($generated@@250 $generated@@596 ($generated@@184 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@179) (= (type $generated@@599) $generated@@70)) ($generated@@250 $generated@@598 ($generated@@520 $generated@@599))) (and (= ($generated@@297 ($generated@@359 ($generated@@289 $generated@@179) $generated@@598)) $generated@@598) ($generated@@143 ($generated@@359 ($generated@@289 $generated@@179) $generated@@598) ($generated@@520 $generated@@599))))
 :pattern ( ($generated@@250 $generated@@598 ($generated@@520 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@600) $generated@@70) (= (type $generated@@601) $generated@@179)) ($generated@@250 $generated@@601 ($generated@@140 $generated@@600))) (and (= ($generated@@297 ($generated@@359 $generated@@84 $generated@@601)) $generated@@601) ($generated@@143 ($generated@@359 $generated@@84 $generated@@601) ($generated@@140 $generated@@600))))
 :pattern ( ($generated@@250 $generated@@601 ($generated@@140 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@602) $generated@@70) (= (type $generated@@603) $generated@@179)) ($generated@@250 $generated@@603 ($generated@@163 $generated@@602))) (and (= ($generated@@297 ($generated@@359 $generated@@84 $generated@@603)) $generated@@603) ($generated@@143 ($generated@@359 $generated@@84 $generated@@603) ($generated@@163 $generated@@602))))
 :pattern ( ($generated@@250 $generated@@603 ($generated@@163 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (! (let (($generated@@608 (type $generated@@607)))
 (=> (and (and (and (= (type $generated@@604) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@605) $generated@@84)) (= (type $generated@@606) ($generated@@72 $generated@@608))) ($generated@@158 ($generated@@89 $generated@@604 $generated@@605 ($generated@@91 ($generated@@88 $generated@@604 $generated@@605) $generated@@606 $generated@@607)))) ($generated@@148 $generated@@604 ($generated@@89 $generated@@604 $generated@@605 ($generated@@91 ($generated@@88 $generated@@604 $generated@@605) $generated@@606 $generated@@607)))))
 :pattern ( ($generated@@89 $generated@@604 $generated@@605 ($generated@@91 ($generated@@88 $generated@@604 $generated@@605) $generated@@606 $generated@@607)))
)))
(assert (= ($generated@@79 $generated@@155) $generated@@65))
(assert (= ($generated@@316 $generated@@155) $generated@@69))
(assert (= ($generated@@79 $generated@@246) $generated@@66))
(assert (= ($generated@@316 $generated@@246) $generated@@69))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@609) ($generated@@83 $generated@@179 $generated@@2)) (= (type $generated@@610) $generated@@70)) (= (type $generated@@611) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@609 ($generated@@184 $generated@@610) $generated@@611) (forall (($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@179) (< 0 ($generated ($generated@@88 $generated@@609 $generated@@612)))) ($generated@@275 $generated@@612 $generated@@610 $generated@@611))
 :pattern ( ($generated@@88 $generated@@609 $generated@@612))
))))
 :pattern ( ($generated@@81 $generated@@609 ($generated@@184 $generated@@610) $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@170) (= (type $generated@@614) $generated@@70)) (= (type $generated@@615) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@158 $generated@@615) (and ($generated@@168 $generated@@613) (exists (($generated@@616 T@U) ) (!  (and (= (type $generated@@616) $generated@@70) ($generated@@81 $generated@@613 ($generated@@169 $generated@@614 $generated@@616) $generated@@615))
 :pattern ( ($generated@@81 $generated@@613 ($generated@@169 $generated@@614 $generated@@616) $generated@@615))
))))) ($generated@@275 ($generated@@177 $generated@@613) $generated@@614 $generated@@615))
 :pattern ( ($generated@@275 ($generated@@177 $generated@@613) $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) $generated@@170) (= (type $generated@@618) $generated@@70)) (= (type $generated@@619) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@158 $generated@@619) (and ($generated@@168 $generated@@617) (exists (($generated@@620 T@U) ) (!  (and (= (type $generated@@620) $generated@@70) ($generated@@81 $generated@@617 ($generated@@169 $generated@@620 $generated@@618) $generated@@619))
 :pattern ( ($generated@@81 $generated@@617 ($generated@@169 $generated@@620 $generated@@618) $generated@@619))
))))) ($generated@@275 ($generated@@178 $generated@@617) $generated@@618 $generated@@619))
 :pattern ( ($generated@@275 ($generated@@178 $generated@@617) $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@179) (= (type $generated@@622) $generated@@179)) (= ($generated@@249 ($generated@@271 $generated@@621) ($generated@@271 $generated@@622)) ($generated@@271 ($generated@@249 $generated@@621 $generated@@622))))
 :pattern ( ($generated@@249 ($generated@@271 $generated@@621) ($generated@@271 $generated@@622)))
)))
(assert (forall (($generated@@623 Int) ) (! (= ($generated@@297 ($generated@@8 ($generated@@269 $generated@@623))) ($generated@@271 ($generated@@297 ($generated@@8 $generated@@623))))
 :pattern ( ($generated@@297 ($generated@@8 ($generated@@269 $generated@@623))))
)))
(assert (forall (($generated@@624 T@U) ) (! (= ($generated@@297 ($generated@@271 $generated@@624)) ($generated@@271 ($generated@@297 $generated@@624)))
 :pattern ( ($generated@@297 ($generated@@271 $generated@@624)))
)))
(assert (forall (($generated@@625 T@U) ) (! (let (($generated@@626 ($generated@@290 (type $generated@@625))))
 (=> (and (= (type $generated@@625) ($generated@@289 $generated@@626)) (= ($generated@@288 $generated@@625) 0)) (= $generated@@625 ($generated@@287 $generated@@626))))
 :pattern ( ($generated@@288 $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (! (let (($generated@@630 (type $generated@@628)))
 (=> (and (and (= (type $generated@@627) ($generated@@83 $generated@@630 $generated@@2)) (= (type $generated@@629) $generated@@2)) (<= 0 ($generated $generated@@629))) (= ($generated@@310 ($generated@@89 $generated@@627 $generated@@628 $generated@@629)) (+ (- ($generated@@310 $generated@@627) ($generated ($generated@@88 $generated@@627 $generated@@628))) ($generated $generated@@629)))))
 :pattern ( ($generated@@310 ($generated@@89 $generated@@627 $generated@@628 $generated@@629)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@632) $generated@@2)) ($generated@@81 $generated@@632 $generated@@46 $generated@@631))
 :pattern ( ($generated@@81 $generated@@632 $generated@@46 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@634) $generated@@3)) ($generated@@81 $generated@@634 $generated@@47 $generated@@633))
 :pattern ( ($generated@@81 $generated@@634 $generated@@47 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@636) $generated@@4)) ($generated@@81 $generated@@636 $generated@@44 $generated@@635))
 :pattern ( ($generated@@81 $generated@@636 $generated@@44 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@638) $generated@@477)) ($generated@@81 $generated@@638 $generated@@45 $generated@@637))
 :pattern ( ($generated@@81 $generated@@638 $generated@@45 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ) (!  (=> (and (= (type $generated@@639) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@640) $generated@@179)) ($generated@@81 $generated@@640 $generated@@48 $generated@@639))
 :pattern ( ($generated@@81 $generated@@640 $generated@@48 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) ($generated@@289 $generated@@179)) (= (type $generated@@642) $generated@@70)) (= ($generated@@143 $generated@@641 ($generated@@520 $generated@@642)) (forall (($generated@@643 Int) ) (!  (=> (and (<= 0 $generated@@643) (< $generated@@643 ($generated@@288 $generated@@641))) ($generated@@250 ($generated@@521 $generated@@641 $generated@@643) $generated@@642))
 :pattern ( ($generated@@521 $generated@@641 $generated@@643))
))))
 :pattern ( ($generated@@143 $generated@@641 ($generated@@520 $generated@@642)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 Int) ) (!  (=> (= (type $generated@@645) ($generated@@289 $generated@@179)) (=> (and (<= 0 $generated@@646) (< $generated@@646 ($generated@@288 $generated@@645))) (< ($generated@@572 ($generated@@359 $generated@@170 ($generated@@521 $generated@@645 $generated@@646))) ($generated@@644 $generated@@645))))
 :pattern ( ($generated@@572 ($generated@@359 $generated@@170 ($generated@@521 $generated@@645 $generated@@646))))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) ($generated@@322 $generated@@179 $generated@@179)) (= (type $generated@@648) $generated@@70)) (= (type $generated@@649) $generated@@70)) ($generated@@143 $generated@@647 ($generated@@428 $generated@@648 $generated@@649))) (and (and ($generated@@143 ($generated@@320 $generated@@647) ($generated@@259 $generated@@648)) ($generated@@143 ($generated@@371 $generated@@647) ($generated@@259 $generated@@649))) ($generated@@143 ($generated@@402 $generated@@647) ($generated@@259 ($generated@@169 $generated@@648 $generated@@649)))))
 :pattern ( ($generated@@143 $generated@@647 ($generated@@428 $generated@@648 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (and (and (= (type $generated@@650) ($generated@@340 $generated@@179 $generated@@179)) (= (type $generated@@651) $generated@@70)) (= (type $generated@@652) $generated@@70)) ($generated@@143 $generated@@650 ($generated@@436 $generated@@651 $generated@@652))) (and (and ($generated@@143 ($generated@@338 $generated@@650) ($generated@@264 $generated@@651)) ($generated@@143 ($generated@@382 $generated@@650) ($generated@@264 $generated@@652))) ($generated@@143 ($generated@@410 $generated@@650) ($generated@@264 ($generated@@169 $generated@@651 $generated@@652)))))
 :pattern ( ($generated@@143 $generated@@650 ($generated@@436 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@2) ($generated@@143 $generated@@653 $generated@@46))
 :pattern ( ($generated@@143 $generated@@653 $generated@@46))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@3) ($generated@@143 $generated@@654 $generated@@47))
 :pattern ( ($generated@@143 $generated@@654 $generated@@47))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@4) ($generated@@143 $generated@@655 $generated@@44))
 :pattern ( ($generated@@143 $generated@@655 $generated@@44))
)))
(assert (forall (($generated@@656 T@U) ) (!  (=> (= (type $generated@@656) $generated@@477) ($generated@@143 $generated@@656 $generated@@45))
 :pattern ( ($generated@@143 $generated@@656 $generated@@45))
)))
(assert (forall (($generated@@657 T@U) ) (!  (=> (= (type $generated@@657) $generated@@179) ($generated@@143 $generated@@657 $generated@@48))
 :pattern ( ($generated@@143 $generated@@657 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () T@U)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 (T@U) Bool)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () Bool)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () Int)
(assert  (and (and (and (and (and (= (type $generated@@658) ($generated@@192 $generated@@84 $generated@@4)) (= (type $generated@@659) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@660) $generated@@84)) (= (type $generated@@661) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@663) $generated@@84)) (= (type $generated@@665) $generated@@84)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@667  (=> (= $generated@@658 ($generated@@191 $generated@@141 $generated@@659 $generated@@60 false)) (=> (and (not (= $generated@@660 $generated@@141)) (= ($generated@@142 $generated@@660) $generated@@155)) (=> (and (and (not ($generated@@0 ($generated@@90 ($generated@@88 $generated@@659 $generated@@660) $generated@@60))) (= $generated@@661 ($generated@@89 $generated@@659 $generated@@660 ($generated@@91 ($generated@@88 $generated@@659 $generated@@660) $generated@@60 ($generated@@11 true))))) (and ($generated@@158 $generated@@661) ($generated@@662 $generated@@661))) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not (= $generated@@660 $generated@@141))) (=> (not (= $generated@@660 $generated@@141)) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@668 Int) ($generated@@669 Int) ) (!  (=> true (=> (and (and (<= ($generated@@269 0) $generated@@668) (< $generated@@668 $generated@@669)) (< $generated@@669 ($generated@@139 $generated@@663))) (<= ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@661 $generated@@663) ($generated@@447 $generated@@668)))) ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@661 $generated@@663) ($generated@@447 $generated@@669)))))))
 :pattern ( ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@661 $generated@@663) ($generated@@447 $generated@@669))) ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@661 $generated@@663) ($generated@@447 $generated@@668))))
)))))))))))
(let (($generated@@670  (=> (and (and ($generated@@158 $generated@@659) ($generated@@662 $generated@@659)) (and ($generated@@143 $generated@@663 ($generated@@163 $generated@@46)) ($generated@@81 $generated@@663 ($generated@@163 $generated@@46) $generated@@659))) (=> (and (and (and (=> $generated@@664 (and ($generated@@143 $generated@@665 $generated@@246) ($generated@@81 $generated@@665 $generated@@246 $generated@@659))) true) (= 2 $generated@@666)) (and (forall (($generated@@671 Int) ($generated@@672 Int) ) (!  (=> true (=> (and (and (<= ($generated@@269 0) $generated@@671) (< $generated@@671 $generated@@672)) (< $generated@@672 ($generated@@139 $generated@@663))) (<= ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@663) ($generated@@447 $generated@@671)))) ($generated ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@663) ($generated@@447 $generated@@672)))))))
 :pattern ( ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@663) ($generated@@447 $generated@@672))) ($generated@@359 $generated@@2 ($generated@@90 ($generated@@88 $generated@@659 $generated@@663) ($generated@@447 $generated@@671))))
)) (= (ControlFlow 0 5) 2))) $generated@@667))))
$generated@@670)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
