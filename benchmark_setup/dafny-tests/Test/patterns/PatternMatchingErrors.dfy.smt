(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 () Int)
(declare-fun $generated@@137 (T@U) Int)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@236 (T@U) Bool)
(declare-fun $generated@@237 (Int) Int)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@239 (T@T T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@249 (T@U T@U) T@U)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@260 (T@U T@U) Bool)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@283 (T@U T@U) T@U)
(declare-fun $generated@@289 (T@U T@U T@U) Bool)
(declare-fun $generated@@304 (T@T) T@U)
(declare-fun $generated@@305 (T@U) Int)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@313 (T@U) T@U)
(declare-fun $generated@@318 (T@U) Int)
(declare-fun $generated@@319 (T@T) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@T) T@U)
(declare-fun $generated@@347 (T@T T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@402 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@410 (T@U) T@U)
(declare-fun $generated@@427 (T@U T@U) T@U)
(declare-fun $generated@@435 (T@U T@U) T@U)
(declare-fun $generated@@445 (T@T) T@U)
(declare-fun $generated@@469 () T@T)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@481 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@518 (T@U Int) T@U)
(declare-fun $generated@@527 (T@U) Int)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@533 (T@U) T@U)
(declare-fun $generated@@537 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@558 (T@U) Int)
(declare-fun $generated@@559 (T@U) Int)
(declare-fun $generated@@641 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert  (and (= ($generated@@1 $generated@@138) 14) (forall (($generated@@142 T@U) ) (! (= (type ($generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@141 $generated@@142))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@143 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@138) (or ($generated@@139 $generated@@143) (and (not (= 1 $generated@@136)) ($generated@@140 $generated@@143 ($generated@@141 $generated@@46))))) true)
 :pattern ( ($generated@@137 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= (type $generated@@144) $generated@@2) ($generated@@140 $generated@@144 ($generated@@79 0)))
 :pattern ( ($generated@@140 $generated@@144 ($generated@@79 0)))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@146 $generated@@147 $generated@@148)) $generated@@68)
 :pattern ( ($generated@@146 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@68) (= (type $generated@@150) $generated@@68)) (= (type $generated@@151) $generated@@138)) ($generated@@140 $generated@@151 ($generated@@146 $generated@@149 $generated@@150))) ($generated@@145 $generated@@151))
 :pattern ( ($generated@@145 $generated@@151) ($generated@@140 $generated@@151 ($generated@@146 $generated@@149 $generated@@150)))
)))
(assert  (and (and (= ($generated@@1 $generated@@155) 15) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@153 $generated@@156))
))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@155)
 :pattern ( ($generated@@154 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@138) (= (type $generated@@159) $generated@@138)) true) (= ($generated@@152 $generated@@158 $generated@@159)  (and (= ($generated@@153 $generated@@158) ($generated@@153 $generated@@159)) (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)))))
 :pattern ( ($generated@@152 $generated@@158 $generated@@159))
)))
(assert  (and (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@72)
 :pattern ( ($generated@@160 $generated@@162))
)) (= (type $generated@@161) $generated@@138)))
(assert (= ($generated@@160 $generated@@161) $generated@@63))
(assert (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@68)
 :pattern ( ($generated@@163 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) ($generated@@80 $generated@@155 $generated@@2)) (= (type $generated@@167) $generated@@68)) ($generated@@140 $generated@@166 ($generated@@163 $generated@@167))) ($generated@@164 $generated@@166))
 :pattern ( ($generated@@140 $generated@@166 ($generated@@163 $generated@@167)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@1 ($generated@@170 $generated@@174 $generated@@175)) 16)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@171 ($generated@@170 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@170 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@172 ($generated@@170 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@170 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 ($generated@@172 (type $generated@@180))))
(= (type ($generated@@168 $generated@@180 $generated@@181 $generated@@182)) $generated@@183))
 :pattern ( ($generated@@168 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 (type $generated@@187)))
(let (($generated@@189 (type $generated@@185)))
(= (type ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187)) ($generated@@170 $generated@@189 $generated@@188))))
 :pattern ( ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@187))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@172 (type $generated@@190))))
 (=> (= (type $generated@@193) $generated@@194) (= ($generated@@168 ($generated@@173 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@191 $generated@@192) $generated@@193)))
 :weight 0
))) (and (and (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@168 ($generated@@173 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@168 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@168 ($generated@@173 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@168 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or true (= ($generated@@168 ($generated@@173 $generated@@208 $generated@@209 $generated@@210 $generated@@207) $generated@@211 $generated@@212) ($generated@@168 $generated@@208 $generated@@211 $generated@@212)))
 :weight 0
)))) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 Bool) ) (! (= (type ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216)) ($generated@@170 $generated@@81 $generated@@4))
 :pattern ( ($generated@@169 $generated@@213 $generated@@214 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (let (($generated@@223 ($generated@@71 (type $generated@@222))))
 (=> (and (and (and (and (= (type $generated@@217) $generated@@81) (= (type $generated@@218) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@219) ($generated@@70 $generated@@4))) (= (type $generated@@221) $generated@@81)) (= (type $generated@@222) ($generated@@70 $generated@@223))) (= ($generated@@0 ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (not (= $generated@@221 $generated@@217)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@218 $generated@@221) $generated@@219))) $generated@@220))))
 :pattern ( ($generated@@168 ($generated@@169 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ) (! (= (type ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228)) ($generated@@170 $generated@@81 $generated@@4))
 :pattern ( ($generated@@224 $generated@@225 $generated@@226 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Bool) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (let (($generated@@235 ($generated@@71 (type $generated@@234))))
 (=> (and (and (and (and (= (type $generated@@229) $generated@@81) (= (type $generated@@230) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@231) ($generated@@70 $generated@@4))) (= (type $generated@@233) $generated@@81)) (= (type $generated@@234) ($generated@@70 $generated@@235))) (= ($generated@@0 ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))  (=> (and (not (= $generated@@233 $generated@@229)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@230 $generated@@233) $generated@@231))) $generated@@232))))
 :pattern ( ($generated@@168 ($generated@@224 $generated@@229 $generated@@230 $generated@@231 $generated@@232) $generated@@233 $generated@@234))
)))
(assert  (and (and (forall (($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@241)) $generated@@138)
 :pattern ( ($generated@@238 $generated@@241))
)) (forall (($generated@@242 T@T) ($generated@@243 T@U) ) (! (= (type ($generated@@239 $generated@@242 $generated@@243)) $generated@@242)
 :pattern ( ($generated@@239 $generated@@242 $generated@@243))
))) (forall (($generated@@244 T@U) ) (! (= (type ($generated@@240 $generated@@244)) $generated@@155)
 :pattern ( ($generated@@240 $generated@@244))
))))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@138) (or ($generated@@139 $generated@@245) (and (not (= 1 $generated@@136)) ($generated@@140 $generated@@245 ($generated@@141 $generated@@46))))) (= ($generated@@137 $generated@@245) (ite ($generated@@236 $generated@@245) 8 ($generated@@237 5))))
 :pattern ( ($generated@@137 $generated@@245))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (= (type $generated@@247) $generated@@68) (= (type $generated@@248) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@246 $generated@@248)) ($generated@@78 $generated@@161 ($generated@@141 $generated@@247) $generated@@248))
 :pattern ( ($generated@@78 $generated@@161 ($generated@@141 $generated@@247) $generated@@248))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= (type ($generated@@249 $generated@@251 $generated@@252)) $generated@@138)
 :pattern ( ($generated@@249 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (and (and (= (type $generated@@253) $generated@@68) (= (type $generated@@254) $generated@@68)) (= (type $generated@@255) $generated@@155)) (= (type $generated@@256) $generated@@155)) (= ($generated@@140 ($generated@@249 $generated@@255 $generated@@256) ($generated@@146 $generated@@253 $generated@@254))  (and ($generated@@250 $generated@@255 $generated@@253) ($generated@@250 $generated@@256 $generated@@254))))
 :pattern ( ($generated@@140 ($generated@@249 $generated@@255 $generated@@256) ($generated@@146 $generated@@253 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (= (type $generated@@257) $generated@@68) ($generated@@140 $generated@@161 ($generated@@141 $generated@@257)))
 :pattern ( ($generated@@140 $generated@@161 ($generated@@141 $generated@@257)))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@138) (= (type $generated@@259) $generated@@138)) (= ($generated@@152 $generated@@258 $generated@@259) (= $generated@@258 $generated@@259)))
 :pattern ( ($generated@@152 $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@138) (= (type $generated@@262) $generated@@138)) (= ($generated@@260 $generated@@261 $generated@@262) (= $generated@@261 $generated@@262)))
 :pattern ( ($generated@@260 $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (= (type $generated@@264) $generated@@138) (= (type $generated@@265) $generated@@138)) (and ($generated@@263 $generated@@264) ($generated@@263 $generated@@265))) (= ($generated@@260 $generated@@264 $generated@@265)  (and (= ($generated@@240 $generated@@264) ($generated@@240 $generated@@265)) ($generated@@260 ($generated@@238 $generated@@264) ($generated@@238 $generated@@265)))))
 :pattern ( ($generated@@260 $generated@@264 $generated@@265) ($generated@@263 $generated@@264))
 :pattern ( ($generated@@260 $generated@@264 $generated@@265) ($generated@@263 $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@68)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@80 $generated@@155 $generated@@4)) (= (type $generated@@269) $generated@@68)) (= ($generated@@140 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@155) ($generated@@0 ($generated@@85 $generated@@268 $generated@@270))) ($generated@@250 $generated@@270 $generated@@269))
 :pattern ( ($generated@@85 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@140 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@272 T@U) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@68)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@273) ($generated@@80 $generated@@155 $generated@@4)) (= (type $generated@@274) $generated@@68)) (= ($generated@@140 $generated@@273 ($generated@@271 $generated@@274)) (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@155) ($generated@@0 ($generated@@85 $generated@@273 $generated@@275))) ($generated@@250 $generated@@275 $generated@@274))
 :pattern ( ($generated@@85 $generated@@273 $generated@@275))
))))
 :pattern ( ($generated@@140 $generated@@273 ($generated@@271 $generated@@274)))
)))
(assert (forall (($generated@@276 Int) ) (! (= ($generated@@237 $generated@@276) $generated@@276)
 :pattern ( ($generated@@237 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 (type $generated@@278)))
(= (type ($generated@@277 $generated@@278)) $generated@@279))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= ($generated@@277 $generated@@280) $generated@@280)
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (= (type $generated@@281) $generated@@138) (= (type $generated@@282) $generated@@138)) (and ($generated@@236 $generated@@281) ($generated@@236 $generated@@282))) (= ($generated@@260 $generated@@281 $generated@@282) true))
 :pattern ( ($generated@@260 $generated@@281 $generated@@282) ($generated@@236 $generated@@281))
 :pattern ( ($generated@@260 $generated@@281 $generated@@282) ($generated@@236 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (= (type ($generated@@283 $generated@@284 $generated@@285)) $generated@@138)
 :pattern ( ($generated@@283 $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (and (= (type $generated@@286) $generated@@68) (= (type $generated@@287) $generated@@155)) (= (type $generated@@288) $generated@@138)) (= ($generated@@140 ($generated@@283 $generated@@287 $generated@@288) ($generated@@141 $generated@@286))  (and ($generated@@250 $generated@@287 $generated@@286) ($generated@@140 $generated@@288 ($generated@@141 $generated@@286)))))
 :pattern ( ($generated@@140 ($generated@@283 $generated@@287 $generated@@288) ($generated@@141 $generated@@286)))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@290) $generated@@68) (= (type $generated@@291) $generated@@68)) (= (type $generated@@292) $generated@@155)) (= (type $generated@@293) $generated@@155)) (= (type $generated@@294) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@246 $generated@@294)) (= ($generated@@78 ($generated@@249 $generated@@292 $generated@@293) ($generated@@146 $generated@@290 $generated@@291) $generated@@294)  (and ($generated@@289 $generated@@292 $generated@@290 $generated@@294) ($generated@@289 $generated@@293 $generated@@291 $generated@@294))))
 :pattern ( ($generated@@78 ($generated@@249 $generated@@292 $generated@@293) ($generated@@146 $generated@@290 $generated@@291) $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@138) (= ($generated@@145 $generated@@295) (= ($generated@@160 $generated@@295) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (= (type $generated@@296) $generated@@138) (= ($generated@@236 $generated@@296) (= ($generated@@160 $generated@@296) $generated@@63)))
 :pattern ( ($generated@@236 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@138) (= ($generated@@263 $generated@@297) (= ($generated@@160 $generated@@297) $generated@@65)))
 :pattern ( ($generated@@263 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@138) ($generated@@145 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@155) (= (type $generated@@300) $generated@@155)) (= $generated@@298 ($generated@@249 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@145 $generated@@298))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@138) ($generated@@263 $generated@@301)) (exists (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (and (and (= (type $generated@@302) $generated@@155) (= (type $generated@@303) $generated@@138)) (= $generated@@301 ($generated@@283 $generated@@302 $generated@@303)))
 :no-pattern (type $generated@@302)
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
)))
 :pattern ( ($generated@@263 $generated@@301))
)))
(assert  (and (and (forall (($generated@@308 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@308)) 17)) (forall (($generated@@309 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@309)) $generated@@309)
 :pattern ( ($generated@@306 $generated@@309))
))) (forall (($generated@@310 T@T) ) (! (= (type ($generated@@304 $generated@@310)) ($generated@@306 $generated@@310))
 :pattern ( ($generated@@304 $generated@@310))
))))
(assert (forall (($generated@@311 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@311)) 0)
 :pattern ( ($generated@@304 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@138) ($generated@@236 $generated@@312)) (= $generated@@312 $generated@@161))
 :pattern ( ($generated@@236 $generated@@312))
)))
(assert (forall (($generated@@314 T@U) ) (! (= (type ($generated@@313 $generated@@314)) $generated@@155)
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (= (type $generated@@316) $generated@@68) (= (type $generated@@317) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@289 ($generated@@313 $generated@@315) $generated@@316 $generated@@317) ($generated@@78 $generated@@315 $generated@@316 $generated@@317)))
 :pattern ( ($generated@@289 ($generated@@313 $generated@@315) $generated@@316 $generated@@317))
)))
(assert (forall (($generated@@320 T@T) ) (! (= (type ($generated@@319 $generated@@320)) ($generated@@80 $generated@@320 $generated@@2))
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@83 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@80 $generated@@322 $generated@@2)) (and (= (= ($generated@@318 $generated@@321) 0) (= $generated@@321 ($generated@@319 $generated@@322))) (=> (not (= ($generated@@318 $generated@@321) 0)) (exists (($generated@@323 T@U) ) (!  (and (= (type $generated@@323) $generated@@322) (< 0 ($generated ($generated@@85 $generated@@321 $generated@@323))))
 :no-pattern (type $generated@@323)
 :no-pattern ($generated $generated@@323)
 :no-pattern ($generated@@0 $generated@@323)
))))))
 :pattern ( ($generated@@318 $generated@@321))
)))
(assert (forall (($generated@@325 T@U) ) (! (= (type ($generated@@324 $generated@@325)) $generated@@73)
 :pattern ( ($generated@@324 $generated@@325))
)))
(assert (forall (($generated@@326 T@U) ) (!  (=> (= (type $generated@@326) $generated@@68) (and (= ($generated@@76 ($generated@@141 $generated@@326)) $generated@@64) (= ($generated@@324 ($generated@@141 $generated@@326)) $generated@@67)))
 :pattern ( ($generated@@141 $generated@@326))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 18)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@80 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@85 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@85 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert  (and (and (and (and (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (= ($generated@@1 ($generated@@347 $generated@@350 $generated@@351)) 19)) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@348 ($generated@@347 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@347 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@349 ($generated@@347 $generated@@354 $generated@@355)) $generated@@355)
 :pattern ( ($generated@@347 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@348 (type $generated@@356))))
(= (type ($generated@@345 $generated@@356)) ($generated@@80 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@356))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= (type ($generated@@346 $generated@@358 $generated@@359)) ($generated@@347 $generated@@358 $generated@@359))
 :pattern ( ($generated@@346 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@T) ) (! (let (($generated@@362 (type $generated@@360)))
 (not ($generated@@0 ($generated@@85 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360))))
 :pattern ( (let (($generated@@362 (type $generated@@360)))
($generated@@85 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360)))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@83 (type $generated@@363))))
 (=> (= (type $generated@@363) ($generated@@80 $generated@@364 $generated@@2)) (= ($generated@@164 $generated@@363) (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@364) (and (<= 0 ($generated ($generated@@85 $generated@@363 $generated@@365))) (<= ($generated ($generated@@85 $generated@@363 $generated@@365)) ($generated@@318 $generated@@363))))
 :pattern ( ($generated@@85 $generated@@363 $generated@@365))
)))))
 :pattern ( ($generated@@164 $generated@@363))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@331 (type $generated@@366))))
(let (($generated@@368 ($generated@@330 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@329 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@328 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@85 ($generated@@327 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@327 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@331 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@80 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@331 (type $generated@@373))))
(let (($generated@@375 ($generated@@330 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@329 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@328 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@85 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@349 (type $generated@@377))))
(let (($generated@@379 ($generated@@348 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@347 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@346 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@85 ($generated@@345 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@345 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@349 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@80 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@349 (type $generated@@384))))
(let (($generated@@386 ($generated@@348 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@347 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@346 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@85 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@80 $generated@@155 $generated@@2)) (= (type $generated@@389) $generated@@68)) (= ($generated@@140 $generated@@388 ($generated@@163 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@155) (< 0 ($generated ($generated@@85 $generated@@388 $generated@@390)))) ($generated@@250 $generated@@390 $generated@@389))
 :pattern ( ($generated@@85 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@140 $generated@@388 ($generated@@163 $generated@@389)))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@80 $generated@@155 $generated@@4)) (= (type $generated@@392) $generated@@68)) (= (type $generated@@393) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@391 ($generated@@266 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@155) ($generated@@0 ($generated@@85 $generated@@391 $generated@@394))) ($generated@@289 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@85 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@78 $generated@@391 ($generated@@266 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (and (= (type $generated@@395) ($generated@@80 $generated@@155 $generated@@4)) (= (type $generated@@396) $generated@@68)) (= (type $generated@@397) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@395 ($generated@@271 $generated@@396) $generated@@397) (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@155) ($generated@@0 ($generated@@85 $generated@@395 $generated@@398))) ($generated@@289 $generated@@398 $generated@@396 $generated@@397))
 :pattern ( ($generated@@85 $generated@@395 $generated@@398))
))))
 :pattern ( ($generated@@78 $generated@@395 ($generated@@271 $generated@@396) $generated@@397))
)))
(assert (forall (($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(= ($generated ($generated@@85 ($generated@@319 $generated@@400) $generated@@399)) 0))
 :pattern ( (let (($generated@@400 (type $generated@@399)))
($generated@@85 ($generated@@319 $generated@@400) $generated@@399)))
)))
(assert  (and (forall (($generated@@403 T@U) ) (! (= (type ($generated@@401 $generated@@403)) ($generated@@80 $generated@@155 $generated@@4))
 :pattern ( ($generated@@401 $generated@@403))
)) (forall (($generated@@404 T@U) ) (! (let (($generated@@405 ($generated@@331 (type $generated@@404))))
(let (($generated@@406 ($generated@@330 (type $generated@@404))))
(= (type ($generated@@402 $generated@@404)) ($generated@@80 $generated@@406 $generated@@405))))
 :pattern ( ($generated@@402 $generated@@404))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@407) ($generated@@329 $generated@@155 $generated@@155)) (= (type $generated@@408) $generated@@155)) (= ($generated@@0 ($generated@@85 ($generated@@401 $generated@@407) $generated@@408))  (and ($generated@@0 ($generated@@85 ($generated@@327 $generated@@407) ($generated@@153 ($generated@@239 $generated@@138 $generated@@408)))) (= ($generated@@85 ($generated@@402 $generated@@407) ($generated@@153 ($generated@@239 $generated@@138 $generated@@408))) ($generated@@154 ($generated@@239 $generated@@138 $generated@@408))))))
 :pattern ( ($generated@@85 ($generated@@401 $generated@@407) $generated@@408))
)))
(assert  (and (forall (($generated@@411 T@U) ) (! (= (type ($generated@@409 $generated@@411)) ($generated@@80 $generated@@155 $generated@@4))
 :pattern ( ($generated@@409 $generated@@411))
)) (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@349 (type $generated@@412))))
(let (($generated@@414 ($generated@@348 (type $generated@@412))))
(= (type ($generated@@410 $generated@@412)) ($generated@@80 $generated@@414 $generated@@413))))
 :pattern ( ($generated@@410 $generated@@412))
))))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (!  (=> (and (= (type $generated@@415) ($generated@@347 $generated@@155 $generated@@155)) (= (type $generated@@416) $generated@@155)) (= ($generated@@0 ($generated@@85 ($generated@@409 $generated@@415) $generated@@416))  (and ($generated@@0 ($generated@@85 ($generated@@345 $generated@@415) ($generated@@153 ($generated@@239 $generated@@138 $generated@@416)))) (= ($generated@@85 ($generated@@410 $generated@@415) ($generated@@153 ($generated@@239 $generated@@138 $generated@@416))) ($generated@@154 ($generated@@239 $generated@@138 $generated@@416))))))
 :pattern ( ($generated@@85 ($generated@@409 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (let (($generated@@419 (type $generated@@418)))
(let (($generated@@420 ($generated@@330 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@329 $generated@@420 $generated@@419)) (= ($generated@@0 ($generated@@85 ($generated@@370 $generated@@417) $generated@@418)) (exists (($generated@@421 T@U) ) (!  (and (= (type $generated@@421) $generated@@420) (and ($generated@@0 ($generated@@85 ($generated@@327 $generated@@417) $generated@@421)) (= $generated@@418 ($generated@@85 ($generated@@402 $generated@@417) $generated@@421))))
 :pattern ( ($generated@@85 ($generated@@327 $generated@@417) $generated@@421))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@417) $generated@@421))
))))))
 :pattern ( ($generated@@85 ($generated@@370 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@348 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@347 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@85 ($generated@@381 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@85 ($generated@@345 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@85 ($generated@@410 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@85 ($generated@@345 $generated@@422) $generated@@426))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@85 ($generated@@381 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@428 $generated@@429)) $generated@@68)
 :pattern ( ($generated@@427 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ($generated@@433 T@U) ) (!  (=> (and (and (and (= (type $generated@@430) ($generated@@329 $generated@@155 $generated@@155)) (= (type $generated@@431) $generated@@68)) (= (type $generated@@432) $generated@@68)) (= (type $generated@@433) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433) (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@155) ($generated@@0 ($generated@@85 ($generated@@327 $generated@@430) $generated@@434))) (and ($generated@@289 ($generated@@85 ($generated@@402 $generated@@430) $generated@@434) $generated@@432 $generated@@433) ($generated@@289 $generated@@434 $generated@@431 $generated@@433)))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@430) $generated@@434))
 :pattern ( ($generated@@85 ($generated@@327 $generated@@430) $generated@@434))
))))
 :pattern ( ($generated@@78 $generated@@430 ($generated@@427 $generated@@431 $generated@@432) $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ) (! (= (type ($generated@@435 $generated@@436 $generated@@437)) $generated@@68)
 :pattern ( ($generated@@435 $generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (and (= (type $generated@@438) ($generated@@347 $generated@@155 $generated@@155)) (= (type $generated@@439) $generated@@68)) (= (type $generated@@440) $generated@@68)) (= (type $generated@@441) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@155) ($generated@@0 ($generated@@85 ($generated@@345 $generated@@438) $generated@@442))) (and ($generated@@289 ($generated@@85 ($generated@@410 $generated@@438) $generated@@442) $generated@@440 $generated@@441) ($generated@@289 $generated@@442 $generated@@439 $generated@@441)))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@438) $generated@@442))
 :pattern ( ($generated@@85 ($generated@@345 $generated@@438) $generated@@442))
))))
 :pattern ( ($generated@@78 $generated@@438 ($generated@@435 $generated@@439 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (and (= (type $generated@@443) $generated@@68) (= (type $generated@@444) $generated@@138)) ($generated@@140 $generated@@444 ($generated@@141 $generated@@443))) (or ($generated@@236 $generated@@444) ($generated@@263 $generated@@444)))
 :pattern ( ($generated@@263 $generated@@444) ($generated@@140 $generated@@444 ($generated@@141 $generated@@443)))
 :pattern ( ($generated@@236 $generated@@444) ($generated@@140 $generated@@444 ($generated@@141 $generated@@443)))
)))
(assert (forall (($generated@@446 T@T) ) (! (= (type ($generated@@445 $generated@@446)) ($generated@@80 $generated@@446 $generated@@4))
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 ($generated@@349 (type $generated@@447))))
(let (($generated@@449 ($generated@@348 (type $generated@@447))))
 (=> (= (type $generated@@447) ($generated@@347 $generated@@449 $generated@@448)) (= (= $generated@@447 ($generated@@346 $generated@@449 $generated@@448)) (= ($generated@@345 $generated@@447) ($generated@@445 $generated@@449))))))
 :pattern ( ($generated@@345 $generated@@447))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@349 (type $generated@@450))))
(let (($generated@@452 ($generated@@348 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@347 $generated@@452 $generated@@451)) (= (= $generated@@450 ($generated@@346 $generated@@452 $generated@@451)) (= ($generated@@381 $generated@@450) ($generated@@445 $generated@@451))))))
 :pattern ( ($generated@@381 $generated@@450))
)))
(assert (forall (($generated@@453 T@U) ) (! (let (($generated@@454 ($generated@@349 (type $generated@@453))))
(let (($generated@@455 ($generated@@348 (type $generated@@453))))
 (=> (= (type $generated@@453) ($generated@@347 $generated@@455 $generated@@454)) (= (= $generated@@453 ($generated@@346 $generated@@455 $generated@@454)) (= ($generated@@409 $generated@@453) ($generated@@445 $generated@@155))))))
 :pattern ( ($generated@@409 $generated@@453))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@331 (type $generated@@456))))
(let (($generated@@458 ($generated@@330 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@329 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@328 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@155) (= (type $generated@@460) $generated@@155)) ($generated@@0 ($generated@@85 ($generated@@401 $generated@@456) ($generated@@313 ($generated@@249 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@401 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@349 (type $generated@@461))))
(let (($generated@@463 ($generated@@348 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@347 $generated@@463 $generated@@462)) (or (= $generated@@461 ($generated@@346 $generated@@463 $generated@@462)) (exists (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (and (and (= (type $generated@@464) $generated@@155) (= (type $generated@@465) $generated@@155)) ($generated@@0 ($generated@@85 ($generated@@409 $generated@@461) ($generated@@313 ($generated@@249 $generated@@464 $generated@@465)))))
 :no-pattern (type $generated@@464)
 :no-pattern (type $generated@@465)
 :no-pattern ($generated $generated@@464)
 :no-pattern ($generated@@0 $generated@@464)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
))))))
 :pattern ( ($generated@@409 $generated@@461))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@155) ($generated@@250 $generated@@466 $generated@@46)) (and (= ($generated@@313 ($generated@@239 $generated@@2 $generated@@466)) $generated@@466) ($generated@@140 ($generated@@239 $generated@@2 $generated@@466) $generated@@46)))
 :pattern ( ($generated@@250 $generated@@466 $generated@@46))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@155) ($generated@@250 $generated@@467 $generated@@47)) (and (= ($generated@@313 ($generated@@239 $generated@@3 $generated@@467)) $generated@@467) ($generated@@140 ($generated@@239 $generated@@3 $generated@@467) $generated@@47)))
 :pattern ( ($generated@@250 $generated@@467 $generated@@47))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@155) ($generated@@250 $generated@@468 $generated@@44)) (and (= ($generated@@313 ($generated@@239 $generated@@4 $generated@@468)) $generated@@468) ($generated@@140 ($generated@@239 $generated@@4 $generated@@468) $generated@@44)))
 :pattern ( ($generated@@250 $generated@@468 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@469) 20))
(assert (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@155) ($generated@@250 $generated@@470 $generated@@45)) (and (= ($generated@@313 ($generated@@239 $generated@@469 $generated@@470)) $generated@@470) ($generated@@140 ($generated@@239 $generated@@469 $generated@@470) $generated@@45)))
 :pattern ( ($generated@@250 $generated@@470 $generated@@45))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (= (type $generated@@472) $generated@@68) (= ($generated@@250 ($generated@@313 $generated@@471) $generated@@472) ($generated@@140 $generated@@471 $generated@@472)))
 :pattern ( ($generated@@250 ($generated@@313 $generated@@471) $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ) (! (let (($generated@@474 ($generated@@83 (type $generated@@473))))
 (=> (= (type $generated@@473) ($generated@@80 $generated@@474 $generated@@2)) (<= 0 ($generated@@318 $generated@@473))))
 :pattern ( ($generated@@318 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@307 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@306 $generated@@476)) (<= 0 ($generated@@305 $generated@@475))))
 :pattern ( ($generated@@305 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@68)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@68) (= (type $generated@@480) $generated@@68)) (= ($generated@@477 ($generated@@427 $generated@@479 $generated@@480)) $generated@@479))
 :pattern ( ($generated@@427 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (= (type ($generated@@481 $generated@@482)) $generated@@68)
 :pattern ( ($generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@68) (= (type $generated@@484) $generated@@68)) (= ($generated@@481 ($generated@@427 $generated@@483 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@427 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@68) (= (type $generated@@486) $generated@@68)) (= ($generated@@76 ($generated@@427 $generated@@485 $generated@@486)) $generated@@58))
 :pattern ( ($generated@@427 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@68)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@68) (= (type $generated@@490) $generated@@68)) (= ($generated@@487 ($generated@@435 $generated@@489 $generated@@490)) $generated@@489))
 :pattern ( ($generated@@435 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@68)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@68) (= (type $generated@@494) $generated@@68)) (= ($generated@@491 ($generated@@435 $generated@@493 $generated@@494)) $generated@@494))
 :pattern ( ($generated@@435 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@68) (= (type $generated@@496) $generated@@68)) (= ($generated@@76 ($generated@@435 $generated@@495 $generated@@496)) $generated@@59))
 :pattern ( ($generated@@435 $generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@155) (= (type $generated@@498) $generated@@155)) (= ($generated@@160 ($generated@@249 $generated@@497 $generated@@498)) $generated@@61))
 :pattern ( ($generated@@249 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@499 ($generated@@146 $generated@@501 $generated@@502)) $generated@@501))
 :pattern ( ($generated@@146 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (= (type ($generated@@503 $generated@@504)) $generated@@68)
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@68) (= (type $generated@@506) $generated@@68)) (= ($generated@@503 ($generated@@146 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@146 $generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@155) (= (type $generated@@508) $generated@@155)) (= ($generated@@153 ($generated@@249 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@249 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@155) (= (type $generated@@510) $generated@@155)) (= ($generated@@154 ($generated@@249 $generated@@509 $generated@@510)) $generated@@510))
 :pattern ( ($generated@@249 $generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@155) (= (type $generated@@512) $generated@@138)) (= ($generated@@160 ($generated@@283 $generated@@511 $generated@@512)) $generated@@65))
 :pattern ( ($generated@@283 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@155) (= (type $generated@@514) $generated@@138)) (= ($generated@@240 ($generated@@283 $generated@@513 $generated@@514)) $generated@@513))
 :pattern ( ($generated@@283 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@155) (= (type $generated@@516) $generated@@138)) (= ($generated@@238 ($generated@@283 $generated@@515 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@283 $generated@@515 $generated@@516))
)))
(assert  (and (forall (($generated@@519 T@U) ) (! (= (type ($generated@@517 $generated@@519)) $generated@@68)
 :pattern ( ($generated@@517 $generated@@519))
)) (forall (($generated@@520 T@U) ($generated@@521 Int) ) (! (let (($generated@@522 ($generated@@307 (type $generated@@520))))
(= (type ($generated@@518 $generated@@520 $generated@@521)) $generated@@522))
 :pattern ( ($generated@@518 $generated@@520 $generated@@521))
))))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (and (= (type $generated@@523) ($generated@@306 $generated@@155)) (= (type $generated@@524) $generated@@68)) (= (type $generated@@525) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@523 ($generated@@517 $generated@@524) $generated@@525) (forall (($generated@@526 Int) ) (!  (=> (and (<= 0 $generated@@526) (< $generated@@526 ($generated@@305 $generated@@523))) ($generated@@289 ($generated@@518 $generated@@523 $generated@@526) $generated@@524 $generated@@525))
 :pattern ( ($generated@@518 $generated@@523 $generated@@526))
))))
 :pattern ( ($generated@@78 $generated@@523 ($generated@@517 $generated@@524) $generated@@525))
)))
(assert (forall (($generated@@528 Int) ) (! (= ($generated@@527 ($generated@@79 $generated@@528)) $generated@@528)
 :pattern ( ($generated@@79 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@68)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@68) (= ($generated@@529 ($generated@@266 $generated@@531)) $generated@@531))
 :pattern ( ($generated@@266 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@68) (= ($generated@@76 ($generated@@266 $generated@@532)) $generated@@54))
 :pattern ( ($generated@@266 $generated@@532))
)))
(assert (forall (($generated@@534 T@U) ) (! (= (type ($generated@@533 $generated@@534)) $generated@@68)
 :pattern ( ($generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@68) (= ($generated@@533 ($generated@@271 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@271 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@68) (= ($generated@@76 ($generated@@271 $generated@@536)) $generated@@55))
 :pattern ( ($generated@@271 $generated@@536))
)))
(assert (forall (($generated@@538 T@U) ) (! (= (type ($generated@@537 $generated@@538)) $generated@@68)
 :pattern ( ($generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@68) (= ($generated@@537 ($generated@@163 $generated@@539)) $generated@@539))
 :pattern ( ($generated@@163 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@68) (= ($generated@@76 ($generated@@163 $generated@@540)) $generated@@56))
 :pattern ( ($generated@@163 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@68)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@68) (= ($generated@@541 ($generated@@517 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@517 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@68) (= ($generated@@76 ($generated@@517 $generated@@544)) $generated@@57))
 :pattern ( ($generated@@517 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@68)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@68) (= ($generated@@545 ($generated@@141 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@141 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (! (let (($generated@@549 (type $generated@@548)))
(= ($generated@@239 $generated@@549 ($generated@@313 $generated@@548)) $generated@@548))
 :pattern ( ($generated@@313 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@329 $generated@@155 $generated@@155)) (= (type $generated@@551) $generated@@68)) (= (type $generated@@552) $generated@@68)) (= ($generated@@140 $generated@@550 ($generated@@427 $generated@@551 $generated@@552)) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@155) ($generated@@0 ($generated@@85 ($generated@@327 $generated@@550) $generated@@553))) (and ($generated@@250 ($generated@@85 ($generated@@402 $generated@@550) $generated@@553) $generated@@552) ($generated@@250 $generated@@553 $generated@@551)))
 :pattern ( ($generated@@85 ($generated@@402 $generated@@550) $generated@@553))
 :pattern ( ($generated@@85 ($generated@@327 $generated@@550) $generated@@553))
))))
 :pattern ( ($generated@@140 $generated@@550 ($generated@@427 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@347 $generated@@155 $generated@@155)) (= (type $generated@@555) $generated@@68)) (= (type $generated@@556) $generated@@68)) (= ($generated@@140 $generated@@554 ($generated@@435 $generated@@555 $generated@@556)) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@155) ($generated@@0 ($generated@@85 ($generated@@345 $generated@@554) $generated@@557))) (and ($generated@@250 ($generated@@85 ($generated@@410 $generated@@554) $generated@@557) $generated@@556) ($generated@@250 $generated@@557 $generated@@555)))
 :pattern ( ($generated@@85 ($generated@@410 $generated@@554) $generated@@557))
 :pattern ( ($generated@@85 ($generated@@345 $generated@@554) $generated@@557))
))))
 :pattern ( ($generated@@140 $generated@@554 ($generated@@435 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@155) (= (type $generated@@561) $generated@@155)) (< ($generated@@558 $generated@@560) ($generated@@559 ($generated@@249 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@249 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@155) (= (type $generated@@563) $generated@@155)) (< ($generated@@558 $generated@@563) ($generated@@559 ($generated@@249 $generated@@562 $generated@@563))))
 :pattern ( ($generated@@249 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@155) (= (type $generated@@565) $generated@@138)) (< ($generated@@558 $generated@@564) ($generated@@559 ($generated@@283 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@283 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@155) (= (type $generated@@567) $generated@@138)) (< ($generated@@559 $generated@@567) ($generated@@559 ($generated@@283 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@283 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@155) (= (type $generated@@569) $generated@@68)) (= (type $generated@@570) $generated@@68)) ($generated@@250 $generated@@568 ($generated@@427 $generated@@569 $generated@@570))) (and (= ($generated@@313 ($generated@@239 ($generated@@329 $generated@@155 $generated@@155) $generated@@568)) $generated@@568) ($generated@@140 ($generated@@239 ($generated@@329 $generated@@155 $generated@@155) $generated@@568) ($generated@@427 $generated@@569 $generated@@570))))
 :pattern ( ($generated@@250 $generated@@568 ($generated@@427 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (and (= (type $generated@@571) $generated@@155) (= (type $generated@@572) $generated@@68)) (= (type $generated@@573) $generated@@68)) ($generated@@250 $generated@@571 ($generated@@435 $generated@@572 $generated@@573))) (and (= ($generated@@313 ($generated@@239 ($generated@@347 $generated@@155 $generated@@155) $generated@@571)) $generated@@571) ($generated@@140 ($generated@@239 ($generated@@347 $generated@@155 $generated@@155) $generated@@571) ($generated@@435 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@250 $generated@@571 ($generated@@435 $generated@@572 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (and (= (type $generated@@574) $generated@@68) (= (type $generated@@575) $generated@@68)) (= (type $generated@@576) $generated@@155)) ($generated@@250 $generated@@576 ($generated@@146 $generated@@574 $generated@@575))) (and (= ($generated@@313 ($generated@@239 $generated@@138 $generated@@576)) $generated@@576) ($generated@@140 ($generated@@239 $generated@@138 $generated@@576) ($generated@@146 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@250 $generated@@576 ($generated@@146 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (and (= (type $generated@@577) $generated@@138) (= (type $generated@@578) $generated@@68)) (= (type $generated@@579) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@246 $generated@@579) (and ($generated@@263 $generated@@577) ($generated@@78 $generated@@577 ($generated@@141 $generated@@578) $generated@@579)))) ($generated@@289 ($generated@@240 $generated@@577) $generated@@578 $generated@@579))
 :pattern ( ($generated@@289 ($generated@@240 $generated@@577) $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@580)))
 (not ($generated@@0 ($generated@@85 ($generated@@445 $generated@@581) $generated@@580))))
 :pattern ( (let (($generated@@581 (type $generated@@580)))
($generated@@85 ($generated@@445 $generated@@581) $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@68) (= (type $generated@@583) $generated@@68)) (and (= ($generated@@76 ($generated@@146 $generated@@582 $generated@@583)) $generated@@62) (= ($generated@@324 ($generated@@146 $generated@@582 $generated@@583)) $generated@@66)))
 :pattern ( ($generated@@146 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@138) (= ($generated@@558 ($generated@@313 $generated@@584)) ($generated@@559 $generated@@584)))
 :pattern ( ($generated@@558 ($generated@@313 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@155) ($generated@@250 $generated@@585 ($generated@@79 0))) (and (= ($generated@@313 ($generated@@239 $generated@@2 $generated@@585)) $generated@@585) ($generated@@140 ($generated@@239 ($generated@@80 $generated@@155 $generated@@4) $generated@@585) ($generated@@79 0))))
 :pattern ( ($generated@@250 $generated@@585 ($generated@@79 0)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@155) (= (type $generated@@587) $generated@@68)) ($generated@@250 $generated@@586 ($generated@@266 $generated@@587))) (and (= ($generated@@313 ($generated@@239 ($generated@@80 $generated@@155 $generated@@4) $generated@@586)) $generated@@586) ($generated@@140 ($generated@@239 ($generated@@80 $generated@@155 $generated@@4) $generated@@586) ($generated@@266 $generated@@587))))
 :pattern ( ($generated@@250 $generated@@586 ($generated@@266 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@155) (= (type $generated@@589) $generated@@68)) ($generated@@250 $generated@@588 ($generated@@271 $generated@@589))) (and (= ($generated@@313 ($generated@@239 ($generated@@80 $generated@@155 $generated@@4) $generated@@588)) $generated@@588) ($generated@@140 ($generated@@239 ($generated@@80 $generated@@155 $generated@@4) $generated@@588) ($generated@@271 $generated@@589))))
 :pattern ( ($generated@@250 $generated@@588 ($generated@@271 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (= (type $generated@@590) $generated@@155) (= (type $generated@@591) $generated@@68)) ($generated@@250 $generated@@590 ($generated@@163 $generated@@591))) (and (= ($generated@@313 ($generated@@239 ($generated@@80 $generated@@155 $generated@@2) $generated@@590)) $generated@@590) ($generated@@140 ($generated@@239 ($generated@@80 $generated@@155 $generated@@2) $generated@@590) ($generated@@163 $generated@@591))))
 :pattern ( ($generated@@250 $generated@@590 ($generated@@163 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@155) (= (type $generated@@593) $generated@@68)) ($generated@@250 $generated@@592 ($generated@@517 $generated@@593))) (and (= ($generated@@313 ($generated@@239 ($generated@@306 $generated@@155) $generated@@592)) $generated@@592) ($generated@@140 ($generated@@239 ($generated@@306 $generated@@155) $generated@@592) ($generated@@517 $generated@@593))))
 :pattern ( ($generated@@250 $generated@@592 ($generated@@517 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@594) $generated@@68) (= (type $generated@@595) $generated@@155)) ($generated@@250 $generated@@595 ($generated@@141 $generated@@594))) (and (= ($generated@@313 ($generated@@239 $generated@@138 $generated@@595)) $generated@@595) ($generated@@140 ($generated@@239 $generated@@138 $generated@@595) ($generated@@141 $generated@@594))))
 :pattern ( ($generated@@250 $generated@@595 ($generated@@141 $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@138) (= (type $generated@@597) $generated@@68)) (= (type $generated@@598) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@246 $generated@@598) (and ($generated@@263 $generated@@596) ($generated@@78 $generated@@596 ($generated@@141 $generated@@597) $generated@@598)))) ($generated@@78 ($generated@@238 $generated@@596) ($generated@@141 $generated@@597) $generated@@598))
 :pattern ( ($generated@@78 ($generated@@238 $generated@@596) ($generated@@141 $generated@@597) $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@599) ($generated@@80 $generated@@155 $generated@@2)) (= (type $generated@@600) $generated@@68)) (= (type $generated@@601) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@599 ($generated@@163 $generated@@600) $generated@@601) (forall (($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@155) (< 0 ($generated ($generated@@85 $generated@@599 $generated@@602)))) ($generated@@289 $generated@@602 $generated@@600 $generated@@601))
 :pattern ( ($generated@@85 $generated@@599 $generated@@602))
))))
 :pattern ( ($generated@@78 $generated@@599 ($generated@@163 $generated@@600) $generated@@601))
)))
(assert (= $generated@@161 ($generated@@277 $generated@@161)))
(assert  (=> (<= 1 $generated@@136) (forall (($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@138) (or ($generated@@139 ($generated@@277 $generated@@603)) (and (not (= 1 $generated@@136)) ($generated@@140 $generated@@603 ($generated@@141 $generated@@46))))) (= ($generated@@137 ($generated@@277 $generated@@603)) (ite ($generated@@236 ($generated@@277 $generated@@603)) 8 ($generated@@237 5))))
 :weight 3
 :pattern ( ($generated@@137 ($generated@@277 $generated@@603)))
))))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@138) (= (type $generated@@605) $generated@@68)) (= (type $generated@@606) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@246 $generated@@606) (and ($generated@@145 $generated@@604) (exists (($generated@@607 T@U) ) (!  (and (= (type $generated@@607) $generated@@68) ($generated@@78 $generated@@604 ($generated@@146 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@78 $generated@@604 ($generated@@146 $generated@@605 $generated@@607) $generated@@606))
))))) ($generated@@289 ($generated@@153 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@289 ($generated@@153 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@138) (= (type $generated@@609) $generated@@68)) (= (type $generated@@610) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@246 $generated@@610) (and ($generated@@145 $generated@@608) (exists (($generated@@611 T@U) ) (!  (and (= (type $generated@@611) $generated@@68) ($generated@@78 $generated@@608 ($generated@@146 $generated@@611 $generated@@609) $generated@@610))
 :pattern ( ($generated@@78 $generated@@608 ($generated@@146 $generated@@611 $generated@@609) $generated@@610))
))))) ($generated@@289 ($generated@@154 $generated@@608) $generated@@609 $generated@@610))
 :pattern ( ($generated@@289 ($generated@@154 $generated@@608) $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@155) (= (type $generated@@613) $generated@@155)) (= ($generated@@249 ($generated@@277 $generated@@612) ($generated@@277 $generated@@613)) ($generated@@277 ($generated@@249 $generated@@612 $generated@@613))))
 :pattern ( ($generated@@249 ($generated@@277 $generated@@612) ($generated@@277 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@155) (= (type $generated@@615) $generated@@138)) (= ($generated@@283 ($generated@@277 $generated@@614) ($generated@@277 $generated@@615)) ($generated@@277 ($generated@@283 $generated@@614 $generated@@615))))
 :pattern ( ($generated@@283 ($generated@@277 $generated@@614) ($generated@@277 $generated@@615)))
)))
(assert (forall (($generated@@616 Int) ) (! (= ($generated@@313 ($generated@@8 ($generated@@237 $generated@@616))) ($generated@@277 ($generated@@313 ($generated@@8 $generated@@616))))
 :pattern ( ($generated@@313 ($generated@@8 ($generated@@237 $generated@@616))))
)))
(assert (forall (($generated@@617 T@U) ) (! (= ($generated@@313 ($generated@@277 $generated@@617)) ($generated@@277 ($generated@@313 $generated@@617)))
 :pattern ( ($generated@@313 ($generated@@277 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ) (! (let (($generated@@619 ($generated@@307 (type $generated@@618))))
 (=> (and (= (type $generated@@618) ($generated@@306 $generated@@619)) (= ($generated@@305 $generated@@618) 0)) (= $generated@@618 ($generated@@304 $generated@@619))))
 :pattern ( ($generated@@305 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (! (let (($generated@@623 (type $generated@@621)))
 (=> (and (and (= (type $generated@@620) ($generated@@80 $generated@@623 $generated@@2)) (= (type $generated@@622) $generated@@2)) (<= 0 ($generated $generated@@622))) (= ($generated@@318 ($generated@@86 $generated@@620 $generated@@621 $generated@@622)) (+ (- ($generated@@318 $generated@@620) ($generated ($generated@@85 $generated@@620 $generated@@621))) ($generated $generated@@622)))))
 :pattern ( ($generated@@318 ($generated@@86 $generated@@620 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@625) $generated@@2)) ($generated@@78 $generated@@625 $generated@@46 $generated@@624))
 :pattern ( ($generated@@78 $generated@@625 $generated@@46 $generated@@624))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@626) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@627) $generated@@3)) ($generated@@78 $generated@@627 $generated@@47 $generated@@626))
 :pattern ( ($generated@@78 $generated@@627 $generated@@47 $generated@@626))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (= (type $generated@@628) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@629) $generated@@4)) ($generated@@78 $generated@@629 $generated@@44 $generated@@628))
 :pattern ( ($generated@@78 $generated@@629 $generated@@44 $generated@@628))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@631) $generated@@469)) ($generated@@78 $generated@@631 $generated@@45 $generated@@630))
 :pattern ( ($generated@@78 $generated@@631 $generated@@45 $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (= (type $generated@@632) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@633) $generated@@155)) ($generated@@78 $generated@@633 $generated@@48 $generated@@632))
 :pattern ( ($generated@@78 $generated@@633 $generated@@48 $generated@@632))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@634) $generated@@68) (= (type $generated@@635) $generated@@155)) (= (type $generated@@636) $generated@@138)) (= (type $generated@@637) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@246 $generated@@637)) (= ($generated@@78 ($generated@@283 $generated@@635 $generated@@636) ($generated@@141 $generated@@634) $generated@@637)  (and ($generated@@289 $generated@@635 $generated@@634 $generated@@637) ($generated@@78 $generated@@636 ($generated@@141 $generated@@634) $generated@@637))))
 :pattern ( ($generated@@78 ($generated@@283 $generated@@635 $generated@@636) ($generated@@141 $generated@@634) $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (= (type $generated@@638) ($generated@@306 $generated@@155)) (= (type $generated@@639) $generated@@68)) (= ($generated@@140 $generated@@638 ($generated@@517 $generated@@639)) (forall (($generated@@640 Int) ) (!  (=> (and (<= 0 $generated@@640) (< $generated@@640 ($generated@@305 $generated@@638))) ($generated@@250 ($generated@@518 $generated@@638 $generated@@640) $generated@@639))
 :pattern ( ($generated@@518 $generated@@638 $generated@@640))
))))
 :pattern ( ($generated@@140 $generated@@638 ($generated@@517 $generated@@639)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 Int) ) (!  (=> (= (type $generated@@642) ($generated@@306 $generated@@155)) (=> (and (<= 0 $generated@@643) (< $generated@@643 ($generated@@305 $generated@@642))) (< ($generated@@559 ($generated@@239 $generated@@138 ($generated@@518 $generated@@642 $generated@@643))) ($generated@@641 $generated@@642))))
 :pattern ( ($generated@@559 ($generated@@239 $generated@@138 ($generated@@518 $generated@@642 $generated@@643))))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@644) ($generated@@329 $generated@@155 $generated@@155)) (= (type $generated@@645) $generated@@68)) (= (type $generated@@646) $generated@@68)) ($generated@@140 $generated@@644 ($generated@@427 $generated@@645 $generated@@646))) (and (and ($generated@@140 ($generated@@327 $generated@@644) ($generated@@266 $generated@@645)) ($generated@@140 ($generated@@370 $generated@@644) ($generated@@266 $generated@@646))) ($generated@@140 ($generated@@401 $generated@@644) ($generated@@266 ($generated@@146 $generated@@645 $generated@@646)))))
 :pattern ( ($generated@@140 $generated@@644 ($generated@@427 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (and (= (type $generated@@647) ($generated@@347 $generated@@155 $generated@@155)) (= (type $generated@@648) $generated@@68)) (= (type $generated@@649) $generated@@68)) ($generated@@140 $generated@@647 ($generated@@435 $generated@@648 $generated@@649))) (and (and ($generated@@140 ($generated@@345 $generated@@647) ($generated@@271 $generated@@648)) ($generated@@140 ($generated@@381 $generated@@647) ($generated@@271 $generated@@649))) ($generated@@140 ($generated@@409 $generated@@647) ($generated@@271 ($generated@@146 $generated@@648 $generated@@649)))))
 :pattern ( ($generated@@140 $generated@@647 ($generated@@435 $generated@@648 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@2) ($generated@@140 $generated@@650 $generated@@46))
 :pattern ( ($generated@@140 $generated@@650 $generated@@46))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@3) ($generated@@140 $generated@@651 $generated@@47))
 :pattern ( ($generated@@140 $generated@@651 $generated@@47))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@4) ($generated@@140 $generated@@652 $generated@@44))
 :pattern ( ($generated@@140 $generated@@652 $generated@@44))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@469) ($generated@@140 $generated@@653 $generated@@45))
 :pattern ( ($generated@@140 $generated@@653 $generated@@45))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@155) ($generated@@140 $generated@@654 $generated@@48))
 :pattern ( ($generated@@140 $generated@@654 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@655 () T@U)
(declare-fun $generated@@656 () Int)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 () T@U)
(declare-fun $generated@@659 () Int)
(declare-fun $generated@@660 () T@U)
(declare-fun $generated@@661 () T@U)
(declare-fun $generated@@662 () T@U)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 (T@U) Bool)
(assert  (and (and (and (and (and (and (= (type $generated@@655) $generated@@138) (= (type $generated@@657) $generated@@138)) (= (type $generated@@658) $generated@@138)) (= (type $generated@@660) ($generated@@170 $generated@@81 $generated@@4))) (= (type $generated@@661) $generated@@81)) (= (type $generated@@662) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@663) ($generated@@170 $generated@@81 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@665 true))
(let (($generated@@666  (=> (and (= $generated@@655 $generated@@161) (= (ControlFlow 0 6) (- 0 5))) false)))
(let (($generated@@667  (=> (not (= $generated@@655 ($generated@@283 ($generated@@313 ($generated@@8 $generated@@656)) $generated@@657))) (and (=> (= (ControlFlow 0 8) 6) $generated@@666) (=> (= (ControlFlow 0 8) 7) $generated@@665)))))
(let (($generated@@668 true))
(let (($generated@@669  (=> (and (= $generated@@658 ($generated@@283 ($generated@@313 ($generated@@8 $generated@@659)) $generated@@655)) ($generated@@140 $generated@@655 ($generated@@141 $generated@@46))) (and (=> (= (ControlFlow 0 9) 4) $generated@@668) (=> (= (ControlFlow 0 9) 8) $generated@@667)))))
(let (($generated@@670 true))
(let (($generated@@671  (=> (not (= $generated@@658 $generated@@161)) (and (=> (= (ControlFlow 0 10) 9) $generated@@669) (=> (= (ControlFlow 0 10) 3) $generated@@670)))))
(let (($generated@@672 true))
(let (($generated@@673  (=> (= $generated@@660 ($generated@@224 $generated@@661 $generated@@662 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 2) $generated@@672) (=> (= (ControlFlow 0 11) 10) $generated@@671)))))
(let (($generated@@674 true))
(let (($generated@@675  (=> (= $generated@@663 ($generated@@169 $generated@@661 $generated@@662 $generated@@60 false)) (and (=> (= (ControlFlow 0 12) 1) $generated@@674) (=> (= (ControlFlow 0 12) 11) $generated@@673)))))
(let (($generated@@676  (=> (and (and (and ($generated@@246 $generated@@662) ($generated@@664 $generated@@662)) ($generated@@140 $generated@@658 ($generated@@141 $generated@@46))) (and (= 1 $generated@@136) (= (ControlFlow 0 13) 12))) $generated@@675)))
$generated@@676)))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U) T@U)
(declare-fun $generated@@219 (T@U) Bool)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (Int) Int)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@263 (T@U T@U) T@U)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@371 (T@U) Bool)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@T T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@T) T@U)
(declare-fun $generated@@454 () T@T)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@503 (T@U Int) T@U)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@625 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@79 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@68) (= (type $generated@@144) $generated@@68)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert  (and (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@72)
 :pattern ( ($generated@@154 $generated@@156))
)) (= (type $generated@@155) $generated@@140)))
(assert (= ($generated@@154 $generated@@155) $generated@@63))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@68)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@161) $generated@@68)) ($generated@@136 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@136 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@81 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@71 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@81) (= (type $generated@@212) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@213) ($generated@@70 $generated@@4))) (= (type $generated@@215) $generated@@81)) (= (type $generated@@216) ($generated@@70 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@220 T@U) ) (! (= (type ($generated@@218 $generated@@220)) $generated@@68)
 :pattern ( ($generated@@218 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (= (type $generated@@221) $generated@@68) (= (type $generated@@222) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@219 $generated@@222)) ($generated@@78 $generated@@155 ($generated@@218 $generated@@221) $generated@@222))
 :pattern ( ($generated@@78 $generated@@155 ($generated@@218 $generated@@221) $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@140)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@68) (= (type $generated@@228) $generated@@68)) (= (type $generated@@229) $generated@@149)) (= (type $generated@@230) $generated@@149)) (= ($generated@@136 ($generated@@223 $generated@@229 $generated@@230) ($generated@@139 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@136 ($generated@@223 $generated@@229 $generated@@230) ($generated@@139 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@68) ($generated@@136 $generated@@155 ($generated@@218 $generated@@231)))
 :pattern ( ($generated@@136 $generated@@155 ($generated@@218 $generated@@231)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@140) (= (type $generated@@233) $generated@@140)) (= ($generated@@146 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@146 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@140) (= (type $generated@@236) $generated@@140)) (= ($generated@@234 $generated@@235 $generated@@236) (= $generated@@235 $generated@@236)))
 :pattern ( ($generated@@234 $generated@@235 $generated@@236))
)))
(assert  (and (forall (($generated@@240 T@U) ) (! (= (type ($generated@@238 $generated@@240)) $generated@@149)
 :pattern ( ($generated@@238 $generated@@240))
)) (forall (($generated@@241 T@U) ) (! (= (type ($generated@@239 $generated@@241)) $generated@@140)
 :pattern ( ($generated@@239 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (= (type $generated@@242) $generated@@140) (= (type $generated@@243) $generated@@140)) (and ($generated@@237 $generated@@242) ($generated@@237 $generated@@243))) (= ($generated@@234 $generated@@242 $generated@@243)  (and (= ($generated@@238 $generated@@242) ($generated@@238 $generated@@243)) ($generated@@234 ($generated@@239 $generated@@242) ($generated@@239 $generated@@243)))))
 :pattern ( ($generated@@234 $generated@@242 $generated@@243) ($generated@@237 $generated@@242))
 :pattern ( ($generated@@234 $generated@@242 $generated@@243) ($generated@@237 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@247) $generated@@68)) (= ($generated@@136 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@149) ($generated@@0 ($generated@@85 $generated@@246 $generated@@248))) ($generated@@224 $generated@@248 $generated@@247))
 :pattern ( ($generated@@85 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@136 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@68)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@252) $generated@@68)) (= ($generated@@136 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@149) ($generated@@0 ($generated@@85 $generated@@251 $generated@@253))) ($generated@@224 $generated@@253 $generated@@252))
 :pattern ( ($generated@@85 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@136 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@254 $generated@@255) $generated@@255)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (let (($generated@@258 (type $generated@@257)))
(= (type ($generated@@256 $generated@@257)) $generated@@258))
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= ($generated@@256 $generated@@259) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@261) $generated@@140) (= (type $generated@@262) $generated@@140)) (and ($generated@@260 $generated@@261) ($generated@@260 $generated@@262))) (= ($generated@@234 $generated@@261 $generated@@262) true))
 :pattern ( ($generated@@234 $generated@@261 $generated@@262) ($generated@@260 $generated@@261))
 :pattern ( ($generated@@234 $generated@@261 $generated@@262) ($generated@@260 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (! (= (type ($generated@@263 $generated@@264 $generated@@265)) $generated@@140)
 :pattern ( ($generated@@263 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@68) (= (type $generated@@267) $generated@@149)) (= (type $generated@@268) $generated@@140)) (= ($generated@@136 ($generated@@263 $generated@@267 $generated@@268) ($generated@@218 $generated@@266))  (and ($generated@@224 $generated@@267 $generated@@266) ($generated@@136 $generated@@268 ($generated@@218 $generated@@266)))))
 :pattern ( ($generated@@136 ($generated@@263 $generated@@267 $generated@@268) ($generated@@218 $generated@@266)))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@68) (= (type $generated@@271) $generated@@68)) (= (type $generated@@272) $generated@@149)) (= (type $generated@@273) $generated@@149)) (= (type $generated@@274) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@219 $generated@@274)) (= ($generated@@78 ($generated@@223 $generated@@272 $generated@@273) ($generated@@139 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@78 ($generated@@223 $generated@@272 $generated@@273) ($generated@@139 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@140) (= ($generated@@138 $generated@@275) (= ($generated@@154 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@140) (= ($generated@@260 $generated@@276) (= ($generated@@154 $generated@@276) $generated@@63)))
 :pattern ( ($generated@@260 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@140) (= ($generated@@237 $generated@@277) (= ($generated@@154 $generated@@277) $generated@@65)))
 :pattern ( ($generated@@237 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@140) ($generated@@138 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@149) (= (type $generated@@280) $generated@@149)) (= $generated@@278 ($generated@@223 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@138 $generated@@278))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@140) ($generated@@237 $generated@@281)) (exists (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (and (and (= (type $generated@@282) $generated@@149) (= (type $generated@@283) $generated@@140)) (= $generated@@281 ($generated@@263 $generated@@282 $generated@@283)))
 :no-pattern (type $generated@@282)
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
)))
 :pattern ( ($generated@@237 $generated@@281))
)))
(assert  (and (and (forall (($generated@@288 T@T) ) (= ($generated@@1 ($generated@@286 $generated@@288)) 17)) (forall (($generated@@289 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@286 $generated@@289))
))) (forall (($generated@@290 T@T) ) (! (= (type ($generated@@284 $generated@@290)) ($generated@@286 $generated@@290))
 :pattern ( ($generated@@284 $generated@@290))
))))
(assert (forall (($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@291)) 0)
 :pattern ( ($generated@@284 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@140) ($generated@@260 $generated@@292)) (= $generated@@292 $generated@@155))
 :pattern ( ($generated@@260 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@149)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@68) (= (type $generated@@297) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@269 ($generated@@293 $generated@@295) $generated@@296 $generated@@297) ($generated@@78 $generated@@295 $generated@@296 $generated@@297)))
 :pattern ( ($generated@@269 ($generated@@293 $generated@@295) $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@300 T@T) ) (! (= (type ($generated@@299 $generated@@300)) ($generated@@80 $generated@@300 $generated@@2))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@83 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@80 $generated@@302 $generated@@2)) (and (= (= ($generated@@298 $generated@@301) 0) (= $generated@@301 ($generated@@299 $generated@@302))) (=> (not (= ($generated@@298 $generated@@301) 0)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) (< 0 ($generated ($generated@@85 $generated@@301 $generated@@303))))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@298 $generated@@301))
)))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@73)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@68) (and (= ($generated@@76 ($generated@@218 $generated@@306)) $generated@@64) (= ($generated@@304 ($generated@@218 $generated@@306)) $generated@@67)))
 :pattern ( ($generated@@218 $generated@@306))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 18)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@80 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@85 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@85 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 19)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@80 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@85 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@85 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@83 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@80 $generated@@344 $generated@@2)) (= ($generated@@158 $generated@@343) (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@344) (and (<= 0 ($generated ($generated@@85 $generated@@343 $generated@@345))) (<= ($generated ($generated@@85 $generated@@343 $generated@@345)) ($generated@@298 $generated@@343))))
 :pattern ( ($generated@@85 $generated@@343 $generated@@345))
)))))
 :pattern ( ($generated@@158 $generated@@343))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@311 (type $generated@@346))))
(let (($generated@@348 ($generated@@310 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@309 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@308 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@85 ($generated@@307 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@307 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@311 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@80 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@311 (type $generated@@353))))
(let (($generated@@355 ($generated@@310 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@309 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@308 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@85 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@329 (type $generated@@357))))
(let (($generated@@359 ($generated@@328 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@327 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@326 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@325 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@329 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@80 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@329 (type $generated@@364))))
(let (($generated@@366 ($generated@@328 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@327 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@326 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@85 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@369) $generated@@68)) (= ($generated@@136 $generated@@368 ($generated@@157 $generated@@369)) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@149) (< 0 ($generated ($generated@@85 $generated@@368 $generated@@370)))) ($generated@@224 $generated@@370 $generated@@369))
 :pattern ( ($generated@@85 $generated@@368 $generated@@370))
))))
 :pattern ( ($generated@@136 $generated@@368 ($generated@@157 $generated@@369)))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@140) ($generated@@371 $generated@@372)) (or ($generated@@260 $generated@@372) ($generated@@237 $generated@@372)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@374) $generated@@68)) (= (type $generated@@375) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@373 ($generated@@244 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@149) ($generated@@0 ($generated@@85 $generated@@373 $generated@@376))) ($generated@@269 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@85 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@78 $generated@@373 ($generated@@244 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@378) $generated@@68)) (= (type $generated@@379) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@377 ($generated@@249 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@149) ($generated@@0 ($generated@@85 $generated@@377 $generated@@380))) ($generated@@269 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@85 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@78 $generated@@377 ($generated@@249 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@85 ($generated@@299 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@85 ($generated@@299 $generated@@382) $generated@@381)))
)))
(assert  (and (and (forall (($generated@@386 T@U) ) (! (= (type ($generated@@383 $generated@@386)) ($generated@@80 $generated@@149 $generated@@4))
 :pattern ( ($generated@@383 $generated@@386))
)) (forall (($generated@@387 T@T) ($generated@@388 T@U) ) (! (= (type ($generated@@384 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@384 $generated@@387 $generated@@388))
))) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@311 (type $generated@@389))))
(let (($generated@@391 ($generated@@310 (type $generated@@389))))
(= (type ($generated@@385 $generated@@389)) ($generated@@80 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@385 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@309 $generated@@149 $generated@@149)) (= (type $generated@@393) $generated@@149)) (= ($generated@@0 ($generated@@85 ($generated@@383 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@85 ($generated@@307 $generated@@392) ($generated@@147 ($generated@@384 $generated@@140 $generated@@393)))) (= ($generated@@85 ($generated@@385 $generated@@392) ($generated@@147 ($generated@@384 $generated@@140 $generated@@393))) ($generated@@148 ($generated@@384 $generated@@140 $generated@@393))))))
 :pattern ( ($generated@@85 ($generated@@383 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@80 $generated@@149 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@329 (type $generated@@397))))
(let (($generated@@399 ($generated@@328 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@80 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@327 $generated@@149 $generated@@149)) (= (type $generated@@401) $generated@@149)) (= ($generated@@0 ($generated@@85 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@85 ($generated@@325 $generated@@400) ($generated@@147 ($generated@@384 $generated@@140 $generated@@401)))) (= ($generated@@85 ($generated@@395 $generated@@400) ($generated@@147 ($generated@@384 $generated@@140 $generated@@401))) ($generated@@148 ($generated@@384 $generated@@140 $generated@@401))))))
 :pattern ( ($generated@@85 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@310 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@309 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@85 ($generated@@350 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@85 ($generated@@307 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@85 ($generated@@385 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@85 ($generated@@307 $generated@@402) $generated@@406))
 :pattern ( ($generated@@85 ($generated@@385 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@85 ($generated@@350 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@328 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@327 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@85 ($generated@@361 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@85 ($generated@@325 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@85 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@407) $generated@@411))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@85 ($generated@@361 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@68)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@309 $generated@@149 $generated@@149)) (= (type $generated@@416) $generated@@68)) (= (type $generated@@417) $generated@@68)) (= (type $generated@@418) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@307 $generated@@415) $generated@@419))) (and ($generated@@269 ($generated@@85 ($generated@@385 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@269 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@85 ($generated@@385 $generated@@415) $generated@@419))
 :pattern ( ($generated@@85 ($generated@@307 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@78 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@68)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@327 $generated@@149 $generated@@149)) (= (type $generated@@424) $generated@@68)) (= (type $generated@@425) $generated@@68)) (= (type $generated@@426) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@423) $generated@@427))) (and ($generated@@269 ($generated@@85 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@269 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@78 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (= (type $generated@@428) $generated@@68) (= (type $generated@@429) $generated@@140)) ($generated@@136 $generated@@429 ($generated@@218 $generated@@428))) (or ($generated@@260 $generated@@429) ($generated@@237 $generated@@429)))
 :pattern ( ($generated@@237 $generated@@429) ($generated@@136 $generated@@429 ($generated@@218 $generated@@428)))
 :pattern ( ($generated@@260 $generated@@429) ($generated@@136 $generated@@429 ($generated@@218 $generated@@428)))
)))
(assert (forall (($generated@@431 T@T) ) (! (= (type ($generated@@430 $generated@@431)) ($generated@@80 $generated@@431 $generated@@4))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@329 (type $generated@@432))))
(let (($generated@@434 ($generated@@328 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@327 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@326 $generated@@434 $generated@@433)) (= ($generated@@325 $generated@@432) ($generated@@430 $generated@@434))))))
 :pattern ( ($generated@@325 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@329 (type $generated@@435))))
(let (($generated@@437 ($generated@@328 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@327 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@326 $generated@@437 $generated@@436)) (= ($generated@@361 $generated@@435) ($generated@@430 $generated@@436))))))
 :pattern ( ($generated@@361 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@329 (type $generated@@438))))
(let (($generated@@440 ($generated@@328 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@327 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@326 $generated@@440 $generated@@439)) (= ($generated@@394 $generated@@438) ($generated@@430 $generated@@149))))))
 :pattern ( ($generated@@394 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@311 (type $generated@@441))))
(let (($generated@@443 ($generated@@310 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@309 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@308 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@149) (= (type $generated@@445) $generated@@149)) ($generated@@0 ($generated@@85 ($generated@@383 $generated@@441) ($generated@@293 ($generated@@223 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@383 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@329 (type $generated@@446))))
(let (($generated@@448 ($generated@@328 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@327 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@326 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (and (and (= (type $generated@@449) $generated@@149) (= (type $generated@@450) $generated@@149)) ($generated@@0 ($generated@@85 ($generated@@394 $generated@@446) ($generated@@293 ($generated@@223 $generated@@449 $generated@@450)))))
 :no-pattern (type $generated@@449)
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@394 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@149) ($generated@@224 $generated@@451 $generated@@46)) (and (= ($generated@@293 ($generated@@384 $generated@@2 $generated@@451)) $generated@@451) ($generated@@136 ($generated@@384 $generated@@2 $generated@@451) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@451 $generated@@46))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@149) ($generated@@224 $generated@@452 $generated@@47)) (and (= ($generated@@293 ($generated@@384 $generated@@3 $generated@@452)) $generated@@452) ($generated@@136 ($generated@@384 $generated@@3 $generated@@452) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@452 $generated@@47))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@149) ($generated@@224 $generated@@453 $generated@@44)) (and (= ($generated@@293 ($generated@@384 $generated@@4 $generated@@453)) $generated@@453) ($generated@@136 ($generated@@384 $generated@@4 $generated@@453) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@453 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@454) 20))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@149) ($generated@@224 $generated@@455 $generated@@45)) (and (= ($generated@@293 ($generated@@384 $generated@@454 $generated@@455)) $generated@@455) ($generated@@136 ($generated@@384 $generated@@454 $generated@@455) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@455 $generated@@45))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@68) (= ($generated@@224 ($generated@@293 $generated@@456) $generated@@457) ($generated@@136 $generated@@456 $generated@@457)))
 :pattern ( ($generated@@224 ($generated@@293 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@83 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@80 $generated@@459 $generated@@2)) (<= 0 ($generated@@298 $generated@@458))))
 :pattern ( ($generated@@298 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@287 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@286 $generated@@461)) (<= 0 ($generated@@285 $generated@@460))))
 :pattern ( ($generated@@285 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@68) (= (type $generated@@465) $generated@@68)) (= ($generated@@462 ($generated@@412 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@412 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@68)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@68) (= (type $generated@@469) $generated@@68)) (= ($generated@@466 ($generated@@412 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@412 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@68) (= (type $generated@@471) $generated@@68)) (= ($generated@@76 ($generated@@412 $generated@@470 $generated@@471)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@68)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@68) (= (type $generated@@475) $generated@@68)) (= ($generated@@472 ($generated@@420 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@420 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@68)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@68) (= (type $generated@@479) $generated@@68)) (= ($generated@@476 ($generated@@420 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@420 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@68) (= (type $generated@@481) $generated@@68)) (= ($generated@@76 ($generated@@420 $generated@@480 $generated@@481)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@149) (= (type $generated@@483) $generated@@149)) (= ($generated@@154 ($generated@@223 $generated@@482 $generated@@483)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@68)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@68) (= (type $generated@@487) $generated@@68)) (= ($generated@@484 ($generated@@139 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@139 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@68)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@68) (= (type $generated@@491) $generated@@68)) (= ($generated@@488 ($generated@@139 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@139 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@149) (= (type $generated@@493) $generated@@149)) (= ($generated@@147 ($generated@@223 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@223 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@149) (= (type $generated@@495) $generated@@149)) (= ($generated@@148 ($generated@@223 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@223 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@149) (= (type $generated@@497) $generated@@140)) (= ($generated@@154 ($generated@@263 $generated@@496 $generated@@497)) $generated@@65))
 :pattern ( ($generated@@263 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@149) (= (type $generated@@499) $generated@@140)) (= ($generated@@238 ($generated@@263 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@263 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@149) (= (type $generated@@501) $generated@@140)) (= ($generated@@239 ($generated@@263 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@263 $generated@@500 $generated@@501))
)))
(assert  (and (forall (($generated@@504 T@U) ) (! (= (type ($generated@@502 $generated@@504)) $generated@@68)
 :pattern ( ($generated@@502 $generated@@504))
)) (forall (($generated@@505 T@U) ($generated@@506 Int) ) (! (let (($generated@@507 ($generated@@287 (type $generated@@505))))
(= (type ($generated@@503 $generated@@505 $generated@@506)) $generated@@507))
 :pattern ( ($generated@@503 $generated@@505 $generated@@506))
))))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@286 $generated@@149)) (= (type $generated@@509) $generated@@68)) (= (type $generated@@510) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@508 ($generated@@502 $generated@@509) $generated@@510) (forall (($generated@@511 Int) ) (!  (=> (and (<= 0 $generated@@511) (< $generated@@511 ($generated@@285 $generated@@508))) ($generated@@269 ($generated@@503 $generated@@508 $generated@@511) $generated@@509 $generated@@510))
 :pattern ( ($generated@@503 $generated@@508 $generated@@511))
))))
 :pattern ( ($generated@@78 $generated@@508 ($generated@@502 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@513 Int) ) (! (= ($generated@@512 ($generated@@79 $generated@@513)) $generated@@513)
 :pattern ( ($generated@@79 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@68)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@68) (= ($generated@@514 ($generated@@244 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@244 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@68) (= ($generated@@76 ($generated@@244 $generated@@517)) $generated@@54))
 :pattern ( ($generated@@244 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@68)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@68) (= ($generated@@518 ($generated@@249 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@249 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@68) (= ($generated@@76 ($generated@@249 $generated@@521)) $generated@@55))
 :pattern ( ($generated@@249 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@68)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@68) (= ($generated@@522 ($generated@@157 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@157 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@68) (= ($generated@@76 ($generated@@157 $generated@@525)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@68) (= ($generated@@526 ($generated@@502 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@502 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@68) (= ($generated@@76 ($generated@@502 $generated@@529)) $generated@@57))
 :pattern ( ($generated@@502 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@68)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@68) (= ($generated@@530 ($generated@@218 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@218 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 (type $generated@@533)))
(= ($generated@@384 $generated@@534 ($generated@@293 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@293 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@309 $generated@@149 $generated@@149)) (= (type $generated@@536) $generated@@68)) (= (type $generated@@537) $generated@@68)) (= ($generated@@136 $generated@@535 ($generated@@412 $generated@@536 $generated@@537)) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@307 $generated@@535) $generated@@538))) (and ($generated@@224 ($generated@@85 ($generated@@385 $generated@@535) $generated@@538) $generated@@537) ($generated@@224 $generated@@538 $generated@@536)))
 :pattern ( ($generated@@85 ($generated@@385 $generated@@535) $generated@@538))
 :pattern ( ($generated@@85 ($generated@@307 $generated@@535) $generated@@538))
))))
 :pattern ( ($generated@@136 $generated@@535 ($generated@@412 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@327 $generated@@149 $generated@@149)) (= (type $generated@@540) $generated@@68)) (= (type $generated@@541) $generated@@68)) (= ($generated@@136 $generated@@539 ($generated@@420 $generated@@540 $generated@@541)) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@539) $generated@@542))) (and ($generated@@224 ($generated@@85 ($generated@@395 $generated@@539) $generated@@542) $generated@@541) ($generated@@224 $generated@@542 $generated@@540)))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@539) $generated@@542))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@539) $generated@@542))
))))
 :pattern ( ($generated@@136 $generated@@539 ($generated@@420 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@149) (= (type $generated@@546) $generated@@149)) (< ($generated@@543 $generated@@545) ($generated@@544 ($generated@@223 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@223 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@149) (= (type $generated@@548) $generated@@149)) (< ($generated@@543 $generated@@548) ($generated@@544 ($generated@@223 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@223 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@149) (= (type $generated@@550) $generated@@140)) (< ($generated@@543 $generated@@549) ($generated@@544 ($generated@@263 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@263 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@149) (= (type $generated@@552) $generated@@140)) (< ($generated@@544 $generated@@552) ($generated@@544 ($generated@@263 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@263 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@149) (= (type $generated@@554) $generated@@68)) (= (type $generated@@555) $generated@@68)) ($generated@@224 $generated@@553 ($generated@@412 $generated@@554 $generated@@555))) (and (= ($generated@@293 ($generated@@384 ($generated@@309 $generated@@149 $generated@@149) $generated@@553)) $generated@@553) ($generated@@136 ($generated@@384 ($generated@@309 $generated@@149 $generated@@149) $generated@@553) ($generated@@412 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@224 $generated@@553 ($generated@@412 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@149) (= (type $generated@@557) $generated@@68)) (= (type $generated@@558) $generated@@68)) ($generated@@224 $generated@@556 ($generated@@420 $generated@@557 $generated@@558))) (and (= ($generated@@293 ($generated@@384 ($generated@@327 $generated@@149 $generated@@149) $generated@@556)) $generated@@556) ($generated@@136 ($generated@@384 ($generated@@327 $generated@@149 $generated@@149) $generated@@556) ($generated@@420 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@224 $generated@@556 ($generated@@420 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@68) (= (type $generated@@560) $generated@@68)) (= (type $generated@@561) $generated@@149)) ($generated@@224 $generated@@561 ($generated@@139 $generated@@559 $generated@@560))) (and (= ($generated@@293 ($generated@@384 $generated@@140 $generated@@561)) $generated@@561) ($generated@@136 ($generated@@384 $generated@@140 $generated@@561) ($generated@@139 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@224 $generated@@561 ($generated@@139 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@140) (= (type $generated@@563) $generated@@68)) (= (type $generated@@564) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@219 $generated@@564) (and ($generated@@237 $generated@@562) ($generated@@78 $generated@@562 ($generated@@218 $generated@@563) $generated@@564)))) ($generated@@269 ($generated@@238 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@269 ($generated@@238 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
 (not ($generated@@0 ($generated@@85 ($generated@@430 $generated@@566) $generated@@565))))
 :pattern ( (let (($generated@@566 (type $generated@@565)))
($generated@@85 ($generated@@430 $generated@@566) $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@68) (= (type $generated@@568) $generated@@68)) (and (= ($generated@@76 ($generated@@139 $generated@@567 $generated@@568)) $generated@@62) (= ($generated@@304 ($generated@@139 $generated@@567 $generated@@568)) $generated@@66)))
 :pattern ( ($generated@@139 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@140) (= ($generated@@543 ($generated@@293 $generated@@569)) ($generated@@544 $generated@@569)))
 :pattern ( ($generated@@543 ($generated@@293 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@149) ($generated@@224 $generated@@570 ($generated@@79 0))) (and (= ($generated@@293 ($generated@@384 $generated@@2 $generated@@570)) $generated@@570) ($generated@@136 ($generated@@384 ($generated@@80 $generated@@149 $generated@@4) $generated@@570) ($generated@@79 0))))
 :pattern ( ($generated@@224 $generated@@570 ($generated@@79 0)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@149) (= (type $generated@@572) $generated@@68)) ($generated@@224 $generated@@571 ($generated@@244 $generated@@572))) (and (= ($generated@@293 ($generated@@384 ($generated@@80 $generated@@149 $generated@@4) $generated@@571)) $generated@@571) ($generated@@136 ($generated@@384 ($generated@@80 $generated@@149 $generated@@4) $generated@@571) ($generated@@244 $generated@@572))))
 :pattern ( ($generated@@224 $generated@@571 ($generated@@244 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@149) (= (type $generated@@574) $generated@@68)) ($generated@@224 $generated@@573 ($generated@@249 $generated@@574))) (and (= ($generated@@293 ($generated@@384 ($generated@@80 $generated@@149 $generated@@4) $generated@@573)) $generated@@573) ($generated@@136 ($generated@@384 ($generated@@80 $generated@@149 $generated@@4) $generated@@573) ($generated@@249 $generated@@574))))
 :pattern ( ($generated@@224 $generated@@573 ($generated@@249 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@149) (= (type $generated@@576) $generated@@68)) ($generated@@224 $generated@@575 ($generated@@157 $generated@@576))) (and (= ($generated@@293 ($generated@@384 ($generated@@80 $generated@@149 $generated@@2) $generated@@575)) $generated@@575) ($generated@@136 ($generated@@384 ($generated@@80 $generated@@149 $generated@@2) $generated@@575) ($generated@@157 $generated@@576))))
 :pattern ( ($generated@@224 $generated@@575 ($generated@@157 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@149) (= (type $generated@@578) $generated@@68)) ($generated@@224 $generated@@577 ($generated@@502 $generated@@578))) (and (= ($generated@@293 ($generated@@384 ($generated@@286 $generated@@149) $generated@@577)) $generated@@577) ($generated@@136 ($generated@@384 ($generated@@286 $generated@@149) $generated@@577) ($generated@@502 $generated@@578))))
 :pattern ( ($generated@@224 $generated@@577 ($generated@@502 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@68) (= (type $generated@@580) $generated@@149)) ($generated@@224 $generated@@580 ($generated@@218 $generated@@579))) (and (= ($generated@@293 ($generated@@384 $generated@@140 $generated@@580)) $generated@@580) ($generated@@136 ($generated@@384 $generated@@140 $generated@@580) ($generated@@218 $generated@@579))))
 :pattern ( ($generated@@224 $generated@@580 ($generated@@218 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@140) (= (type $generated@@582) $generated@@68)) (= (type $generated@@583) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@219 $generated@@583) (and ($generated@@237 $generated@@581) ($generated@@78 $generated@@581 ($generated@@218 $generated@@582) $generated@@583)))) ($generated@@78 ($generated@@239 $generated@@581) ($generated@@218 $generated@@582) $generated@@583))
 :pattern ( ($generated@@78 ($generated@@239 $generated@@581) ($generated@@218 $generated@@582) $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@584 ($generated@@157 $generated@@585) $generated@@586) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@149) (< 0 ($generated ($generated@@85 $generated@@584 $generated@@587)))) ($generated@@269 $generated@@587 $generated@@585 $generated@@586))
 :pattern ( ($generated@@85 $generated@@584 $generated@@587))
))))
 :pattern ( ($generated@@78 $generated@@584 ($generated@@157 $generated@@585) $generated@@586))
)))
(assert (= $generated@@155 ($generated@@256 $generated@@155)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@140) (= (type $generated@@589) $generated@@68)) (= (type $generated@@590) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@219 $generated@@590) (and ($generated@@138 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@68) ($generated@@78 $generated@@588 ($generated@@139 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@78 $generated@@588 ($generated@@139 $generated@@589 $generated@@591) $generated@@590))
))))) ($generated@@269 ($generated@@147 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@269 ($generated@@147 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@140) (= (type $generated@@593) $generated@@68)) (= (type $generated@@594) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@219 $generated@@594) (and ($generated@@138 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@68) ($generated@@78 $generated@@592 ($generated@@139 $generated@@595 $generated@@593) $generated@@594))
 :pattern ( ($generated@@78 $generated@@592 ($generated@@139 $generated@@595 $generated@@593) $generated@@594))
))))) ($generated@@269 ($generated@@148 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@269 ($generated@@148 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@149) (= (type $generated@@597) $generated@@149)) (= ($generated@@223 ($generated@@256 $generated@@596) ($generated@@256 $generated@@597)) ($generated@@256 ($generated@@223 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@223 ($generated@@256 $generated@@596) ($generated@@256 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@149) (= (type $generated@@599) $generated@@140)) (= ($generated@@263 ($generated@@256 $generated@@598) ($generated@@256 $generated@@599)) ($generated@@256 ($generated@@263 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@263 ($generated@@256 $generated@@598) ($generated@@256 $generated@@599)))
)))
(assert (forall (($generated@@600 Int) ) (! (= ($generated@@293 ($generated@@8 ($generated@@254 $generated@@600))) ($generated@@256 ($generated@@293 ($generated@@8 $generated@@600))))
 :pattern ( ($generated@@293 ($generated@@8 ($generated@@254 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ) (! (= ($generated@@293 ($generated@@256 $generated@@601)) ($generated@@256 ($generated@@293 $generated@@601)))
 :pattern ( ($generated@@293 ($generated@@256 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@287 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@286 $generated@@603)) (= ($generated@@285 $generated@@602) 0)) (= $generated@@602 ($generated@@284 $generated@@603))))
 :pattern ( ($generated@@285 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@605)))
 (=> (and (and (= (type $generated@@604) ($generated@@80 $generated@@607 $generated@@2)) (= (type $generated@@606) $generated@@2)) (<= 0 ($generated $generated@@606))) (= ($generated@@298 ($generated@@86 $generated@@604 $generated@@605 $generated@@606)) (+ (- ($generated@@298 $generated@@604) ($generated ($generated@@85 $generated@@604 $generated@@605))) ($generated $generated@@606)))))
 :pattern ( ($generated@@298 ($generated@@86 $generated@@604 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@609) $generated@@2)) ($generated@@78 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@78 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@611) $generated@@3)) ($generated@@78 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@78 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@613) $generated@@4)) ($generated@@78 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@78 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@615) $generated@@454)) ($generated@@78 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@78 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@617) $generated@@149)) ($generated@@78 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@78 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@618) $generated@@68) (= (type $generated@@619) $generated@@149)) (= (type $generated@@620) $generated@@140)) (= (type $generated@@621) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@219 $generated@@621)) (= ($generated@@78 ($generated@@263 $generated@@619 $generated@@620) ($generated@@218 $generated@@618) $generated@@621)  (and ($generated@@269 $generated@@619 $generated@@618 $generated@@621) ($generated@@78 $generated@@620 ($generated@@218 $generated@@618) $generated@@621))))
 :pattern ( ($generated@@78 ($generated@@263 $generated@@619 $generated@@620) ($generated@@218 $generated@@618) $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@286 $generated@@149)) (= (type $generated@@623) $generated@@68)) (= ($generated@@136 $generated@@622 ($generated@@502 $generated@@623)) (forall (($generated@@624 Int) ) (!  (=> (and (<= 0 $generated@@624) (< $generated@@624 ($generated@@285 $generated@@622))) ($generated@@224 ($generated@@503 $generated@@622 $generated@@624) $generated@@623))
 :pattern ( ($generated@@503 $generated@@622 $generated@@624))
))))
 :pattern ( ($generated@@136 $generated@@622 ($generated@@502 $generated@@623)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 Int) ) (!  (=> (= (type $generated@@626) ($generated@@286 $generated@@149)) (=> (and (<= 0 $generated@@627) (< $generated@@627 ($generated@@285 $generated@@626))) (< ($generated@@544 ($generated@@384 $generated@@140 ($generated@@503 $generated@@626 $generated@@627))) ($generated@@625 $generated@@626))))
 :pattern ( ($generated@@544 ($generated@@384 $generated@@140 ($generated@@503 $generated@@626 $generated@@627))))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) ($generated@@309 $generated@@149 $generated@@149)) (= (type $generated@@629) $generated@@68)) (= (type $generated@@630) $generated@@68)) ($generated@@136 $generated@@628 ($generated@@412 $generated@@629 $generated@@630))) (and (and ($generated@@136 ($generated@@307 $generated@@628) ($generated@@244 $generated@@629)) ($generated@@136 ($generated@@350 $generated@@628) ($generated@@244 $generated@@630))) ($generated@@136 ($generated@@383 $generated@@628) ($generated@@244 ($generated@@139 $generated@@629 $generated@@630)))))
 :pattern ( ($generated@@136 $generated@@628 ($generated@@412 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) ($generated@@327 $generated@@149 $generated@@149)) (= (type $generated@@632) $generated@@68)) (= (type $generated@@633) $generated@@68)) ($generated@@136 $generated@@631 ($generated@@420 $generated@@632 $generated@@633))) (and (and ($generated@@136 ($generated@@325 $generated@@631) ($generated@@249 $generated@@632)) ($generated@@136 ($generated@@361 $generated@@631) ($generated@@249 $generated@@633))) ($generated@@136 ($generated@@394 $generated@@631) ($generated@@249 ($generated@@139 $generated@@632 $generated@@633)))))
 :pattern ( ($generated@@136 $generated@@631 ($generated@@420 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@2) ($generated@@136 $generated@@634 $generated@@46))
 :pattern ( ($generated@@136 $generated@@634 $generated@@46))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@3) ($generated@@136 $generated@@635 $generated@@47))
 :pattern ( ($generated@@136 $generated@@635 $generated@@47))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@4) ($generated@@136 $generated@@636 $generated@@44))
 :pattern ( ($generated@@136 $generated@@636 $generated@@44))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@454) ($generated@@136 $generated@@637 $generated@@45))
 :pattern ( ($generated@@136 $generated@@637 $generated@@45))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@149) ($generated@@136 $generated@@638 $generated@@48))
 :pattern ( ($generated@@136 $generated@@638 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () Int)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () Int)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 (T@U) Bool)
(declare-fun $generated@@648 () Int)
(assert  (and (and (and (and (and (= (type $generated@@639) $generated@@140) (= (type $generated@@641) $generated@@140)) (= (type $generated@@642) $generated@@140)) (= (type $generated@@644) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@645) ($generated@@164 $generated@@81 $generated@@4))) (= (type $generated@@646) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@649 true))
(let (($generated@@650  (=> (and (= $generated@@639 $generated@@155) (= (ControlFlow 0 5) (- 0 4))) false)))
(let (($generated@@651  (=> (not (= $generated@@639 ($generated@@263 ($generated@@293 ($generated@@8 $generated@@640)) $generated@@641))) (and (=> (= (ControlFlow 0 7) 5) $generated@@650) (=> (= (ControlFlow 0 7) 6) $generated@@649)))))
(let (($generated@@652 true))
(let (($generated@@653  (=> (= $generated@@642 ($generated@@263 ($generated@@293 ($generated@@8 $generated@@643)) $generated@@639)) (=> (and ($generated@@136 $generated@@639 ($generated@@218 $generated@@46)) ($generated@@78 $generated@@639 ($generated@@218 $generated@@46) $generated@@644)) (and (=> (= (ControlFlow 0 8) 3) $generated@@652) (=> (= (ControlFlow 0 8) 7) $generated@@651))))))
(let (($generated@@654 true))
(let (($generated@@655  (=> (not (= $generated@@642 $generated@@155)) (and (=> (= (ControlFlow 0 9) 8) $generated@@653) (=> (= (ControlFlow 0 9) 2) $generated@@654)))))
(let (($generated@@656 true))
(let (($generated@@657  (=> (= $generated@@645 ($generated@@163 $generated@@646 $generated@@644 $generated@@60 false)) (and (=> (= (ControlFlow 0 10) 1) $generated@@656) (=> (= (ControlFlow 0 10) 9) $generated@@655)))))
(let (($generated@@658  (=> (and ($generated@@219 $generated@@644) ($generated@@647 $generated@@644)) (=> (and (and (and ($generated@@136 $generated@@642 ($generated@@218 $generated@@46)) ($generated@@78 $generated@@642 ($generated@@218 $generated@@46) $generated@@644)) ($generated@@371 $generated@@642)) (and (= 1 $generated@@648) (= (ControlFlow 0 11) 10))) $generated@@657))))
$generated@@658)))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 5) (- 4))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Real) Real)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Real) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Real) ) (! (= ($generated@@163 ($generated@@9 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@9 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@9 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Real)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@181  (=> (and (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@177 ($generated@@157 15.0)))))
(let (($generated@@182  (=> (and (and ($generated@@178 $generated@@175) ($generated@@179 $generated@@175)) (and (= 1 $generated@@180) (= (ControlFlow 0 3) 2))) $generated@@181)))
$generated@@182)))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U Bool T@U) T@U)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@88 (Int) T@U)
(declare-fun $generated@@89 (T@T T@T) T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@185 (T@T T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) T@U)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@250 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@276 (T@U) Bool)
(declare-fun $generated@@279 (T@U T@U T@U) Bool)
(declare-fun $generated@@295 (T@T) T@U)
(declare-fun $generated@@296 (T@U) Int)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@298 (T@T) T@T)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@309 (T@U) Int)
(declare-fun $generated@@310 (T@T) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@334 (T@T T@T) T@U)
(declare-fun $generated@@335 (T@T T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@354 (T@T T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@373 (T@U) T@U)
(declare-fun $generated@@383 (T@U) Bool)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@438 (T@T) T@U)
(declare-fun $generated@@462 () T@T)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@505 (T@U Int) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@537 (T@U) Int)
(declare-fun $generated@@552 (T@U) Int)
(declare-fun $generated@@568 (T@U) T@U)
(declare-fun $generated@@625 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (= ($generated@@1 $generated@@77) 11) (forall (($generated@@79 T@U) ($generated@@80 Bool) ($generated@@81 T@U) ) (! (= (type ($generated@@76 $generated@@79 $generated@@80 $generated@@81)) $generated@@77)
 :pattern ( ($generated@@76 $generated@@79 $generated@@80 $generated@@81))
))))
(assert (forall (($generated@@82 T@U) ($generated@@83 Bool) ($generated@@84 T@U) ) (!  (=> (and (= (type $generated@@82) $generated@@77) (= (type $generated@@84) $generated@@77)) (= ($generated@@78 ($generated@@76 $generated@@82 $generated@@83 $generated@@84)) $generated@@83))
 :pattern ( ($generated@@76 $generated@@82 $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ) (! (= (type ($generated@@85 $generated@@86)) $generated@@69)
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (= ($generated@@85 $generated@@44) $generated@@49))
(assert (= ($generated@@85 $generated@@45) $generated@@50))
(assert (= ($generated@@85 $generated@@46) $generated@@51))
(assert (= ($generated@@85 $generated@@47) $generated@@52))
(assert (= ($generated@@85 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (= ($generated@@1 ($generated@@89 $generated@@98 $generated@@99)) 12)) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@92 ($generated@@89 $generated@@100 $generated@@101)) $generated@@100)
 :pattern ( ($generated@@89 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@T) ($generated@@103 T@T) ) (! (= ($generated@@93 ($generated@@89 $generated@@102 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@89 $generated@@102 $generated@@103))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@93 (type $generated@@104))))
(= (type ($generated@@94 $generated@@104 $generated@@105)) $generated@@106))
 :pattern ( ($generated@@94 $generated@@104 $generated@@105))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 (type $generated@@109)))
(let (($generated@@111 (type $generated@@108)))
(= (type ($generated@@95 $generated@@107 $generated@@108 $generated@@109)) ($generated@@89 $generated@@111 $generated@@110))))
 :pattern ( ($generated@@95 $generated@@107 $generated@@108 $generated@@109))
))) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (let (($generated@@115 ($generated@@93 (type $generated@@112))))
 (=> (= (type $generated@@114) $generated@@115) (= ($generated@@94 ($generated@@95 $generated@@112 $generated@@113 $generated@@114) $generated@@113) $generated@@114)))
 :weight 0
))) (and (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@94 ($generated@@95 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@94 $generated@@117 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@94 $generated@@121 $generated@@123)))
 :weight 0
)))) (= ($generated@@1 $generated@@90) 13)) (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@71 (type $generated@@125))))
(= (type ($generated@@96 $generated@@124 $generated@@125)) $generated@@126))
 :pattern ( ($generated@@96 $generated@@124 $generated@@125))
))) (= ($generated@@1 $generated@@91) 14)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= (type ($generated@@97 $generated@@127 $generated@@128 $generated@@129)) $generated@@91)
 :pattern ( ($generated@@97 $generated@@127 $generated@@128 $generated@@129))
))) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (let (($generated@@133 ($generated@@71 (type $generated@@131))))
 (=> (= (type $generated@@132) $generated@@133) (= ($generated@@96 ($generated@@97 $generated@@130 $generated@@131 $generated@@132) $generated@@131) $generated@@132)))
 :weight 0
))) (and (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@136 $generated@@137) (= ($generated@@96 ($generated@@97 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@96 $generated@@135 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or true (= ($generated@@96 ($generated@@97 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@96 $generated@@139 $generated@@141)))
 :weight 0
)))) (forall (($generated@@142 Int) ) (! (= (type ($generated@@88 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@88 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@2) (= (type $generated@@144) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@87 $generated@@143 ($generated@@88 0) $generated@@144))
 :pattern ( ($generated@@87 $generated@@143 ($generated@@88 0) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (! (= (type ($generated@@145 $generated@@146)) $generated@@72)
 :pattern ( ($generated@@145 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 Bool) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@147) $generated@@77) (= (type $generated@@149) $generated@@77)) (= ($generated@@145 ($generated@@76 $generated@@147 $generated@@148 $generated@@149)) $generated@@65))
 :pattern ( ($generated@@76 $generated@@147 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ) (! (= (type ($generated@@150 $generated@@151)) $generated@@77)
 :pattern ( ($generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@77) (= (type $generated@@154) $generated@@77)) (= ($generated@@150 ($generated@@76 $generated@@152 $generated@@153 $generated@@154)) $generated@@152))
 :pattern ( ($generated@@76 $generated@@152 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (! (= (type ($generated@@155 $generated@@156)) $generated@@77)
 :pattern ( ($generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ) (!  (=> (and (= (type $generated@@157) $generated@@77) (= (type $generated@@159) $generated@@77)) (= ($generated@@155 ($generated@@76 $generated@@157 $generated@@158 $generated@@159)) $generated@@159))
 :pattern ( ($generated@@76 $generated@@157 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> (= (type $generated@@161) $generated@@2) ($generated@@160 $generated@@161 ($generated@@88 0)))
 :pattern ( ($generated@@160 $generated@@161 ($generated@@88 0)))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@164 $generated@@165)) $generated@@68)
 :pattern ( ($generated@@163 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@68) (= (type $generated@@167) $generated@@68)) (= (type $generated@@168) $generated@@77)) ($generated@@160 $generated@@168 ($generated@@163 $generated@@166 $generated@@167))) ($generated@@162 $generated@@168))
 :pattern ( ($generated@@162 $generated@@168) ($generated@@160 $generated@@168 ($generated@@163 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 15) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@77) (= (type $generated@@176) $generated@@77)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (= (type $generated@@177) $generated@@77))
(assert (= ($generated@@145 $generated@@177) $generated@@63))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@178 $generated@@180)) $generated@@68)
 :pattern ( ($generated@@178 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and (= (type $generated@@181) ($generated@@89 $generated@@172 $generated@@2)) (= (type $generated@@182) $generated@@68)) ($generated@@160 $generated@@181 ($generated@@178 $generated@@182))) ($generated@@179 $generated@@181))
 :pattern ( ($generated@@160 $generated@@181 ($generated@@178 $generated@@182)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@189 $generated@@190)) 16)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@186 ($generated@@185 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@185 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@187 ($generated@@185 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@185 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@187 (type $generated@@195))))
(= (type ($generated@@183 $generated@@195 $generated@@196 $generated@@197)) $generated@@198))
 :pattern ( ($generated@@183 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 (type $generated@@202)))
(let (($generated@@204 (type $generated@@200)))
(= (type ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202)) ($generated@@185 $generated@@204 $generated@@203))))
 :pattern ( ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@187 (type $generated@@205))))
 (=> (= (type $generated@@208) $generated@@209) (= ($generated@@183 ($generated@@188 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@206 $generated@@207) $generated@@208)))
 :weight 0
))) (and (and (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@183 ($generated@@188 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@183 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@183 ($generated@@188 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@183 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or true (= ($generated@@183 ($generated@@188 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@183 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@185 $generated@@90 $generated@@4))
 :pattern ( ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@71 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@90) (= (type $generated@@233) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@234) ($generated@@70 $generated@@4))) (= (type $generated@@236) $generated@@90)) (= (type $generated@@237) ($generated@@70 $generated@@238))) (= ($generated@@0 ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@96 ($generated@@94 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (type ($generated@@239 $generated@@241 $generated@@242)) $generated@@77)
 :pattern ( ($generated@@239 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (and (= (type $generated@@243) $generated@@68) (= (type $generated@@244) $generated@@68)) (= (type $generated@@245) $generated@@172)) (= (type $generated@@246) $generated@@172)) (= ($generated@@160 ($generated@@239 $generated@@245 $generated@@246) ($generated@@163 $generated@@243 $generated@@244))  (and ($generated@@240 $generated@@245 $generated@@243) ($generated@@240 $generated@@246 $generated@@244))))
 :pattern ( ($generated@@160 ($generated@@239 $generated@@245 $generated@@246) ($generated@@163 $generated@@243 $generated@@244)))
)))
(assert (= (type $generated@@247) $generated@@68))
(assert ($generated@@160 $generated@@177 $generated@@247))
(assert (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) ($generated@@89 $generated@@90 $generated@@91)) ($generated@@248 $generated@@249)) ($generated@@87 $generated@@177 $generated@@247 $generated@@249))
 :pattern ( ($generated@@87 $generated@@177 $generated@@247 $generated@@249))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (= (type $generated@@252) $generated@@77) (= (type $generated@@253) $generated@@77)) (and ($generated@@251 $generated@@252) ($generated@@251 $generated@@253))) (= ($generated@@250 $generated@@252 $generated@@253)  (and (and ($generated@@250 ($generated@@150 $generated@@252) ($generated@@150 $generated@@253)) (= ($generated@@78 $generated@@252) ($generated@@78 $generated@@253))) ($generated@@250 ($generated@@155 $generated@@252) ($generated@@155 $generated@@253)))))
 :pattern ( ($generated@@250 $generated@@252 $generated@@253) ($generated@@251 $generated@@252))
 :pattern ( ($generated@@250 $generated@@252 $generated@@253) ($generated@@251 $generated@@253))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@77) (= (type $generated@@255) $generated@@77)) (= ($generated@@169 $generated@@254 $generated@@255) (= $generated@@254 $generated@@255)))
 :pattern ( ($generated@@169 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@77) (= (type $generated@@257) $generated@@77)) (= ($generated@@250 $generated@@256 $generated@@257) (= $generated@@256 $generated@@257)))
 :pattern ( ($generated@@250 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@68)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@89 $generated@@172 $generated@@4)) (= (type $generated@@261) $generated@@68)) (= ($generated@@160 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@172) ($generated@@0 ($generated@@94 $generated@@260 $generated@@262))) ($generated@@240 $generated@@262 $generated@@261))
 :pattern ( ($generated@@94 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@160 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@68)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@89 $generated@@172 $generated@@4)) (= (type $generated@@266) $generated@@68)) (= ($generated@@160 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@172) ($generated@@0 ($generated@@94 $generated@@265 $generated@@267))) ($generated@@240 $generated@@267 $generated@@266))
 :pattern ( ($generated@@94 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@160 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 (type $generated@@269)))
(= (type ($generated@@268 $generated@@269)) $generated@@270))
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= ($generated@@268 $generated@@271) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 Bool) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (= (type $generated@@272) $generated@@77) (= (type $generated@@274) $generated@@77)) (= (type $generated@@275) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@248 $generated@@275)) (= ($generated@@87 ($generated@@76 $generated@@272 $generated@@273 $generated@@274) $generated@@247 $generated@@275)  (and (and ($generated@@87 $generated@@272 $generated@@247 $generated@@275) ($generated@@87 ($generated@@11 $generated@@273) $generated@@44 $generated@@275)) ($generated@@87 $generated@@274 $generated@@247 $generated@@275))))
 :pattern ( ($generated@@87 ($generated@@76 $generated@@272 $generated@@273 $generated@@274) $generated@@247 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (= (type $generated@@277) $generated@@77) (= (type $generated@@278) $generated@@77)) (and ($generated@@276 $generated@@277) ($generated@@276 $generated@@278))) (= ($generated@@250 $generated@@277 $generated@@278) true))
 :pattern ( ($generated@@250 $generated@@277 $generated@@278) ($generated@@276 $generated@@277))
 :pattern ( ($generated@@250 $generated@@277 $generated@@278) ($generated@@276 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) $generated@@68) (= (type $generated@@281) $generated@@68)) (= (type $generated@@282) $generated@@172)) (= (type $generated@@283) $generated@@172)) (= (type $generated@@284) ($generated@@89 $generated@@90 $generated@@91))) ($generated@@248 $generated@@284)) (= ($generated@@87 ($generated@@239 $generated@@282 $generated@@283) ($generated@@163 $generated@@280 $generated@@281) $generated@@284)  (and ($generated@@279 $generated@@282 $generated@@280 $generated@@284) ($generated@@279 $generated@@283 $generated@@281 $generated@@284))))
 :pattern ( ($generated@@87 ($generated@@239 $generated@@282 $generated@@283) ($generated@@163 $generated@@280 $generated@@281) $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@77) (= ($generated@@162 $generated@@285) (= ($generated@@145 $generated@@285) $generated@@61)))
 :pattern ( ($generated@@162 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@77) (= ($generated@@276 $generated@@286) (= ($generated@@145 $generated@@286) $generated@@63)))
 :pattern ( ($generated@@276 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@77) (= ($generated@@251 $generated@@287) (= ($generated@@145 $generated@@287) $generated@@65)))
 :pattern ( ($generated@@251 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@77) ($generated@@251 $generated@@288)) (exists (($generated@@289 T@U) ($generated@@290 Bool) ($generated@@291 T@U) ) (!  (and (and (= (type $generated@@289) $generated@@77) (= (type $generated@@291) $generated@@77)) (= $generated@@288 ($generated@@76 $generated@@289 $generated@@290 $generated@@291)))
 :no-pattern (type $generated@@289)
 :no-pattern (type $generated@@291)
 :no-pattern ($generated $generated@@289)
 :no-pattern ($generated@@0 $generated@@289)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
)))
 :pattern ( ($generated@@251 $generated@@288))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@77) ($generated@@162 $generated@@292)) (exists (($generated@@293 T@U) ($generated@@294 T@U) ) (!  (and (and (= (type $generated@@293) $generated@@172) (= (type $generated@@294) $generated@@172)) (= $generated@@292 ($generated@@239 $generated@@293 $generated@@294)))
 :no-pattern (type $generated@@293)
 :no-pattern (type $generated@@294)
 :no-pattern ($generated $generated@@293)
 :no-pattern ($generated@@0 $generated@@293)
 :no-pattern ($generated $generated@@294)
 :no-pattern ($generated@@0 $generated@@294)
)))
 :pattern ( ($generated@@162 $generated@@292))
)))
(assert  (and (and (forall (($generated@@299 T@T) ) (= ($generated@@1 ($generated@@297 $generated@@299)) 17)) (forall (($generated@@300 T@T) ) (! (= ($generated@@298 ($generated@@297 $generated@@300)) $generated@@300)
 :pattern ( ($generated@@297 $generated@@300))
))) (forall (($generated@@301 T@T) ) (! (= (type ($generated@@295 $generated@@301)) ($generated@@297 $generated@@301))
 :pattern ( ($generated@@295 $generated@@301))
))))
(assert (forall (($generated@@302 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@302)) 0)
 :pattern ( ($generated@@295 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@77) ($generated@@276 $generated@@303)) (= $generated@@303 $generated@@177))
 :pattern ( ($generated@@276 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@172)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@68) (= (type $generated@@308) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@279 ($generated@@304 $generated@@306) $generated@@307 $generated@@308) ($generated@@87 $generated@@306 $generated@@307 $generated@@308)))
 :pattern ( ($generated@@279 ($generated@@304 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@311 T@T) ) (! (= (type ($generated@@310 $generated@@311)) ($generated@@89 $generated@@311 $generated@@2))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@92 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@89 $generated@@313 $generated@@2)) (and (= (= ($generated@@309 $generated@@312) 0) (= $generated@@312 ($generated@@310 $generated@@313))) (=> (not (= ($generated@@309 $generated@@312) 0)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) (< 0 ($generated ($generated@@94 $generated@@312 $generated@@314))))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 18)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@89 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@94 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@94 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert  (and (and (and (and (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (= ($generated@@1 ($generated@@335 $generated@@338 $generated@@339)) 19)) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@336 ($generated@@335 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@335 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@337 ($generated@@335 $generated@@342 $generated@@343)) $generated@@343)
 :pattern ( ($generated@@335 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@336 (type $generated@@344))))
(= (type ($generated@@333 $generated@@344)) ($generated@@89 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@344))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= (type ($generated@@334 $generated@@346 $generated@@347)) ($generated@@335 $generated@@346 $generated@@347))
 :pattern ( ($generated@@334 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@T) ) (! (let (($generated@@350 (type $generated@@348)))
 (not ($generated@@0 ($generated@@94 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348))))
 :pattern ( (let (($generated@@350 (type $generated@@348)))
($generated@@94 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348)))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@92 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@89 $generated@@352 $generated@@2)) (= ($generated@@179 $generated@@351) (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@352) (and (<= 0 ($generated ($generated@@94 $generated@@351 $generated@@353))) (<= ($generated ($generated@@94 $generated@@351 $generated@@353)) ($generated@@309 $generated@@351))))
 :pattern ( ($generated@@94 $generated@@351 $generated@@353))
)))))
 :pattern ( ($generated@@179 $generated@@351))
)))
(assert (forall (($generated@@355 T@T) ($generated@@356 T@U) ) (! (= (type ($generated@@354 $generated@@355 $generated@@356)) $generated@@355)
 :pattern ( ($generated@@354 $generated@@355 $generated@@356))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@172) ($generated@@240 $generated@@357 $generated@@247)) (and (= ($generated@@304 ($generated@@354 $generated@@77 $generated@@357)) $generated@@357) ($generated@@160 ($generated@@354 $generated@@77 $generated@@357) $generated@@247)))
 :pattern ( ($generated@@240 $generated@@357 $generated@@247))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@319 (type $generated@@358))))
(let (($generated@@360 ($generated@@318 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@317 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@316 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@360) ($generated@@0 ($generated@@94 ($generated@@315 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@315 $generated@@358))
)))
(assert (forall (($generated@@363 T@U) ) (! (let (($generated@@364 ($generated@@319 (type $generated@@363))))
(= (type ($generated@@362 $generated@@363)) ($generated@@89 $generated@@364 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@319 (type $generated@@365))))
(let (($generated@@367 ($generated@@318 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@317 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@316 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@366) ($generated@@0 ($generated@@94 ($generated@@362 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@362 $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@337 (type $generated@@369))))
(let (($generated@@371 ($generated@@336 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@335 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@334 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@371) ($generated@@0 ($generated@@94 ($generated@@333 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@333 $generated@@369))
)))
(assert (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@337 (type $generated@@374))))
(= (type ($generated@@373 $generated@@374)) ($generated@@89 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@373 $generated@@374))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@337 (type $generated@@376))))
(let (($generated@@378 ($generated@@336 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@335 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@334 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@377) ($generated@@0 ($generated@@94 ($generated@@373 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@373 $generated@@376))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@89 $generated@@172 $generated@@2)) (= (type $generated@@381) $generated@@68)) (= ($generated@@160 $generated@@380 ($generated@@178 $generated@@381)) (forall (($generated@@382 T@U) ) (!  (=> (and (= (type $generated@@382) $generated@@172) (< 0 ($generated ($generated@@94 $generated@@380 $generated@@382)))) ($generated@@240 $generated@@382 $generated@@381))
 :pattern ( ($generated@@94 $generated@@380 $generated@@382))
))))
 :pattern ( ($generated@@160 $generated@@380 ($generated@@178 $generated@@381)))
)))
(assert (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@77) ($generated@@383 $generated@@384)) (or ($generated@@276 $generated@@384) ($generated@@251 $generated@@384)))
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@385) ($generated@@89 $generated@@172 $generated@@4)) (= (type $generated@@386) $generated@@68)) (= (type $generated@@387) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@385 ($generated@@258 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@172) ($generated@@0 ($generated@@94 $generated@@385 $generated@@388))) ($generated@@279 $generated@@388 $generated@@386 $generated@@387))
 :pattern ( ($generated@@94 $generated@@385 $generated@@388))
))))
 :pattern ( ($generated@@87 $generated@@385 ($generated@@258 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) ($generated@@89 $generated@@172 $generated@@4)) (= (type $generated@@390) $generated@@68)) (= (type $generated@@391) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@389 ($generated@@263 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@172) ($generated@@0 ($generated@@94 $generated@@389 $generated@@392))) ($generated@@279 $generated@@392 $generated@@390 $generated@@391))
 :pattern ( ($generated@@94 $generated@@389 $generated@@392))
))))
 :pattern ( ($generated@@87 $generated@@389 ($generated@@263 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(= ($generated ($generated@@94 ($generated@@310 $generated@@394) $generated@@393)) 0))
 :pattern ( (let (($generated@@394 (type $generated@@393)))
($generated@@94 ($generated@@310 $generated@@394) $generated@@393)))
)))
(assert  (and (forall (($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@397)) ($generated@@89 $generated@@172 $generated@@4))
 :pattern ( ($generated@@395 $generated@@397))
)) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@319 (type $generated@@398))))
(let (($generated@@400 ($generated@@318 (type $generated@@398))))
(= (type ($generated@@396 $generated@@398)) ($generated@@89 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@396 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@317 $generated@@172 $generated@@172)) (= (type $generated@@402) $generated@@172)) (= ($generated@@0 ($generated@@94 ($generated@@395 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@94 ($generated@@315 $generated@@401) ($generated@@170 ($generated@@354 $generated@@77 $generated@@402)))) (= ($generated@@94 ($generated@@396 $generated@@401) ($generated@@170 ($generated@@354 $generated@@77 $generated@@402))) ($generated@@171 ($generated@@354 $generated@@77 $generated@@402))))))
 :pattern ( ($generated@@94 ($generated@@395 $generated@@401) $generated@@402))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@89 $generated@@172 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@337 (type $generated@@406))))
(let (($generated@@408 ($generated@@336 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@89 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@335 $generated@@172 $generated@@172)) (= (type $generated@@410) $generated@@172)) (= ($generated@@0 ($generated@@94 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@94 ($generated@@333 $generated@@409) ($generated@@170 ($generated@@354 $generated@@77 $generated@@410)))) (= ($generated@@94 ($generated@@404 $generated@@409) ($generated@@170 ($generated@@354 $generated@@77 $generated@@410))) ($generated@@171 ($generated@@354 $generated@@77 $generated@@410))))))
 :pattern ( ($generated@@94 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(let (($generated@@414 ($generated@@318 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@317 $generated@@414 $generated@@413)) (= ($generated@@0 ($generated@@94 ($generated@@362 $generated@@411) $generated@@412)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) (and ($generated@@0 ($generated@@94 ($generated@@315 $generated@@411) $generated@@415)) (= $generated@@412 ($generated@@94 ($generated@@396 $generated@@411) $generated@@415))))
 :pattern ( ($generated@@94 ($generated@@315 $generated@@411) $generated@@415))
 :pattern ( ($generated@@94 ($generated@@396 $generated@@411) $generated@@415))
))))))
 :pattern ( ($generated@@94 ($generated@@362 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(let (($generated@@419 ($generated@@336 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@335 $generated@@419 $generated@@418)) (= ($generated@@0 ($generated@@94 ($generated@@373 $generated@@416) $generated@@417)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) (and ($generated@@0 ($generated@@94 ($generated@@333 $generated@@416) $generated@@420)) (= $generated@@417 ($generated@@94 ($generated@@404 $generated@@416) $generated@@420))))
 :pattern ( ($generated@@94 ($generated@@333 $generated@@416) $generated@@420))
 :pattern ( ($generated@@94 ($generated@@404 $generated@@416) $generated@@420))
))))))
 :pattern ( ($generated@@94 ($generated@@373 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@68)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@317 $generated@@172 $generated@@172)) (= (type $generated@@425) $generated@@68)) (= (type $generated@@426) $generated@@68)) (= (type $generated@@427) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@172) ($generated@@0 ($generated@@94 ($generated@@315 $generated@@424) $generated@@428))) (and ($generated@@279 ($generated@@94 ($generated@@396 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@279 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@94 ($generated@@396 $generated@@424) $generated@@428))
 :pattern ( ($generated@@94 ($generated@@315 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@87 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@68)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@335 $generated@@172 $generated@@172)) (= (type $generated@@433) $generated@@68)) (= (type $generated@@434) $generated@@68)) (= (type $generated@@435) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@172) ($generated@@0 ($generated@@94 ($generated@@333 $generated@@432) $generated@@436))) (and ($generated@@279 ($generated@@94 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@279 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@94 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@94 ($generated@@333 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@87 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (!  (=> (and (= (type $generated@@437) $generated@@77) ($generated@@160 $generated@@437 $generated@@247)) (or ($generated@@276 $generated@@437) ($generated@@251 $generated@@437)))
 :pattern ( ($generated@@251 $generated@@437) ($generated@@160 $generated@@437 $generated@@247))
 :pattern ( ($generated@@276 $generated@@437) ($generated@@160 $generated@@437 $generated@@247))
)))
(assert (forall (($generated@@439 T@T) ) (! (= (type ($generated@@438 $generated@@439)) ($generated@@89 $generated@@439 $generated@@4))
 :pattern ( ($generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@337 (type $generated@@440))))
(let (($generated@@442 ($generated@@336 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@335 $generated@@442 $generated@@441)) (= (= $generated@@440 ($generated@@334 $generated@@442 $generated@@441)) (= ($generated@@333 $generated@@440) ($generated@@438 $generated@@442))))))
 :pattern ( ($generated@@333 $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@337 (type $generated@@443))))
(let (($generated@@445 ($generated@@336 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@335 $generated@@445 $generated@@444)) (= (= $generated@@443 ($generated@@334 $generated@@445 $generated@@444)) (= ($generated@@373 $generated@@443) ($generated@@438 $generated@@444))))))
 :pattern ( ($generated@@373 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@337 (type $generated@@446))))
(let (($generated@@448 ($generated@@336 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@335 $generated@@448 $generated@@447)) (= (= $generated@@446 ($generated@@334 $generated@@448 $generated@@447)) (= ($generated@@403 $generated@@446) ($generated@@438 $generated@@172))))))
 :pattern ( ($generated@@403 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@319 (type $generated@@449))))
(let (($generated@@451 ($generated@@318 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@317 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@316 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@172) (= (type $generated@@453) $generated@@172)) ($generated@@0 ($generated@@94 ($generated@@395 $generated@@449) ($generated@@304 ($generated@@239 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@395 $generated@@449))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@337 (type $generated@@454))))
(let (($generated@@456 ($generated@@336 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@335 $generated@@456 $generated@@455)) (or (= $generated@@454 ($generated@@334 $generated@@456 $generated@@455)) (exists (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (and (and (= (type $generated@@457) $generated@@172) (= (type $generated@@458) $generated@@172)) ($generated@@0 ($generated@@94 ($generated@@403 $generated@@454) ($generated@@304 ($generated@@239 $generated@@457 $generated@@458)))))
 :no-pattern (type $generated@@457)
 :no-pattern (type $generated@@458)
 :no-pattern ($generated $generated@@457)
 :no-pattern ($generated@@0 $generated@@457)
 :no-pattern ($generated $generated@@458)
 :no-pattern ($generated@@0 $generated@@458)
))))))
 :pattern ( ($generated@@403 $generated@@454))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@172) ($generated@@240 $generated@@459 $generated@@46)) (and (= ($generated@@304 ($generated@@354 $generated@@2 $generated@@459)) $generated@@459) ($generated@@160 ($generated@@354 $generated@@2 $generated@@459) $generated@@46)))
 :pattern ( ($generated@@240 $generated@@459 $generated@@46))
)))
(assert (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@172) ($generated@@240 $generated@@460 $generated@@47)) (and (= ($generated@@304 ($generated@@354 $generated@@3 $generated@@460)) $generated@@460) ($generated@@160 ($generated@@354 $generated@@3 $generated@@460) $generated@@47)))
 :pattern ( ($generated@@240 $generated@@460 $generated@@47))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@172) ($generated@@240 $generated@@461 $generated@@44)) (and (= ($generated@@304 ($generated@@354 $generated@@4 $generated@@461)) $generated@@461) ($generated@@160 ($generated@@354 $generated@@4 $generated@@461) $generated@@44)))
 :pattern ( ($generated@@240 $generated@@461 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@462) 20))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@172) ($generated@@240 $generated@@463 $generated@@45)) (and (= ($generated@@304 ($generated@@354 $generated@@462 $generated@@463)) $generated@@463) ($generated@@160 ($generated@@354 $generated@@462 $generated@@463) $generated@@45)))
 :pattern ( ($generated@@240 $generated@@463 $generated@@45))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (= (type $generated@@465) $generated@@68) (= ($generated@@240 ($generated@@304 $generated@@464) $generated@@465) ($generated@@160 $generated@@464 $generated@@465)))
 :pattern ( ($generated@@240 ($generated@@304 $generated@@464) $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@92 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@89 $generated@@467 $generated@@2)) (<= 0 ($generated@@309 $generated@@466))))
 :pattern ( ($generated@@309 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@298 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@297 $generated@@469)) (<= 0 ($generated@@296 $generated@@468))))
 :pattern ( ($generated@@296 $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@68)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@68) (= (type $generated@@473) $generated@@68)) (= ($generated@@470 ($generated@@421 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@421 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@68)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@68) (= (type $generated@@477) $generated@@68)) (= ($generated@@474 ($generated@@421 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@421 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@68) (= (type $generated@@479) $generated@@68)) (= ($generated@@85 ($generated@@421 $generated@@478 $generated@@479)) $generated@@58))
 :pattern ( ($generated@@421 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@68)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@68) (= (type $generated@@483) $generated@@68)) (= ($generated@@480 ($generated@@429 $generated@@482 $generated@@483)) $generated@@482))
 :pattern ( ($generated@@429 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@68)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@68) (= (type $generated@@487) $generated@@68)) (= ($generated@@484 ($generated@@429 $generated@@486 $generated@@487)) $generated@@487))
 :pattern ( ($generated@@429 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@68) (= (type $generated@@489) $generated@@68)) (= ($generated@@85 ($generated@@429 $generated@@488 $generated@@489)) $generated@@59))
 :pattern ( ($generated@@429 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@172) (= (type $generated@@491) $generated@@172)) (= ($generated@@145 ($generated@@239 $generated@@490 $generated@@491)) $generated@@61))
 :pattern ( ($generated@@239 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@68)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@68) (= (type $generated@@495) $generated@@68)) (= ($generated@@492 ($generated@@163 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@163 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@68)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@68) (= (type $generated@@499) $generated@@68)) (= ($generated@@496 ($generated@@163 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@163 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@172) (= (type $generated@@501) $generated@@172)) (= ($generated@@170 ($generated@@239 $generated@@500 $generated@@501)) $generated@@500))
 :pattern ( ($generated@@239 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@172) (= (type $generated@@503) $generated@@172)) (= ($generated@@171 ($generated@@239 $generated@@502 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@239 $generated@@502 $generated@@503))
)))
(assert  (and (forall (($generated@@506 T@U) ) (! (= (type ($generated@@504 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@504 $generated@@506))
)) (forall (($generated@@507 T@U) ($generated@@508 Int) ) (! (let (($generated@@509 ($generated@@298 (type $generated@@507))))
(= (type ($generated@@505 $generated@@507 $generated@@508)) $generated@@509))
 :pattern ( ($generated@@505 $generated@@507 $generated@@508))
))))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@297 $generated@@172)) (= (type $generated@@511) $generated@@68)) (= (type $generated@@512) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@510 ($generated@@504 $generated@@511) $generated@@512) (forall (($generated@@513 Int) ) (!  (=> (and (<= 0 $generated@@513) (< $generated@@513 ($generated@@296 $generated@@510))) ($generated@@279 ($generated@@505 $generated@@510 $generated@@513) $generated@@511 $generated@@512))
 :pattern ( ($generated@@505 $generated@@510 $generated@@513))
))))
 :pattern ( ($generated@@87 $generated@@510 ($generated@@504 $generated@@511) $generated@@512))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (and (= (type $generated@@514) $generated@@77) (= (type $generated@@515) $generated@@4)) (= (type $generated@@516) $generated@@77)) (= ($generated@@76 ($generated@@268 $generated@@514) ($generated@@0 ($generated@@268 $generated@@515)) ($generated@@268 $generated@@516)) ($generated@@268 ($generated@@76 $generated@@514 ($generated@@0 $generated@@515) $generated@@516))))
 :pattern ( ($generated@@76 ($generated@@268 $generated@@514) ($generated@@0 ($generated@@268 $generated@@515)) ($generated@@268 $generated@@516)))
)))
(assert (forall (($generated@@518 Int) ) (! (= ($generated@@517 ($generated@@88 $generated@@518)) $generated@@518)
 :pattern ( ($generated@@88 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@68)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@68) (= ($generated@@519 ($generated@@258 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@258 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@68) (= ($generated@@85 ($generated@@258 $generated@@522)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@68)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@68) (= ($generated@@523 ($generated@@263 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@263 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@68) (= ($generated@@85 ($generated@@263 $generated@@526)) $generated@@55))
 :pattern ( ($generated@@263 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@68)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@68) (= ($generated@@527 ($generated@@178 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@178 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@68) (= ($generated@@85 ($generated@@178 $generated@@530)) $generated@@56))
 :pattern ( ($generated@@178 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@68)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@68) (= ($generated@@531 ($generated@@504 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@504 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@68) (= ($generated@@85 ($generated@@504 $generated@@534)) $generated@@57))
 :pattern ( ($generated@@504 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 (type $generated@@535)))
(= ($generated@@354 $generated@@536 ($generated@@304 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@304 $generated@@535))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 Bool) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@77) (= (type $generated@@540) $generated@@77)) (< ($generated@@537 $generated@@538) ($generated@@537 ($generated@@76 $generated@@538 $generated@@539 $generated@@540))))
 :pattern ( ($generated@@76 $generated@@538 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 Bool) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@77) (= (type $generated@@543) $generated@@77)) (< ($generated@@537 $generated@@543) ($generated@@537 ($generated@@76 $generated@@541 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@76 $generated@@541 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@544) ($generated@@317 $generated@@172 $generated@@172)) (= (type $generated@@545) $generated@@68)) (= (type $generated@@546) $generated@@68)) (= ($generated@@160 $generated@@544 ($generated@@421 $generated@@545 $generated@@546)) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@172) ($generated@@0 ($generated@@94 ($generated@@315 $generated@@544) $generated@@547))) (and ($generated@@240 ($generated@@94 ($generated@@396 $generated@@544) $generated@@547) $generated@@546) ($generated@@240 $generated@@547 $generated@@545)))
 :pattern ( ($generated@@94 ($generated@@396 $generated@@544) $generated@@547))
 :pattern ( ($generated@@94 ($generated@@315 $generated@@544) $generated@@547))
))))
 :pattern ( ($generated@@160 $generated@@544 ($generated@@421 $generated@@545 $generated@@546)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@335 $generated@@172 $generated@@172)) (= (type $generated@@549) $generated@@68)) (= (type $generated@@550) $generated@@68)) (= ($generated@@160 $generated@@548 ($generated@@429 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@172) ($generated@@0 ($generated@@94 ($generated@@333 $generated@@548) $generated@@551))) (and ($generated@@240 ($generated@@94 ($generated@@404 $generated@@548) $generated@@551) $generated@@550) ($generated@@240 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@94 ($generated@@404 $generated@@548) $generated@@551))
 :pattern ( ($generated@@94 ($generated@@333 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@160 $generated@@548 ($generated@@429 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@172) (= (type $generated@@554) $generated@@172)) (< ($generated@@552 $generated@@553) ($generated@@537 ($generated@@239 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@239 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@172) (= (type $generated@@556) $generated@@172)) (< ($generated@@552 $generated@@556) ($generated@@537 ($generated@@239 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@239 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@172) (= (type $generated@@558) $generated@@68)) (= (type $generated@@559) $generated@@68)) ($generated@@240 $generated@@557 ($generated@@421 $generated@@558 $generated@@559))) (and (= ($generated@@304 ($generated@@354 ($generated@@317 $generated@@172 $generated@@172) $generated@@557)) $generated@@557) ($generated@@160 ($generated@@354 ($generated@@317 $generated@@172 $generated@@172) $generated@@557) ($generated@@421 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@240 $generated@@557 ($generated@@421 $generated@@558 $generated@@559)))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@172) (= (type $generated@@561) $generated@@68)) (= (type $generated@@562) $generated@@68)) ($generated@@240 $generated@@560 ($generated@@429 $generated@@561 $generated@@562))) (and (= ($generated@@304 ($generated@@354 ($generated@@335 $generated@@172 $generated@@172) $generated@@560)) $generated@@560) ($generated@@160 ($generated@@354 ($generated@@335 $generated@@172 $generated@@172) $generated@@560) ($generated@@429 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@240 $generated@@560 ($generated@@429 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@68) (= (type $generated@@564) $generated@@68)) (= (type $generated@@565) $generated@@172)) ($generated@@240 $generated@@565 ($generated@@163 $generated@@563 $generated@@564))) (and (= ($generated@@304 ($generated@@354 $generated@@77 $generated@@565)) $generated@@565) ($generated@@160 ($generated@@354 $generated@@77 $generated@@565) ($generated@@163 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@240 $generated@@565 ($generated@@163 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@566)))
 (not ($generated@@0 ($generated@@94 ($generated@@438 $generated@@567) $generated@@566))))
 :pattern ( (let (($generated@@567 (type $generated@@566)))
($generated@@94 ($generated@@438 $generated@@567) $generated@@566)))
)))
(assert (forall (($generated@@569 T@U) ) (! (= (type ($generated@@568 $generated@@569)) $generated@@73)
 :pattern ( ($generated@@568 $generated@@569))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@68) (= (type $generated@@571) $generated@@68)) (and (= ($generated@@85 ($generated@@163 $generated@@570 $generated@@571)) $generated@@62) (= ($generated@@568 ($generated@@163 $generated@@570 $generated@@571)) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@77) (= (type $generated@@573) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@248 $generated@@573) (and ($generated@@251 $generated@@572) ($generated@@87 $generated@@572 $generated@@247 $generated@@573)))) ($generated@@87 ($generated@@11 ($generated@@78 $generated@@572)) $generated@@44 $generated@@573))
 :pattern ( ($generated@@87 ($generated@@11 ($generated@@78 $generated@@572)) $generated@@44 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ) (!  (=> (= (type $generated@@574) $generated@@77) (= ($generated@@552 ($generated@@304 $generated@@574)) ($generated@@537 $generated@@574)))
 :pattern ( ($generated@@552 ($generated@@304 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@172) ($generated@@240 $generated@@575 ($generated@@88 0))) (and (= ($generated@@304 ($generated@@354 $generated@@2 $generated@@575)) $generated@@575) ($generated@@160 ($generated@@354 ($generated@@89 $generated@@172 $generated@@4) $generated@@575) ($generated@@88 0))))
 :pattern ( ($generated@@240 $generated@@575 ($generated@@88 0)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@172) (= (type $generated@@577) $generated@@68)) ($generated@@240 $generated@@576 ($generated@@258 $generated@@577))) (and (= ($generated@@304 ($generated@@354 ($generated@@89 $generated@@172 $generated@@4) $generated@@576)) $generated@@576) ($generated@@160 ($generated@@354 ($generated@@89 $generated@@172 $generated@@4) $generated@@576) ($generated@@258 $generated@@577))))
 :pattern ( ($generated@@240 $generated@@576 ($generated@@258 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@172) (= (type $generated@@579) $generated@@68)) ($generated@@240 $generated@@578 ($generated@@263 $generated@@579))) (and (= ($generated@@304 ($generated@@354 ($generated@@89 $generated@@172 $generated@@4) $generated@@578)) $generated@@578) ($generated@@160 ($generated@@354 ($generated@@89 $generated@@172 $generated@@4) $generated@@578) ($generated@@263 $generated@@579))))
 :pattern ( ($generated@@240 $generated@@578 ($generated@@263 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@172) (= (type $generated@@581) $generated@@68)) ($generated@@240 $generated@@580 ($generated@@178 $generated@@581))) (and (= ($generated@@304 ($generated@@354 ($generated@@89 $generated@@172 $generated@@2) $generated@@580)) $generated@@580) ($generated@@160 ($generated@@354 ($generated@@89 $generated@@172 $generated@@2) $generated@@580) ($generated@@178 $generated@@581))))
 :pattern ( ($generated@@240 $generated@@580 ($generated@@178 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@172) (= (type $generated@@583) $generated@@68)) ($generated@@240 $generated@@582 ($generated@@504 $generated@@583))) (and (= ($generated@@304 ($generated@@354 ($generated@@297 $generated@@172) $generated@@582)) $generated@@582) ($generated@@160 ($generated@@354 ($generated@@297 $generated@@172) $generated@@582) ($generated@@504 $generated@@583))))
 :pattern ( ($generated@@240 $generated@@582 ($generated@@504 $generated@@583)))
)))
(assert (= ($generated@@85 $generated@@247) $generated@@64))
(assert (= ($generated@@568 $generated@@247) $generated@@67))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@89 $generated@@172 $generated@@2)) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) ($generated@@89 $generated@@90 $generated@@91))) (= ($generated@@87 $generated@@584 ($generated@@178 $generated@@585) $generated@@586) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@172) (< 0 ($generated ($generated@@94 $generated@@584 $generated@@587)))) ($generated@@279 $generated@@587 $generated@@585 $generated@@586))
 :pattern ( ($generated@@94 $generated@@584 $generated@@587))
))))
 :pattern ( ($generated@@87 $generated@@584 ($generated@@178 $generated@@585) $generated@@586))
)))
(assert (= $generated@@177 ($generated@@268 $generated@@177)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@77) (= (type $generated@@589) $generated@@68)) (= (type $generated@@590) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@248 $generated@@590) (and ($generated@@162 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@68) ($generated@@87 $generated@@588 ($generated@@163 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@87 $generated@@588 ($generated@@163 $generated@@589 $generated@@591) $generated@@590))
))))) ($generated@@279 ($generated@@170 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@279 ($generated@@170 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@77) (= (type $generated@@593) $generated@@68)) (= (type $generated@@594) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@248 $generated@@594) (and ($generated@@162 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@68) ($generated@@87 $generated@@592 ($generated@@163 $generated@@595 $generated@@593) $generated@@594))
 :pattern ( ($generated@@87 $generated@@592 ($generated@@163 $generated@@595 $generated@@593) $generated@@594))
))))) ($generated@@279 ($generated@@171 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@279 ($generated@@171 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@77) (= (type $generated@@597) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@248 $generated@@597) (and ($generated@@251 $generated@@596) ($generated@@87 $generated@@596 $generated@@247 $generated@@597)))) ($generated@@87 ($generated@@150 $generated@@596) $generated@@247 $generated@@597))
 :pattern ( ($generated@@87 ($generated@@150 $generated@@596) $generated@@247 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@77) (= (type $generated@@599) ($generated@@89 $generated@@90 $generated@@91))) (and ($generated@@248 $generated@@599) (and ($generated@@251 $generated@@598) ($generated@@87 $generated@@598 $generated@@247 $generated@@599)))) ($generated@@87 ($generated@@155 $generated@@598) $generated@@247 $generated@@599))
 :pattern ( ($generated@@87 ($generated@@155 $generated@@598) $generated@@247 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@172) (= (type $generated@@601) $generated@@172)) (= ($generated@@239 ($generated@@268 $generated@@600) ($generated@@268 $generated@@601)) ($generated@@268 ($generated@@239 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@239 ($generated@@268 $generated@@600) ($generated@@268 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (= ($generated@@304 ($generated@@268 $generated@@602)) ($generated@@268 ($generated@@304 $generated@@602)))
 :pattern ( ($generated@@304 ($generated@@268 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (! (let (($generated@@604 ($generated@@298 (type $generated@@603))))
 (=> (and (= (type $generated@@603) ($generated@@297 $generated@@604)) (= ($generated@@296 $generated@@603) 0)) (= $generated@@603 ($generated@@295 $generated@@604))))
 :pattern ( ($generated@@296 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (! (let (($generated@@608 (type $generated@@606)))
 (=> (and (and (= (type $generated@@605) ($generated@@89 $generated@@608 $generated@@2)) (= (type $generated@@607) $generated@@2)) (<= 0 ($generated $generated@@607))) (= ($generated@@309 ($generated@@95 $generated@@605 $generated@@606 $generated@@607)) (+ (- ($generated@@309 $generated@@605) ($generated ($generated@@94 $generated@@605 $generated@@606))) ($generated $generated@@607)))))
 :pattern ( ($generated@@309 ($generated@@95 $generated@@605 $generated@@606 $generated@@607)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@610) $generated@@2)) ($generated@@87 $generated@@610 $generated@@46 $generated@@609))
 :pattern ( ($generated@@87 $generated@@610 $generated@@46 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@612) $generated@@3)) ($generated@@87 $generated@@612 $generated@@47 $generated@@611))
 :pattern ( ($generated@@87 $generated@@612 $generated@@47 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@614) $generated@@4)) ($generated@@87 $generated@@614 $generated@@44 $generated@@613))
 :pattern ( ($generated@@87 $generated@@614 $generated@@44 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@616) $generated@@462)) ($generated@@87 $generated@@616 $generated@@45 $generated@@615))
 :pattern ( ($generated@@87 $generated@@616 $generated@@45 $generated@@615))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) ($generated@@89 $generated@@90 $generated@@91)) (= (type $generated@@618) $generated@@172)) ($generated@@87 $generated@@618 $generated@@48 $generated@@617))
 :pattern ( ($generated@@87 $generated@@618 $generated@@48 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 Bool) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@77) (= (type $generated@@621) $generated@@77)) (= ($generated@@160 ($generated@@76 $generated@@619 $generated@@620 $generated@@621) $generated@@247)  (and (and ($generated@@160 $generated@@619 $generated@@247) ($generated@@160 ($generated@@11 $generated@@620) $generated@@44)) ($generated@@160 $generated@@621 $generated@@247))))
 :pattern ( ($generated@@160 ($generated@@76 $generated@@619 $generated@@620 $generated@@621) $generated@@247))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@297 $generated@@172)) (= (type $generated@@623) $generated@@68)) (= ($generated@@160 $generated@@622 ($generated@@504 $generated@@623)) (forall (($generated@@624 Int) ) (!  (=> (and (<= 0 $generated@@624) (< $generated@@624 ($generated@@296 $generated@@622))) ($generated@@240 ($generated@@505 $generated@@622 $generated@@624) $generated@@623))
 :pattern ( ($generated@@505 $generated@@622 $generated@@624))
))))
 :pattern ( ($generated@@160 $generated@@622 ($generated@@504 $generated@@623)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 Int) ) (!  (=> (= (type $generated@@626) ($generated@@297 $generated@@172)) (=> (and (<= 0 $generated@@627) (< $generated@@627 ($generated@@296 $generated@@626))) (< ($generated@@537 ($generated@@354 $generated@@77 ($generated@@505 $generated@@626 $generated@@627))) ($generated@@625 $generated@@626))))
 :pattern ( ($generated@@537 ($generated@@354 $generated@@77 ($generated@@505 $generated@@626 $generated@@627))))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) ($generated@@317 $generated@@172 $generated@@172)) (= (type $generated@@629) $generated@@68)) (= (type $generated@@630) $generated@@68)) ($generated@@160 $generated@@628 ($generated@@421 $generated@@629 $generated@@630))) (and (and ($generated@@160 ($generated@@315 $generated@@628) ($generated@@258 $generated@@629)) ($generated@@160 ($generated@@362 $generated@@628) ($generated@@258 $generated@@630))) ($generated@@160 ($generated@@395 $generated@@628) ($generated@@258 ($generated@@163 $generated@@629 $generated@@630)))))
 :pattern ( ($generated@@160 $generated@@628 ($generated@@421 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) ($generated@@335 $generated@@172 $generated@@172)) (= (type $generated@@632) $generated@@68)) (= (type $generated@@633) $generated@@68)) ($generated@@160 $generated@@631 ($generated@@429 $generated@@632 $generated@@633))) (and (and ($generated@@160 ($generated@@333 $generated@@631) ($generated@@263 $generated@@632)) ($generated@@160 ($generated@@373 $generated@@631) ($generated@@263 $generated@@633))) ($generated@@160 ($generated@@403 $generated@@631) ($generated@@263 ($generated@@163 $generated@@632 $generated@@633)))))
 :pattern ( ($generated@@160 $generated@@631 ($generated@@429 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@2) ($generated@@160 $generated@@634 $generated@@46))
 :pattern ( ($generated@@160 $generated@@634 $generated@@46))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@3) ($generated@@160 $generated@@635 $generated@@47))
 :pattern ( ($generated@@160 $generated@@635 $generated@@47))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@4) ($generated@@160 $generated@@636 $generated@@44))
 :pattern ( ($generated@@160 $generated@@636 $generated@@44))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@462) ($generated@@160 $generated@@637 $generated@@45))
 :pattern ( ($generated@@160 $generated@@637 $generated@@45))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@172) ($generated@@160 $generated@@638 $generated@@48))
 :pattern ( ($generated@@160 $generated@@638 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () Bool)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () Bool)
(declare-fun $generated@@646 () T@U)
(declare-fun $generated@@647 () T@U)
(declare-fun $generated@@648 () T@U)
(declare-fun $generated@@649 () Bool)
(declare-fun $generated@@650 () T@U)
(declare-fun $generated@@651 () T@U)
(declare-fun $generated@@652 (T@U) Bool)
(declare-fun $generated@@653 () Int)
(assert  (and (and (and (and (and (and (and (and (and (= (type $generated@@648) $generated@@77) (= (type $generated@@643) $generated@@77)) (= (type $generated@@639) $generated@@77)) (= (type $generated@@644) $generated@@77)) (= (type $generated@@646) $generated@@77)) (= (type $generated@@647) ($generated@@89 $generated@@90 $generated@@91))) (= (type $generated@@640) $generated@@77)) (= (type $generated@@642) $generated@@77)) (= (type $generated@@650) ($generated@@185 $generated@@90 $generated@@4))) (= (type $generated@@651) $generated@@90)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@654 true))
(let (($generated@@655  (=> (and (= $generated@@639 ($generated@@76 $generated@@640 $generated@@641 $generated@@642)) (= (ControlFlow 0 11) (- 0 10))) false)))
(let (($generated@@656  (=> (not (= $generated@@639 $generated@@177)) (and (=> (= (ControlFlow 0 13) 11) $generated@@655) (=> (= (ControlFlow 0 13) 12) $generated@@654)))))
(let (($generated@@657 true))
(let (($generated@@658  (=> (= $generated@@643 $generated@@177) (and (=> (= (ControlFlow 0 14) 9) $generated@@657) (=> (= (ControlFlow 0 14) 13) $generated@@656)))))
(let (($generated@@659 true))
(let (($generated@@660  (=> (= $generated@@643 ($generated@@76 $generated@@644 $generated@@645 $generated@@646)) (=> (and ($generated@@160 $generated@@644 $generated@@247) ($generated@@87 $generated@@644 $generated@@247 $generated@@647)) (=> (and (and ($generated@@160 $generated@@646 $generated@@247) ($generated@@87 $generated@@646 $generated@@247 $generated@@647)) (= (ControlFlow 0 6) (- 0 5))) (= $generated@@645 ($generated@@0 ($generated@@268 ($generated@@11 true)))))))))
(let (($generated@@661  (=> (not (= $generated@@643 $generated@@177)) (and (=> (= (ControlFlow 0 8) 6) $generated@@660) (=> (= (ControlFlow 0 8) 7) $generated@@659)))))
(let (($generated@@662  (=> (= $generated@@648 ($generated@@76 $generated@@643 $generated@@649 $generated@@639)) (=> (and (and ($generated@@160 $generated@@643 $generated@@247) ($generated@@87 $generated@@643 $generated@@247 $generated@@647)) (and ($generated@@160 $generated@@639 $generated@@247) ($generated@@87 $generated@@639 $generated@@247 $generated@@647))) (and (=> (= (ControlFlow 0 15) 14) $generated@@658) (=> (= (ControlFlow 0 15) 8) $generated@@661))))))
(let (($generated@@663 true))
(let (($generated@@664  (=> (and (= $generated@@648 $generated@@177) (= (ControlFlow 0 2) (- 0 1))) false)))
(let (($generated@@665  (=> (not (= $generated@@648 ($generated@@76 $generated@@643 $generated@@649 $generated@@639))) (and (=> (= (ControlFlow 0 4) 2) $generated@@664) (=> (= (ControlFlow 0 4) 3) $generated@@663)))))
(let (($generated@@666  (=> (= $generated@@650 ($generated@@184 $generated@@651 $generated@@647 $generated@@60 false)) (and (=> (= (ControlFlow 0 16) 15) $generated@@662) (=> (= (ControlFlow 0 16) 4) $generated@@665)))))
(let (($generated@@667  (=> (and ($generated@@248 $generated@@647) ($generated@@652 $generated@@647)) (=> (and (and (and ($generated@@160 $generated@@648 $generated@@247) ($generated@@87 $generated@@648 $generated@@247 $generated@@647)) ($generated@@383 $generated@@648)) (and (= 1 $generated@@653) (= (ControlFlow 0 17) 16))) $generated@@666))))
$generated@@667)))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 11) (- 10))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@163 (T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(declare-fun $generated@@168 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@231 (T@U) Bool)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@234 (T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U) Bool)
(declare-fun $generated@@244 (T@U T@U) Bool)
(declare-fun $generated@@247 () Int)
(declare-fun $generated@@248 (T@U) Int)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (Int) Int)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@269 (T@U) Bool)
(declare-fun $generated@@270 (T@U T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@293 (Int) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@303 (T@U) Int)
(declare-fun $generated@@304 (T@T) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@348 (T@T T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@390 (T@U) T@U)
(declare-fun $generated@@391 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@416 (T@U T@U) T@U)
(declare-fun $generated@@424 (T@U T@U) T@U)
(declare-fun $generated@@434 (T@T) T@U)
(declare-fun $generated@@458 () T@T)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@558 (T@U) T@U)
(declare-fun $generated@@611 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= (type $generated@@61) $generated@@70)) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@70)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert (= (type $generated@@137) $generated@@69))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@138 $generated@@137 $generated@@139))
 :pattern ( ($generated@@79 $generated@@138 $generated@@137 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= (type $generated@@141) $generated@@2) ($generated@@140 $generated@@141 ($generated@@80 0)))
 :pattern ( ($generated@@140 $generated@@141 ($generated@@80 0)))
)))
(assert  (and (= ($generated@@1 $generated@@144) 14) (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@145 $generated@@146)) $generated@@69)
 :pattern ( ($generated@@143 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (and (= (type $generated@@147) $generated@@69) (= (type $generated@@148) $generated@@69)) (= (type $generated@@149) $generated@@144)) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148))) ($generated@@142 $generated@@149))
 :pattern ( ($generated@@142 $generated@@149) ($generated@@140 $generated@@149 ($generated@@143 $generated@@147 $generated@@148)))
)))
(assert  (and (and (= ($generated@@1 $generated@@153) 15) (forall (($generated@@154 T@U) ) (! (= (type ($generated@@151 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@151 $generated@@154))
))) (forall (($generated@@155 T@U) ) (! (= (type ($generated@@152 $generated@@155)) $generated@@153)
 :pattern ( ($generated@@152 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) $generated@@144) (= (type $generated@@157) $generated@@144)) true) (= ($generated@@150 $generated@@156 $generated@@157)  (and (= ($generated@@151 $generated@@156) ($generated@@151 $generated@@157)) (= ($generated@@152 $generated@@156) ($generated@@152 $generated@@157)))))
 :pattern ( ($generated@@150 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ) (! (= (type ($generated@@158 $generated@@160)) $generated@@69)
 :pattern ( ($generated@@158 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) ($generated@@81 $generated@@153 $generated@@2)) (= (type $generated@@162) $generated@@69)) ($generated@@140 $generated@@161 ($generated@@158 $generated@@162))) ($generated@@159 $generated@@161))
 :pattern ( ($generated@@140 $generated@@161 ($generated@@158 $generated@@162)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@1 ($generated@@165 $generated@@169 $generated@@170)) 16)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@166 ($generated@@165 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@167 ($generated@@165 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@165 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 ($generated@@167 (type $generated@@175))))
(= (type ($generated@@163 $generated@@175 $generated@@176 $generated@@177)) $generated@@178))
 :pattern ( ($generated@@163 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (let (($generated@@183 (type $generated@@182)))
(let (($generated@@184 (type $generated@@180)))
(= (type ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182)) ($generated@@165 $generated@@184 $generated@@183))))
 :pattern ( ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@182))
))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (let (($generated@@189 ($generated@@167 (type $generated@@185))))
 (=> (= (type $generated@@188) $generated@@189) (= ($generated@@163 ($generated@@168 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@186 $generated@@187) $generated@@188)))
 :weight 0
))) (and (and (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@163 ($generated@@168 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@163 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@163 ($generated@@168 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@163 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
))) (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or true (= ($generated@@163 ($generated@@168 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@163 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)))) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ) (! (= (type ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211)) ($generated@@165 $generated@@82 $generated@@4))
 :pattern ( ($generated@@164 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (let (($generated@@218 ($generated@@72 (type $generated@@217))))
 (=> (and (and (and (and (= (type $generated@@212) $generated@@82) (= (type $generated@@213) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@214) ($generated@@71 $generated@@4))) (= (type $generated@@216) $generated@@82)) (= (type $generated@@217) ($generated@@71 $generated@@218))) (= ($generated@@0 ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))  (=> (and (not (= $generated@@216 $generated@@212)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@213 $generated@@216) $generated@@214))) $generated@@215))))
 :pattern ( ($generated@@163 ($generated@@164 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ) (! (= (type ($generated@@219 $generated@@220 $generated@@221 $generated@@222 $generated@@223)) ($generated@@165 $generated@@82 $generated@@4))
 :pattern ( ($generated@@219 $generated@@220 $generated@@221 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@72 (type $generated@@229))))
 (=> (and (and (and (and (= (type $generated@@224) $generated@@82) (= (type $generated@@225) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@226) ($generated@@71 $generated@@4))) (= (type $generated@@228) $generated@@82)) (= (type $generated@@229) ($generated@@71 $generated@@230))) (= ($generated@@0 ($generated@@163 ($generated@@219 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))  (=> (and (not (= $generated@@228 $generated@@224)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@225 $generated@@228) $generated@@226))) $generated@@227))))
 :pattern ( ($generated@@163 ($generated@@219 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))
)))
(assert (= (type $generated@@232) $generated@@69))
(assert (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@144) ($generated@@140 $generated@@233 $generated@@232)) ($generated@@231 $generated@@233))
 :pattern ( ($generated@@231 $generated@@233) ($generated@@140 $generated@@233 $generated@@232))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! (= (type ($generated@@234 $generated@@236 $generated@@237)) $generated@@144)
 :pattern ( ($generated@@234 $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (and (and (= (type $generated@@238) $generated@@69) (= (type $generated@@239) $generated@@69)) (= (type $generated@@240) $generated@@153)) (= (type $generated@@241) $generated@@153)) (= ($generated@@140 ($generated@@234 $generated@@240 $generated@@241) ($generated@@143 $generated@@238 $generated@@239))  (and ($generated@@235 $generated@@240 $generated@@238) ($generated@@235 $generated@@241 $generated@@239))))
 :pattern ( ($generated@@140 ($generated@@234 $generated@@240 $generated@@241) ($generated@@143 $generated@@238 $generated@@239)))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@144) (= (type $generated@@243) $generated@@144)) (= ($generated@@150 $generated@@242 $generated@@243) (= $generated@@242 $generated@@243)))
 :pattern ( ($generated@@150 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@144) (= (type $generated@@246) $generated@@144)) (= ($generated@@244 $generated@@245 $generated@@246) (= $generated@@245 $generated@@246)))
 :pattern ( ($generated@@244 $generated@@245 $generated@@246))
)))
(assert  (=> (<= 1 $generated@@247) (forall (($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@144) (or ($generated@@249 $generated@@251) (and (not (= 1 $generated@@247)) ($generated@@140 $generated@@251 $generated@@232)))) (and ($generated@@231 $generated@@251) (= ($generated@@248 $generated@@251) (let (($generated@@252 ($generated@@250 $generated@@251)))
$generated@@252))))
 :pattern ( ($generated@@248 $generated@@251))
))))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@69)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and (= (type $generated@@255) ($generated@@81 $generated@@153 $generated@@4)) (= (type $generated@@256) $generated@@69)) (= ($generated@@140 $generated@@255 ($generated@@253 $generated@@256)) (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@153) ($generated@@0 ($generated@@86 $generated@@255 $generated@@257))) ($generated@@235 $generated@@257 $generated@@256))
 :pattern ( ($generated@@86 $generated@@255 $generated@@257))
))))
 :pattern ( ($generated@@140 $generated@@255 ($generated@@253 $generated@@256)))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@69)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@81 $generated@@153 $generated@@4)) (= (type $generated@@261) $generated@@69)) (= ($generated@@140 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@153) ($generated@@0 ($generated@@86 $generated@@260 $generated@@262))) ($generated@@235 $generated@@262 $generated@@261))
 :pattern ( ($generated@@86 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@140 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@263 $generated@@264) $generated@@264)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (let (($generated@@267 (type $generated@@266)))
(= (type ($generated@@265 $generated@@266)) $generated@@267))
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@268 T@U) ) (! (= ($generated@@265 $generated@@268) $generated@@268)
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@271) $generated@@69) (= (type $generated@@272) $generated@@69)) (= (type $generated@@273) $generated@@153)) (= (type $generated@@274) $generated@@153)) (= (type $generated@@275) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@269 $generated@@275)) (= ($generated@@79 ($generated@@234 $generated@@273 $generated@@274) ($generated@@143 $generated@@271 $generated@@272) $generated@@275)  (and ($generated@@270 $generated@@273 $generated@@271 $generated@@275) ($generated@@270 $generated@@274 $generated@@272 $generated@@275))))
 :pattern ( ($generated@@79 ($generated@@234 $generated@@273 $generated@@274) ($generated@@143 $generated@@271 $generated@@272) $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@73)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@144) (= ($generated@@142 $generated@@278) (= ($generated@@276 $generated@@278) $generated@@62)))
 :pattern ( ($generated@@142 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@144) (= ($generated@@231 $generated@@279) (= ($generated@@276 $generated@@279) $generated@@64)))
 :pattern ( ($generated@@231 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@144) ($generated@@142 $generated@@280)) (exists (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (and (and (= (type $generated@@281) $generated@@153) (= (type $generated@@282) $generated@@153)) (= $generated@@280 ($generated@@234 $generated@@281 $generated@@282)))
 :no-pattern (type $generated@@281)
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
)))
 :pattern ( ($generated@@142 $generated@@280))
)))
(assert  (and (and (forall (($generated@@287 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@287)) 17)) (forall (($generated@@288 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@288)) $generated@@288)
 :pattern ( ($generated@@285 $generated@@288))
))) (forall (($generated@@289 T@T) ) (! (= (type ($generated@@283 $generated@@289)) ($generated@@285 $generated@@289))
 :pattern ( ($generated@@283 $generated@@289))
))))
(assert (forall (($generated@@290 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@290)) 0)
 :pattern ( ($generated@@283 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (= (type $generated@@291) $generated@@144) (= (type $generated@@292) $generated@@144)) true) (= ($generated@@244 $generated@@291 $generated@@292) (= ($generated@@250 $generated@@291) ($generated@@250 $generated@@292))))
 :pattern ( ($generated@@244 $generated@@291 $generated@@292))
)))
(assert (forall (($generated@@294 Int) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@144)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@144) ($generated@@231 $generated@@295)) (exists (($generated@@296 Int) ) (= $generated@@295 ($generated@@293 $generated@@296))))
 :pattern ( ($generated@@231 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@2) (= ($generated@@140 $generated@@297 $generated@@137) (<= ($generated@@263 0) ($generated $generated@@297))))
 :pattern ( ($generated@@140 $generated@@297 $generated@@137))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@153)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@69) (= (type $generated@@302) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@270 ($generated@@298 $generated@@300) $generated@@301 $generated@@302) ($generated@@79 $generated@@300 $generated@@301 $generated@@302)))
 :pattern ( ($generated@@270 ($generated@@298 $generated@@300) $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@305 T@T) ) (! (= (type ($generated@@304 $generated@@305)) ($generated@@81 $generated@@305 $generated@@2))
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@84 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@81 $generated@@307 $generated@@2)) (and (= (= ($generated@@303 $generated@@306) 0) (= $generated@@306 ($generated@@304 $generated@@307))) (=> (not (= ($generated@@303 $generated@@306) 0)) (exists (($generated@@308 T@U) ) (!  (and (= (type $generated@@308) $generated@@307) (< 0 ($generated ($generated@@86 $generated@@306 $generated@@308))))
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
))))))
 :pattern ( ($generated@@303 $generated@@306))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 18)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@81 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@86 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@86 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 19)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@81 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@86 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@86 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@84 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@81 $generated@@346 $generated@@2)) (= ($generated@@159 $generated@@345) (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@346) (and (<= 0 ($generated ($generated@@86 $generated@@345 $generated@@347))) (<= ($generated ($generated@@86 $generated@@345 $generated@@347)) ($generated@@303 $generated@@345))))
 :pattern ( ($generated@@86 $generated@@345 $generated@@347))
)))))
 :pattern ( ($generated@@159 $generated@@345))
)))
(assert (forall (($generated@@349 T@T) ($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@348 $generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@153) ($generated@@235 $generated@@351 $generated@@137)) (and (= ($generated@@298 ($generated@@348 $generated@@2 $generated@@351)) $generated@@351) ($generated@@140 ($generated@@348 $generated@@2 $generated@@351) $generated@@137)))
 :pattern ( ($generated@@235 $generated@@351 $generated@@137))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@153) ($generated@@235 $generated@@352 $generated@@232)) (and (= ($generated@@298 ($generated@@348 $generated@@144 $generated@@352)) $generated@@352) ($generated@@140 ($generated@@348 $generated@@144 $generated@@352) $generated@@232)))
 :pattern ( ($generated@@235 $generated@@352 $generated@@232))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@313 (type $generated@@353))))
(let (($generated@@355 ($generated@@312 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@311 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@310 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) ($generated@@0 ($generated@@86 ($generated@@309 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@309 $generated@@353))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@313 (type $generated@@358))))
(= (type ($generated@@357 $generated@@358)) ($generated@@81 $generated@@359 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@313 (type $generated@@360))))
(let (($generated@@362 ($generated@@312 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@311 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@310 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@361) ($generated@@0 ($generated@@86 ($generated@@357 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@357 $generated@@360))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@331 (type $generated@@364))))
(let (($generated@@366 ($generated@@330 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@329 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@328 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@86 ($generated@@327 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@327 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@331 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@81 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@331 (type $generated@@371))))
(let (($generated@@373 ($generated@@330 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@329 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@328 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@86 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) ($generated@@81 $generated@@153 $generated@@2)) (= (type $generated@@376) $generated@@69)) (= ($generated@@140 $generated@@375 ($generated@@158 $generated@@376)) (forall (($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) $generated@@153) (< 0 ($generated ($generated@@86 $generated@@375 $generated@@377)))) ($generated@@235 $generated@@377 $generated@@376))
 :pattern ( ($generated@@86 $generated@@375 $generated@@377))
))))
 :pattern ( ($generated@@140 $generated@@375 ($generated@@158 $generated@@376)))
)))
(assert (forall (($generated@@378 Int) ($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@269 $generated@@379)) (= ($generated@@79 ($generated@@293 $generated@@378) $generated@@232 $generated@@379) ($generated@@79 ($generated@@8 $generated@@378) $generated@@46 $generated@@379)))
 :pattern ( ($generated@@79 ($generated@@293 $generated@@378) $generated@@232 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@81 $generated@@153 $generated@@4)) (= (type $generated@@381) $generated@@69)) (= (type $generated@@382) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@380 ($generated@@253 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@153) ($generated@@0 ($generated@@86 $generated@@380 $generated@@383))) ($generated@@270 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@86 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@79 $generated@@380 ($generated@@253 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (and (= (type $generated@@384) ($generated@@81 $generated@@153 $generated@@4)) (= (type $generated@@385) $generated@@69)) (= (type $generated@@386) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@384 ($generated@@258 $generated@@385) $generated@@386) (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@153) ($generated@@0 ($generated@@86 $generated@@384 $generated@@387))) ($generated@@270 $generated@@387 $generated@@385 $generated@@386))
 :pattern ( ($generated@@86 $generated@@384 $generated@@387))
))))
 :pattern ( ($generated@@79 $generated@@384 ($generated@@258 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(= ($generated ($generated@@86 ($generated@@304 $generated@@389) $generated@@388)) 0))
 :pattern ( (let (($generated@@389 (type $generated@@388)))
($generated@@86 ($generated@@304 $generated@@389) $generated@@388)))
)))
(assert  (and (forall (($generated@@392 T@U) ) (! (= (type ($generated@@390 $generated@@392)) ($generated@@81 $generated@@153 $generated@@4))
 :pattern ( ($generated@@390 $generated@@392))
)) (forall (($generated@@393 T@U) ) (! (let (($generated@@394 ($generated@@313 (type $generated@@393))))
(let (($generated@@395 ($generated@@312 (type $generated@@393))))
(= (type ($generated@@391 $generated@@393)) ($generated@@81 $generated@@395 $generated@@394))))
 :pattern ( ($generated@@391 $generated@@393))
))))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@396) ($generated@@311 $generated@@153 $generated@@153)) (= (type $generated@@397) $generated@@153)) (= ($generated@@0 ($generated@@86 ($generated@@390 $generated@@396) $generated@@397))  (and ($generated@@0 ($generated@@86 ($generated@@309 $generated@@396) ($generated@@151 ($generated@@348 $generated@@144 $generated@@397)))) (= ($generated@@86 ($generated@@391 $generated@@396) ($generated@@151 ($generated@@348 $generated@@144 $generated@@397))) ($generated@@152 ($generated@@348 $generated@@144 $generated@@397))))))
 :pattern ( ($generated@@86 ($generated@@390 $generated@@396) $generated@@397))
)))
(assert  (and (forall (($generated@@400 T@U) ) (! (= (type ($generated@@398 $generated@@400)) ($generated@@81 $generated@@153 $generated@@4))
 :pattern ( ($generated@@398 $generated@@400))
)) (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@331 (type $generated@@401))))
(let (($generated@@403 ($generated@@330 (type $generated@@401))))
(= (type ($generated@@399 $generated@@401)) ($generated@@81 $generated@@403 $generated@@402))))
 :pattern ( ($generated@@399 $generated@@401))
))))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@404) ($generated@@329 $generated@@153 $generated@@153)) (= (type $generated@@405) $generated@@153)) (= ($generated@@0 ($generated@@86 ($generated@@398 $generated@@404) $generated@@405))  (and ($generated@@0 ($generated@@86 ($generated@@327 $generated@@404) ($generated@@151 ($generated@@348 $generated@@144 $generated@@405)))) (= ($generated@@86 ($generated@@399 $generated@@404) ($generated@@151 ($generated@@348 $generated@@144 $generated@@405))) ($generated@@152 ($generated@@348 $generated@@144 $generated@@405))))))
 :pattern ( ($generated@@86 ($generated@@398 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (let (($generated@@408 (type $generated@@407)))
(let (($generated@@409 ($generated@@312 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@311 $generated@@409 $generated@@408)) (= ($generated@@0 ($generated@@86 ($generated@@357 $generated@@406) $generated@@407)) (exists (($generated@@410 T@U) ) (!  (and (= (type $generated@@410) $generated@@409) (and ($generated@@0 ($generated@@86 ($generated@@309 $generated@@406) $generated@@410)) (= $generated@@407 ($generated@@86 ($generated@@391 $generated@@406) $generated@@410))))
 :pattern ( ($generated@@86 ($generated@@309 $generated@@406) $generated@@410))
 :pattern ( ($generated@@86 ($generated@@391 $generated@@406) $generated@@410))
))))))
 :pattern ( ($generated@@86 ($generated@@357 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(let (($generated@@414 ($generated@@330 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@329 $generated@@414 $generated@@413)) (= ($generated@@0 ($generated@@86 ($generated@@368 $generated@@411) $generated@@412)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) (and ($generated@@0 ($generated@@86 ($generated@@327 $generated@@411) $generated@@415)) (= $generated@@412 ($generated@@86 ($generated@@399 $generated@@411) $generated@@415))))
 :pattern ( ($generated@@86 ($generated@@327 $generated@@411) $generated@@415))
 :pattern ( ($generated@@86 ($generated@@399 $generated@@411) $generated@@415))
))))))
 :pattern ( ($generated@@86 ($generated@@368 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@417 $generated@@418)) $generated@@69)
 :pattern ( ($generated@@416 $generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (and (= (type $generated@@419) ($generated@@311 $generated@@153 $generated@@153)) (= (type $generated@@420) $generated@@69)) (= (type $generated@@421) $generated@@69)) (= (type $generated@@422) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@153) ($generated@@0 ($generated@@86 ($generated@@309 $generated@@419) $generated@@423))) (and ($generated@@270 ($generated@@86 ($generated@@391 $generated@@419) $generated@@423) $generated@@421 $generated@@422) ($generated@@270 $generated@@423 $generated@@420 $generated@@422)))
 :pattern ( ($generated@@86 ($generated@@391 $generated@@419) $generated@@423))
 :pattern ( ($generated@@86 ($generated@@309 $generated@@419) $generated@@423))
))))
 :pattern ( ($generated@@79 $generated@@419 ($generated@@416 $generated@@420 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (! (= (type ($generated@@424 $generated@@425 $generated@@426)) $generated@@69)
 :pattern ( ($generated@@424 $generated@@425 $generated@@426))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ) (!  (=> (and (and (and (= (type $generated@@427) ($generated@@329 $generated@@153 $generated@@153)) (= (type $generated@@428) $generated@@69)) (= (type $generated@@429) $generated@@69)) (= (type $generated@@430) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430) (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@153) ($generated@@0 ($generated@@86 ($generated@@327 $generated@@427) $generated@@431))) (and ($generated@@270 ($generated@@86 ($generated@@399 $generated@@427) $generated@@431) $generated@@429 $generated@@430) ($generated@@270 $generated@@431 $generated@@428 $generated@@430)))
 :pattern ( ($generated@@86 ($generated@@399 $generated@@427) $generated@@431))
 :pattern ( ($generated@@86 ($generated@@327 $generated@@427) $generated@@431))
))))
 :pattern ( ($generated@@79 $generated@@427 ($generated@@424 $generated@@428 $generated@@429) $generated@@430))
)))
(assert  (=> (<= 1 $generated@@247) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@144) (or ($generated@@249 ($generated@@265 $generated@@432)) (and (not (= 1 $generated@@247)) ($generated@@140 $generated@@432 $generated@@232)))) (and ($generated@@231 ($generated@@265 $generated@@432)) (= ($generated@@248 ($generated@@265 $generated@@432)) (let (($generated@@433 ($generated@@263 ($generated@@250 ($generated@@265 $generated@@432)))))
$generated@@433))))
 :weight 3
 :pattern ( ($generated@@248 ($generated@@265 $generated@@432)))
))))
(assert (forall (($generated@@435 T@T) ) (! (= (type ($generated@@434 $generated@@435)) ($generated@@81 $generated@@435 $generated@@4))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@331 (type $generated@@436))))
(let (($generated@@438 ($generated@@330 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@329 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@328 $generated@@438 $generated@@437)) (= ($generated@@327 $generated@@436) ($generated@@434 $generated@@438))))))
 :pattern ( ($generated@@327 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@331 (type $generated@@439))))
(let (($generated@@441 ($generated@@330 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@329 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@328 $generated@@441 $generated@@440)) (= ($generated@@368 $generated@@439) ($generated@@434 $generated@@440))))))
 :pattern ( ($generated@@368 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@331 (type $generated@@442))))
(let (($generated@@444 ($generated@@330 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@329 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@328 $generated@@444 $generated@@443)) (= ($generated@@398 $generated@@442) ($generated@@434 $generated@@153))))))
 :pattern ( ($generated@@398 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@313 (type $generated@@445))))
(let (($generated@@447 ($generated@@312 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@311 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@310 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (and (and (= (type $generated@@448) $generated@@153) (= (type $generated@@449) $generated@@153)) ($generated@@0 ($generated@@86 ($generated@@390 $generated@@445) ($generated@@298 ($generated@@234 $generated@@448 $generated@@449)))))
 :no-pattern (type $generated@@448)
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@390 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@331 (type $generated@@450))))
(let (($generated@@452 ($generated@@330 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@329 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@328 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@153) (= (type $generated@@454) $generated@@153)) ($generated@@0 ($generated@@86 ($generated@@398 $generated@@450) ($generated@@298 ($generated@@234 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@398 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@153) ($generated@@235 $generated@@455 $generated@@46)) (and (= ($generated@@298 ($generated@@348 $generated@@2 $generated@@455)) $generated@@455) ($generated@@140 ($generated@@348 $generated@@2 $generated@@455) $generated@@46)))
 :pattern ( ($generated@@235 $generated@@455 $generated@@46))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@153) ($generated@@235 $generated@@456 $generated@@47)) (and (= ($generated@@298 ($generated@@348 $generated@@3 $generated@@456)) $generated@@456) ($generated@@140 ($generated@@348 $generated@@3 $generated@@456) $generated@@47)))
 :pattern ( ($generated@@235 $generated@@456 $generated@@47))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@153) ($generated@@235 $generated@@457 $generated@@44)) (and (= ($generated@@298 ($generated@@348 $generated@@4 $generated@@457)) $generated@@457) ($generated@@140 ($generated@@348 $generated@@4 $generated@@457) $generated@@44)))
 :pattern ( ($generated@@235 $generated@@457 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@458) 20))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@153) ($generated@@235 $generated@@459 $generated@@45)) (and (= ($generated@@298 ($generated@@348 $generated@@458 $generated@@459)) $generated@@459) ($generated@@140 ($generated@@348 $generated@@458 $generated@@459) $generated@@45)))
 :pattern ( ($generated@@235 $generated@@459 $generated@@45))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@69) (= ($generated@@235 ($generated@@298 $generated@@460) $generated@@461) ($generated@@140 $generated@@460 $generated@@461)))
 :pattern ( ($generated@@235 ($generated@@298 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@84 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@81 $generated@@463 $generated@@2)) (<= 0 ($generated@@303 $generated@@462))))
 :pattern ( ($generated@@303 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@286 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@285 $generated@@465)) (<= 0 ($generated@@284 $generated@@464))))
 :pattern ( ($generated@@284 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@69)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@69) (= (type $generated@@469) $generated@@69)) (= ($generated@@466 ($generated@@416 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@416 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@69)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@69) (= (type $generated@@473) $generated@@69)) (= ($generated@@470 ($generated@@416 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@416 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@69) (= (type $generated@@475) $generated@@69)) (= ($generated@@77 ($generated@@416 $generated@@474 $generated@@475)) $generated@@58))
 :pattern ( ($generated@@416 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@69)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@69) (= (type $generated@@479) $generated@@69)) (= ($generated@@476 ($generated@@424 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@424 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@69)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@69) (= (type $generated@@483) $generated@@69)) (= ($generated@@480 ($generated@@424 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@424 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@69) (= (type $generated@@485) $generated@@69)) (= ($generated@@77 ($generated@@424 $generated@@484 $generated@@485)) $generated@@59))
 :pattern ( ($generated@@424 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@153) (= (type $generated@@487) $generated@@153)) (= ($generated@@276 ($generated@@234 $generated@@486 $generated@@487)) $generated@@62))
 :pattern ( ($generated@@234 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@69)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@69) (= (type $generated@@491) $generated@@69)) (= ($generated@@488 ($generated@@143 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@143 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@69)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@69) (= (type $generated@@495) $generated@@69)) (= ($generated@@492 ($generated@@143 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@143 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@153) (= (type $generated@@497) $generated@@153)) (= ($generated@@151 ($generated@@234 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@234 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@153) (= (type $generated@@499) $generated@@153)) (= ($generated@@152 ($generated@@234 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@234 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@69)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@286 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@285 $generated@@153)) (= (type $generated@@507) $generated@@69)) (= (type $generated@@508) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@284 $generated@@506))) ($generated@@270 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@79 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@80 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@80 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@69)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@69) (= ($generated@@512 ($generated@@253 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@253 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@69) (= ($generated@@77 ($generated@@253 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@253 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@69)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@69) (= ($generated@@516 ($generated@@258 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@258 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@69) (= ($generated@@77 ($generated@@258 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@258 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@69)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@69) (= ($generated@@520 ($generated@@158 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@158 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@69) (= ($generated@@77 ($generated@@158 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@158 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@69)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@69) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@69) (= ($generated@@77 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@528 Int) ) (! (= ($generated@@276 ($generated@@293 $generated@@528)) $generated@@64)
 :pattern ( ($generated@@293 $generated@@528))
)))
(assert (forall (($generated@@529 Int) ) (! (= ($generated@@250 ($generated@@293 $generated@@529)) $generated@@529)
 :pattern ( ($generated@@293 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
(= ($generated@@348 $generated@@531 ($generated@@298 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@298 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@532) ($generated@@311 $generated@@153 $generated@@153)) (= (type $generated@@533) $generated@@69)) (= (type $generated@@534) $generated@@69)) (= ($generated@@140 $generated@@532 ($generated@@416 $generated@@533 $generated@@534)) (forall (($generated@@535 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@153) ($generated@@0 ($generated@@86 ($generated@@309 $generated@@532) $generated@@535))) (and ($generated@@235 ($generated@@86 ($generated@@391 $generated@@532) $generated@@535) $generated@@534) ($generated@@235 $generated@@535 $generated@@533)))
 :pattern ( ($generated@@86 ($generated@@391 $generated@@532) $generated@@535))
 :pattern ( ($generated@@86 ($generated@@309 $generated@@532) $generated@@535))
))))
 :pattern ( ($generated@@140 $generated@@532 ($generated@@416 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@329 $generated@@153 $generated@@153)) (= (type $generated@@537) $generated@@69)) (= (type $generated@@538) $generated@@69)) (= ($generated@@140 $generated@@536 ($generated@@424 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@153) ($generated@@0 ($generated@@86 ($generated@@327 $generated@@536) $generated@@539))) (and ($generated@@235 ($generated@@86 ($generated@@399 $generated@@536) $generated@@539) $generated@@538) ($generated@@235 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@86 ($generated@@399 $generated@@536) $generated@@539))
 :pattern ( ($generated@@86 ($generated@@327 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@140 $generated@@536 ($generated@@424 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@153) (= (type $generated@@543) $generated@@153)) (< ($generated@@540 $generated@@542) ($generated@@541 ($generated@@234 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@234 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@153) (= (type $generated@@545) $generated@@153)) (< ($generated@@540 $generated@@545) ($generated@@541 ($generated@@234 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@234 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 Int) ) (! (= ($generated@@140 ($generated@@293 $generated@@546) $generated@@232) ($generated@@140 ($generated@@8 $generated@@546) $generated@@46))
 :pattern ( ($generated@@140 ($generated@@293 $generated@@546) $generated@@232))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (and (= (type $generated@@547) $generated@@153) (= (type $generated@@548) $generated@@69)) (= (type $generated@@549) $generated@@69)) ($generated@@235 $generated@@547 ($generated@@416 $generated@@548 $generated@@549))) (and (= ($generated@@298 ($generated@@348 ($generated@@311 $generated@@153 $generated@@153) $generated@@547)) $generated@@547) ($generated@@140 ($generated@@348 ($generated@@311 $generated@@153 $generated@@153) $generated@@547) ($generated@@416 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@235 $generated@@547 ($generated@@416 $generated@@548 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@153) (= (type $generated@@551) $generated@@69)) (= (type $generated@@552) $generated@@69)) ($generated@@235 $generated@@550 ($generated@@424 $generated@@551 $generated@@552))) (and (= ($generated@@298 ($generated@@348 ($generated@@329 $generated@@153 $generated@@153) $generated@@550)) $generated@@550) ($generated@@140 ($generated@@348 ($generated@@329 $generated@@153 $generated@@153) $generated@@550) ($generated@@424 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@235 $generated@@550 ($generated@@424 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@69) (= (type $generated@@554) $generated@@69)) (= (type $generated@@555) $generated@@153)) ($generated@@235 $generated@@555 ($generated@@143 $generated@@553 $generated@@554))) (and (= ($generated@@298 ($generated@@348 $generated@@144 $generated@@555)) $generated@@555) ($generated@@140 ($generated@@348 $generated@@144 $generated@@555) ($generated@@143 $generated@@553 $generated@@554))))
 :pattern ( ($generated@@235 $generated@@555 ($generated@@143 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@556 T@U) ) (! (let (($generated@@557 (type $generated@@556)))
 (not ($generated@@0 ($generated@@86 ($generated@@434 $generated@@557) $generated@@556))))
 :pattern ( (let (($generated@@557 (type $generated@@556)))
($generated@@86 ($generated@@434 $generated@@557) $generated@@556)))
)))
(assert (forall (($generated@@559 T@U) ) (! (= (type ($generated@@558 $generated@@559)) $generated@@74)
 :pattern ( ($generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@69) (= (type $generated@@561) $generated@@69)) (and (= ($generated@@77 ($generated@@143 $generated@@560 $generated@@561)) $generated@@63) (= ($generated@@558 ($generated@@143 $generated@@560 $generated@@561)) $generated@@67)))
 :pattern ( ($generated@@143 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@144) (= (type $generated@@563) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@269 $generated@@563) (and ($generated@@231 $generated@@562) ($generated@@79 $generated@@562 $generated@@232 $generated@@563)))) ($generated@@79 ($generated@@8 ($generated@@250 $generated@@562)) $generated@@46 $generated@@563))
 :pattern ( ($generated@@79 ($generated@@8 ($generated@@250 $generated@@562)) $generated@@46 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@144) (= ($generated@@540 ($generated@@298 $generated@@564)) ($generated@@541 $generated@@564)))
 :pattern ( ($generated@@540 ($generated@@298 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@153) ($generated@@235 $generated@@565 ($generated@@80 0))) (and (= ($generated@@298 ($generated@@348 $generated@@2 $generated@@565)) $generated@@565) ($generated@@140 ($generated@@348 ($generated@@81 $generated@@153 $generated@@4) $generated@@565) ($generated@@80 0))))
 :pattern ( ($generated@@235 $generated@@565 ($generated@@80 0)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@153) (= (type $generated@@567) $generated@@69)) ($generated@@235 $generated@@566 ($generated@@253 $generated@@567))) (and (= ($generated@@298 ($generated@@348 ($generated@@81 $generated@@153 $generated@@4) $generated@@566)) $generated@@566) ($generated@@140 ($generated@@348 ($generated@@81 $generated@@153 $generated@@4) $generated@@566) ($generated@@253 $generated@@567))))
 :pattern ( ($generated@@235 $generated@@566 ($generated@@253 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@153) (= (type $generated@@569) $generated@@69)) ($generated@@235 $generated@@568 ($generated@@258 $generated@@569))) (and (= ($generated@@298 ($generated@@348 ($generated@@81 $generated@@153 $generated@@4) $generated@@568)) $generated@@568) ($generated@@140 ($generated@@348 ($generated@@81 $generated@@153 $generated@@4) $generated@@568) ($generated@@258 $generated@@569))))
 :pattern ( ($generated@@235 $generated@@568 ($generated@@258 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@153) (= (type $generated@@571) $generated@@69)) ($generated@@235 $generated@@570 ($generated@@158 $generated@@571))) (and (= ($generated@@298 ($generated@@348 ($generated@@81 $generated@@153 $generated@@2) $generated@@570)) $generated@@570) ($generated@@140 ($generated@@348 ($generated@@81 $generated@@153 $generated@@2) $generated@@570) ($generated@@158 $generated@@571))))
 :pattern ( ($generated@@235 $generated@@570 ($generated@@158 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@153) (= (type $generated@@573) $generated@@69)) ($generated@@235 $generated@@572 ($generated@@500 $generated@@573))) (and (= ($generated@@298 ($generated@@348 ($generated@@285 $generated@@153) $generated@@572)) $generated@@572) ($generated@@140 ($generated@@348 ($generated@@285 $generated@@153) $generated@@572) ($generated@@500 $generated@@573))))
 :pattern ( ($generated@@235 $generated@@572 ($generated@@500 $generated@@573)))
)))
(assert (= ($generated@@77 $generated@@137) $generated@@61))
(assert (= ($generated@@558 $generated@@137) $generated@@66))
(assert (= ($generated@@77 $generated@@232) $generated@@65))
(assert (= ($generated@@558 $generated@@232) $generated@@68))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@81 $generated@@153 $generated@@2)) (= (type $generated@@575) $generated@@69)) (= (type $generated@@576) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@574 ($generated@@158 $generated@@575) $generated@@576) (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@153) (< 0 ($generated ($generated@@86 $generated@@574 $generated@@577)))) ($generated@@270 $generated@@577 $generated@@575 $generated@@576))
 :pattern ( ($generated@@86 $generated@@574 $generated@@577))
))))
 :pattern ( ($generated@@79 $generated@@574 ($generated@@158 $generated@@575) $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@144) (= (type $generated@@579) $generated@@69)) (= (type $generated@@580) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@269 $generated@@580) (and ($generated@@142 $generated@@578) (exists (($generated@@581 T@U) ) (!  (and (= (type $generated@@581) $generated@@69) ($generated@@79 $generated@@578 ($generated@@143 $generated@@579 $generated@@581) $generated@@580))
 :pattern ( ($generated@@79 $generated@@578 ($generated@@143 $generated@@579 $generated@@581) $generated@@580))
))))) ($generated@@270 ($generated@@151 $generated@@578) $generated@@579 $generated@@580))
 :pattern ( ($generated@@270 ($generated@@151 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@144) (= (type $generated@@583) $generated@@69)) (= (type $generated@@584) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@269 $generated@@584) (and ($generated@@142 $generated@@582) (exists (($generated@@585 T@U) ) (!  (and (= (type $generated@@585) $generated@@69) ($generated@@79 $generated@@582 ($generated@@143 $generated@@585 $generated@@583) $generated@@584))
 :pattern ( ($generated@@79 $generated@@582 ($generated@@143 $generated@@585 $generated@@583) $generated@@584))
))))) ($generated@@270 ($generated@@152 $generated@@582) $generated@@583 $generated@@584))
 :pattern ( ($generated@@270 ($generated@@152 $generated@@582) $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@153) (= (type $generated@@587) $generated@@153)) (= ($generated@@234 ($generated@@265 $generated@@586) ($generated@@265 $generated@@587)) ($generated@@265 ($generated@@234 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@234 ($generated@@265 $generated@@586) ($generated@@265 $generated@@587)))
)))
(assert (forall (($generated@@588 Int) ) (! (= ($generated@@298 ($generated@@8 ($generated@@263 $generated@@588))) ($generated@@265 ($generated@@298 ($generated@@8 $generated@@588))))
 :pattern ( ($generated@@298 ($generated@@8 ($generated@@263 $generated@@588))))
)))
(assert (forall (($generated@@589 Int) ) (! (= ($generated@@293 ($generated@@263 $generated@@589)) ($generated@@265 ($generated@@293 $generated@@589)))
 :pattern ( ($generated@@293 ($generated@@263 $generated@@589)))
)))
(assert (forall (($generated@@590 T@U) ) (! (= ($generated@@298 ($generated@@265 $generated@@590)) ($generated@@265 ($generated@@298 $generated@@590)))
 :pattern ( ($generated@@298 ($generated@@265 $generated@@590)))
)))
(assert  (=> (<= 1 $generated@@247) (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@144) (or ($generated@@249 $generated@@591) (and (not (= 1 $generated@@247)) ($generated@@140 $generated@@591 $generated@@232)))) (<= ($generated@@263 0) ($generated@@248 $generated@@591)))
 :pattern ( ($generated@@248 $generated@@591))
))))
(assert (forall (($generated@@592 T@U) ) (! (let (($generated@@593 ($generated@@286 (type $generated@@592))))
 (=> (and (= (type $generated@@592) ($generated@@285 $generated@@593)) (= ($generated@@284 $generated@@592) 0)) (= $generated@@592 ($generated@@283 $generated@@593))))
 :pattern ( ($generated@@284 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@595)))
 (=> (and (and (= (type $generated@@594) ($generated@@81 $generated@@597 $generated@@2)) (= (type $generated@@596) $generated@@2)) (<= 0 ($generated $generated@@596))) (= ($generated@@303 ($generated@@87 $generated@@594 $generated@@595 $generated@@596)) (+ (- ($generated@@303 $generated@@594) ($generated ($generated@@86 $generated@@594 $generated@@595))) ($generated $generated@@596)))))
 :pattern ( ($generated@@303 ($generated@@87 $generated@@594 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@599) $generated@@2)) ($generated@@79 $generated@@599 $generated@@46 $generated@@598))
 :pattern ( ($generated@@79 $generated@@599 $generated@@46 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@601) $generated@@3)) ($generated@@79 $generated@@601 $generated@@47 $generated@@600))
 :pattern ( ($generated@@79 $generated@@601 $generated@@47 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@603) $generated@@4)) ($generated@@79 $generated@@603 $generated@@44 $generated@@602))
 :pattern ( ($generated@@79 $generated@@603 $generated@@44 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@605) $generated@@458)) ($generated@@79 $generated@@605 $generated@@45 $generated@@604))
 :pattern ( ($generated@@79 $generated@@605 $generated@@45 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@607) $generated@@153)) ($generated@@79 $generated@@607 $generated@@48 $generated@@606))
 :pattern ( ($generated@@79 $generated@@607 $generated@@48 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@285 $generated@@153)) (= (type $generated@@609) $generated@@69)) (= ($generated@@140 $generated@@608 ($generated@@500 $generated@@609)) (forall (($generated@@610 Int) ) (!  (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@284 $generated@@608))) ($generated@@235 ($generated@@501 $generated@@608 $generated@@610) $generated@@609))
 :pattern ( ($generated@@501 $generated@@608 $generated@@610))
))))
 :pattern ( ($generated@@140 $generated@@608 ($generated@@500 $generated@@609)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 Int) ) (!  (=> (= (type $generated@@612) ($generated@@285 $generated@@153)) (=> (and (<= 0 $generated@@613) (< $generated@@613 ($generated@@284 $generated@@612))) (< ($generated@@541 ($generated@@348 $generated@@144 ($generated@@501 $generated@@612 $generated@@613))) ($generated@@611 $generated@@612))))
 :pattern ( ($generated@@541 ($generated@@348 $generated@@144 ($generated@@501 $generated@@612 $generated@@613))))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@311 $generated@@153 $generated@@153)) (= (type $generated@@615) $generated@@69)) (= (type $generated@@616) $generated@@69)) ($generated@@140 $generated@@614 ($generated@@416 $generated@@615 $generated@@616))) (and (and ($generated@@140 ($generated@@309 $generated@@614) ($generated@@253 $generated@@615)) ($generated@@140 ($generated@@357 $generated@@614) ($generated@@253 $generated@@616))) ($generated@@140 ($generated@@390 $generated@@614) ($generated@@253 ($generated@@143 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@140 $generated@@614 ($generated@@416 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (and (= (type $generated@@617) ($generated@@329 $generated@@153 $generated@@153)) (= (type $generated@@618) $generated@@69)) (= (type $generated@@619) $generated@@69)) ($generated@@140 $generated@@617 ($generated@@424 $generated@@618 $generated@@619))) (and (and ($generated@@140 ($generated@@327 $generated@@617) ($generated@@258 $generated@@618)) ($generated@@140 ($generated@@368 $generated@@617) ($generated@@258 $generated@@619))) ($generated@@140 ($generated@@398 $generated@@617) ($generated@@258 ($generated@@143 $generated@@618 $generated@@619)))))
 :pattern ( ($generated@@140 $generated@@617 ($generated@@424 $generated@@618 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@2) ($generated@@140 $generated@@620 $generated@@46))
 :pattern ( ($generated@@140 $generated@@620 $generated@@46))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@3) ($generated@@140 $generated@@621 $generated@@47))
 :pattern ( ($generated@@140 $generated@@621 $generated@@47))
)))
(assert (forall (($generated@@622 T@U) ) (!  (=> (= (type $generated@@622) $generated@@4) ($generated@@140 $generated@@622 $generated@@44))
 :pattern ( ($generated@@140 $generated@@622 $generated@@44))
)))
(assert (forall (($generated@@623 T@U) ) (!  (=> (= (type $generated@@623) $generated@@458) ($generated@@140 $generated@@623 $generated@@45))
 :pattern ( ($generated@@140 $generated@@623 $generated@@45))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@153) ($generated@@140 $generated@@624 $generated@@48))
 :pattern ( ($generated@@140 $generated@@624 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 () Int)
(declare-fun $generated@@627 () Int)
(declare-fun $generated@@628 () T@U)
(declare-fun $generated@@629 () T@U)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@625) $generated@@144) (= (type $generated@@628) ($generated@@165 $generated@@82 $generated@@4))) (= (type $generated@@629) $generated@@82)) (= (type $generated@@630) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@631) ($generated@@165 $generated@@82 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@633 true))
(let (($generated@@634  (=> (= $generated@@625 ($generated@@293 $generated@@626)) (=> (and (<= ($generated@@263 0) $generated@@627) (= (ControlFlow 0 3) (- 0 2))) ($generated@@140 ($generated@@8 $generated@@626) $generated@@137)))))
(let (($generated@@635  (=> (= $generated@@628 ($generated@@219 $generated@@629 $generated@@630 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@634) (=> (= (ControlFlow 0 5) 4) $generated@@633)))))
(let (($generated@@636 true))
(let (($generated@@637  (=> (= $generated@@631 ($generated@@164 $generated@@629 $generated@@630 $generated@@60 false)) (and (=> (= (ControlFlow 0 6) 1) $generated@@636) (=> (= (ControlFlow 0 6) 5) $generated@@635)))))
(let (($generated@@638  (=> (and (and (and ($generated@@269 $generated@@630) ($generated@@632 $generated@@630)) ($generated@@140 $generated@@625 $generated@@232)) (and (= 1 $generated@@247) (= (ControlFlow 0 7) 6))) $generated@@637)))
$generated@@638)))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 (T@U T@U) T@U)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@87 (T@U T@U T@U Int Int) Bool)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@97 (T@U T@U T@U) Bool)
(declare-fun $generated@@98 (Int) T@U)
(declare-fun $generated@@99 (T@T T@T) T@T)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@102 (T@T) T@T)
(declare-fun $generated@@103 (T@T) T@T)
(declare-fun $generated@@104 (T@U T@U) T@U)
(declare-fun $generated@@105 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U) T@U)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@U T@U) T@U)
(declare-fun $generated@@165 (Int) T@U)
(declare-fun $generated@@166 (T@U) Int)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@174 (T@U T@U) T@U)
(declare-fun $generated@@180 (T@U T@U) Bool)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@195 (T@U T@U T@U) T@U)
(declare-fun $generated@@196 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@197 (T@T T@T) T@T)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@200 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@251 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@262 (T@U T@U) Bool)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@275 (Int) Int)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@281 (T@U) Bool)
(declare-fun $generated@@284 (T@U T@U T@U) Bool)
(declare-fun $generated@@292 (T@U) Bool)
(declare-fun $generated@@294 (T@U) Bool)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@303 (T@U) Int)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@320 () Int)
(declare-fun $generated@@321 (T@U T@U Int Int) Bool)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@323 (T@U) T@U)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 (T@U T@U) Bool)
(declare-fun $generated@@351 (T@U) Int)
(declare-fun $generated@@352 (T@T) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@358 (T@T T@T) T@U)
(declare-fun $generated@@359 (T@T T@T) T@T)
(declare-fun $generated@@360 (T@T) T@T)
(declare-fun $generated@@361 (T@T) T@T)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@376 (T@T T@T) T@U)
(declare-fun $generated@@377 (T@T T@T) T@T)
(declare-fun $generated@@378 (T@T) T@T)
(declare-fun $generated@@379 (T@T) T@T)
(declare-fun $generated@@393 (T@U) Bool)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 () T@U)
(declare-fun $generated@@408 (T@T T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@485 (T@U T@U) T@U)
(declare-fun $generated@@493 (T@U T@U) T@U)
(declare-fun $generated@@510 (T@T) T@U)
(declare-fun $generated@@539 () T@T)
(declare-fun $generated@@572 (T@U) T@U)
(declare-fun $generated@@576 (T@U) T@U)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@586 (T@U) T@U)
(declare-fun $generated@@594 (T@U) T@U)
(declare-fun $generated@@598 (T@U) T@U)
(declare-fun $generated@@612 (T@U) T@U)
(declare-fun $generated@@613 (T@U Int) T@U)
(declare-fun $generated@@622 (T@U) Int)
(declare-fun $generated@@624 (T@U) T@U)
(declare-fun $generated@@628 (T@U) T@U)
(declare-fun $generated@@632 (T@U) T@U)
(declare-fun $generated@@636 (T@U) T@U)
(declare-fun $generated@@654 (T@U) Bool)
(declare-fun $generated@@656 (T@U) Int)
(declare-fun $generated@@657 (T@U) Int)
(declare-fun $generated@@678 (T@U) T@U)
(declare-fun $generated@@762 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (= ($generated@@1 $generated@@82) 11) (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= (type ($generated@@80 $generated@@83 $generated@@84)) $generated@@82)
 :pattern ( ($generated@@80 $generated@@83 $generated@@84))
))) (= (type $generated@@81) $generated@@69)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (and (= (type $generated@@85) $generated@@82) (= (type $generated@@86) $generated@@82)) (= ($generated@@79 ($generated@@80 $generated@@85 $generated@@86) $generated@@81)  (and ($generated@@79 $generated@@85 $generated@@81) ($generated@@79 $generated@@86 $generated@@81))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@85 $generated@@86) $generated@@81))
)))
(assert  (and (and (= ($generated@@1 $generated@@89) 12) (= ($generated@@1 $generated@@90) 13)) (forall (($generated@@91 T@U) ) (! (= (type ($generated@@88 $generated@@91)) $generated@@89)
 :pattern ( ($generated@@88 $generated@@91))
))))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 Int) ($generated@@96 Int) ) (!  (=> (and (and (= (type $generated@@92) $generated@@89) (= (type $generated@@93) $generated@@90)) (= (type $generated@@94) $generated@@82)) (= ($generated@@87 ($generated@@88 $generated@@92) $generated@@93 $generated@@94 $generated@@95 $generated@@96) ($generated@@87 $generated@@92 $generated@@93 $generated@@94 $generated@@95 $generated@@96)))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@92) $generated@@93 $generated@@94 $generated@@95 $generated@@96))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (= ($generated@@1 ($generated@@99 $generated@@108 $generated@@109)) 14)) (forall (($generated@@110 T@T) ($generated@@111 T@T) ) (! (= ($generated@@102 ($generated@@99 $generated@@110 $generated@@111)) $generated@@110)
 :pattern ( ($generated@@99 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (! (= ($generated@@103 ($generated@@99 $generated@@112 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@99 $generated@@112 $generated@@113))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@103 (type $generated@@114))))
(= (type ($generated@@104 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@104 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 (type $generated@@119)))
(let (($generated@@121 (type $generated@@118)))
(= (type ($generated@@105 $generated@@117 $generated@@118 $generated@@119)) ($generated@@99 $generated@@121 $generated@@120))))
 :pattern ( ($generated@@105 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@103 (type $generated@@122))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@104 ($generated@@105 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@104 ($generated@@105 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@104 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@104 ($generated@@105 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@104 $generated@@131 $generated@@133)))
 :weight 0
)))) (= ($generated@@1 $generated@@100) 15)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (let (($generated@@136 ($generated@@72 (type $generated@@135))))
(= (type ($generated@@106 $generated@@134 $generated@@135)) $generated@@136))
 :pattern ( ($generated@@106 $generated@@134 $generated@@135))
))) (= ($generated@@1 $generated@@101) 16)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= (type ($generated@@107 $generated@@137 $generated@@138 $generated@@139)) $generated@@101)
 :pattern ( ($generated@@107 $generated@@137 $generated@@138 $generated@@139))
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (let (($generated@@143 ($generated@@72 (type $generated@@141))))
 (=> (= (type $generated@@142) $generated@@143) (= ($generated@@106 ($generated@@107 $generated@@140 $generated@@141 $generated@@142) $generated@@141) $generated@@142)))
 :weight 0
))) (and (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@146 $generated@@147) (= ($generated@@106 ($generated@@107 $generated@@145 $generated@@146 $generated@@144) $generated@@147) ($generated@@106 $generated@@145 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or true (= ($generated@@106 ($generated@@107 $generated@@149 $generated@@150 $generated@@148) $generated@@151) ($generated@@106 $generated@@149 $generated@@151)))
 :weight 0
)))) (forall (($generated@@152 Int) ) (! (= (type ($generated@@98 $generated@@152)) $generated@@69)
 :pattern ( ($generated@@98 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@2) (= (type $generated@@154) ($generated@@99 $generated@@100 $generated@@101))) ($generated@@97 $generated@@153 ($generated@@98 0) $generated@@154))
 :pattern ( ($generated@@97 $generated@@153 ($generated@@98 0) $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (= (type $generated@@156) $generated@@90) (= (type $generated@@157) $generated@@90)) (= (type $generated@@158) $generated@@90)) (and ($generated@@155 $generated@@156 $generated@@157) ($generated@@155 $generated@@157 $generated@@158))) ($generated@@155 $generated@@156 $generated@@158))
 :pattern ( ($generated@@155 $generated@@156 $generated@@157) ($generated@@155 $generated@@157 $generated@@158))
 :pattern ( ($generated@@155 $generated@@156 $generated@@157) ($generated@@155 $generated@@156 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ) (!  (=> (= (type $generated@@159) $generated@@2) ($generated@@79 $generated@@159 ($generated@@98 0)))
 :pattern ( ($generated@@79 $generated@@159 ($generated@@98 0)))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (and (= (type $generated@@161) $generated@@82) (= (type $generated@@162) $generated@@82)) (= (type $generated@@163) ($generated@@99 $generated@@100 $generated@@101))) ($generated@@160 $generated@@163)) (= ($generated@@97 ($generated@@80 $generated@@161 $generated@@162) $generated@@81 $generated@@163)  (and ($generated@@97 $generated@@161 $generated@@81 $generated@@163) ($generated@@97 $generated@@162 $generated@@81 $generated@@163))))
 :pattern ( ($generated@@97 ($generated@@80 $generated@@161 $generated@@162) $generated@@81 $generated@@163))
)))
(assert  (and (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@90)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
)) (forall (($generated@@169 Int) ) (! (= (type ($generated@@165 $generated@@169)) $generated@@90)
 :pattern ( ($generated@@165 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 Int) ($generated@@172 Int) ) (!  (=> (= (type $generated@@170) $generated@@90) (=> (and (and (<= 0 $generated@@171) (<= 0 $generated@@172)) (<= (+ $generated@@171 $generated@@172) ($generated@@166 $generated@@170))) (= ($generated@@164 ($generated@@164 $generated@@170 ($generated@@165 $generated@@171)) ($generated@@165 $generated@@172)) ($generated@@164 $generated@@170 ($generated@@165 (+ $generated@@171 $generated@@172))))))
 :pattern ( ($generated@@164 ($generated@@164 $generated@@170 ($generated@@165 $generated@@171)) ($generated@@165 $generated@@172)))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (! (= (type ($generated@@174 $generated@@175 $generated@@176)) $generated@@69)
 :pattern ( ($generated@@174 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (and (= (type $generated@@177) $generated@@69) (= (type $generated@@178) $generated@@69)) (= (type $generated@@179) $generated@@82)) ($generated@@79 $generated@@179 ($generated@@174 $generated@@177 $generated@@178))) ($generated@@173 $generated@@179))
 :pattern ( ($generated@@173 $generated@@179) ($generated@@79 $generated@@179 ($generated@@174 $generated@@177 $generated@@178)))
)))
(assert  (and (forall (($generated@@183 T@U) ) (! (= (type ($generated@@181 $generated@@183)) $generated@@90)
 :pattern ( ($generated@@181 $generated@@183))
)) (forall (($generated@@184 T@U) ) (! (= (type ($generated@@182 $generated@@184)) $generated@@90)
 :pattern ( ($generated@@182 $generated@@184))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (= (type $generated@@185) $generated@@82) (= (type $generated@@186) $generated@@82)) true) (= ($generated@@180 $generated@@185 $generated@@186)  (and (= ($generated@@181 $generated@@185) ($generated@@181 $generated@@186)) (= ($generated@@182 $generated@@185) ($generated@@182 $generated@@186)))))
 :pattern ( ($generated@@180 $generated@@185 $generated@@186))
)))
(assert  (and (forall (($generated@@189 T@U) ) (! (= (type ($generated@@187 $generated@@189)) $generated@@73)
 :pattern ( ($generated@@187 $generated@@189))
)) (= (type $generated@@188) $generated@@82)))
(assert (= ($generated@@187 $generated@@188) $generated@@63))
(assert (forall (($generated@@192 T@U) ) (! (= (type ($generated@@190 $generated@@192)) $generated@@69)
 :pattern ( ($generated@@190 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and (= (type $generated@@193) ($generated@@99 $generated@@90 $generated@@2)) (= (type $generated@@194) $generated@@69)) ($generated@@79 $generated@@193 ($generated@@190 $generated@@194))) ($generated@@191 $generated@@193))
 :pattern ( ($generated@@79 $generated@@193 ($generated@@190 $generated@@194)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (= ($generated@@1 ($generated@@197 $generated@@201 $generated@@202)) 17)) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@198 ($generated@@197 $generated@@203 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@197 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (! (= ($generated@@199 ($generated@@197 $generated@@205 $generated@@206)) $generated@@206)
 :pattern ( ($generated@@197 $generated@@205 $generated@@206))
))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@199 (type $generated@@207))))
(= (type ($generated@@195 $generated@@207 $generated@@208 $generated@@209)) $generated@@210))
 :pattern ( ($generated@@195 $generated@@207 $generated@@208 $generated@@209))
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (let (($generated@@215 (type $generated@@214)))
(let (($generated@@216 (type $generated@@212)))
(= (type ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@197 $generated@@216 $generated@@215))))
 :pattern ( ($generated@@200 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@199 (type $generated@@217))))
 (=> (= (type $generated@@220) $generated@@221) (= ($generated@@195 ($generated@@200 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@218 $generated@@219) $generated@@220)))
 :weight 0
))) (and (and (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@195 ($generated@@200 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@195 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@231 $generated@@233) (= ($generated@@195 ($generated@@200 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@195 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or true (= ($generated@@195 ($generated@@200 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@195 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
)))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ) (! (= (type ($generated@@196 $generated@@240 $generated@@241 $generated@@242 $generated@@243)) ($generated@@197 $generated@@100 $generated@@4))
 :pattern ( ($generated@@196 $generated@@240 $generated@@241 $generated@@242 $generated@@243))
))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 Bool) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (let (($generated@@250 ($generated@@72 (type $generated@@249))))
 (=> (and (and (and (and (= (type $generated@@244) $generated@@100) (= (type $generated@@245) ($generated@@99 $generated@@100 $generated@@101))) (= (type $generated@@246) ($generated@@71 $generated@@4))) (= (type $generated@@248) $generated@@100)) (= (type $generated@@249) ($generated@@71 $generated@@250))) (= ($generated@@0 ($generated@@195 ($generated@@196 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (not (= $generated@@248 $generated@@244)) ($generated@@0 ($generated@@106 ($generated@@104 $generated@@245 $generated@@248) $generated@@246))) $generated@@247))))
 :pattern ( ($generated@@195 ($generated@@196 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (! (= (type ($generated@@251 $generated@@253 $generated@@254)) $generated@@82)
 :pattern ( ($generated@@251 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@255) $generated@@69) (= (type $generated@@256) $generated@@69)) (= (type $generated@@257) $generated@@90)) (= (type $generated@@258) $generated@@90)) (= ($generated@@79 ($generated@@251 $generated@@257 $generated@@258) ($generated@@174 $generated@@255 $generated@@256))  (and ($generated@@252 $generated@@257 $generated@@255) ($generated@@252 $generated@@258 $generated@@256))))
 :pattern ( ($generated@@79 ($generated@@251 $generated@@257 $generated@@258) ($generated@@174 $generated@@255 $generated@@256)))
)))
(assert ($generated@@79 $generated@@188 $generated@@81))
(assert (forall (($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@259) ($generated@@99 $generated@@100 $generated@@101)) ($generated@@160 $generated@@259)) ($generated@@97 $generated@@188 $generated@@81 $generated@@259))
 :pattern ( ($generated@@97 $generated@@188 $generated@@81 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@82) (= (type $generated@@261) $generated@@82)) (= ($generated@@180 $generated@@260 $generated@@261) (= $generated@@260 $generated@@261)))
 :pattern ( ($generated@@180 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@82) (= (type $generated@@264) $generated@@82)) (= ($generated@@262 $generated@@263 $generated@@264) (= $generated@@263 $generated@@264)))
 :pattern ( ($generated@@262 $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= (type ($generated@@265 $generated@@266)) $generated@@69)
 :pattern ( ($generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@267) ($generated@@99 $generated@@90 $generated@@4)) (= (type $generated@@268) $generated@@69)) (= ($generated@@79 $generated@@267 ($generated@@265 $generated@@268)) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@90) ($generated@@0 ($generated@@104 $generated@@267 $generated@@269))) ($generated@@252 $generated@@269 $generated@@268))
 :pattern ( ($generated@@104 $generated@@267 $generated@@269))
))))
 :pattern ( ($generated@@79 $generated@@267 ($generated@@265 $generated@@268)))
)))
(assert (forall (($generated@@271 T@U) ) (! (= (type ($generated@@270 $generated@@271)) $generated@@69)
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) ($generated@@99 $generated@@90 $generated@@4)) (= (type $generated@@273) $generated@@69)) (= ($generated@@79 $generated@@272 ($generated@@270 $generated@@273)) (forall (($generated@@274 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@90) ($generated@@0 ($generated@@104 $generated@@272 $generated@@274))) ($generated@@252 $generated@@274 $generated@@273))
 :pattern ( ($generated@@104 $generated@@272 $generated@@274))
))))
 :pattern ( ($generated@@79 $generated@@272 ($generated@@270 $generated@@273)))
)))
(assert (forall (($generated@@276 Int) ) (! (= ($generated@@275 $generated@@276) $generated@@276)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (! (let (($generated@@279 (type $generated@@278)))
(= (type ($generated@@277 $generated@@278)) $generated@@279))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= ($generated@@277 $generated@@280) $generated@@280)
 :pattern ( ($generated@@277 $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (and (= (type $generated@@282) $generated@@82) (= (type $generated@@283) $generated@@82)) (and ($generated@@281 $generated@@282) ($generated@@281 $generated@@283))) (= ($generated@@262 $generated@@282 $generated@@283) true))
 :pattern ( ($generated@@262 $generated@@282 $generated@@283) ($generated@@281 $generated@@282))
 :pattern ( ($generated@@262 $generated@@282 $generated@@283) ($generated@@281 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@285) $generated@@69) (= (type $generated@@286) $generated@@69)) (= (type $generated@@287) $generated@@90)) (= (type $generated@@288) $generated@@90)) (= (type $generated@@289) ($generated@@99 $generated@@100 $generated@@101))) ($generated@@160 $generated@@289)) (= ($generated@@97 ($generated@@251 $generated@@287 $generated@@288) ($generated@@174 $generated@@285 $generated@@286) $generated@@289)  (and ($generated@@284 $generated@@287 $generated@@285 $generated@@289) ($generated@@284 $generated@@288 $generated@@286 $generated@@289))))
 :pattern ( ($generated@@97 ($generated@@251 $generated@@287 $generated@@288) ($generated@@174 $generated@@285 $generated@@286) $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (= (type $generated@@290) $generated@@82) (= ($generated@@173 $generated@@290) (= ($generated@@187 $generated@@290) $generated@@61)))
 :pattern ( ($generated@@173 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (= (type $generated@@291) $generated@@82) (= ($generated@@281 $generated@@291) (= ($generated@@187 $generated@@291) $generated@@63)))
 :pattern ( ($generated@@281 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (!  (=> (= (type $generated@@293) $generated@@82) (= ($generated@@292 $generated@@293) (= ($generated@@187 $generated@@293) $generated@@65)))
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (= (type $generated@@295) $generated@@82) (= ($generated@@294 $generated@@295) (= ($generated@@187 $generated@@295) $generated@@66)))
 :pattern ( ($generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@82) ($generated@@173 $generated@@296)) (exists (($generated@@297 T@U) ($generated@@298 T@U) ) (!  (and (and (= (type $generated@@297) $generated@@90) (= (type $generated@@298) $generated@@90)) (= $generated@@296 ($generated@@251 $generated@@297 $generated@@298)))
 :no-pattern (type $generated@@297)
 :no-pattern (type $generated@@298)
 :no-pattern ($generated $generated@@297)
 :no-pattern ($generated@@0 $generated@@297)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
)))
 :pattern ( ($generated@@173 $generated@@296))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@82) ($generated@@292 $generated@@299)) (exists (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (and (and (= (type $generated@@300) $generated@@82) (= (type $generated@@301) $generated@@82)) (= $generated@@299 ($generated@@80 $generated@@300 $generated@@301)))
 :no-pattern (type $generated@@300)
 :no-pattern (type $generated@@301)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
)))
 :pattern ( ($generated@@292 $generated@@299))
)))
(assert  (and (and (forall (($generated@@306 T@T) ) (= ($generated@@1 ($generated@@304 $generated@@306)) 18)) (forall (($generated@@307 T@T) ) (! (= ($generated@@305 ($generated@@304 $generated@@307)) $generated@@307)
 :pattern ( ($generated@@304 $generated@@307))
))) (forall (($generated@@308 T@T) ) (! (= (type ($generated@@302 $generated@@308)) ($generated@@304 $generated@@308))
 :pattern ( ($generated@@302 $generated@@308))
))))
(assert (forall (($generated@@309 T@T) ) (! (= ($generated@@303 ($generated@@302 $generated@@309)) 0)
 :pattern ( ($generated@@302 $generated@@309))
)))
(assert (forall (($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@310) $generated@@82) ($generated@@281 $generated@@310)) (= $generated@@310 $generated@@188))
 :pattern ( ($generated@@281 $generated@@310))
)))
(assert (forall (($generated@@312 T@U) ) (! (= (type ($generated@@311 $generated@@312)) $generated@@82)
 :pattern ( ($generated@@311 $generated@@312))
)))
(assert (forall (($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@313) $generated@@82) ($generated@@294 $generated@@313)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@82) (= $generated@@313 ($generated@@311 $generated@@314)))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
)))
 :pattern ( ($generated@@294 $generated@@313))
)))
(assert (forall (($generated@@316 T@U) ) (! (= (type ($generated@@315 $generated@@316)) $generated@@90)
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@69) (= (type $generated@@319) ($generated@@99 $generated@@100 $generated@@101))) (= ($generated@@284 ($generated@@315 $generated@@317) $generated@@318 $generated@@319) ($generated@@97 $generated@@317 $generated@@318 $generated@@319)))
 :pattern ( ($generated@@284 ($generated@@315 $generated@@317) $generated@@318 $generated@@319))
)))
(assert  (and (and (forall (($generated@@326 T@U) ) (! (= (type ($generated@@322 $generated@@326)) $generated@@82)
 :pattern ( ($generated@@322 $generated@@326))
)) (forall (($generated@@327 T@U) ) (! (= (type ($generated@@323 $generated@@327)) $generated@@82)
 :pattern ( ($generated@@323 $generated@@327))
))) (forall (($generated@@328 T@U) ) (! (= (type ($generated@@324 $generated@@328)) $generated@@82)
 :pattern ( ($generated@@324 $generated@@328))
))))
(assert  (=> (<= 2 $generated@@320) (forall (($generated@@329 T@U) ($generated@@330 T@U) ($generated@@331 T@U) ($generated@@332 Int) ($generated@@333 Int) ) (!  (=> (and (and (and (= (type $generated@@329) $generated@@89) (= (type $generated@@330) $generated@@90)) (= (type $generated@@331) $generated@@82)) (or ($generated@@321 ($generated@@277 $generated@@330) $generated@@331 $generated@@332 $generated@@333) (and (not (= 2 $generated@@320)) ($generated@@79 $generated@@331 $generated@@81)))) (and (and (=> (< 0 ($generated@@166 $generated@@330)) (=> (not ($generated@@281 $generated@@331)) (and (=> ($generated@@292 $generated@@331) (let (($generated@@334 ($generated@@322 $generated@@331)))
(let (($generated@@335 ($generated@@323 $generated@@331)))
(forall (($generated@@336 Int) ) (!  (and ($generated@@321 ($generated@@164 $generated@@330 ($generated@@165 1)) $generated@@335 $generated@@332 $generated@@336) (=> ($generated@@87 ($generated@@88 $generated@@329) ($generated@@164 $generated@@330 ($generated@@165 1)) $generated@@335 $generated@@332 $generated@@336) ($generated@@321 ($generated@@164 $generated@@330 ($generated@@165 1)) $generated@@334 $generated@@336 $generated@@333)))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@329) ($generated@@164 $generated@@330 ($generated@@165 1)) $generated@@334 $generated@@336 $generated@@333))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@329) ($generated@@164 $generated@@330 ($generated@@165 1)) $generated@@335 $generated@@332 $generated@@336))
))))) (=> (not ($generated@@292 $generated@@331)) (let (($generated@@337 ($generated@@324 $generated@@331)))
 (=> (not (= $generated@@332 $generated@@333)) (forall (($generated@@338 Int) ) (!  (and ($generated@@321 ($generated@@164 $generated@@330 ($generated@@165 1)) $generated@@337 $generated@@332 $generated@@338) (=> ($generated@@87 ($generated@@88 $generated@@329) ($generated@@164 $generated@@330 ($generated@@165 1)) $generated@@337 $generated@@332 $generated@@338) ($generated@@321 ($generated@@164 $generated@@330 ($generated@@165 1)) $generated@@331 $generated@@338 $generated@@333)))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@329) ($generated@@164 $generated@@330 ($generated@@165 1)) $generated@@331 $generated@@338 $generated@@333))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@329) ($generated@@164 $generated@@330 ($generated@@165 1)) $generated@@337 $generated@@332 $generated@@338))
)))))))) (=> (=> (< 0 ($generated@@166 $generated@@330)) (ite ($generated@@281 $generated@@331) (= $generated@@333 (+ $generated@@332 1)) (ite ($generated@@292 $generated@@331) (let (($generated@@339 ($generated@@322 $generated@@331)))
(let (($generated@@340 ($generated@@323 $generated@@331)))
(exists (($generated@@341 Int) ) (!  (and ($generated@@87 ($generated@@88 $generated@@329) ($generated@@164 $generated@@330 ($generated@@165 1)) $generated@@340 $generated@@332 $generated@@341) ($generated@@87 ($generated@@88 $generated@@329) ($generated@@164 $generated@@330 ($generated@@165 1)) $generated@@339 $generated@@341 $generated@@333))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@329) ($generated@@164 $generated@@330 ($generated@@165 1)) $generated@@339 $generated@@341 $generated@@333))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@329) ($generated@@164 $generated@@330 ($generated@@165 1)) $generated@@340 $generated@@332 $generated@@341))
)))) (let (($generated@@342 ($generated@@324 $generated@@331)))
 (or (= $generated@@332 $generated@@333) (exists (($generated@@343 Int) ) (!  (and ($generated@@87 ($generated@@88 $generated@@329) ($generated@@164 $generated@@330 ($generated@@165 1)) $generated@@342 $generated@@332 $generated@@343) ($generated@@87 ($generated@@88 $generated@@329) ($generated@@164 $generated@@330 ($generated@@165 1)) $generated@@331 $generated@@343 $generated@@333))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@329) ($generated@@164 $generated@@330 ($generated@@165 1)) $generated@@331 $generated@@343 $generated@@333))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@329) ($generated@@164 $generated@@330 ($generated@@165 1)) $generated@@342 $generated@@332 $generated@@343))
))))))) (=> (= ($generated@@275 0) ($generated@@166 $generated@@330)) (forall (($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@344) $generated@@90) ($generated@@325 $generated@@344 $generated@@330)) ($generated@@321 $generated@@344 $generated@@331 $generated@@332 $generated@@333))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@329) $generated@@344 $generated@@331 $generated@@332 $generated@@333))
))))) (= ($generated@@87 ($generated@@88 $generated@@329) ($generated@@277 $generated@@330) $generated@@331 $generated@@332 $generated@@333)  (and (=> (< 0 ($generated@@166 $generated@@330)) (ite ($generated@@281 $generated@@331) (= $generated@@333 (+ $generated@@332 1)) (ite ($generated@@292 $generated@@331) (let (($generated@@345 ($generated@@322 $generated@@331)))
(let (($generated@@346 ($generated@@323 $generated@@331)))
(exists (($generated@@347 Int) ) (!  (and ($generated@@87 ($generated@@88 $generated@@329) ($generated@@164 $generated@@330 ($generated@@165 1)) $generated@@346 $generated@@332 $generated@@347) ($generated@@87 ($generated@@88 $generated@@329) ($generated@@164 $generated@@330 ($generated@@165 1)) $generated@@345 $generated@@347 $generated@@333))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@329) ($generated@@164 $generated@@330 ($generated@@165 1)) $generated@@345 $generated@@347 $generated@@333))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@329) ($generated@@164 $generated@@330 ($generated@@165 1)) $generated@@346 $generated@@332 $generated@@347))
)))) (let (($generated@@348 ($generated@@324 $generated@@331)))
 (or (= $generated@@332 $generated@@333) (exists (($generated@@349 Int) ) (!  (and ($generated@@87 ($generated@@88 $generated@@329) ($generated@@164 $generated@@330 ($generated@@165 1)) $generated@@348 $generated@@332 $generated@@349) ($generated@@87 ($generated@@88 $generated@@329) ($generated@@164 $generated@@330 ($generated@@165 1)) $generated@@331 $generated@@349 $generated@@333))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@329) ($generated@@164 $generated@@330 ($generated@@165 1)) $generated@@331 $generated@@349 $generated@@333))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@329) ($generated@@164 $generated@@330 ($generated@@165 1)) $generated@@348 $generated@@332 $generated@@349))
))))))) (=> (= ($generated@@275 0) ($generated@@166 $generated@@330)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@90) (and ($generated@@325 $generated@@350 $generated@@330) ($generated@@87 ($generated@@88 $generated@@329) $generated@@350 $generated@@331 $generated@@332 $generated@@333)))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@329) $generated@@350 $generated@@331 $generated@@332 $generated@@333))
)))))))
 :weight 3
 :pattern ( ($generated@@87 ($generated@@88 $generated@@329) ($generated@@277 $generated@@330) $generated@@331 $generated@@332 $generated@@333))
))))
(assert (forall (($generated@@353 T@T) ) (! (= (type ($generated@@352 $generated@@353)) ($generated@@99 $generated@@353 $generated@@2))
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@102 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@99 $generated@@355 $generated@@2)) (and (= (= ($generated@@351 $generated@@354) 0) (= $generated@@354 ($generated@@352 $generated@@355))) (=> (not (= ($generated@@351 $generated@@354) 0)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@355) (< 0 ($generated ($generated@@104 $generated@@354 $generated@@356))))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert  (and (and (and (and (forall (($generated@@362 T@T) ($generated@@363 T@T) ) (= ($generated@@1 ($generated@@359 $generated@@362 $generated@@363)) 19)) (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (! (= ($generated@@360 ($generated@@359 $generated@@364 $generated@@365)) $generated@@364)
 :pattern ( ($generated@@359 $generated@@364 $generated@@365))
))) (forall (($generated@@366 T@T) ($generated@@367 T@T) ) (! (= ($generated@@361 ($generated@@359 $generated@@366 $generated@@367)) $generated@@367)
 :pattern ( ($generated@@359 $generated@@366 $generated@@367))
))) (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@360 (type $generated@@368))))
(= (type ($generated@@357 $generated@@368)) ($generated@@99 $generated@@369 $generated@@4)))
 :pattern ( ($generated@@357 $generated@@368))
))) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= (type ($generated@@358 $generated@@370 $generated@@371)) ($generated@@359 $generated@@370 $generated@@371))
 :pattern ( ($generated@@358 $generated@@370 $generated@@371))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@T) ) (! (let (($generated@@374 (type $generated@@372)))
 (not ($generated@@0 ($generated@@104 ($generated@@357 ($generated@@358 $generated@@374 $generated@@373)) $generated@@372))))
 :pattern ( (let (($generated@@374 (type $generated@@372)))
($generated@@104 ($generated@@357 ($generated@@358 $generated@@374 $generated@@373)) $generated@@372)))
)))
(assert  (and (and (and (and (forall (($generated@@380 T@T) ($generated@@381 T@T) ) (= ($generated@@1 ($generated@@377 $generated@@380 $generated@@381)) 20)) (forall (($generated@@382 T@T) ($generated@@383 T@T) ) (! (= ($generated@@378 ($generated@@377 $generated@@382 $generated@@383)) $generated@@382)
 :pattern ( ($generated@@377 $generated@@382 $generated@@383))
))) (forall (($generated@@384 T@T) ($generated@@385 T@T) ) (! (= ($generated@@379 ($generated@@377 $generated@@384 $generated@@385)) $generated@@385)
 :pattern ( ($generated@@377 $generated@@384 $generated@@385))
))) (forall (($generated@@386 T@U) ) (! (let (($generated@@387 ($generated@@378 (type $generated@@386))))
(= (type ($generated@@375 $generated@@386)) ($generated@@99 $generated@@387 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@386))
))) (forall (($generated@@388 T@T) ($generated@@389 T@T) ) (! (= (type ($generated@@376 $generated@@388 $generated@@389)) ($generated@@377 $generated@@388 $generated@@389))
 :pattern ( ($generated@@376 $generated@@388 $generated@@389))
))))
(assert (forall (($generated@@390 T@U) ($generated@@391 T@T) ) (! (let (($generated@@392 (type $generated@@390)))
 (not ($generated@@0 ($generated@@104 ($generated@@375 ($generated@@376 $generated@@392 $generated@@391)) $generated@@390))))
 :pattern ( (let (($generated@@392 (type $generated@@390)))
($generated@@104 ($generated@@375 ($generated@@376 $generated@@392 $generated@@391)) $generated@@390)))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@394) $generated@@90) (= (type $generated@@395) $generated@@90)) (and ($generated@@393 $generated@@395) (<= ($generated@@166 $generated@@395) ($generated@@166 $generated@@394)))) (and (= ($generated@@393 ($generated@@164 $generated@@394 $generated@@395)) ($generated@@393 $generated@@394)) (= ($generated@@166 ($generated@@164 $generated@@394 $generated@@395)) (- ($generated@@166 $generated@@394) ($generated@@166 $generated@@395)))))
 :pattern ( ($generated@@164 $generated@@394 $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) $generated@@89)
 :pattern ( ($generated@@396 $generated@@398))
)) (= (type $generated@@397) $generated@@89)))
(assert (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 Int) ($generated@@403 Int) ) (!  (=> (and (and (= (type $generated@@399) $generated@@89) (= (type $generated@@400) $generated@@90)) (= (type $generated@@401) $generated@@82)) (= ($generated@@87 $generated@@399 $generated@@400 $generated@@401 $generated@@402 $generated@@403) ($generated@@87 $generated@@397 $generated@@400 $generated@@401 $generated@@402 $generated@@403)))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@399) $generated@@400 $generated@@401 $generated@@402 $generated@@403))
)))
(assert (forall (($generated@@404 Int) ) (!  (=> (<= 0 $generated@@404) (and ($generated@@393 ($generated@@165 $generated@@404)) (= ($generated@@166 ($generated@@165 $generated@@404)) $generated@@404)))
 :pattern ( ($generated@@165 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@102 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@99 $generated@@406 $generated@@2)) (= ($generated@@191 $generated@@405) (forall (($generated@@407 T@U) ) (!  (=> (= (type $generated@@407) $generated@@406) (and (<= 0 ($generated ($generated@@104 $generated@@405 $generated@@407))) (<= ($generated ($generated@@104 $generated@@405 $generated@@407)) ($generated@@351 $generated@@405))))
 :pattern ( ($generated@@104 $generated@@405 $generated@@407))
)))))
 :pattern ( ($generated@@191 $generated@@405))
)))
(assert (forall (($generated@@409 T@T) ($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@409 $generated@@410)) $generated@@409)
 :pattern ( ($generated@@408 $generated@@409 $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@90) ($generated@@252 $generated@@411 $generated@@81)) (and (= ($generated@@315 ($generated@@408 $generated@@82 $generated@@411)) $generated@@411) ($generated@@79 ($generated@@408 $generated@@82 $generated@@411) $generated@@81)))
 :pattern ( ($generated@@252 $generated@@411 $generated@@81))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (= (type $generated@@412) $generated@@82) (= ($generated@@79 ($generated@@311 $generated@@412) $generated@@81) ($generated@@79 $generated@@412 $generated@@81)))
 :pattern ( ($generated@@79 ($generated@@311 $generated@@412) $generated@@81))
)))
(assert  (=> (<= 2 $generated@@320) (forall (($generated@@413 T@U) ($generated@@414 T@U) ($generated@@415 Int) ($generated@@416 Int) ($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ) (!  (=> (and (and (and (and (and (and (= (type $generated@@413) $generated@@89) (= (type $generated@@414) $generated@@82)) (= (type $generated@@417) $generated@@90)) (= (type $generated@@418) $generated@@90)) (= (type $generated@@419) $generated@@90)) ($generated@@155 $generated@@417 $generated@@418)) ($generated@@87 $generated@@413 $generated@@417 $generated@@414 $generated@@415 $generated@@416)) ($generated@@87 $generated@@413 $generated@@418 $generated@@414 $generated@@415 $generated@@416))
 :pattern ( ($generated@@87 $generated@@413 $generated@@417 $generated@@414 $generated@@415 $generated@@416) ($generated@@325 $generated@@417 $generated@@419) ($generated@@325 $generated@@418 $generated@@419))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (and (= (type $generated@@420) $generated@@82) (= (type $generated@@421) $generated@@82)) (and ($generated@@294 $generated@@420) ($generated@@294 $generated@@421))) (= ($generated@@262 $generated@@420 $generated@@421) ($generated@@262 ($generated@@324 $generated@@420) ($generated@@324 $generated@@421))))
 :pattern ( ($generated@@262 $generated@@420 $generated@@421) ($generated@@294 $generated@@420))
 :pattern ( ($generated@@262 $generated@@420 $generated@@421) ($generated@@294 $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@361 (type $generated@@422))))
(let (($generated@@424 ($generated@@360 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@359 $generated@@424 $generated@@423)) (or (= $generated@@422 ($generated@@358 $generated@@424 $generated@@423)) (exists (($generated@@425 T@U) ) (!  (and (= (type $generated@@425) $generated@@424) ($generated@@0 ($generated@@104 ($generated@@357 $generated@@422) $generated@@425)))
 :no-pattern (type $generated@@425)
 :no-pattern ($generated $generated@@425)
 :no-pattern ($generated@@0 $generated@@425)
))))))
 :pattern ( ($generated@@357 $generated@@422))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@361 (type $generated@@427))))
(= (type ($generated@@426 $generated@@427)) ($generated@@99 $generated@@428 $generated@@4)))
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@361 (type $generated@@429))))
(let (($generated@@431 ($generated@@360 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@359 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@358 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ) (!  (and (= (type $generated@@432) $generated@@430) ($generated@@0 ($generated@@104 ($generated@@426 $generated@@429) $generated@@432)))
 :no-pattern (type $generated@@432)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
))))))
 :pattern ( ($generated@@426 $generated@@429))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@379 (type $generated@@433))))
(let (($generated@@435 ($generated@@378 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@377 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@376 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ) (!  (and (= (type $generated@@436) $generated@@435) ($generated@@0 ($generated@@104 ($generated@@375 $generated@@433) $generated@@436)))
 :no-pattern (type $generated@@436)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
))))))
 :pattern ( ($generated@@375 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@379 (type $generated@@438))))
(= (type ($generated@@437 $generated@@438)) ($generated@@99 $generated@@439 $generated@@4)))
 :pattern ( ($generated@@437 $generated@@438))
)))
(assert (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@379 (type $generated@@440))))
(let (($generated@@442 ($generated@@378 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@377 $generated@@442 $generated@@441)) (or (= $generated@@440 ($generated@@376 $generated@@442 $generated@@441)) (exists (($generated@@443 T@U) ) (!  (and (= (type $generated@@443) $generated@@441) ($generated@@0 ($generated@@104 ($generated@@437 $generated@@440) $generated@@443)))
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@437 $generated@@440))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@444) ($generated@@99 $generated@@90 $generated@@2)) (= (type $generated@@445) $generated@@69)) (= ($generated@@79 $generated@@444 ($generated@@190 $generated@@445)) (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@90) (< 0 ($generated ($generated@@104 $generated@@444 $generated@@446)))) ($generated@@252 $generated@@446 $generated@@445))
 :pattern ( ($generated@@104 $generated@@444 $generated@@446))
))))
 :pattern ( ($generated@@79 $generated@@444 ($generated@@190 $generated@@445)))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@90) (= (type $generated@@448) $generated@@90)) (or (or ($generated@@155 $generated@@447 $generated@@448) (= $generated@@447 $generated@@448)) ($generated@@155 $generated@@448 $generated@@447)))
 :pattern ( ($generated@@155 $generated@@447 $generated@@448) ($generated@@155 $generated@@448 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (= (type $generated@@449) ($generated@@99 $generated@@90 $generated@@4)) (= (type $generated@@450) $generated@@69)) (= (type $generated@@451) ($generated@@99 $generated@@100 $generated@@101))) (= ($generated@@97 $generated@@449 ($generated@@265 $generated@@450) $generated@@451) (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@90) ($generated@@0 ($generated@@104 $generated@@449 $generated@@452))) ($generated@@284 $generated@@452 $generated@@450 $generated@@451))
 :pattern ( ($generated@@104 $generated@@449 $generated@@452))
))))
 :pattern ( ($generated@@97 $generated@@449 ($generated@@265 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (= (type $generated@@453) ($generated@@99 $generated@@90 $generated@@4)) (= (type $generated@@454) $generated@@69)) (= (type $generated@@455) ($generated@@99 $generated@@100 $generated@@101))) (= ($generated@@97 $generated@@453 ($generated@@270 $generated@@454) $generated@@455) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@90) ($generated@@0 ($generated@@104 $generated@@453 $generated@@456))) ($generated@@284 $generated@@456 $generated@@454 $generated@@455))
 :pattern ( ($generated@@104 $generated@@453 $generated@@456))
))))
 :pattern ( ($generated@@97 $generated@@453 ($generated@@270 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 (type $generated@@457)))
(= ($generated ($generated@@104 ($generated@@352 $generated@@458) $generated@@457)) 0))
 :pattern ( (let (($generated@@458 (type $generated@@457)))
($generated@@104 ($generated@@352 $generated@@458) $generated@@457)))
)))
(assert  (and (forall (($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@461)) ($generated@@99 $generated@@90 $generated@@4))
 :pattern ( ($generated@@459 $generated@@461))
)) (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@361 (type $generated@@462))))
(let (($generated@@464 ($generated@@360 (type $generated@@462))))
(= (type ($generated@@460 $generated@@462)) ($generated@@99 $generated@@464 $generated@@463))))
 :pattern ( ($generated@@460 $generated@@462))
))))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) ($generated@@359 $generated@@90 $generated@@90)) (= (type $generated@@466) $generated@@90)) (= ($generated@@0 ($generated@@104 ($generated@@459 $generated@@465) $generated@@466))  (and ($generated@@0 ($generated@@104 ($generated@@357 $generated@@465) ($generated@@181 ($generated@@408 $generated@@82 $generated@@466)))) (= ($generated@@104 ($generated@@460 $generated@@465) ($generated@@181 ($generated@@408 $generated@@82 $generated@@466))) ($generated@@182 ($generated@@408 $generated@@82 $generated@@466))))))
 :pattern ( ($generated@@104 ($generated@@459 $generated@@465) $generated@@466))
)))
(assert  (and (forall (($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@469)) ($generated@@99 $generated@@90 $generated@@4))
 :pattern ( ($generated@@467 $generated@@469))
)) (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@379 (type $generated@@470))))
(let (($generated@@472 ($generated@@378 (type $generated@@470))))
(= (type ($generated@@468 $generated@@470)) ($generated@@99 $generated@@472 $generated@@471))))
 :pattern ( ($generated@@468 $generated@@470))
))))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) ($generated@@377 $generated@@90 $generated@@90)) (= (type $generated@@474) $generated@@90)) (= ($generated@@0 ($generated@@104 ($generated@@467 $generated@@473) $generated@@474))  (and ($generated@@0 ($generated@@104 ($generated@@375 $generated@@473) ($generated@@181 ($generated@@408 $generated@@82 $generated@@474)))) (= ($generated@@104 ($generated@@468 $generated@@473) ($generated@@181 ($generated@@408 $generated@@82 $generated@@474))) ($generated@@182 ($generated@@408 $generated@@82 $generated@@474))))))
 :pattern ( ($generated@@104 ($generated@@467 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (! (let (($generated@@477 (type $generated@@476)))
(let (($generated@@478 ($generated@@360 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@359 $generated@@478 $generated@@477)) (= ($generated@@0 ($generated@@104 ($generated@@426 $generated@@475) $generated@@476)) (exists (($generated@@479 T@U) ) (!  (and (= (type $generated@@479) $generated@@478) (and ($generated@@0 ($generated@@104 ($generated@@357 $generated@@475) $generated@@479)) (= $generated@@476 ($generated@@104 ($generated@@460 $generated@@475) $generated@@479))))
 :pattern ( ($generated@@104 ($generated@@357 $generated@@475) $generated@@479))
 :pattern ( ($generated@@104 ($generated@@460 $generated@@475) $generated@@479))
))))))
 :pattern ( ($generated@@104 ($generated@@426 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (! (let (($generated@@482 (type $generated@@481)))
(let (($generated@@483 ($generated@@378 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@377 $generated@@483 $generated@@482)) (= ($generated@@0 ($generated@@104 ($generated@@437 $generated@@480) $generated@@481)) (exists (($generated@@484 T@U) ) (!  (and (= (type $generated@@484) $generated@@483) (and ($generated@@0 ($generated@@104 ($generated@@375 $generated@@480) $generated@@484)) (= $generated@@481 ($generated@@104 ($generated@@468 $generated@@480) $generated@@484))))
 :pattern ( ($generated@@104 ($generated@@375 $generated@@480) $generated@@484))
 :pattern ( ($generated@@104 ($generated@@468 $generated@@480) $generated@@484))
))))))
 :pattern ( ($generated@@104 ($generated@@437 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@486 $generated@@487)) $generated@@69)
 :pattern ( ($generated@@485 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (and (= (type $generated@@488) ($generated@@359 $generated@@90 $generated@@90)) (= (type $generated@@489) $generated@@69)) (= (type $generated@@490) $generated@@69)) (= (type $generated@@491) ($generated@@99 $generated@@100 $generated@@101))) (= ($generated@@97 $generated@@488 ($generated@@485 $generated@@489 $generated@@490) $generated@@491) (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@90) ($generated@@0 ($generated@@104 ($generated@@357 $generated@@488) $generated@@492))) (and ($generated@@284 ($generated@@104 ($generated@@460 $generated@@488) $generated@@492) $generated@@490 $generated@@491) ($generated@@284 $generated@@492 $generated@@489 $generated@@491)))
 :pattern ( ($generated@@104 ($generated@@460 $generated@@488) $generated@@492))
 :pattern ( ($generated@@104 ($generated@@357 $generated@@488) $generated@@492))
))))
 :pattern ( ($generated@@97 $generated@@488 ($generated@@485 $generated@@489 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (! (= (type ($generated@@493 $generated@@494 $generated@@495)) $generated@@69)
 :pattern ( ($generated@@493 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (and (= (type $generated@@496) ($generated@@377 $generated@@90 $generated@@90)) (= (type $generated@@497) $generated@@69)) (= (type $generated@@498) $generated@@69)) (= (type $generated@@499) ($generated@@99 $generated@@100 $generated@@101))) (= ($generated@@97 $generated@@496 ($generated@@493 $generated@@497 $generated@@498) $generated@@499) (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@90) ($generated@@0 ($generated@@104 ($generated@@375 $generated@@496) $generated@@500))) (and ($generated@@284 ($generated@@104 ($generated@@468 $generated@@496) $generated@@500) $generated@@498 $generated@@499) ($generated@@284 $generated@@500 $generated@@497 $generated@@499)))
 :pattern ( ($generated@@104 ($generated@@468 $generated@@496) $generated@@500))
 :pattern ( ($generated@@104 ($generated@@375 $generated@@496) $generated@@500))
))))
 :pattern ( ($generated@@97 $generated@@496 ($generated@@493 $generated@@497 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@90) (= (type $generated@@502) $generated@@90)) (= ($generated@@325 $generated@@501 $generated@@502) ($generated@@155 $generated@@501 $generated@@502)))
 :pattern ( ($generated@@325 $generated@@501 $generated@@502))
)))
(assert  (=> (<= 2 $generated@@320) (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ($generated@@506 Int) ($generated@@507 Int) ) (!  (=> (and (and (and (= (type $generated@@503) $generated@@89) (= (type $generated@@504) $generated@@90)) (= (type $generated@@505) $generated@@82)) (or ($generated@@321 $generated@@504 $generated@@505 $generated@@506 $generated@@507) (and (not (= 2 $generated@@320)) ($generated@@79 $generated@@505 $generated@@81)))) true)
 :pattern ( ($generated@@87 $generated@@503 $generated@@504 $generated@@505 $generated@@506 $generated@@507))
))))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (= (type $generated@@508) $generated@@82) (= (type $generated@@509) ($generated@@99 $generated@@100 $generated@@101))) ($generated@@160 $generated@@509)) (= ($generated@@97 ($generated@@311 $generated@@508) $generated@@81 $generated@@509) ($generated@@97 $generated@@508 $generated@@81 $generated@@509)))
 :pattern ( ($generated@@97 ($generated@@311 $generated@@508) $generated@@81 $generated@@509))
)))
(assert (forall (($generated@@511 T@T) ) (! (= (type ($generated@@510 $generated@@511)) ($generated@@99 $generated@@511 $generated@@4))
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (! (let (($generated@@513 ($generated@@379 (type $generated@@512))))
(let (($generated@@514 ($generated@@378 (type $generated@@512))))
 (=> (= (type $generated@@512) ($generated@@377 $generated@@514 $generated@@513)) (= (= $generated@@512 ($generated@@376 $generated@@514 $generated@@513)) (= ($generated@@375 $generated@@512) ($generated@@510 $generated@@514))))))
 :pattern ( ($generated@@375 $generated@@512))
)))
(assert (forall (($generated@@515 T@U) ) (! (let (($generated@@516 ($generated@@379 (type $generated@@515))))
(let (($generated@@517 ($generated@@378 (type $generated@@515))))
 (=> (= (type $generated@@515) ($generated@@377 $generated@@517 $generated@@516)) (= (= $generated@@515 ($generated@@376 $generated@@517 $generated@@516)) (= ($generated@@437 $generated@@515) ($generated@@510 $generated@@516))))))
 :pattern ( ($generated@@437 $generated@@515))
)))
(assert (forall (($generated@@518 T@U) ) (! (let (($generated@@519 ($generated@@379 (type $generated@@518))))
(let (($generated@@520 ($generated@@378 (type $generated@@518))))
 (=> (= (type $generated@@518) ($generated@@377 $generated@@520 $generated@@519)) (= (= $generated@@518 ($generated@@376 $generated@@520 $generated@@519)) (= ($generated@@467 $generated@@518) ($generated@@510 $generated@@90))))))
 :pattern ( ($generated@@467 $generated@@518))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 ($generated@@361 (type $generated@@521))))
(let (($generated@@523 ($generated@@360 (type $generated@@521))))
 (=> (= (type $generated@@521) ($generated@@359 $generated@@523 $generated@@522)) (or (= $generated@@521 ($generated@@358 $generated@@523 $generated@@522)) (exists (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (and (and (= (type $generated@@524) $generated@@90) (= (type $generated@@525) $generated@@90)) ($generated@@0 ($generated@@104 ($generated@@459 $generated@@521) ($generated@@315 ($generated@@251 $generated@@524 $generated@@525)))))
 :no-pattern (type $generated@@524)
 :no-pattern (type $generated@@525)
 :no-pattern ($generated $generated@@524)
 :no-pattern ($generated@@0 $generated@@524)
 :no-pattern ($generated $generated@@525)
 :no-pattern ($generated@@0 $generated@@525)
))))))
 :pattern ( ($generated@@459 $generated@@521))
)))
(assert (forall (($generated@@526 T@U) ) (! (let (($generated@@527 ($generated@@379 (type $generated@@526))))
(let (($generated@@528 ($generated@@378 (type $generated@@526))))
 (=> (= (type $generated@@526) ($generated@@377 $generated@@528 $generated@@527)) (or (= $generated@@526 ($generated@@376 $generated@@528 $generated@@527)) (exists (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (and (and (= (type $generated@@529) $generated@@90) (= (type $generated@@530) $generated@@90)) ($generated@@0 ($generated@@104 ($generated@@467 $generated@@526) ($generated@@315 ($generated@@251 $generated@@529 $generated@@530)))))
 :no-pattern (type $generated@@529)
 :no-pattern (type $generated@@530)
 :no-pattern ($generated $generated@@529)
 :no-pattern ($generated@@0 $generated@@529)
 :no-pattern ($generated $generated@@530)
 :no-pattern ($generated@@0 $generated@@530)
))))))
 :pattern ( ($generated@@467 $generated@@526))
)))
(assert  (=> (<= 2 $generated@@320) (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 Int) ($generated@@534 Int) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@89) (= (type $generated@@532) $generated@@82)) (= (type $generated@@535) $generated@@90)) (and ($generated@@79 $generated@@532 $generated@@81) (= $generated@@535 ($generated@@165 0)))) (not ($generated@@87 $generated@@531 $generated@@535 $generated@@532 $generated@@533 $generated@@534)))
 :pattern ( ($generated@@87 $generated@@531 $generated@@535 $generated@@532 $generated@@533 $generated@@534))
))))
(assert (forall (($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@90) ($generated@@252 $generated@@536 $generated@@46)) (and (= ($generated@@315 ($generated@@408 $generated@@2 $generated@@536)) $generated@@536) ($generated@@79 ($generated@@408 $generated@@2 $generated@@536) $generated@@46)))
 :pattern ( ($generated@@252 $generated@@536 $generated@@46))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@90) ($generated@@252 $generated@@537 $generated@@47)) (and (= ($generated@@315 ($generated@@408 $generated@@3 $generated@@537)) $generated@@537) ($generated@@79 ($generated@@408 $generated@@3 $generated@@537) $generated@@47)))
 :pattern ( ($generated@@252 $generated@@537 $generated@@47))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@90) ($generated@@252 $generated@@538 $generated@@44)) (and (= ($generated@@315 ($generated@@408 $generated@@4 $generated@@538)) $generated@@538) ($generated@@79 ($generated@@408 $generated@@4 $generated@@538) $generated@@44)))
 :pattern ( ($generated@@252 $generated@@538 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@539) 21))
(assert (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@90) ($generated@@252 $generated@@540 $generated@@45)) (and (= ($generated@@315 ($generated@@408 $generated@@539 $generated@@540)) $generated@@540) ($generated@@79 ($generated@@408 $generated@@539 $generated@@540) $generated@@45)))
 :pattern ( ($generated@@252 $generated@@540 $generated@@45))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@541) $generated@@82) (= (type $generated@@542) $generated@@82)) (and ($generated@@292 $generated@@541) ($generated@@292 $generated@@542))) (= ($generated@@262 $generated@@541 $generated@@542)  (and ($generated@@262 ($generated@@323 $generated@@541) ($generated@@323 $generated@@542)) ($generated@@262 ($generated@@322 $generated@@541) ($generated@@322 $generated@@542)))))
 :pattern ( ($generated@@262 $generated@@541 $generated@@542) ($generated@@292 $generated@@541))
 :pattern ( ($generated@@262 $generated@@541 $generated@@542) ($generated@@292 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@69) (= ($generated@@252 ($generated@@315 $generated@@543) $generated@@544) ($generated@@79 $generated@@543 $generated@@544)))
 :pattern ( ($generated@@252 ($generated@@315 $generated@@543) $generated@@544))
)))
(assert  (=> (<= 2 $generated@@320) (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 Int) ($generated@@549 Int) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@89) (= (type $generated@@546) $generated@@90)) (= (type $generated@@547) $generated@@82)) (or ($generated@@321 $generated@@546 $generated@@547 $generated@@548 $generated@@549) (and (not (= 2 $generated@@320)) ($generated@@79 $generated@@547 $generated@@81)))) (and (and (=> (< 0 ($generated@@166 $generated@@546)) (=> (not ($generated@@281 $generated@@547)) (and (=> ($generated@@292 $generated@@547) (let (($generated@@550 ($generated@@322 $generated@@547)))
(let (($generated@@551 ($generated@@323 $generated@@547)))
(forall (($generated@@552 Int) ) (!  (and ($generated@@321 ($generated@@164 $generated@@546 ($generated@@165 1)) $generated@@551 $generated@@548 $generated@@552) (=> ($generated@@87 $generated@@545 ($generated@@164 $generated@@546 ($generated@@165 1)) $generated@@551 $generated@@548 $generated@@552) ($generated@@321 ($generated@@164 $generated@@546 ($generated@@165 1)) $generated@@550 $generated@@552 $generated@@549)))
 :pattern ( ($generated@@87 $generated@@545 ($generated@@164 $generated@@546 ($generated@@165 1)) $generated@@550 $generated@@552 $generated@@549))
 :pattern ( ($generated@@87 $generated@@545 ($generated@@164 $generated@@546 ($generated@@165 1)) $generated@@551 $generated@@548 $generated@@552))
))))) (=> (not ($generated@@292 $generated@@547)) (let (($generated@@553 ($generated@@324 $generated@@547)))
 (=> (not (= $generated@@548 $generated@@549)) (forall (($generated@@554 Int) ) (!  (and ($generated@@321 ($generated@@164 $generated@@546 ($generated@@165 1)) $generated@@553 $generated@@548 $generated@@554) (=> ($generated@@87 $generated@@545 ($generated@@164 $generated@@546 ($generated@@165 1)) $generated@@553 $generated@@548 $generated@@554) ($generated@@321 ($generated@@164 $generated@@546 ($generated@@165 1)) $generated@@547 $generated@@554 $generated@@549)))
 :pattern ( ($generated@@87 $generated@@545 ($generated@@164 $generated@@546 ($generated@@165 1)) $generated@@547 $generated@@554 $generated@@549))
 :pattern ( ($generated@@87 $generated@@545 ($generated@@164 $generated@@546 ($generated@@165 1)) $generated@@553 $generated@@548 $generated@@554))
)))))))) (=> (=> (< 0 ($generated@@166 $generated@@546)) (ite ($generated@@281 $generated@@547) (= $generated@@549 (+ $generated@@548 1)) (ite ($generated@@292 $generated@@547) (let (($generated@@555 ($generated@@322 $generated@@547)))
(let (($generated@@556 ($generated@@323 $generated@@547)))
(exists (($generated@@557 Int) ) (!  (and ($generated@@87 $generated@@545 ($generated@@164 $generated@@546 ($generated@@165 1)) $generated@@556 $generated@@548 $generated@@557) ($generated@@87 $generated@@545 ($generated@@164 $generated@@546 ($generated@@165 1)) $generated@@555 $generated@@557 $generated@@549))
 :pattern ( ($generated@@87 $generated@@545 ($generated@@164 $generated@@546 ($generated@@165 1)) $generated@@555 $generated@@557 $generated@@549))
 :pattern ( ($generated@@87 $generated@@545 ($generated@@164 $generated@@546 ($generated@@165 1)) $generated@@556 $generated@@548 $generated@@557))
)))) (let (($generated@@558 ($generated@@324 $generated@@547)))
 (or (= $generated@@548 $generated@@549) (exists (($generated@@559 Int) ) (!  (and ($generated@@87 $generated@@545 ($generated@@164 $generated@@546 ($generated@@165 1)) $generated@@558 $generated@@548 $generated@@559) ($generated@@87 $generated@@545 ($generated@@164 $generated@@546 ($generated@@165 1)) $generated@@547 $generated@@559 $generated@@549))
 :pattern ( ($generated@@87 $generated@@545 ($generated@@164 $generated@@546 ($generated@@165 1)) $generated@@547 $generated@@559 $generated@@549))
 :pattern ( ($generated@@87 $generated@@545 ($generated@@164 $generated@@546 ($generated@@165 1)) $generated@@558 $generated@@548 $generated@@559))
))))))) (=> (= ($generated@@275 0) ($generated@@166 $generated@@546)) (forall (($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@90) ($generated@@325 $generated@@560 $generated@@546)) ($generated@@321 $generated@@560 $generated@@547 $generated@@548 $generated@@549))
 :pattern ( ($generated@@87 $generated@@545 $generated@@560 $generated@@547 $generated@@548 $generated@@549))
))))) (= ($generated@@87 ($generated@@88 $generated@@545) $generated@@546 $generated@@547 $generated@@548 $generated@@549)  (and (=> (< 0 ($generated@@166 $generated@@546)) (ite ($generated@@281 $generated@@547) (= $generated@@549 (+ $generated@@548 1)) (ite ($generated@@292 $generated@@547) (let (($generated@@561 ($generated@@322 $generated@@547)))
(let (($generated@@562 ($generated@@323 $generated@@547)))
(exists (($generated@@563 Int) ) (!  (and ($generated@@87 $generated@@545 ($generated@@164 $generated@@546 ($generated@@165 1)) $generated@@562 $generated@@548 $generated@@563) ($generated@@87 $generated@@545 ($generated@@164 $generated@@546 ($generated@@165 1)) $generated@@561 $generated@@563 $generated@@549))
 :pattern ( ($generated@@87 $generated@@545 ($generated@@164 $generated@@546 ($generated@@165 1)) $generated@@561 $generated@@563 $generated@@549))
 :pattern ( ($generated@@87 $generated@@545 ($generated@@164 $generated@@546 ($generated@@165 1)) $generated@@562 $generated@@548 $generated@@563))
)))) (let (($generated@@564 ($generated@@324 $generated@@547)))
 (or (= $generated@@548 $generated@@549) (exists (($generated@@565 Int) ) (!  (and ($generated@@87 $generated@@545 ($generated@@164 $generated@@546 ($generated@@165 1)) $generated@@564 $generated@@548 $generated@@565) ($generated@@87 $generated@@545 ($generated@@164 $generated@@546 ($generated@@165 1)) $generated@@547 $generated@@565 $generated@@549))
 :pattern ( ($generated@@87 $generated@@545 ($generated@@164 $generated@@546 ($generated@@165 1)) $generated@@547 $generated@@565 $generated@@549))
 :pattern ( ($generated@@87 $generated@@545 ($generated@@164 $generated@@546 ($generated@@165 1)) $generated@@564 $generated@@548 $generated@@565))
))))))) (=> (= ($generated@@275 0) ($generated@@166 $generated@@546)) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@90) (and ($generated@@325 $generated@@566 $generated@@546) ($generated@@87 $generated@@545 $generated@@566 $generated@@547 $generated@@548 $generated@@549)))
 :pattern ( ($generated@@87 $generated@@545 $generated@@566 $generated@@547 $generated@@548 $generated@@549))
)))))))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@545) $generated@@546 $generated@@547 $generated@@548 $generated@@549))
))))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@90) (<= 0 ($generated@@166 $generated@@567)))
 :pattern ( ($generated@@166 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@102 (type $generated@@568))))
 (=> (= (type $generated@@568) ($generated@@99 $generated@@569 $generated@@2)) (<= 0 ($generated@@351 $generated@@568))))
 :pattern ( ($generated@@351 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (let (($generated@@571 ($generated@@305 (type $generated@@570))))
 (=> (= (type $generated@@570) ($generated@@304 $generated@@571)) (<= 0 ($generated@@303 $generated@@570))))
 :pattern ( ($generated@@303 $generated@@570))
)))
(assert (forall (($generated@@573 T@U) ) (! (= (type ($generated@@572 $generated@@573)) $generated@@69)
 :pattern ( ($generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@69) (= (type $generated@@575) $generated@@69)) (= ($generated@@572 ($generated@@485 $generated@@574 $generated@@575)) $generated@@574))
 :pattern ( ($generated@@485 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ) (! (= (type ($generated@@576 $generated@@577)) $generated@@69)
 :pattern ( ($generated@@576 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@69) (= (type $generated@@579) $generated@@69)) (= ($generated@@576 ($generated@@485 $generated@@578 $generated@@579)) $generated@@579))
 :pattern ( ($generated@@485 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@69) (= (type $generated@@581) $generated@@69)) (= ($generated@@77 ($generated@@485 $generated@@580 $generated@@581)) $generated@@58))
 :pattern ( ($generated@@485 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@69)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@69) (= (type $generated@@585) $generated@@69)) (= ($generated@@582 ($generated@@493 $generated@@584 $generated@@585)) $generated@@584))
 :pattern ( ($generated@@493 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ) (! (= (type ($generated@@586 $generated@@587)) $generated@@69)
 :pattern ( ($generated@@586 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@69) (= (type $generated@@589) $generated@@69)) (= ($generated@@586 ($generated@@493 $generated@@588 $generated@@589)) $generated@@589))
 :pattern ( ($generated@@493 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@69) (= (type $generated@@591) $generated@@69)) (= ($generated@@77 ($generated@@493 $generated@@590 $generated@@591)) $generated@@59))
 :pattern ( ($generated@@493 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@90) (= (type $generated@@593) $generated@@90)) (= ($generated@@187 ($generated@@251 $generated@@592 $generated@@593)) $generated@@61))
 :pattern ( ($generated@@251 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ) (! (= (type ($generated@@594 $generated@@595)) $generated@@69)
 :pattern ( ($generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@69) (= (type $generated@@597) $generated@@69)) (= ($generated@@594 ($generated@@174 $generated@@596 $generated@@597)) $generated@@596))
 :pattern ( ($generated@@174 $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ) (! (= (type ($generated@@598 $generated@@599)) $generated@@69)
 :pattern ( ($generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@69) (= (type $generated@@601) $generated@@69)) (= ($generated@@598 ($generated@@174 $generated@@600 $generated@@601)) $generated@@601))
 :pattern ( ($generated@@174 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@90) (= (type $generated@@603) $generated@@90)) (= ($generated@@181 ($generated@@251 $generated@@602 $generated@@603)) $generated@@602))
 :pattern ( ($generated@@251 $generated@@602 $generated@@603))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@90) (= (type $generated@@605) $generated@@90)) (= ($generated@@182 ($generated@@251 $generated@@604 $generated@@605)) $generated@@605))
 :pattern ( ($generated@@251 $generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@82) (= (type $generated@@607) $generated@@82)) (= ($generated@@187 ($generated@@80 $generated@@606 $generated@@607)) $generated@@65))
 :pattern ( ($generated@@80 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@82) (= (type $generated@@609) $generated@@82)) (= ($generated@@323 ($generated@@80 $generated@@608 $generated@@609)) $generated@@608))
 :pattern ( ($generated@@80 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@82) (= (type $generated@@611) $generated@@82)) (= ($generated@@322 ($generated@@80 $generated@@610 $generated@@611)) $generated@@611))
 :pattern ( ($generated@@80 $generated@@610 $generated@@611))
)))
(assert  (and (forall (($generated@@614 T@U) ) (! (= (type ($generated@@612 $generated@@614)) $generated@@69)
 :pattern ( ($generated@@612 $generated@@614))
)) (forall (($generated@@615 T@U) ($generated@@616 Int) ) (! (let (($generated@@617 ($generated@@305 (type $generated@@615))))
(= (type ($generated@@613 $generated@@615 $generated@@616)) $generated@@617))
 :pattern ( ($generated@@613 $generated@@615 $generated@@616))
))))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@618) ($generated@@304 $generated@@90)) (= (type $generated@@619) $generated@@69)) (= (type $generated@@620) ($generated@@99 $generated@@100 $generated@@101))) (= ($generated@@97 $generated@@618 ($generated@@612 $generated@@619) $generated@@620) (forall (($generated@@621 Int) ) (!  (=> (and (<= 0 $generated@@621) (< $generated@@621 ($generated@@303 $generated@@618))) ($generated@@284 ($generated@@613 $generated@@618 $generated@@621) $generated@@619 $generated@@620))
 :pattern ( ($generated@@613 $generated@@618 $generated@@621))
))))
 :pattern ( ($generated@@97 $generated@@618 ($generated@@612 $generated@@619) $generated@@620))
)))
(assert (forall (($generated@@623 Int) ) (! (= ($generated@@622 ($generated@@98 $generated@@623)) $generated@@623)
 :pattern ( ($generated@@98 $generated@@623))
)))
(assert (forall (($generated@@625 T@U) ) (! (= (type ($generated@@624 $generated@@625)) $generated@@69)
 :pattern ( ($generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@69) (= ($generated@@624 ($generated@@265 $generated@@626)) $generated@@626))
 :pattern ( ($generated@@265 $generated@@626))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@69) (= ($generated@@77 ($generated@@265 $generated@@627)) $generated@@54))
 :pattern ( ($generated@@265 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ) (! (= (type ($generated@@628 $generated@@629)) $generated@@69)
 :pattern ( ($generated@@628 $generated@@629))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@69) (= ($generated@@628 ($generated@@270 $generated@@630)) $generated@@630))
 :pattern ( ($generated@@270 $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@69) (= ($generated@@77 ($generated@@270 $generated@@631)) $generated@@55))
 :pattern ( ($generated@@270 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ) (! (= (type ($generated@@632 $generated@@633)) $generated@@69)
 :pattern ( ($generated@@632 $generated@@633))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@69) (= ($generated@@632 ($generated@@190 $generated@@634)) $generated@@634))
 :pattern ( ($generated@@190 $generated@@634))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@69) (= ($generated@@77 ($generated@@190 $generated@@635)) $generated@@56))
 :pattern ( ($generated@@190 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ) (! (= (type ($generated@@636 $generated@@637)) $generated@@69)
 :pattern ( ($generated@@636 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@69) (= ($generated@@636 ($generated@@612 $generated@@638)) $generated@@638))
 :pattern ( ($generated@@612 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@69) (= ($generated@@77 ($generated@@612 $generated@@639)) $generated@@57))
 :pattern ( ($generated@@612 $generated@@639))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@82) (= ($generated@@187 ($generated@@311 $generated@@640)) $generated@@66))
 :pattern ( ($generated@@311 $generated@@640))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@82) (= ($generated@@324 ($generated@@311 $generated@@641)) $generated@@641))
 :pattern ( ($generated@@311 $generated@@641))
)))
(assert (forall (($generated@@642 T@U) ) (! (let (($generated@@643 (type $generated@@642)))
(= ($generated@@408 $generated@@643 ($generated@@315 $generated@@642)) $generated@@642))
 :pattern ( ($generated@@315 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (= (type $generated@@644) ($generated@@359 $generated@@90 $generated@@90)) (= (type $generated@@645) $generated@@69)) (= (type $generated@@646) $generated@@69)) (= ($generated@@79 $generated@@644 ($generated@@485 $generated@@645 $generated@@646)) (forall (($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@90) ($generated@@0 ($generated@@104 ($generated@@357 $generated@@644) $generated@@647))) (and ($generated@@252 ($generated@@104 ($generated@@460 $generated@@644) $generated@@647) $generated@@646) ($generated@@252 $generated@@647 $generated@@645)))
 :pattern ( ($generated@@104 ($generated@@460 $generated@@644) $generated@@647))
 :pattern ( ($generated@@104 ($generated@@357 $generated@@644) $generated@@647))
))))
 :pattern ( ($generated@@79 $generated@@644 ($generated@@485 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (= (type $generated@@648) ($generated@@377 $generated@@90 $generated@@90)) (= (type $generated@@649) $generated@@69)) (= (type $generated@@650) $generated@@69)) (= ($generated@@79 $generated@@648 ($generated@@493 $generated@@649 $generated@@650)) (forall (($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@90) ($generated@@0 ($generated@@104 ($generated@@375 $generated@@648) $generated@@651))) (and ($generated@@252 ($generated@@104 ($generated@@468 $generated@@648) $generated@@651) $generated@@650) ($generated@@252 $generated@@651 $generated@@649)))
 :pattern ( ($generated@@104 ($generated@@468 $generated@@648) $generated@@651))
 :pattern ( ($generated@@104 ($generated@@375 $generated@@648) $generated@@651))
))))
 :pattern ( ($generated@@79 $generated@@648 ($generated@@493 $generated@@649 $generated@@650)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@90) (= (type $generated@@653) $generated@@90)) (and (and (and (=> ($generated@@155 $generated@@652 $generated@@653) (not (= $generated@@652 $generated@@653))) (=> (and ($generated@@393 $generated@@652) (not ($generated@@393 $generated@@653))) ($generated@@155 $generated@@652 $generated@@653))) (=> (and ($generated@@393 $generated@@652) ($generated@@393 $generated@@653)) (= ($generated@@155 $generated@@652 $generated@@653) (< ($generated@@166 $generated@@652) ($generated@@166 $generated@@653))))) (=> (and ($generated@@155 $generated@@652 $generated@@653) ($generated@@393 $generated@@653)) ($generated@@393 $generated@@652))))
 :pattern ( ($generated@@155 $generated@@652 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@82) ($generated@@654 $generated@@655)) (or (or ($generated@@281 $generated@@655) ($generated@@292 $generated@@655)) ($generated@@294 $generated@@655)))
 :pattern ( ($generated@@654 $generated@@655))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) $generated@@90) (= (type $generated@@659) $generated@@90)) (< ($generated@@656 $generated@@658) ($generated@@657 ($generated@@251 $generated@@658 $generated@@659))))
 :pattern ( ($generated@@251 $generated@@658 $generated@@659))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) $generated@@90) (= (type $generated@@661) $generated@@90)) (< ($generated@@656 $generated@@661) ($generated@@657 ($generated@@251 $generated@@660 $generated@@661))))
 :pattern ( ($generated@@251 $generated@@660 $generated@@661))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) $generated@@82) (= (type $generated@@663) $generated@@82)) (< ($generated@@657 $generated@@662) ($generated@@657 ($generated@@80 $generated@@662 $generated@@663))))
 :pattern ( ($generated@@80 $generated@@662 $generated@@663))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@82) (= (type $generated@@665) $generated@@82)) (< ($generated@@657 $generated@@665) ($generated@@657 ($generated@@80 $generated@@664 $generated@@665))))
 :pattern ( ($generated@@80 $generated@@664 $generated@@665))
)))
(assert (forall (($generated@@666 T@U) ($generated@@667 T@U) ($generated@@668 T@U) ) (!  (=> (and (and (and (= (type $generated@@666) $generated@@90) (= (type $generated@@667) $generated@@69)) (= (type $generated@@668) $generated@@69)) ($generated@@252 $generated@@666 ($generated@@485 $generated@@667 $generated@@668))) (and (= ($generated@@315 ($generated@@408 ($generated@@359 $generated@@90 $generated@@90) $generated@@666)) $generated@@666) ($generated@@79 ($generated@@408 ($generated@@359 $generated@@90 $generated@@90) $generated@@666) ($generated@@485 $generated@@667 $generated@@668))))
 :pattern ( ($generated@@252 $generated@@666 ($generated@@485 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) $generated@@90) (= (type $generated@@670) $generated@@69)) (= (type $generated@@671) $generated@@69)) ($generated@@252 $generated@@669 ($generated@@493 $generated@@670 $generated@@671))) (and (= ($generated@@315 ($generated@@408 ($generated@@377 $generated@@90 $generated@@90) $generated@@669)) $generated@@669) ($generated@@79 ($generated@@408 ($generated@@377 $generated@@90 $generated@@90) $generated@@669) ($generated@@493 $generated@@670 $generated@@671))))
 :pattern ( ($generated@@252 $generated@@669 ($generated@@493 $generated@@670 $generated@@671)))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (and (and (= (type $generated@@672) $generated@@69) (= (type $generated@@673) $generated@@69)) (= (type $generated@@674) $generated@@90)) ($generated@@252 $generated@@674 ($generated@@174 $generated@@672 $generated@@673))) (and (= ($generated@@315 ($generated@@408 $generated@@82 $generated@@674)) $generated@@674) ($generated@@79 ($generated@@408 $generated@@82 $generated@@674) ($generated@@174 $generated@@672 $generated@@673))))
 :pattern ( ($generated@@252 $generated@@674 ($generated@@174 $generated@@672 $generated@@673)))
)))
(assert (forall (($generated@@675 T@U) ) (!  (=> (= (type $generated@@675) $generated@@82) (< ($generated@@657 $generated@@675) ($generated@@657 ($generated@@311 $generated@@675))))
 :pattern ( ($generated@@311 $generated@@675))
)))
(assert (forall (($generated@@676 T@U) ) (! (let (($generated@@677 (type $generated@@676)))
 (not ($generated@@0 ($generated@@104 ($generated@@510 $generated@@677) $generated@@676))))
 :pattern ( (let (($generated@@677 (type $generated@@676)))
($generated@@104 ($generated@@510 $generated@@677) $generated@@676)))
)))
(assert (forall (($generated@@679 T@U) ) (! (= (type ($generated@@678 $generated@@679)) $generated@@74)
 :pattern ( ($generated@@678 $generated@@679))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) $generated@@69) (= (type $generated@@681) $generated@@69)) (and (= ($generated@@77 ($generated@@174 $generated@@680 $generated@@681)) $generated@@62) (= ($generated@@678 ($generated@@174 $generated@@680 $generated@@681)) $generated@@67)))
 :pattern ( ($generated@@174 $generated@@680 $generated@@681))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (and (= (type $generated@@682) $generated@@82) ($generated@@79 $generated@@682 $generated@@81)) (or (or ($generated@@281 $generated@@682) ($generated@@292 $generated@@682)) ($generated@@294 $generated@@682)))
 :pattern ( ($generated@@294 $generated@@682) ($generated@@79 $generated@@682 $generated@@81))
 :pattern ( ($generated@@292 $generated@@682) ($generated@@79 $generated@@682 $generated@@81))
 :pattern ( ($generated@@281 $generated@@682) ($generated@@79 $generated@@682 $generated@@81))
)))
(assert  (=> (<= 2 $generated@@320) (forall (($generated@@683 T@U) ($generated@@684 T@U) ($generated@@685 T@U) ($generated@@686 Int) ($generated@@687 Int) ) (!  (=> (and (and (and (= (type $generated@@683) $generated@@89) (= (type $generated@@684) $generated@@90)) (= (type $generated@@685) $generated@@82)) (or ($generated@@321 ($generated@@277 $generated@@684) ($generated@@277 $generated@@685) ($generated@@275 $generated@@686) ($generated@@275 $generated@@687)) (and (not (= 2 $generated@@320)) ($generated@@79 $generated@@685 $generated@@81)))) (and (and (=> (< 0 ($generated@@166 $generated@@684)) (=> (not ($generated@@281 $generated@@685)) (and (=> ($generated@@292 $generated@@685) (let (($generated@@688 ($generated@@322 $generated@@685)))
(let (($generated@@689 ($generated@@323 $generated@@685)))
(forall (($generated@@690 Int) ) (!  (and ($generated@@321 ($generated@@164 $generated@@684 ($generated@@165 1)) $generated@@689 $generated@@686 $generated@@690) (=> ($generated@@87 ($generated@@88 $generated@@683) ($generated@@164 $generated@@684 ($generated@@165 1)) $generated@@689 $generated@@686 $generated@@690) ($generated@@321 ($generated@@164 $generated@@684 ($generated@@165 1)) $generated@@688 $generated@@690 $generated@@687)))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@683) ($generated@@164 $generated@@684 ($generated@@165 1)) $generated@@688 $generated@@690 $generated@@687))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@683) ($generated@@164 $generated@@684 ($generated@@165 1)) $generated@@689 $generated@@686 $generated@@690))
))))) (=> (not ($generated@@292 $generated@@685)) (let (($generated@@691 ($generated@@324 $generated@@685)))
 (=> (not (= $generated@@686 $generated@@687)) (forall (($generated@@692 Int) ) (!  (and ($generated@@321 ($generated@@164 $generated@@684 ($generated@@165 1)) $generated@@691 $generated@@686 $generated@@692) (=> ($generated@@87 ($generated@@88 $generated@@683) ($generated@@164 $generated@@684 ($generated@@165 1)) $generated@@691 $generated@@686 $generated@@692) ($generated@@321 ($generated@@164 $generated@@684 ($generated@@165 1)) $generated@@685 $generated@@692 $generated@@687)))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@683) ($generated@@164 $generated@@684 ($generated@@165 1)) $generated@@685 $generated@@692 $generated@@687))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@683) ($generated@@164 $generated@@684 ($generated@@165 1)) $generated@@691 $generated@@686 $generated@@692))
)))))))) (=> (=> (< 0 ($generated@@166 $generated@@684)) (ite ($generated@@281 $generated@@685) (= $generated@@687 (+ $generated@@686 1)) (ite ($generated@@292 $generated@@685) (let (($generated@@693 ($generated@@322 $generated@@685)))
(let (($generated@@694 ($generated@@323 $generated@@685)))
(exists (($generated@@695 Int) ) (!  (and ($generated@@87 ($generated@@88 $generated@@683) ($generated@@164 $generated@@684 ($generated@@165 1)) $generated@@694 $generated@@686 $generated@@695) ($generated@@87 ($generated@@88 $generated@@683) ($generated@@164 $generated@@684 ($generated@@165 1)) $generated@@693 $generated@@695 $generated@@687))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@683) ($generated@@164 $generated@@684 ($generated@@165 1)) $generated@@693 $generated@@695 $generated@@687))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@683) ($generated@@164 $generated@@684 ($generated@@165 1)) $generated@@694 $generated@@686 $generated@@695))
)))) (let (($generated@@696 ($generated@@324 $generated@@685)))
 (or (= $generated@@686 $generated@@687) (exists (($generated@@697 Int) ) (!  (and ($generated@@87 ($generated@@88 $generated@@683) ($generated@@164 $generated@@684 ($generated@@165 1)) $generated@@696 $generated@@686 $generated@@697) ($generated@@87 ($generated@@88 $generated@@683) ($generated@@164 $generated@@684 ($generated@@165 1)) $generated@@685 $generated@@697 $generated@@687))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@683) ($generated@@164 $generated@@684 ($generated@@165 1)) $generated@@685 $generated@@697 $generated@@687))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@683) ($generated@@164 $generated@@684 ($generated@@165 1)) $generated@@696 $generated@@686 $generated@@697))
))))))) (=> (= ($generated@@275 0) ($generated@@166 $generated@@684)) (forall (($generated@@698 T@U) ) (!  (=> (and (= (type $generated@@698) $generated@@90) ($generated@@325 $generated@@698 $generated@@684)) ($generated@@321 $generated@@698 $generated@@685 $generated@@686 $generated@@687))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@683) $generated@@698 $generated@@685 $generated@@686 $generated@@687))
))))) (= ($generated@@87 ($generated@@88 $generated@@683) ($generated@@277 $generated@@684) ($generated@@277 $generated@@685) ($generated@@275 $generated@@686) ($generated@@275 $generated@@687))  (and (=> (< 0 ($generated@@166 $generated@@684)) (ite ($generated@@281 $generated@@685) (= $generated@@687 (+ $generated@@686 1)) (ite ($generated@@292 $generated@@685) (let (($generated@@699 ($generated@@322 $generated@@685)))
(let (($generated@@700 ($generated@@323 $generated@@685)))
(exists (($generated@@701 Int) ) (!  (and ($generated@@87 ($generated@@88 $generated@@683) ($generated@@164 $generated@@684 ($generated@@165 1)) $generated@@700 $generated@@686 $generated@@701) ($generated@@87 ($generated@@88 $generated@@683) ($generated@@164 $generated@@684 ($generated@@165 1)) $generated@@699 $generated@@701 $generated@@687))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@683) ($generated@@164 $generated@@684 ($generated@@165 1)) $generated@@699 $generated@@701 $generated@@687))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@683) ($generated@@164 $generated@@684 ($generated@@165 1)) $generated@@700 $generated@@686 $generated@@701))
)))) (let (($generated@@702 ($generated@@324 $generated@@685)))
 (or (= $generated@@686 $generated@@687) (exists (($generated@@703 Int) ) (!  (and ($generated@@87 ($generated@@88 $generated@@683) ($generated@@164 $generated@@684 ($generated@@165 1)) $generated@@702 $generated@@686 $generated@@703) ($generated@@87 ($generated@@88 $generated@@683) ($generated@@164 $generated@@684 ($generated@@165 1)) $generated@@685 $generated@@703 $generated@@687))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@683) ($generated@@164 $generated@@684 ($generated@@165 1)) $generated@@685 $generated@@703 $generated@@687))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@683) ($generated@@164 $generated@@684 ($generated@@165 1)) $generated@@702 $generated@@686 $generated@@703))
))))))) (=> (= ($generated@@275 0) ($generated@@166 $generated@@684)) (exists (($generated@@704 T@U) ) (!  (and (= (type $generated@@704) $generated@@90) (and ($generated@@325 $generated@@704 $generated@@684) ($generated@@87 ($generated@@88 $generated@@683) $generated@@704 $generated@@685 $generated@@686 $generated@@687)))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@683) $generated@@704 $generated@@685 $generated@@686 $generated@@687))
)))))))
 :weight 3
 :pattern ( ($generated@@87 ($generated@@88 $generated@@683) ($generated@@277 $generated@@684) ($generated@@277 $generated@@685) ($generated@@275 $generated@@686) ($generated@@275 $generated@@687)))
))))
(assert (forall (($generated@@705 T@U) ) (!  (=> (= (type $generated@@705) $generated@@82) (= ($generated@@656 ($generated@@315 $generated@@705)) ($generated@@657 $generated@@705)))
 :pattern ( ($generated@@656 ($generated@@315 $generated@@705)))
)))
(assert (forall (($generated@@706 T@U) ) (!  (=> (and (= (type $generated@@706) $generated@@90) ($generated@@252 $generated@@706 ($generated@@98 0))) (and (= ($generated@@315 ($generated@@408 $generated@@2 $generated@@706)) $generated@@706) ($generated@@79 ($generated@@408 ($generated@@99 $generated@@90 $generated@@4) $generated@@706) ($generated@@98 0))))
 :pattern ( ($generated@@252 $generated@@706 ($generated@@98 0)))
)))
(assert (forall (($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (and (= (type $generated@@707) $generated@@90) (= (type $generated@@708) $generated@@69)) ($generated@@252 $generated@@707 ($generated@@265 $generated@@708))) (and (= ($generated@@315 ($generated@@408 ($generated@@99 $generated@@90 $generated@@4) $generated@@707)) $generated@@707) ($generated@@79 ($generated@@408 ($generated@@99 $generated@@90 $generated@@4) $generated@@707) ($generated@@265 $generated@@708))))
 :pattern ( ($generated@@252 $generated@@707 ($generated@@265 $generated@@708)))
)))
(assert (forall (($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (and (= (type $generated@@709) $generated@@90) (= (type $generated@@710) $generated@@69)) ($generated@@252 $generated@@709 ($generated@@270 $generated@@710))) (and (= ($generated@@315 ($generated@@408 ($generated@@99 $generated@@90 $generated@@4) $generated@@709)) $generated@@709) ($generated@@79 ($generated@@408 ($generated@@99 $generated@@90 $generated@@4) $generated@@709) ($generated@@270 $generated@@710))))
 :pattern ( ($generated@@252 $generated@@709 ($generated@@270 $generated@@710)))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ) (!  (=> (and (and (= (type $generated@@711) $generated@@90) (= (type $generated@@712) $generated@@69)) ($generated@@252 $generated@@711 ($generated@@190 $generated@@712))) (and (= ($generated@@315 ($generated@@408 ($generated@@99 $generated@@90 $generated@@2) $generated@@711)) $generated@@711) ($generated@@79 ($generated@@408 ($generated@@99 $generated@@90 $generated@@2) $generated@@711) ($generated@@190 $generated@@712))))
 :pattern ( ($generated@@252 $generated@@711 ($generated@@190 $generated@@712)))
)))
(assert (forall (($generated@@713 T@U) ($generated@@714 T@U) ) (!  (=> (and (and (= (type $generated@@713) $generated@@90) (= (type $generated@@714) $generated@@69)) ($generated@@252 $generated@@713 ($generated@@612 $generated@@714))) (and (= ($generated@@315 ($generated@@408 ($generated@@304 $generated@@90) $generated@@713)) $generated@@713) ($generated@@79 ($generated@@408 ($generated@@304 $generated@@90) $generated@@713) ($generated@@612 $generated@@714))))
 :pattern ( ($generated@@252 $generated@@713 ($generated@@612 $generated@@714)))
)))
(assert (forall (($generated@@715 T@U) ) (!  (=> (and (= (type $generated@@715) $generated@@90) ($generated@@393 $generated@@715)) (= $generated@@715 ($generated@@165 ($generated@@166 $generated@@715))))
 :pattern ( ($generated@@166 $generated@@715))
 :pattern ( ($generated@@393 $generated@@715))
)))
(assert (= ($generated@@77 $generated@@81) $generated@@64))
(assert (= ($generated@@678 $generated@@81) $generated@@68))
(assert (forall (($generated@@716 T@U) ($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (and (= (type $generated@@716) ($generated@@99 $generated@@90 $generated@@2)) (= (type $generated@@717) $generated@@69)) (= (type $generated@@718) ($generated@@99 $generated@@100 $generated@@101))) (= ($generated@@97 $generated@@716 ($generated@@190 $generated@@717) $generated@@718) (forall (($generated@@719 T@U) ) (!  (=> (and (= (type $generated@@719) $generated@@90) (< 0 ($generated ($generated@@104 $generated@@716 $generated@@719)))) ($generated@@284 $generated@@719 $generated@@717 $generated@@718))
 :pattern ( ($generated@@104 $generated@@716 $generated@@719))
))))
 :pattern ( ($generated@@97 $generated@@716 ($generated@@190 $generated@@717) $generated@@718))
)))
(assert (= $generated@@188 ($generated@@277 $generated@@188)))
(assert (forall (($generated@@720 T@U) ($generated@@721 T@U) ) (!  (=> (and (and (= (type $generated@@720) $generated@@90) (= (type $generated@@721) $generated@@90)) (and ($generated@@393 $generated@@721) (<= ($generated@@166 $generated@@721) ($generated@@166 $generated@@720)))) (or (and (= $generated@@721 ($generated@@165 0)) (= ($generated@@164 $generated@@720 $generated@@721) $generated@@720)) (and (not (= $generated@@721 ($generated@@165 0))) ($generated@@155 ($generated@@164 $generated@@720 $generated@@721) $generated@@720))))
 :pattern ( ($generated@@164 $generated@@720 $generated@@721))
)))
(assert (forall (($generated@@722 T@U) ($generated@@723 T@U) ($generated@@724 T@U) ) (!  (=> (and (and (and (= (type $generated@@722) $generated@@82) (= (type $generated@@723) $generated@@69)) (= (type $generated@@724) ($generated@@99 $generated@@100 $generated@@101))) (and ($generated@@160 $generated@@724) (and ($generated@@173 $generated@@722) (exists (($generated@@725 T@U) ) (!  (and (= (type $generated@@725) $generated@@69) ($generated@@97 $generated@@722 ($generated@@174 $generated@@723 $generated@@725) $generated@@724))
 :pattern ( ($generated@@97 $generated@@722 ($generated@@174 $generated@@723 $generated@@725) $generated@@724))
))))) ($generated@@284 ($generated@@181 $generated@@722) $generated@@723 $generated@@724))
 :pattern ( ($generated@@284 ($generated@@181 $generated@@722) $generated@@723 $generated@@724))
)))
(assert (forall (($generated@@726 T@U) ($generated@@727 T@U) ($generated@@728 T@U) ) (!  (=> (and (and (and (= (type $generated@@726) $generated@@82) (= (type $generated@@727) $generated@@69)) (= (type $generated@@728) ($generated@@99 $generated@@100 $generated@@101))) (and ($generated@@160 $generated@@728) (and ($generated@@173 $generated@@726) (exists (($generated@@729 T@U) ) (!  (and (= (type $generated@@729) $generated@@69) ($generated@@97 $generated@@726 ($generated@@174 $generated@@729 $generated@@727) $generated@@728))
 :pattern ( ($generated@@97 $generated@@726 ($generated@@174 $generated@@729 $generated@@727) $generated@@728))
))))) ($generated@@284 ($generated@@182 $generated@@726) $generated@@727 $generated@@728))
 :pattern ( ($generated@@284 ($generated@@182 $generated@@726) $generated@@727 $generated@@728))
)))
(assert (forall (($generated@@730 T@U) ($generated@@731 T@U) ) (!  (=> (and (and (= (type $generated@@730) $generated@@82) (= (type $generated@@731) ($generated@@99 $generated@@100 $generated@@101))) (and ($generated@@160 $generated@@731) (and ($generated@@292 $generated@@730) ($generated@@97 $generated@@730 $generated@@81 $generated@@731)))) ($generated@@97 ($generated@@323 $generated@@730) $generated@@81 $generated@@731))
 :pattern ( ($generated@@97 ($generated@@323 $generated@@730) $generated@@81 $generated@@731))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ) (!  (=> (and (and (= (type $generated@@732) $generated@@82) (= (type $generated@@733) ($generated@@99 $generated@@100 $generated@@101))) (and ($generated@@160 $generated@@733) (and ($generated@@292 $generated@@732) ($generated@@97 $generated@@732 $generated@@81 $generated@@733)))) ($generated@@97 ($generated@@322 $generated@@732) $generated@@81 $generated@@733))
 :pattern ( ($generated@@97 ($generated@@322 $generated@@732) $generated@@81 $generated@@733))
)))
(assert (forall (($generated@@734 T@U) ($generated@@735 T@U) ) (!  (=> (and (and (= (type $generated@@734) $generated@@82) (= (type $generated@@735) ($generated@@99 $generated@@100 $generated@@101))) (and ($generated@@160 $generated@@735) (and ($generated@@294 $generated@@734) ($generated@@97 $generated@@734 $generated@@81 $generated@@735)))) ($generated@@97 ($generated@@324 $generated@@734) $generated@@81 $generated@@735))
 :pattern ( ($generated@@97 ($generated@@324 $generated@@734) $generated@@81 $generated@@735))
)))
(assert (forall (($generated@@736 T@U) ($generated@@737 T@U) ) (!  (=> (and (= (type $generated@@736) $generated@@90) (= (type $generated@@737) $generated@@90)) (= ($generated@@251 ($generated@@277 $generated@@736) ($generated@@277 $generated@@737)) ($generated@@277 ($generated@@251 $generated@@736 $generated@@737))))
 :pattern ( ($generated@@251 ($generated@@277 $generated@@736) ($generated@@277 $generated@@737)))
)))
(assert (forall (($generated@@738 T@U) ($generated@@739 T@U) ) (!  (=> (and (= (type $generated@@738) $generated@@82) (= (type $generated@@739) $generated@@82)) (= ($generated@@80 ($generated@@277 $generated@@738) ($generated@@277 $generated@@739)) ($generated@@277 ($generated@@80 $generated@@738 $generated@@739))))
 :pattern ( ($generated@@80 ($generated@@277 $generated@@738) ($generated@@277 $generated@@739)))
)))
(assert (forall (($generated@@740 Int) ) (! (= ($generated@@315 ($generated@@8 ($generated@@275 $generated@@740))) ($generated@@277 ($generated@@315 ($generated@@8 $generated@@740))))
 :pattern ( ($generated@@315 ($generated@@8 ($generated@@275 $generated@@740))))
)))
(assert (forall (($generated@@741 T@U) ) (!  (=> (= (type $generated@@741) $generated@@82) (= ($generated@@311 ($generated@@277 $generated@@741)) ($generated@@277 ($generated@@311 $generated@@741))))
 :pattern ( ($generated@@311 ($generated@@277 $generated@@741)))
)))
(assert (forall (($generated@@742 T@U) ) (! (= ($generated@@315 ($generated@@277 $generated@@742)) ($generated@@277 ($generated@@315 $generated@@742)))
 :pattern ( ($generated@@315 ($generated@@277 $generated@@742)))
)))
(assert (forall (($generated@@743 T@U) ) (! (let (($generated@@744 ($generated@@305 (type $generated@@743))))
 (=> (and (= (type $generated@@743) ($generated@@304 $generated@@744)) (= ($generated@@303 $generated@@743) 0)) (= $generated@@743 ($generated@@302 $generated@@744))))
 :pattern ( ($generated@@303 $generated@@743))
)))
(assert (forall (($generated@@745 T@U) ($generated@@746 T@U) ($generated@@747 T@U) ) (! (let (($generated@@748 (type $generated@@746)))
 (=> (and (and (= (type $generated@@745) ($generated@@99 $generated@@748 $generated@@2)) (= (type $generated@@747) $generated@@2)) (<= 0 ($generated $generated@@747))) (= ($generated@@351 ($generated@@105 $generated@@745 $generated@@746 $generated@@747)) (+ (- ($generated@@351 $generated@@745) ($generated ($generated@@104 $generated@@745 $generated@@746))) ($generated $generated@@747)))))
 :pattern ( ($generated@@351 ($generated@@105 $generated@@745 $generated@@746 $generated@@747)))
)))
(assert (forall (($generated@@749 T@U) ($generated@@750 T@U) ) (!  (=> (and (= (type $generated@@749) ($generated@@99 $generated@@100 $generated@@101)) (= (type $generated@@750) $generated@@2)) ($generated@@97 $generated@@750 $generated@@46 $generated@@749))
 :pattern ( ($generated@@97 $generated@@750 $generated@@46 $generated@@749))
)))
(assert (forall (($generated@@751 T@U) ($generated@@752 T@U) ) (!  (=> (and (= (type $generated@@751) ($generated@@99 $generated@@100 $generated@@101)) (= (type $generated@@752) $generated@@3)) ($generated@@97 $generated@@752 $generated@@47 $generated@@751))
 :pattern ( ($generated@@97 $generated@@752 $generated@@47 $generated@@751))
)))
(assert (forall (($generated@@753 T@U) ($generated@@754 T@U) ) (!  (=> (and (= (type $generated@@753) ($generated@@99 $generated@@100 $generated@@101)) (= (type $generated@@754) $generated@@4)) ($generated@@97 $generated@@754 $generated@@44 $generated@@753))
 :pattern ( ($generated@@97 $generated@@754 $generated@@44 $generated@@753))
)))
(assert (forall (($generated@@755 T@U) ($generated@@756 T@U) ) (!  (=> (and (= (type $generated@@755) ($generated@@99 $generated@@100 $generated@@101)) (= (type $generated@@756) $generated@@539)) ($generated@@97 $generated@@756 $generated@@45 $generated@@755))
 :pattern ( ($generated@@97 $generated@@756 $generated@@45 $generated@@755))
)))
(assert (forall (($generated@@757 T@U) ($generated@@758 T@U) ) (!  (=> (and (= (type $generated@@757) ($generated@@99 $generated@@100 $generated@@101)) (= (type $generated@@758) $generated@@90)) ($generated@@97 $generated@@758 $generated@@48 $generated@@757))
 :pattern ( ($generated@@97 $generated@@758 $generated@@48 $generated@@757))
)))
(assert (forall (($generated@@759 T@U) ($generated@@760 T@U) ) (!  (=> (and (= (type $generated@@759) ($generated@@304 $generated@@90)) (= (type $generated@@760) $generated@@69)) (= ($generated@@79 $generated@@759 ($generated@@612 $generated@@760)) (forall (($generated@@761 Int) ) (!  (=> (and (<= 0 $generated@@761) (< $generated@@761 ($generated@@303 $generated@@759))) ($generated@@252 ($generated@@613 $generated@@759 $generated@@761) $generated@@760))
 :pattern ( ($generated@@613 $generated@@759 $generated@@761))
))))
 :pattern ( ($generated@@79 $generated@@759 ($generated@@612 $generated@@760)))
)))
(assert (forall (($generated@@763 T@U) ($generated@@764 Int) ) (!  (=> (= (type $generated@@763) ($generated@@304 $generated@@90)) (=> (and (<= 0 $generated@@764) (< $generated@@764 ($generated@@303 $generated@@763))) (< ($generated@@657 ($generated@@408 $generated@@82 ($generated@@613 $generated@@763 $generated@@764))) ($generated@@762 $generated@@763))))
 :pattern ( ($generated@@657 ($generated@@408 $generated@@82 ($generated@@613 $generated@@763 $generated@@764))))
)))
(assert (forall (($generated@@765 T@U) ($generated@@766 T@U) ($generated@@767 T@U) ) (!  (=> (and (and (and (= (type $generated@@765) ($generated@@359 $generated@@90 $generated@@90)) (= (type $generated@@766) $generated@@69)) (= (type $generated@@767) $generated@@69)) ($generated@@79 $generated@@765 ($generated@@485 $generated@@766 $generated@@767))) (and (and ($generated@@79 ($generated@@357 $generated@@765) ($generated@@265 $generated@@766)) ($generated@@79 ($generated@@426 $generated@@765) ($generated@@265 $generated@@767))) ($generated@@79 ($generated@@459 $generated@@765) ($generated@@265 ($generated@@174 $generated@@766 $generated@@767)))))
 :pattern ( ($generated@@79 $generated@@765 ($generated@@485 $generated@@766 $generated@@767)))
)))
(assert (forall (($generated@@768 T@U) ($generated@@769 T@U) ($generated@@770 T@U) ) (!  (=> (and (and (and (= (type $generated@@768) ($generated@@377 $generated@@90 $generated@@90)) (= (type $generated@@769) $generated@@69)) (= (type $generated@@770) $generated@@69)) ($generated@@79 $generated@@768 ($generated@@493 $generated@@769 $generated@@770))) (and (and ($generated@@79 ($generated@@375 $generated@@768) ($generated@@270 $generated@@769)) ($generated@@79 ($generated@@437 $generated@@768) ($generated@@270 $generated@@770))) ($generated@@79 ($generated@@467 $generated@@768) ($generated@@270 ($generated@@174 $generated@@769 $generated@@770)))))
 :pattern ( ($generated@@79 $generated@@768 ($generated@@493 $generated@@769 $generated@@770)))
)))
(assert (forall (($generated@@771 T@U) ) (!  (=> (= (type $generated@@771) $generated@@2) ($generated@@79 $generated@@771 $generated@@46))
 :pattern ( ($generated@@79 $generated@@771 $generated@@46))
)))
(assert (forall (($generated@@772 T@U) ) (!  (=> (= (type $generated@@772) $generated@@3) ($generated@@79 $generated@@772 $generated@@47))
 :pattern ( ($generated@@79 $generated@@772 $generated@@47))
)))
(assert (forall (($generated@@773 T@U) ) (!  (=> (= (type $generated@@773) $generated@@4) ($generated@@79 $generated@@773 $generated@@44))
 :pattern ( ($generated@@79 $generated@@773 $generated@@44))
)))
(assert (forall (($generated@@774 T@U) ) (!  (=> (= (type $generated@@774) $generated@@539) ($generated@@79 $generated@@774 $generated@@45))
 :pattern ( ($generated@@79 $generated@@774 $generated@@45))
)))
(assert (forall (($generated@@775 T@U) ) (!  (=> (= (type $generated@@775) $generated@@90) ($generated@@79 $generated@@775 $generated@@48))
 :pattern ( ($generated@@79 $generated@@775 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@776 () Int)
(declare-fun $generated@@777 () Int)
(declare-fun $generated@@778 () T@U)
(declare-fun $generated@@779 () T@U)
(declare-fun $generated@@780 () Int)
(declare-fun $generated@@781 () T@U)
(declare-fun $generated@@782 () Int)
(declare-fun $generated@@783 () T@U)
(declare-fun $generated@@784 () T@U)
(declare-fun $generated@@785 (T@U) Bool)
(declare-fun $generated@@786 () T@U)
(declare-fun $generated@@787 () T@U)
(declare-fun $generated@@788 () T@U)
(declare-fun $generated@@789 () T@U)
(declare-fun $generated@@790 () T@U)
(declare-fun $generated@@791 () T@U)
(declare-fun $generated@@792 () T@U)
(declare-fun $generated@@793 () T@U)
(declare-fun $generated@@794 () T@U)
(declare-fun $generated@@795 () T@U)
(declare-fun $generated@@796 () T@U)
(declare-fun $generated@@797 () Int)
(declare-fun $generated@@798 () Int)
(declare-fun $generated@@799 () T@U)
(declare-fun $generated@@800 () T@U)
(declare-fun $generated@@801 () T@U)
(declare-fun $generated@@802 () T@U)
(declare-fun $generated@@803 () T@U)
(declare-fun $generated@@804 () T@U)
(declare-fun $generated@@805 () T@U)
(declare-fun $generated@@806 () T@U)
(declare-fun $generated@@807 () T@U)
(declare-fun $generated@@808 () T@U)
(declare-fun $generated@@809 () T@U)
(declare-fun $generated@@810 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@778) $generated@@90) (= (type $generated@@807) ($generated@@99 $generated@@100 $generated@@101))) (= (type $generated@@786) ($generated@@99 $generated@@100 $generated@@101))) (= (type $generated@@791) $generated@@82)) (= (type $generated@@796) $generated@@82)) (= (type $generated@@799) $generated@@90)) (= (type $generated@@800) ($generated@@99 $generated@@100 $generated@@101))) (= (type $generated@@801) $generated@@90)) (= (type $generated@@802) ($generated@@99 $generated@@100 $generated@@101))) (= (type $generated@@803) $generated@@90)) (= (type $generated@@804) $generated@@90)) (= (type $generated@@805) $generated@@82)) (= (type $generated@@806) $generated@@82)) (= (type $generated@@792) $generated@@82)) (= (type $generated@@793) $generated@@82)) (= (type $generated@@779) $generated@@82)) (= (type $generated@@781) $generated@@82)) (= (type $generated@@783) $generated@@90)) (= (type $generated@@784) ($generated@@99 $generated@@100 $generated@@101))) (= (type $generated@@787) $generated@@90)) (= (type $generated@@788) ($generated@@99 $generated@@100 $generated@@101))) (= (type $generated@@789) $generated@@90)) (= (type $generated@@790) $generated@@90)) (= (type $generated@@794) $generated@@82)) (= (type $generated@@795) $generated@@82)) (= (type $generated@@808) ($generated@@197 $generated@@100 $generated@@4))) (= (type $generated@@809) $generated@@100)) (= (type $generated@@810) ($generated@@99 $generated@@100 $generated@@101))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 58) (let (($generated@@811 true))
(let (($generated@@812 true))
(let (($generated@@813 true))
(let (($generated@@814  (=> (= (ControlFlow 0 2) (- 0 1)) (= $generated@@776 $generated@@777))))
(let (($generated@@815  (=> (and ($generated@@321 ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@779 $generated@@776 $generated@@780) (=> ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@779 $generated@@776 $generated@@780) ($generated@@321 ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@781 $generated@@780 $generated@@777))) (and (=> (= (ControlFlow 0 33) (- 0 46)) (or (and ($generated@@79 ($generated@@8 ($generated@@275 0)) $generated@@46) (and ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@779 $generated@@776 ($generated@@275 0)) ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@781 ($generated@@275 0) $generated@@777))) (exists (($generated@@816 Int) )  (and ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@779 $generated@@776 $generated@@816) ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@781 $generated@@816 $generated@@777))))) (=> (or (and ($generated@@79 ($generated@@8 ($generated@@275 0)) $generated@@46) (and ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@779 $generated@@776 ($generated@@275 0)) ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@781 ($generated@@275 0) $generated@@777))) (exists (($generated@@817 Int) )  (and ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@779 $generated@@776 $generated@@817) ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@781 $generated@@817 $generated@@777)))) (=> (and ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@779 $generated@@776 $generated@@782) ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@781 $generated@@782 $generated@@777)) (and (=> (= (ControlFlow 0 33) (- 0 45)) ($generated@@393 ($generated@@277 ($generated@@165 1)))) (=> ($generated@@393 ($generated@@277 ($generated@@165 1))) (and (=> (= (ControlFlow 0 33) (- 0 44)) (<= ($generated@@166 ($generated@@277 ($generated@@165 1))) ($generated@@166 $generated@@778))) (=> (<= ($generated@@166 ($generated@@277 ($generated@@165 1))) ($generated@@166 $generated@@778)) (=> (= $generated@@783 ($generated@@164 $generated@@778 ($generated@@165 1))) (and (=> (= (ControlFlow 0 33) (- 0 43)) (=> ($generated@@321 $generated@@783 $generated@@779 $generated@@776 $generated@@782) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@783 $generated@@779 $generated@@776 $generated@@782) (=> (< 0 ($generated@@166 $generated@@783)) (=> ($generated@@281 $generated@@779) (= $generated@@782 (+ $generated@@776 1))))))) (=> (=> ($generated@@321 $generated@@783 $generated@@779 $generated@@776 $generated@@782) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@783 $generated@@779 $generated@@776 $generated@@782) (=> (< 0 ($generated@@166 $generated@@783)) (=> ($generated@@281 $generated@@779) (= $generated@@782 (+ $generated@@776 1)))))) (and (=> (= (ControlFlow 0 33) (- 0 42)) (=> ($generated@@321 $generated@@783 $generated@@779 $generated@@776 $generated@@782) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@783 $generated@@779 $generated@@776 $generated@@782) (=> (< 0 ($generated@@166 $generated@@783)) (=> (not ($generated@@281 $generated@@779)) (=> ($generated@@292 $generated@@779) (let (($generated@@818 ($generated@@322 $generated@@779)))
(let (($generated@@819 ($generated@@323 $generated@@779)))
(exists (($generated@@820 Int) ) (!  (and ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@783 ($generated@@165 1)) $generated@@819 $generated@@776 $generated@@820) ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@783 ($generated@@165 1)) $generated@@818 $generated@@820 $generated@@782))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@783 ($generated@@165 1)) $generated@@818 $generated@@820 $generated@@782))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@783 ($generated@@165 1)) $generated@@819 $generated@@776 $generated@@820))
)))))))))) (=> (=> ($generated@@321 $generated@@783 $generated@@779 $generated@@776 $generated@@782) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@783 $generated@@779 $generated@@776 $generated@@782) (=> (< 0 ($generated@@166 $generated@@783)) (=> (not ($generated@@281 $generated@@779)) (=> ($generated@@292 $generated@@779) (let (($generated@@821 ($generated@@322 $generated@@779)))
(let (($generated@@822 ($generated@@323 $generated@@779)))
(exists (($generated@@823 Int) ) (!  (and ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@783 ($generated@@165 1)) $generated@@822 $generated@@776 $generated@@823) ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@783 ($generated@@165 1)) $generated@@821 $generated@@823 $generated@@782))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@783 ($generated@@165 1)) $generated@@821 $generated@@823 $generated@@782))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@783 ($generated@@165 1)) $generated@@822 $generated@@776 $generated@@823))
))))))))) (and (=> (= (ControlFlow 0 33) (- 0 41)) (=> ($generated@@321 $generated@@783 $generated@@779 $generated@@776 $generated@@782) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@783 $generated@@779 $generated@@776 $generated@@782) (=> (< 0 ($generated@@166 $generated@@783)) (=> (not ($generated@@281 $generated@@779)) (=> (not ($generated@@292 $generated@@779)) (let (($generated@@824 ($generated@@324 $generated@@779)))
 (or (= $generated@@776 $generated@@782) (exists (($generated@@825 Int) ) (!  (and ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@783 ($generated@@165 1)) $generated@@824 $generated@@776 $generated@@825) ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@783 ($generated@@165 1)) $generated@@779 $generated@@825 $generated@@782))
 :pattern ( ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@783 ($generated@@165 1)) $generated@@779 $generated@@825 $generated@@782))
 :pattern ( ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@783 ($generated@@165 1)) $generated@@824 $generated@@776 $generated@@825))
)))))))))) (=> (=> ($generated@@321 $generated@@783 $generated@@779 $generated@@776 $generated@@782) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@783 $generated@@779 $generated@@776 $generated@@782) (=> (< 0 ($generated@@166 $generated@@783)) (=> (not ($generated@@281 $generated@@779)) (=> (not ($generated@@292 $generated@@779)) (let (($generated@@826 ($generated@@324 $generated@@779)))
 (or (= $generated@@776 $generated@@782) (exists (($generated@@827 Int) ) (!  (and ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@783 ($generated@@165 1)) $generated@@826 $generated@@776 $generated@@827) ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@783 ($generated@@165 1)) $generated@@779 $generated@@827 $generated@@782))
 :pattern ( ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@783 ($generated@@165 1)) $generated@@779 $generated@@827 $generated@@782))
 :pattern ( ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@783 ($generated@@165 1)) $generated@@826 $generated@@776 $generated@@827))
))))))))) (and (=> (= (ControlFlow 0 33) (- 0 40)) (=> ($generated@@321 $generated@@783 $generated@@779 $generated@@776 $generated@@782) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@783 $generated@@779 $generated@@776 $generated@@782) (=> (= ($generated@@275 0) ($generated@@166 $generated@@783)) (exists (($generated@@828 T@U) ) (!  (and (= (type $generated@@828) $generated@@90) (and ($generated@@325 $generated@@828 $generated@@783) ($generated@@87 ($generated@@88 $generated@@397) $generated@@828 $generated@@779 $generated@@776 $generated@@782)))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) $generated@@828 $generated@@779 $generated@@776 $generated@@782))
)))))) (=> (=> ($generated@@321 $generated@@783 $generated@@779 $generated@@776 $generated@@782) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@783 $generated@@779 $generated@@776 $generated@@782) (=> (= ($generated@@275 0) ($generated@@166 $generated@@783)) (exists (($generated@@829 T@U) ) (!  (and (= (type $generated@@829) $generated@@90) (and ($generated@@325 $generated@@829 $generated@@783) ($generated@@87 ($generated@@88 $generated@@397) $generated@@829 $generated@@779 $generated@@776 $generated@@782)))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) $generated@@829 $generated@@779 $generated@@776 $generated@@782))
))))) (=> (and (and ($generated@@160 $generated@@784) ($generated@@785 $generated@@784)) (and (= $generated@@776 $generated@@782) (= $generated@@786 $generated@@784))) (and (=> (= (ControlFlow 0 33) (- 0 39)) ($generated@@393 ($generated@@277 ($generated@@165 1)))) (=> ($generated@@393 ($generated@@277 ($generated@@165 1))) (and (=> (= (ControlFlow 0 33) (- 0 38)) (<= ($generated@@166 ($generated@@277 ($generated@@165 1))) ($generated@@166 $generated@@778))) (=> (<= ($generated@@166 ($generated@@277 ($generated@@165 1))) ($generated@@166 $generated@@778)) (=> (= $generated@@787 ($generated@@164 $generated@@778 ($generated@@165 1))) (and (=> (= (ControlFlow 0 33) (- 0 37)) (=> ($generated@@321 $generated@@787 $generated@@781 $generated@@782 $generated@@777) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@787 $generated@@781 $generated@@782 $generated@@777) (=> (< 0 ($generated@@166 $generated@@787)) (=> ($generated@@281 $generated@@781) (= $generated@@777 (+ $generated@@782 1))))))) (=> (=> ($generated@@321 $generated@@787 $generated@@781 $generated@@782 $generated@@777) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@787 $generated@@781 $generated@@782 $generated@@777) (=> (< 0 ($generated@@166 $generated@@787)) (=> ($generated@@281 $generated@@781) (= $generated@@777 (+ $generated@@782 1)))))) (and (=> (= (ControlFlow 0 33) (- 0 36)) (=> ($generated@@321 $generated@@787 $generated@@781 $generated@@782 $generated@@777) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@787 $generated@@781 $generated@@782 $generated@@777) (=> (< 0 ($generated@@166 $generated@@787)) (=> (not ($generated@@281 $generated@@781)) (=> ($generated@@292 $generated@@781) (let (($generated@@830 ($generated@@322 $generated@@781)))
(let (($generated@@831 ($generated@@323 $generated@@781)))
(exists (($generated@@832 Int) ) (!  (and ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@787 ($generated@@165 1)) $generated@@831 $generated@@782 $generated@@832) ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@787 ($generated@@165 1)) $generated@@830 $generated@@832 $generated@@777))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@787 ($generated@@165 1)) $generated@@830 $generated@@832 $generated@@777))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@787 ($generated@@165 1)) $generated@@831 $generated@@782 $generated@@832))
)))))))))) (=> (=> ($generated@@321 $generated@@787 $generated@@781 $generated@@782 $generated@@777) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@787 $generated@@781 $generated@@782 $generated@@777) (=> (< 0 ($generated@@166 $generated@@787)) (=> (not ($generated@@281 $generated@@781)) (=> ($generated@@292 $generated@@781) (let (($generated@@833 ($generated@@322 $generated@@781)))
(let (($generated@@834 ($generated@@323 $generated@@781)))
(exists (($generated@@835 Int) ) (!  (and ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@787 ($generated@@165 1)) $generated@@834 $generated@@782 $generated@@835) ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@787 ($generated@@165 1)) $generated@@833 $generated@@835 $generated@@777))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@787 ($generated@@165 1)) $generated@@833 $generated@@835 $generated@@777))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@787 ($generated@@165 1)) $generated@@834 $generated@@782 $generated@@835))
))))))))) (and (=> (= (ControlFlow 0 33) (- 0 35)) (=> ($generated@@321 $generated@@787 $generated@@781 $generated@@782 $generated@@777) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@787 $generated@@781 $generated@@782 $generated@@777) (=> (< 0 ($generated@@166 $generated@@787)) (=> (not ($generated@@281 $generated@@781)) (=> (not ($generated@@292 $generated@@781)) (let (($generated@@836 ($generated@@324 $generated@@781)))
 (or (= $generated@@782 $generated@@777) (exists (($generated@@837 Int) ) (!  (and ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@787 ($generated@@165 1)) $generated@@836 $generated@@782 $generated@@837) ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@787 ($generated@@165 1)) $generated@@781 $generated@@837 $generated@@777))
 :pattern ( ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@787 ($generated@@165 1)) $generated@@781 $generated@@837 $generated@@777))
 :pattern ( ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@787 ($generated@@165 1)) $generated@@836 $generated@@782 $generated@@837))
)))))))))) (=> (=> ($generated@@321 $generated@@787 $generated@@781 $generated@@782 $generated@@777) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@787 $generated@@781 $generated@@782 $generated@@777) (=> (< 0 ($generated@@166 $generated@@787)) (=> (not ($generated@@281 $generated@@781)) (=> (not ($generated@@292 $generated@@781)) (let (($generated@@838 ($generated@@324 $generated@@781)))
 (or (= $generated@@782 $generated@@777) (exists (($generated@@839 Int) ) (!  (and ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@787 ($generated@@165 1)) $generated@@838 $generated@@782 $generated@@839) ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@787 ($generated@@165 1)) $generated@@781 $generated@@839 $generated@@777))
 :pattern ( ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@787 ($generated@@165 1)) $generated@@781 $generated@@839 $generated@@777))
 :pattern ( ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@787 ($generated@@165 1)) $generated@@838 $generated@@782 $generated@@839))
))))))))) (and (=> (= (ControlFlow 0 33) (- 0 34)) (=> ($generated@@321 $generated@@787 $generated@@781 $generated@@782 $generated@@777) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@787 $generated@@781 $generated@@782 $generated@@777) (=> (= ($generated@@275 0) ($generated@@166 $generated@@787)) (exists (($generated@@840 T@U) ) (!  (and (= (type $generated@@840) $generated@@90) (and ($generated@@325 $generated@@840 $generated@@787) ($generated@@87 ($generated@@88 $generated@@397) $generated@@840 $generated@@781 $generated@@782 $generated@@777)))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) $generated@@840 $generated@@781 $generated@@782 $generated@@777))
)))))) (=> (=> ($generated@@321 $generated@@787 $generated@@781 $generated@@782 $generated@@777) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@787 $generated@@781 $generated@@782 $generated@@777) (=> (= ($generated@@275 0) ($generated@@166 $generated@@787)) (exists (($generated@@841 T@U) ) (!  (and (= (type $generated@@841) $generated@@90) (and ($generated@@325 $generated@@841 $generated@@787) ($generated@@87 ($generated@@88 $generated@@397) $generated@@841 $generated@@781 $generated@@782 $generated@@777)))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) $generated@@841 $generated@@781 $generated@@782 $generated@@777))
))))) (=> (and (and (and ($generated@@160 $generated@@788) ($generated@@785 $generated@@788)) (= $generated@@782 $generated@@777)) (and (= $generated@@784 $generated@@788) (= (ControlFlow 0 33) 2))) $generated@@814))))))))))))))))))))))))))))))))))
(let (($generated@@842  (=> (and (not ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@779 $generated@@776 $generated@@780)) (= (ControlFlow 0 50) 33)) $generated@@815)))
(let (($generated@@843  (=> ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@779 $generated@@776 $generated@@780) (and (=> (= (ControlFlow 0 47) (- 0 49)) ($generated@@393 ($generated@@277 ($generated@@165 1)))) (=> ($generated@@393 ($generated@@277 ($generated@@165 1))) (and (=> (= (ControlFlow 0 47) (- 0 48)) (<= ($generated@@166 ($generated@@277 ($generated@@165 1))) ($generated@@166 $generated@@778))) (=> (<= ($generated@@166 ($generated@@277 ($generated@@165 1))) ($generated@@166 $generated@@778)) (=> (= $generated@@789 ($generated@@164 $generated@@778 ($generated@@165 1))) (=> (and ($generated@@97 $generated@@789 $generated@@48 $generated@@786) ($generated@@97 $generated@@781 $generated@@81 $generated@@786)) (=> (and (and ($generated@@97 ($generated@@8 $generated@@780) $generated@@46 $generated@@786) ($generated@@97 ($generated@@8 $generated@@777) $generated@@46 $generated@@786)) (and ($generated@@321 ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@781 $generated@@780 $generated@@777) (= (ControlFlow 0 47) 33))) $generated@@815))))))))))
(let (($generated@@844  (and (=> (= (ControlFlow 0 51) (- 0 53)) ($generated@@393 ($generated@@277 ($generated@@165 1)))) (=> ($generated@@393 ($generated@@277 ($generated@@165 1))) (and (=> (= (ControlFlow 0 51) (- 0 52)) (<= ($generated@@166 ($generated@@277 ($generated@@165 1))) ($generated@@166 $generated@@778))) (=> (<= ($generated@@166 ($generated@@277 ($generated@@165 1))) ($generated@@166 $generated@@778)) (=> (and (= $generated@@790 ($generated@@164 $generated@@778 ($generated@@165 1))) ($generated@@97 $generated@@790 $generated@@48 $generated@@786)) (=> (and (and ($generated@@97 $generated@@779 $generated@@81 $generated@@786) ($generated@@97 ($generated@@8 $generated@@776) $generated@@46 $generated@@786)) (and ($generated@@97 ($generated@@8 $generated@@780) $generated@@46 $generated@@786) ($generated@@321 ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@779 $generated@@776 $generated@@780))) (and (=> (= (ControlFlow 0 51) 47) $generated@@843) (=> (= (ControlFlow 0 51) 50) $generated@@842))))))))))
(let (($generated@@845  (=> (= $generated@@791 ($generated@@80 $generated@@792 $generated@@793)) (=> (and (and ($generated@@79 $generated@@792 $generated@@81) ($generated@@97 $generated@@792 $generated@@81 $generated@@786)) (and ($generated@@79 $generated@@793 $generated@@81) ($generated@@97 $generated@@793 $generated@@81 $generated@@786))) (=> (and (and (and (and ($generated@@79 $generated@@781 $generated@@81) ($generated@@97 $generated@@781 $generated@@81 $generated@@786)) (= $generated@@794 $generated@@793)) (and ($generated@@79 $generated@@794 $generated@@81) (= $generated@@781 $generated@@794))) (and (and (and ($generated@@79 $generated@@779 $generated@@81) ($generated@@97 $generated@@779 $generated@@81 $generated@@786)) (= $generated@@795 $generated@@792)) (and ($generated@@79 $generated@@795 $generated@@81) (= $generated@@779 $generated@@795)))) (and (=> (= (ControlFlow 0 54) 51) $generated@@844) (=> (= (ControlFlow 0 54) 32) $generated@@811)))))))
(let (($generated@@846  (=> (and ($generated@@321 ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@796 $generated@@776 $generated@@797) (=> ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@796 $generated@@776 $generated@@797) ($generated@@321 ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@791 $generated@@797 $generated@@777))) (and (=> (= (ControlFlow 0 8) (- 0 21)) (or (and ($generated@@79 ($generated@@8 ($generated@@275 0)) $generated@@46) (and ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@796 $generated@@776 ($generated@@275 0)) ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@791 ($generated@@275 0) $generated@@777))) (exists (($generated@@847 Int) )  (and ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@796 $generated@@776 $generated@@847) ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@791 $generated@@847 $generated@@777))))) (=> (or (and ($generated@@79 ($generated@@8 ($generated@@275 0)) $generated@@46) (and ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@796 $generated@@776 ($generated@@275 0)) ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@791 ($generated@@275 0) $generated@@777))) (exists (($generated@@848 Int) )  (and ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@796 $generated@@776 $generated@@848) ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@791 $generated@@848 $generated@@777)))) (=> (and ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@796 $generated@@776 $generated@@798) ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@791 $generated@@798 $generated@@777)) (and (=> (= (ControlFlow 0 8) (- 0 20)) ($generated@@393 ($generated@@277 ($generated@@165 1)))) (=> ($generated@@393 ($generated@@277 ($generated@@165 1))) (and (=> (= (ControlFlow 0 8) (- 0 19)) (<= ($generated@@166 ($generated@@277 ($generated@@165 1))) ($generated@@166 $generated@@778))) (=> (<= ($generated@@166 ($generated@@277 ($generated@@165 1))) ($generated@@166 $generated@@778)) (=> (= $generated@@799 ($generated@@164 $generated@@778 ($generated@@165 1))) (and (=> (= (ControlFlow 0 8) (- 0 18)) (=> ($generated@@321 $generated@@799 $generated@@796 $generated@@776 $generated@@798) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@799 $generated@@796 $generated@@776 $generated@@798) (=> (< 0 ($generated@@166 $generated@@799)) (=> ($generated@@281 $generated@@796) (= $generated@@798 (+ $generated@@776 1))))))) (=> (=> ($generated@@321 $generated@@799 $generated@@796 $generated@@776 $generated@@798) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@799 $generated@@796 $generated@@776 $generated@@798) (=> (< 0 ($generated@@166 $generated@@799)) (=> ($generated@@281 $generated@@796) (= $generated@@798 (+ $generated@@776 1)))))) (and (=> (= (ControlFlow 0 8) (- 0 17)) (=> ($generated@@321 $generated@@799 $generated@@796 $generated@@776 $generated@@798) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@799 $generated@@796 $generated@@776 $generated@@798) (=> (< 0 ($generated@@166 $generated@@799)) (=> (not ($generated@@281 $generated@@796)) (=> ($generated@@292 $generated@@796) (let (($generated@@849 ($generated@@322 $generated@@796)))
(let (($generated@@850 ($generated@@323 $generated@@796)))
(exists (($generated@@851 Int) ) (!  (and ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@799 ($generated@@165 1)) $generated@@850 $generated@@776 $generated@@851) ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@799 ($generated@@165 1)) $generated@@849 $generated@@851 $generated@@798))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@799 ($generated@@165 1)) $generated@@849 $generated@@851 $generated@@798))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@799 ($generated@@165 1)) $generated@@850 $generated@@776 $generated@@851))
)))))))))) (=> (=> ($generated@@321 $generated@@799 $generated@@796 $generated@@776 $generated@@798) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@799 $generated@@796 $generated@@776 $generated@@798) (=> (< 0 ($generated@@166 $generated@@799)) (=> (not ($generated@@281 $generated@@796)) (=> ($generated@@292 $generated@@796) (let (($generated@@852 ($generated@@322 $generated@@796)))
(let (($generated@@853 ($generated@@323 $generated@@796)))
(exists (($generated@@854 Int) ) (!  (and ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@799 ($generated@@165 1)) $generated@@853 $generated@@776 $generated@@854) ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@799 ($generated@@165 1)) $generated@@852 $generated@@854 $generated@@798))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@799 ($generated@@165 1)) $generated@@852 $generated@@854 $generated@@798))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@799 ($generated@@165 1)) $generated@@853 $generated@@776 $generated@@854))
))))))))) (and (=> (= (ControlFlow 0 8) (- 0 16)) (=> ($generated@@321 $generated@@799 $generated@@796 $generated@@776 $generated@@798) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@799 $generated@@796 $generated@@776 $generated@@798) (=> (< 0 ($generated@@166 $generated@@799)) (=> (not ($generated@@281 $generated@@796)) (=> (not ($generated@@292 $generated@@796)) (let (($generated@@855 ($generated@@324 $generated@@796)))
 (or (= $generated@@776 $generated@@798) (exists (($generated@@856 Int) ) (!  (and ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@799 ($generated@@165 1)) $generated@@855 $generated@@776 $generated@@856) ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@799 ($generated@@165 1)) $generated@@796 $generated@@856 $generated@@798))
 :pattern ( ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@799 ($generated@@165 1)) $generated@@796 $generated@@856 $generated@@798))
 :pattern ( ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@799 ($generated@@165 1)) $generated@@855 $generated@@776 $generated@@856))
)))))))))) (=> (=> ($generated@@321 $generated@@799 $generated@@796 $generated@@776 $generated@@798) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@799 $generated@@796 $generated@@776 $generated@@798) (=> (< 0 ($generated@@166 $generated@@799)) (=> (not ($generated@@281 $generated@@796)) (=> (not ($generated@@292 $generated@@796)) (let (($generated@@857 ($generated@@324 $generated@@796)))
 (or (= $generated@@776 $generated@@798) (exists (($generated@@858 Int) ) (!  (and ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@799 ($generated@@165 1)) $generated@@857 $generated@@776 $generated@@858) ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@799 ($generated@@165 1)) $generated@@796 $generated@@858 $generated@@798))
 :pattern ( ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@799 ($generated@@165 1)) $generated@@796 $generated@@858 $generated@@798))
 :pattern ( ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@799 ($generated@@165 1)) $generated@@857 $generated@@776 $generated@@858))
))))))))) (and (=> (= (ControlFlow 0 8) (- 0 15)) (=> ($generated@@321 $generated@@799 $generated@@796 $generated@@776 $generated@@798) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@799 $generated@@796 $generated@@776 $generated@@798) (=> (= ($generated@@275 0) ($generated@@166 $generated@@799)) (exists (($generated@@859 T@U) ) (!  (and (= (type $generated@@859) $generated@@90) (and ($generated@@325 $generated@@859 $generated@@799) ($generated@@87 ($generated@@88 $generated@@397) $generated@@859 $generated@@796 $generated@@776 $generated@@798)))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) $generated@@859 $generated@@796 $generated@@776 $generated@@798))
)))))) (=> (=> ($generated@@321 $generated@@799 $generated@@796 $generated@@776 $generated@@798) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@799 $generated@@796 $generated@@776 $generated@@798) (=> (= ($generated@@275 0) ($generated@@166 $generated@@799)) (exists (($generated@@860 T@U) ) (!  (and (= (type $generated@@860) $generated@@90) (and ($generated@@325 $generated@@860 $generated@@799) ($generated@@87 ($generated@@88 $generated@@397) $generated@@860 $generated@@796 $generated@@776 $generated@@798)))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) $generated@@860 $generated@@796 $generated@@776 $generated@@798))
))))) (=> (and (and ($generated@@160 $generated@@800) ($generated@@785 $generated@@800)) (and (= $generated@@776 $generated@@798) (= $generated@@786 $generated@@800))) (and (=> (= (ControlFlow 0 8) (- 0 14)) ($generated@@393 ($generated@@277 ($generated@@165 1)))) (=> ($generated@@393 ($generated@@277 ($generated@@165 1))) (and (=> (= (ControlFlow 0 8) (- 0 13)) (<= ($generated@@166 ($generated@@277 ($generated@@165 1))) ($generated@@166 $generated@@778))) (=> (<= ($generated@@166 ($generated@@277 ($generated@@165 1))) ($generated@@166 $generated@@778)) (=> (= $generated@@801 ($generated@@164 $generated@@778 ($generated@@165 1))) (and (=> (= (ControlFlow 0 8) (- 0 12)) (=> ($generated@@321 $generated@@801 $generated@@791 $generated@@798 $generated@@777) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@801 $generated@@791 $generated@@798 $generated@@777) (=> (< 0 ($generated@@166 $generated@@801)) (=> ($generated@@281 $generated@@791) (= $generated@@777 (+ $generated@@798 1))))))) (=> (=> ($generated@@321 $generated@@801 $generated@@791 $generated@@798 $generated@@777) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@801 $generated@@791 $generated@@798 $generated@@777) (=> (< 0 ($generated@@166 $generated@@801)) (=> ($generated@@281 $generated@@791) (= $generated@@777 (+ $generated@@798 1)))))) (and (=> (= (ControlFlow 0 8) (- 0 11)) (=> ($generated@@321 $generated@@801 $generated@@791 $generated@@798 $generated@@777) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@801 $generated@@791 $generated@@798 $generated@@777) (=> (< 0 ($generated@@166 $generated@@801)) (=> (not ($generated@@281 $generated@@791)) (=> ($generated@@292 $generated@@791) (let (($generated@@861 ($generated@@322 $generated@@791)))
(let (($generated@@862 ($generated@@323 $generated@@791)))
(exists (($generated@@863 Int) ) (!  (and ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@801 ($generated@@165 1)) $generated@@862 $generated@@798 $generated@@863) ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@801 ($generated@@165 1)) $generated@@861 $generated@@863 $generated@@777))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@801 ($generated@@165 1)) $generated@@861 $generated@@863 $generated@@777))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@801 ($generated@@165 1)) $generated@@862 $generated@@798 $generated@@863))
)))))))))) (=> (=> ($generated@@321 $generated@@801 $generated@@791 $generated@@798 $generated@@777) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@801 $generated@@791 $generated@@798 $generated@@777) (=> (< 0 ($generated@@166 $generated@@801)) (=> (not ($generated@@281 $generated@@791)) (=> ($generated@@292 $generated@@791) (let (($generated@@864 ($generated@@322 $generated@@791)))
(let (($generated@@865 ($generated@@323 $generated@@791)))
(exists (($generated@@866 Int) ) (!  (and ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@801 ($generated@@165 1)) $generated@@865 $generated@@798 $generated@@866) ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@801 ($generated@@165 1)) $generated@@864 $generated@@866 $generated@@777))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@801 ($generated@@165 1)) $generated@@864 $generated@@866 $generated@@777))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@801 ($generated@@165 1)) $generated@@865 $generated@@798 $generated@@866))
))))))))) (and (=> (= (ControlFlow 0 8) (- 0 10)) (=> ($generated@@321 $generated@@801 $generated@@791 $generated@@798 $generated@@777) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@801 $generated@@791 $generated@@798 $generated@@777) (=> (< 0 ($generated@@166 $generated@@801)) (=> (not ($generated@@281 $generated@@791)) (=> (not ($generated@@292 $generated@@791)) (let (($generated@@867 ($generated@@324 $generated@@791)))
 (or (= $generated@@798 $generated@@777) (exists (($generated@@868 Int) ) (!  (and ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@801 ($generated@@165 1)) $generated@@867 $generated@@798 $generated@@868) ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@801 ($generated@@165 1)) $generated@@791 $generated@@868 $generated@@777))
 :pattern ( ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@801 ($generated@@165 1)) $generated@@791 $generated@@868 $generated@@777))
 :pattern ( ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@801 ($generated@@165 1)) $generated@@867 $generated@@798 $generated@@868))
)))))))))) (=> (=> ($generated@@321 $generated@@801 $generated@@791 $generated@@798 $generated@@777) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@801 $generated@@791 $generated@@798 $generated@@777) (=> (< 0 ($generated@@166 $generated@@801)) (=> (not ($generated@@281 $generated@@791)) (=> (not ($generated@@292 $generated@@791)) (let (($generated@@869 ($generated@@324 $generated@@791)))
 (or (= $generated@@798 $generated@@777) (exists (($generated@@870 Int) ) (!  (and ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@801 ($generated@@165 1)) $generated@@869 $generated@@798 $generated@@870) ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@801 ($generated@@165 1)) $generated@@791 $generated@@870 $generated@@777))
 :pattern ( ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@801 ($generated@@165 1)) $generated@@791 $generated@@870 $generated@@777))
 :pattern ( ($generated@@87 ($generated@@88 ($generated@@88 $generated@@397)) ($generated@@164 $generated@@801 ($generated@@165 1)) $generated@@869 $generated@@798 $generated@@870))
))))))))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (=> ($generated@@321 $generated@@801 $generated@@791 $generated@@798 $generated@@777) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@801 $generated@@791 $generated@@798 $generated@@777) (=> (= ($generated@@275 0) ($generated@@166 $generated@@801)) (exists (($generated@@871 T@U) ) (!  (and (= (type $generated@@871) $generated@@90) (and ($generated@@325 $generated@@871 $generated@@801) ($generated@@87 ($generated@@88 $generated@@397) $generated@@871 $generated@@791 $generated@@798 $generated@@777)))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) $generated@@871 $generated@@791 $generated@@798 $generated@@777))
)))))) (=> (=> ($generated@@321 $generated@@801 $generated@@791 $generated@@798 $generated@@777) (or ($generated@@87 ($generated@@88 $generated@@397) $generated@@801 $generated@@791 $generated@@798 $generated@@777) (=> (= ($generated@@275 0) ($generated@@166 $generated@@801)) (exists (($generated@@872 T@U) ) (!  (and (= (type $generated@@872) $generated@@90) (and ($generated@@325 $generated@@872 $generated@@801) ($generated@@87 ($generated@@88 $generated@@397) $generated@@872 $generated@@791 $generated@@798 $generated@@777)))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) $generated@@872 $generated@@791 $generated@@798 $generated@@777))
))))) (=> (and (and (and ($generated@@160 $generated@@802) ($generated@@785 $generated@@802)) (= $generated@@798 $generated@@777)) (and (= $generated@@800 $generated@@802) (= (ControlFlow 0 8) 2))) $generated@@814))))))))))))))))))))))))))))))))))
(let (($generated@@873  (=> (and (not ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@796 $generated@@776 $generated@@797)) (= (ControlFlow 0 25) 8)) $generated@@846)))
(let (($generated@@874  (=> ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@796 $generated@@776 $generated@@797) (and (=> (= (ControlFlow 0 22) (- 0 24)) ($generated@@393 ($generated@@277 ($generated@@165 1)))) (=> ($generated@@393 ($generated@@277 ($generated@@165 1))) (and (=> (= (ControlFlow 0 22) (- 0 23)) (<= ($generated@@166 ($generated@@277 ($generated@@165 1))) ($generated@@166 $generated@@778))) (=> (<= ($generated@@166 ($generated@@277 ($generated@@165 1))) ($generated@@166 $generated@@778)) (=> (= $generated@@803 ($generated@@164 $generated@@778 ($generated@@165 1))) (=> (and ($generated@@97 $generated@@803 $generated@@48 $generated@@786) ($generated@@97 $generated@@791 $generated@@81 $generated@@786)) (=> (and (and ($generated@@97 ($generated@@8 $generated@@797) $generated@@46 $generated@@786) ($generated@@97 ($generated@@8 $generated@@777) $generated@@46 $generated@@786)) (and ($generated@@321 ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@791 $generated@@797 $generated@@777) (= (ControlFlow 0 22) 8))) $generated@@846))))))))))
(let (($generated@@875  (and (=> (= (ControlFlow 0 26) (- 0 28)) ($generated@@393 ($generated@@277 ($generated@@165 1)))) (=> ($generated@@393 ($generated@@277 ($generated@@165 1))) (and (=> (= (ControlFlow 0 26) (- 0 27)) (<= ($generated@@166 ($generated@@277 ($generated@@165 1))) ($generated@@166 $generated@@778))) (=> (<= ($generated@@166 ($generated@@277 ($generated@@165 1))) ($generated@@166 $generated@@778)) (=> (and (= $generated@@804 ($generated@@164 $generated@@778 ($generated@@165 1))) ($generated@@97 $generated@@804 $generated@@48 $generated@@786)) (=> (and (and ($generated@@97 $generated@@796 $generated@@81 $generated@@786) ($generated@@97 ($generated@@8 $generated@@776) $generated@@46 $generated@@786)) (and ($generated@@97 ($generated@@8 $generated@@797) $generated@@46 $generated@@786) ($generated@@321 ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@796 $generated@@776 $generated@@797))) (and (=> (= (ControlFlow 0 26) 22) $generated@@874) (=> (= (ControlFlow 0 26) 25) $generated@@873))))))))))
(let (($generated@@876  (=> (not (= $generated@@776 $generated@@777)) (and (=> (= (ControlFlow 0 29) 26) $generated@@875) (=> (= (ControlFlow 0 29) 7) $generated@@812)))))
(let (($generated@@877  (=> (and (= $generated@@776 $generated@@777) (= (ControlFlow 0 6) 2)) $generated@@814)))
(let (($generated@@878  (=> (= $generated@@791 ($generated@@311 $generated@@805)) (=> (and ($generated@@79 $generated@@805 $generated@@81) ($generated@@97 $generated@@805 $generated@@81 $generated@@786)) (=> (and (and (and ($generated@@79 $generated@@796 $generated@@81) ($generated@@97 $generated@@796 $generated@@81 $generated@@786)) (= $generated@@806 $generated@@805)) (and ($generated@@79 $generated@@806 $generated@@81) (= $generated@@796 $generated@@806))) (and (=> (= (ControlFlow 0 30) 6) $generated@@877) (=> (= (ControlFlow 0 30) 29) $generated@@876)))))))
(let (($generated@@879  (=> (not (= $generated@@791 ($generated@@80 $generated@@792 $generated@@793))) (and (=> (= (ControlFlow 0 31) 30) $generated@@878) (=> (= (ControlFlow 0 31) 5) $generated@@813)))))
(let (($generated@@880  (=> (not (= $generated@@791 $generated@@188)) (and (=> (= (ControlFlow 0 55) 54) $generated@@845) (=> (= (ControlFlow 0 55) 31) $generated@@879)))))
(let (($generated@@881  (=> (and (= $generated@@791 $generated@@188) (= (ControlFlow 0 4) 2)) $generated@@814)))
(let (($generated@@882  (=> (< 0 ($generated@@166 $generated@@778)) (and (=> (= (ControlFlow 0 56) 4) $generated@@881) (=> (= (ControlFlow 0 56) 55) $generated@@880)))))
(let (($generated@@883  (=> (<= ($generated@@166 $generated@@778) 0) (=> (and (and (and ($generated@@160 $generated@@807) ($generated@@785 $generated@@807)) (= $generated@@786 $generated@@807)) (and (forall (($generated@@884 T@U) ($generated@@885 T@U) ($generated@@886 Int) ($generated@@887 Int) ) (!  (=> (and (and (= (type $generated@@884) $generated@@90) (= (type $generated@@885) $generated@@82)) (and ($generated@@79 $generated@@885 $generated@@81) (and ($generated@@155 $generated@@884 $generated@@778) ($generated@@87 ($generated@@88 $generated@@397) $generated@@884 $generated@@885 $generated@@886 $generated@@887)))) (= $generated@@886 $generated@@887))
 :no-pattern (type $generated@@884)
 :no-pattern (type $generated@@885)
 :no-pattern ($generated $generated@@884)
 :no-pattern ($generated@@0 $generated@@884)
 :no-pattern ($generated $generated@@885)
 :no-pattern ($generated@@0 $generated@@885)
)) (= (ControlFlow 0 3) 2))) $generated@@814))))
(let (($generated@@888  (=> (and (= $generated@@808 ($generated@@196 $generated@@809 $generated@@810 $generated@@60 false)) ($generated@@654 $generated@@791)) (=> (and (and ($generated@@160 $generated@@786) ($generated@@785 $generated@@786)) (and (= $generated@@810 $generated@@786) (forall (($generated@@889 T@U) ($generated@@890 T@U) ($generated@@891 Int) ($generated@@892 Int) ) (!  (=> (and (= (type $generated@@889) $generated@@90) (= (type $generated@@890) $generated@@82)) (=> (and (and ($generated@@79 $generated@@890 $generated@@81) ($generated@@87 ($generated@@88 $generated@@397) $generated@@889 $generated@@890 $generated@@891 $generated@@892)) (or ($generated@@155 $generated@@889 $generated@@778) (and (= $generated@@889 $generated@@778) (or (< ($generated@@657 $generated@@890) ($generated@@657 $generated@@791)) (and (= ($generated@@657 $generated@@890) ($generated@@657 $generated@@791)) (or (and (<= 0 $generated@@891) (< $generated@@891 $generated@@776)) (and (= $generated@@891 $generated@@776) (and (<= 0 $generated@@892) (< $generated@@892 $generated@@777))))))))) (= $generated@@891 $generated@@892)))
 :no-pattern (type $generated@@889)
 :no-pattern (type $generated@@890)
 :no-pattern ($generated $generated@@889)
 :no-pattern ($generated@@0 $generated@@889)
 :no-pattern ($generated $generated@@890)
 :no-pattern ($generated@@0 $generated@@890)
)))) (and (=> (= (ControlFlow 0 57) 56) $generated@@882) (=> (= (ControlFlow 0 57) 3) $generated@@883))))))
(let (($generated@@893  (=> (and ($generated@@160 $generated@@810) ($generated@@785 $generated@@810)) (=> (and (and (and (and ($generated@@79 $generated@@791 $generated@@81) ($generated@@97 $generated@@791 $generated@@81 $generated@@810)) ($generated@@654 $generated@@791)) (= 3 $generated@@320)) (and (and ($generated@@321 $generated@@778 $generated@@791 $generated@@776 $generated@@777) (and ($generated@@87 ($generated@@88 $generated@@397) $generated@@778 $generated@@791 $generated@@776 $generated@@777) (and (=> (< 0 ($generated@@166 $generated@@778)) (ite ($generated@@281 $generated@@791) (= $generated@@777 (+ $generated@@776 1)) (ite ($generated@@292 $generated@@791) (let (($generated@@894 ($generated@@322 $generated@@791)))
(let (($generated@@895 ($generated@@323 $generated@@791)))
(exists (($generated@@896 Int) ) (!  (and ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@895 $generated@@776 $generated@@896) ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@894 $generated@@896 $generated@@777))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@894 $generated@@896 $generated@@777))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@895 $generated@@776 $generated@@896))
)))) (let (($generated@@897 ($generated@@324 $generated@@791)))
 (or (= $generated@@776 $generated@@777) (exists (($generated@@898 Int) ) (!  (and ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@897 $generated@@776 $generated@@898) ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@791 $generated@@898 $generated@@777))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@791 $generated@@898 $generated@@777))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) ($generated@@164 $generated@@778 ($generated@@165 1)) $generated@@897 $generated@@776 $generated@@898))
))))))) (=> (= ($generated@@275 0) ($generated@@166 $generated@@778)) (exists (($generated@@899 T@U) ) (!  (and (= (type $generated@@899) $generated@@90) (and ($generated@@325 $generated@@899 $generated@@778) ($generated@@87 ($generated@@88 $generated@@397) $generated@@899 $generated@@791 $generated@@776 $generated@@777)))
 :pattern ( ($generated@@87 ($generated@@88 $generated@@397) $generated@@899 $generated@@791 $generated@@776 $generated@@777))
)))))) (= (ControlFlow 0 58) 57))) $generated@@888))))
$generated@@893))))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U) T@U)
(declare-fun $generated@@219 (T@U) Bool)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (Int) Int)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@263 (T@U T@U) T@U)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@371 (T@U) Bool)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@T T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@T) T@U)
(declare-fun $generated@@454 () T@T)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@503 (T@U Int) T@U)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@625 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@79 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@68) (= (type $generated@@144) $generated@@68)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert  (and (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@72)
 :pattern ( ($generated@@154 $generated@@156))
)) (= (type $generated@@155) $generated@@140)))
(assert (= ($generated@@154 $generated@@155) $generated@@63))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@68)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@161) $generated@@68)) ($generated@@136 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@136 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@81 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@71 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@81) (= (type $generated@@212) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@213) ($generated@@70 $generated@@4))) (= (type $generated@@215) $generated@@81)) (= (type $generated@@216) ($generated@@70 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@220 T@U) ) (! (= (type ($generated@@218 $generated@@220)) $generated@@68)
 :pattern ( ($generated@@218 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (= (type $generated@@221) $generated@@68) (= (type $generated@@222) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@219 $generated@@222)) ($generated@@78 $generated@@155 ($generated@@218 $generated@@221) $generated@@222))
 :pattern ( ($generated@@78 $generated@@155 ($generated@@218 $generated@@221) $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@140)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@68) (= (type $generated@@228) $generated@@68)) (= (type $generated@@229) $generated@@149)) (= (type $generated@@230) $generated@@149)) (= ($generated@@136 ($generated@@223 $generated@@229 $generated@@230) ($generated@@139 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@136 ($generated@@223 $generated@@229 $generated@@230) ($generated@@139 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@68) ($generated@@136 $generated@@155 ($generated@@218 $generated@@231)))
 :pattern ( ($generated@@136 $generated@@155 ($generated@@218 $generated@@231)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@140) (= (type $generated@@233) $generated@@140)) (= ($generated@@146 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@146 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@140) (= (type $generated@@236) $generated@@140)) (= ($generated@@234 $generated@@235 $generated@@236) (= $generated@@235 $generated@@236)))
 :pattern ( ($generated@@234 $generated@@235 $generated@@236))
)))
(assert  (and (forall (($generated@@240 T@U) ) (! (= (type ($generated@@238 $generated@@240)) $generated@@149)
 :pattern ( ($generated@@238 $generated@@240))
)) (forall (($generated@@241 T@U) ) (! (= (type ($generated@@239 $generated@@241)) $generated@@140)
 :pattern ( ($generated@@239 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (= (type $generated@@242) $generated@@140) (= (type $generated@@243) $generated@@140)) (and ($generated@@237 $generated@@242) ($generated@@237 $generated@@243))) (= ($generated@@234 $generated@@242 $generated@@243)  (and (= ($generated@@238 $generated@@242) ($generated@@238 $generated@@243)) ($generated@@234 ($generated@@239 $generated@@242) ($generated@@239 $generated@@243)))))
 :pattern ( ($generated@@234 $generated@@242 $generated@@243) ($generated@@237 $generated@@242))
 :pattern ( ($generated@@234 $generated@@242 $generated@@243) ($generated@@237 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@247) $generated@@68)) (= ($generated@@136 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@149) ($generated@@0 ($generated@@85 $generated@@246 $generated@@248))) ($generated@@224 $generated@@248 $generated@@247))
 :pattern ( ($generated@@85 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@136 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@68)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@252) $generated@@68)) (= ($generated@@136 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@149) ($generated@@0 ($generated@@85 $generated@@251 $generated@@253))) ($generated@@224 $generated@@253 $generated@@252))
 :pattern ( ($generated@@85 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@136 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@254 $generated@@255) $generated@@255)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (let (($generated@@258 (type $generated@@257)))
(= (type ($generated@@256 $generated@@257)) $generated@@258))
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= ($generated@@256 $generated@@259) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@261) $generated@@140) (= (type $generated@@262) $generated@@140)) (and ($generated@@260 $generated@@261) ($generated@@260 $generated@@262))) (= ($generated@@234 $generated@@261 $generated@@262) true))
 :pattern ( ($generated@@234 $generated@@261 $generated@@262) ($generated@@260 $generated@@261))
 :pattern ( ($generated@@234 $generated@@261 $generated@@262) ($generated@@260 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (! (= (type ($generated@@263 $generated@@264 $generated@@265)) $generated@@140)
 :pattern ( ($generated@@263 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@68) (= (type $generated@@267) $generated@@149)) (= (type $generated@@268) $generated@@140)) (= ($generated@@136 ($generated@@263 $generated@@267 $generated@@268) ($generated@@218 $generated@@266))  (and ($generated@@224 $generated@@267 $generated@@266) ($generated@@136 $generated@@268 ($generated@@218 $generated@@266)))))
 :pattern ( ($generated@@136 ($generated@@263 $generated@@267 $generated@@268) ($generated@@218 $generated@@266)))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@68) (= (type $generated@@271) $generated@@68)) (= (type $generated@@272) $generated@@149)) (= (type $generated@@273) $generated@@149)) (= (type $generated@@274) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@219 $generated@@274)) (= ($generated@@78 ($generated@@223 $generated@@272 $generated@@273) ($generated@@139 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@78 ($generated@@223 $generated@@272 $generated@@273) ($generated@@139 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@140) (= ($generated@@138 $generated@@275) (= ($generated@@154 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@140) (= ($generated@@260 $generated@@276) (= ($generated@@154 $generated@@276) $generated@@63)))
 :pattern ( ($generated@@260 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@140) (= ($generated@@237 $generated@@277) (= ($generated@@154 $generated@@277) $generated@@65)))
 :pattern ( ($generated@@237 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@140) ($generated@@138 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@149) (= (type $generated@@280) $generated@@149)) (= $generated@@278 ($generated@@223 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@138 $generated@@278))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@140) ($generated@@237 $generated@@281)) (exists (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (and (and (= (type $generated@@282) $generated@@149) (= (type $generated@@283) $generated@@140)) (= $generated@@281 ($generated@@263 $generated@@282 $generated@@283)))
 :no-pattern (type $generated@@282)
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
)))
 :pattern ( ($generated@@237 $generated@@281))
)))
(assert  (and (and (forall (($generated@@288 T@T) ) (= ($generated@@1 ($generated@@286 $generated@@288)) 17)) (forall (($generated@@289 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@286 $generated@@289))
))) (forall (($generated@@290 T@T) ) (! (= (type ($generated@@284 $generated@@290)) ($generated@@286 $generated@@290))
 :pattern ( ($generated@@284 $generated@@290))
))))
(assert (forall (($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@291)) 0)
 :pattern ( ($generated@@284 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@140) ($generated@@260 $generated@@292)) (= $generated@@292 $generated@@155))
 :pattern ( ($generated@@260 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@149)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@68) (= (type $generated@@297) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@269 ($generated@@293 $generated@@295) $generated@@296 $generated@@297) ($generated@@78 $generated@@295 $generated@@296 $generated@@297)))
 :pattern ( ($generated@@269 ($generated@@293 $generated@@295) $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@300 T@T) ) (! (= (type ($generated@@299 $generated@@300)) ($generated@@80 $generated@@300 $generated@@2))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@83 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@80 $generated@@302 $generated@@2)) (and (= (= ($generated@@298 $generated@@301) 0) (= $generated@@301 ($generated@@299 $generated@@302))) (=> (not (= ($generated@@298 $generated@@301) 0)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) (< 0 ($generated ($generated@@85 $generated@@301 $generated@@303))))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@298 $generated@@301))
)))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@73)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@68) (and (= ($generated@@76 ($generated@@218 $generated@@306)) $generated@@64) (= ($generated@@304 ($generated@@218 $generated@@306)) $generated@@67)))
 :pattern ( ($generated@@218 $generated@@306))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 18)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@80 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@85 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@85 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 19)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@80 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@85 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@85 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@83 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@80 $generated@@344 $generated@@2)) (= ($generated@@158 $generated@@343) (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@344) (and (<= 0 ($generated ($generated@@85 $generated@@343 $generated@@345))) (<= ($generated ($generated@@85 $generated@@343 $generated@@345)) ($generated@@298 $generated@@343))))
 :pattern ( ($generated@@85 $generated@@343 $generated@@345))
)))))
 :pattern ( ($generated@@158 $generated@@343))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@311 (type $generated@@346))))
(let (($generated@@348 ($generated@@310 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@309 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@308 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@85 ($generated@@307 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@307 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@311 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@80 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@311 (type $generated@@353))))
(let (($generated@@355 ($generated@@310 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@309 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@308 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@85 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@329 (type $generated@@357))))
(let (($generated@@359 ($generated@@328 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@327 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@326 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@325 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@329 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@80 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@329 (type $generated@@364))))
(let (($generated@@366 ($generated@@328 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@327 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@326 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@85 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@369) $generated@@68)) (= ($generated@@136 $generated@@368 ($generated@@157 $generated@@369)) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@149) (< 0 ($generated ($generated@@85 $generated@@368 $generated@@370)))) ($generated@@224 $generated@@370 $generated@@369))
 :pattern ( ($generated@@85 $generated@@368 $generated@@370))
))))
 :pattern ( ($generated@@136 $generated@@368 ($generated@@157 $generated@@369)))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@140) ($generated@@371 $generated@@372)) (or ($generated@@260 $generated@@372) ($generated@@237 $generated@@372)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@374) $generated@@68)) (= (type $generated@@375) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@373 ($generated@@244 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@149) ($generated@@0 ($generated@@85 $generated@@373 $generated@@376))) ($generated@@269 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@85 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@78 $generated@@373 ($generated@@244 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@378) $generated@@68)) (= (type $generated@@379) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@377 ($generated@@249 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@149) ($generated@@0 ($generated@@85 $generated@@377 $generated@@380))) ($generated@@269 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@85 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@78 $generated@@377 ($generated@@249 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@85 ($generated@@299 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@85 ($generated@@299 $generated@@382) $generated@@381)))
)))
(assert  (and (and (forall (($generated@@386 T@U) ) (! (= (type ($generated@@383 $generated@@386)) ($generated@@80 $generated@@149 $generated@@4))
 :pattern ( ($generated@@383 $generated@@386))
)) (forall (($generated@@387 T@T) ($generated@@388 T@U) ) (! (= (type ($generated@@384 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@384 $generated@@387 $generated@@388))
))) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@311 (type $generated@@389))))
(let (($generated@@391 ($generated@@310 (type $generated@@389))))
(= (type ($generated@@385 $generated@@389)) ($generated@@80 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@385 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@309 $generated@@149 $generated@@149)) (= (type $generated@@393) $generated@@149)) (= ($generated@@0 ($generated@@85 ($generated@@383 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@85 ($generated@@307 $generated@@392) ($generated@@147 ($generated@@384 $generated@@140 $generated@@393)))) (= ($generated@@85 ($generated@@385 $generated@@392) ($generated@@147 ($generated@@384 $generated@@140 $generated@@393))) ($generated@@148 ($generated@@384 $generated@@140 $generated@@393))))))
 :pattern ( ($generated@@85 ($generated@@383 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@80 $generated@@149 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@329 (type $generated@@397))))
(let (($generated@@399 ($generated@@328 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@80 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@327 $generated@@149 $generated@@149)) (= (type $generated@@401) $generated@@149)) (= ($generated@@0 ($generated@@85 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@85 ($generated@@325 $generated@@400) ($generated@@147 ($generated@@384 $generated@@140 $generated@@401)))) (= ($generated@@85 ($generated@@395 $generated@@400) ($generated@@147 ($generated@@384 $generated@@140 $generated@@401))) ($generated@@148 ($generated@@384 $generated@@140 $generated@@401))))))
 :pattern ( ($generated@@85 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@310 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@309 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@85 ($generated@@350 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@85 ($generated@@307 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@85 ($generated@@385 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@85 ($generated@@307 $generated@@402) $generated@@406))
 :pattern ( ($generated@@85 ($generated@@385 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@85 ($generated@@350 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@328 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@327 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@85 ($generated@@361 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@85 ($generated@@325 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@85 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@407) $generated@@411))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@85 ($generated@@361 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@68)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@309 $generated@@149 $generated@@149)) (= (type $generated@@416) $generated@@68)) (= (type $generated@@417) $generated@@68)) (= (type $generated@@418) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@307 $generated@@415) $generated@@419))) (and ($generated@@269 ($generated@@85 ($generated@@385 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@269 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@85 ($generated@@385 $generated@@415) $generated@@419))
 :pattern ( ($generated@@85 ($generated@@307 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@78 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@68)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@327 $generated@@149 $generated@@149)) (= (type $generated@@424) $generated@@68)) (= (type $generated@@425) $generated@@68)) (= (type $generated@@426) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@423) $generated@@427))) (and ($generated@@269 ($generated@@85 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@269 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@78 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (= (type $generated@@428) $generated@@68) (= (type $generated@@429) $generated@@140)) ($generated@@136 $generated@@429 ($generated@@218 $generated@@428))) (or ($generated@@260 $generated@@429) ($generated@@237 $generated@@429)))
 :pattern ( ($generated@@237 $generated@@429) ($generated@@136 $generated@@429 ($generated@@218 $generated@@428)))
 :pattern ( ($generated@@260 $generated@@429) ($generated@@136 $generated@@429 ($generated@@218 $generated@@428)))
)))
(assert (forall (($generated@@431 T@T) ) (! (= (type ($generated@@430 $generated@@431)) ($generated@@80 $generated@@431 $generated@@4))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@329 (type $generated@@432))))
(let (($generated@@434 ($generated@@328 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@327 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@326 $generated@@434 $generated@@433)) (= ($generated@@325 $generated@@432) ($generated@@430 $generated@@434))))))
 :pattern ( ($generated@@325 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@329 (type $generated@@435))))
(let (($generated@@437 ($generated@@328 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@327 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@326 $generated@@437 $generated@@436)) (= ($generated@@361 $generated@@435) ($generated@@430 $generated@@436))))))
 :pattern ( ($generated@@361 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@329 (type $generated@@438))))
(let (($generated@@440 ($generated@@328 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@327 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@326 $generated@@440 $generated@@439)) (= ($generated@@394 $generated@@438) ($generated@@430 $generated@@149))))))
 :pattern ( ($generated@@394 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@311 (type $generated@@441))))
(let (($generated@@443 ($generated@@310 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@309 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@308 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@149) (= (type $generated@@445) $generated@@149)) ($generated@@0 ($generated@@85 ($generated@@383 $generated@@441) ($generated@@293 ($generated@@223 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@383 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@329 (type $generated@@446))))
(let (($generated@@448 ($generated@@328 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@327 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@326 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (and (and (= (type $generated@@449) $generated@@149) (= (type $generated@@450) $generated@@149)) ($generated@@0 ($generated@@85 ($generated@@394 $generated@@446) ($generated@@293 ($generated@@223 $generated@@449 $generated@@450)))))
 :no-pattern (type $generated@@449)
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@394 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@149) ($generated@@224 $generated@@451 $generated@@46)) (and (= ($generated@@293 ($generated@@384 $generated@@2 $generated@@451)) $generated@@451) ($generated@@136 ($generated@@384 $generated@@2 $generated@@451) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@451 $generated@@46))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@149) ($generated@@224 $generated@@452 $generated@@47)) (and (= ($generated@@293 ($generated@@384 $generated@@3 $generated@@452)) $generated@@452) ($generated@@136 ($generated@@384 $generated@@3 $generated@@452) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@452 $generated@@47))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@149) ($generated@@224 $generated@@453 $generated@@44)) (and (= ($generated@@293 ($generated@@384 $generated@@4 $generated@@453)) $generated@@453) ($generated@@136 ($generated@@384 $generated@@4 $generated@@453) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@453 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@454) 20))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@149) ($generated@@224 $generated@@455 $generated@@45)) (and (= ($generated@@293 ($generated@@384 $generated@@454 $generated@@455)) $generated@@455) ($generated@@136 ($generated@@384 $generated@@454 $generated@@455) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@455 $generated@@45))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@68) (= ($generated@@224 ($generated@@293 $generated@@456) $generated@@457) ($generated@@136 $generated@@456 $generated@@457)))
 :pattern ( ($generated@@224 ($generated@@293 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@83 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@80 $generated@@459 $generated@@2)) (<= 0 ($generated@@298 $generated@@458))))
 :pattern ( ($generated@@298 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@287 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@286 $generated@@461)) (<= 0 ($generated@@285 $generated@@460))))
 :pattern ( ($generated@@285 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@68) (= (type $generated@@465) $generated@@68)) (= ($generated@@462 ($generated@@412 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@412 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@68)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@68) (= (type $generated@@469) $generated@@68)) (= ($generated@@466 ($generated@@412 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@412 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@68) (= (type $generated@@471) $generated@@68)) (= ($generated@@76 ($generated@@412 $generated@@470 $generated@@471)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@68)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@68) (= (type $generated@@475) $generated@@68)) (= ($generated@@472 ($generated@@420 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@420 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@68)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@68) (= (type $generated@@479) $generated@@68)) (= ($generated@@476 ($generated@@420 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@420 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@68) (= (type $generated@@481) $generated@@68)) (= ($generated@@76 ($generated@@420 $generated@@480 $generated@@481)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@149) (= (type $generated@@483) $generated@@149)) (= ($generated@@154 ($generated@@223 $generated@@482 $generated@@483)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@68)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@68) (= (type $generated@@487) $generated@@68)) (= ($generated@@484 ($generated@@139 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@139 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@68)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@68) (= (type $generated@@491) $generated@@68)) (= ($generated@@488 ($generated@@139 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@139 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@149) (= (type $generated@@493) $generated@@149)) (= ($generated@@147 ($generated@@223 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@223 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@149) (= (type $generated@@495) $generated@@149)) (= ($generated@@148 ($generated@@223 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@223 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@149) (= (type $generated@@497) $generated@@140)) (= ($generated@@154 ($generated@@263 $generated@@496 $generated@@497)) $generated@@65))
 :pattern ( ($generated@@263 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@149) (= (type $generated@@499) $generated@@140)) (= ($generated@@238 ($generated@@263 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@263 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@149) (= (type $generated@@501) $generated@@140)) (= ($generated@@239 ($generated@@263 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@263 $generated@@500 $generated@@501))
)))
(assert  (and (forall (($generated@@504 T@U) ) (! (= (type ($generated@@502 $generated@@504)) $generated@@68)
 :pattern ( ($generated@@502 $generated@@504))
)) (forall (($generated@@505 T@U) ($generated@@506 Int) ) (! (let (($generated@@507 ($generated@@287 (type $generated@@505))))
(= (type ($generated@@503 $generated@@505 $generated@@506)) $generated@@507))
 :pattern ( ($generated@@503 $generated@@505 $generated@@506))
))))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@286 $generated@@149)) (= (type $generated@@509) $generated@@68)) (= (type $generated@@510) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@508 ($generated@@502 $generated@@509) $generated@@510) (forall (($generated@@511 Int) ) (!  (=> (and (<= 0 $generated@@511) (< $generated@@511 ($generated@@285 $generated@@508))) ($generated@@269 ($generated@@503 $generated@@508 $generated@@511) $generated@@509 $generated@@510))
 :pattern ( ($generated@@503 $generated@@508 $generated@@511))
))))
 :pattern ( ($generated@@78 $generated@@508 ($generated@@502 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@513 Int) ) (! (= ($generated@@512 ($generated@@79 $generated@@513)) $generated@@513)
 :pattern ( ($generated@@79 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@68)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@68) (= ($generated@@514 ($generated@@244 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@244 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@68) (= ($generated@@76 ($generated@@244 $generated@@517)) $generated@@54))
 :pattern ( ($generated@@244 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@68)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@68) (= ($generated@@518 ($generated@@249 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@249 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@68) (= ($generated@@76 ($generated@@249 $generated@@521)) $generated@@55))
 :pattern ( ($generated@@249 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@68)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@68) (= ($generated@@522 ($generated@@157 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@157 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@68) (= ($generated@@76 ($generated@@157 $generated@@525)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@68) (= ($generated@@526 ($generated@@502 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@502 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@68) (= ($generated@@76 ($generated@@502 $generated@@529)) $generated@@57))
 :pattern ( ($generated@@502 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@68)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@68) (= ($generated@@530 ($generated@@218 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@218 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 (type $generated@@533)))
(= ($generated@@384 $generated@@534 ($generated@@293 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@293 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@309 $generated@@149 $generated@@149)) (= (type $generated@@536) $generated@@68)) (= (type $generated@@537) $generated@@68)) (= ($generated@@136 $generated@@535 ($generated@@412 $generated@@536 $generated@@537)) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@307 $generated@@535) $generated@@538))) (and ($generated@@224 ($generated@@85 ($generated@@385 $generated@@535) $generated@@538) $generated@@537) ($generated@@224 $generated@@538 $generated@@536)))
 :pattern ( ($generated@@85 ($generated@@385 $generated@@535) $generated@@538))
 :pattern ( ($generated@@85 ($generated@@307 $generated@@535) $generated@@538))
))))
 :pattern ( ($generated@@136 $generated@@535 ($generated@@412 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@327 $generated@@149 $generated@@149)) (= (type $generated@@540) $generated@@68)) (= (type $generated@@541) $generated@@68)) (= ($generated@@136 $generated@@539 ($generated@@420 $generated@@540 $generated@@541)) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@539) $generated@@542))) (and ($generated@@224 ($generated@@85 ($generated@@395 $generated@@539) $generated@@542) $generated@@541) ($generated@@224 $generated@@542 $generated@@540)))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@539) $generated@@542))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@539) $generated@@542))
))))
 :pattern ( ($generated@@136 $generated@@539 ($generated@@420 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@149) (= (type $generated@@546) $generated@@149)) (< ($generated@@543 $generated@@545) ($generated@@544 ($generated@@223 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@223 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@149) (= (type $generated@@548) $generated@@149)) (< ($generated@@543 $generated@@548) ($generated@@544 ($generated@@223 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@223 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@149) (= (type $generated@@550) $generated@@140)) (< ($generated@@543 $generated@@549) ($generated@@544 ($generated@@263 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@263 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@149) (= (type $generated@@552) $generated@@140)) (< ($generated@@544 $generated@@552) ($generated@@544 ($generated@@263 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@263 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@149) (= (type $generated@@554) $generated@@68)) (= (type $generated@@555) $generated@@68)) ($generated@@224 $generated@@553 ($generated@@412 $generated@@554 $generated@@555))) (and (= ($generated@@293 ($generated@@384 ($generated@@309 $generated@@149 $generated@@149) $generated@@553)) $generated@@553) ($generated@@136 ($generated@@384 ($generated@@309 $generated@@149 $generated@@149) $generated@@553) ($generated@@412 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@224 $generated@@553 ($generated@@412 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@149) (= (type $generated@@557) $generated@@68)) (= (type $generated@@558) $generated@@68)) ($generated@@224 $generated@@556 ($generated@@420 $generated@@557 $generated@@558))) (and (= ($generated@@293 ($generated@@384 ($generated@@327 $generated@@149 $generated@@149) $generated@@556)) $generated@@556) ($generated@@136 ($generated@@384 ($generated@@327 $generated@@149 $generated@@149) $generated@@556) ($generated@@420 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@224 $generated@@556 ($generated@@420 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@68) (= (type $generated@@560) $generated@@68)) (= (type $generated@@561) $generated@@149)) ($generated@@224 $generated@@561 ($generated@@139 $generated@@559 $generated@@560))) (and (= ($generated@@293 ($generated@@384 $generated@@140 $generated@@561)) $generated@@561) ($generated@@136 ($generated@@384 $generated@@140 $generated@@561) ($generated@@139 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@224 $generated@@561 ($generated@@139 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@140) (= (type $generated@@563) $generated@@68)) (= (type $generated@@564) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@219 $generated@@564) (and ($generated@@237 $generated@@562) ($generated@@78 $generated@@562 ($generated@@218 $generated@@563) $generated@@564)))) ($generated@@269 ($generated@@238 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@269 ($generated@@238 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
 (not ($generated@@0 ($generated@@85 ($generated@@430 $generated@@566) $generated@@565))))
 :pattern ( (let (($generated@@566 (type $generated@@565)))
($generated@@85 ($generated@@430 $generated@@566) $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@68) (= (type $generated@@568) $generated@@68)) (and (= ($generated@@76 ($generated@@139 $generated@@567 $generated@@568)) $generated@@62) (= ($generated@@304 ($generated@@139 $generated@@567 $generated@@568)) $generated@@66)))
 :pattern ( ($generated@@139 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@140) (= ($generated@@543 ($generated@@293 $generated@@569)) ($generated@@544 $generated@@569)))
 :pattern ( ($generated@@543 ($generated@@293 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@149) ($generated@@224 $generated@@570 ($generated@@79 0))) (and (= ($generated@@293 ($generated@@384 $generated@@2 $generated@@570)) $generated@@570) ($generated@@136 ($generated@@384 ($generated@@80 $generated@@149 $generated@@4) $generated@@570) ($generated@@79 0))))
 :pattern ( ($generated@@224 $generated@@570 ($generated@@79 0)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@149) (= (type $generated@@572) $generated@@68)) ($generated@@224 $generated@@571 ($generated@@244 $generated@@572))) (and (= ($generated@@293 ($generated@@384 ($generated@@80 $generated@@149 $generated@@4) $generated@@571)) $generated@@571) ($generated@@136 ($generated@@384 ($generated@@80 $generated@@149 $generated@@4) $generated@@571) ($generated@@244 $generated@@572))))
 :pattern ( ($generated@@224 $generated@@571 ($generated@@244 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@149) (= (type $generated@@574) $generated@@68)) ($generated@@224 $generated@@573 ($generated@@249 $generated@@574))) (and (= ($generated@@293 ($generated@@384 ($generated@@80 $generated@@149 $generated@@4) $generated@@573)) $generated@@573) ($generated@@136 ($generated@@384 ($generated@@80 $generated@@149 $generated@@4) $generated@@573) ($generated@@249 $generated@@574))))
 :pattern ( ($generated@@224 $generated@@573 ($generated@@249 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@149) (= (type $generated@@576) $generated@@68)) ($generated@@224 $generated@@575 ($generated@@157 $generated@@576))) (and (= ($generated@@293 ($generated@@384 ($generated@@80 $generated@@149 $generated@@2) $generated@@575)) $generated@@575) ($generated@@136 ($generated@@384 ($generated@@80 $generated@@149 $generated@@2) $generated@@575) ($generated@@157 $generated@@576))))
 :pattern ( ($generated@@224 $generated@@575 ($generated@@157 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@149) (= (type $generated@@578) $generated@@68)) ($generated@@224 $generated@@577 ($generated@@502 $generated@@578))) (and (= ($generated@@293 ($generated@@384 ($generated@@286 $generated@@149) $generated@@577)) $generated@@577) ($generated@@136 ($generated@@384 ($generated@@286 $generated@@149) $generated@@577) ($generated@@502 $generated@@578))))
 :pattern ( ($generated@@224 $generated@@577 ($generated@@502 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@68) (= (type $generated@@580) $generated@@149)) ($generated@@224 $generated@@580 ($generated@@218 $generated@@579))) (and (= ($generated@@293 ($generated@@384 $generated@@140 $generated@@580)) $generated@@580) ($generated@@136 ($generated@@384 $generated@@140 $generated@@580) ($generated@@218 $generated@@579))))
 :pattern ( ($generated@@224 $generated@@580 ($generated@@218 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@140) (= (type $generated@@582) $generated@@68)) (= (type $generated@@583) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@219 $generated@@583) (and ($generated@@237 $generated@@581) ($generated@@78 $generated@@581 ($generated@@218 $generated@@582) $generated@@583)))) ($generated@@78 ($generated@@239 $generated@@581) ($generated@@218 $generated@@582) $generated@@583))
 :pattern ( ($generated@@78 ($generated@@239 $generated@@581) ($generated@@218 $generated@@582) $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@584 ($generated@@157 $generated@@585) $generated@@586) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@149) (< 0 ($generated ($generated@@85 $generated@@584 $generated@@587)))) ($generated@@269 $generated@@587 $generated@@585 $generated@@586))
 :pattern ( ($generated@@85 $generated@@584 $generated@@587))
))))
 :pattern ( ($generated@@78 $generated@@584 ($generated@@157 $generated@@585) $generated@@586))
)))
(assert (= $generated@@155 ($generated@@256 $generated@@155)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@140) (= (type $generated@@589) $generated@@68)) (= (type $generated@@590) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@219 $generated@@590) (and ($generated@@138 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@68) ($generated@@78 $generated@@588 ($generated@@139 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@78 $generated@@588 ($generated@@139 $generated@@589 $generated@@591) $generated@@590))
))))) ($generated@@269 ($generated@@147 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@269 ($generated@@147 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@140) (= (type $generated@@593) $generated@@68)) (= (type $generated@@594) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@219 $generated@@594) (and ($generated@@138 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@68) ($generated@@78 $generated@@592 ($generated@@139 $generated@@595 $generated@@593) $generated@@594))
 :pattern ( ($generated@@78 $generated@@592 ($generated@@139 $generated@@595 $generated@@593) $generated@@594))
))))) ($generated@@269 ($generated@@148 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@269 ($generated@@148 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@149) (= (type $generated@@597) $generated@@149)) (= ($generated@@223 ($generated@@256 $generated@@596) ($generated@@256 $generated@@597)) ($generated@@256 ($generated@@223 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@223 ($generated@@256 $generated@@596) ($generated@@256 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@149) (= (type $generated@@599) $generated@@140)) (= ($generated@@263 ($generated@@256 $generated@@598) ($generated@@256 $generated@@599)) ($generated@@256 ($generated@@263 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@263 ($generated@@256 $generated@@598) ($generated@@256 $generated@@599)))
)))
(assert (forall (($generated@@600 Int) ) (! (= ($generated@@293 ($generated@@8 ($generated@@254 $generated@@600))) ($generated@@256 ($generated@@293 ($generated@@8 $generated@@600))))
 :pattern ( ($generated@@293 ($generated@@8 ($generated@@254 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ) (! (= ($generated@@293 ($generated@@256 $generated@@601)) ($generated@@256 ($generated@@293 $generated@@601)))
 :pattern ( ($generated@@293 ($generated@@256 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@287 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@286 $generated@@603)) (= ($generated@@285 $generated@@602) 0)) (= $generated@@602 ($generated@@284 $generated@@603))))
 :pattern ( ($generated@@285 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@605)))
 (=> (and (and (= (type $generated@@604) ($generated@@80 $generated@@607 $generated@@2)) (= (type $generated@@606) $generated@@2)) (<= 0 ($generated $generated@@606))) (= ($generated@@298 ($generated@@86 $generated@@604 $generated@@605 $generated@@606)) (+ (- ($generated@@298 $generated@@604) ($generated ($generated@@85 $generated@@604 $generated@@605))) ($generated $generated@@606)))))
 :pattern ( ($generated@@298 ($generated@@86 $generated@@604 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@609) $generated@@2)) ($generated@@78 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@78 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@611) $generated@@3)) ($generated@@78 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@78 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@613) $generated@@4)) ($generated@@78 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@78 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@615) $generated@@454)) ($generated@@78 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@78 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@617) $generated@@149)) ($generated@@78 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@78 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@618) $generated@@68) (= (type $generated@@619) $generated@@149)) (= (type $generated@@620) $generated@@140)) (= (type $generated@@621) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@219 $generated@@621)) (= ($generated@@78 ($generated@@263 $generated@@619 $generated@@620) ($generated@@218 $generated@@618) $generated@@621)  (and ($generated@@269 $generated@@619 $generated@@618 $generated@@621) ($generated@@78 $generated@@620 ($generated@@218 $generated@@618) $generated@@621))))
 :pattern ( ($generated@@78 ($generated@@263 $generated@@619 $generated@@620) ($generated@@218 $generated@@618) $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@286 $generated@@149)) (= (type $generated@@623) $generated@@68)) (= ($generated@@136 $generated@@622 ($generated@@502 $generated@@623)) (forall (($generated@@624 Int) ) (!  (=> (and (<= 0 $generated@@624) (< $generated@@624 ($generated@@285 $generated@@622))) ($generated@@224 ($generated@@503 $generated@@622 $generated@@624) $generated@@623))
 :pattern ( ($generated@@503 $generated@@622 $generated@@624))
))))
 :pattern ( ($generated@@136 $generated@@622 ($generated@@502 $generated@@623)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 Int) ) (!  (=> (= (type $generated@@626) ($generated@@286 $generated@@149)) (=> (and (<= 0 $generated@@627) (< $generated@@627 ($generated@@285 $generated@@626))) (< ($generated@@544 ($generated@@384 $generated@@140 ($generated@@503 $generated@@626 $generated@@627))) ($generated@@625 $generated@@626))))
 :pattern ( ($generated@@544 ($generated@@384 $generated@@140 ($generated@@503 $generated@@626 $generated@@627))))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) ($generated@@309 $generated@@149 $generated@@149)) (= (type $generated@@629) $generated@@68)) (= (type $generated@@630) $generated@@68)) ($generated@@136 $generated@@628 ($generated@@412 $generated@@629 $generated@@630))) (and (and ($generated@@136 ($generated@@307 $generated@@628) ($generated@@244 $generated@@629)) ($generated@@136 ($generated@@350 $generated@@628) ($generated@@244 $generated@@630))) ($generated@@136 ($generated@@383 $generated@@628) ($generated@@244 ($generated@@139 $generated@@629 $generated@@630)))))
 :pattern ( ($generated@@136 $generated@@628 ($generated@@412 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) ($generated@@327 $generated@@149 $generated@@149)) (= (type $generated@@632) $generated@@68)) (= (type $generated@@633) $generated@@68)) ($generated@@136 $generated@@631 ($generated@@420 $generated@@632 $generated@@633))) (and (and ($generated@@136 ($generated@@325 $generated@@631) ($generated@@249 $generated@@632)) ($generated@@136 ($generated@@361 $generated@@631) ($generated@@249 $generated@@633))) ($generated@@136 ($generated@@394 $generated@@631) ($generated@@249 ($generated@@139 $generated@@632 $generated@@633)))))
 :pattern ( ($generated@@136 $generated@@631 ($generated@@420 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@2) ($generated@@136 $generated@@634 $generated@@46))
 :pattern ( ($generated@@136 $generated@@634 $generated@@46))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@3) ($generated@@136 $generated@@635 $generated@@47))
 :pattern ( ($generated@@136 $generated@@635 $generated@@47))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@4) ($generated@@136 $generated@@636 $generated@@44))
 :pattern ( ($generated@@136 $generated@@636 $generated@@44))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@454) ($generated@@136 $generated@@637 $generated@@45))
 :pattern ( ($generated@@136 $generated@@637 $generated@@45))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@149) ($generated@@136 $generated@@638 $generated@@48))
 :pattern ( ($generated@@136 $generated@@638 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@639 () Int)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () Int)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 () Int)
(declare-fun $generated@@647 () Int)
(declare-fun $generated@@648 () Int)
(declare-fun $generated@@649 () Int)
(declare-fun $generated@@650 () Int)
(declare-fun $generated@@651 () Int)
(declare-fun $generated@@652 () Int)
(declare-fun $generated@@653 () Int)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () Int)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () T@U)
(declare-fun $generated@@658 (T@U) Bool)
(declare-fun $generated@@659 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@654) $generated@@140) (= (type $generated@@640) $generated@@140)) (= (type $generated@@642) $generated@@140)) (= (type $generated@@643) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@644) $generated@@140)) (= (type $generated@@645) $generated@@140)) (= (type $generated@@656) ($generated@@164 $generated@@81 $generated@@4))) (= (type $generated@@657) $generated@@81)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@660  (=> (= (ControlFlow 0 4) (- 0 3)) (= $generated@@639 ($generated@@254 0)))))
(let (($generated@@661  (=> (= $generated@@640 ($generated@@263 ($generated@@293 ($generated@@8 $generated@@641)) $generated@@642)) (=> (and ($generated@@136 $generated@@642 ($generated@@218 $generated@@46)) ($generated@@78 $generated@@642 ($generated@@218 $generated@@46) $generated@@643)) (=> (and (and (and (and ($generated@@136 $generated@@644 ($generated@@218 $generated@@46)) ($generated@@78 $generated@@644 ($generated@@218 $generated@@46) $generated@@643)) (= $generated@@645 $generated@@642)) (and ($generated@@136 $generated@@645 ($generated@@218 $generated@@46)) (= $generated@@644 $generated@@645))) (and (and (and (= $generated@@646 $generated@@641) ($generated@@136 ($generated@@8 $generated@@646) $generated@@46)) (and (= $generated@@647 $generated@@646) (= $generated@@648 $generated@@649))) (and (and ($generated@@136 ($generated@@8 $generated@@648) $generated@@46) (= $generated@@650 $generated@@648)) (and (= $generated@@639 $generated@@647) (= (ControlFlow 0 7) 4))))) $generated@@660)))))
(let (($generated@@662  (=> (= $generated@@640 $generated@@155) (=> (and (= $generated@@651 $generated@@649) ($generated@@136 ($generated@@8 $generated@@651) $generated@@46)) (=> (and (and (= $generated@@652 $generated@@651) (= $generated@@653 ($generated@@254 0))) (and (= $generated@@639 $generated@@653) (= (ControlFlow 0 6) 4))) $generated@@660)))))
(let (($generated@@663  (=> (and (and (= $generated@@654 $generated@@155) (= $generated@@655 ($generated@@254 0))) (and (= $generated@@639 $generated@@655) (= (ControlFlow 0 5) 4))) $generated@@660)))
(let (($generated@@664 true))
(let (($generated@@665  (=> (not (= $generated@@640 $generated@@155)) (and (=> (= (ControlFlow 0 8) 7) $generated@@661) (=> (= (ControlFlow 0 8) 2) $generated@@664)))))
(let (($generated@@666  (=> (= $generated@@654 ($generated@@263 ($generated@@293 ($generated@@8 $generated@@649)) $generated@@640)) (=> (and ($generated@@136 $generated@@640 ($generated@@218 $generated@@46)) ($generated@@78 $generated@@640 ($generated@@218 $generated@@46) $generated@@643)) (and (=> (= (ControlFlow 0 9) 6) $generated@@662) (=> (= (ControlFlow 0 9) 8) $generated@@665))))))
(let (($generated@@667 true))
(let (($generated@@668  (=> (not (= $generated@@654 $generated@@155)) (and (=> (= (ControlFlow 0 10) 9) $generated@@666) (=> (= (ControlFlow 0 10) 1) $generated@@667)))))
(let (($generated@@669  (=> (= $generated@@656 ($generated@@163 $generated@@657 $generated@@643 $generated@@60 false)) (and (=> (= (ControlFlow 0 11) 5) $generated@@663) (=> (= (ControlFlow 0 11) 10) $generated@@668)))))
(let (($generated@@670  (=> (and ($generated@@219 $generated@@643) ($generated@@658 $generated@@643)) (=> (and (and (and ($generated@@136 $generated@@654 ($generated@@218 $generated@@46)) ($generated@@78 $generated@@654 ($generated@@218 $generated@@46) $generated@@643)) ($generated@@371 $generated@@654)) (and (= 1 $generated@@659) (= (ControlFlow 0 12) 11))) $generated@@669))))
$generated@@670))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(assert (not (= (ControlFlow 0 4) (- 3))))
(check-sat)
(pop 1)
; Invalid
(get-info :rlimit)
