(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 () Int)
(assert  (and (and (and (= (type $generated@@173) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@174) $generated@@47)) (= (type $generated@@175) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@176) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@180 true))
(let (($generated@@181 true))
(let (($generated@@182 true))
(let (($generated@@183  (=> (= (ControlFlow 0 2) (- 0 1)) (or (or (= ($generated@@157 0) ($generated@@157 0)) (= ($generated@@157 0) ($generated@@157 3))) (= ($generated@@157 0) ($generated@@157 7))))))
(let (($generated@@184  (=> (= $generated@@173 ($generated@@45 $generated@@174 $generated@@175 $generated@@176 false)) (and (and (and (=> (= (ControlFlow 0 6) 2) $generated@@183) (=> (= (ControlFlow 0 6) 3) $generated@@182)) (=> (= (ControlFlow 0 6) 4) $generated@@181)) (=> (= (ControlFlow 0 6) 5) $generated@@180)))))
(let (($generated@@185  (=> (and (and ($generated@@177 $generated@@175) ($generated@@178 $generated@@175)) (and (= 0 $generated@@179) (= (ControlFlow 0 7) 6))) $generated@@184)))
$generated@@185)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (Int) T@U)
(declare-fun $generated@@84 (T@T T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 (T@U) Int)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 (T@U) Int)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) T@U)
(declare-fun $generated@@159 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@175 (T@U T@U T@U) T@U)
(declare-fun $generated@@176 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@177 (T@T T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@231 (T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U) Bool)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 (T@U) Bool)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@268 (T@U T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) Bool)
(declare-fun $generated@@283 (T@T) T@U)
(declare-fun $generated@@284 (T@U) Int)
(declare-fun $generated@@285 (T@T) T@T)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@292 (Int) T@U)
(declare-fun $generated@@296 (Int) T@U)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@309 (T@U) Int)
(declare-fun $generated@@310 (T@T) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@316 (T@T T@T) T@U)
(declare-fun $generated@@317 (T@T T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@319 (T@T) T@T)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@334 (T@T T@T) T@U)
(declare-fun $generated@@335 (T@T T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@354 () T@U)
(declare-fun $generated@@355 (T@T T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@369 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@394 (T@U) Bool)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@414 (T@U) T@U)
(declare-fun $generated@@415 (T@U) T@U)
(declare-fun $generated@@432 (T@U T@U) T@U)
(declare-fun $generated@@440 (T@U T@U) T@U)
(declare-fun $generated@@452 (T@T) T@U)
(declare-fun $generated@@476 () T@T)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@519 (T@U Int) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@562 (T@U) Int)
(declare-fun $generated@@563 (T@U) Int)
(declare-fun $generated@@582 (T@U) T@U)
(declare-fun $generated@@640 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@72) 6) (= (type $generated@@44) $generated@@72)) (= (type $generated@@45) $generated@@72)) (= (type $generated@@46) $generated@@72)) (= (type $generated@@47) $generated@@72)) (= (type $generated@@48) $generated@@72)) (= ($generated@@1 $generated@@73) 7)) (= (type $generated@@49) $generated@@73)) (= (type $generated@@50) $generated@@73)) (= (type $generated@@51) $generated@@73)) (= (type $generated@@52) $generated@@73)) (= (type $generated@@53) $generated@@73)) (= (type $generated@@54) $generated@@73)) (= (type $generated@@55) $generated@@73)) (= (type $generated@@56) $generated@@73)) (= (type $generated@@57) $generated@@73)) (= (type $generated@@58) $generated@@73)) (= (type $generated@@59) $generated@@73)) (forall (($generated@@78 T@T) ) (= ($generated@@1 ($generated@@74 $generated@@78)) 8))) (forall (($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@74 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@74 $generated@@79))
))) (= (type $generated@@60) ($generated@@74 $generated@@4))) (= ($generated@@1 $generated@@76) 9)) (= (type $generated@@61) $generated@@76)) (= (type $generated@@62) $generated@@73)) (= (type $generated@@63) $generated@@76)) (= (type $generated@@64) $generated@@73)) (= (type $generated@@65) $generated@@76)) (= (type $generated@@66) $generated@@76)) (= (type $generated@@67) $generated@@73)) (= (type $generated@@68) $generated@@76)) (= ($generated@@1 $generated@@77) 10)) (= (type $generated@@69) $generated@@77)) (= (type $generated@@70) $generated@@77)) (= (type $generated@@71) $generated@@77)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71)
)
(assert (forall (($generated@@81 T@U) ) (! (= (type ($generated@@80 $generated@@81)) $generated@@73)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (= ($generated@@80 $generated@@44) $generated@@49))
(assert (= ($generated@@80 $generated@@45) $generated@@50))
(assert (= ($generated@@80 $generated@@46) $generated@@51))
(assert (= ($generated@@80 $generated@@47) $generated@@52))
(assert (= ($generated@@80 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@84 $generated@@93 $generated@@94)) 11)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@84 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@84 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@84 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@84 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@84 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 12)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@75 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@86) 13)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@86)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@75 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ) (! (= (type ($generated@@83 $generated@@137)) $generated@@72)
 :pattern ( ($generated@@83 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@2) (= (type $generated@@139) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
 :pattern ( ($generated@@82 $generated@@138 ($generated@@83 0) $generated@@139))
)))
(assert (= ($generated@@1 $generated@@142) 14))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) $generated@@142) (= (type $generated@@145) $generated@@142)) (and ($generated@@141 $generated@@144) ($generated@@141 $generated@@145))) (= ($generated@@140 $generated@@144 $generated@@145) (= ($generated@@143 $generated@@144) ($generated@@143 $generated@@145))))
 :pattern ( ($generated@@140 $generated@@144 $generated@@145) ($generated@@141 $generated@@144))
 :pattern ( ($generated@@140 $generated@@144 $generated@@145) ($generated@@141 $generated@@145))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@142) (= (type $generated@@149) $generated@@142)) (and ($generated@@146 $generated@@148) ($generated@@146 $generated@@149))) (= ($generated@@140 $generated@@148 $generated@@149) (= ($generated@@147 $generated@@148) ($generated@@147 $generated@@149))))
 :pattern ( ($generated@@140 $generated@@148 $generated@@149) ($generated@@146 $generated@@148))
 :pattern ( ($generated@@140 $generated@@148 $generated@@149) ($generated@@146 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ) (!  (=> (= (type $generated@@151) $generated@@2) ($generated@@150 $generated@@151 ($generated@@83 0)))
 :pattern ( ($generated@@150 $generated@@151 ($generated@@83 0)))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@154 $generated@@155)) $generated@@72)
 :pattern ( ($generated@@153 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and (and (and (= (type $generated@@156) $generated@@72) (= (type $generated@@157) $generated@@72)) (= (type $generated@@158) $generated@@142)) ($generated@@150 $generated@@158 ($generated@@153 $generated@@156 $generated@@157))) ($generated@@152 $generated@@158))
 :pattern ( ($generated@@152 $generated@@158) ($generated@@150 $generated@@158 ($generated@@153 $generated@@156 $generated@@157)))
)))
(assert  (and (and (= ($generated@@1 $generated@@162) 15) (forall (($generated@@163 T@U) ) (! (= (type ($generated@@160 $generated@@163)) $generated@@162)
 :pattern ( ($generated@@160 $generated@@163))
))) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@162)
 :pattern ( ($generated@@161 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@142) (= (type $generated@@166) $generated@@142)) true) (= ($generated@@159 $generated@@165 $generated@@166)  (and (= ($generated@@160 $generated@@165) ($generated@@160 $generated@@166)) (= ($generated@@161 $generated@@165) ($generated@@161 $generated@@166)))))
 :pattern ( ($generated@@159 $generated@@165 $generated@@166))
)))
(assert  (and (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@76)
 :pattern ( ($generated@@167 $generated@@169))
)) (= (type $generated@@168) $generated@@142)))
(assert (= ($generated@@167 $generated@@168) $generated@@68))
(assert (forall (($generated@@172 T@U) ) (! (= (type ($generated@@170 $generated@@172)) $generated@@72)
 :pattern ( ($generated@@170 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and (and (= (type $generated@@173) ($generated@@84 $generated@@162 $generated@@2)) (= (type $generated@@174) $generated@@72)) ($generated@@150 $generated@@173 ($generated@@170 $generated@@174))) ($generated@@171 $generated@@173))
 :pattern ( ($generated@@150 $generated@@173 ($generated@@170 $generated@@174)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (= ($generated@@1 ($generated@@177 $generated@@181 $generated@@182)) 16)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@178 ($generated@@177 $generated@@183 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@177 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@179 ($generated@@177 $generated@@185 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@177 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (let (($generated@@190 ($generated@@179 (type $generated@@187))))
(= (type ($generated@@175 $generated@@187 $generated@@188 $generated@@189)) $generated@@190))
 :pattern ( ($generated@@175 $generated@@187 $generated@@188 $generated@@189))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (let (($generated@@195 (type $generated@@194)))
(let (($generated@@196 (type $generated@@192)))
(= (type ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@194)) ($generated@@177 $generated@@196 $generated@@195))))
 :pattern ( ($generated@@180 $generated@@191 $generated@@192 $generated@@193 $generated@@194))
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (let (($generated@@201 ($generated@@179 (type $generated@@197))))
 (=> (= (type $generated@@200) $generated@@201) (= ($generated@@175 ($generated@@180 $generated@@197 $generated@@198 $generated@@199 $generated@@200) $generated@@198 $generated@@199) $generated@@200)))
 :weight 0
))) (and (and (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@175 ($generated@@180 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@175 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@175 ($generated@@180 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@175 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or true (= ($generated@@175 ($generated@@180 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@175 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)))) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ) (! (= (type ($generated@@176 $generated@@220 $generated@@221 $generated@@222 $generated@@223)) ($generated@@177 $generated@@85 $generated@@4))
 :pattern ( ($generated@@176 $generated@@220 $generated@@221 $generated@@222 $generated@@223))
))))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (let (($generated@@230 ($generated@@75 (type $generated@@229))))
 (=> (and (and (and (and (= (type $generated@@224) $generated@@85) (= (type $generated@@225) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@226) ($generated@@74 $generated@@4))) (= (type $generated@@228) $generated@@85)) (= (type $generated@@229) ($generated@@74 $generated@@230))) (= ($generated@@0 ($generated@@175 ($generated@@176 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))  (=> (and (not (= $generated@@228 $generated@@224)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@225 $generated@@228) $generated@@226))) $generated@@227))))
 :pattern ( ($generated@@175 ($generated@@176 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (= (type ($generated@@231 $generated@@233 $generated@@234)) $generated@@142)
 :pattern ( ($generated@@231 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (and (and (= (type $generated@@235) $generated@@72) (= (type $generated@@236) $generated@@72)) (= (type $generated@@237) $generated@@162)) (= (type $generated@@238) $generated@@162)) (= ($generated@@150 ($generated@@231 $generated@@237 $generated@@238) ($generated@@153 $generated@@235 $generated@@236))  (and ($generated@@232 $generated@@237 $generated@@235) ($generated@@232 $generated@@238 $generated@@236))))
 :pattern ( ($generated@@150 ($generated@@231 $generated@@237 $generated@@238) ($generated@@153 $generated@@235 $generated@@236)))
)))
(assert (= (type $generated@@239) $generated@@72))
(assert ($generated@@150 $generated@@168 $generated@@239))
(assert (forall (($generated@@241 T@U) ) (!  (=> (and (= (type $generated@@241) ($generated@@84 $generated@@85 $generated@@86)) ($generated@@240 $generated@@241)) ($generated@@82 $generated@@168 $generated@@239 $generated@@241))
 :pattern ( ($generated@@82 $generated@@168 $generated@@239 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@142) (= (type $generated@@243) $generated@@142)) (= ($generated@@159 $generated@@242 $generated@@243) (= $generated@@242 $generated@@243)))
 :pattern ( ($generated@@159 $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@142) (= (type $generated@@245) $generated@@142)) (= ($generated@@140 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@140 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@142) (= (type $generated@@248) $generated@@142)) (= ($generated@@246 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@246 $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@72)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@84 $generated@@162 $generated@@4)) (= (type $generated@@252) $generated@@72)) (= ($generated@@150 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@162) ($generated@@0 ($generated@@89 $generated@@251 $generated@@253))) ($generated@@232 $generated@@253 $generated@@252))
 :pattern ( ($generated@@89 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@150 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@72)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@84 $generated@@162 $generated@@4)) (= (type $generated@@257) $generated@@72)) (= ($generated@@150 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@162) ($generated@@0 ($generated@@89 $generated@@256 $generated@@258))) ($generated@@232 $generated@@258 $generated@@257))
 :pattern ( ($generated@@89 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@150 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@142) (= (type $generated@@267) $generated@@142)) (and ($generated@@265 $generated@@266) ($generated@@265 $generated@@267))) (= ($generated@@246 $generated@@266 $generated@@267) true))
 :pattern ( ($generated@@246 $generated@@266 $generated@@267) ($generated@@265 $generated@@266))
 :pattern ( ($generated@@246 $generated@@266 $generated@@267) ($generated@@265 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@269) $generated@@72) (= (type $generated@@270) $generated@@72)) (= (type $generated@@271) $generated@@162)) (= (type $generated@@272) $generated@@162)) (= (type $generated@@273) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@240 $generated@@273)) (= ($generated@@82 ($generated@@231 $generated@@271 $generated@@272) ($generated@@153 $generated@@269 $generated@@270) $generated@@273)  (and ($generated@@268 $generated@@271 $generated@@269 $generated@@273) ($generated@@268 $generated@@272 $generated@@270 $generated@@273))))
 :pattern ( ($generated@@82 ($generated@@231 $generated@@271 $generated@@272) ($generated@@153 $generated@@269 $generated@@270) $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= (type $generated@@274) $generated@@142) (= ($generated@@152 $generated@@274) (= ($generated@@167 $generated@@274) $generated@@61)))
 :pattern ( ($generated@@152 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@142) (= ($generated@@141 $generated@@275) (= ($generated@@167 $generated@@275) $generated@@63)))
 :pattern ( ($generated@@141 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@142) (= ($generated@@146 $generated@@276) (= ($generated@@167 $generated@@276) $generated@@65)))
 :pattern ( ($generated@@146 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@142) (= ($generated@@277 $generated@@278) (= ($generated@@167 $generated@@278) $generated@@66)))
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@142) (= ($generated@@265 $generated@@279) (= ($generated@@167 $generated@@279) $generated@@68)))
 :pattern ( ($generated@@265 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@142) ($generated@@152 $generated@@280)) (exists (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (and (and (= (type $generated@@281) $generated@@162) (= (type $generated@@282) $generated@@162)) (= $generated@@280 ($generated@@231 $generated@@281 $generated@@282)))
 :no-pattern (type $generated@@281)
 :no-pattern (type $generated@@282)
 :no-pattern ($generated $generated@@281)
 :no-pattern ($generated@@0 $generated@@281)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
)))
 :pattern ( ($generated@@152 $generated@@280))
)))
(assert  (and (and (forall (($generated@@287 T@T) ) (= ($generated@@1 ($generated@@285 $generated@@287)) 17)) (forall (($generated@@288 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@288)) $generated@@288)
 :pattern ( ($generated@@285 $generated@@288))
))) (forall (($generated@@289 T@T) ) (! (= (type ($generated@@283 $generated@@289)) ($generated@@285 $generated@@289))
 :pattern ( ($generated@@283 $generated@@289))
))))
(assert (forall (($generated@@290 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@290)) 0)
 :pattern ( ($generated@@283 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) $generated@@142) ($generated@@265 $generated@@291)) (= $generated@@291 $generated@@168))
 :pattern ( ($generated@@265 $generated@@291))
)))
(assert (forall (($generated@@293 Int) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@142)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@142) ($generated@@141 $generated@@294)) (exists (($generated@@295 Int) ) (= $generated@@294 ($generated@@292 $generated@@295))))
 :pattern ( ($generated@@141 $generated@@294))
)))
(assert (forall (($generated@@297 Int) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@142)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@142) ($generated@@146 $generated@@298)) (exists (($generated@@299 Int) ) (= $generated@@298 ($generated@@296 $generated@@299))))
 :pattern ( ($generated@@146 $generated@@298))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@142)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@142) ($generated@@277 $generated@@302)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@142) (= $generated@@302 ($generated@@300 $generated@@303)))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
)))
 :pattern ( ($generated@@277 $generated@@302))
)))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@162)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@72) (= (type $generated@@308) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@268 ($generated@@304 $generated@@306) $generated@@307 $generated@@308) ($generated@@82 $generated@@306 $generated@@307 $generated@@308)))
 :pattern ( ($generated@@268 ($generated@@304 $generated@@306) $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@311 T@T) ) (! (= (type ($generated@@310 $generated@@311)) ($generated@@84 $generated@@311 $generated@@2))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@312 T@U) ) (! (let (($generated@@313 ($generated@@87 (type $generated@@312))))
 (=> (= (type $generated@@312) ($generated@@84 $generated@@313 $generated@@2)) (and (= (= ($generated@@309 $generated@@312) 0) (= $generated@@312 ($generated@@310 $generated@@313))) (=> (not (= ($generated@@309 $generated@@312) 0)) (exists (($generated@@314 T@U) ) (!  (and (= (type $generated@@314) $generated@@313) (< 0 ($generated ($generated@@89 $generated@@312 $generated@@314))))
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
))))))
 :pattern ( ($generated@@309 $generated@@312))
)))
(assert  (and (and (and (and (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@320 $generated@@321)) 18)) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@322 $generated@@323)) $generated@@322)
 :pattern ( ($generated@@317 $generated@@322 $generated@@323))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= ($generated@@319 ($generated@@317 $generated@@324 $generated@@325)) $generated@@325)
 :pattern ( ($generated@@317 $generated@@324 $generated@@325))
))) (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@318 (type $generated@@326))))
(= (type ($generated@@315 $generated@@326)) ($generated@@84 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@315 $generated@@326))
))) (forall (($generated@@328 T@T) ($generated@@329 T@T) ) (! (= (type ($generated@@316 $generated@@328 $generated@@329)) ($generated@@317 $generated@@328 $generated@@329))
 :pattern ( ($generated@@316 $generated@@328 $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ($generated@@331 T@T) ) (! (let (($generated@@332 (type $generated@@330)))
 (not ($generated@@0 ($generated@@89 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330))))
 :pattern ( (let (($generated@@332 (type $generated@@330)))
($generated@@89 ($generated@@315 ($generated@@316 $generated@@332 $generated@@331)) $generated@@330)))
)))
(assert  (and (and (and (and (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (= ($generated@@1 ($generated@@335 $generated@@338 $generated@@339)) 19)) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@336 ($generated@@335 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@335 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@337 ($generated@@335 $generated@@342 $generated@@343)) $generated@@343)
 :pattern ( ($generated@@335 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@336 (type $generated@@344))))
(= (type ($generated@@333 $generated@@344)) ($generated@@84 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@344))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= (type ($generated@@334 $generated@@346 $generated@@347)) ($generated@@335 $generated@@346 $generated@@347))
 :pattern ( ($generated@@334 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@T) ) (! (let (($generated@@350 (type $generated@@348)))
 (not ($generated@@0 ($generated@@89 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348))))
 :pattern ( (let (($generated@@350 (type $generated@@348)))
($generated@@89 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348)))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@87 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@84 $generated@@352 $generated@@2)) (= ($generated@@171 $generated@@351) (forall (($generated@@353 T@U) ) (!  (=> (= (type $generated@@353) $generated@@352) (and (<= 0 ($generated ($generated@@89 $generated@@351 $generated@@353))) (<= ($generated ($generated@@89 $generated@@351 $generated@@353)) ($generated@@309 $generated@@351))))
 :pattern ( ($generated@@89 $generated@@351 $generated@@353))
)))))
 :pattern ( ($generated@@171 $generated@@351))
)))
(assert  (and (= (type $generated@@354) $generated@@72) (forall (($generated@@356 T@T) ($generated@@357 T@U) ) (! (= (type ($generated@@355 $generated@@356 $generated@@357)) $generated@@356)
 :pattern ( ($generated@@355 $generated@@356 $generated@@357))
))))
(assert (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@162) ($generated@@232 $generated@@358 $generated@@354)) (and (= ($generated@@304 ($generated@@355 $generated@@142 $generated@@358)) $generated@@358) ($generated@@150 ($generated@@355 $generated@@142 $generated@@358) $generated@@354)))
 :pattern ( ($generated@@232 $generated@@358 $generated@@354))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@162) ($generated@@232 $generated@@359 $generated@@239)) (and (= ($generated@@304 ($generated@@355 $generated@@142 $generated@@359)) $generated@@359) ($generated@@150 ($generated@@355 $generated@@142 $generated@@359) $generated@@239)))
 :pattern ( ($generated@@232 $generated@@359 $generated@@239))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@142) (= ($generated@@150 ($generated@@300 $generated@@360) $generated@@239) ($generated@@150 $generated@@360 $generated@@354)))
 :pattern ( ($generated@@150 ($generated@@300 $generated@@360) $generated@@239))
)))
(assert (forall (($generated@@362 T@U) ) (! (= (type ($generated@@361 $generated@@362)) $generated@@142)
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ($generated@@364 T@U) ) (!  (=> (and (and (= (type $generated@@363) $generated@@142) (= (type $generated@@364) $generated@@142)) (and ($generated@@277 $generated@@363) ($generated@@277 $generated@@364))) (= ($generated@@246 $generated@@363 $generated@@364) ($generated@@140 ($generated@@361 $generated@@363) ($generated@@361 $generated@@364))))
 :pattern ( ($generated@@246 $generated@@363 $generated@@364) ($generated@@277 $generated@@363))
 :pattern ( ($generated@@246 $generated@@363 $generated@@364) ($generated@@277 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@319 (type $generated@@365))))
(let (($generated@@367 ($generated@@318 (type $generated@@365))))
 (=> (= (type $generated@@365) ($generated@@317 $generated@@367 $generated@@366)) (or (= $generated@@365 ($generated@@316 $generated@@367 $generated@@366)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) ($generated@@0 ($generated@@89 ($generated@@315 $generated@@365) $generated@@368)))
 :no-pattern (type $generated@@368)
 :no-pattern ($generated $generated@@368)
 :no-pattern ($generated@@0 $generated@@368)
))))))
 :pattern ( ($generated@@315 $generated@@365))
)))
(assert (forall (($generated@@370 T@U) ) (! (let (($generated@@371 ($generated@@319 (type $generated@@370))))
(= (type ($generated@@369 $generated@@370)) ($generated@@84 $generated@@371 $generated@@4)))
 :pattern ( ($generated@@369 $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@319 (type $generated@@372))))
(let (($generated@@374 ($generated@@318 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@317 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@316 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@373) ($generated@@0 ($generated@@89 ($generated@@369 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@369 $generated@@372))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@337 (type $generated@@376))))
(let (($generated@@378 ($generated@@336 (type $generated@@376))))
 (=> (= (type $generated@@376) ($generated@@335 $generated@@378 $generated@@377)) (or (= $generated@@376 ($generated@@334 $generated@@378 $generated@@377)) (exists (($generated@@379 T@U) ) (!  (and (= (type $generated@@379) $generated@@378) ($generated@@0 ($generated@@89 ($generated@@333 $generated@@376) $generated@@379)))
 :no-pattern (type $generated@@379)
 :no-pattern ($generated $generated@@379)
 :no-pattern ($generated@@0 $generated@@379)
))))))
 :pattern ( ($generated@@333 $generated@@376))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@337 (type $generated@@381))))
(= (type ($generated@@380 $generated@@381)) ($generated@@84 $generated@@382 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@381))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@337 (type $generated@@383))))
(let (($generated@@385 ($generated@@336 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@335 $generated@@385 $generated@@384)) (or (= $generated@@383 ($generated@@334 $generated@@385 $generated@@384)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@384) ($generated@@0 ($generated@@89 ($generated@@380 $generated@@383) $generated@@386)))
 :no-pattern (type $generated@@386)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
))))))
 :pattern ( ($generated@@380 $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@387) ($generated@@84 $generated@@162 $generated@@2)) (= (type $generated@@388) $generated@@72)) (= ($generated@@150 $generated@@387 ($generated@@170 $generated@@388)) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@162) (< 0 ($generated ($generated@@89 $generated@@387 $generated@@389)))) ($generated@@232 $generated@@389 $generated@@388))
 :pattern ( ($generated@@89 $generated@@387 $generated@@389))
))))
 :pattern ( ($generated@@150 $generated@@387 ($generated@@170 $generated@@388)))
)))
(assert (forall (($generated@@390 Int) ($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@84 $generated@@85 $generated@@86)) ($generated@@240 $generated@@391)) (= ($generated@@82 ($generated@@292 $generated@@390) $generated@@354 $generated@@391) ($generated@@82 ($generated@@8 $generated@@390) $generated@@46 $generated@@391)))
 :pattern ( ($generated@@82 ($generated@@292 $generated@@390) $generated@@354 $generated@@391))
)))
(assert (forall (($generated@@392 Int) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@84 $generated@@85 $generated@@86)) ($generated@@240 $generated@@393)) (= ($generated@@82 ($generated@@296 $generated@@392) $generated@@354 $generated@@393) ($generated@@82 ($generated@@8 $generated@@392) $generated@@46 $generated@@393)))
 :pattern ( ($generated@@82 ($generated@@296 $generated@@392) $generated@@354 $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@142) ($generated@@394 $generated@@395)) (or ($generated@@277 $generated@@395) ($generated@@265 $generated@@395)))
 :pattern ( ($generated@@394 $generated@@395))
)))
(assert (forall (($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (= (type $generated@@396) ($generated@@84 $generated@@162 $generated@@4)) (= (type $generated@@397) $generated@@72)) (= (type $generated@@398) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@396 ($generated@@249 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@162) ($generated@@0 ($generated@@89 $generated@@396 $generated@@399))) ($generated@@268 $generated@@399 $generated@@397 $generated@@398))
 :pattern ( ($generated@@89 $generated@@396 $generated@@399))
))))
 :pattern ( ($generated@@82 $generated@@396 ($generated@@249 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (= (type $generated@@400) ($generated@@84 $generated@@162 $generated@@4)) (= (type $generated@@401) $generated@@72)) (= (type $generated@@402) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@400 ($generated@@254 $generated@@401) $generated@@402) (forall (($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@403) $generated@@162) ($generated@@0 ($generated@@89 $generated@@400 $generated@@403))) ($generated@@268 $generated@@403 $generated@@401 $generated@@402))
 :pattern ( ($generated@@89 $generated@@400 $generated@@403))
))))
 :pattern ( ($generated@@82 $generated@@400 ($generated@@254 $generated@@401) $generated@@402))
)))
(assert (forall (($generated@@404 T@U) ) (! (let (($generated@@405 (type $generated@@404)))
(= ($generated ($generated@@89 ($generated@@310 $generated@@405) $generated@@404)) 0))
 :pattern ( (let (($generated@@405 (type $generated@@404)))
($generated@@89 ($generated@@310 $generated@@405) $generated@@404)))
)))
(assert  (and (forall (($generated@@408 T@U) ) (! (= (type ($generated@@406 $generated@@408)) ($generated@@84 $generated@@162 $generated@@4))
 :pattern ( ($generated@@406 $generated@@408))
)) (forall (($generated@@409 T@U) ) (! (let (($generated@@410 ($generated@@319 (type $generated@@409))))
(let (($generated@@411 ($generated@@318 (type $generated@@409))))
(= (type ($generated@@407 $generated@@409)) ($generated@@84 $generated@@411 $generated@@410))))
 :pattern ( ($generated@@407 $generated@@409))
))))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@412) ($generated@@317 $generated@@162 $generated@@162)) (= (type $generated@@413) $generated@@162)) (= ($generated@@0 ($generated@@89 ($generated@@406 $generated@@412) $generated@@413))  (and ($generated@@0 ($generated@@89 ($generated@@315 $generated@@412) ($generated@@160 ($generated@@355 $generated@@142 $generated@@413)))) (= ($generated@@89 ($generated@@407 $generated@@412) ($generated@@160 ($generated@@355 $generated@@142 $generated@@413))) ($generated@@161 ($generated@@355 $generated@@142 $generated@@413))))))
 :pattern ( ($generated@@89 ($generated@@406 $generated@@412) $generated@@413))
)))
(assert  (and (forall (($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@416)) ($generated@@84 $generated@@162 $generated@@4))
 :pattern ( ($generated@@414 $generated@@416))
)) (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@337 (type $generated@@417))))
(let (($generated@@419 ($generated@@336 (type $generated@@417))))
(= (type ($generated@@415 $generated@@417)) ($generated@@84 $generated@@419 $generated@@418))))
 :pattern ( ($generated@@415 $generated@@417))
))))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@420) ($generated@@335 $generated@@162 $generated@@162)) (= (type $generated@@421) $generated@@162)) (= ($generated@@0 ($generated@@89 ($generated@@414 $generated@@420) $generated@@421))  (and ($generated@@0 ($generated@@89 ($generated@@333 $generated@@420) ($generated@@160 ($generated@@355 $generated@@142 $generated@@421)))) (= ($generated@@89 ($generated@@415 $generated@@420) ($generated@@160 ($generated@@355 $generated@@142 $generated@@421))) ($generated@@161 ($generated@@355 $generated@@142 $generated@@421))))))
 :pattern ( ($generated@@89 ($generated@@414 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (let (($generated@@424 (type $generated@@423)))
(let (($generated@@425 ($generated@@318 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@317 $generated@@425 $generated@@424)) (= ($generated@@0 ($generated@@89 ($generated@@369 $generated@@422) $generated@@423)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@425) (and ($generated@@0 ($generated@@89 ($generated@@315 $generated@@422) $generated@@426)) (= $generated@@423 ($generated@@89 ($generated@@407 $generated@@422) $generated@@426))))
 :pattern ( ($generated@@89 ($generated@@315 $generated@@422) $generated@@426))
 :pattern ( ($generated@@89 ($generated@@407 $generated@@422) $generated@@426))
))))))
 :pattern ( ($generated@@89 ($generated@@369 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (let (($generated@@429 (type $generated@@428)))
(let (($generated@@430 ($generated@@336 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@335 $generated@@430 $generated@@429)) (= ($generated@@0 ($generated@@89 ($generated@@380 $generated@@427) $generated@@428)) (exists (($generated@@431 T@U) ) (!  (and (= (type $generated@@431) $generated@@430) (and ($generated@@0 ($generated@@89 ($generated@@333 $generated@@427) $generated@@431)) (= $generated@@428 ($generated@@89 ($generated@@415 $generated@@427) $generated@@431))))
 :pattern ( ($generated@@89 ($generated@@333 $generated@@427) $generated@@431))
 :pattern ( ($generated@@89 ($generated@@415 $generated@@427) $generated@@431))
))))))
 :pattern ( ($generated@@89 ($generated@@380 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (= (type ($generated@@432 $generated@@433 $generated@@434)) $generated@@72)
 :pattern ( ($generated@@432 $generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ) (!  (=> (and (and (and (= (type $generated@@435) ($generated@@317 $generated@@162 $generated@@162)) (= (type $generated@@436) $generated@@72)) (= (type $generated@@437) $generated@@72)) (= (type $generated@@438) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438) (forall (($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@439) $generated@@162) ($generated@@0 ($generated@@89 ($generated@@315 $generated@@435) $generated@@439))) (and ($generated@@268 ($generated@@89 ($generated@@407 $generated@@435) $generated@@439) $generated@@437 $generated@@438) ($generated@@268 $generated@@439 $generated@@436 $generated@@438)))
 :pattern ( ($generated@@89 ($generated@@407 $generated@@435) $generated@@439))
 :pattern ( ($generated@@89 ($generated@@315 $generated@@435) $generated@@439))
))))
 :pattern ( ($generated@@82 $generated@@435 ($generated@@432 $generated@@436 $generated@@437) $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ($generated@@442 T@U) ) (! (= (type ($generated@@440 $generated@@441 $generated@@442)) $generated@@72)
 :pattern ( ($generated@@440 $generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ($generated@@446 T@U) ) (!  (=> (and (and (and (= (type $generated@@443) ($generated@@335 $generated@@162 $generated@@162)) (= (type $generated@@444) $generated@@72)) (= (type $generated@@445) $generated@@72)) (= (type $generated@@446) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446) (forall (($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@162) ($generated@@0 ($generated@@89 ($generated@@333 $generated@@443) $generated@@447))) (and ($generated@@268 ($generated@@89 ($generated@@415 $generated@@443) $generated@@447) $generated@@445 $generated@@446) ($generated@@268 $generated@@447 $generated@@444 $generated@@446)))
 :pattern ( ($generated@@89 ($generated@@415 $generated@@443) $generated@@447))
 :pattern ( ($generated@@89 ($generated@@333 $generated@@443) $generated@@447))
))))
 :pattern ( ($generated@@82 $generated@@443 ($generated@@440 $generated@@444 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (= (type $generated@@448) $generated@@142) (= (type $generated@@449) ($generated@@84 $generated@@85 $generated@@86))) ($generated@@240 $generated@@449)) (= ($generated@@82 ($generated@@300 $generated@@448) $generated@@239 $generated@@449) ($generated@@82 $generated@@448 $generated@@354 $generated@@449)))
 :pattern ( ($generated@@82 ($generated@@300 $generated@@448) $generated@@239 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@142) ($generated@@150 $generated@@450 $generated@@354)) (or ($generated@@141 $generated@@450) ($generated@@146 $generated@@450)))
 :pattern ( ($generated@@146 $generated@@450) ($generated@@150 $generated@@450 $generated@@354))
 :pattern ( ($generated@@141 $generated@@450) ($generated@@150 $generated@@450 $generated@@354))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@142) ($generated@@150 $generated@@451 $generated@@239)) (or ($generated@@277 $generated@@451) ($generated@@265 $generated@@451)))
 :pattern ( ($generated@@265 $generated@@451) ($generated@@150 $generated@@451 $generated@@239))
 :pattern ( ($generated@@277 $generated@@451) ($generated@@150 $generated@@451 $generated@@239))
)))
(assert (forall (($generated@@453 T@T) ) (! (= (type ($generated@@452 $generated@@453)) ($generated@@84 $generated@@453 $generated@@4))
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@337 (type $generated@@454))))
(let (($generated@@456 ($generated@@336 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@335 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@334 $generated@@456 $generated@@455)) (= ($generated@@333 $generated@@454) ($generated@@452 $generated@@456))))))
 :pattern ( ($generated@@333 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@337 (type $generated@@457))))
(let (($generated@@459 ($generated@@336 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@335 $generated@@459 $generated@@458)) (= (= $generated@@457 ($generated@@334 $generated@@459 $generated@@458)) (= ($generated@@380 $generated@@457) ($generated@@452 $generated@@458))))))
 :pattern ( ($generated@@380 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@337 (type $generated@@460))))
(let (($generated@@462 ($generated@@336 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@335 $generated@@462 $generated@@461)) (= (= $generated@@460 ($generated@@334 $generated@@462 $generated@@461)) (= ($generated@@414 $generated@@460) ($generated@@452 $generated@@162))))))
 :pattern ( ($generated@@414 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@319 (type $generated@@463))))
(let (($generated@@465 ($generated@@318 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@317 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@316 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@162) (= (type $generated@@467) $generated@@162)) ($generated@@0 ($generated@@89 ($generated@@406 $generated@@463) ($generated@@304 ($generated@@231 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@406 $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@337 (type $generated@@468))))
(let (($generated@@470 ($generated@@336 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@335 $generated@@470 $generated@@469)) (or (= $generated@@468 ($generated@@334 $generated@@470 $generated@@469)) (exists (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (and (and (= (type $generated@@471) $generated@@162) (= (type $generated@@472) $generated@@162)) ($generated@@0 ($generated@@89 ($generated@@414 $generated@@468) ($generated@@304 ($generated@@231 $generated@@471 $generated@@472)))))
 :no-pattern (type $generated@@471)
 :no-pattern (type $generated@@472)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
))))))
 :pattern ( ($generated@@414 $generated@@468))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@162) ($generated@@232 $generated@@473 $generated@@46)) (and (= ($generated@@304 ($generated@@355 $generated@@2 $generated@@473)) $generated@@473) ($generated@@150 ($generated@@355 $generated@@2 $generated@@473) $generated@@46)))
 :pattern ( ($generated@@232 $generated@@473 $generated@@46))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@162) ($generated@@232 $generated@@474 $generated@@47)) (and (= ($generated@@304 ($generated@@355 $generated@@3 $generated@@474)) $generated@@474) ($generated@@150 ($generated@@355 $generated@@3 $generated@@474) $generated@@47)))
 :pattern ( ($generated@@232 $generated@@474 $generated@@47))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@162) ($generated@@232 $generated@@475 $generated@@44)) (and (= ($generated@@304 ($generated@@355 $generated@@4 $generated@@475)) $generated@@475) ($generated@@150 ($generated@@355 $generated@@4 $generated@@475) $generated@@44)))
 :pattern ( ($generated@@232 $generated@@475 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@476) 20))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@162) ($generated@@232 $generated@@477 $generated@@45)) (and (= ($generated@@304 ($generated@@355 $generated@@476 $generated@@477)) $generated@@477) ($generated@@150 ($generated@@355 $generated@@476 $generated@@477) $generated@@45)))
 :pattern ( ($generated@@232 $generated@@477 $generated@@45))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@72) (= ($generated@@232 ($generated@@304 $generated@@478) $generated@@479) ($generated@@150 $generated@@478 $generated@@479)))
 :pattern ( ($generated@@232 ($generated@@304 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@87 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@84 $generated@@481 $generated@@2)) (<= 0 ($generated@@309 $generated@@480))))
 :pattern ( ($generated@@309 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@286 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@285 $generated@@483)) (<= 0 ($generated@@284 $generated@@482))))
 :pattern ( ($generated@@284 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@72)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@72) (= (type $generated@@487) $generated@@72)) (= ($generated@@484 ($generated@@432 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@432 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@72)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@72) (= (type $generated@@491) $generated@@72)) (= ($generated@@488 ($generated@@432 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@432 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@72) (= (type $generated@@493) $generated@@72)) (= ($generated@@80 ($generated@@432 $generated@@492 $generated@@493)) $generated@@58))
 :pattern ( ($generated@@432 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@72)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@72) (= (type $generated@@497) $generated@@72)) (= ($generated@@494 ($generated@@440 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@440 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@72)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@72) (= (type $generated@@501) $generated@@72)) (= ($generated@@498 ($generated@@440 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@440 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@72) (= (type $generated@@503) $generated@@72)) (= ($generated@@80 ($generated@@440 $generated@@502 $generated@@503)) $generated@@59))
 :pattern ( ($generated@@440 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@162) (= (type $generated@@505) $generated@@162)) (= ($generated@@167 ($generated@@231 $generated@@504 $generated@@505)) $generated@@61))
 :pattern ( ($generated@@231 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@72)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@72) (= (type $generated@@509) $generated@@72)) (= ($generated@@506 ($generated@@153 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@153 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@72)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@72) (= (type $generated@@513) $generated@@72)) (= ($generated@@510 ($generated@@153 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@153 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@162) (= (type $generated@@515) $generated@@162)) (= ($generated@@160 ($generated@@231 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@231 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@162) (= (type $generated@@517) $generated@@162)) (= ($generated@@161 ($generated@@231 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@231 $generated@@516 $generated@@517))
)))
(assert  (and (forall (($generated@@520 T@U) ) (! (= (type ($generated@@518 $generated@@520)) $generated@@72)
 :pattern ( ($generated@@518 $generated@@520))
)) (forall (($generated@@521 T@U) ($generated@@522 Int) ) (! (let (($generated@@523 ($generated@@286 (type $generated@@521))))
(= (type ($generated@@519 $generated@@521 $generated@@522)) $generated@@523))
 :pattern ( ($generated@@519 $generated@@521 $generated@@522))
))))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@285 $generated@@162)) (= (type $generated@@525) $generated@@72)) (= (type $generated@@526) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@524 ($generated@@518 $generated@@525) $generated@@526) (forall (($generated@@527 Int) ) (!  (=> (and (<= 0 $generated@@527) (< $generated@@527 ($generated@@284 $generated@@524))) ($generated@@268 ($generated@@519 $generated@@524 $generated@@527) $generated@@525 $generated@@526))
 :pattern ( ($generated@@519 $generated@@524 $generated@@527))
))))
 :pattern ( ($generated@@82 $generated@@524 ($generated@@518 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@529 Int) ) (! (= ($generated@@528 ($generated@@83 $generated@@529)) $generated@@529)
 :pattern ( ($generated@@83 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@72)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@72) (= ($generated@@530 ($generated@@249 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@249 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@72) (= ($generated@@80 ($generated@@249 $generated@@533)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@72)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@72) (= ($generated@@534 ($generated@@254 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@254 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@72) (= ($generated@@80 ($generated@@254 $generated@@537)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@72)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@72) (= ($generated@@538 ($generated@@170 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@170 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@72) (= ($generated@@80 ($generated@@170 $generated@@541)) $generated@@56))
 :pattern ( ($generated@@170 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@72)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@72) (= ($generated@@542 ($generated@@518 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@518 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@72) (= ($generated@@80 ($generated@@518 $generated@@545)) $generated@@57))
 :pattern ( ($generated@@518 $generated@@545))
)))
(assert (forall (($generated@@546 Int) ) (! (= ($generated@@167 ($generated@@292 $generated@@546)) $generated@@63)
 :pattern ( ($generated@@292 $generated@@546))
)))
(assert (forall (($generated@@547 Int) ) (! (= ($generated@@143 ($generated@@292 $generated@@547)) $generated@@547)
 :pattern ( ($generated@@292 $generated@@547))
)))
(assert (forall (($generated@@548 Int) ) (! (= ($generated@@167 ($generated@@296 $generated@@548)) $generated@@65)
 :pattern ( ($generated@@296 $generated@@548))
)))
(assert (forall (($generated@@549 Int) ) (! (= ($generated@@147 ($generated@@296 $generated@@549)) $generated@@549)
 :pattern ( ($generated@@296 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@142) (= ($generated@@167 ($generated@@300 $generated@@550)) $generated@@66))
 :pattern ( ($generated@@300 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@142) (= ($generated@@361 ($generated@@300 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@300 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (! (let (($generated@@553 (type $generated@@552)))
(= ($generated@@355 $generated@@553 ($generated@@304 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@304 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@554) ($generated@@317 $generated@@162 $generated@@162)) (= (type $generated@@555) $generated@@72)) (= (type $generated@@556) $generated@@72)) (= ($generated@@150 $generated@@554 ($generated@@432 $generated@@555 $generated@@556)) (forall (($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@162) ($generated@@0 ($generated@@89 ($generated@@315 $generated@@554) $generated@@557))) (and ($generated@@232 ($generated@@89 ($generated@@407 $generated@@554) $generated@@557) $generated@@556) ($generated@@232 $generated@@557 $generated@@555)))
 :pattern ( ($generated@@89 ($generated@@407 $generated@@554) $generated@@557))
 :pattern ( ($generated@@89 ($generated@@315 $generated@@554) $generated@@557))
))))
 :pattern ( ($generated@@150 $generated@@554 ($generated@@432 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@335 $generated@@162 $generated@@162)) (= (type $generated@@559) $generated@@72)) (= (type $generated@@560) $generated@@72)) (= ($generated@@150 $generated@@558 ($generated@@440 $generated@@559 $generated@@560)) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@162) ($generated@@0 ($generated@@89 ($generated@@333 $generated@@558) $generated@@561))) (and ($generated@@232 ($generated@@89 ($generated@@415 $generated@@558) $generated@@561) $generated@@560) ($generated@@232 $generated@@561 $generated@@559)))
 :pattern ( ($generated@@89 ($generated@@415 $generated@@558) $generated@@561))
 :pattern ( ($generated@@89 ($generated@@333 $generated@@558) $generated@@561))
))))
 :pattern ( ($generated@@150 $generated@@558 ($generated@@440 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@162) (= (type $generated@@565) $generated@@162)) (< ($generated@@562 $generated@@564) ($generated@@563 ($generated@@231 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@231 $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@162) (= (type $generated@@567) $generated@@162)) (< ($generated@@562 $generated@@567) ($generated@@563 ($generated@@231 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@231 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 Int) ) (! (= ($generated@@150 ($generated@@292 $generated@@568) $generated@@354) ($generated@@150 ($generated@@8 $generated@@568) $generated@@46))
 :pattern ( ($generated@@150 ($generated@@292 $generated@@568) $generated@@354))
)))
(assert (forall (($generated@@569 Int) ) (! (= ($generated@@150 ($generated@@296 $generated@@569) $generated@@354) ($generated@@150 ($generated@@8 $generated@@569) $generated@@46))
 :pattern ( ($generated@@150 ($generated@@296 $generated@@569) $generated@@354))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (and (= (type $generated@@570) $generated@@162) (= (type $generated@@571) $generated@@72)) (= (type $generated@@572) $generated@@72)) ($generated@@232 $generated@@570 ($generated@@432 $generated@@571 $generated@@572))) (and (= ($generated@@304 ($generated@@355 ($generated@@317 $generated@@162 $generated@@162) $generated@@570)) $generated@@570) ($generated@@150 ($generated@@355 ($generated@@317 $generated@@162 $generated@@162) $generated@@570) ($generated@@432 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@232 $generated@@570 ($generated@@432 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (and (= (type $generated@@573) $generated@@162) (= (type $generated@@574) $generated@@72)) (= (type $generated@@575) $generated@@72)) ($generated@@232 $generated@@573 ($generated@@440 $generated@@574 $generated@@575))) (and (= ($generated@@304 ($generated@@355 ($generated@@335 $generated@@162 $generated@@162) $generated@@573)) $generated@@573) ($generated@@150 ($generated@@355 ($generated@@335 $generated@@162 $generated@@162) $generated@@573) ($generated@@440 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@232 $generated@@573 ($generated@@440 $generated@@574 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (and (= (type $generated@@576) $generated@@72) (= (type $generated@@577) $generated@@72)) (= (type $generated@@578) $generated@@162)) ($generated@@232 $generated@@578 ($generated@@153 $generated@@576 $generated@@577))) (and (= ($generated@@304 ($generated@@355 $generated@@142 $generated@@578)) $generated@@578) ($generated@@150 ($generated@@355 $generated@@142 $generated@@578) ($generated@@153 $generated@@576 $generated@@577))))
 :pattern ( ($generated@@232 $generated@@578 ($generated@@153 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@142) (< ($generated@@563 $generated@@579) ($generated@@563 ($generated@@300 $generated@@579))))
 :pattern ( ($generated@@300 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (! (let (($generated@@581 (type $generated@@580)))
 (not ($generated@@0 ($generated@@89 ($generated@@452 $generated@@581) $generated@@580))))
 :pattern ( (let (($generated@@581 (type $generated@@580)))
($generated@@89 ($generated@@452 $generated@@581) $generated@@580)))
)))
(assert (forall (($generated@@583 T@U) ) (! (= (type ($generated@@582 $generated@@583)) $generated@@77)
 :pattern ( ($generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@72) (= (type $generated@@585) $generated@@72)) (and (= ($generated@@80 ($generated@@153 $generated@@584 $generated@@585)) $generated@@62) (= ($generated@@582 ($generated@@153 $generated@@584 $generated@@585)) $generated@@69)))
 :pattern ( ($generated@@153 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@142) (= (type $generated@@587) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@240 $generated@@587) (and ($generated@@141 $generated@@586) ($generated@@82 $generated@@586 $generated@@354 $generated@@587)))) ($generated@@82 ($generated@@8 ($generated@@143 $generated@@586)) $generated@@46 $generated@@587))
 :pattern ( ($generated@@82 ($generated@@8 ($generated@@143 $generated@@586)) $generated@@46 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@142) (= (type $generated@@589) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@240 $generated@@589) (and ($generated@@146 $generated@@588) ($generated@@82 $generated@@588 $generated@@354 $generated@@589)))) ($generated@@82 ($generated@@8 ($generated@@147 $generated@@588)) $generated@@46 $generated@@589))
 :pattern ( ($generated@@82 ($generated@@8 ($generated@@147 $generated@@588)) $generated@@46 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@142) (= ($generated@@562 ($generated@@304 $generated@@590)) ($generated@@563 $generated@@590)))
 :pattern ( ($generated@@562 ($generated@@304 $generated@@590)))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@162) ($generated@@232 $generated@@591 ($generated@@83 0))) (and (= ($generated@@304 ($generated@@355 $generated@@2 $generated@@591)) $generated@@591) ($generated@@150 ($generated@@355 ($generated@@84 $generated@@162 $generated@@4) $generated@@591) ($generated@@83 0))))
 :pattern ( ($generated@@232 $generated@@591 ($generated@@83 0)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@592) $generated@@162) (= (type $generated@@593) $generated@@72)) ($generated@@232 $generated@@592 ($generated@@249 $generated@@593))) (and (= ($generated@@304 ($generated@@355 ($generated@@84 $generated@@162 $generated@@4) $generated@@592)) $generated@@592) ($generated@@150 ($generated@@355 ($generated@@84 $generated@@162 $generated@@4) $generated@@592) ($generated@@249 $generated@@593))))
 :pattern ( ($generated@@232 $generated@@592 ($generated@@249 $generated@@593)))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (= (type $generated@@594) $generated@@162) (= (type $generated@@595) $generated@@72)) ($generated@@232 $generated@@594 ($generated@@254 $generated@@595))) (and (= ($generated@@304 ($generated@@355 ($generated@@84 $generated@@162 $generated@@4) $generated@@594)) $generated@@594) ($generated@@150 ($generated@@355 ($generated@@84 $generated@@162 $generated@@4) $generated@@594) ($generated@@254 $generated@@595))))
 :pattern ( ($generated@@232 $generated@@594 ($generated@@254 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (= (type $generated@@596) $generated@@162) (= (type $generated@@597) $generated@@72)) ($generated@@232 $generated@@596 ($generated@@170 $generated@@597))) (and (= ($generated@@304 ($generated@@355 ($generated@@84 $generated@@162 $generated@@2) $generated@@596)) $generated@@596) ($generated@@150 ($generated@@355 ($generated@@84 $generated@@162 $generated@@2) $generated@@596) ($generated@@170 $generated@@597))))
 :pattern ( ($generated@@232 $generated@@596 ($generated@@170 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@162) (= (type $generated@@599) $generated@@72)) ($generated@@232 $generated@@598 ($generated@@518 $generated@@599))) (and (= ($generated@@304 ($generated@@355 ($generated@@285 $generated@@162) $generated@@598)) $generated@@598) ($generated@@150 ($generated@@355 ($generated@@285 $generated@@162) $generated@@598) ($generated@@518 $generated@@599))))
 :pattern ( ($generated@@232 $generated@@598 ($generated@@518 $generated@@599)))
)))
(assert (= ($generated@@80 $generated@@354) $generated@@64))
(assert (= ($generated@@582 $generated@@354) $generated@@70))
(assert (= ($generated@@80 $generated@@239) $generated@@67))
(assert (= ($generated@@582 $generated@@239) $generated@@71))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (= (type $generated@@600) ($generated@@84 $generated@@162 $generated@@2)) (= (type $generated@@601) $generated@@72)) (= (type $generated@@602) ($generated@@84 $generated@@85 $generated@@86))) (= ($generated@@82 $generated@@600 ($generated@@170 $generated@@601) $generated@@602) (forall (($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@162) (< 0 ($generated ($generated@@89 $generated@@600 $generated@@603)))) ($generated@@268 $generated@@603 $generated@@601 $generated@@602))
 :pattern ( ($generated@@89 $generated@@600 $generated@@603))
))))
 :pattern ( ($generated@@82 $generated@@600 ($generated@@170 $generated@@601) $generated@@602))
)))
(assert (= $generated@@168 ($generated@@261 $generated@@168)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) $generated@@142) (= (type $generated@@605) $generated@@72)) (= (type $generated@@606) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@240 $generated@@606) (and ($generated@@152 $generated@@604) (exists (($generated@@607 T@U) ) (!  (and (= (type $generated@@607) $generated@@72) ($generated@@82 $generated@@604 ($generated@@153 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@82 $generated@@604 ($generated@@153 $generated@@605 $generated@@607) $generated@@606))
))))) ($generated@@268 ($generated@@160 $generated@@604) $generated@@605 $generated@@606))
 :pattern ( ($generated@@268 ($generated@@160 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (and (= (type $generated@@608) $generated@@142) (= (type $generated@@609) $generated@@72)) (= (type $generated@@610) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@240 $generated@@610) (and ($generated@@152 $generated@@608) (exists (($generated@@611 T@U) ) (!  (and (= (type $generated@@611) $generated@@72) ($generated@@82 $generated@@608 ($generated@@153 $generated@@611 $generated@@609) $generated@@610))
 :pattern ( ($generated@@82 $generated@@608 ($generated@@153 $generated@@611 $generated@@609) $generated@@610))
))))) ($generated@@268 ($generated@@161 $generated@@608) $generated@@609 $generated@@610))
 :pattern ( ($generated@@268 ($generated@@161 $generated@@608) $generated@@609 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@142) (= (type $generated@@613) ($generated@@84 $generated@@85 $generated@@86))) (and ($generated@@240 $generated@@613) (and ($generated@@277 $generated@@612) ($generated@@82 $generated@@612 $generated@@239 $generated@@613)))) ($generated@@82 ($generated@@361 $generated@@612) $generated@@354 $generated@@613))
 :pattern ( ($generated@@82 ($generated@@361 $generated@@612) $generated@@354 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@162) (= (type $generated@@615) $generated@@162)) (= ($generated@@231 ($generated@@261 $generated@@614) ($generated@@261 $generated@@615)) ($generated@@261 ($generated@@231 $generated@@614 $generated@@615))))
 :pattern ( ($generated@@231 ($generated@@261 $generated@@614) ($generated@@261 $generated@@615)))
)))
(assert (forall (($generated@@616 Int) ) (! (= ($generated@@304 ($generated@@8 ($generated@@259 $generated@@616))) ($generated@@261 ($generated@@304 ($generated@@8 $generated@@616))))
 :pattern ( ($generated@@304 ($generated@@8 ($generated@@259 $generated@@616))))
)))
(assert (forall (($generated@@617 Int) ) (! (= ($generated@@292 ($generated@@259 $generated@@617)) ($generated@@261 ($generated@@292 $generated@@617)))
 :pattern ( ($generated@@292 ($generated@@259 $generated@@617)))
)))
(assert (forall (($generated@@618 Int) ) (! (= ($generated@@296 ($generated@@259 $generated@@618)) ($generated@@261 ($generated@@296 $generated@@618)))
 :pattern ( ($generated@@296 ($generated@@259 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@142) (= ($generated@@300 ($generated@@261 $generated@@619)) ($generated@@261 ($generated@@300 $generated@@619))))
 :pattern ( ($generated@@300 ($generated@@261 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ) (! (= ($generated@@304 ($generated@@261 $generated@@620)) ($generated@@261 ($generated@@304 $generated@@620)))
 :pattern ( ($generated@@304 ($generated@@261 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ) (! (let (($generated@@622 ($generated@@286 (type $generated@@621))))
 (=> (and (= (type $generated@@621) ($generated@@285 $generated@@622)) (= ($generated@@284 $generated@@621) 0)) (= $generated@@621 ($generated@@283 $generated@@622))))
 :pattern ( ($generated@@284 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (! (let (($generated@@626 (type $generated@@624)))
 (=> (and (and (= (type $generated@@623) ($generated@@84 $generated@@626 $generated@@2)) (= (type $generated@@625) $generated@@2)) (<= 0 ($generated $generated@@625))) (= ($generated@@309 ($generated@@90 $generated@@623 $generated@@624 $generated@@625)) (+ (- ($generated@@309 $generated@@623) ($generated ($generated@@89 $generated@@623 $generated@@624))) ($generated $generated@@625)))))
 :pattern ( ($generated@@309 ($generated@@90 $generated@@623 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (= (type $generated@@627) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@628) $generated@@2)) ($generated@@82 $generated@@628 $generated@@46 $generated@@627))
 :pattern ( ($generated@@82 $generated@@628 $generated@@46 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (= (type $generated@@629) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@630) $generated@@3)) ($generated@@82 $generated@@630 $generated@@47 $generated@@629))
 :pattern ( ($generated@@82 $generated@@630 $generated@@47 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (= (type $generated@@631) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@632) $generated@@4)) ($generated@@82 $generated@@632 $generated@@44 $generated@@631))
 :pattern ( ($generated@@82 $generated@@632 $generated@@44 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@634) $generated@@476)) ($generated@@82 $generated@@634 $generated@@45 $generated@@633))
 :pattern ( ($generated@@82 $generated@@634 $generated@@45 $generated@@633))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) ($generated@@84 $generated@@85 $generated@@86)) (= (type $generated@@636) $generated@@162)) ($generated@@82 $generated@@636 $generated@@48 $generated@@635))
 :pattern ( ($generated@@82 $generated@@636 $generated@@48 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) ($generated@@285 $generated@@162)) (= (type $generated@@638) $generated@@72)) (= ($generated@@150 $generated@@637 ($generated@@518 $generated@@638)) (forall (($generated@@639 Int) ) (!  (=> (and (<= 0 $generated@@639) (< $generated@@639 ($generated@@284 $generated@@637))) ($generated@@232 ($generated@@519 $generated@@637 $generated@@639) $generated@@638))
 :pattern ( ($generated@@519 $generated@@637 $generated@@639))
))))
 :pattern ( ($generated@@150 $generated@@637 ($generated@@518 $generated@@638)))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 Int) ) (!  (=> (= (type $generated@@641) ($generated@@285 $generated@@162)) (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@284 $generated@@641))) (< ($generated@@563 ($generated@@355 $generated@@142 ($generated@@519 $generated@@641 $generated@@642))) ($generated@@640 $generated@@641))))
 :pattern ( ($generated@@563 ($generated@@355 $generated@@142 ($generated@@519 $generated@@641 $generated@@642))))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) ($generated@@317 $generated@@162 $generated@@162)) (= (type $generated@@644) $generated@@72)) (= (type $generated@@645) $generated@@72)) ($generated@@150 $generated@@643 ($generated@@432 $generated@@644 $generated@@645))) (and (and ($generated@@150 ($generated@@315 $generated@@643) ($generated@@249 $generated@@644)) ($generated@@150 ($generated@@369 $generated@@643) ($generated@@249 $generated@@645))) ($generated@@150 ($generated@@406 $generated@@643) ($generated@@249 ($generated@@153 $generated@@644 $generated@@645)))))
 :pattern ( ($generated@@150 $generated@@643 ($generated@@432 $generated@@644 $generated@@645)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (and (= (type $generated@@646) ($generated@@335 $generated@@162 $generated@@162)) (= (type $generated@@647) $generated@@72)) (= (type $generated@@648) $generated@@72)) ($generated@@150 $generated@@646 ($generated@@440 $generated@@647 $generated@@648))) (and (and ($generated@@150 ($generated@@333 $generated@@646) ($generated@@254 $generated@@647)) ($generated@@150 ($generated@@380 $generated@@646) ($generated@@254 $generated@@648))) ($generated@@150 ($generated@@414 $generated@@646) ($generated@@254 ($generated@@153 $generated@@647 $generated@@648)))))
 :pattern ( ($generated@@150 $generated@@646 ($generated@@440 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@649 T@U) ) (!  (=> (= (type $generated@@649) $generated@@2) ($generated@@150 $generated@@649 $generated@@46))
 :pattern ( ($generated@@150 $generated@@649 $generated@@46))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@3) ($generated@@150 $generated@@650 $generated@@47))
 :pattern ( ($generated@@150 $generated@@650 $generated@@47))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@4) ($generated@@150 $generated@@651 $generated@@44))
 :pattern ( ($generated@@150 $generated@@651 $generated@@44))
)))
(assert (forall (($generated@@652 T@U) ) (!  (=> (= (type $generated@@652) $generated@@476) ($generated@@150 $generated@@652 $generated@@45))
 :pattern ( ($generated@@150 $generated@@652 $generated@@45))
)))
(assert (forall (($generated@@653 T@U) ) (!  (=> (= (type $generated@@653) $generated@@162) ($generated@@150 $generated@@653 $generated@@48))
 :pattern ( ($generated@@150 $generated@@653 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@654 () T@U)
(declare-fun $generated@@655 () Int)
(declare-fun $generated@@656 () T@U)
(declare-fun $generated@@657 () Int)
(declare-fun $generated@@658 () Int)
(declare-fun $generated@@659 () Int)
(declare-fun $generated@@660 () Int)
(declare-fun $generated@@661 () Int)
(declare-fun $generated@@662 () Int)
(declare-fun $generated@@663 () T@U)
(declare-fun $generated@@664 () Int)
(declare-fun $generated@@665 () T@U)
(declare-fun $generated@@666 () T@U)
(declare-fun $generated@@667 (T@U) Bool)
(declare-fun $generated@@668 () Int)
(assert  (and (and (and (and (= (type $generated@@654) $generated@@142) (= (type $generated@@656) $generated@@142)) (= (type $generated@@663) ($generated@@84 $generated@@85 $generated@@86))) (= (type $generated@@665) ($generated@@177 $generated@@85 $generated@@4))) (= (type $generated@@666) $generated@@85)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@669 true))
(let (($generated@@670  (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@246 $generated@@654 $generated@@168) (= $generated@@655 ($generated@@259 2)))) (=> (=> ($generated@@246 $generated@@654 $generated@@168) (= $generated@@655 ($generated@@259 2))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> (not ($generated@@246 $generated@@654 $generated@@168)) (< $generated@@655 2)))))))
(let (($generated@@671  (=> (and (and (= $generated@@656 ($generated@@296 $generated@@657)) (= $generated@@658 ($generated@@259 1))) (and (= $generated@@655 $generated@@658) (= (ControlFlow 0 8) 3))) $generated@@670)))
(let (($generated@@672  (=> (not (= $generated@@656 ($generated@@292 $generated@@659))) (and (=> (= (ControlFlow 0 10) 8) $generated@@671) (=> (= (ControlFlow 0 10) 9) $generated@@669)))))
(let (($generated@@673  (=> (= $generated@@656 ($generated@@292 $generated@@659)) (=> (and (= $generated@@660 $generated@@659) ($generated@@150 ($generated@@8 $generated@@660) $generated@@46)) (=> (and (and (= $generated@@661 $generated@@660) (= $generated@@662 ($generated@@259 0))) (and (= $generated@@655 $generated@@662) (= (ControlFlow 0 7) 3))) $generated@@670)))))
(let (($generated@@674  (=> (= $generated@@654 ($generated@@300 $generated@@656)) (=> (and ($generated@@150 $generated@@656 $generated@@354) ($generated@@82 $generated@@656 $generated@@354 $generated@@663)) (and (=> (= (ControlFlow 0 11) 7) $generated@@673) (=> (= (ControlFlow 0 11) 10) $generated@@672))))))
(let (($generated@@675  (=> (and (and (= $generated@@654 $generated@@168) (= $generated@@664 ($generated@@259 2))) (and (= $generated@@655 $generated@@664) (= (ControlFlow 0 5) 3))) $generated@@670)))
(let (($generated@@676 true))
(let (($generated@@677  (=> (not (= $generated@@654 ($generated@@300 $generated@@656))) (and (=> (= (ControlFlow 0 6) 5) $generated@@675) (=> (= (ControlFlow 0 6) 1) $generated@@676)))))
(let (($generated@@678  (=> (= $generated@@665 ($generated@@176 $generated@@666 $generated@@663 $generated@@60 false)) (and (=> (= (ControlFlow 0 12) 11) $generated@@674) (=> (= (ControlFlow 0 12) 6) $generated@@677)))))
(let (($generated@@679  (=> (and ($generated@@240 $generated@@663) ($generated@@667 $generated@@663)) (=> (and (and (and ($generated@@150 $generated@@654 $generated@@239) ($generated@@82 $generated@@654 $generated@@239 $generated@@663)) ($generated@@394 $generated@@654)) (and (= 2 $generated@@668) (= (ControlFlow 0 13) 12))) $generated@@678))))
$generated@@679))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (Int) T@U)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T) T@T)
(declare-fun $generated@@165 (T@T) T@T)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U) T@U)
(declare-fun $generated@@219 (T@U) Bool)
(declare-fun $generated@@223 (T@U T@U) T@U)
(declare-fun $generated@@224 (T@U T@U) Bool)
(declare-fun $generated@@234 (T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (Int) Int)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@263 (T@U T@U) T@U)
(declare-fun $generated@@269 (T@U T@U T@U) Bool)
(declare-fun $generated@@284 (T@T) T@U)
(declare-fun $generated@@285 (T@U) Int)
(declare-fun $generated@@286 (T@T) T@T)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (T@U) Int)
(declare-fun $generated@@299 (T@T) T@U)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@350 (T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@371 (T@U) Bool)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@384 (T@T T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@430 (T@T) T@U)
(declare-fun $generated@@454 () T@T)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@503 (T@U Int) T@U)
(declare-fun $generated@@512 (T@U) Int)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@543 (T@U) Int)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@625 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert (forall (($generated@@77 T@U) ) (! (= (type ($generated@@76 $generated@@77)) $generated@@69)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (= ($generated@@76 $generated@@44) $generated@@49))
(assert (= ($generated@@76 $generated@@45) $generated@@50))
(assert (= ($generated@@76 $generated@@46) $generated@@51))
(assert (= ($generated@@76 $generated@@47) $generated@@52))
(assert (= ($generated@@76 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@89 $generated@@90)) 11)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@80 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@80 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 ($generated@@84 (type $generated@@95))))
(= (type ($generated@@85 $generated@@95 $generated@@96)) $generated@@97))
 :pattern ( ($generated@@85 $generated@@95 $generated@@96))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 (type $generated@@100)))
(let (($generated@@102 (type $generated@@99)))
(= (type ($generated@@86 $generated@@98 $generated@@99 $generated@@100)) ($generated@@80 $generated@@102 $generated@@101))))
 :pattern ( ($generated@@86 $generated@@98 $generated@@99 $generated@@100))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 ($generated@@84 (type $generated@@103))))
 (=> (= (type $generated@@105) $generated@@106) (= ($generated@@85 ($generated@@86 $generated@@103 $generated@@104 $generated@@105) $generated@@104) $generated@@105)))
 :weight 0
))) (and (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@109 $generated@@110) (= ($generated@@85 ($generated@@86 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@85 $generated@@108 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or true (= ($generated@@85 ($generated@@86 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@85 $generated@@112 $generated@@114)))
 :weight 0
)))) (= ($generated@@1 $generated@@81) 12)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 ($generated@@71 (type $generated@@116))))
(= (type ($generated@@87 $generated@@115 $generated@@116)) $generated@@117))
 :pattern ( ($generated@@87 $generated@@115 $generated@@116))
))) (= ($generated@@1 $generated@@82) 13)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= (type ($generated@@88 $generated@@118 $generated@@119 $generated@@120)) $generated@@82)
 :pattern ( ($generated@@88 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@71 (type $generated@@122))))
 (=> (= (type $generated@@123) $generated@@124) (= ($generated@@87 ($generated@@88 $generated@@121 $generated@@122 $generated@@123) $generated@@122) $generated@@123)))
 :weight 0
))) (and (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@87 ($generated@@88 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@87 $generated@@126 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@87 $generated@@130 $generated@@132)))
 :weight 0
)))) (forall (($generated@@133 Int) ) (! (= (type ($generated@@79 $generated@@133)) $generated@@68)
 :pattern ( ($generated@@79 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (= (type $generated@@134) $generated@@2) (= (type $generated@@135) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
 :pattern ( ($generated@@78 $generated@@134 ($generated@@79 0) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= (type $generated@@137) $generated@@2) ($generated@@136 $generated@@137 ($generated@@79 0)))
 :pattern ( ($generated@@136 $generated@@137 ($generated@@79 0)))
)))
(assert  (and (= ($generated@@1 $generated@@140) 14) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@139 $generated@@141 $generated@@142)) $generated@@68)
 :pattern ( ($generated@@139 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (and (= (type $generated@@143) $generated@@68) (= (type $generated@@144) $generated@@68)) (= (type $generated@@145) $generated@@140)) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144))) ($generated@@138 $generated@@145))
 :pattern ( ($generated@@138 $generated@@145) ($generated@@136 $generated@@145 ($generated@@139 $generated@@143 $generated@@144)))
)))
(assert  (and (and (= ($generated@@1 $generated@@149) 15) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@147 $generated@@150))
))) (forall (($generated@@151 T@U) ) (! (= (type ($generated@@148 $generated@@151)) $generated@@149)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (and (= (type $generated@@152) $generated@@140) (= (type $generated@@153) $generated@@140)) true) (= ($generated@@146 $generated@@152 $generated@@153)  (and (= ($generated@@147 $generated@@152) ($generated@@147 $generated@@153)) (= ($generated@@148 $generated@@152) ($generated@@148 $generated@@153)))))
 :pattern ( ($generated@@146 $generated@@152 $generated@@153))
)))
(assert  (and (forall (($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@156)) $generated@@72)
 :pattern ( ($generated@@154 $generated@@156))
)) (= (type $generated@@155) $generated@@140)))
(assert (= ($generated@@154 $generated@@155) $generated@@63))
(assert (forall (($generated@@159 T@U) ) (! (= (type ($generated@@157 $generated@@159)) $generated@@68)
 :pattern ( ($generated@@157 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (= (type $generated@@160) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@161) $generated@@68)) ($generated@@136 $generated@@160 ($generated@@157 $generated@@161))) ($generated@@158 $generated@@160))
 :pattern ( ($generated@@136 $generated@@160 ($generated@@157 $generated@@161)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (= ($generated@@1 ($generated@@164 $generated@@168 $generated@@169)) 16)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@165 ($generated@@164 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@164 $generated@@170 $generated@@171))
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@166 ($generated@@164 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@164 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (let (($generated@@177 ($generated@@166 (type $generated@@174))))
(= (type ($generated@@162 $generated@@174 $generated@@175 $generated@@176)) $generated@@177))
 :pattern ( ($generated@@162 $generated@@174 $generated@@175 $generated@@176))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (let (($generated@@182 (type $generated@@181)))
(let (($generated@@183 (type $generated@@179)))
(= (type ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181)) ($generated@@164 $generated@@183 $generated@@182))))
 :pattern ( ($generated@@167 $generated@@178 $generated@@179 $generated@@180 $generated@@181))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (let (($generated@@188 ($generated@@166 (type $generated@@184))))
 (=> (= (type $generated@@187) $generated@@188) (= ($generated@@162 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@185 $generated@@186) $generated@@187)))
 :weight 0
))) (and (and (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@162 ($generated@@167 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@162 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@162 ($generated@@167 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@162 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or true (= ($generated@@162 ($generated@@167 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@162 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ) (! (= (type ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210)) ($generated@@164 $generated@@81 $generated@@4))
 :pattern ( ($generated@@163 $generated@@207 $generated@@208 $generated@@209 $generated@@210))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@71 (type $generated@@216))))
 (=> (and (and (and (and (= (type $generated@@211) $generated@@81) (= (type $generated@@212) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@213) ($generated@@70 $generated@@4))) (= (type $generated@@215) $generated@@81)) (= (type $generated@@216) ($generated@@70 $generated@@217))) (= ($generated@@0 ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (not (= $generated@@215 $generated@@211)) ($generated@@0 ($generated@@87 ($generated@@85 $generated@@212 $generated@@215) $generated@@213))) $generated@@214))))
 :pattern ( ($generated@@162 ($generated@@163 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@220 T@U) ) (! (= (type ($generated@@218 $generated@@220)) $generated@@68)
 :pattern ( ($generated@@218 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and (= (type $generated@@221) $generated@@68) (= (type $generated@@222) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@219 $generated@@222)) ($generated@@78 $generated@@155 ($generated@@218 $generated@@221) $generated@@222))
 :pattern ( ($generated@@78 $generated@@155 ($generated@@218 $generated@@221) $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= (type ($generated@@223 $generated@@225 $generated@@226)) $generated@@140)
 :pattern ( ($generated@@223 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and (and (and (= (type $generated@@227) $generated@@68) (= (type $generated@@228) $generated@@68)) (= (type $generated@@229) $generated@@149)) (= (type $generated@@230) $generated@@149)) (= ($generated@@136 ($generated@@223 $generated@@229 $generated@@230) ($generated@@139 $generated@@227 $generated@@228))  (and ($generated@@224 $generated@@229 $generated@@227) ($generated@@224 $generated@@230 $generated@@228))))
 :pattern ( ($generated@@136 ($generated@@223 $generated@@229 $generated@@230) ($generated@@139 $generated@@227 $generated@@228)))
)))
(assert (forall (($generated@@231 T@U) ) (!  (=> (= (type $generated@@231) $generated@@68) ($generated@@136 $generated@@155 ($generated@@218 $generated@@231)))
 :pattern ( ($generated@@136 $generated@@155 ($generated@@218 $generated@@231)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) $generated@@140) (= (type $generated@@233) $generated@@140)) (= ($generated@@146 $generated@@232 $generated@@233) (= $generated@@232 $generated@@233)))
 :pattern ( ($generated@@146 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@235) $generated@@140) (= (type $generated@@236) $generated@@140)) (= ($generated@@234 $generated@@235 $generated@@236) (= $generated@@235 $generated@@236)))
 :pattern ( ($generated@@234 $generated@@235 $generated@@236))
)))
(assert  (and (forall (($generated@@240 T@U) ) (! (= (type ($generated@@238 $generated@@240)) $generated@@149)
 :pattern ( ($generated@@238 $generated@@240))
)) (forall (($generated@@241 T@U) ) (! (= (type ($generated@@239 $generated@@241)) $generated@@140)
 :pattern ( ($generated@@239 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (and (= (type $generated@@242) $generated@@140) (= (type $generated@@243) $generated@@140)) (and ($generated@@237 $generated@@242) ($generated@@237 $generated@@243))) (= ($generated@@234 $generated@@242 $generated@@243)  (and (= ($generated@@238 $generated@@242) ($generated@@238 $generated@@243)) ($generated@@234 ($generated@@239 $generated@@242) ($generated@@239 $generated@@243)))))
 :pattern ( ($generated@@234 $generated@@242 $generated@@243) ($generated@@237 $generated@@242))
 :pattern ( ($generated@@234 $generated@@242 $generated@@243) ($generated@@237 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= (type ($generated@@244 $generated@@245)) $generated@@68)
 :pattern ( ($generated@@244 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@247) $generated@@68)) (= ($generated@@136 $generated@@246 ($generated@@244 $generated@@247)) (forall (($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@248) $generated@@149) ($generated@@0 ($generated@@85 $generated@@246 $generated@@248))) ($generated@@224 $generated@@248 $generated@@247))
 :pattern ( ($generated@@85 $generated@@246 $generated@@248))
))))
 :pattern ( ($generated@@136 $generated@@246 ($generated@@244 $generated@@247)))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@68)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@252) $generated@@68)) (= ($generated@@136 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@149) ($generated@@0 ($generated@@85 $generated@@251 $generated@@253))) ($generated@@224 $generated@@253 $generated@@252))
 :pattern ( ($generated@@85 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@136 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 Int) ) (! (= ($generated@@254 $generated@@255) $generated@@255)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (let (($generated@@258 (type $generated@@257)))
(= (type ($generated@@256 $generated@@257)) $generated@@258))
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= ($generated@@256 $generated@@259) $generated@@259)
 :pattern ( ($generated@@256 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@261) $generated@@140) (= (type $generated@@262) $generated@@140)) (and ($generated@@260 $generated@@261) ($generated@@260 $generated@@262))) (= ($generated@@234 $generated@@261 $generated@@262) true))
 :pattern ( ($generated@@234 $generated@@261 $generated@@262) ($generated@@260 $generated@@261))
 :pattern ( ($generated@@234 $generated@@261 $generated@@262) ($generated@@260 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (! (= (type ($generated@@263 $generated@@264 $generated@@265)) $generated@@140)
 :pattern ( ($generated@@263 $generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@68) (= (type $generated@@267) $generated@@149)) (= (type $generated@@268) $generated@@140)) (= ($generated@@136 ($generated@@263 $generated@@267 $generated@@268) ($generated@@218 $generated@@266))  (and ($generated@@224 $generated@@267 $generated@@266) ($generated@@136 $generated@@268 ($generated@@218 $generated@@266)))))
 :pattern ( ($generated@@136 ($generated@@263 $generated@@267 $generated@@268) ($generated@@218 $generated@@266)))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@270) $generated@@68) (= (type $generated@@271) $generated@@68)) (= (type $generated@@272) $generated@@149)) (= (type $generated@@273) $generated@@149)) (= (type $generated@@274) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@219 $generated@@274)) (= ($generated@@78 ($generated@@223 $generated@@272 $generated@@273) ($generated@@139 $generated@@270 $generated@@271) $generated@@274)  (and ($generated@@269 $generated@@272 $generated@@270 $generated@@274) ($generated@@269 $generated@@273 $generated@@271 $generated@@274))))
 :pattern ( ($generated@@78 ($generated@@223 $generated@@272 $generated@@273) ($generated@@139 $generated@@270 $generated@@271) $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (= (type $generated@@275) $generated@@140) (= ($generated@@138 $generated@@275) (= ($generated@@154 $generated@@275) $generated@@61)))
 :pattern ( ($generated@@138 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@140) (= ($generated@@260 $generated@@276) (= ($generated@@154 $generated@@276) $generated@@63)))
 :pattern ( ($generated@@260 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@140) (= ($generated@@237 $generated@@277) (= ($generated@@154 $generated@@277) $generated@@65)))
 :pattern ( ($generated@@237 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@140) ($generated@@138 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@149) (= (type $generated@@280) $generated@@149)) (= $generated@@278 ($generated@@223 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@138 $generated@@278))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@140) ($generated@@237 $generated@@281)) (exists (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (and (and (= (type $generated@@282) $generated@@149) (= (type $generated@@283) $generated@@140)) (= $generated@@281 ($generated@@263 $generated@@282 $generated@@283)))
 :no-pattern (type $generated@@282)
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
)))
 :pattern ( ($generated@@237 $generated@@281))
)))
(assert  (and (and (forall (($generated@@288 T@T) ) (= ($generated@@1 ($generated@@286 $generated@@288)) 17)) (forall (($generated@@289 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@289)) $generated@@289)
 :pattern ( ($generated@@286 $generated@@289))
))) (forall (($generated@@290 T@T) ) (! (= (type ($generated@@284 $generated@@290)) ($generated@@286 $generated@@290))
 :pattern ( ($generated@@284 $generated@@290))
))))
(assert (forall (($generated@@291 T@T) ) (! (= ($generated@@285 ($generated@@284 $generated@@291)) 0)
 :pattern ( ($generated@@284 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (and (= (type $generated@@292) $generated@@140) ($generated@@260 $generated@@292)) (= $generated@@292 $generated@@155))
 :pattern ( ($generated@@260 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@149)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@68) (= (type $generated@@297) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@269 ($generated@@293 $generated@@295) $generated@@296 $generated@@297) ($generated@@78 $generated@@295 $generated@@296 $generated@@297)))
 :pattern ( ($generated@@269 ($generated@@293 $generated@@295) $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@300 T@T) ) (! (= (type ($generated@@299 $generated@@300)) ($generated@@80 $generated@@300 $generated@@2))
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (! (let (($generated@@302 ($generated@@83 (type $generated@@301))))
 (=> (= (type $generated@@301) ($generated@@80 $generated@@302 $generated@@2)) (and (= (= ($generated@@298 $generated@@301) 0) (= $generated@@301 ($generated@@299 $generated@@302))) (=> (not (= ($generated@@298 $generated@@301) 0)) (exists (($generated@@303 T@U) ) (!  (and (= (type $generated@@303) $generated@@302) (< 0 ($generated ($generated@@85 $generated@@301 $generated@@303))))
 :no-pattern (type $generated@@303)
 :no-pattern ($generated $generated@@303)
 :no-pattern ($generated@@0 $generated@@303)
))))))
 :pattern ( ($generated@@298 $generated@@301))
)))
(assert (forall (($generated@@305 T@U) ) (! (= (type ($generated@@304 $generated@@305)) $generated@@73)
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@68) (and (= ($generated@@76 ($generated@@218 $generated@@306)) $generated@@64) (= ($generated@@304 ($generated@@218 $generated@@306)) $generated@@67)))
 :pattern ( ($generated@@218 $generated@@306))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 18)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@80 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@85 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@85 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 19)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@80 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@85 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@85 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@83 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@80 $generated@@344 $generated@@2)) (= ($generated@@158 $generated@@343) (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@344) (and (<= 0 ($generated ($generated@@85 $generated@@343 $generated@@345))) (<= ($generated ($generated@@85 $generated@@343 $generated@@345)) ($generated@@298 $generated@@343))))
 :pattern ( ($generated@@85 $generated@@343 $generated@@345))
)))))
 :pattern ( ($generated@@158 $generated@@343))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@311 (type $generated@@346))))
(let (($generated@@348 ($generated@@310 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@309 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@308 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@348) ($generated@@0 ($generated@@85 ($generated@@307 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@307 $generated@@346))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@311 (type $generated@@351))))
(= (type ($generated@@350 $generated@@351)) ($generated@@80 $generated@@352 $generated@@4)))
 :pattern ( ($generated@@350 $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (let (($generated@@354 ($generated@@311 (type $generated@@353))))
(let (($generated@@355 ($generated@@310 (type $generated@@353))))
 (=> (= (type $generated@@353) ($generated@@309 $generated@@355 $generated@@354)) (or (= $generated@@353 ($generated@@308 $generated@@355 $generated@@354)) (exists (($generated@@356 T@U) ) (!  (and (= (type $generated@@356) $generated@@354) ($generated@@0 ($generated@@85 ($generated@@350 $generated@@353) $generated@@356)))
 :no-pattern (type $generated@@356)
 :no-pattern ($generated $generated@@356)
 :no-pattern ($generated@@0 $generated@@356)
))))))
 :pattern ( ($generated@@350 $generated@@353))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@329 (type $generated@@357))))
(let (($generated@@359 ($generated@@328 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@327 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@326 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@325 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@329 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@80 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@329 (type $generated@@364))))
(let (($generated@@366 ($generated@@328 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@327 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@326 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@85 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@368) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@369) $generated@@68)) (= ($generated@@136 $generated@@368 ($generated@@157 $generated@@369)) (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@149) (< 0 ($generated ($generated@@85 $generated@@368 $generated@@370)))) ($generated@@224 $generated@@370 $generated@@369))
 :pattern ( ($generated@@85 $generated@@368 $generated@@370))
))))
 :pattern ( ($generated@@136 $generated@@368 ($generated@@157 $generated@@369)))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@140) ($generated@@371 $generated@@372)) (or ($generated@@260 $generated@@372) ($generated@@237 $generated@@372)))
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ($generated@@375 T@U) ) (!  (=> (and (and (= (type $generated@@373) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@374) $generated@@68)) (= (type $generated@@375) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@373 ($generated@@244 $generated@@374) $generated@@375) (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@149) ($generated@@0 ($generated@@85 $generated@@373 $generated@@376))) ($generated@@269 $generated@@376 $generated@@374 $generated@@375))
 :pattern ( ($generated@@85 $generated@@373 $generated@@376))
))))
 :pattern ( ($generated@@78 $generated@@373 ($generated@@244 $generated@@374) $generated@@375))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ) (!  (=> (and (and (= (type $generated@@377) ($generated@@80 $generated@@149 $generated@@4)) (= (type $generated@@378) $generated@@68)) (= (type $generated@@379) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@377 ($generated@@249 $generated@@378) $generated@@379) (forall (($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@380) $generated@@149) ($generated@@0 ($generated@@85 $generated@@377 $generated@@380))) ($generated@@269 $generated@@380 $generated@@378 $generated@@379))
 :pattern ( ($generated@@85 $generated@@377 $generated@@380))
))))
 :pattern ( ($generated@@78 $generated@@377 ($generated@@249 $generated@@378) $generated@@379))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 (type $generated@@381)))
(= ($generated ($generated@@85 ($generated@@299 $generated@@382) $generated@@381)) 0))
 :pattern ( (let (($generated@@382 (type $generated@@381)))
($generated@@85 ($generated@@299 $generated@@382) $generated@@381)))
)))
(assert  (and (and (forall (($generated@@386 T@U) ) (! (= (type ($generated@@383 $generated@@386)) ($generated@@80 $generated@@149 $generated@@4))
 :pattern ( ($generated@@383 $generated@@386))
)) (forall (($generated@@387 T@T) ($generated@@388 T@U) ) (! (= (type ($generated@@384 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@384 $generated@@387 $generated@@388))
))) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@311 (type $generated@@389))))
(let (($generated@@391 ($generated@@310 (type $generated@@389))))
(= (type ($generated@@385 $generated@@389)) ($generated@@80 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@385 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@309 $generated@@149 $generated@@149)) (= (type $generated@@393) $generated@@149)) (= ($generated@@0 ($generated@@85 ($generated@@383 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@85 ($generated@@307 $generated@@392) ($generated@@147 ($generated@@384 $generated@@140 $generated@@393)))) (= ($generated@@85 ($generated@@385 $generated@@392) ($generated@@147 ($generated@@384 $generated@@140 $generated@@393))) ($generated@@148 ($generated@@384 $generated@@140 $generated@@393))))))
 :pattern ( ($generated@@85 ($generated@@383 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@80 $generated@@149 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@329 (type $generated@@397))))
(let (($generated@@399 ($generated@@328 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@80 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@327 $generated@@149 $generated@@149)) (= (type $generated@@401) $generated@@149)) (= ($generated@@0 ($generated@@85 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@85 ($generated@@325 $generated@@400) ($generated@@147 ($generated@@384 $generated@@140 $generated@@401)))) (= ($generated@@85 ($generated@@395 $generated@@400) ($generated@@147 ($generated@@384 $generated@@140 $generated@@401))) ($generated@@148 ($generated@@384 $generated@@140 $generated@@401))))))
 :pattern ( ($generated@@85 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@310 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@309 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@85 ($generated@@350 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@85 ($generated@@307 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@85 ($generated@@385 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@85 ($generated@@307 $generated@@402) $generated@@406))
 :pattern ( ($generated@@85 ($generated@@385 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@85 ($generated@@350 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@328 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@327 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@85 ($generated@@361 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@85 ($generated@@325 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@85 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@407) $generated@@411))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@85 ($generated@@361 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@68)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@309 $generated@@149 $generated@@149)) (= (type $generated@@416) $generated@@68)) (= (type $generated@@417) $generated@@68)) (= (type $generated@@418) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@307 $generated@@415) $generated@@419))) (and ($generated@@269 ($generated@@85 ($generated@@385 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@269 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@85 ($generated@@385 $generated@@415) $generated@@419))
 :pattern ( ($generated@@85 ($generated@@307 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@78 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@68)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@327 $generated@@149 $generated@@149)) (= (type $generated@@424) $generated@@68)) (= (type $generated@@425) $generated@@68)) (= (type $generated@@426) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@423) $generated@@427))) (and ($generated@@269 ($generated@@85 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@269 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@78 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (= (type $generated@@428) $generated@@68) (= (type $generated@@429) $generated@@140)) ($generated@@136 $generated@@429 ($generated@@218 $generated@@428))) (or ($generated@@260 $generated@@429) ($generated@@237 $generated@@429)))
 :pattern ( ($generated@@237 $generated@@429) ($generated@@136 $generated@@429 ($generated@@218 $generated@@428)))
 :pattern ( ($generated@@260 $generated@@429) ($generated@@136 $generated@@429 ($generated@@218 $generated@@428)))
)))
(assert (forall (($generated@@431 T@T) ) (! (= (type ($generated@@430 $generated@@431)) ($generated@@80 $generated@@431 $generated@@4))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@329 (type $generated@@432))))
(let (($generated@@434 ($generated@@328 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@327 $generated@@434 $generated@@433)) (= (= $generated@@432 ($generated@@326 $generated@@434 $generated@@433)) (= ($generated@@325 $generated@@432) ($generated@@430 $generated@@434))))))
 :pattern ( ($generated@@325 $generated@@432))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@329 (type $generated@@435))))
(let (($generated@@437 ($generated@@328 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@327 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@326 $generated@@437 $generated@@436)) (= ($generated@@361 $generated@@435) ($generated@@430 $generated@@436))))))
 :pattern ( ($generated@@361 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@329 (type $generated@@438))))
(let (($generated@@440 ($generated@@328 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@327 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@326 $generated@@440 $generated@@439)) (= ($generated@@394 $generated@@438) ($generated@@430 $generated@@149))))))
 :pattern ( ($generated@@394 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@311 (type $generated@@441))))
(let (($generated@@443 ($generated@@310 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@309 $generated@@443 $generated@@442)) (or (= $generated@@441 ($generated@@308 $generated@@443 $generated@@442)) (exists (($generated@@444 T@U) ($generated@@445 T@U) ) (!  (and (and (= (type $generated@@444) $generated@@149) (= (type $generated@@445) $generated@@149)) ($generated@@0 ($generated@@85 ($generated@@383 $generated@@441) ($generated@@293 ($generated@@223 $generated@@444 $generated@@445)))))
 :no-pattern (type $generated@@444)
 :no-pattern (type $generated@@445)
 :no-pattern ($generated $generated@@444)
 :no-pattern ($generated@@0 $generated@@444)
 :no-pattern ($generated $generated@@445)
 :no-pattern ($generated@@0 $generated@@445)
))))))
 :pattern ( ($generated@@383 $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@329 (type $generated@@446))))
(let (($generated@@448 ($generated@@328 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@327 $generated@@448 $generated@@447)) (or (= $generated@@446 ($generated@@326 $generated@@448 $generated@@447)) (exists (($generated@@449 T@U) ($generated@@450 T@U) ) (!  (and (and (= (type $generated@@449) $generated@@149) (= (type $generated@@450) $generated@@149)) ($generated@@0 ($generated@@85 ($generated@@394 $generated@@446) ($generated@@293 ($generated@@223 $generated@@449 $generated@@450)))))
 :no-pattern (type $generated@@449)
 :no-pattern (type $generated@@450)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
 :no-pattern ($generated $generated@@450)
 :no-pattern ($generated@@0 $generated@@450)
))))))
 :pattern ( ($generated@@394 $generated@@446))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@149) ($generated@@224 $generated@@451 $generated@@46)) (and (= ($generated@@293 ($generated@@384 $generated@@2 $generated@@451)) $generated@@451) ($generated@@136 ($generated@@384 $generated@@2 $generated@@451) $generated@@46)))
 :pattern ( ($generated@@224 $generated@@451 $generated@@46))
)))
(assert (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@149) ($generated@@224 $generated@@452 $generated@@47)) (and (= ($generated@@293 ($generated@@384 $generated@@3 $generated@@452)) $generated@@452) ($generated@@136 ($generated@@384 $generated@@3 $generated@@452) $generated@@47)))
 :pattern ( ($generated@@224 $generated@@452 $generated@@47))
)))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@149) ($generated@@224 $generated@@453 $generated@@44)) (and (= ($generated@@293 ($generated@@384 $generated@@4 $generated@@453)) $generated@@453) ($generated@@136 ($generated@@384 $generated@@4 $generated@@453) $generated@@44)))
 :pattern ( ($generated@@224 $generated@@453 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@454) 20))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@149) ($generated@@224 $generated@@455 $generated@@45)) (and (= ($generated@@293 ($generated@@384 $generated@@454 $generated@@455)) $generated@@455) ($generated@@136 ($generated@@384 $generated@@454 $generated@@455) $generated@@45)))
 :pattern ( ($generated@@224 $generated@@455 $generated@@45))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (= (type $generated@@457) $generated@@68) (= ($generated@@224 ($generated@@293 $generated@@456) $generated@@457) ($generated@@136 $generated@@456 $generated@@457)))
 :pattern ( ($generated@@224 ($generated@@293 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@83 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@80 $generated@@459 $generated@@2)) (<= 0 ($generated@@298 $generated@@458))))
 :pattern ( ($generated@@298 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@287 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@286 $generated@@461)) (<= 0 ($generated@@285 $generated@@460))))
 :pattern ( ($generated@@285 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@68)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@68) (= (type $generated@@465) $generated@@68)) (= ($generated@@462 ($generated@@412 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@412 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@68)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@68) (= (type $generated@@469) $generated@@68)) (= ($generated@@466 ($generated@@412 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@412 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@68) (= (type $generated@@471) $generated@@68)) (= ($generated@@76 ($generated@@412 $generated@@470 $generated@@471)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@68)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@68) (= (type $generated@@475) $generated@@68)) (= ($generated@@472 ($generated@@420 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@420 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@68)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@68) (= (type $generated@@479) $generated@@68)) (= ($generated@@476 ($generated@@420 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@420 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@68) (= (type $generated@@481) $generated@@68)) (= ($generated@@76 ($generated@@420 $generated@@480 $generated@@481)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@149) (= (type $generated@@483) $generated@@149)) (= ($generated@@154 ($generated@@223 $generated@@482 $generated@@483)) $generated@@61))
 :pattern ( ($generated@@223 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@68)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@68) (= (type $generated@@487) $generated@@68)) (= ($generated@@484 ($generated@@139 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@139 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@68)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@68) (= (type $generated@@491) $generated@@68)) (= ($generated@@488 ($generated@@139 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@139 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@149) (= (type $generated@@493) $generated@@149)) (= ($generated@@147 ($generated@@223 $generated@@492 $generated@@493)) $generated@@492))
 :pattern ( ($generated@@223 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@149) (= (type $generated@@495) $generated@@149)) (= ($generated@@148 ($generated@@223 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@223 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@149) (= (type $generated@@497) $generated@@140)) (= ($generated@@154 ($generated@@263 $generated@@496 $generated@@497)) $generated@@65))
 :pattern ( ($generated@@263 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@149) (= (type $generated@@499) $generated@@140)) (= ($generated@@238 ($generated@@263 $generated@@498 $generated@@499)) $generated@@498))
 :pattern ( ($generated@@263 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@149) (= (type $generated@@501) $generated@@140)) (= ($generated@@239 ($generated@@263 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@263 $generated@@500 $generated@@501))
)))
(assert  (and (forall (($generated@@504 T@U) ) (! (= (type ($generated@@502 $generated@@504)) $generated@@68)
 :pattern ( ($generated@@502 $generated@@504))
)) (forall (($generated@@505 T@U) ($generated@@506 Int) ) (! (let (($generated@@507 ($generated@@287 (type $generated@@505))))
(= (type ($generated@@503 $generated@@505 $generated@@506)) $generated@@507))
 :pattern ( ($generated@@503 $generated@@505 $generated@@506))
))))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ($generated@@510 T@U) ) (!  (=> (and (and (= (type $generated@@508) ($generated@@286 $generated@@149)) (= (type $generated@@509) $generated@@68)) (= (type $generated@@510) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@508 ($generated@@502 $generated@@509) $generated@@510) (forall (($generated@@511 Int) ) (!  (=> (and (<= 0 $generated@@511) (< $generated@@511 ($generated@@285 $generated@@508))) ($generated@@269 ($generated@@503 $generated@@508 $generated@@511) $generated@@509 $generated@@510))
 :pattern ( ($generated@@503 $generated@@508 $generated@@511))
))))
 :pattern ( ($generated@@78 $generated@@508 ($generated@@502 $generated@@509) $generated@@510))
)))
(assert (forall (($generated@@513 Int) ) (! (= ($generated@@512 ($generated@@79 $generated@@513)) $generated@@513)
 :pattern ( ($generated@@79 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@68)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (= (type $generated@@516) $generated@@68) (= ($generated@@514 ($generated@@244 $generated@@516)) $generated@@516))
 :pattern ( ($generated@@244 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@68) (= ($generated@@76 ($generated@@244 $generated@@517)) $generated@@54))
 :pattern ( ($generated@@244 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@68)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@68) (= ($generated@@518 ($generated@@249 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@249 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@68) (= ($generated@@76 ($generated@@249 $generated@@521)) $generated@@55))
 :pattern ( ($generated@@249 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@68)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@68) (= ($generated@@522 ($generated@@157 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@157 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@68) (= ($generated@@76 ($generated@@157 $generated@@525)) $generated@@56))
 :pattern ( ($generated@@157 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@68)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@68) (= ($generated@@526 ($generated@@502 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@502 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@68) (= ($generated@@76 ($generated@@502 $generated@@529)) $generated@@57))
 :pattern ( ($generated@@502 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@68)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@68) (= ($generated@@530 ($generated@@218 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@218 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 (type $generated@@533)))
(= ($generated@@384 $generated@@534 ($generated@@293 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@293 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@309 $generated@@149 $generated@@149)) (= (type $generated@@536) $generated@@68)) (= (type $generated@@537) $generated@@68)) (= ($generated@@136 $generated@@535 ($generated@@412 $generated@@536 $generated@@537)) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@307 $generated@@535) $generated@@538))) (and ($generated@@224 ($generated@@85 ($generated@@385 $generated@@535) $generated@@538) $generated@@537) ($generated@@224 $generated@@538 $generated@@536)))
 :pattern ( ($generated@@85 ($generated@@385 $generated@@535) $generated@@538))
 :pattern ( ($generated@@85 ($generated@@307 $generated@@535) $generated@@538))
))))
 :pattern ( ($generated@@136 $generated@@535 ($generated@@412 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@327 $generated@@149 $generated@@149)) (= (type $generated@@540) $generated@@68)) (= (type $generated@@541) $generated@@68)) (= ($generated@@136 $generated@@539 ($generated@@420 $generated@@540 $generated@@541)) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@149) ($generated@@0 ($generated@@85 ($generated@@325 $generated@@539) $generated@@542))) (and ($generated@@224 ($generated@@85 ($generated@@395 $generated@@539) $generated@@542) $generated@@541) ($generated@@224 $generated@@542 $generated@@540)))
 :pattern ( ($generated@@85 ($generated@@395 $generated@@539) $generated@@542))
 :pattern ( ($generated@@85 ($generated@@325 $generated@@539) $generated@@542))
))))
 :pattern ( ($generated@@136 $generated@@539 ($generated@@420 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@149) (= (type $generated@@546) $generated@@149)) (< ($generated@@543 $generated@@545) ($generated@@544 ($generated@@223 $generated@@545 $generated@@546))))
 :pattern ( ($generated@@223 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@149) (= (type $generated@@548) $generated@@149)) (< ($generated@@543 $generated@@548) ($generated@@544 ($generated@@223 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@223 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@149) (= (type $generated@@550) $generated@@140)) (< ($generated@@543 $generated@@549) ($generated@@544 ($generated@@263 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@263 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@149) (= (type $generated@@552) $generated@@140)) (< ($generated@@544 $generated@@552) ($generated@@544 ($generated@@263 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@263 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@149) (= (type $generated@@554) $generated@@68)) (= (type $generated@@555) $generated@@68)) ($generated@@224 $generated@@553 ($generated@@412 $generated@@554 $generated@@555))) (and (= ($generated@@293 ($generated@@384 ($generated@@309 $generated@@149 $generated@@149) $generated@@553)) $generated@@553) ($generated@@136 ($generated@@384 ($generated@@309 $generated@@149 $generated@@149) $generated@@553) ($generated@@412 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@224 $generated@@553 ($generated@@412 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@149) (= (type $generated@@557) $generated@@68)) (= (type $generated@@558) $generated@@68)) ($generated@@224 $generated@@556 ($generated@@420 $generated@@557 $generated@@558))) (and (= ($generated@@293 ($generated@@384 ($generated@@327 $generated@@149 $generated@@149) $generated@@556)) $generated@@556) ($generated@@136 ($generated@@384 ($generated@@327 $generated@@149 $generated@@149) $generated@@556) ($generated@@420 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@224 $generated@@556 ($generated@@420 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@68) (= (type $generated@@560) $generated@@68)) (= (type $generated@@561) $generated@@149)) ($generated@@224 $generated@@561 ($generated@@139 $generated@@559 $generated@@560))) (and (= ($generated@@293 ($generated@@384 $generated@@140 $generated@@561)) $generated@@561) ($generated@@136 ($generated@@384 $generated@@140 $generated@@561) ($generated@@139 $generated@@559 $generated@@560))))
 :pattern ( ($generated@@224 $generated@@561 ($generated@@139 $generated@@559 $generated@@560)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@140) (= (type $generated@@563) $generated@@68)) (= (type $generated@@564) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@219 $generated@@564) (and ($generated@@237 $generated@@562) ($generated@@78 $generated@@562 ($generated@@218 $generated@@563) $generated@@564)))) ($generated@@269 ($generated@@238 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@269 ($generated@@238 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (! (let (($generated@@566 (type $generated@@565)))
 (not ($generated@@0 ($generated@@85 ($generated@@430 $generated@@566) $generated@@565))))
 :pattern ( (let (($generated@@566 (type $generated@@565)))
($generated@@85 ($generated@@430 $generated@@566) $generated@@565)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@68) (= (type $generated@@568) $generated@@68)) (and (= ($generated@@76 ($generated@@139 $generated@@567 $generated@@568)) $generated@@62) (= ($generated@@304 ($generated@@139 $generated@@567 $generated@@568)) $generated@@66)))
 :pattern ( ($generated@@139 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@140) (= ($generated@@543 ($generated@@293 $generated@@569)) ($generated@@544 $generated@@569)))
 :pattern ( ($generated@@543 ($generated@@293 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@149) ($generated@@224 $generated@@570 ($generated@@79 0))) (and (= ($generated@@293 ($generated@@384 $generated@@2 $generated@@570)) $generated@@570) ($generated@@136 ($generated@@384 ($generated@@80 $generated@@149 $generated@@4) $generated@@570) ($generated@@79 0))))
 :pattern ( ($generated@@224 $generated@@570 ($generated@@79 0)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@149) (= (type $generated@@572) $generated@@68)) ($generated@@224 $generated@@571 ($generated@@244 $generated@@572))) (and (= ($generated@@293 ($generated@@384 ($generated@@80 $generated@@149 $generated@@4) $generated@@571)) $generated@@571) ($generated@@136 ($generated@@384 ($generated@@80 $generated@@149 $generated@@4) $generated@@571) ($generated@@244 $generated@@572))))
 :pattern ( ($generated@@224 $generated@@571 ($generated@@244 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@149) (= (type $generated@@574) $generated@@68)) ($generated@@224 $generated@@573 ($generated@@249 $generated@@574))) (and (= ($generated@@293 ($generated@@384 ($generated@@80 $generated@@149 $generated@@4) $generated@@573)) $generated@@573) ($generated@@136 ($generated@@384 ($generated@@80 $generated@@149 $generated@@4) $generated@@573) ($generated@@249 $generated@@574))))
 :pattern ( ($generated@@224 $generated@@573 ($generated@@249 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@149) (= (type $generated@@576) $generated@@68)) ($generated@@224 $generated@@575 ($generated@@157 $generated@@576))) (and (= ($generated@@293 ($generated@@384 ($generated@@80 $generated@@149 $generated@@2) $generated@@575)) $generated@@575) ($generated@@136 ($generated@@384 ($generated@@80 $generated@@149 $generated@@2) $generated@@575) ($generated@@157 $generated@@576))))
 :pattern ( ($generated@@224 $generated@@575 ($generated@@157 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@149) (= (type $generated@@578) $generated@@68)) ($generated@@224 $generated@@577 ($generated@@502 $generated@@578))) (and (= ($generated@@293 ($generated@@384 ($generated@@286 $generated@@149) $generated@@577)) $generated@@577) ($generated@@136 ($generated@@384 ($generated@@286 $generated@@149) $generated@@577) ($generated@@502 $generated@@578))))
 :pattern ( ($generated@@224 $generated@@577 ($generated@@502 $generated@@578)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@68) (= (type $generated@@580) $generated@@149)) ($generated@@224 $generated@@580 ($generated@@218 $generated@@579))) (and (= ($generated@@293 ($generated@@384 $generated@@140 $generated@@580)) $generated@@580) ($generated@@136 ($generated@@384 $generated@@140 $generated@@580) ($generated@@218 $generated@@579))))
 :pattern ( ($generated@@224 $generated@@580 ($generated@@218 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (and (= (type $generated@@581) $generated@@140) (= (type $generated@@582) $generated@@68)) (= (type $generated@@583) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@219 $generated@@583) (and ($generated@@237 $generated@@581) ($generated@@78 $generated@@581 ($generated@@218 $generated@@582) $generated@@583)))) ($generated@@78 ($generated@@239 $generated@@581) ($generated@@218 $generated@@582) $generated@@583))
 :pattern ( ($generated@@78 ($generated@@239 $generated@@581) ($generated@@218 $generated@@582) $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@584) ($generated@@80 $generated@@149 $generated@@2)) (= (type $generated@@585) $generated@@68)) (= (type $generated@@586) ($generated@@80 $generated@@81 $generated@@82))) (= ($generated@@78 $generated@@584 ($generated@@157 $generated@@585) $generated@@586) (forall (($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@149) (< 0 ($generated ($generated@@85 $generated@@584 $generated@@587)))) ($generated@@269 $generated@@587 $generated@@585 $generated@@586))
 :pattern ( ($generated@@85 $generated@@584 $generated@@587))
))))
 :pattern ( ($generated@@78 $generated@@584 ($generated@@157 $generated@@585) $generated@@586))
)))
(assert (= $generated@@155 ($generated@@256 $generated@@155)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@140) (= (type $generated@@589) $generated@@68)) (= (type $generated@@590) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@219 $generated@@590) (and ($generated@@138 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@68) ($generated@@78 $generated@@588 ($generated@@139 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@78 $generated@@588 ($generated@@139 $generated@@589 $generated@@591) $generated@@590))
))))) ($generated@@269 ($generated@@147 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@269 ($generated@@147 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@140) (= (type $generated@@593) $generated@@68)) (= (type $generated@@594) ($generated@@80 $generated@@81 $generated@@82))) (and ($generated@@219 $generated@@594) (and ($generated@@138 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@68) ($generated@@78 $generated@@592 ($generated@@139 $generated@@595 $generated@@593) $generated@@594))
 :pattern ( ($generated@@78 $generated@@592 ($generated@@139 $generated@@595 $generated@@593) $generated@@594))
))))) ($generated@@269 ($generated@@148 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@269 ($generated@@148 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@149) (= (type $generated@@597) $generated@@149)) (= ($generated@@223 ($generated@@256 $generated@@596) ($generated@@256 $generated@@597)) ($generated@@256 ($generated@@223 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@223 ($generated@@256 $generated@@596) ($generated@@256 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (= (type $generated@@598) $generated@@149) (= (type $generated@@599) $generated@@140)) (= ($generated@@263 ($generated@@256 $generated@@598) ($generated@@256 $generated@@599)) ($generated@@256 ($generated@@263 $generated@@598 $generated@@599))))
 :pattern ( ($generated@@263 ($generated@@256 $generated@@598) ($generated@@256 $generated@@599)))
)))
(assert (forall (($generated@@600 Int) ) (! (= ($generated@@293 ($generated@@8 ($generated@@254 $generated@@600))) ($generated@@256 ($generated@@293 ($generated@@8 $generated@@600))))
 :pattern ( ($generated@@293 ($generated@@8 ($generated@@254 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ) (! (= ($generated@@293 ($generated@@256 $generated@@601)) ($generated@@256 ($generated@@293 $generated@@601)))
 :pattern ( ($generated@@293 ($generated@@256 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 ($generated@@287 (type $generated@@602))))
 (=> (and (= (type $generated@@602) ($generated@@286 $generated@@603)) (= ($generated@@285 $generated@@602) 0)) (= $generated@@602 ($generated@@284 $generated@@603))))
 :pattern ( ($generated@@285 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@605)))
 (=> (and (and (= (type $generated@@604) ($generated@@80 $generated@@607 $generated@@2)) (= (type $generated@@606) $generated@@2)) (<= 0 ($generated $generated@@606))) (= ($generated@@298 ($generated@@86 $generated@@604 $generated@@605 $generated@@606)) (+ (- ($generated@@298 $generated@@604) ($generated ($generated@@85 $generated@@604 $generated@@605))) ($generated $generated@@606)))))
 :pattern ( ($generated@@298 ($generated@@86 $generated@@604 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@609) $generated@@2)) ($generated@@78 $generated@@609 $generated@@46 $generated@@608))
 :pattern ( ($generated@@78 $generated@@609 $generated@@46 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@611) $generated@@3)) ($generated@@78 $generated@@611 $generated@@47 $generated@@610))
 :pattern ( ($generated@@78 $generated@@611 $generated@@47 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@613) $generated@@4)) ($generated@@78 $generated@@613 $generated@@44 $generated@@612))
 :pattern ( ($generated@@78 $generated@@613 $generated@@44 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@615) $generated@@454)) ($generated@@78 $generated@@615 $generated@@45 $generated@@614))
 :pattern ( ($generated@@78 $generated@@615 $generated@@45 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@80 $generated@@81 $generated@@82)) (= (type $generated@@617) $generated@@149)) ($generated@@78 $generated@@617 $generated@@48 $generated@@616))
 :pattern ( ($generated@@78 $generated@@617 $generated@@48 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@618) $generated@@68) (= (type $generated@@619) $generated@@149)) (= (type $generated@@620) $generated@@140)) (= (type $generated@@621) ($generated@@80 $generated@@81 $generated@@82))) ($generated@@219 $generated@@621)) (= ($generated@@78 ($generated@@263 $generated@@619 $generated@@620) ($generated@@218 $generated@@618) $generated@@621)  (and ($generated@@269 $generated@@619 $generated@@618 $generated@@621) ($generated@@78 $generated@@620 ($generated@@218 $generated@@618) $generated@@621))))
 :pattern ( ($generated@@78 ($generated@@263 $generated@@619 $generated@@620) ($generated@@218 $generated@@618) $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@286 $generated@@149)) (= (type $generated@@623) $generated@@68)) (= ($generated@@136 $generated@@622 ($generated@@502 $generated@@623)) (forall (($generated@@624 Int) ) (!  (=> (and (<= 0 $generated@@624) (< $generated@@624 ($generated@@285 $generated@@622))) ($generated@@224 ($generated@@503 $generated@@622 $generated@@624) $generated@@623))
 :pattern ( ($generated@@503 $generated@@622 $generated@@624))
))))
 :pattern ( ($generated@@136 $generated@@622 ($generated@@502 $generated@@623)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 Int) ) (!  (=> (= (type $generated@@626) ($generated@@286 $generated@@149)) (=> (and (<= 0 $generated@@627) (< $generated@@627 ($generated@@285 $generated@@626))) (< ($generated@@544 ($generated@@384 $generated@@140 ($generated@@503 $generated@@626 $generated@@627))) ($generated@@625 $generated@@626))))
 :pattern ( ($generated@@544 ($generated@@384 $generated@@140 ($generated@@503 $generated@@626 $generated@@627))))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) ($generated@@309 $generated@@149 $generated@@149)) (= (type $generated@@629) $generated@@68)) (= (type $generated@@630) $generated@@68)) ($generated@@136 $generated@@628 ($generated@@412 $generated@@629 $generated@@630))) (and (and ($generated@@136 ($generated@@307 $generated@@628) ($generated@@244 $generated@@629)) ($generated@@136 ($generated@@350 $generated@@628) ($generated@@244 $generated@@630))) ($generated@@136 ($generated@@383 $generated@@628) ($generated@@244 ($generated@@139 $generated@@629 $generated@@630)))))
 :pattern ( ($generated@@136 $generated@@628 ($generated@@412 $generated@@629 $generated@@630)))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) ($generated@@327 $generated@@149 $generated@@149)) (= (type $generated@@632) $generated@@68)) (= (type $generated@@633) $generated@@68)) ($generated@@136 $generated@@631 ($generated@@420 $generated@@632 $generated@@633))) (and (and ($generated@@136 ($generated@@325 $generated@@631) ($generated@@249 $generated@@632)) ($generated@@136 ($generated@@361 $generated@@631) ($generated@@249 $generated@@633))) ($generated@@136 ($generated@@394 $generated@@631) ($generated@@249 ($generated@@139 $generated@@632 $generated@@633)))))
 :pattern ( ($generated@@136 $generated@@631 ($generated@@420 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ) (!  (=> (= (type $generated@@634) $generated@@2) ($generated@@136 $generated@@634 $generated@@46))
 :pattern ( ($generated@@136 $generated@@634 $generated@@46))
)))
(assert (forall (($generated@@635 T@U) ) (!  (=> (= (type $generated@@635) $generated@@3) ($generated@@136 $generated@@635 $generated@@47))
 :pattern ( ($generated@@136 $generated@@635 $generated@@47))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@4) ($generated@@136 $generated@@636 $generated@@44))
 :pattern ( ($generated@@136 $generated@@636 $generated@@44))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@454) ($generated@@136 $generated@@637 $generated@@45))
 :pattern ( ($generated@@136 $generated@@637 $generated@@45))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@149) ($generated@@136 $generated@@638 $generated@@48))
 :pattern ( ($generated@@136 $generated@@638 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () T@U)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 (T@U) Bool)
(declare-fun $generated@@646 () Int)
(assert  (and (and (and (and (and (= (type $generated@@639) ($generated@@164 $generated@@81 $generated@@4)) (= (type $generated@@640) $generated@@81)) (= (type $generated@@641) ($generated@@80 $generated@@81 $generated@@82))) (= (type $generated@@642) $generated@@140)) (= (type $generated@@643) $generated@@140)) (= (type $generated@@644) $generated@@140)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@647  (=> (= $generated@@639 ($generated@@163 $generated@@640 $generated@@641 $generated@@60 false)) (=> (and (and (and (and ($generated@@136 $generated@@642 ($generated@@218 $generated@@46)) ($generated@@78 $generated@@642 ($generated@@218 $generated@@46) $generated@@641)) (= $generated@@643 $generated@@644)) (and ($generated@@136 $generated@@643 ($generated@@218 $generated@@46)) (= $generated@@642 $generated@@643))) (and (and ($generated@@371 $generated@@642) ($generated@@371 $generated@@644)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@234 $generated@@642 $generated@@644)))))
(let (($generated@@648  (=> (and ($generated@@219 $generated@@641) ($generated@@645 $generated@@641)) (=> (and (and (and ($generated@@136 $generated@@644 ($generated@@218 $generated@@46)) ($generated@@78 $generated@@644 ($generated@@218 $generated@@46) $generated@@641)) ($generated@@371 $generated@@644)) (and (= 1 $generated@@646) (= (ControlFlow 0 3) 2))) $generated@@647))))
$generated@@648)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Bool)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () Int)
(assert  (and (and (and (= (type $generated@@174) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@175) $generated@@47)) (= (type $generated@@176) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@177) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@181  (=> (and (= $generated@@173  (not ($generated@@0 ($generated@@159 ($generated@@11 true))))) (= (ControlFlow 0 3) (- 0 2))) (= $generated@@173 ($generated@@0 ($generated@@159 ($generated@@11 false)))))))
(let (($generated@@182 true))
(let (($generated@@183  (=> (= $generated@@174 ($generated@@45 $generated@@175 $generated@@176 $generated@@177 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@182) (=> (= (ControlFlow 0 4) 3) $generated@@181)))))
(let (($generated@@184  (=> (and (and ($generated@@178 $generated@@176) ($generated@@179 $generated@@176)) (and (= 1 $generated@@180) (= (ControlFlow 0 5) 4))) $generated@@183)))
$generated@@184)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U T@U) T@U)
(declare-fun $generated@@212 (T@U T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@226 (T@U) T@U)
(declare-fun $generated@@231 (Int) Int)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@237 (T@U T@U) T@U)
(declare-fun $generated@@238 (T@U) T@U)
(declare-fun $generated@@239 (T@T) T@T)
(declare-fun $generated@@240 (T@T) T@T)
(declare-fun $generated@@250 (Int) T@U)
(declare-fun $generated@@251 (T@U) Int)
(declare-fun $generated@@252 () T@T)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 (T@U T@U T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@265 (T@U T@U) Bool)
(declare-fun $generated@@266 (T@U) Int)
(declare-fun $generated@@267 (T@U Int) T@U)
(declare-fun $generated@@278 (T@T) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@297 (T@T T@T) T@U)
(declare-fun $generated@@298 (T@T T@T) T@T)
(declare-fun $generated@@299 (T@T) T@T)
(declare-fun $generated@@300 (T@T) T@T)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@343 (T@U) T@U)
(declare-fun $generated@@354 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@T T@U) T@U)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@385 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@403 (T@U T@U) T@U)
(declare-fun $generated@@411 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@T) T@U)
(declare-fun $generated@@453 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@463 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@475 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@491 (T@U) Int)
(declare-fun $generated@@493 (T@U) T@U)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@519 (T@U) Int)
(declare-fun $generated@@520 (T@U) Int)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@594 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> (= (type $generated@@133) $generated@@2) ($generated@@132 $generated@@133 ($generated@@75 0)))
 :pattern ( ($generated@@132 $generated@@133 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@136) 14) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= (type ($generated@@135 $generated@@137 $generated@@138)) $generated@@64)
 :pattern ( ($generated@@135 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (and (= (type $generated@@139) $generated@@64) (= (type $generated@@140) $generated@@64)) (= (type $generated@@141) $generated@@136)) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140))) ($generated@@134 $generated@@141))
 :pattern ( ($generated@@134 $generated@@141) ($generated@@132 $generated@@141 ($generated@@135 $generated@@139 $generated@@140)))
)))
(assert  (and (and (= ($generated@@1 $generated@@145) 15) (forall (($generated@@146 T@U) ) (! (= (type ($generated@@143 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@143 $generated@@146))
))) (forall (($generated@@147 T@U) ) (! (= (type ($generated@@144 $generated@@147)) $generated@@145)
 :pattern ( ($generated@@144 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (and (= (type $generated@@148) $generated@@136) (= (type $generated@@149) $generated@@136)) true) (= ($generated@@142 $generated@@148 $generated@@149)  (and (= ($generated@@143 $generated@@148) ($generated@@143 $generated@@149)) (= ($generated@@144 $generated@@148) ($generated@@144 $generated@@149)))))
 :pattern ( ($generated@@142 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (! (= (type ($generated@@150 $generated@@152)) $generated@@64)
 :pattern ( ($generated@@150 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (= (type $generated@@153) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@154) $generated@@64)) ($generated@@132 $generated@@153 ($generated@@150 $generated@@154))) ($generated@@151 $generated@@153))
 :pattern ( ($generated@@132 $generated@@153 ($generated@@150 $generated@@154)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@1 ($generated@@157 $generated@@161 $generated@@162)) 16)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@158 ($generated@@157 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@159 ($generated@@157 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@157 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (let (($generated@@170 ($generated@@159 (type $generated@@167))))
(= (type ($generated@@155 $generated@@167 $generated@@168 $generated@@169)) $generated@@170))
 :pattern ( ($generated@@155 $generated@@167 $generated@@168 $generated@@169))
))) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (let (($generated@@175 (type $generated@@174)))
(let (($generated@@176 (type $generated@@172)))
(= (type ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174)) ($generated@@157 $generated@@176 $generated@@175))))
 :pattern ( ($generated@@160 $generated@@171 $generated@@172 $generated@@173 $generated@@174))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@159 (type $generated@@177))))
 (=> (= (type $generated@@180) $generated@@181) (= ($generated@@155 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@178 $generated@@179) $generated@@180)))
 :weight 0
))) (and (and (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@155 ($generated@@160 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@155 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@155 ($generated@@160 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@155 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or true (= ($generated@@155 ($generated@@160 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@155 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ) (! (= (type ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203)) ($generated@@157 $generated@@77 $generated@@4))
 :pattern ( ($generated@@156 $generated@@200 $generated@@201 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (let (($generated@@210 ($generated@@67 (type $generated@@209))))
 (=> (and (and (and (and (= (type $generated@@204) $generated@@77) (= (type $generated@@205) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@206) ($generated@@66 $generated@@4))) (= (type $generated@@208) $generated@@77)) (= (type $generated@@209) ($generated@@66 $generated@@210))) (= ($generated@@0 ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (not (= $generated@@208 $generated@@204)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@205 $generated@@208) $generated@@206))) $generated@@207))))
 :pattern ( ($generated@@155 ($generated@@156 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= (type ($generated@@211 $generated@@213 $generated@@214)) $generated@@136)
 :pattern ( ($generated@@211 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and (and (and (= (type $generated@@215) $generated@@64) (= (type $generated@@216) $generated@@64)) (= (type $generated@@217) $generated@@145)) (= (type $generated@@218) $generated@@145)) (= ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216))  (and ($generated@@212 $generated@@217 $generated@@215) ($generated@@212 $generated@@218 $generated@@216))))
 :pattern ( ($generated@@132 ($generated@@211 $generated@@217 $generated@@218) ($generated@@135 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (= (type $generated@@219) $generated@@136) (= (type $generated@@220) $generated@@136)) (= ($generated@@142 $generated@@219 $generated@@220) (= $generated@@219 $generated@@220)))
 :pattern ( ($generated@@142 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (! (= (type ($generated@@221 $generated@@222)) $generated@@64)
 :pattern ( ($generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (= (type $generated@@223) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@224) $generated@@64)) (= ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)) (forall (($generated@@225 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@145) ($generated@@0 ($generated@@81 $generated@@223 $generated@@225))) ($generated@@212 $generated@@225 $generated@@224))
 :pattern ( ($generated@@81 $generated@@223 $generated@@225))
))))
 :pattern ( ($generated@@132 $generated@@223 ($generated@@221 $generated@@224)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= (type ($generated@@226 $generated@@227)) $generated@@64)
 :pattern ( ($generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@229) $generated@@64)) (= ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (= (type $generated@@230) $generated@@145) ($generated@@0 ($generated@@81 $generated@@228 $generated@@230))) ($generated@@212 $generated@@230 $generated@@229))
 :pattern ( ($generated@@81 $generated@@228 $generated@@230))
))))
 :pattern ( ($generated@@132 $generated@@228 ($generated@@226 $generated@@229)))
)))
(assert (forall (($generated@@232 Int) ) (! (= ($generated@@231 $generated@@232) $generated@@232)
 :pattern ( ($generated@@231 $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ) (! (let (($generated@@235 (type $generated@@234)))
(= (type ($generated@@233 $generated@@234)) $generated@@235))
 :pattern ( ($generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@233 $generated@@236) $generated@@236)
 :pattern ( ($generated@@233 $generated@@236))
)))
(assert  (and (and (and (forall (($generated@@241 T@T) ) (= ($generated@@1 ($generated@@239 $generated@@241)) 17)) (forall (($generated@@242 T@T) ) (! (= ($generated@@240 ($generated@@239 $generated@@242)) $generated@@242)
 :pattern ( ($generated@@239 $generated@@242))
))) (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 (type $generated@@244)))
(= (type ($generated@@237 $generated@@243 $generated@@244)) ($generated@@239 $generated@@245)))
 :pattern ( ($generated@@237 $generated@@243 $generated@@244))
))) (forall (($generated@@246 T@U) ) (! (= (type ($generated@@238 $generated@@246)) $generated@@64)
 :pattern ( ($generated@@238 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (and (and (= (type $generated@@247) ($generated@@239 $generated@@145)) (= (type $generated@@248) $generated@@145)) (= (type $generated@@249) $generated@@64)) (and ($generated@@132 $generated@@247 ($generated@@238 $generated@@249)) ($generated@@212 $generated@@248 $generated@@249))) ($generated@@132 ($generated@@237 $generated@@247 $generated@@248) ($generated@@238 $generated@@249)))
 :pattern ( ($generated@@132 ($generated@@237 $generated@@247 $generated@@248) ($generated@@238 $generated@@249)))
)))
(assert  (and (= ($generated@@1 $generated@@252) 18) (forall (($generated@@253 Int) ) (! (= (type ($generated@@250 $generated@@253)) $generated@@252)
 :pattern ( ($generated@@250 $generated@@253))
))))
(assert (forall (($generated@@254 Int) ) (!  (=> (and (<= 0 $generated@@254) (< $generated@@254 65536)) (= ($generated@@251 ($generated@@250 $generated@@254)) $generated@@254))
 :pattern ( ($generated@@250 $generated@@254))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@257) $generated@@64) (= (type $generated@@258) $generated@@64)) (= (type $generated@@259) $generated@@145)) (= (type $generated@@260) $generated@@145)) (= (type $generated@@261) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@255 $generated@@261)) (= ($generated@@74 ($generated@@211 $generated@@259 $generated@@260) ($generated@@135 $generated@@257 $generated@@258) $generated@@261)  (and ($generated@@256 $generated@@259 $generated@@257 $generated@@261) ($generated@@256 $generated@@260 $generated@@258 $generated@@261))))
 :pattern ( ($generated@@74 ($generated@@211 $generated@@259 $generated@@260) ($generated@@135 $generated@@257 $generated@@258) $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ) (! (= (type ($generated@@262 $generated@@263)) $generated@@68)
 :pattern ( ($generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ) (!  (=> (= (type $generated@@264) $generated@@136) (= ($generated@@134 $generated@@264) (= ($generated@@262 $generated@@264) $generated@@61)))
 :pattern ( ($generated@@134 $generated@@264))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 Int) ) (! (let (($generated@@270 ($generated@@240 (type $generated@@268))))
(= (type ($generated@@267 $generated@@268 $generated@@269)) $generated@@270))
 :pattern ( ($generated@@267 $generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@240 (type $generated@@271))))
 (=> (and (= (type $generated@@271) ($generated@@239 $generated@@273)) (= (type $generated@@272) ($generated@@239 $generated@@273))) (= ($generated@@265 $generated@@271 $generated@@272)  (and (= ($generated@@266 $generated@@271) ($generated@@266 $generated@@272)) (forall (($generated@@274 Int) ) (!  (=> (and (<= 0 $generated@@274) (< $generated@@274 ($generated@@266 $generated@@271))) (= ($generated@@267 $generated@@271 $generated@@274) ($generated@@267 $generated@@272 $generated@@274)))
 :pattern ( ($generated@@267 $generated@@271 $generated@@274))
 :pattern ( ($generated@@267 $generated@@272 $generated@@274))
))))))
 :pattern ( ($generated@@265 $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@136) ($generated@@134 $generated@@275)) (exists (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (and (and (= (type $generated@@276) $generated@@145) (= (type $generated@@277) $generated@@145)) (= $generated@@275 ($generated@@211 $generated@@276 $generated@@277)))
 :no-pattern (type $generated@@276)
 :no-pattern (type $generated@@277)
 :no-pattern ($generated $generated@@276)
 :no-pattern ($generated@@0 $generated@@276)
 :no-pattern ($generated $generated@@277)
 :no-pattern ($generated@@0 $generated@@277)
)))
 :pattern ( ($generated@@134 $generated@@275))
)))
(assert (forall (($generated@@279 T@T) ) (! (= (type ($generated@@278 $generated@@279)) ($generated@@239 $generated@@279))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@280 T@T) ) (! (= ($generated@@266 ($generated@@278 $generated@@280)) 0)
 :pattern ( ($generated@@278 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (! (let (($generated@@283 (type $generated@@282)))
 (=> (= (type $generated@@281) ($generated@@239 $generated@@283)) (= ($generated@@266 ($generated@@237 $generated@@281 $generated@@282)) (+ 1 ($generated@@266 $generated@@281)))))
 :pattern ( ($generated@@237 $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@252) (and (and (= ($generated@@250 ($generated@@251 $generated@@284)) $generated@@284) (<= 0 ($generated@@251 $generated@@284))) (< ($generated@@251 $generated@@284) 65536)))
 :pattern ( ($generated@@251 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@145)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@288) $generated@@64) (= (type $generated@@289) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@256 ($generated@@285 $generated@@287) $generated@@288 $generated@@289) ($generated@@74 $generated@@287 $generated@@288 $generated@@289)))
 :pattern ( ($generated@@256 ($generated@@285 $generated@@287) $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@292 T@T) ) (! (= (type ($generated@@291 $generated@@292)) ($generated@@76 $generated@@292 $generated@@2))
 :pattern ( ($generated@@291 $generated@@292))
)))
(assert (forall (($generated@@293 T@U) ) (! (let (($generated@@294 ($generated@@79 (type $generated@@293))))
 (=> (= (type $generated@@293) ($generated@@76 $generated@@294 $generated@@2)) (and (= (= ($generated@@290 $generated@@293) 0) (= $generated@@293 ($generated@@291 $generated@@294))) (=> (not (= ($generated@@290 $generated@@293) 0)) (exists (($generated@@295 T@U) ) (!  (and (= (type $generated@@295) $generated@@294) (< 0 ($generated ($generated@@81 $generated@@293 $generated@@295))))
 :no-pattern (type $generated@@295)
 :no-pattern ($generated $generated@@295)
 :no-pattern ($generated@@0 $generated@@295)
))))))
 :pattern ( ($generated@@290 $generated@@293))
)))
(assert  (and (and (and (and (forall (($generated@@301 T@T) ($generated@@302 T@T) ) (= ($generated@@1 ($generated@@298 $generated@@301 $generated@@302)) 19)) (forall (($generated@@303 T@T) ($generated@@304 T@T) ) (! (= ($generated@@299 ($generated@@298 $generated@@303 $generated@@304)) $generated@@303)
 :pattern ( ($generated@@298 $generated@@303 $generated@@304))
))) (forall (($generated@@305 T@T) ($generated@@306 T@T) ) (! (= ($generated@@300 ($generated@@298 $generated@@305 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@298 $generated@@305 $generated@@306))
))) (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@299 (type $generated@@307))))
(= (type ($generated@@296 $generated@@307)) ($generated@@76 $generated@@308 $generated@@4)))
 :pattern ( ($generated@@296 $generated@@307))
))) (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (! (= (type ($generated@@297 $generated@@309 $generated@@310)) ($generated@@298 $generated@@309 $generated@@310))
 :pattern ( ($generated@@297 $generated@@309 $generated@@310))
))))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@T) ) (! (let (($generated@@313 (type $generated@@311)))
 (not ($generated@@0 ($generated@@81 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311))))
 :pattern ( (let (($generated@@313 (type $generated@@311)))
($generated@@81 ($generated@@296 ($generated@@297 $generated@@313 $generated@@312)) $generated@@311)))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 20)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@76 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@81 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@81 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert (forall (($generated@@332 T@U) ) (! (let (($generated@@333 ($generated@@79 (type $generated@@332))))
 (=> (= (type $generated@@332) ($generated@@76 $generated@@333 $generated@@2)) (= ($generated@@151 $generated@@332) (forall (($generated@@334 T@U) ) (!  (=> (= (type $generated@@334) $generated@@333) (and (<= 0 ($generated ($generated@@81 $generated@@332 $generated@@334))) (<= ($generated ($generated@@81 $generated@@332 $generated@@334)) ($generated@@290 $generated@@332))))
 :pattern ( ($generated@@81 $generated@@332 $generated@@334))
)))))
 :pattern ( ($generated@@151 $generated@@332))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 Int) ($generated@@337 T@U) ) (! (let (($generated@@338 (type $generated@@337)))
 (=> (= (type $generated@@335) ($generated@@239 $generated@@338)) (and (=> (= $generated@@336 ($generated@@266 $generated@@335)) (= ($generated@@267 ($generated@@237 $generated@@335 $generated@@337) $generated@@336) $generated@@337)) (=> (not (= $generated@@336 ($generated@@266 $generated@@335))) (= ($generated@@267 ($generated@@237 $generated@@335 $generated@@337) $generated@@336) ($generated@@267 $generated@@335 $generated@@336))))))
 :pattern ( ($generated@@267 ($generated@@237 $generated@@335 $generated@@337) $generated@@336))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@300 (type $generated@@339))))
(let (($generated@@341 ($generated@@299 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@298 $generated@@341 $generated@@340)) (or (= $generated@@339 ($generated@@297 $generated@@341 $generated@@340)) (exists (($generated@@342 T@U) ) (!  (and (= (type $generated@@342) $generated@@341) ($generated@@0 ($generated@@81 ($generated@@296 $generated@@339) $generated@@342)))
 :no-pattern (type $generated@@342)
 :no-pattern ($generated $generated@@342)
 :no-pattern ($generated@@0 $generated@@342)
))))))
 :pattern ( ($generated@@296 $generated@@339))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@300 (type $generated@@344))))
(= (type ($generated@@343 $generated@@344)) ($generated@@76 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@343 $generated@@344))
)))
(assert (forall (($generated@@346 T@U) ) (! (let (($generated@@347 ($generated@@300 (type $generated@@346))))
(let (($generated@@348 ($generated@@299 (type $generated@@346))))
 (=> (= (type $generated@@346) ($generated@@298 $generated@@348 $generated@@347)) (or (= $generated@@346 ($generated@@297 $generated@@348 $generated@@347)) (exists (($generated@@349 T@U) ) (!  (and (= (type $generated@@349) $generated@@347) ($generated@@0 ($generated@@81 ($generated@@343 $generated@@346) $generated@@349)))
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
))))))
 :pattern ( ($generated@@343 $generated@@346))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@318 (type $generated@@350))))
(let (($generated@@352 ($generated@@317 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@316 $generated@@352 $generated@@351)) (or (= $generated@@350 ($generated@@315 $generated@@352 $generated@@351)) (exists (($generated@@353 T@U) ) (!  (and (= (type $generated@@353) $generated@@352) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@350) $generated@@353)))
 :no-pattern (type $generated@@353)
 :no-pattern ($generated $generated@@353)
 :no-pattern ($generated@@0 $generated@@353)
))))))
 :pattern ( ($generated@@314 $generated@@350))
)))
(assert (forall (($generated@@355 T@U) ) (! (let (($generated@@356 ($generated@@318 (type $generated@@355))))
(= (type ($generated@@354 $generated@@355)) ($generated@@76 $generated@@356 $generated@@4)))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@318 (type $generated@@357))))
(let (($generated@@359 ($generated@@317 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@316 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@315 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@358) ($generated@@0 ($generated@@81 ($generated@@354 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@354 $generated@@357))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@361) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@362) $generated@@64)) (= ($generated@@132 $generated@@361 ($generated@@150 $generated@@362)) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@361 $generated@@363)))) ($generated@@212 $generated@@363 $generated@@362))
 :pattern ( ($generated@@81 $generated@@361 $generated@@363))
))))
 :pattern ( ($generated@@132 $generated@@361 ($generated@@150 $generated@@362)))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ($generated@@366 T@U) ) (!  (=> (and (and (= (type $generated@@364) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@365) $generated@@64)) (= (type $generated@@366) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@364 ($generated@@221 $generated@@365) $generated@@366) (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@145) ($generated@@0 ($generated@@81 $generated@@364 $generated@@367))) ($generated@@256 $generated@@367 $generated@@365 $generated@@366))
 :pattern ( ($generated@@81 $generated@@364 $generated@@367))
))))
 :pattern ( ($generated@@74 $generated@@364 ($generated@@221 $generated@@365) $generated@@366))
)))
(assert (forall (($generated@@368 T@U) ($generated@@369 T@U) ($generated@@370 T@U) ) (!  (=> (and (and (= (type $generated@@368) ($generated@@76 $generated@@145 $generated@@4)) (= (type $generated@@369) $generated@@64)) (= (type $generated@@370) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@368 ($generated@@226 $generated@@369) $generated@@370) (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@145) ($generated@@0 ($generated@@81 $generated@@368 $generated@@371))) ($generated@@256 $generated@@371 $generated@@369 $generated@@370))
 :pattern ( ($generated@@81 $generated@@368 $generated@@371))
))))
 :pattern ( ($generated@@74 $generated@@368 ($generated@@226 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 (type $generated@@372)))
(= ($generated ($generated@@81 ($generated@@291 $generated@@373) $generated@@372)) 0))
 :pattern ( (let (($generated@@373 (type $generated@@372)))
($generated@@81 ($generated@@291 $generated@@373) $generated@@372)))
)))
(assert  (and (and (forall (($generated@@377 T@U) ) (! (= (type ($generated@@374 $generated@@377)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@374 $generated@@377))
)) (forall (($generated@@378 T@T) ($generated@@379 T@U) ) (! (= (type ($generated@@375 $generated@@378 $generated@@379)) $generated@@378)
 :pattern ( ($generated@@375 $generated@@378 $generated@@379))
))) (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@300 (type $generated@@380))))
(let (($generated@@382 ($generated@@299 (type $generated@@380))))
(= (type ($generated@@376 $generated@@380)) ($generated@@76 $generated@@382 $generated@@381))))
 :pattern ( ($generated@@376 $generated@@380))
))))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@383) ($generated@@298 $generated@@145 $generated@@145)) (= (type $generated@@384) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))  (and ($generated@@0 ($generated@@81 ($generated@@296 $generated@@383) ($generated@@143 ($generated@@375 $generated@@136 $generated@@384)))) (= ($generated@@81 ($generated@@376 $generated@@383) ($generated@@143 ($generated@@375 $generated@@136 $generated@@384))) ($generated@@144 ($generated@@375 $generated@@136 $generated@@384))))))
 :pattern ( ($generated@@81 ($generated@@374 $generated@@383) $generated@@384))
)))
(assert  (and (forall (($generated@@387 T@U) ) (! (= (type ($generated@@385 $generated@@387)) ($generated@@76 $generated@@145 $generated@@4))
 :pattern ( ($generated@@385 $generated@@387))
)) (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@318 (type $generated@@388))))
(let (($generated@@390 ($generated@@317 (type $generated@@388))))
(= (type ($generated@@386 $generated@@388)) ($generated@@76 $generated@@390 $generated@@389))))
 :pattern ( ($generated@@386 $generated@@388))
))))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@391) ($generated@@316 $generated@@145 $generated@@145)) (= (type $generated@@392) $generated@@145)) (= ($generated@@0 ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))  (and ($generated@@0 ($generated@@81 ($generated@@314 $generated@@391) ($generated@@143 ($generated@@375 $generated@@136 $generated@@392)))) (= ($generated@@81 ($generated@@386 $generated@@391) ($generated@@143 ($generated@@375 $generated@@136 $generated@@392))) ($generated@@144 ($generated@@375 $generated@@136 $generated@@392))))))
 :pattern ( ($generated@@81 ($generated@@385 $generated@@391) $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (let (($generated@@395 (type $generated@@394)))
(let (($generated@@396 ($generated@@299 (type $generated@@393))))
 (=> (= (type $generated@@393) ($generated@@298 $generated@@396 $generated@@395)) (= ($generated@@0 ($generated@@81 ($generated@@343 $generated@@393) $generated@@394)) (exists (($generated@@397 T@U) ) (!  (and (= (type $generated@@397) $generated@@396) (and ($generated@@0 ($generated@@81 ($generated@@296 $generated@@393) $generated@@397)) (= $generated@@394 ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))))
 :pattern ( ($generated@@81 ($generated@@296 $generated@@393) $generated@@397))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@393) $generated@@397))
))))))
 :pattern ( ($generated@@81 ($generated@@343 $generated@@393) $generated@@394))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (let (($generated@@400 (type $generated@@399)))
(let (($generated@@401 ($generated@@317 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@316 $generated@@401 $generated@@400)) (= ($generated@@0 ($generated@@81 ($generated@@354 $generated@@398) $generated@@399)) (exists (($generated@@402 T@U) ) (!  (and (= (type $generated@@402) $generated@@401) (and ($generated@@0 ($generated@@81 ($generated@@314 $generated@@398) $generated@@402)) (= $generated@@399 ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@398) $generated@@402))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@398) $generated@@402))
))))))
 :pattern ( ($generated@@81 ($generated@@354 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@404 $generated@@405)) $generated@@64)
 :pattern ( ($generated@@403 $generated@@404 $generated@@405))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (and (= (type $generated@@406) ($generated@@298 $generated@@145 $generated@@145)) (= (type $generated@@407) $generated@@64)) (= (type $generated@@408) $generated@@64)) (= (type $generated@@409) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@296 $generated@@406) $generated@@410))) (and ($generated@@256 ($generated@@81 ($generated@@376 $generated@@406) $generated@@410) $generated@@408 $generated@@409) ($generated@@256 $generated@@410 $generated@@407 $generated@@409)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@406) $generated@@410))
 :pattern ( ($generated@@81 ($generated@@296 $generated@@406) $generated@@410))
))))
 :pattern ( ($generated@@74 $generated@@406 ($generated@@403 $generated@@407 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@412 T@U) ($generated@@413 T@U) ) (! (= (type ($generated@@411 $generated@@412 $generated@@413)) $generated@@64)
 :pattern ( ($generated@@411 $generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (and (and (and (= (type $generated@@414) ($generated@@316 $generated@@145 $generated@@145)) (= (type $generated@@415) $generated@@64)) (= (type $generated@@416) $generated@@64)) (= (type $generated@@417) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417) (forall (($generated@@418 T@U) ) (!  (=> (and (= (type $generated@@418) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@414) $generated@@418))) (and ($generated@@256 ($generated@@81 ($generated@@386 $generated@@414) $generated@@418) $generated@@416 $generated@@417) ($generated@@256 $generated@@418 $generated@@415 $generated@@417)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@414) $generated@@418))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@414) $generated@@418))
))))
 :pattern ( ($generated@@74 $generated@@414 ($generated@@411 $generated@@415 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@240 (type $generated@@419))))
 (=> (and (and (= (type $generated@@419) ($generated@@239 $generated@@421)) (= (type $generated@@420) ($generated@@239 $generated@@421))) ($generated@@265 $generated@@419 $generated@@420)) (= $generated@@419 $generated@@420)))
 :pattern ( ($generated@@265 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@423 T@T) ) (! (= (type ($generated@@422 $generated@@423)) ($generated@@76 $generated@@423 $generated@@4))
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@318 (type $generated@@424))))
(let (($generated@@426 ($generated@@317 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@316 $generated@@426 $generated@@425)) (= (= $generated@@424 ($generated@@315 $generated@@426 $generated@@425)) (= ($generated@@314 $generated@@424) ($generated@@422 $generated@@426))))))
 :pattern ( ($generated@@314 $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ) (! (let (($generated@@428 ($generated@@318 (type $generated@@427))))
(let (($generated@@429 ($generated@@317 (type $generated@@427))))
 (=> (= (type $generated@@427) ($generated@@316 $generated@@429 $generated@@428)) (= (= $generated@@427 ($generated@@315 $generated@@429 $generated@@428)) (= ($generated@@354 $generated@@427) ($generated@@422 $generated@@428))))))
 :pattern ( ($generated@@354 $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@318 (type $generated@@430))))
(let (($generated@@432 ($generated@@317 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@316 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@315 $generated@@432 $generated@@431)) (= ($generated@@385 $generated@@430) ($generated@@422 $generated@@145))))))
 :pattern ( ($generated@@385 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@300 (type $generated@@433))))
(let (($generated@@435 ($generated@@299 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@298 $generated@@435 $generated@@434)) (or (= $generated@@433 ($generated@@297 $generated@@435 $generated@@434)) (exists (($generated@@436 T@U) ($generated@@437 T@U) ) (!  (and (and (= (type $generated@@436) $generated@@145) (= (type $generated@@437) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@374 $generated@@433) ($generated@@285 ($generated@@211 $generated@@436 $generated@@437)))))
 :no-pattern (type $generated@@436)
 :no-pattern (type $generated@@437)
 :no-pattern ($generated $generated@@436)
 :no-pattern ($generated@@0 $generated@@436)
 :no-pattern ($generated $generated@@437)
 :no-pattern ($generated@@0 $generated@@437)
))))))
 :pattern ( ($generated@@374 $generated@@433))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@318 (type $generated@@438))))
(let (($generated@@440 ($generated@@317 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@316 $generated@@440 $generated@@439)) (or (= $generated@@438 ($generated@@315 $generated@@440 $generated@@439)) (exists (($generated@@441 T@U) ($generated@@442 T@U) ) (!  (and (and (= (type $generated@@441) $generated@@145) (= (type $generated@@442) $generated@@145)) ($generated@@0 ($generated@@81 ($generated@@385 $generated@@438) ($generated@@285 ($generated@@211 $generated@@441 $generated@@442)))))
 :no-pattern (type $generated@@441)
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@441)
 :no-pattern ($generated@@0 $generated@@441)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@385 $generated@@438))
)))
(assert (forall (($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@443) $generated@@145) ($generated@@212 $generated@@443 $generated@@46)) (and (= ($generated@@285 ($generated@@375 $generated@@2 $generated@@443)) $generated@@443) ($generated@@132 ($generated@@375 $generated@@2 $generated@@443) $generated@@46)))
 :pattern ( ($generated@@212 $generated@@443 $generated@@46))
)))
(assert (forall (($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) $generated@@145) ($generated@@212 $generated@@444 $generated@@47)) (and (= ($generated@@285 ($generated@@375 $generated@@3 $generated@@444)) $generated@@444) ($generated@@132 ($generated@@375 $generated@@3 $generated@@444) $generated@@47)))
 :pattern ( ($generated@@212 $generated@@444 $generated@@47))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@145) ($generated@@212 $generated@@445 $generated@@44)) (and (= ($generated@@285 ($generated@@375 $generated@@4 $generated@@445)) $generated@@445) ($generated@@132 ($generated@@375 $generated@@4 $generated@@445) $generated@@44)))
 :pattern ( ($generated@@212 $generated@@445 $generated@@44))
)))
(assert (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@145) ($generated@@212 $generated@@446 $generated@@45)) (and (= ($generated@@285 ($generated@@375 $generated@@252 $generated@@446)) $generated@@446) ($generated@@132 ($generated@@375 $generated@@252 $generated@@446) $generated@@45)))
 :pattern ( ($generated@@212 $generated@@446 $generated@@45))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (= (type $generated@@448) $generated@@64) (= ($generated@@212 ($generated@@285 $generated@@447) $generated@@448) ($generated@@132 $generated@@447 $generated@@448)))
 :pattern ( ($generated@@212 ($generated@@285 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@79 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@76 $generated@@450 $generated@@2)) (<= 0 ($generated@@290 $generated@@449))))
 :pattern ( ($generated@@290 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@240 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@239 $generated@@452)) (<= 0 ($generated@@266 $generated@@451))))
 :pattern ( ($generated@@266 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (= (type ($generated@@453 $generated@@454)) $generated@@64)
 :pattern ( ($generated@@453 $generated@@454))
)))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@64) (= (type $generated@@456) $generated@@64)) (= ($generated@@453 ($generated@@403 $generated@@455 $generated@@456)) $generated@@455))
 :pattern ( ($generated@@403 $generated@@455 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (= (type ($generated@@457 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@457 $generated@@458))
)))
(assert (forall (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@64) (= (type $generated@@460) $generated@@64)) (= ($generated@@457 ($generated@@403 $generated@@459 $generated@@460)) $generated@@460))
 :pattern ( ($generated@@403 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@64) (= (type $generated@@462) $generated@@64)) (= ($generated@@72 ($generated@@403 $generated@@461 $generated@@462)) $generated@@58))
 :pattern ( ($generated@@403 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (= (type ($generated@@463 $generated@@464)) $generated@@64)
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@64) (= (type $generated@@466) $generated@@64)) (= ($generated@@463 ($generated@@411 $generated@@465 $generated@@466)) $generated@@465))
 :pattern ( ($generated@@411 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@64)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@64) (= (type $generated@@470) $generated@@64)) (= ($generated@@467 ($generated@@411 $generated@@469 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@411 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@64) (= (type $generated@@472) $generated@@64)) (= ($generated@@72 ($generated@@411 $generated@@471 $generated@@472)) $generated@@59))
 :pattern ( ($generated@@411 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@145) (= (type $generated@@474) $generated@@145)) (= ($generated@@262 ($generated@@211 $generated@@473 $generated@@474)) $generated@@61))
 :pattern ( ($generated@@211 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (= (type ($generated@@475 $generated@@476)) $generated@@64)
 :pattern ( ($generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@64) (= (type $generated@@478) $generated@@64)) (= ($generated@@475 ($generated@@135 $generated@@477 $generated@@478)) $generated@@477))
 :pattern ( ($generated@@135 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@64)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@64) (= (type $generated@@482) $generated@@64)) (= ($generated@@479 ($generated@@135 $generated@@481 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@135 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) $generated@@145) (= (type $generated@@484) $generated@@145)) (= ($generated@@143 ($generated@@211 $generated@@483 $generated@@484)) $generated@@483))
 :pattern ( ($generated@@211 $generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@145) (= (type $generated@@486) $generated@@145)) (= ($generated@@144 ($generated@@211 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@211 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (= (type $generated@@487) ($generated@@239 $generated@@145)) (= (type $generated@@488) $generated@@64)) (= (type $generated@@489) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@487 ($generated@@238 $generated@@488) $generated@@489) (forall (($generated@@490 Int) ) (!  (=> (and (<= 0 $generated@@490) (< $generated@@490 ($generated@@266 $generated@@487))) ($generated@@256 ($generated@@267 $generated@@487 $generated@@490) $generated@@488 $generated@@489))
 :pattern ( ($generated@@267 $generated@@487 $generated@@490))
))))
 :pattern ( ($generated@@74 $generated@@487 ($generated@@238 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@492 Int) ) (! (= ($generated@@491 ($generated@@75 $generated@@492)) $generated@@492)
 :pattern ( ($generated@@75 $generated@@492))
)))
(assert (forall (($generated@@494 T@U) ) (! (= (type ($generated@@493 $generated@@494)) $generated@@64)
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@64) (= ($generated@@493 ($generated@@221 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@221 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@64) (= ($generated@@72 ($generated@@221 $generated@@496)) $generated@@54))
 :pattern ( ($generated@@221 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@64)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@64) (= ($generated@@497 ($generated@@226 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@226 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@64) (= ($generated@@72 ($generated@@226 $generated@@500)) $generated@@55))
 :pattern ( ($generated@@226 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@64)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@64) (= ($generated@@501 ($generated@@150 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@150 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@64) (= ($generated@@72 ($generated@@150 $generated@@504)) $generated@@56))
 :pattern ( ($generated@@150 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@64)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@64) (= ($generated@@505 ($generated@@238 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@238 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@64) (= ($generated@@72 ($generated@@238 $generated@@508)) $generated@@57))
 :pattern ( ($generated@@238 $generated@@508))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
(= ($generated@@375 $generated@@510 ($generated@@285 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@285 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (and (= (type $generated@@511) ($generated@@298 $generated@@145 $generated@@145)) (= (type $generated@@512) $generated@@64)) (= (type $generated@@513) $generated@@64)) (= ($generated@@132 $generated@@511 ($generated@@403 $generated@@512 $generated@@513)) (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@296 $generated@@511) $generated@@514))) (and ($generated@@212 ($generated@@81 ($generated@@376 $generated@@511) $generated@@514) $generated@@513) ($generated@@212 $generated@@514 $generated@@512)))
 :pattern ( ($generated@@81 ($generated@@376 $generated@@511) $generated@@514))
 :pattern ( ($generated@@81 ($generated@@296 $generated@@511) $generated@@514))
))))
 :pattern ( ($generated@@132 $generated@@511 ($generated@@403 $generated@@512 $generated@@513)))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@316 $generated@@145 $generated@@145)) (= (type $generated@@516) $generated@@64)) (= (type $generated@@517) $generated@@64)) (= ($generated@@132 $generated@@515 ($generated@@411 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@145) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@515) $generated@@518))) (and ($generated@@212 ($generated@@81 ($generated@@386 $generated@@515) $generated@@518) $generated@@517) ($generated@@212 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@81 ($generated@@386 $generated@@515) $generated@@518))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@132 $generated@@515 ($generated@@411 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@145) (= (type $generated@@522) $generated@@145)) (< ($generated@@519 $generated@@521) ($generated@@520 ($generated@@211 $generated@@521 $generated@@522))))
 :pattern ( ($generated@@211 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@145) (= (type $generated@@524) $generated@@145)) (< ($generated@@519 $generated@@524) ($generated@@520 ($generated@@211 $generated@@523 $generated@@524))))
 :pattern ( ($generated@@211 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (and (= (type $generated@@525) $generated@@145) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) $generated@@64)) ($generated@@212 $generated@@525 ($generated@@403 $generated@@526 $generated@@527))) (and (= ($generated@@285 ($generated@@375 ($generated@@298 $generated@@145 $generated@@145) $generated@@525)) $generated@@525) ($generated@@132 ($generated@@375 ($generated@@298 $generated@@145 $generated@@145) $generated@@525) ($generated@@403 $generated@@526 $generated@@527))))
 :pattern ( ($generated@@212 $generated@@525 ($generated@@403 $generated@@526 $generated@@527)))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (and (and (= (type $generated@@528) $generated@@145) (= (type $generated@@529) $generated@@64)) (= (type $generated@@530) $generated@@64)) ($generated@@212 $generated@@528 ($generated@@411 $generated@@529 $generated@@530))) (and (= ($generated@@285 ($generated@@375 ($generated@@316 $generated@@145 $generated@@145) $generated@@528)) $generated@@528) ($generated@@132 ($generated@@375 ($generated@@316 $generated@@145 $generated@@145) $generated@@528) ($generated@@411 $generated@@529 $generated@@530))))
 :pattern ( ($generated@@212 $generated@@528 ($generated@@411 $generated@@529 $generated@@530)))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (and (and (= (type $generated@@531) $generated@@64) (= (type $generated@@532) $generated@@64)) (= (type $generated@@533) $generated@@145)) ($generated@@212 $generated@@533 ($generated@@135 $generated@@531 $generated@@532))) (and (= ($generated@@285 ($generated@@375 $generated@@136 $generated@@533)) $generated@@533) ($generated@@132 ($generated@@375 $generated@@136 $generated@@533) ($generated@@135 $generated@@531 $generated@@532))))
 :pattern ( ($generated@@212 $generated@@533 ($generated@@135 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
 (not ($generated@@0 ($generated@@81 ($generated@@422 $generated@@535) $generated@@534))))
 :pattern ( (let (($generated@@535 (type $generated@@534)))
($generated@@81 ($generated@@422 $generated@@535) $generated@@534)))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@69)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@64) (= (type $generated@@539) $generated@@64)) (and (= ($generated@@72 ($generated@@135 $generated@@538 $generated@@539)) $generated@@62) (= ($generated@@536 ($generated@@135 $generated@@538 $generated@@539)) $generated@@63)))
 :pattern ( ($generated@@135 $generated@@538 $generated@@539))
)))
(assert  (and (forall (($generated@@542 T@U) ) (! (let (($generated@@543 ($generated@@240 (type $generated@@542))))
(= (type ($generated@@540 $generated@@542)) ($generated@@239 $generated@@543)))
 :pattern ( ($generated@@540 $generated@@542))
)) (forall (($generated@@544 T@U) ) (! (let (($generated@@545 ($generated@@240 (type $generated@@544))))
(= (type ($generated@@541 $generated@@544)) $generated@@545))
 :pattern ( ($generated@@541 $generated@@544))
))))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (! (let (($generated@@548 (type $generated@@547)))
 (=> (= (type $generated@@546) ($generated@@239 $generated@@548)) (and (= ($generated@@540 ($generated@@237 $generated@@546 $generated@@547)) $generated@@546) (= ($generated@@541 ($generated@@237 $generated@@546 $generated@@547)) $generated@@547))))
 :pattern ( ($generated@@237 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@136) (= ($generated@@519 ($generated@@285 $generated@@549)) ($generated@@520 $generated@@549)))
 :pattern ( ($generated@@519 ($generated@@285 $generated@@549)))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@145) ($generated@@212 $generated@@550 ($generated@@75 0))) (and (= ($generated@@285 ($generated@@375 $generated@@2 $generated@@550)) $generated@@550) ($generated@@132 ($generated@@375 ($generated@@76 $generated@@145 $generated@@4) $generated@@550) ($generated@@75 0))))
 :pattern ( ($generated@@212 $generated@@550 ($generated@@75 0)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@551) $generated@@145) (= (type $generated@@552) $generated@@64)) ($generated@@212 $generated@@551 ($generated@@221 $generated@@552))) (and (= ($generated@@285 ($generated@@375 ($generated@@76 $generated@@145 $generated@@4) $generated@@551)) $generated@@551) ($generated@@132 ($generated@@375 ($generated@@76 $generated@@145 $generated@@4) $generated@@551) ($generated@@221 $generated@@552))))
 :pattern ( ($generated@@212 $generated@@551 ($generated@@221 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@553) $generated@@145) (= (type $generated@@554) $generated@@64)) ($generated@@212 $generated@@553 ($generated@@226 $generated@@554))) (and (= ($generated@@285 ($generated@@375 ($generated@@76 $generated@@145 $generated@@4) $generated@@553)) $generated@@553) ($generated@@132 ($generated@@375 ($generated@@76 $generated@@145 $generated@@4) $generated@@553) ($generated@@226 $generated@@554))))
 :pattern ( ($generated@@212 $generated@@553 ($generated@@226 $generated@@554)))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (= (type $generated@@555) $generated@@145) (= (type $generated@@556) $generated@@64)) ($generated@@212 $generated@@555 ($generated@@150 $generated@@556))) (and (= ($generated@@285 ($generated@@375 ($generated@@76 $generated@@145 $generated@@2) $generated@@555)) $generated@@555) ($generated@@132 ($generated@@375 ($generated@@76 $generated@@145 $generated@@2) $generated@@555) ($generated@@150 $generated@@556))))
 :pattern ( ($generated@@212 $generated@@555 ($generated@@150 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (= (type $generated@@557) $generated@@145) (= (type $generated@@558) $generated@@64)) ($generated@@212 $generated@@557 ($generated@@238 $generated@@558))) (and (= ($generated@@285 ($generated@@375 ($generated@@239 $generated@@145) $generated@@557)) $generated@@557) ($generated@@132 ($generated@@375 ($generated@@239 $generated@@145) $generated@@557) ($generated@@238 $generated@@558))))
 :pattern ( ($generated@@212 $generated@@557 ($generated@@238 $generated@@558)))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (= (type $generated@@559) ($generated@@76 $generated@@145 $generated@@2)) (= (type $generated@@560) $generated@@64)) (= (type $generated@@561) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@559 ($generated@@150 $generated@@560) $generated@@561) (forall (($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@562) $generated@@145) (< 0 ($generated ($generated@@81 $generated@@559 $generated@@562)))) ($generated@@256 $generated@@562 $generated@@560 $generated@@561))
 :pattern ( ($generated@@81 $generated@@559 $generated@@562))
))))
 :pattern ( ($generated@@74 $generated@@559 ($generated@@150 $generated@@560) $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@136) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@255 $generated@@565) (and ($generated@@134 $generated@@563) (exists (($generated@@566 T@U) ) (!  (and (= (type $generated@@566) $generated@@64) ($generated@@74 $generated@@563 ($generated@@135 $generated@@564 $generated@@566) $generated@@565))
 :pattern ( ($generated@@74 $generated@@563 ($generated@@135 $generated@@564 $generated@@566) $generated@@565))
))))) ($generated@@256 ($generated@@143 $generated@@563) $generated@@564 $generated@@565))
 :pattern ( ($generated@@256 ($generated@@143 $generated@@563) $generated@@564 $generated@@565))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (and (= (type $generated@@567) $generated@@136) (= (type $generated@@568) $generated@@64)) (= (type $generated@@569) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@255 $generated@@569) (and ($generated@@134 $generated@@567) (exists (($generated@@570 T@U) ) (!  (and (= (type $generated@@570) $generated@@64) ($generated@@74 $generated@@567 ($generated@@135 $generated@@570 $generated@@568) $generated@@569))
 :pattern ( ($generated@@74 $generated@@567 ($generated@@135 $generated@@570 $generated@@568) $generated@@569))
))))) ($generated@@256 ($generated@@144 $generated@@567) $generated@@568 $generated@@569))
 :pattern ( ($generated@@256 ($generated@@144 $generated@@567) $generated@@568 $generated@@569))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@145) (= (type $generated@@572) $generated@@145)) (= ($generated@@211 ($generated@@233 $generated@@571) ($generated@@233 $generated@@572)) ($generated@@233 ($generated@@211 $generated@@571 $generated@@572))))
 :pattern ( ($generated@@211 ($generated@@233 $generated@@571) ($generated@@233 $generated@@572)))
)))
(assert (forall (($generated@@573 Int) ) (! (= ($generated@@285 ($generated@@8 ($generated@@231 $generated@@573))) ($generated@@233 ($generated@@285 ($generated@@8 $generated@@573))))
 :pattern ( ($generated@@285 ($generated@@8 ($generated@@231 $generated@@573))))
)))
(assert (forall (($generated@@574 T@U) ) (! (= ($generated@@285 ($generated@@233 $generated@@574)) ($generated@@233 ($generated@@285 $generated@@574)))
 :pattern ( ($generated@@285 ($generated@@233 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (! (let (($generated@@576 ($generated@@240 (type $generated@@575))))
 (=> (and (= (type $generated@@575) ($generated@@239 $generated@@576)) (= ($generated@@266 $generated@@575) 0)) (= $generated@@575 ($generated@@278 $generated@@576))))
 :pattern ( ($generated@@266 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ($generated@@579 T@U) ) (! (let (($generated@@580 (type $generated@@578)))
 (=> (and (and (= (type $generated@@577) ($generated@@76 $generated@@580 $generated@@2)) (= (type $generated@@579) $generated@@2)) (<= 0 ($generated $generated@@579))) (= ($generated@@290 ($generated@@82 $generated@@577 $generated@@578 $generated@@579)) (+ (- ($generated@@290 $generated@@577) ($generated ($generated@@81 $generated@@577 $generated@@578))) ($generated $generated@@579)))))
 :pattern ( ($generated@@290 ($generated@@82 $generated@@577 $generated@@578 $generated@@579)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@581) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@582) $generated@@2)) ($generated@@74 $generated@@582 $generated@@46 $generated@@581))
 :pattern ( ($generated@@74 $generated@@582 $generated@@46 $generated@@581))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@584) $generated@@3)) ($generated@@74 $generated@@584 $generated@@47 $generated@@583))
 :pattern ( ($generated@@74 $generated@@584 $generated@@47 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@586) $generated@@4)) ($generated@@74 $generated@@586 $generated@@44 $generated@@585))
 :pattern ( ($generated@@74 $generated@@586 $generated@@44 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@588) $generated@@252)) ($generated@@74 $generated@@588 $generated@@45 $generated@@587))
 :pattern ( ($generated@@74 $generated@@588 $generated@@45 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@590) $generated@@145)) ($generated@@74 $generated@@590 $generated@@48 $generated@@589))
 :pattern ( ($generated@@74 $generated@@590 $generated@@48 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@239 $generated@@145)) (= (type $generated@@592) $generated@@64)) (= ($generated@@132 $generated@@591 ($generated@@238 $generated@@592)) (forall (($generated@@593 Int) ) (!  (=> (and (<= 0 $generated@@593) (< $generated@@593 ($generated@@266 $generated@@591))) ($generated@@212 ($generated@@267 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@267 $generated@@591 $generated@@593))
))))
 :pattern ( ($generated@@132 $generated@@591 ($generated@@238 $generated@@592)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 Int) ) (!  (=> (= (type $generated@@595) ($generated@@239 $generated@@145)) (=> (and (<= 0 $generated@@596) (< $generated@@596 ($generated@@266 $generated@@595))) (< ($generated@@520 ($generated@@375 $generated@@136 ($generated@@267 $generated@@595 $generated@@596))) ($generated@@594 $generated@@595))))
 :pattern ( ($generated@@520 ($generated@@375 $generated@@136 ($generated@@267 $generated@@595 $generated@@596))))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (and (= (type $generated@@597) ($generated@@298 $generated@@145 $generated@@145)) (= (type $generated@@598) $generated@@64)) (= (type $generated@@599) $generated@@64)) ($generated@@132 $generated@@597 ($generated@@403 $generated@@598 $generated@@599))) (and (and ($generated@@132 ($generated@@296 $generated@@597) ($generated@@221 $generated@@598)) ($generated@@132 ($generated@@343 $generated@@597) ($generated@@221 $generated@@599))) ($generated@@132 ($generated@@374 $generated@@597) ($generated@@221 ($generated@@135 $generated@@598 $generated@@599)))))
 :pattern ( ($generated@@132 $generated@@597 ($generated@@403 $generated@@598 $generated@@599)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) ($generated@@316 $generated@@145 $generated@@145)) (= (type $generated@@601) $generated@@64)) (= (type $generated@@602) $generated@@64)) ($generated@@132 $generated@@600 ($generated@@411 $generated@@601 $generated@@602))) (and (and ($generated@@132 ($generated@@314 $generated@@600) ($generated@@226 $generated@@601)) ($generated@@132 ($generated@@354 $generated@@600) ($generated@@226 $generated@@602))) ($generated@@132 ($generated@@385 $generated@@600) ($generated@@226 ($generated@@135 $generated@@601 $generated@@602)))))
 :pattern ( ($generated@@132 $generated@@600 ($generated@@411 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ) (!  (=> (= (type $generated@@603) $generated@@2) ($generated@@132 $generated@@603 $generated@@46))
 :pattern ( ($generated@@132 $generated@@603 $generated@@46))
)))
(assert (forall (($generated@@604 T@U) ) (!  (=> (= (type $generated@@604) $generated@@3) ($generated@@132 $generated@@604 $generated@@47))
 :pattern ( ($generated@@132 $generated@@604 $generated@@47))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@4) ($generated@@132 $generated@@605 $generated@@44))
 :pattern ( ($generated@@132 $generated@@605 $generated@@44))
)))
(assert (forall (($generated@@606 T@U) ) (!  (=> (= (type $generated@@606) $generated@@252) ($generated@@132 $generated@@606 $generated@@45))
 :pattern ( ($generated@@132 $generated@@606 $generated@@45))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@145) ($generated@@132 $generated@@607 $generated@@48))
 :pattern ( ($generated@@132 $generated@@607 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@608 () Int)
(declare-fun $generated@@609 () T@U)
(declare-fun $generated@@610 () T@U)
(declare-fun $generated@@611 () T@U)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () T@U)
(declare-fun $generated@@617 () T@U)
(declare-fun $generated@@618 (T@U) Bool)
(declare-fun $generated@@619 () Int)
(assert  (and (and (and (and (and (= (type $generated@@609) ($generated@@239 $generated@@145)) (= (type $generated@@610) ($generated@@239 $generated@@145))) (= (type $generated@@611) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@612) ($generated@@239 $generated@@145))) (= (type $generated@@616) ($generated@@157 $generated@@77 $generated@@4))) (= (type $generated@@617) $generated@@77)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@620  (=> (= (ControlFlow 0 2) (- 0 1)) (or (or (= $generated@@608 ($generated@@231 2)) ($generated@@265 $generated@@609 ($generated@@237 ($generated@@237 ($generated@@237 ($generated@@237 ($generated@@278 $generated@@145) ($generated@@285 ($generated@@250 122))) ($generated@@285 ($generated@@250 101))) ($generated@@285 ($generated@@250 114))) ($generated@@285 ($generated@@250 111))))) ($generated@@265 $generated@@609 ($generated@@237 ($generated@@237 ($generated@@237 ($generated@@278 $generated@@145) ($generated@@285 ($generated@@250 111))) ($generated@@285 ($generated@@250 110))) ($generated@@285 ($generated@@250 101))))))))
(let (($generated@@621  (=> (not ($generated@@265 $generated@@609 ($generated@@237 ($generated@@237 ($generated@@237 ($generated@@278 $generated@@145) ($generated@@285 ($generated@@250 111))) ($generated@@285 ($generated@@250 110))) ($generated@@285 ($generated@@250 101))))) (=> (and (and (and ($generated@@132 $generated@@610 ($generated@@238 $generated@@45)) ($generated@@74 $generated@@610 ($generated@@238 $generated@@45) $generated@@611)) (and (= $generated@@612 $generated@@609) ($generated@@132 $generated@@612 ($generated@@238 $generated@@45)))) (and (and (= $generated@@610 $generated@@612) (= $generated@@613 ($generated@@231 2))) (and (= $generated@@608 $generated@@613) (= (ControlFlow 0 5) 2)))) $generated@@620))))
(let (($generated@@622  (=> (and (and ($generated@@265 $generated@@609 ($generated@@237 ($generated@@237 ($generated@@237 ($generated@@278 $generated@@145) ($generated@@285 ($generated@@250 111))) ($generated@@285 ($generated@@250 110))) ($generated@@285 ($generated@@250 101)))) (= $generated@@614 ($generated@@231 1))) (and (= $generated@@608 $generated@@614) (= (ControlFlow 0 4) 2))) $generated@@620)))
(let (($generated@@623  (=> (not ($generated@@265 $generated@@609 ($generated@@237 ($generated@@237 ($generated@@237 ($generated@@237 ($generated@@278 $generated@@145) ($generated@@285 ($generated@@250 122))) ($generated@@285 ($generated@@250 101))) ($generated@@285 ($generated@@250 114))) ($generated@@285 ($generated@@250 111))))) (and (=> (= (ControlFlow 0 6) 4) $generated@@622) (=> (= (ControlFlow 0 6) 5) $generated@@621)))))
(let (($generated@@624  (=> (and (and ($generated@@265 $generated@@609 ($generated@@237 ($generated@@237 ($generated@@237 ($generated@@237 ($generated@@278 $generated@@145) ($generated@@285 ($generated@@250 122))) ($generated@@285 ($generated@@250 101))) ($generated@@285 ($generated@@250 114))) ($generated@@285 ($generated@@250 111)))) (= $generated@@615 ($generated@@231 0))) (and (= $generated@@608 $generated@@615) (= (ControlFlow 0 3) 2))) $generated@@620)))
(let (($generated@@625  (=> (= $generated@@616 ($generated@@156 $generated@@617 $generated@@611 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 3) $generated@@624) (=> (= (ControlFlow 0 7) 6) $generated@@623)))))
(let (($generated@@626  (=> (and ($generated@@255 $generated@@611) ($generated@@618 $generated@@611)) (=> (and (and ($generated@@132 $generated@@609 ($generated@@238 $generated@@45)) ($generated@@74 $generated@@609 ($generated@@238 $generated@@45) $generated@@611)) (and (= 1 $generated@@619) (= (ControlFlow 0 8) 7))) $generated@@625))))
$generated@@626))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (Int) Int)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@U) T@U)
(declare-fun $generated@@165 () T@T)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@1 ($generated@@48 $generated@@61 $generated@@62)) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@53 ($generated@@48 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@54 ($generated@@48 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 ($generated@@54 (type $generated@@67))))
(= (type ($generated@@52 $generated@@67 $generated@@68)) $generated@@69))
 :pattern ( ($generated@@52 $generated@@67 $generated@@68))
))) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (let (($generated@@73 (type $generated@@72)))
(let (($generated@@74 (type $generated@@71)))
(= (type ($generated@@55 $generated@@70 $generated@@71 $generated@@72)) ($generated@@48 $generated@@74 $generated@@73))))
 :pattern ( ($generated@@55 $generated@@70 $generated@@71 $generated@@72))
))) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (let (($generated@@78 ($generated@@54 (type $generated@@75))))
 (=> (= (type $generated@@77) $generated@@78) (= ($generated@@52 ($generated@@55 $generated@@75 $generated@@76 $generated@@77) $generated@@76) $generated@@77)))
 :weight 0
))) (and (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@52 ($generated@@55 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@52 $generated@@80 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or true (= ($generated@@52 ($generated@@55 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@52 $generated@@84 $generated@@86)))
 :weight 0
)))) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@50 $generated@@87)) 7))) (forall (($generated@@88 T@T) ) (! (= ($generated@@46 ($generated@@50 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@88))
))) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (let (($generated@@91 ($generated@@46 (type $generated@@90))))
(= (type ($generated@@51 $generated@@89 $generated@@90)) $generated@@91))
 :pattern ( ($generated@@51 $generated@@89 $generated@@90))
))) (= ($generated@@1 $generated@@49) 8)) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= (type ($generated@@56 $generated@@92 $generated@@93 $generated@@94)) $generated@@49)
 :pattern ( ($generated@@56 $generated@@92 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@46 (type $generated@@96))))
 (=> (= (type $generated@@97) $generated@@98) (= ($generated@@51 ($generated@@56 $generated@@95 $generated@@96 $generated@@97) $generated@@96) $generated@@97)))
 :weight 0
))) (and (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@51 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@51 $generated@@100 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or true (= ($generated@@51 ($generated@@56 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@51 $generated@@104 $generated@@106)))
 :weight 0
)))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (= ($generated@@1 ($generated@@57 $generated@@107 $generated@@108)) 10))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@58 ($generated@@57 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@57 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (! (= ($generated@@59 ($generated@@57 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@57 $generated@@111 $generated@@112))
))) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@59 (type $generated@@113))))
(= (type ($generated@@44 $generated@@113 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 (type $generated@@120)))
(let (($generated@@122 (type $generated@@118)))
(= (type ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120)) ($generated@@57 $generated@@122 $generated@@121))))
 :pattern ( ($generated@@60 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@59 (type $generated@@123))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@44 ($generated@@60 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@124 $generated@@125) $generated@@126)))
 :weight 0
))) (and (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@44 ($generated@@60 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@44 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@44 ($generated@@60 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@44 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or true (= ($generated@@44 ($generated@@60 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@44 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ) (! (= (type ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149)) ($generated@@57 $generated@@47 $generated@@4))
 :pattern ( ($generated@@45 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (let (($generated@@156 ($generated@@46 (type $generated@@155))))
 (=> (and (and (and (and (= (type $generated@@150) $generated@@47) (= (type $generated@@151) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@152) ($generated@@50 $generated@@4))) (= (type $generated@@154) $generated@@47)) (= (type $generated@@155) ($generated@@50 $generated@@156))) (= ($generated@@0 ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (not (= $generated@@154 $generated@@150)) ($generated@@0 ($generated@@51 ($generated@@52 $generated@@151 $generated@@154) $generated@@152))) $generated@@153))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@157 $generated@@158) $generated@@158)
 :pattern ( ($generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (let (($generated@@161 (type $generated@@160)))
(= (type ($generated@@159 $generated@@160)) $generated@@161))
 :pattern ( ($generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@159 $generated@@162) $generated@@162)
 :pattern ( ($generated@@159 $generated@@162))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 11) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@U) ) (! (= (type ($generated@@164 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@164 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ) (! (let (($generated@@170 (type $generated@@169)))
(= ($generated@@164 $generated@@170 ($generated@@163 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@163 $generated@@169))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))) ($generated@@159 ($generated@@163 ($generated@@8 $generated@@171))))
 :pattern ( ($generated@@163 ($generated@@8 ($generated@@157 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@163 ($generated@@159 $generated@@172)) ($generated@@159 ($generated@@163 $generated@@172)))
 :pattern ( ($generated@@163 ($generated@@159 $generated@@172)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 () Int)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 () Int)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(assert  (and (and (and (= (type $generated@@180) ($generated@@57 $generated@@47 $generated@@4)) (= (type $generated@@181) $generated@@47)) (= (type $generated@@182) ($generated@@48 $generated@@47 $generated@@49))) (= (type $generated@@183) ($generated@@50 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@190  (=> (= (ControlFlow 0 2) (- 0 1)) (= $generated@@173 ($generated@@157 1)))))
(let (($generated@@191  (=> (and (not (= $generated@@174 ($generated@@157 3))) (= $generated@@175 ($generated@@157 7))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (or (= $generated@@175 ($generated@@157 0)) (= $generated@@175 ($generated@@157 3))) (= $generated@@175 ($generated@@157 7)))) (=> (or (or (= $generated@@175 ($generated@@157 0)) (= $generated@@175 ($generated@@157 3))) (= $generated@@175 ($generated@@157 7))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (= $generated@@174 ($generated@@157 7))) (=> (= $generated@@174 ($generated@@157 7)) (=> (= $generated@@176 ($generated@@157 2)) (=> (and (= $generated@@173 $generated@@176) (= (ControlFlow 0 5) 2)) $generated@@190)))))))))
(let (($generated@@192  (=> (and (and (= $generated@@174 ($generated@@157 3)) (= $generated@@177 ($generated@@157 1))) (and (= $generated@@173 $generated@@177) (= (ControlFlow 0 4) 2))) $generated@@190)))
(let (($generated@@193  (=> (and (not (= $generated@@174 ($generated@@157 0))) (= $generated@@178 ($generated@@157 3))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (or (= $generated@@178 ($generated@@157 0)) (= $generated@@178 ($generated@@157 3))) (= $generated@@178 ($generated@@157 7)))) (=> (or (or (= $generated@@178 ($generated@@157 0)) (= $generated@@178 ($generated@@157 3))) (= $generated@@178 ($generated@@157 7))) (and (=> (= (ControlFlow 0 8) 4) $generated@@192) (=> (= (ControlFlow 0 8) 5) $generated@@191)))))))
(let (($generated@@194  (=> (and (and (= $generated@@174 ($generated@@157 0)) (= $generated@@179 ($generated@@157 0))) (and (= $generated@@173 $generated@@179) (= (ControlFlow 0 3) 2))) $generated@@190)))
(let (($generated@@195  (=> (and (= $generated@@180 ($generated@@45 $generated@@181 $generated@@182 $generated@@183 false)) (= $generated@@184 ($generated@@157 3))) (and (=> (= (ControlFlow 0 10) (- 0 12)) (or (or (= $generated@@184 ($generated@@157 0)) (= $generated@@184 ($generated@@157 3))) (= $generated@@184 ($generated@@157 7)))) (=> (or (or (= $generated@@184 ($generated@@157 0)) (= $generated@@184 ($generated@@157 3))) (= $generated@@184 ($generated@@157 7))) (=> (and (= $generated@@174 ($generated@@157 3)) (= $generated@@185 ($generated@@157 0))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (or (or (= $generated@@185 ($generated@@157 0)) (= $generated@@185 ($generated@@157 3))) (= $generated@@185 ($generated@@157 7)))) (=> (or (or (= $generated@@185 ($generated@@157 0)) (= $generated@@185 ($generated@@157 3))) (= $generated@@185 ($generated@@157 7))) (and (=> (= (ControlFlow 0 10) 3) $generated@@194) (=> (= (ControlFlow 0 10) 8) $generated@@193))))))))))
(let (($generated@@196  (=> (and ($generated@@186 $generated@@182) ($generated@@187 $generated@@182)) (=> (and (and (or (or (= $generated@@188 ($generated@@157 0)) (= $generated@@188 ($generated@@157 3))) (= $generated@@188 ($generated@@157 7))) true) (and (= 1 $generated@@189) (= (ControlFlow 0 13) 10))) $generated@@195))))
$generated@@196))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U) Bool)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) T@U)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@156 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) Int)
(declare-fun $generated@@158 (T@U) Int)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@168 (T@T T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@224 (T@U T@U) T@U)
(declare-fun $generated@@225 (T@U T@U) Bool)
(declare-fun $generated@@232 (Int Int) T@U)
(declare-fun $generated@@241 (T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@251 (Int) Int)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@258 (T@U T@U T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@274 (T@T) T@U)
(declare-fun $generated@@275 (T@U) Int)
(declare-fun $generated@@276 (T@T) T@T)
(declare-fun $generated@@277 (T@T) T@T)
(declare-fun $generated@@282 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@294 (T@T T@T) T@U)
(declare-fun $generated@@295 (T@T T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@297 (T@T) T@T)
(declare-fun $generated@@311 (T@U) T@U)
(declare-fun $generated@@312 (T@T T@T) T@U)
(declare-fun $generated@@313 (T@T T@T) T@T)
(declare-fun $generated@@314 (T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@332 (T@T T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@397 (T@U T@U) T@U)
(declare-fun $generated@@405 (T@U T@U) T@U)
(declare-fun $generated@@413 (T@T) T@U)
(declare-fun $generated@@437 () T@T)
(declare-fun $generated@@445 (T@U) T@U)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@455 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@486 (T@U Int) T@U)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@497 (T@U) T@U)
(declare-fun $generated@@501 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@523 (T@U) Int)
(declare-fun $generated@@524 (T@U) Int)
(declare-fun $generated@@540 (T@U) T@U)
(declare-fun $generated@@598 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (= ($generated@@1 $generated@@136) 14))
(assert (forall (($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@138) $generated@@136) ($generated@@135 $generated@@138)) ($generated@@137 $generated@@138))
 :pattern ( ($generated@@135 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> (= (type $generated@@140) $generated@@2) ($generated@@139 $generated@@140 ($generated@@78 0)))
 :pattern ( ($generated@@139 $generated@@140 ($generated@@78 0)))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= (type ($generated@@142 $generated@@143 $generated@@144)) $generated@@67)
 :pattern ( ($generated@@142 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (and (and (= (type $generated@@145) $generated@@67) (= (type $generated@@146) $generated@@67)) (= (type $generated@@147) $generated@@136)) ($generated@@139 $generated@@147 ($generated@@142 $generated@@145 $generated@@146))) ($generated@@141 $generated@@147))
 :pattern ( ($generated@@141 $generated@@147) ($generated@@139 $generated@@147 ($generated@@142 $generated@@145 $generated@@146)))
)))
(assert  (and (and (= ($generated@@1 $generated@@151) 15) (forall (($generated@@152 T@U) ) (! (= (type ($generated@@149 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@149 $generated@@152))
))) (forall (($generated@@153 T@U) ) (! (= (type ($generated@@150 $generated@@153)) $generated@@151)
 :pattern ( ($generated@@150 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and (= (type $generated@@154) $generated@@136) (= (type $generated@@155) $generated@@136)) true) (= ($generated@@148 $generated@@154 $generated@@155)  (and (= ($generated@@149 $generated@@154) ($generated@@149 $generated@@155)) (= ($generated@@150 $generated@@154) ($generated@@150 $generated@@155)))))
 :pattern ( ($generated@@148 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) $generated@@136) (= (type $generated@@160) $generated@@136)) true) (= ($generated@@156 $generated@@159 $generated@@160)  (and (= ($generated@@157 $generated@@159) ($generated@@157 $generated@@160)) (= ($generated@@158 $generated@@159) ($generated@@158 $generated@@160)))))
 :pattern ( ($generated@@156 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= (type ($generated@@161 $generated@@163)) $generated@@67)
 :pattern ( ($generated@@161 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and (and (= (type $generated@@164) ($generated@@79 $generated@@151 $generated@@2)) (= (type $generated@@165) $generated@@67)) ($generated@@139 $generated@@164 ($generated@@161 $generated@@165))) ($generated@@162 $generated@@164))
 :pattern ( ($generated@@139 $generated@@164 ($generated@@161 $generated@@165)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (= ($generated@@1 ($generated@@168 $generated@@172 $generated@@173)) 16)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@169 ($generated@@168 $generated@@174 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@168 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@170 ($generated@@168 $generated@@176 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@168 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (let (($generated@@181 ($generated@@170 (type $generated@@178))))
(= (type ($generated@@166 $generated@@178 $generated@@179 $generated@@180)) $generated@@181))
 :pattern ( ($generated@@166 $generated@@178 $generated@@179 $generated@@180))
))) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (let (($generated@@186 (type $generated@@185)))
(let (($generated@@187 (type $generated@@183)))
(= (type ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185)) ($generated@@168 $generated@@187 $generated@@186))))
 :pattern ( ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 ($generated@@170 (type $generated@@188))))
 (=> (= (type $generated@@191) $generated@@192) (= ($generated@@166 ($generated@@171 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@189 $generated@@190) $generated@@191)))
 :weight 0
))) (and (and (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@166 ($generated@@171 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@166 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
)) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@166 ($generated@@171 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@166 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or true (= ($generated@@166 ($generated@@171 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@166 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ) (! (= (type ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214)) ($generated@@168 $generated@@80 $generated@@4))
 :pattern ( ($generated@@167 $generated@@211 $generated@@212 $generated@@213 $generated@@214))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@70 (type $generated@@220))))
 (=> (and (and (and (and (= (type $generated@@215) $generated@@80) (= (type $generated@@216) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@217) ($generated@@69 $generated@@4))) (= (type $generated@@219) $generated@@80)) (= (type $generated@@220) ($generated@@69 $generated@@221))) (= ($generated@@0 ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))  (=> (and (not (= $generated@@219 $generated@@215)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@216 $generated@@219) $generated@@217))) $generated@@218))))
 :pattern ( ($generated@@166 ($generated@@167 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))
)))
(assert (= (type $generated@@222) $generated@@67))
(assert (forall (($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@223) $generated@@136) ($generated@@139 $generated@@223 $generated@@222)) ($generated@@137 $generated@@223))
 :pattern ( ($generated@@137 $generated@@223) ($generated@@139 $generated@@223 $generated@@222))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= (type ($generated@@224 $generated@@226 $generated@@227)) $generated@@136)
 :pattern ( ($generated@@224 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and (and (and (= (type $generated@@228) $generated@@67) (= (type $generated@@229) $generated@@67)) (= (type $generated@@230) $generated@@151)) (= (type $generated@@231) $generated@@151)) (= ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229))  (and ($generated@@225 $generated@@230 $generated@@228) ($generated@@225 $generated@@231 $generated@@229))))
 :pattern ( ($generated@@139 ($generated@@224 $generated@@230 $generated@@231) ($generated@@142 $generated@@228 $generated@@229)))
)))
(assert (forall (($generated@@233 Int) ($generated@@234 Int) ) (! (= (type ($generated@@232 $generated@@233 $generated@@234)) $generated@@136)
 :pattern ( ($generated@@232 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 Int) ($generated@@236 Int) ) (! (= ($generated@@139 ($generated@@232 $generated@@235 $generated@@236) $generated@@222)  (and ($generated@@139 ($generated@@8 $generated@@235) $generated@@46) ($generated@@139 ($generated@@8 $generated@@236) $generated@@46)))
 :pattern ( ($generated@@139 ($generated@@232 $generated@@235 $generated@@236) $generated@@222))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@136) (= (type $generated@@238) $generated@@136)) (= ($generated@@148 $generated@@237 $generated@@238) (= $generated@@237 $generated@@238)))
 :pattern ( ($generated@@148 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@136) (= (type $generated@@240) $generated@@136)) (= ($generated@@156 $generated@@239 $generated@@240) (= $generated@@239 $generated@@240)))
 :pattern ( ($generated@@156 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@242 T@U) ) (! (= (type ($generated@@241 $generated@@242)) $generated@@67)
 :pattern ( ($generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) ($generated@@79 $generated@@151 $generated@@4)) (= (type $generated@@244) $generated@@67)) (= ($generated@@139 $generated@@243 ($generated@@241 $generated@@244)) (forall (($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@245) $generated@@151) ($generated@@0 ($generated@@84 $generated@@243 $generated@@245))) ($generated@@225 $generated@@245 $generated@@244))
 :pattern ( ($generated@@84 $generated@@243 $generated@@245))
))))
 :pattern ( ($generated@@139 $generated@@243 ($generated@@241 $generated@@244)))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@67)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@248) ($generated@@79 $generated@@151 $generated@@4)) (= (type $generated@@249) $generated@@67)) (= ($generated@@139 $generated@@248 ($generated@@246 $generated@@249)) (forall (($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@151) ($generated@@0 ($generated@@84 $generated@@248 $generated@@250))) ($generated@@225 $generated@@250 $generated@@249))
 :pattern ( ($generated@@84 $generated@@248 $generated@@250))
))))
 :pattern ( ($generated@@139 $generated@@248 ($generated@@246 $generated@@249)))
)))
(assert (forall (($generated@@252 Int) ) (! (= ($generated@@251 $generated@@252) $generated@@252)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (let (($generated@@255 (type $generated@@254)))
(= (type ($generated@@253 $generated@@254)) $generated@@255))
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@256 T@U) ) (! (= ($generated@@253 $generated@@256) $generated@@256)
 :pattern ( ($generated@@253 $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@259) $generated@@67) (= (type $generated@@260) $generated@@67)) (= (type $generated@@261) $generated@@151)) (= (type $generated@@262) $generated@@151)) (= (type $generated@@263) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@257 $generated@@263)) (= ($generated@@77 ($generated@@224 $generated@@261 $generated@@262) ($generated@@142 $generated@@259 $generated@@260) $generated@@263)  (and ($generated@@258 $generated@@261 $generated@@259 $generated@@263) ($generated@@258 $generated@@262 $generated@@260 $generated@@263))))
 :pattern ( ($generated@@77 ($generated@@224 $generated@@261 $generated@@262) ($generated@@142 $generated@@259 $generated@@260) $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@71)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (!  (=> (= (type $generated@@266) $generated@@136) (= ($generated@@141 $generated@@266) (= ($generated@@264 $generated@@266) $generated@@61)))
 :pattern ( ($generated@@141 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= (type $generated@@267) $generated@@136) (= ($generated@@137 $generated@@267) (= ($generated@@264 $generated@@267) $generated@@63)))
 :pattern ( ($generated@@137 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@136) ($generated@@141 $generated@@268)) (exists (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (and (and (= (type $generated@@269) $generated@@151) (= (type $generated@@270) $generated@@151)) (= $generated@@268 ($generated@@224 $generated@@269 $generated@@270)))
 :no-pattern (type $generated@@269)
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@269)
 :no-pattern ($generated@@0 $generated@@269)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
)))
 :pattern ( ($generated@@141 $generated@@268))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@136) ($generated@@137 $generated@@271)) (exists (($generated@@272 Int) ($generated@@273 Int) ) (= $generated@@271 ($generated@@232 $generated@@272 $generated@@273))))
 :pattern ( ($generated@@137 $generated@@271))
)))
(assert  (and (and (forall (($generated@@278 T@T) ) (= ($generated@@1 ($generated@@276 $generated@@278)) 17)) (forall (($generated@@279 T@T) ) (! (= ($generated@@277 ($generated@@276 $generated@@279)) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
))) (forall (($generated@@280 T@T) ) (! (= (type ($generated@@274 $generated@@280)) ($generated@@276 $generated@@280))
 :pattern ( ($generated@@274 $generated@@280))
))))
(assert (forall (($generated@@281 T@T) ) (! (= ($generated@@275 ($generated@@274 $generated@@281)) 0)
 :pattern ( ($generated@@274 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ) (! (= (type ($generated@@282 $generated@@283)) $generated@@151)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@67) (= (type $generated@@286) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@258 ($generated@@282 $generated@@284) $generated@@285 $generated@@286) ($generated@@77 $generated@@284 $generated@@285 $generated@@286)))
 :pattern ( ($generated@@258 ($generated@@282 $generated@@284) $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@289 T@T) ) (! (= (type ($generated@@288 $generated@@289)) ($generated@@79 $generated@@289 $generated@@2))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (! (let (($generated@@291 ($generated@@82 (type $generated@@290))))
 (=> (= (type $generated@@290) ($generated@@79 $generated@@291 $generated@@2)) (and (= (= ($generated@@287 $generated@@290) 0) (= $generated@@290 ($generated@@288 $generated@@291))) (=> (not (= ($generated@@287 $generated@@290) 0)) (exists (($generated@@292 T@U) ) (!  (and (= (type $generated@@292) $generated@@291) (< 0 ($generated ($generated@@84 $generated@@290 $generated@@292))))
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
))))))
 :pattern ( ($generated@@287 $generated@@290))
)))
(assert  (and (and (and (and (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@298 $generated@@299)) 18)) (forall (($generated@@300 T@T) ($generated@@301 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@300 $generated@@301)) $generated@@300)
 :pattern ( ($generated@@295 $generated@@300 $generated@@301))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= ($generated@@297 ($generated@@295 $generated@@302 $generated@@303)) $generated@@303)
 :pattern ( ($generated@@295 $generated@@302 $generated@@303))
))) (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@296 (type $generated@@304))))
(= (type ($generated@@293 $generated@@304)) ($generated@@79 $generated@@305 $generated@@4)))
 :pattern ( ($generated@@293 $generated@@304))
))) (forall (($generated@@306 T@T) ($generated@@307 T@T) ) (! (= (type ($generated@@294 $generated@@306 $generated@@307)) ($generated@@295 $generated@@306 $generated@@307))
 :pattern ( ($generated@@294 $generated@@306 $generated@@307))
))))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@T) ) (! (let (($generated@@310 (type $generated@@308)))
 (not ($generated@@0 ($generated@@84 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308))))
 :pattern ( (let (($generated@@310 (type $generated@@308)))
($generated@@84 ($generated@@293 ($generated@@294 $generated@@310 $generated@@309)) $generated@@308)))
)))
(assert  (and (and (and (and (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@1 ($generated@@313 $generated@@316 $generated@@317)) 19)) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@314 ($generated@@313 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@313 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@315 ($generated@@313 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@313 $generated@@320 $generated@@321))
))) (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@314 (type $generated@@322))))
(= (type ($generated@@311 $generated@@322)) ($generated@@79 $generated@@323 $generated@@4)))
 :pattern ( ($generated@@311 $generated@@322))
))) (forall (($generated@@324 T@T) ($generated@@325 T@T) ) (! (= (type ($generated@@312 $generated@@324 $generated@@325)) ($generated@@313 $generated@@324 $generated@@325))
 :pattern ( ($generated@@312 $generated@@324 $generated@@325))
))))
(assert (forall (($generated@@326 T@U) ($generated@@327 T@T) ) (! (let (($generated@@328 (type $generated@@326)))
 (not ($generated@@0 ($generated@@84 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326))))
 :pattern ( (let (($generated@@328 (type $generated@@326)))
($generated@@84 ($generated@@311 ($generated@@312 $generated@@328 $generated@@327)) $generated@@326)))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@82 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@79 $generated@@330 $generated@@2)) (= ($generated@@162 $generated@@329) (forall (($generated@@331 T@U) ) (!  (=> (= (type $generated@@331) $generated@@330) (and (<= 0 ($generated ($generated@@84 $generated@@329 $generated@@331))) (<= ($generated ($generated@@84 $generated@@329 $generated@@331)) ($generated@@287 $generated@@329))))
 :pattern ( ($generated@@84 $generated@@329 $generated@@331))
)))))
 :pattern ( ($generated@@162 $generated@@329))
)))
(assert (forall (($generated@@333 T@T) ($generated@@334 T@U) ) (! (= (type ($generated@@332 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@332 $generated@@333 $generated@@334))
)))
(assert (forall (($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@335) $generated@@151) ($generated@@225 $generated@@335 $generated@@222)) (and (= ($generated@@282 ($generated@@332 $generated@@136 $generated@@335)) $generated@@335) ($generated@@139 ($generated@@332 $generated@@136 $generated@@335) $generated@@222)))
 :pattern ( ($generated@@225 $generated@@335 $generated@@222))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@297 (type $generated@@336))))
(let (($generated@@338 ($generated@@296 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@295 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@294 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@338) ($generated@@0 ($generated@@84 ($generated@@293 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@293 $generated@@336))
)))
(assert (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@297 (type $generated@@341))))
(= (type ($generated@@340 $generated@@341)) ($generated@@79 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@297 (type $generated@@343))))
(let (($generated@@345 ($generated@@296 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@295 $generated@@345 $generated@@344)) (or (= $generated@@343 ($generated@@294 $generated@@345 $generated@@344)) (exists (($generated@@346 T@U) ) (!  (and (= (type $generated@@346) $generated@@344) ($generated@@0 ($generated@@84 ($generated@@340 $generated@@343) $generated@@346)))
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
))))))
 :pattern ( ($generated@@340 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@315 (type $generated@@347))))
(let (($generated@@349 ($generated@@314 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@313 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@312 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@349) ($generated@@0 ($generated@@84 ($generated@@311 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@311 $generated@@347))
)))
(assert (forall (($generated@@352 T@U) ) (! (let (($generated@@353 ($generated@@315 (type $generated@@352))))
(= (type ($generated@@351 $generated@@352)) ($generated@@79 $generated@@353 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@352))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@315 (type $generated@@354))))
(let (($generated@@356 ($generated@@314 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@313 $generated@@356 $generated@@355)) (or (= $generated@@354 ($generated@@312 $generated@@356 $generated@@355)) (exists (($generated@@357 T@U) ) (!  (and (= (type $generated@@357) $generated@@355) ($generated@@0 ($generated@@84 ($generated@@351 $generated@@354) $generated@@357)))
 :no-pattern (type $generated@@357)
 :no-pattern ($generated $generated@@357)
 :no-pattern ($generated@@0 $generated@@357)
))))))
 :pattern ( ($generated@@351 $generated@@354))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@358) ($generated@@79 $generated@@151 $generated@@2)) (= (type $generated@@359) $generated@@67)) (= ($generated@@139 $generated@@358 ($generated@@161 $generated@@359)) (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@151) (< 0 ($generated ($generated@@84 $generated@@358 $generated@@360)))) ($generated@@225 $generated@@360 $generated@@359))
 :pattern ( ($generated@@84 $generated@@358 $generated@@360))
))))
 :pattern ( ($generated@@139 $generated@@358 ($generated@@161 $generated@@359)))
)))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (and (= (type $generated@@361) ($generated@@79 $generated@@151 $generated@@4)) (= (type $generated@@362) $generated@@67)) (= (type $generated@@363) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@361 ($generated@@241 $generated@@362) $generated@@363) (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@151) ($generated@@0 ($generated@@84 $generated@@361 $generated@@364))) ($generated@@258 $generated@@364 $generated@@362 $generated@@363))
 :pattern ( ($generated@@84 $generated@@361 $generated@@364))
))))
 :pattern ( ($generated@@77 $generated@@361 ($generated@@241 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@365 T@U) ($generated@@366 T@U) ($generated@@367 T@U) ) (!  (=> (and (and (= (type $generated@@365) ($generated@@79 $generated@@151 $generated@@4)) (= (type $generated@@366) $generated@@67)) (= (type $generated@@367) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@365 ($generated@@246 $generated@@366) $generated@@367) (forall (($generated@@368 T@U) ) (!  (=> (and (= (type $generated@@368) $generated@@151) ($generated@@0 ($generated@@84 $generated@@365 $generated@@368))) ($generated@@258 $generated@@368 $generated@@366 $generated@@367))
 :pattern ( ($generated@@84 $generated@@365 $generated@@368))
))))
 :pattern ( ($generated@@77 $generated@@365 ($generated@@246 $generated@@366) $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 (type $generated@@369)))
(= ($generated ($generated@@84 ($generated@@288 $generated@@370) $generated@@369)) 0))
 :pattern ( (let (($generated@@370 (type $generated@@369)))
($generated@@84 ($generated@@288 $generated@@370) $generated@@369)))
)))
(assert  (and (forall (($generated@@373 T@U) ) (! (= (type ($generated@@371 $generated@@373)) ($generated@@79 $generated@@151 $generated@@4))
 :pattern ( ($generated@@371 $generated@@373))
)) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@297 (type $generated@@374))))
(let (($generated@@376 ($generated@@296 (type $generated@@374))))
(= (type ($generated@@372 $generated@@374)) ($generated@@79 $generated@@376 $generated@@375))))
 :pattern ( ($generated@@372 $generated@@374))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@295 $generated@@151 $generated@@151)) (= (type $generated@@378) $generated@@151)) (= ($generated@@0 ($generated@@84 ($generated@@371 $generated@@377) $generated@@378))  (and ($generated@@0 ($generated@@84 ($generated@@293 $generated@@377) ($generated@@149 ($generated@@332 $generated@@136 $generated@@378)))) (= ($generated@@84 ($generated@@372 $generated@@377) ($generated@@149 ($generated@@332 $generated@@136 $generated@@378))) ($generated@@150 ($generated@@332 $generated@@136 $generated@@378))))))
 :pattern ( ($generated@@84 ($generated@@371 $generated@@377) $generated@@378))
)))
(assert  (and (forall (($generated@@381 T@U) ) (! (= (type ($generated@@379 $generated@@381)) ($generated@@79 $generated@@151 $generated@@4))
 :pattern ( ($generated@@379 $generated@@381))
)) (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@315 (type $generated@@382))))
(let (($generated@@384 ($generated@@314 (type $generated@@382))))
(= (type ($generated@@380 $generated@@382)) ($generated@@79 $generated@@384 $generated@@383))))
 :pattern ( ($generated@@380 $generated@@382))
))))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@385) ($generated@@313 $generated@@151 $generated@@151)) (= (type $generated@@386) $generated@@151)) (= ($generated@@0 ($generated@@84 ($generated@@379 $generated@@385) $generated@@386))  (and ($generated@@0 ($generated@@84 ($generated@@311 $generated@@385) ($generated@@149 ($generated@@332 $generated@@136 $generated@@386)))) (= ($generated@@84 ($generated@@380 $generated@@385) ($generated@@149 ($generated@@332 $generated@@136 $generated@@386))) ($generated@@150 ($generated@@332 $generated@@136 $generated@@386))))))
 :pattern ( ($generated@@84 ($generated@@379 $generated@@385) $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@296 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@295 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@84 ($generated@@340 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@84 ($generated@@293 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@84 ($generated@@372 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@84 ($generated@@293 $generated@@387) $generated@@391))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@84 ($generated@@340 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(let (($generated@@395 ($generated@@314 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@313 $generated@@395 $generated@@394)) (= ($generated@@0 ($generated@@84 ($generated@@351 $generated@@392) $generated@@393)) (exists (($generated@@396 T@U) ) (!  (and (= (type $generated@@396) $generated@@395) (and ($generated@@0 ($generated@@84 ($generated@@311 $generated@@392) $generated@@396)) (= $generated@@393 ($generated@@84 ($generated@@380 $generated@@392) $generated@@396))))
 :pattern ( ($generated@@84 ($generated@@311 $generated@@392) $generated@@396))
 :pattern ( ($generated@@84 ($generated@@380 $generated@@392) $generated@@396))
))))))
 :pattern ( ($generated@@84 ($generated@@351 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@398 $generated@@399)) $generated@@67)
 :pattern ( ($generated@@397 $generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (and (and (= (type $generated@@400) ($generated@@295 $generated@@151 $generated@@151)) (= (type $generated@@401) $generated@@67)) (= (type $generated@@402) $generated@@67)) (= (type $generated@@403) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@151) ($generated@@0 ($generated@@84 ($generated@@293 $generated@@400) $generated@@404))) (and ($generated@@258 ($generated@@84 ($generated@@372 $generated@@400) $generated@@404) $generated@@402 $generated@@403) ($generated@@258 $generated@@404 $generated@@401 $generated@@403)))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@400) $generated@@404))
 :pattern ( ($generated@@84 ($generated@@293 $generated@@400) $generated@@404))
))))
 :pattern ( ($generated@@77 $generated@@400 ($generated@@397 $generated@@401 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@406 $generated@@407)) $generated@@67)
 :pattern ( ($generated@@405 $generated@@406 $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ) (!  (=> (and (and (and (= (type $generated@@408) ($generated@@313 $generated@@151 $generated@@151)) (= (type $generated@@409) $generated@@67)) (= (type $generated@@410) $generated@@67)) (= (type $generated@@411) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411) (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@151) ($generated@@0 ($generated@@84 ($generated@@311 $generated@@408) $generated@@412))) (and ($generated@@258 ($generated@@84 ($generated@@380 $generated@@408) $generated@@412) $generated@@410 $generated@@411) ($generated@@258 $generated@@412 $generated@@409 $generated@@411)))
 :pattern ( ($generated@@84 ($generated@@380 $generated@@408) $generated@@412))
 :pattern ( ($generated@@84 ($generated@@311 $generated@@408) $generated@@412))
))))
 :pattern ( ($generated@@77 $generated@@408 ($generated@@405 $generated@@409 $generated@@410) $generated@@411))
)))
(assert (forall (($generated@@414 T@T) ) (! (= (type ($generated@@413 $generated@@414)) ($generated@@79 $generated@@414 $generated@@4))
 :pattern ( ($generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@315 (type $generated@@415))))
(let (($generated@@417 ($generated@@314 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@313 $generated@@417 $generated@@416)) (= (= $generated@@415 ($generated@@312 $generated@@417 $generated@@416)) (= ($generated@@311 $generated@@415) ($generated@@413 $generated@@417))))))
 :pattern ( ($generated@@311 $generated@@415))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@315 (type $generated@@418))))
(let (($generated@@420 ($generated@@314 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@313 $generated@@420 $generated@@419)) (= (= $generated@@418 ($generated@@312 $generated@@420 $generated@@419)) (= ($generated@@351 $generated@@418) ($generated@@413 $generated@@419))))))
 :pattern ( ($generated@@351 $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@315 (type $generated@@421))))
(let (($generated@@423 ($generated@@314 (type $generated@@421))))
 (=> (= (type $generated@@421) ($generated@@313 $generated@@423 $generated@@422)) (= (= $generated@@421 ($generated@@312 $generated@@423 $generated@@422)) (= ($generated@@379 $generated@@421) ($generated@@413 $generated@@151))))))
 :pattern ( ($generated@@379 $generated@@421))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@297 (type $generated@@424))))
(let (($generated@@426 ($generated@@296 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@295 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@294 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@151) (= (type $generated@@428) $generated@@151)) ($generated@@0 ($generated@@84 ($generated@@371 $generated@@424) ($generated@@282 ($generated@@224 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@371 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (! (let (($generated@@430 ($generated@@315 (type $generated@@429))))
(let (($generated@@431 ($generated@@314 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@313 $generated@@431 $generated@@430)) (or (= $generated@@429 ($generated@@312 $generated@@431 $generated@@430)) (exists (($generated@@432 T@U) ($generated@@433 T@U) ) (!  (and (and (= (type $generated@@432) $generated@@151) (= (type $generated@@433) $generated@@151)) ($generated@@0 ($generated@@84 ($generated@@379 $generated@@429) ($generated@@282 ($generated@@224 $generated@@432 $generated@@433)))))
 :no-pattern (type $generated@@432)
 :no-pattern (type $generated@@433)
 :no-pattern ($generated $generated@@432)
 :no-pattern ($generated@@0 $generated@@432)
 :no-pattern ($generated $generated@@433)
 :no-pattern ($generated@@0 $generated@@433)
))))))
 :pattern ( ($generated@@379 $generated@@429))
)))
(assert (forall (($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@151) ($generated@@225 $generated@@434 $generated@@46)) (and (= ($generated@@282 ($generated@@332 $generated@@2 $generated@@434)) $generated@@434) ($generated@@139 ($generated@@332 $generated@@2 $generated@@434) $generated@@46)))
 :pattern ( ($generated@@225 $generated@@434 $generated@@46))
)))
(assert (forall (($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@435) $generated@@151) ($generated@@225 $generated@@435 $generated@@47)) (and (= ($generated@@282 ($generated@@332 $generated@@3 $generated@@435)) $generated@@435) ($generated@@139 ($generated@@332 $generated@@3 $generated@@435) $generated@@47)))
 :pattern ( ($generated@@225 $generated@@435 $generated@@47))
)))
(assert (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@151) ($generated@@225 $generated@@436 $generated@@44)) (and (= ($generated@@282 ($generated@@332 $generated@@4 $generated@@436)) $generated@@436) ($generated@@139 ($generated@@332 $generated@@4 $generated@@436) $generated@@44)))
 :pattern ( ($generated@@225 $generated@@436 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@437) 20))
(assert (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@151) ($generated@@225 $generated@@438 $generated@@45)) (and (= ($generated@@282 ($generated@@332 $generated@@437 $generated@@438)) $generated@@438) ($generated@@139 ($generated@@332 $generated@@437 $generated@@438) $generated@@45)))
 :pattern ( ($generated@@225 $generated@@438 $generated@@45))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (= (type $generated@@440) $generated@@67) (= ($generated@@225 ($generated@@282 $generated@@439) $generated@@440) ($generated@@139 $generated@@439 $generated@@440)))
 :pattern ( ($generated@@225 ($generated@@282 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@82 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@79 $generated@@442 $generated@@2)) (<= 0 ($generated@@287 $generated@@441))))
 :pattern ( ($generated@@287 $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@277 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@276 $generated@@444)) (<= 0 ($generated@@275 $generated@@443))))
 :pattern ( ($generated@@275 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (= (type ($generated@@445 $generated@@446)) $generated@@67)
 :pattern ( ($generated@@445 $generated@@446))
)))
(assert (forall (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (= (type $generated@@447) $generated@@67) (= (type $generated@@448) $generated@@67)) (= ($generated@@445 ($generated@@397 $generated@@447 $generated@@448)) $generated@@447))
 :pattern ( ($generated@@397 $generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (= (type ($generated@@449 $generated@@450)) $generated@@67)
 :pattern ( ($generated@@449 $generated@@450))
)))
(assert (forall (($generated@@451 T@U) ($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@67) (= (type $generated@@452) $generated@@67)) (= ($generated@@449 ($generated@@397 $generated@@451 $generated@@452)) $generated@@452))
 :pattern ( ($generated@@397 $generated@@451 $generated@@452))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@67) (= (type $generated@@454) $generated@@67)) (= ($generated@@75 ($generated@@397 $generated@@453 $generated@@454)) $generated@@58))
 :pattern ( ($generated@@397 $generated@@453 $generated@@454))
)))
(assert (forall (($generated@@456 T@U) ) (! (= (type ($generated@@455 $generated@@456)) $generated@@67)
 :pattern ( ($generated@@455 $generated@@456))
)))
(assert (forall (($generated@@457 T@U) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@67) (= (type $generated@@458) $generated@@67)) (= ($generated@@455 ($generated@@405 $generated@@457 $generated@@458)) $generated@@457))
 :pattern ( ($generated@@405 $generated@@457 $generated@@458))
)))
(assert (forall (($generated@@460 T@U) ) (! (= (type ($generated@@459 $generated@@460)) $generated@@67)
 :pattern ( ($generated@@459 $generated@@460))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@67) (= (type $generated@@462) $generated@@67)) (= ($generated@@459 ($generated@@405 $generated@@461 $generated@@462)) $generated@@462))
 :pattern ( ($generated@@405 $generated@@461 $generated@@462))
)))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@67) (= (type $generated@@464) $generated@@67)) (= ($generated@@75 ($generated@@405 $generated@@463 $generated@@464)) $generated@@59))
 :pattern ( ($generated@@405 $generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@151) (= (type $generated@@466) $generated@@151)) (= ($generated@@264 ($generated@@224 $generated@@465 $generated@@466)) $generated@@61))
 :pattern ( ($generated@@224 $generated@@465 $generated@@466))
)))
(assert (forall (($generated@@468 T@U) ) (! (= (type ($generated@@467 $generated@@468)) $generated@@67)
 :pattern ( ($generated@@467 $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@67) (= (type $generated@@470) $generated@@67)) (= ($generated@@467 ($generated@@142 $generated@@469 $generated@@470)) $generated@@469))
 :pattern ( ($generated@@142 $generated@@469 $generated@@470))
)))
(assert (forall (($generated@@472 T@U) ) (! (= (type ($generated@@471 $generated@@472)) $generated@@67)
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@67) (= (type $generated@@474) $generated@@67)) (= ($generated@@471 ($generated@@142 $generated@@473 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@142 $generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@151) (= (type $generated@@476) $generated@@151)) (= ($generated@@149 ($generated@@224 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@224 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@151) (= (type $generated@@478) $generated@@151)) (= ($generated@@150 ($generated@@224 $generated@@477 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@224 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 Int) ($generated@@480 Int) ) (! (= ($generated@@264 ($generated@@232 $generated@@479 $generated@@480)) $generated@@63)
 :pattern ( ($generated@@232 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 Int) ($generated@@482 Int) ) (! (= ($generated@@157 ($generated@@232 $generated@@481 $generated@@482)) $generated@@481)
 :pattern ( ($generated@@232 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@483 Int) ($generated@@484 Int) ) (! (= ($generated@@158 ($generated@@232 $generated@@483 $generated@@484)) $generated@@484)
 :pattern ( ($generated@@232 $generated@@483 $generated@@484))
)))
(assert  (and (forall (($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@485 $generated@@487))
)) (forall (($generated@@488 T@U) ($generated@@489 Int) ) (! (let (($generated@@490 ($generated@@277 (type $generated@@488))))
(= (type ($generated@@486 $generated@@488 $generated@@489)) $generated@@490))
 :pattern ( ($generated@@486 $generated@@488 $generated@@489))
))))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (and (= (type $generated@@491) ($generated@@276 $generated@@151)) (= (type $generated@@492) $generated@@67)) (= (type $generated@@493) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@491 ($generated@@485 $generated@@492) $generated@@493) (forall (($generated@@494 Int) ) (!  (=> (and (<= 0 $generated@@494) (< $generated@@494 ($generated@@275 $generated@@491))) ($generated@@258 ($generated@@486 $generated@@491 $generated@@494) $generated@@492 $generated@@493))
 :pattern ( ($generated@@486 $generated@@491 $generated@@494))
))))
 :pattern ( ($generated@@77 $generated@@491 ($generated@@485 $generated@@492) $generated@@493))
)))
(assert (forall (($generated@@496 Int) ) (! (= ($generated@@495 ($generated@@78 $generated@@496)) $generated@@496)
 :pattern ( ($generated@@78 $generated@@496))
)))
(assert (forall (($generated@@498 T@U) ) (! (= (type ($generated@@497 $generated@@498)) $generated@@67)
 :pattern ( ($generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@67) (= ($generated@@497 ($generated@@241 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@241 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@67) (= ($generated@@75 ($generated@@241 $generated@@500)) $generated@@54))
 :pattern ( ($generated@@241 $generated@@500))
)))
(assert (forall (($generated@@502 T@U) ) (! (= (type ($generated@@501 $generated@@502)) $generated@@67)
 :pattern ( ($generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@67) (= ($generated@@501 ($generated@@246 $generated@@503)) $generated@@503))
 :pattern ( ($generated@@246 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (!  (=> (= (type $generated@@504) $generated@@67) (= ($generated@@75 ($generated@@246 $generated@@504)) $generated@@55))
 :pattern ( ($generated@@246 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@67)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ) (!  (=> (= (type $generated@@507) $generated@@67) (= ($generated@@505 ($generated@@161 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@161 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ) (!  (=> (= (type $generated@@508) $generated@@67) (= ($generated@@75 ($generated@@161 $generated@@508)) $generated@@56))
 :pattern ( ($generated@@161 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@67)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ) (!  (=> (= (type $generated@@511) $generated@@67) (= ($generated@@509 ($generated@@485 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@485 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ) (!  (=> (= (type $generated@@512) $generated@@67) (= ($generated@@75 ($generated@@485 $generated@@512)) $generated@@57))
 :pattern ( ($generated@@485 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ) (! (let (($generated@@514 (type $generated@@513)))
(= ($generated@@332 $generated@@514 ($generated@@282 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@282 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (= (type $generated@@515) ($generated@@295 $generated@@151 $generated@@151)) (= (type $generated@@516) $generated@@67)) (= (type $generated@@517) $generated@@67)) (= ($generated@@139 $generated@@515 ($generated@@397 $generated@@516 $generated@@517)) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@151) ($generated@@0 ($generated@@84 ($generated@@293 $generated@@515) $generated@@518))) (and ($generated@@225 ($generated@@84 ($generated@@372 $generated@@515) $generated@@518) $generated@@517) ($generated@@225 $generated@@518 $generated@@516)))
 :pattern ( ($generated@@84 ($generated@@372 $generated@@515) $generated@@518))
 :pattern ( ($generated@@84 ($generated@@293 $generated@@515) $generated@@518))
))))
 :pattern ( ($generated@@139 $generated@@515 ($generated@@397 $generated@@516 $generated@@517)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (and (= (type $generated@@519) ($generated@@313 $generated@@151 $generated@@151)) (= (type $generated@@520) $generated@@67)) (= (type $generated@@521) $generated@@67)) (= ($generated@@139 $generated@@519 ($generated@@405 $generated@@520 $generated@@521)) (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@151) ($generated@@0 ($generated@@84 ($generated@@311 $generated@@519) $generated@@522))) (and ($generated@@225 ($generated@@84 ($generated@@380 $generated@@519) $generated@@522) $generated@@521) ($generated@@225 $generated@@522 $generated@@520)))
 :pattern ( ($generated@@84 ($generated@@380 $generated@@519) $generated@@522))
 :pattern ( ($generated@@84 ($generated@@311 $generated@@519) $generated@@522))
))))
 :pattern ( ($generated@@139 $generated@@519 ($generated@@405 $generated@@520 $generated@@521)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@151) (= (type $generated@@526) $generated@@151)) (< ($generated@@523 $generated@@525) ($generated@@524 ($generated@@224 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@224 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@151) (= (type $generated@@528) $generated@@151)) (< ($generated@@523 $generated@@528) ($generated@@524 ($generated@@224 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@224 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@151) (= (type $generated@@530) $generated@@67)) (= (type $generated@@531) $generated@@67)) ($generated@@225 $generated@@529 ($generated@@397 $generated@@530 $generated@@531))) (and (= ($generated@@282 ($generated@@332 ($generated@@295 $generated@@151 $generated@@151) $generated@@529)) $generated@@529) ($generated@@139 ($generated@@332 ($generated@@295 $generated@@151 $generated@@151) $generated@@529) ($generated@@397 $generated@@530 $generated@@531))))
 :pattern ( ($generated@@225 $generated@@529 ($generated@@397 $generated@@530 $generated@@531)))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (and (= (type $generated@@532) $generated@@151) (= (type $generated@@533) $generated@@67)) (= (type $generated@@534) $generated@@67)) ($generated@@225 $generated@@532 ($generated@@405 $generated@@533 $generated@@534))) (and (= ($generated@@282 ($generated@@332 ($generated@@313 $generated@@151 $generated@@151) $generated@@532)) $generated@@532) ($generated@@139 ($generated@@332 ($generated@@313 $generated@@151 $generated@@151) $generated@@532) ($generated@@405 $generated@@533 $generated@@534))))
 :pattern ( ($generated@@225 $generated@@532 ($generated@@405 $generated@@533 $generated@@534)))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) $generated@@67) (= (type $generated@@536) $generated@@67)) (= (type $generated@@537) $generated@@151)) ($generated@@225 $generated@@537 ($generated@@142 $generated@@535 $generated@@536))) (and (= ($generated@@282 ($generated@@332 $generated@@136 $generated@@537)) $generated@@537) ($generated@@139 ($generated@@332 $generated@@136 $generated@@537) ($generated@@142 $generated@@535 $generated@@536))))
 :pattern ( ($generated@@225 $generated@@537 ($generated@@142 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@538 T@U) ) (! (let (($generated@@539 (type $generated@@538)))
 (not ($generated@@0 ($generated@@84 ($generated@@413 $generated@@539) $generated@@538))))
 :pattern ( (let (($generated@@539 (type $generated@@538)))
($generated@@84 ($generated@@413 $generated@@539) $generated@@538)))
)))
(assert (forall (($generated@@541 T@U) ) (! (= (type ($generated@@540 $generated@@541)) $generated@@72)
 :pattern ( ($generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@67) (= (type $generated@@543) $generated@@67)) (and (= ($generated@@75 ($generated@@142 $generated@@542 $generated@@543)) $generated@@62) (= ($generated@@540 ($generated@@142 $generated@@542 $generated@@543)) $generated@@65)))
 :pattern ( ($generated@@142 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (and (= (type $generated@@544) $generated@@136) (= (type $generated@@545) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@257 $generated@@545) (and ($generated@@137 $generated@@544) ($generated@@77 $generated@@544 $generated@@222 $generated@@545)))) ($generated@@77 ($generated@@8 ($generated@@157 $generated@@544)) $generated@@46 $generated@@545))
 :pattern ( ($generated@@77 ($generated@@8 ($generated@@157 $generated@@544)) $generated@@46 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (= (type $generated@@546) $generated@@136) (= (type $generated@@547) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@257 $generated@@547) (and ($generated@@137 $generated@@546) ($generated@@77 $generated@@546 $generated@@222 $generated@@547)))) ($generated@@77 ($generated@@8 ($generated@@158 $generated@@546)) $generated@@46 $generated@@547))
 :pattern ( ($generated@@77 ($generated@@8 ($generated@@158 $generated@@546)) $generated@@46 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@136) (= ($generated@@523 ($generated@@282 $generated@@548)) ($generated@@524 $generated@@548)))
 :pattern ( ($generated@@523 ($generated@@282 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@151) ($generated@@225 $generated@@549 ($generated@@78 0))) (and (= ($generated@@282 ($generated@@332 $generated@@2 $generated@@549)) $generated@@549) ($generated@@139 ($generated@@332 ($generated@@79 $generated@@151 $generated@@4) $generated@@549) ($generated@@78 0))))
 :pattern ( ($generated@@225 $generated@@549 ($generated@@78 0)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (= (type $generated@@550) $generated@@151) (= (type $generated@@551) $generated@@67)) ($generated@@225 $generated@@550 ($generated@@241 $generated@@551))) (and (= ($generated@@282 ($generated@@332 ($generated@@79 $generated@@151 $generated@@4) $generated@@550)) $generated@@550) ($generated@@139 ($generated@@332 ($generated@@79 $generated@@151 $generated@@4) $generated@@550) ($generated@@241 $generated@@551))))
 :pattern ( ($generated@@225 $generated@@550 ($generated@@241 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@552) $generated@@151) (= (type $generated@@553) $generated@@67)) ($generated@@225 $generated@@552 ($generated@@246 $generated@@553))) (and (= ($generated@@282 ($generated@@332 ($generated@@79 $generated@@151 $generated@@4) $generated@@552)) $generated@@552) ($generated@@139 ($generated@@332 ($generated@@79 $generated@@151 $generated@@4) $generated@@552) ($generated@@246 $generated@@553))))
 :pattern ( ($generated@@225 $generated@@552 ($generated@@246 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (= (type $generated@@554) $generated@@151) (= (type $generated@@555) $generated@@67)) ($generated@@225 $generated@@554 ($generated@@161 $generated@@555))) (and (= ($generated@@282 ($generated@@332 ($generated@@79 $generated@@151 $generated@@2) $generated@@554)) $generated@@554) ($generated@@139 ($generated@@332 ($generated@@79 $generated@@151 $generated@@2) $generated@@554) ($generated@@161 $generated@@555))))
 :pattern ( ($generated@@225 $generated@@554 ($generated@@161 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (= (type $generated@@556) $generated@@151) (= (type $generated@@557) $generated@@67)) ($generated@@225 $generated@@556 ($generated@@485 $generated@@557))) (and (= ($generated@@282 ($generated@@332 ($generated@@276 $generated@@151) $generated@@556)) $generated@@556) ($generated@@139 ($generated@@332 ($generated@@276 $generated@@151) $generated@@556) ($generated@@485 $generated@@557))))
 :pattern ( ($generated@@225 $generated@@556 ($generated@@485 $generated@@557)))
)))
(assert (= ($generated@@75 $generated@@222) $generated@@64))
(assert (= ($generated@@540 $generated@@222) $generated@@66))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (and (= (type $generated@@558) ($generated@@79 $generated@@151 $generated@@2)) (= (type $generated@@559) $generated@@67)) (= (type $generated@@560) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@558 ($generated@@161 $generated@@559) $generated@@560) (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@151) (< 0 ($generated ($generated@@84 $generated@@558 $generated@@561)))) ($generated@@258 $generated@@561 $generated@@559 $generated@@560))
 :pattern ( ($generated@@84 $generated@@558 $generated@@561))
))))
 :pattern ( ($generated@@77 $generated@@558 ($generated@@161 $generated@@559) $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@136) (= (type $generated@@563) $generated@@67)) (= (type $generated@@564) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@257 $generated@@564) (and ($generated@@141 $generated@@562) (exists (($generated@@565 T@U) ) (!  (and (= (type $generated@@565) $generated@@67) ($generated@@77 $generated@@562 ($generated@@142 $generated@@563 $generated@@565) $generated@@564))
 :pattern ( ($generated@@77 $generated@@562 ($generated@@142 $generated@@563 $generated@@565) $generated@@564))
))))) ($generated@@258 ($generated@@149 $generated@@562) $generated@@563 $generated@@564))
 :pattern ( ($generated@@258 ($generated@@149 $generated@@562) $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@136) (= (type $generated@@567) $generated@@67)) (= (type $generated@@568) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@257 $generated@@568) (and ($generated@@141 $generated@@566) (exists (($generated@@569 T@U) ) (!  (and (= (type $generated@@569) $generated@@67) ($generated@@77 $generated@@566 ($generated@@142 $generated@@569 $generated@@567) $generated@@568))
 :pattern ( ($generated@@77 $generated@@566 ($generated@@142 $generated@@569 $generated@@567) $generated@@568))
))))) ($generated@@258 ($generated@@150 $generated@@566) $generated@@567 $generated@@568))
 :pattern ( ($generated@@258 ($generated@@150 $generated@@566) $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@151) (= (type $generated@@571) $generated@@151)) (= ($generated@@224 ($generated@@253 $generated@@570) ($generated@@253 $generated@@571)) ($generated@@253 ($generated@@224 $generated@@570 $generated@@571))))
 :pattern ( ($generated@@224 ($generated@@253 $generated@@570) ($generated@@253 $generated@@571)))
)))
(assert (forall (($generated@@572 Int) ($generated@@573 Int) ) (! (= ($generated@@232 ($generated@@251 $generated@@572) ($generated@@251 $generated@@573)) ($generated@@253 ($generated@@232 $generated@@572 $generated@@573)))
 :pattern ( ($generated@@232 ($generated@@251 $generated@@572) ($generated@@251 $generated@@573)))
)))
(assert (forall (($generated@@574 Int) ) (! (= ($generated@@282 ($generated@@8 ($generated@@251 $generated@@574))) ($generated@@253 ($generated@@282 ($generated@@8 $generated@@574))))
 :pattern ( ($generated@@282 ($generated@@8 ($generated@@251 $generated@@574))))
)))
(assert (forall (($generated@@575 T@U) ) (! (= ($generated@@282 ($generated@@253 $generated@@575)) ($generated@@253 ($generated@@282 $generated@@575)))
 :pattern ( ($generated@@282 ($generated@@253 $generated@@575)))
)))
(assert (forall (($generated@@576 Int) ($generated@@577 Int) ($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@79 $generated@@80 $generated@@81)) ($generated@@257 $generated@@578)) (= ($generated@@77 ($generated@@232 $generated@@576 $generated@@577) $generated@@222 $generated@@578)  (and ($generated@@77 ($generated@@8 $generated@@576) $generated@@46 $generated@@578) ($generated@@77 ($generated@@8 $generated@@577) $generated@@46 $generated@@578))))
 :pattern ( ($generated@@77 ($generated@@232 $generated@@576 $generated@@577) $generated@@222 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (! (let (($generated@@580 ($generated@@277 (type $generated@@579))))
 (=> (and (= (type $generated@@579) ($generated@@276 $generated@@580)) (= ($generated@@275 $generated@@579) 0)) (= $generated@@579 ($generated@@274 $generated@@580))))
 :pattern ( ($generated@@275 $generated@@579))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (! (let (($generated@@584 (type $generated@@582)))
 (=> (and (and (= (type $generated@@581) ($generated@@79 $generated@@584 $generated@@2)) (= (type $generated@@583) $generated@@2)) (<= 0 ($generated $generated@@583))) (= ($generated@@287 ($generated@@85 $generated@@581 $generated@@582 $generated@@583)) (+ (- ($generated@@287 $generated@@581) ($generated ($generated@@84 $generated@@581 $generated@@582))) ($generated $generated@@583)))))
 :pattern ( ($generated@@287 ($generated@@85 $generated@@581 $generated@@582 $generated@@583)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@586) $generated@@2)) ($generated@@77 $generated@@586 $generated@@46 $generated@@585))
 :pattern ( ($generated@@77 $generated@@586 $generated@@46 $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@588) $generated@@3)) ($generated@@77 $generated@@588 $generated@@47 $generated@@587))
 :pattern ( ($generated@@77 $generated@@588 $generated@@47 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@590) $generated@@4)) ($generated@@77 $generated@@590 $generated@@44 $generated@@589))
 :pattern ( ($generated@@77 $generated@@590 $generated@@44 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@592) $generated@@437)) ($generated@@77 $generated@@592 $generated@@45 $generated@@591))
 :pattern ( ($generated@@77 $generated@@592 $generated@@45 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@594) $generated@@151)) ($generated@@77 $generated@@594 $generated@@48 $generated@@593))
 :pattern ( ($generated@@77 $generated@@594 $generated@@48 $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@276 $generated@@151)) (= (type $generated@@596) $generated@@67)) (= ($generated@@139 $generated@@595 ($generated@@485 $generated@@596)) (forall (($generated@@597 Int) ) (!  (=> (and (<= 0 $generated@@597) (< $generated@@597 ($generated@@275 $generated@@595))) ($generated@@225 ($generated@@486 $generated@@595 $generated@@597) $generated@@596))
 :pattern ( ($generated@@486 $generated@@595 $generated@@597))
))))
 :pattern ( ($generated@@139 $generated@@595 ($generated@@485 $generated@@596)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 Int) ) (!  (=> (= (type $generated@@599) ($generated@@276 $generated@@151)) (=> (and (<= 0 $generated@@600) (< $generated@@600 ($generated@@275 $generated@@599))) (< ($generated@@524 ($generated@@332 $generated@@136 ($generated@@486 $generated@@599 $generated@@600))) ($generated@@598 $generated@@599))))
 :pattern ( ($generated@@524 ($generated@@332 $generated@@136 ($generated@@486 $generated@@599 $generated@@600))))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (= (type $generated@@601) ($generated@@295 $generated@@151 $generated@@151)) (= (type $generated@@602) $generated@@67)) (= (type $generated@@603) $generated@@67)) ($generated@@139 $generated@@601 ($generated@@397 $generated@@602 $generated@@603))) (and (and ($generated@@139 ($generated@@293 $generated@@601) ($generated@@241 $generated@@602)) ($generated@@139 ($generated@@340 $generated@@601) ($generated@@241 $generated@@603))) ($generated@@139 ($generated@@371 $generated@@601) ($generated@@241 ($generated@@142 $generated@@602 $generated@@603)))))
 :pattern ( ($generated@@139 $generated@@601 ($generated@@397 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@604) ($generated@@313 $generated@@151 $generated@@151)) (= (type $generated@@605) $generated@@67)) (= (type $generated@@606) $generated@@67)) ($generated@@139 $generated@@604 ($generated@@405 $generated@@605 $generated@@606))) (and (and ($generated@@139 ($generated@@311 $generated@@604) ($generated@@246 $generated@@605)) ($generated@@139 ($generated@@351 $generated@@604) ($generated@@246 $generated@@606))) ($generated@@139 ($generated@@379 $generated@@604) ($generated@@246 ($generated@@142 $generated@@605 $generated@@606)))))
 :pattern ( ($generated@@139 $generated@@604 ($generated@@405 $generated@@605 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (= (type $generated@@607) $generated@@2) ($generated@@139 $generated@@607 $generated@@46))
 :pattern ( ($generated@@139 $generated@@607 $generated@@46))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@3) ($generated@@139 $generated@@608 $generated@@47))
 :pattern ( ($generated@@139 $generated@@608 $generated@@47))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (= (type $generated@@609) $generated@@4) ($generated@@139 $generated@@609 $generated@@44))
 :pattern ( ($generated@@139 $generated@@609 $generated@@44))
)))
(assert (forall (($generated@@610 T@U) ) (!  (=> (= (type $generated@@610) $generated@@437) ($generated@@139 $generated@@610 $generated@@45))
 :pattern ( ($generated@@139 $generated@@610 $generated@@45))
)))
(assert (forall (($generated@@611 T@U) ) (!  (=> (= (type $generated@@611) $generated@@151) ($generated@@139 $generated@@611 $generated@@48))
 :pattern ( ($generated@@139 $generated@@611 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@612 () T@U)
(declare-fun $generated@@613 () Int)
(declare-fun $generated@@614 () Int)
(declare-fun $generated@@615 () Int)
(declare-fun $generated@@616 () Int)
(declare-fun $generated@@617 () Int)
(declare-fun $generated@@618 () Int)
(declare-fun $generated@@619 () Int)
(declare-fun $generated@@620 () Int)
(declare-fun $generated@@621 () Int)
(declare-fun $generated@@622 () Int)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 () T@U)
(declare-fun $generated@@625 () T@U)
(declare-fun $generated@@626 (T@U) Bool)
(declare-fun $generated@@627 () Int)
(assert  (and (and (and (= (type $generated@@612) $generated@@136) (= (type $generated@@623) ($generated@@168 $generated@@80 $generated@@4))) (= (type $generated@@624) $generated@@80)) (= (type $generated@@625) ($generated@@79 $generated@@80 $generated@@81))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@628  (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> (and (= ($generated@@157 $generated@@612) ($generated@@251 11)) (= ($generated@@158 $generated@@612) ($generated@@251 10))) (= $generated@@613 ($generated@@251 0)))) (=> (=> (and (= ($generated@@157 $generated@@612) ($generated@@251 11)) (= ($generated@@158 $generated@@612) ($generated@@251 10))) (= $generated@@613 ($generated@@251 0))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> (and (= ($generated@@157 $generated@@612) ($generated@@251 11)) (not (= ($generated@@158 $generated@@612) 10))) (= $generated@@613 ($generated@@251 1)))) (=> (=> (and (= ($generated@@157 $generated@@612) ($generated@@251 11)) (not (= ($generated@@158 $generated@@612) 10))) (= $generated@@613 ($generated@@251 1))) (=> (= (ControlFlow 0 3) (- 0 2)) (or (or (= ($generated@@157 $generated@@612) ($generated@@251 11)) (= ($generated@@158 $generated@@612) ($generated@@251 11))) (= $generated@@613 ($generated@@251 3))))))))))
(let (($generated@@629  (=> (not (= $generated@@614 ($generated@@251 10))) (=> (and (= $generated@@615 $generated@@614) ($generated@@139 ($generated@@8 $generated@@615) $generated@@46)) (=> (and (and (= $generated@@616 $generated@@615) (= $generated@@617 ($generated@@251 1))) (and (= $generated@@613 $generated@@617) (= (ControlFlow 0 14) 3))) $generated@@628)))))
(let (($generated@@630  (=> (= $generated@@614 ($generated@@251 10)) (=> (and ($generated@@137 $generated@@612) ($generated@@137 $generated@@612)) (and (=> (= (ControlFlow 0 12) (- 0 13)) (not (= ($generated@@157 $generated@@612) 10))) (=> (not (= ($generated@@157 $generated@@612) 10)) (=> (= $generated@@618 ($generated@@251 0)) (=> (and (= $generated@@613 $generated@@618) (= (ControlFlow 0 12) 3)) $generated@@628))))))))
(let (($generated@@631  (=> (= $generated@@619 ($generated@@251 11)) (and (=> (= (ControlFlow 0 15) 12) $generated@@630) (=> (= (ControlFlow 0 15) 14) $generated@@629)))))
(let (($generated@@632  (=> (and (and (not (= $generated@@614 ($generated@@251 11))) (= $generated@@620 ($generated@@251 3))) (and (= $generated@@613 $generated@@620) (= (ControlFlow 0 9) 3))) $generated@@628)))
(let (($generated@@633  (=> (= $generated@@614 ($generated@@251 11)) (=> (and ($generated@@137 $generated@@612) ($generated@@137 $generated@@612)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (= ($generated@@158 $generated@@612) ($generated@@251 11))) (=> (= ($generated@@158 $generated@@612) ($generated@@251 11)) (=> (= $generated@@621 ($generated@@251 2)) (=> (and (= $generated@@613 $generated@@621) (= (ControlFlow 0 7) 3)) $generated@@628))))))))
(let (($generated@@634  (=> (= $generated@@619 ($generated@@251 10)) (and (=> (= (ControlFlow 0 10) 7) $generated@@633) (=> (= (ControlFlow 0 10) 9) $generated@@632)))))
(let (($generated@@635  (=> (and (and (not (= $generated@@619 ($generated@@251 10))) (= $generated@@622 ($generated@@251 3))) (and (= $generated@@613 $generated@@622) (= (ControlFlow 0 6) 3))) $generated@@628)))
(let (($generated@@636  (=> (not (= $generated@@619 ($generated@@251 11))) (and (=> (= (ControlFlow 0 11) 10) $generated@@634) (=> (= (ControlFlow 0 11) 6) $generated@@635)))))
(let (($generated@@637  (=> (= $generated@@612 ($generated@@232 $generated@@619 $generated@@614)) (and (=> (= (ControlFlow 0 16) 15) $generated@@631) (=> (= (ControlFlow 0 16) 11) $generated@@636)))))
(let (($generated@@638 true))
(let (($generated@@639  (=> (= $generated@@623 ($generated@@167 $generated@@624 $generated@@625 $generated@@60 false)) (and (=> (= (ControlFlow 0 17) 16) $generated@@637) (=> (= (ControlFlow 0 17) 1) $generated@@638)))))
(let (($generated@@640  (=> (and ($generated@@257 $generated@@625) ($generated@@626 $generated@@625)) (=> (and (and (and ($generated@@139 $generated@@612 $generated@@222) ($generated@@77 $generated@@612 $generated@@222 $generated@@625)) ($generated@@135 $generated@@612)) (and (= 1 $generated@@627) (= (ControlFlow 0 18) 17))) $generated@@639))))
$generated@@640))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@86 (T@U Bool T@U) T@U)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) Bool)
(declare-fun $generated@@98 (Int) T@U)
(declare-fun $generated@@99 (T@T T@T) T@T)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@102 (T@T) T@T)
(declare-fun $generated@@103 (T@T) T@T)
(declare-fun $generated@@104 (T@U T@U) T@U)
(declare-fun $generated@@105 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U) T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U) Int)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@164 (T@U) Int)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@182 (T@U T@U) Bool)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 (T@U T@U) T@U)
(declare-fun $generated@@191 (T@U T@U) Bool)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@194 () T@T)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@206 (T@U T@U T@U) T@U)
(declare-fun $generated@@207 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@208 (T@T T@T) T@T)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@T) T@T)
(declare-fun $generated@@211 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@263 (T@U) Bool)
(declare-fun $generated@@267 (T@U T@U) T@U)
(declare-fun $generated@@268 (T@U T@U) Bool)
(declare-fun $generated@@275 () T@U)
(declare-fun $generated@@278 (T@U T@U) Bool)
(declare-fun $generated@@279 (T@U) Bool)
(declare-fun $generated@@286 (T@U T@U) Bool)
(declare-fun $generated@@291 (T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@308 (Int) Int)
(declare-fun $generated@@310 (T@U) T@U)
(declare-fun $generated@@318 (T@U) Bool)
(declare-fun $generated@@321 (T@U) Bool)
(declare-fun $generated@@324 (T@U T@U) T@U)
(declare-fun $generated@@330 (T@U T@U T@U) Bool)
(declare-fun $generated@@353 (T@T) T@U)
(declare-fun $generated@@354 (T@U) Int)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@356 (T@T) T@T)
(declare-fun $generated@@363 (Int) T@U)
(declare-fun $generated@@367 (Int) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@377 (T@U) Int)
(declare-fun $generated@@378 (T@T) T@U)
(declare-fun $generated@@383 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@T T@T) T@U)
(declare-fun $generated@@388 (T@T T@T) T@T)
(declare-fun $generated@@389 (T@T) T@T)
(declare-fun $generated@@390 (T@T) T@T)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@405 (T@T T@T) T@U)
(declare-fun $generated@@406 (T@T T@T) T@T)
(declare-fun $generated@@407 (T@T) T@T)
(declare-fun $generated@@408 (T@T) T@T)
(declare-fun $generated@@425 (T@T T@U) T@U)
(declare-fun $generated@@429 () T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@447 (T@U) T@U)
(declare-fun $generated@@461 (T@U) Bool)
(declare-fun $generated@@463 (T@U) Bool)
(declare-fun $generated@@465 (T@U) Bool)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@485 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@503 (T@U T@U) T@U)
(declare-fun $generated@@511 (T@U T@U) T@U)
(declare-fun $generated@@523 (T@T) T@U)
(declare-fun $generated@@547 () T@T)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@596 (T@U Int) T@U)
(declare-fun $generated@@608 (T@U) Int)
(declare-fun $generated@@610 (T@U) T@U)
(declare-fun $generated@@614 (T@U) T@U)
(declare-fun $generated@@618 (T@U) T@U)
(declare-fun $generated@@622 (T@U) T@U)
(declare-fun $generated@@630 (T@U) T@U)
(declare-fun $generated@@635 (T@U) Int)
(declare-fun $generated@@650 (T@U) Int)
(declare-fun $generated@@748 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@78) 6) (= (type $generated@@44) $generated@@78)) (= (type $generated@@45) $generated@@78)) (= (type $generated@@46) $generated@@78)) (= (type $generated@@47) $generated@@78)) (= (type $generated@@48) $generated@@78)) (= ($generated@@1 $generated@@79) 7)) (= (type $generated@@49) $generated@@79)) (= (type $generated@@50) $generated@@79)) (= (type $generated@@51) $generated@@79)) (= (type $generated@@52) $generated@@79)) (= (type $generated@@53) $generated@@79)) (= (type $generated@@54) $generated@@79)) (= (type $generated@@55) $generated@@79)) (= (type $generated@@56) $generated@@79)) (= (type $generated@@57) $generated@@79)) (= (type $generated@@58) $generated@@79)) (= (type $generated@@59) $generated@@79)) (forall (($generated@@84 T@T) ) (= ($generated@@1 ($generated@@80 $generated@@84)) 8))) (forall (($generated@@85 T@T) ) (! (= ($generated@@81 ($generated@@80 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@80 $generated@@85))
))) (= (type $generated@@60) ($generated@@80 $generated@@4))) (= (type $generated@@61) $generated@@79)) (= ($generated@@1 $generated@@82) 9)) (= (type $generated@@62) $generated@@82)) (= (type $generated@@63) $generated@@79)) (= (type $generated@@64) $generated@@82)) (= (type $generated@@65) $generated@@79)) (= (type $generated@@66) $generated@@82)) (= (type $generated@@67) $generated@@82)) (= (type $generated@@68) $generated@@79)) (= (type $generated@@69) $generated@@82)) (= (type $generated@@70) $generated@@82)) (= (type $generated@@71) $generated@@79)) (= (type $generated@@72) $generated@@82)) (= ($generated@@1 $generated@@83) 10)) (= (type $generated@@73) $generated@@83)) (= (type $generated@@74) $generated@@83)) (= (type $generated@@75) $generated@@83)) (= (type $generated@@76) $generated@@83)) (= (type $generated@@77) $generated@@83)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@77)
)
(assert  (and (= ($generated@@1 $generated@@87) 11) (forall (($generated@@89 T@U) ($generated@@90 Bool) ($generated@@91 T@U) ) (! (= (type ($generated@@86 $generated@@89 $generated@@90 $generated@@91)) $generated@@87)
 :pattern ( ($generated@@86 $generated@@89 $generated@@90 $generated@@91))
))))
(assert (forall (($generated@@92 T@U) ($generated@@93 Bool) ($generated@@94 T@U) ) (!  (=> (and (= (type $generated@@92) $generated@@87) (= (type $generated@@94) $generated@@87)) (= ($generated@@88 ($generated@@86 $generated@@92 $generated@@93 $generated@@94)) $generated@@93))
 :pattern ( ($generated@@86 $generated@@92 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ) (! (= (type ($generated@@95 $generated@@96)) $generated@@79)
 :pattern ( ($generated@@95 $generated@@96))
)))
(assert (= ($generated@@95 $generated@@44) $generated@@49))
(assert (= ($generated@@95 $generated@@45) $generated@@50))
(assert (= ($generated@@95 $generated@@46) $generated@@51))
(assert (= ($generated@@95 $generated@@47) $generated@@52))
(assert (= ($generated@@95 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (= ($generated@@1 ($generated@@99 $generated@@108 $generated@@109)) 12)) (forall (($generated@@110 T@T) ($generated@@111 T@T) ) (! (= ($generated@@102 ($generated@@99 $generated@@110 $generated@@111)) $generated@@110)
 :pattern ( ($generated@@99 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (! (= ($generated@@103 ($generated@@99 $generated@@112 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@99 $generated@@112 $generated@@113))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@103 (type $generated@@114))))
(= (type ($generated@@104 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@104 $generated@@114 $generated@@115))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 (type $generated@@119)))
(let (($generated@@121 (type $generated@@118)))
(= (type ($generated@@105 $generated@@117 $generated@@118 $generated@@119)) ($generated@@99 $generated@@121 $generated@@120))))
 :pattern ( ($generated@@105 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@103 (type $generated@@122))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@104 ($generated@@105 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@104 ($generated@@105 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@104 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@104 ($generated@@105 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@104 $generated@@131 $generated@@133)))
 :weight 0
)))) (= ($generated@@1 $generated@@100) 13)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (let (($generated@@136 ($generated@@81 (type $generated@@135))))
(= (type ($generated@@106 $generated@@134 $generated@@135)) $generated@@136))
 :pattern ( ($generated@@106 $generated@@134 $generated@@135))
))) (= ($generated@@1 $generated@@101) 14)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= (type ($generated@@107 $generated@@137 $generated@@138 $generated@@139)) $generated@@101)
 :pattern ( ($generated@@107 $generated@@137 $generated@@138 $generated@@139))
))) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (let (($generated@@143 ($generated@@81 (type $generated@@141))))
 (=> (= (type $generated@@142) $generated@@143) (= ($generated@@106 ($generated@@107 $generated@@140 $generated@@141 $generated@@142) $generated@@141) $generated@@142)))
 :weight 0
))) (and (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@146 $generated@@147) (= ($generated@@106 ($generated@@107 $generated@@145 $generated@@146 $generated@@144) $generated@@147) ($generated@@106 $generated@@145 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or true (= ($generated@@106 ($generated@@107 $generated@@149 $generated@@150 $generated@@148) $generated@@151) ($generated@@106 $generated@@149 $generated@@151)))
 :weight 0
)))) (forall (($generated@@152 Int) ) (! (= (type ($generated@@98 $generated@@152)) $generated@@78)
 :pattern ( ($generated@@98 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (= (type $generated@@153) $generated@@2) (= (type $generated@@154) ($generated@@99 $generated@@100 $generated@@101))) ($generated@@97 $generated@@153 ($generated@@98 0) $generated@@154))
 :pattern ( ($generated@@97 $generated@@153 ($generated@@98 0) $generated@@154))
)))
(assert (= (type $generated@@155) $generated@@78))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@2) (= (type $generated@@157) ($generated@@99 $generated@@100 $generated@@101))) ($generated@@97 $generated@@156 $generated@@155 $generated@@157))
 :pattern ( ($generated@@97 $generated@@156 $generated@@155 $generated@@157))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@87) (= (type $generated@@162) $generated@@87)) (and ($generated@@159 $generated@@161) ($generated@@159 $generated@@162))) (= ($generated@@158 $generated@@161 $generated@@162) (= ($generated@@160 $generated@@161) ($generated@@160 $generated@@162))))
 :pattern ( ($generated@@158 $generated@@161 $generated@@162) ($generated@@159 $generated@@161))
 :pattern ( ($generated@@158 $generated@@161 $generated@@162) ($generated@@159 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and (= (type $generated@@165) $generated@@87) (= (type $generated@@166) $generated@@87)) (and ($generated@@163 $generated@@165) ($generated@@163 $generated@@166))) (= ($generated@@158 $generated@@165 $generated@@166) (= ($generated@@164 $generated@@165) ($generated@@164 $generated@@166))))
 :pattern ( ($generated@@158 $generated@@165 $generated@@166) ($generated@@163 $generated@@165))
 :pattern ( ($generated@@158 $generated@@165 $generated@@166) ($generated@@163 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (! (= (type ($generated@@167 $generated@@168)) $generated@@82)
 :pattern ( ($generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 Bool) ($generated@@171 T@U) ) (!  (=> (and (= (type $generated@@169) $generated@@87) (= (type $generated@@171) $generated@@87)) (= ($generated@@167 ($generated@@86 $generated@@169 $generated@@170 $generated@@171)) $generated@@72))
 :pattern ( ($generated@@86 $generated@@169 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@172 $generated@@173)) $generated@@87)
 :pattern ( ($generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 Bool) ($generated@@176 T@U) ) (!  (=> (and (= (type $generated@@174) $generated@@87) (= (type $generated@@176) $generated@@87)) (= ($generated@@172 ($generated@@86 $generated@@174 $generated@@175 $generated@@176)) $generated@@174))
 :pattern ( ($generated@@86 $generated@@174 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ) (! (= (type ($generated@@177 $generated@@178)) $generated@@87)
 :pattern ( ($generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 Bool) ($generated@@181 T@U) ) (!  (=> (and (= (type $generated@@179) $generated@@87) (= (type $generated@@181) $generated@@87)) (= ($generated@@177 ($generated@@86 $generated@@179 $generated@@180 $generated@@181)) $generated@@181))
 :pattern ( ($generated@@86 $generated@@179 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ) (!  (=> (= (type $generated@@183) $generated@@2) ($generated@@182 $generated@@183 ($generated@@98 0)))
 :pattern ( ($generated@@182 $generated@@183 ($generated@@98 0)))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= (type ($generated@@185 $generated@@186 $generated@@187)) $generated@@78)
 :pattern ( ($generated@@185 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and (and (= (type $generated@@188) $generated@@78) (= (type $generated@@189) $generated@@78)) (= (type $generated@@190) $generated@@87)) ($generated@@182 $generated@@190 ($generated@@185 $generated@@188 $generated@@189))) ($generated@@184 $generated@@190))
 :pattern ( ($generated@@184 $generated@@190) ($generated@@182 $generated@@190 ($generated@@185 $generated@@188 $generated@@189)))
)))
(assert  (and (and (= ($generated@@1 $generated@@194) 15) (forall (($generated@@195 T@U) ) (! (= (type ($generated@@192 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@192 $generated@@195))
))) (forall (($generated@@196 T@U) ) (! (= (type ($generated@@193 $generated@@196)) $generated@@194)
 :pattern ( ($generated@@193 $generated@@196))
))))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (and (= (type $generated@@197) $generated@@87) (= (type $generated@@198) $generated@@87)) true) (= ($generated@@191 $generated@@197 $generated@@198)  (and (= ($generated@@192 $generated@@197) ($generated@@192 $generated@@198)) (= ($generated@@193 $generated@@197) ($generated@@193 $generated@@198)))))
 :pattern ( ($generated@@191 $generated@@197 $generated@@198))
)))
(assert (= (type $generated@@199) $generated@@87))
(assert (= ($generated@@167 $generated@@199) $generated@@67))
(assert (= (type $generated@@200) $generated@@87))
(assert (= ($generated@@167 $generated@@200) $generated@@70))
(assert (forall (($generated@@203 T@U) ) (! (= (type ($generated@@201 $generated@@203)) $generated@@78)
 :pattern ( ($generated@@201 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (and (= (type $generated@@204) ($generated@@99 $generated@@194 $generated@@2)) (= (type $generated@@205) $generated@@78)) ($generated@@182 $generated@@204 ($generated@@201 $generated@@205))) ($generated@@202 $generated@@204))
 :pattern ( ($generated@@182 $generated@@204 ($generated@@201 $generated@@205)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@212 T@T) ($generated@@213 T@T) ) (= ($generated@@1 ($generated@@208 $generated@@212 $generated@@213)) 16)) (forall (($generated@@214 T@T) ($generated@@215 T@T) ) (! (= ($generated@@209 ($generated@@208 $generated@@214 $generated@@215)) $generated@@214)
 :pattern ( ($generated@@208 $generated@@214 $generated@@215))
))) (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (! (= ($generated@@210 ($generated@@208 $generated@@216 $generated@@217)) $generated@@217)
 :pattern ( ($generated@@208 $generated@@216 $generated@@217))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (let (($generated@@221 ($generated@@210 (type $generated@@218))))
(= (type ($generated@@206 $generated@@218 $generated@@219 $generated@@220)) $generated@@221))
 :pattern ( ($generated@@206 $generated@@218 $generated@@219 $generated@@220))
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (let (($generated@@226 (type $generated@@225)))
(let (($generated@@227 (type $generated@@223)))
(= (type ($generated@@211 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@208 $generated@@227 $generated@@226))))
 :pattern ( ($generated@@211 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@210 (type $generated@@228))))
 (=> (= (type $generated@@231) $generated@@232) (= ($generated@@206 ($generated@@211 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@229 $generated@@230) $generated@@231)))
 :weight 0
))) (and (and (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (or (= $generated@@235 $generated@@237) (= ($generated@@206 ($generated@@211 $generated@@234 $generated@@235 $generated@@236 $generated@@233) $generated@@237 $generated@@238) ($generated@@206 $generated@@234 $generated@@237 $generated@@238)))
 :weight 0
)) (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (or (= $generated@@242 $generated@@244) (= ($generated@@206 ($generated@@211 $generated@@240 $generated@@241 $generated@@242 $generated@@239) $generated@@243 $generated@@244) ($generated@@206 $generated@@240 $generated@@243 $generated@@244)))
 :weight 0
))) (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (or true (= ($generated@@206 ($generated@@211 $generated@@246 $generated@@247 $generated@@248 $generated@@245) $generated@@249 $generated@@250) ($generated@@206 $generated@@246 $generated@@249 $generated@@250)))
 :weight 0
)))) (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 Bool) ) (! (= (type ($generated@@207 $generated@@251 $generated@@252 $generated@@253 $generated@@254)) ($generated@@208 $generated@@100 $generated@@4))
 :pattern ( ($generated@@207 $generated@@251 $generated@@252 $generated@@253 $generated@@254))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 Bool) ($generated@@259 T@U) ($generated@@260 T@U) ) (! (let (($generated@@261 ($generated@@81 (type $generated@@260))))
 (=> (and (and (and (and (= (type $generated@@255) $generated@@100) (= (type $generated@@256) ($generated@@99 $generated@@100 $generated@@101))) (= (type $generated@@257) ($generated@@80 $generated@@4))) (= (type $generated@@259) $generated@@100)) (= (type $generated@@260) ($generated@@80 $generated@@261))) (= ($generated@@0 ($generated@@206 ($generated@@207 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))  (=> (and (not (= $generated@@259 $generated@@255)) ($generated@@0 ($generated@@106 ($generated@@104 $generated@@256 $generated@@259) $generated@@257))) $generated@@258))))
 :pattern ( ($generated@@206 ($generated@@207 $generated@@255 $generated@@256 $generated@@257 $generated@@258) $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@262 $generated@@264)) $generated@@78)
 :pattern ( ($generated@@262 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (= (type $generated@@265) $generated@@78) (= (type $generated@@266) ($generated@@99 $generated@@100 $generated@@101))) ($generated@@263 $generated@@266)) ($generated@@97 $generated@@199 ($generated@@262 $generated@@265) $generated@@266))
 :pattern ( ($generated@@97 $generated@@199 ($generated@@262 $generated@@265) $generated@@266))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (! (= (type ($generated@@267 $generated@@269 $generated@@270)) $generated@@87)
 :pattern ( ($generated@@267 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (and (= (type $generated@@271) $generated@@78) (= (type $generated@@272) $generated@@78)) (= (type $generated@@273) $generated@@194)) (= (type $generated@@274) $generated@@194)) (= ($generated@@182 ($generated@@267 $generated@@273 $generated@@274) ($generated@@185 $generated@@271 $generated@@272))  (and ($generated@@268 $generated@@273 $generated@@271) ($generated@@268 $generated@@274 $generated@@272))))
 :pattern ( ($generated@@182 ($generated@@267 $generated@@273 $generated@@274) ($generated@@185 $generated@@271 $generated@@272)))
)))
(assert (= (type $generated@@275) $generated@@78))
(assert ($generated@@182 $generated@@200 $generated@@275))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) ($generated@@99 $generated@@100 $generated@@101)) ($generated@@263 $generated@@276)) ($generated@@97 $generated@@200 $generated@@275 $generated@@276))
 :pattern ( ($generated@@97 $generated@@200 $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@78) ($generated@@182 $generated@@199 ($generated@@262 $generated@@277)))
 :pattern ( ($generated@@182 $generated@@199 ($generated@@262 $generated@@277)))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (= (type $generated@@280) $generated@@87) (= (type $generated@@281) $generated@@87)) (and ($generated@@279 $generated@@280) ($generated@@279 $generated@@281))) (= ($generated@@278 $generated@@280 $generated@@281)  (and (and ($generated@@278 ($generated@@172 $generated@@280) ($generated@@172 $generated@@281)) (= ($generated@@88 $generated@@280) ($generated@@88 $generated@@281))) ($generated@@278 ($generated@@177 $generated@@280) ($generated@@177 $generated@@281)))))
 :pattern ( ($generated@@278 $generated@@280 $generated@@281) ($generated@@279 $generated@@280))
 :pattern ( ($generated@@278 $generated@@280 $generated@@281) ($generated@@279 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@87) (= (type $generated@@283) $generated@@87)) (= ($generated@@191 $generated@@282 $generated@@283) (= $generated@@282 $generated@@283)))
 :pattern ( ($generated@@191 $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@87) (= (type $generated@@285) $generated@@87)) (= ($generated@@158 $generated@@284 $generated@@285) (= $generated@@284 $generated@@285)))
 :pattern ( ($generated@@158 $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@87) (= (type $generated@@288) $generated@@87)) (= ($generated@@286 $generated@@287 $generated@@288) (= $generated@@287 $generated@@288)))
 :pattern ( ($generated@@286 $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@87) (= (type $generated@@290) $generated@@87)) (= ($generated@@278 $generated@@289 $generated@@290) (= $generated@@289 $generated@@290)))
 :pattern ( ($generated@@278 $generated@@289 $generated@@290))
)))
(assert  (and (forall (($generated@@294 T@U) ) (! (= (type ($generated@@292 $generated@@294)) $generated@@194)
 :pattern ( ($generated@@292 $generated@@294))
)) (forall (($generated@@295 T@U) ) (! (= (type ($generated@@293 $generated@@295)) $generated@@87)
 :pattern ( ($generated@@293 $generated@@295))
))))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (and (= (type $generated@@296) $generated@@87) (= (type $generated@@297) $generated@@87)) (and ($generated@@291 $generated@@296) ($generated@@291 $generated@@297))) (= ($generated@@286 $generated@@296 $generated@@297)  (and (= ($generated@@292 $generated@@296) ($generated@@292 $generated@@297)) ($generated@@286 ($generated@@293 $generated@@296) ($generated@@293 $generated@@297)))))
 :pattern ( ($generated@@286 $generated@@296 $generated@@297) ($generated@@291 $generated@@296))
 :pattern ( ($generated@@286 $generated@@296 $generated@@297) ($generated@@291 $generated@@297))
)))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@78)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) ($generated@@99 $generated@@194 $generated@@4)) (= (type $generated@@301) $generated@@78)) (= ($generated@@182 $generated@@300 ($generated@@298 $generated@@301)) (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@194) ($generated@@0 ($generated@@104 $generated@@300 $generated@@302))) ($generated@@268 $generated@@302 $generated@@301))
 :pattern ( ($generated@@104 $generated@@300 $generated@@302))
))))
 :pattern ( ($generated@@182 $generated@@300 ($generated@@298 $generated@@301)))
)))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@78)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and (= (type $generated@@305) ($generated@@99 $generated@@194 $generated@@4)) (= (type $generated@@306) $generated@@78)) (= ($generated@@182 $generated@@305 ($generated@@303 $generated@@306)) (forall (($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@194) ($generated@@0 ($generated@@104 $generated@@305 $generated@@307))) ($generated@@268 $generated@@307 $generated@@306))
 :pattern ( ($generated@@104 $generated@@305 $generated@@307))
))))
 :pattern ( ($generated@@182 $generated@@305 ($generated@@303 $generated@@306)))
)))
(assert (forall (($generated@@309 Int) ) (! (= ($generated@@308 $generated@@309) $generated@@309)
 :pattern ( ($generated@@308 $generated@@309))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 (type $generated@@311)))
(= (type ($generated@@310 $generated@@311)) $generated@@312))
 :pattern ( ($generated@@310 $generated@@311))
)))
(assert (forall (($generated@@313 T@U) ) (! (= ($generated@@310 $generated@@313) $generated@@313)
 :pattern ( ($generated@@310 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 Bool) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (= (type $generated@@314) $generated@@87) (= (type $generated@@316) $generated@@87)) (= (type $generated@@317) ($generated@@99 $generated@@100 $generated@@101))) ($generated@@263 $generated@@317)) (= ($generated@@97 ($generated@@86 $generated@@314 $generated@@315 $generated@@316) $generated@@275 $generated@@317)  (and (and ($generated@@97 $generated@@314 $generated@@275 $generated@@317) ($generated@@97 ($generated@@11 $generated@@315) $generated@@44 $generated@@317)) ($generated@@97 $generated@@316 $generated@@275 $generated@@317))))
 :pattern ( ($generated@@97 ($generated@@86 $generated@@314 $generated@@315 $generated@@316) $generated@@275 $generated@@317))
)))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and (and (= (type $generated@@319) $generated@@87) (= (type $generated@@320) $generated@@87)) (and ($generated@@318 $generated@@319) ($generated@@318 $generated@@320))) (= ($generated@@286 $generated@@319 $generated@@320) true))
 :pattern ( ($generated@@286 $generated@@319 $generated@@320) ($generated@@318 $generated@@319))
 :pattern ( ($generated@@286 $generated@@319 $generated@@320) ($generated@@318 $generated@@320))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (= (type $generated@@322) $generated@@87) (= (type $generated@@323) $generated@@87)) (and ($generated@@321 $generated@@322) ($generated@@321 $generated@@323))) (= ($generated@@278 $generated@@322 $generated@@323) true))
 :pattern ( ($generated@@278 $generated@@322 $generated@@323) ($generated@@321 $generated@@322))
 :pattern ( ($generated@@278 $generated@@322 $generated@@323) ($generated@@321 $generated@@323))
)))
(assert (forall (($generated@@325 T@U) ($generated@@326 T@U) ) (! (= (type ($generated@@324 $generated@@325 $generated@@326)) $generated@@87)
 :pattern ( ($generated@@324 $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (and (and (= (type $generated@@327) $generated@@78) (= (type $generated@@328) $generated@@194)) (= (type $generated@@329) $generated@@87)) (= ($generated@@182 ($generated@@324 $generated@@328 $generated@@329) ($generated@@262 $generated@@327))  (and ($generated@@268 $generated@@328 $generated@@327) ($generated@@182 $generated@@329 ($generated@@262 $generated@@327)))))
 :pattern ( ($generated@@182 ($generated@@324 $generated@@328 $generated@@329) ($generated@@262 $generated@@327)))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@331) $generated@@78) (= (type $generated@@332) $generated@@78)) (= (type $generated@@333) $generated@@194)) (= (type $generated@@334) $generated@@194)) (= (type $generated@@335) ($generated@@99 $generated@@100 $generated@@101))) ($generated@@263 $generated@@335)) (= ($generated@@97 ($generated@@267 $generated@@333 $generated@@334) ($generated@@185 $generated@@331 $generated@@332) $generated@@335)  (and ($generated@@330 $generated@@333 $generated@@331 $generated@@335) ($generated@@330 $generated@@334 $generated@@332 $generated@@335))))
 :pattern ( ($generated@@97 ($generated@@267 $generated@@333 $generated@@334) ($generated@@185 $generated@@331 $generated@@332) $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ) (!  (=> (= (type $generated@@336) $generated@@87) (= ($generated@@184 $generated@@336) (= ($generated@@167 $generated@@336) $generated@@62)))
 :pattern ( ($generated@@184 $generated@@336))
)))
(assert (forall (($generated@@337 T@U) ) (!  (=> (= (type $generated@@337) $generated@@87) (= ($generated@@159 $generated@@337) (= ($generated@@167 $generated@@337) $generated@@64)))
 :pattern ( ($generated@@159 $generated@@337))
)))
(assert (forall (($generated@@338 T@U) ) (!  (=> (= (type $generated@@338) $generated@@87) (= ($generated@@163 $generated@@338) (= ($generated@@167 $generated@@338) $generated@@66)))
 :pattern ( ($generated@@163 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (!  (=> (= (type $generated@@339) $generated@@87) (= ($generated@@318 $generated@@339) (= ($generated@@167 $generated@@339) $generated@@67)))
 :pattern ( ($generated@@318 $generated@@339))
)))
(assert (forall (($generated@@340 T@U) ) (!  (=> (= (type $generated@@340) $generated@@87) (= ($generated@@291 $generated@@340) (= ($generated@@167 $generated@@340) $generated@@69)))
 :pattern ( ($generated@@291 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (= (type $generated@@341) $generated@@87) (= ($generated@@321 $generated@@341) (= ($generated@@167 $generated@@341) $generated@@70)))
 :pattern ( ($generated@@321 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ) (!  (=> (= (type $generated@@342) $generated@@87) (= ($generated@@279 $generated@@342) (= ($generated@@167 $generated@@342) $generated@@72)))
 :pattern ( ($generated@@279 $generated@@342))
)))
(assert (forall (($generated@@343 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@87) ($generated@@279 $generated@@343)) (exists (($generated@@344 T@U) ($generated@@345 Bool) ($generated@@346 T@U) ) (!  (and (and (= (type $generated@@344) $generated@@87) (= (type $generated@@346) $generated@@87)) (= $generated@@343 ($generated@@86 $generated@@344 $generated@@345 $generated@@346)))
 :no-pattern (type $generated@@344)
 :no-pattern (type $generated@@346)
 :no-pattern ($generated $generated@@344)
 :no-pattern ($generated@@0 $generated@@344)
 :no-pattern ($generated $generated@@346)
 :no-pattern ($generated@@0 $generated@@346)
)))
 :pattern ( ($generated@@279 $generated@@343))
)))
(assert (forall (($generated@@347 T@U) ) (!  (=> (and (= (type $generated@@347) $generated@@87) ($generated@@184 $generated@@347)) (exists (($generated@@348 T@U) ($generated@@349 T@U) ) (!  (and (and (= (type $generated@@348) $generated@@194) (= (type $generated@@349) $generated@@194)) (= $generated@@347 ($generated@@267 $generated@@348 $generated@@349)))
 :no-pattern (type $generated@@348)
 :no-pattern (type $generated@@349)
 :no-pattern ($generated $generated@@348)
 :no-pattern ($generated@@0 $generated@@348)
 :no-pattern ($generated $generated@@349)
 :no-pattern ($generated@@0 $generated@@349)
)))
 :pattern ( ($generated@@184 $generated@@347))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@87) ($generated@@291 $generated@@350)) (exists (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (and (and (= (type $generated@@351) $generated@@194) (= (type $generated@@352) $generated@@87)) (= $generated@@350 ($generated@@324 $generated@@351 $generated@@352)))
 :no-pattern (type $generated@@351)
 :no-pattern (type $generated@@352)
 :no-pattern ($generated $generated@@351)
 :no-pattern ($generated@@0 $generated@@351)
 :no-pattern ($generated $generated@@352)
 :no-pattern ($generated@@0 $generated@@352)
)))
 :pattern ( ($generated@@291 $generated@@350))
)))
(assert  (and (and (forall (($generated@@357 T@T) ) (= ($generated@@1 ($generated@@355 $generated@@357)) 17)) (forall (($generated@@358 T@T) ) (! (= ($generated@@356 ($generated@@355 $generated@@358)) $generated@@358)
 :pattern ( ($generated@@355 $generated@@358))
))) (forall (($generated@@359 T@T) ) (! (= (type ($generated@@353 $generated@@359)) ($generated@@355 $generated@@359))
 :pattern ( ($generated@@353 $generated@@359))
))))
(assert (forall (($generated@@360 T@T) ) (! (= ($generated@@354 ($generated@@353 $generated@@360)) 0)
 :pattern ( ($generated@@353 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@87) ($generated@@318 $generated@@361)) (= $generated@@361 $generated@@199))
 :pattern ( ($generated@@318 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@87) ($generated@@321 $generated@@362)) (= $generated@@362 $generated@@200))
 :pattern ( ($generated@@321 $generated@@362))
)))
(assert (forall (($generated@@364 Int) ) (! (= (type ($generated@@363 $generated@@364)) $generated@@87)
 :pattern ( ($generated@@363 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@87) ($generated@@159 $generated@@365)) (exists (($generated@@366 Int) ) (= $generated@@365 ($generated@@363 $generated@@366))))
 :pattern ( ($generated@@159 $generated@@365))
)))
(assert (forall (($generated@@368 Int) ) (! (= (type ($generated@@367 $generated@@368)) $generated@@87)
 :pattern ( ($generated@@367 $generated@@368))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (and (= (type $generated@@369) $generated@@87) ($generated@@163 $generated@@369)) (exists (($generated@@370 Int) ) (= $generated@@369 ($generated@@367 $generated@@370))))
 :pattern ( ($generated@@163 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@2) (= ($generated@@182 $generated@@371 $generated@@155) (<= ($generated@@308 0) ($generated $generated@@371))))
 :pattern ( ($generated@@182 $generated@@371 $generated@@155))
)))
(assert (forall (($generated@@373 T@U) ) (! (= (type ($generated@@372 $generated@@373)) $generated@@194)
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@374 T@U) ($generated@@375 T@U) ($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@78) (= (type $generated@@376) ($generated@@99 $generated@@100 $generated@@101))) (= ($generated@@330 ($generated@@372 $generated@@374) $generated@@375 $generated@@376) ($generated@@97 $generated@@374 $generated@@375 $generated@@376)))
 :pattern ( ($generated@@330 ($generated@@372 $generated@@374) $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@379 T@T) ) (! (= (type ($generated@@378 $generated@@379)) ($generated@@99 $generated@@379 $generated@@2))
 :pattern ( ($generated@@378 $generated@@379))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@102 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@99 $generated@@381 $generated@@2)) (and (= (= ($generated@@377 $generated@@380) 0) (= $generated@@380 ($generated@@378 $generated@@381))) (=> (not (= ($generated@@377 $generated@@380) 0)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@381) (< 0 ($generated ($generated@@104 $generated@@380 $generated@@382))))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@377 $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ) (! (= (type ($generated@@383 $generated@@384)) $generated@@83)
 :pattern ( ($generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ) (!  (=> (= (type $generated@@385) $generated@@78) (and (= ($generated@@95 ($generated@@262 $generated@@385)) $generated@@68) (= ($generated@@383 ($generated@@262 $generated@@385)) $generated@@76)))
 :pattern ( ($generated@@262 $generated@@385))
)))
(assert  (and (and (and (and (forall (($generated@@391 T@T) ($generated@@392 T@T) ) (= ($generated@@1 ($generated@@388 $generated@@391 $generated@@392)) 18)) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= ($generated@@389 ($generated@@388 $generated@@393 $generated@@394)) $generated@@393)
 :pattern ( ($generated@@388 $generated@@393 $generated@@394))
))) (forall (($generated@@395 T@T) ($generated@@396 T@T) ) (! (= ($generated@@390 ($generated@@388 $generated@@395 $generated@@396)) $generated@@396)
 :pattern ( ($generated@@388 $generated@@395 $generated@@396))
))) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@389 (type $generated@@397))))
(= (type ($generated@@386 $generated@@397)) ($generated@@99 $generated@@398 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@397))
))) (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (! (= (type ($generated@@387 $generated@@399 $generated@@400)) ($generated@@388 $generated@@399 $generated@@400))
 :pattern ( ($generated@@387 $generated@@399 $generated@@400))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@T) ) (! (let (($generated@@403 (type $generated@@401)))
 (not ($generated@@0 ($generated@@104 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401))))
 :pattern ( (let (($generated@@403 (type $generated@@401)))
($generated@@104 ($generated@@386 ($generated@@387 $generated@@403 $generated@@402)) $generated@@401)))
)))
(assert  (and (and (and (and (forall (($generated@@409 T@T) ($generated@@410 T@T) ) (= ($generated@@1 ($generated@@406 $generated@@409 $generated@@410)) 19)) (forall (($generated@@411 T@T) ($generated@@412 T@T) ) (! (= ($generated@@407 ($generated@@406 $generated@@411 $generated@@412)) $generated@@411)
 :pattern ( ($generated@@406 $generated@@411 $generated@@412))
))) (forall (($generated@@413 T@T) ($generated@@414 T@T) ) (! (= ($generated@@408 ($generated@@406 $generated@@413 $generated@@414)) $generated@@414)
 :pattern ( ($generated@@406 $generated@@413 $generated@@414))
))) (forall (($generated@@415 T@U) ) (! (let (($generated@@416 ($generated@@407 (type $generated@@415))))
(= (type ($generated@@404 $generated@@415)) ($generated@@99 $generated@@416 $generated@@4)))
 :pattern ( ($generated@@404 $generated@@415))
))) (forall (($generated@@417 T@T) ($generated@@418 T@T) ) (! (= (type ($generated@@405 $generated@@417 $generated@@418)) ($generated@@406 $generated@@417 $generated@@418))
 :pattern ( ($generated@@405 $generated@@417 $generated@@418))
))))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@T) ) (! (let (($generated@@421 (type $generated@@419)))
 (not ($generated@@0 ($generated@@104 ($generated@@404 ($generated@@405 $generated@@421 $generated@@420)) $generated@@419))))
 :pattern ( (let (($generated@@421 (type $generated@@419)))
($generated@@104 ($generated@@404 ($generated@@405 $generated@@421 $generated@@420)) $generated@@419)))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@102 (type $generated@@422))))
 (=> (= (type $generated@@422) ($generated@@99 $generated@@423 $generated@@2)) (= ($generated@@202 $generated@@422) (forall (($generated@@424 T@U) ) (!  (=> (= (type $generated@@424) $generated@@423) (and (<= 0 ($generated ($generated@@104 $generated@@422 $generated@@424))) (<= ($generated ($generated@@104 $generated@@422 $generated@@424)) ($generated@@377 $generated@@422))))
 :pattern ( ($generated@@104 $generated@@422 $generated@@424))
)))))
 :pattern ( ($generated@@202 $generated@@422))
)))
(assert (forall (($generated@@426 T@T) ($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@426 $generated@@427)) $generated@@426)
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@194) ($generated@@268 $generated@@428 $generated@@155)) (and (= ($generated@@372 ($generated@@425 $generated@@2 $generated@@428)) $generated@@428) ($generated@@182 ($generated@@425 $generated@@2 $generated@@428) $generated@@155)))
 :pattern ( ($generated@@268 $generated@@428 $generated@@155))
)))
(assert (= (type $generated@@429) $generated@@78))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@194) ($generated@@268 $generated@@430 $generated@@429)) (and (= ($generated@@372 ($generated@@425 $generated@@87 $generated@@430)) $generated@@430) ($generated@@182 ($generated@@425 $generated@@87 $generated@@430) $generated@@429)))
 :pattern ( ($generated@@268 $generated@@430 $generated@@429))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@194) ($generated@@268 $generated@@431 $generated@@275)) (and (= ($generated@@372 ($generated@@425 $generated@@87 $generated@@431)) $generated@@431) ($generated@@182 ($generated@@425 $generated@@87 $generated@@431) $generated@@275)))
 :pattern ( ($generated@@268 $generated@@431 $generated@@275))
)))
(assert (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@390 (type $generated@@432))))
(let (($generated@@434 ($generated@@389 (type $generated@@432))))
 (=> (= (type $generated@@432) ($generated@@388 $generated@@434 $generated@@433)) (or (= $generated@@432 ($generated@@387 $generated@@434 $generated@@433)) (exists (($generated@@435 T@U) ) (!  (and (= (type $generated@@435) $generated@@434) ($generated@@0 ($generated@@104 ($generated@@386 $generated@@432) $generated@@435)))
 :no-pattern (type $generated@@435)
 :no-pattern ($generated $generated@@435)
 :no-pattern ($generated@@0 $generated@@435)
))))))
 :pattern ( ($generated@@386 $generated@@432))
)))
(assert (forall (($generated@@437 T@U) ) (! (let (($generated@@438 ($generated@@390 (type $generated@@437))))
(= (type ($generated@@436 $generated@@437)) ($generated@@99 $generated@@438 $generated@@4)))
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@390 (type $generated@@439))))
(let (($generated@@441 ($generated@@389 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@388 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@387 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ) (!  (and (= (type $generated@@442) $generated@@440) ($generated@@0 ($generated@@104 ($generated@@436 $generated@@439) $generated@@442)))
 :no-pattern (type $generated@@442)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
))))))
 :pattern ( ($generated@@436 $generated@@439))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@408 (type $generated@@443))))
(let (($generated@@445 ($generated@@407 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@406 $generated@@445 $generated@@444)) (or (= $generated@@443 ($generated@@405 $generated@@445 $generated@@444)) (exists (($generated@@446 T@U) ) (!  (and (= (type $generated@@446) $generated@@445) ($generated@@0 ($generated@@104 ($generated@@404 $generated@@443) $generated@@446)))
 :no-pattern (type $generated@@446)
 :no-pattern ($generated $generated@@446)
 :no-pattern ($generated@@0 $generated@@446)
))))))
 :pattern ( ($generated@@404 $generated@@443))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@408 (type $generated@@448))))
(= (type ($generated@@447 $generated@@448)) ($generated@@99 $generated@@449 $generated@@4)))
 :pattern ( ($generated@@447 $generated@@448))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@408 (type $generated@@450))))
(let (($generated@@452 ($generated@@407 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@406 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@405 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ) (!  (and (= (type $generated@@453) $generated@@451) ($generated@@0 ($generated@@104 ($generated@@447 $generated@@450) $generated@@453)))
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@447 $generated@@450))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) ($generated@@99 $generated@@194 $generated@@2)) (= (type $generated@@455) $generated@@78)) (= ($generated@@182 $generated@@454 ($generated@@201 $generated@@455)) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@194) (< 0 ($generated ($generated@@104 $generated@@454 $generated@@456)))) ($generated@@268 $generated@@456 $generated@@455))
 :pattern ( ($generated@@104 $generated@@454 $generated@@456))
))))
 :pattern ( ($generated@@182 $generated@@454 ($generated@@201 $generated@@455)))
)))
(assert (forall (($generated@@457 Int) ($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) ($generated@@99 $generated@@100 $generated@@101)) ($generated@@263 $generated@@458)) (= ($generated@@97 ($generated@@363 $generated@@457) $generated@@429 $generated@@458) ($generated@@97 ($generated@@8 $generated@@457) $generated@@46 $generated@@458)))
 :pattern ( ($generated@@97 ($generated@@363 $generated@@457) $generated@@429 $generated@@458))
)))
(assert (forall (($generated@@459 Int) ($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) ($generated@@99 $generated@@100 $generated@@101)) ($generated@@263 $generated@@460)) (= ($generated@@97 ($generated@@367 $generated@@459) $generated@@429 $generated@@460) ($generated@@97 ($generated@@8 $generated@@459) $generated@@46 $generated@@460)))
 :pattern ( ($generated@@97 ($generated@@367 $generated@@459) $generated@@429 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@87) ($generated@@461 $generated@@462)) (or ($generated@@159 $generated@@462) ($generated@@163 $generated@@462)))
 :pattern ( ($generated@@461 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@87) ($generated@@463 $generated@@464)) (or ($generated@@318 $generated@@464) ($generated@@291 $generated@@464)))
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@87) ($generated@@465 $generated@@466)) (or ($generated@@321 $generated@@466) ($generated@@279 $generated@@466)))
 :pattern ( ($generated@@465 $generated@@466))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (= (type $generated@@467) ($generated@@99 $generated@@194 $generated@@4)) (= (type $generated@@468) $generated@@78)) (= (type $generated@@469) ($generated@@99 $generated@@100 $generated@@101))) (= ($generated@@97 $generated@@467 ($generated@@298 $generated@@468) $generated@@469) (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@194) ($generated@@0 ($generated@@104 $generated@@467 $generated@@470))) ($generated@@330 $generated@@470 $generated@@468 $generated@@469))
 :pattern ( ($generated@@104 $generated@@467 $generated@@470))
))))
 :pattern ( ($generated@@97 $generated@@467 ($generated@@298 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (and (= (type $generated@@471) ($generated@@99 $generated@@194 $generated@@4)) (= (type $generated@@472) $generated@@78)) (= (type $generated@@473) ($generated@@99 $generated@@100 $generated@@101))) (= ($generated@@97 $generated@@471 ($generated@@303 $generated@@472) $generated@@473) (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@194) ($generated@@0 ($generated@@104 $generated@@471 $generated@@474))) ($generated@@330 $generated@@474 $generated@@472 $generated@@473))
 :pattern ( ($generated@@104 $generated@@471 $generated@@474))
))))
 :pattern ( ($generated@@97 $generated@@471 ($generated@@303 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 (type $generated@@475)))
(= ($generated ($generated@@104 ($generated@@378 $generated@@476) $generated@@475)) 0))
 :pattern ( (let (($generated@@476 (type $generated@@475)))
($generated@@104 ($generated@@378 $generated@@476) $generated@@475)))
)))
(assert  (and (forall (($generated@@479 T@U) ) (! (= (type ($generated@@477 $generated@@479)) ($generated@@99 $generated@@194 $generated@@4))
 :pattern ( ($generated@@477 $generated@@479))
)) (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@390 (type $generated@@480))))
(let (($generated@@482 ($generated@@389 (type $generated@@480))))
(= (type ($generated@@478 $generated@@480)) ($generated@@99 $generated@@482 $generated@@481))))
 :pattern ( ($generated@@478 $generated@@480))
))))
(assert (forall (($generated@@483 T@U) ($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@483) ($generated@@388 $generated@@194 $generated@@194)) (= (type $generated@@484) $generated@@194)) (= ($generated@@0 ($generated@@104 ($generated@@477 $generated@@483) $generated@@484))  (and ($generated@@0 ($generated@@104 ($generated@@386 $generated@@483) ($generated@@192 ($generated@@425 $generated@@87 $generated@@484)))) (= ($generated@@104 ($generated@@478 $generated@@483) ($generated@@192 ($generated@@425 $generated@@87 $generated@@484))) ($generated@@193 ($generated@@425 $generated@@87 $generated@@484))))))
 :pattern ( ($generated@@104 ($generated@@477 $generated@@483) $generated@@484))
)))
(assert  (and (forall (($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@487)) ($generated@@99 $generated@@194 $generated@@4))
 :pattern ( ($generated@@485 $generated@@487))
)) (forall (($generated@@488 T@U) ) (! (let (($generated@@489 ($generated@@408 (type $generated@@488))))
(let (($generated@@490 ($generated@@407 (type $generated@@488))))
(= (type ($generated@@486 $generated@@488)) ($generated@@99 $generated@@490 $generated@@489))))
 :pattern ( ($generated@@486 $generated@@488))
))))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) ($generated@@406 $generated@@194 $generated@@194)) (= (type $generated@@492) $generated@@194)) (= ($generated@@0 ($generated@@104 ($generated@@485 $generated@@491) $generated@@492))  (and ($generated@@0 ($generated@@104 ($generated@@404 $generated@@491) ($generated@@192 ($generated@@425 $generated@@87 $generated@@492)))) (= ($generated@@104 ($generated@@486 $generated@@491) ($generated@@192 ($generated@@425 $generated@@87 $generated@@492))) ($generated@@193 ($generated@@425 $generated@@87 $generated@@492))))))
 :pattern ( ($generated@@104 ($generated@@485 $generated@@491) $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (! (let (($generated@@495 (type $generated@@494)))
(let (($generated@@496 ($generated@@389 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@388 $generated@@496 $generated@@495)) (= ($generated@@0 ($generated@@104 ($generated@@436 $generated@@493) $generated@@494)) (exists (($generated@@497 T@U) ) (!  (and (= (type $generated@@497) $generated@@496) (and ($generated@@0 ($generated@@104 ($generated@@386 $generated@@493) $generated@@497)) (= $generated@@494 ($generated@@104 ($generated@@478 $generated@@493) $generated@@497))))
 :pattern ( ($generated@@104 ($generated@@386 $generated@@493) $generated@@497))
 :pattern ( ($generated@@104 ($generated@@478 $generated@@493) $generated@@497))
))))))
 :pattern ( ($generated@@104 ($generated@@436 $generated@@493) $generated@@494))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (! (let (($generated@@500 (type $generated@@499)))
(let (($generated@@501 ($generated@@407 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@406 $generated@@501 $generated@@500)) (= ($generated@@0 ($generated@@104 ($generated@@447 $generated@@498) $generated@@499)) (exists (($generated@@502 T@U) ) (!  (and (= (type $generated@@502) $generated@@501) (and ($generated@@0 ($generated@@104 ($generated@@404 $generated@@498) $generated@@502)) (= $generated@@499 ($generated@@104 ($generated@@486 $generated@@498) $generated@@502))))
 :pattern ( ($generated@@104 ($generated@@404 $generated@@498) $generated@@502))
 :pattern ( ($generated@@104 ($generated@@486 $generated@@498) $generated@@502))
))))))
 :pattern ( ($generated@@104 ($generated@@447 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (! (= (type ($generated@@503 $generated@@504 $generated@@505)) $generated@@78)
 :pattern ( ($generated@@503 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) ($generated@@388 $generated@@194 $generated@@194)) (= (type $generated@@507) $generated@@78)) (= (type $generated@@508) $generated@@78)) (= (type $generated@@509) ($generated@@99 $generated@@100 $generated@@101))) (= ($generated@@97 $generated@@506 ($generated@@503 $generated@@507 $generated@@508) $generated@@509) (forall (($generated@@510 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@194) ($generated@@0 ($generated@@104 ($generated@@386 $generated@@506) $generated@@510))) (and ($generated@@330 ($generated@@104 ($generated@@478 $generated@@506) $generated@@510) $generated@@508 $generated@@509) ($generated@@330 $generated@@510 $generated@@507 $generated@@509)))
 :pattern ( ($generated@@104 ($generated@@478 $generated@@506) $generated@@510))
 :pattern ( ($generated@@104 ($generated@@386 $generated@@506) $generated@@510))
))))
 :pattern ( ($generated@@97 $generated@@506 ($generated@@503 $generated@@507 $generated@@508) $generated@@509))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (! (= (type ($generated@@511 $generated@@512 $generated@@513)) $generated@@78)
 :pattern ( ($generated@@511 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (and (and (= (type $generated@@514) ($generated@@406 $generated@@194 $generated@@194)) (= (type $generated@@515) $generated@@78)) (= (type $generated@@516) $generated@@78)) (= (type $generated@@517) ($generated@@99 $generated@@100 $generated@@101))) (= ($generated@@97 $generated@@514 ($generated@@511 $generated@@515 $generated@@516) $generated@@517) (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@194) ($generated@@0 ($generated@@104 ($generated@@404 $generated@@514) $generated@@518))) (and ($generated@@330 ($generated@@104 ($generated@@486 $generated@@514) $generated@@518) $generated@@516 $generated@@517) ($generated@@330 $generated@@518 $generated@@515 $generated@@517)))
 :pattern ( ($generated@@104 ($generated@@486 $generated@@514) $generated@@518))
 :pattern ( ($generated@@104 ($generated@@404 $generated@@514) $generated@@518))
))))
 :pattern ( ($generated@@97 $generated@@514 ($generated@@511 $generated@@515 $generated@@516) $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) $generated@@78) (= (type $generated@@520) $generated@@87)) ($generated@@182 $generated@@520 ($generated@@262 $generated@@519))) (or ($generated@@318 $generated@@520) ($generated@@291 $generated@@520)))
 :pattern ( ($generated@@291 $generated@@520) ($generated@@182 $generated@@520 ($generated@@262 $generated@@519)))
 :pattern ( ($generated@@318 $generated@@520) ($generated@@182 $generated@@520 ($generated@@262 $generated@@519)))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@87) ($generated@@182 $generated@@521 $generated@@429)) (or ($generated@@159 $generated@@521) ($generated@@163 $generated@@521)))
 :pattern ( ($generated@@163 $generated@@521) ($generated@@182 $generated@@521 $generated@@429))
 :pattern ( ($generated@@159 $generated@@521) ($generated@@182 $generated@@521 $generated@@429))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@87) ($generated@@182 $generated@@522 $generated@@275)) (or ($generated@@321 $generated@@522) ($generated@@279 $generated@@522)))
 :pattern ( ($generated@@279 $generated@@522) ($generated@@182 $generated@@522 $generated@@275))
 :pattern ( ($generated@@321 $generated@@522) ($generated@@182 $generated@@522 $generated@@275))
)))
(assert (forall (($generated@@524 T@T) ) (! (= (type ($generated@@523 $generated@@524)) ($generated@@99 $generated@@524 $generated@@4))
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (! (let (($generated@@526 ($generated@@408 (type $generated@@525))))
(let (($generated@@527 ($generated@@407 (type $generated@@525))))
 (=> (= (type $generated@@525) ($generated@@406 $generated@@527 $generated@@526)) (= (= $generated@@525 ($generated@@405 $generated@@527 $generated@@526)) (= ($generated@@404 $generated@@525) ($generated@@523 $generated@@527))))))
 :pattern ( ($generated@@404 $generated@@525))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 ($generated@@408 (type $generated@@528))))
(let (($generated@@530 ($generated@@407 (type $generated@@528))))
 (=> (= (type $generated@@528) ($generated@@406 $generated@@530 $generated@@529)) (= (= $generated@@528 ($generated@@405 $generated@@530 $generated@@529)) (= ($generated@@447 $generated@@528) ($generated@@523 $generated@@529))))))
 :pattern ( ($generated@@447 $generated@@528))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 ($generated@@408 (type $generated@@531))))
(let (($generated@@533 ($generated@@407 (type $generated@@531))))
 (=> (= (type $generated@@531) ($generated@@406 $generated@@533 $generated@@532)) (= (= $generated@@531 ($generated@@405 $generated@@533 $generated@@532)) (= ($generated@@485 $generated@@531) ($generated@@523 $generated@@194))))))
 :pattern ( ($generated@@485 $generated@@531))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 ($generated@@390 (type $generated@@534))))
(let (($generated@@536 ($generated@@389 (type $generated@@534))))
 (=> (= (type $generated@@534) ($generated@@388 $generated@@536 $generated@@535)) (or (= $generated@@534 ($generated@@387 $generated@@536 $generated@@535)) (exists (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (and (and (= (type $generated@@537) $generated@@194) (= (type $generated@@538) $generated@@194)) ($generated@@0 ($generated@@104 ($generated@@477 $generated@@534) ($generated@@372 ($generated@@267 $generated@@537 $generated@@538)))))
 :no-pattern (type $generated@@537)
 :no-pattern (type $generated@@538)
 :no-pattern ($generated $generated@@537)
 :no-pattern ($generated@@0 $generated@@537)
 :no-pattern ($generated $generated@@538)
 :no-pattern ($generated@@0 $generated@@538)
))))))
 :pattern ( ($generated@@477 $generated@@534))
)))
(assert (forall (($generated@@539 T@U) ) (! (let (($generated@@540 ($generated@@408 (type $generated@@539))))
(let (($generated@@541 ($generated@@407 (type $generated@@539))))
 (=> (= (type $generated@@539) ($generated@@406 $generated@@541 $generated@@540)) (or (= $generated@@539 ($generated@@405 $generated@@541 $generated@@540)) (exists (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (and (and (= (type $generated@@542) $generated@@194) (= (type $generated@@543) $generated@@194)) ($generated@@0 ($generated@@104 ($generated@@485 $generated@@539) ($generated@@372 ($generated@@267 $generated@@542 $generated@@543)))))
 :no-pattern (type $generated@@542)
 :no-pattern (type $generated@@543)
 :no-pattern ($generated $generated@@542)
 :no-pattern ($generated@@0 $generated@@542)
 :no-pattern ($generated $generated@@543)
 :no-pattern ($generated@@0 $generated@@543)
))))))
 :pattern ( ($generated@@485 $generated@@539))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@194) ($generated@@268 $generated@@544 $generated@@46)) (and (= ($generated@@372 ($generated@@425 $generated@@2 $generated@@544)) $generated@@544) ($generated@@182 ($generated@@425 $generated@@2 $generated@@544) $generated@@46)))
 :pattern ( ($generated@@268 $generated@@544 $generated@@46))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@194) ($generated@@268 $generated@@545 $generated@@47)) (and (= ($generated@@372 ($generated@@425 $generated@@3 $generated@@545)) $generated@@545) ($generated@@182 ($generated@@425 $generated@@3 $generated@@545) $generated@@47)))
 :pattern ( ($generated@@268 $generated@@545 $generated@@47))
)))
(assert (forall (($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@194) ($generated@@268 $generated@@546 $generated@@44)) (and (= ($generated@@372 ($generated@@425 $generated@@4 $generated@@546)) $generated@@546) ($generated@@182 ($generated@@425 $generated@@4 $generated@@546) $generated@@44)))
 :pattern ( ($generated@@268 $generated@@546 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@547) 20))
(assert (forall (($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@194) ($generated@@268 $generated@@548 $generated@@45)) (and (= ($generated@@372 ($generated@@425 $generated@@547 $generated@@548)) $generated@@548) ($generated@@182 ($generated@@425 $generated@@547 $generated@@548) $generated@@45)))
 :pattern ( ($generated@@268 $generated@@548 $generated@@45))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@78) (= ($generated@@268 ($generated@@372 $generated@@549) $generated@@550) ($generated@@182 $generated@@549 $generated@@550)))
 :pattern ( ($generated@@268 ($generated@@372 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (! (let (($generated@@552 ($generated@@102 (type $generated@@551))))
 (=> (= (type $generated@@551) ($generated@@99 $generated@@552 $generated@@2)) (<= 0 ($generated@@377 $generated@@551))))
 :pattern ( ($generated@@377 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ) (! (let (($generated@@554 ($generated@@356 (type $generated@@553))))
 (=> (= (type $generated@@553) ($generated@@355 $generated@@554)) (<= 0 ($generated@@354 $generated@@553))))
 :pattern ( ($generated@@354 $generated@@553))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@78)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@78) (= (type $generated@@558) $generated@@78)) (= ($generated@@555 ($generated@@503 $generated@@557 $generated@@558)) $generated@@557))
 :pattern ( ($generated@@503 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@78)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@78) (= (type $generated@@562) $generated@@78)) (= ($generated@@559 ($generated@@503 $generated@@561 $generated@@562)) $generated@@562))
 :pattern ( ($generated@@503 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@78) (= (type $generated@@564) $generated@@78)) (= ($generated@@95 ($generated@@503 $generated@@563 $generated@@564)) $generated@@58))
 :pattern ( ($generated@@503 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@78)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@78) (= (type $generated@@568) $generated@@78)) (= ($generated@@565 ($generated@@511 $generated@@567 $generated@@568)) $generated@@567))
 :pattern ( ($generated@@511 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@78)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@78) (= (type $generated@@572) $generated@@78)) (= ($generated@@569 ($generated@@511 $generated@@571 $generated@@572)) $generated@@572))
 :pattern ( ($generated@@511 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@78) (= (type $generated@@574) $generated@@78)) (= ($generated@@95 ($generated@@511 $generated@@573 $generated@@574)) $generated@@59))
 :pattern ( ($generated@@511 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@194) (= (type $generated@@576) $generated@@194)) (= ($generated@@167 ($generated@@267 $generated@@575 $generated@@576)) $generated@@62))
 :pattern ( ($generated@@267 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@78)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@78) (= (type $generated@@580) $generated@@78)) (= ($generated@@577 ($generated@@185 $generated@@579 $generated@@580)) $generated@@579))
 :pattern ( ($generated@@185 $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@78)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@78) (= (type $generated@@584) $generated@@78)) (= ($generated@@581 ($generated@@185 $generated@@583 $generated@@584)) $generated@@584))
 :pattern ( ($generated@@185 $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@194) (= (type $generated@@586) $generated@@194)) (= ($generated@@192 ($generated@@267 $generated@@585 $generated@@586)) $generated@@585))
 :pattern ( ($generated@@267 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@194) (= (type $generated@@588) $generated@@194)) (= ($generated@@193 ($generated@@267 $generated@@587 $generated@@588)) $generated@@588))
 :pattern ( ($generated@@267 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@194) (= (type $generated@@590) $generated@@87)) (= ($generated@@167 ($generated@@324 $generated@@589 $generated@@590)) $generated@@69))
 :pattern ( ($generated@@324 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (= (type $generated@@591) $generated@@194) (= (type $generated@@592) $generated@@87)) (= ($generated@@292 ($generated@@324 $generated@@591 $generated@@592)) $generated@@591))
 :pattern ( ($generated@@324 $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@194) (= (type $generated@@594) $generated@@87)) (= ($generated@@293 ($generated@@324 $generated@@593 $generated@@594)) $generated@@594))
 :pattern ( ($generated@@324 $generated@@593 $generated@@594))
)))
(assert  (and (forall (($generated@@597 T@U) ) (! (= (type ($generated@@595 $generated@@597)) $generated@@78)
 :pattern ( ($generated@@595 $generated@@597))
)) (forall (($generated@@598 T@U) ($generated@@599 Int) ) (! (let (($generated@@600 ($generated@@356 (type $generated@@598))))
(= (type ($generated@@596 $generated@@598 $generated@@599)) $generated@@600))
 :pattern ( ($generated@@596 $generated@@598 $generated@@599))
))))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (= (type $generated@@601) ($generated@@355 $generated@@194)) (= (type $generated@@602) $generated@@78)) (= (type $generated@@603) ($generated@@99 $generated@@100 $generated@@101))) (= ($generated@@97 $generated@@601 ($generated@@595 $generated@@602) $generated@@603) (forall (($generated@@604 Int) ) (!  (=> (and (<= 0 $generated@@604) (< $generated@@604 ($generated@@354 $generated@@601))) ($generated@@330 ($generated@@596 $generated@@601 $generated@@604) $generated@@602 $generated@@603))
 :pattern ( ($generated@@596 $generated@@601 $generated@@604))
))))
 :pattern ( ($generated@@97 $generated@@601 ($generated@@595 $generated@@602) $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (= (type $generated@@605) $generated@@87) (= (type $generated@@606) $generated@@4)) (= (type $generated@@607) $generated@@87)) (= ($generated@@86 ($generated@@310 $generated@@605) ($generated@@0 ($generated@@310 $generated@@606)) ($generated@@310 $generated@@607)) ($generated@@310 ($generated@@86 $generated@@605 ($generated@@0 $generated@@606) $generated@@607))))
 :pattern ( ($generated@@86 ($generated@@310 $generated@@605) ($generated@@0 ($generated@@310 $generated@@606)) ($generated@@310 $generated@@607)))
)))
(assert (forall (($generated@@609 Int) ) (! (= ($generated@@608 ($generated@@98 $generated@@609)) $generated@@609)
 :pattern ( ($generated@@98 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ) (! (= (type ($generated@@610 $generated@@611)) $generated@@78)
 :pattern ( ($generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@78) (= ($generated@@610 ($generated@@298 $generated@@612)) $generated@@612))
 :pattern ( ($generated@@298 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@78) (= ($generated@@95 ($generated@@298 $generated@@613)) $generated@@54))
 :pattern ( ($generated@@298 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ) (! (= (type ($generated@@614 $generated@@615)) $generated@@78)
 :pattern ( ($generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ) (!  (=> (= (type $generated@@616) $generated@@78) (= ($generated@@614 ($generated@@303 $generated@@616)) $generated@@616))
 :pattern ( ($generated@@303 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@78) (= ($generated@@95 ($generated@@303 $generated@@617)) $generated@@55))
 :pattern ( ($generated@@303 $generated@@617))
)))
(assert (forall (($generated@@619 T@U) ) (! (= (type ($generated@@618 $generated@@619)) $generated@@78)
 :pattern ( ($generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@78) (= ($generated@@618 ($generated@@201 $generated@@620)) $generated@@620))
 :pattern ( ($generated@@201 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@78) (= ($generated@@95 ($generated@@201 $generated@@621)) $generated@@56))
 :pattern ( ($generated@@201 $generated@@621))
)))
(assert (forall (($generated@@623 T@U) ) (! (= (type ($generated@@622 $generated@@623)) $generated@@78)
 :pattern ( ($generated@@622 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@78) (= ($generated@@622 ($generated@@595 $generated@@624)) $generated@@624))
 :pattern ( ($generated@@595 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@78) (= ($generated@@95 ($generated@@595 $generated@@625)) $generated@@57))
 :pattern ( ($generated@@595 $generated@@625))
)))
(assert (forall (($generated@@626 Int) ) (! (= ($generated@@167 ($generated@@363 $generated@@626)) $generated@@64)
 :pattern ( ($generated@@363 $generated@@626))
)))
(assert (forall (($generated@@627 Int) ) (! (= ($generated@@160 ($generated@@363 $generated@@627)) $generated@@627)
 :pattern ( ($generated@@363 $generated@@627))
)))
(assert (forall (($generated@@628 Int) ) (! (= ($generated@@167 ($generated@@367 $generated@@628)) $generated@@66)
 :pattern ( ($generated@@367 $generated@@628))
)))
(assert (forall (($generated@@629 Int) ) (! (= ($generated@@164 ($generated@@367 $generated@@629)) $generated@@629)
 :pattern ( ($generated@@367 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ) (! (= (type ($generated@@630 $generated@@631)) $generated@@78)
 :pattern ( ($generated@@630 $generated@@631))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@78) (= ($generated@@630 ($generated@@262 $generated@@632)) $generated@@632))
 :pattern ( ($generated@@262 $generated@@632))
)))
(assert (forall (($generated@@633 T@U) ) (! (let (($generated@@634 (type $generated@@633)))
(= ($generated@@425 $generated@@634 ($generated@@372 $generated@@633)) $generated@@633))
 :pattern ( ($generated@@372 $generated@@633))
)))
(assert (forall (($generated@@636 T@U) ($generated@@637 Bool) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@636) $generated@@87) (= (type $generated@@638) $generated@@87)) (< ($generated@@635 $generated@@636) ($generated@@635 ($generated@@86 $generated@@636 $generated@@637 $generated@@638))))
 :pattern ( ($generated@@86 $generated@@636 $generated@@637 $generated@@638))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 Bool) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@639) $generated@@87) (= (type $generated@@641) $generated@@87)) (< ($generated@@635 $generated@@641) ($generated@@635 ($generated@@86 $generated@@639 $generated@@640 $generated@@641))))
 :pattern ( ($generated@@86 $generated@@639 $generated@@640 $generated@@641))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (and (= (type $generated@@642) ($generated@@388 $generated@@194 $generated@@194)) (= (type $generated@@643) $generated@@78)) (= (type $generated@@644) $generated@@78)) (= ($generated@@182 $generated@@642 ($generated@@503 $generated@@643 $generated@@644)) (forall (($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@194) ($generated@@0 ($generated@@104 ($generated@@386 $generated@@642) $generated@@645))) (and ($generated@@268 ($generated@@104 ($generated@@478 $generated@@642) $generated@@645) $generated@@644) ($generated@@268 $generated@@645 $generated@@643)))
 :pattern ( ($generated@@104 ($generated@@478 $generated@@642) $generated@@645))
 :pattern ( ($generated@@104 ($generated@@386 $generated@@642) $generated@@645))
))))
 :pattern ( ($generated@@182 $generated@@642 ($generated@@503 $generated@@643 $generated@@644)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ($generated@@648 T@U) ) (!  (=> (and (and (= (type $generated@@646) ($generated@@406 $generated@@194 $generated@@194)) (= (type $generated@@647) $generated@@78)) (= (type $generated@@648) $generated@@78)) (= ($generated@@182 $generated@@646 ($generated@@511 $generated@@647 $generated@@648)) (forall (($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@649) $generated@@194) ($generated@@0 ($generated@@104 ($generated@@404 $generated@@646) $generated@@649))) (and ($generated@@268 ($generated@@104 ($generated@@486 $generated@@646) $generated@@649) $generated@@648) ($generated@@268 $generated@@649 $generated@@647)))
 :pattern ( ($generated@@104 ($generated@@486 $generated@@646) $generated@@649))
 :pattern ( ($generated@@104 ($generated@@404 $generated@@646) $generated@@649))
))))
 :pattern ( ($generated@@182 $generated@@646 ($generated@@511 $generated@@647 $generated@@648)))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@651) $generated@@194) (= (type $generated@@652) $generated@@194)) (< ($generated@@650 $generated@@651) ($generated@@635 ($generated@@267 $generated@@651 $generated@@652))))
 :pattern ( ($generated@@267 $generated@@651 $generated@@652))
)))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) $generated@@194) (= (type $generated@@654) $generated@@194)) (< ($generated@@650 $generated@@654) ($generated@@635 ($generated@@267 $generated@@653 $generated@@654))))
 :pattern ( ($generated@@267 $generated@@653 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) $generated@@194) (= (type $generated@@656) $generated@@87)) (< ($generated@@650 $generated@@655) ($generated@@635 ($generated@@324 $generated@@655 $generated@@656))))
 :pattern ( ($generated@@324 $generated@@655 $generated@@656))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) $generated@@194) (= (type $generated@@658) $generated@@87)) (< ($generated@@635 $generated@@658) ($generated@@635 ($generated@@324 $generated@@657 $generated@@658))))
 :pattern ( ($generated@@324 $generated@@657 $generated@@658))
)))
(assert (forall (($generated@@659 Int) ) (! (= ($generated@@182 ($generated@@363 $generated@@659) $generated@@429) ($generated@@182 ($generated@@8 $generated@@659) $generated@@46))
 :pattern ( ($generated@@182 ($generated@@363 $generated@@659) $generated@@429))
)))
(assert (forall (($generated@@660 Int) ) (! (= ($generated@@182 ($generated@@367 $generated@@660) $generated@@429) ($generated@@182 ($generated@@8 $generated@@660) $generated@@46))
 :pattern ( ($generated@@182 ($generated@@367 $generated@@660) $generated@@429))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (and (= (type $generated@@661) $generated@@194) (= (type $generated@@662) $generated@@78)) (= (type $generated@@663) $generated@@78)) ($generated@@268 $generated@@661 ($generated@@503 $generated@@662 $generated@@663))) (and (= ($generated@@372 ($generated@@425 ($generated@@388 $generated@@194 $generated@@194) $generated@@661)) $generated@@661) ($generated@@182 ($generated@@425 ($generated@@388 $generated@@194 $generated@@194) $generated@@661) ($generated@@503 $generated@@662 $generated@@663))))
 :pattern ( ($generated@@268 $generated@@661 ($generated@@503 $generated@@662 $generated@@663)))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@664) $generated@@194) (= (type $generated@@665) $generated@@78)) (= (type $generated@@666) $generated@@78)) ($generated@@268 $generated@@664 ($generated@@511 $generated@@665 $generated@@666))) (and (= ($generated@@372 ($generated@@425 ($generated@@406 $generated@@194 $generated@@194) $generated@@664)) $generated@@664) ($generated@@182 ($generated@@425 ($generated@@406 $generated@@194 $generated@@194) $generated@@664) ($generated@@511 $generated@@665 $generated@@666))))
 :pattern ( ($generated@@268 $generated@@664 ($generated@@511 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) $generated@@78) (= (type $generated@@668) $generated@@78)) (= (type $generated@@669) $generated@@194)) ($generated@@268 $generated@@669 ($generated@@185 $generated@@667 $generated@@668))) (and (= ($generated@@372 ($generated@@425 $generated@@87 $generated@@669)) $generated@@669) ($generated@@182 ($generated@@425 $generated@@87 $generated@@669) ($generated@@185 $generated@@667 $generated@@668))))
 :pattern ( ($generated@@268 $generated@@669 ($generated@@185 $generated@@667 $generated@@668)))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (and (= (type $generated@@670) $generated@@87) (= (type $generated@@671) $generated@@78)) (= (type $generated@@672) ($generated@@99 $generated@@100 $generated@@101))) (and ($generated@@263 $generated@@672) (and ($generated@@291 $generated@@670) ($generated@@97 $generated@@670 ($generated@@262 $generated@@671) $generated@@672)))) ($generated@@330 ($generated@@292 $generated@@670) $generated@@671 $generated@@672))
 :pattern ( ($generated@@330 ($generated@@292 $generated@@670) $generated@@671 $generated@@672))
)))
(assert (forall (($generated@@673 T@U) ) (! (let (($generated@@674 (type $generated@@673)))
 (not ($generated@@0 ($generated@@104 ($generated@@523 $generated@@674) $generated@@673))))
 :pattern ( (let (($generated@@674 (type $generated@@673)))
($generated@@104 ($generated@@523 $generated@@674) $generated@@673)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@675) $generated@@78) (= (type $generated@@676) $generated@@78)) (and (= ($generated@@95 ($generated@@185 $generated@@675 $generated@@676)) $generated@@63) (= ($generated@@383 ($generated@@185 $generated@@675 $generated@@676)) $generated@@74)))
 :pattern ( ($generated@@185 $generated@@675 $generated@@676))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ) (!  (=> (and (and (= (type $generated@@677) $generated@@87) (= (type $generated@@678) ($generated@@99 $generated@@100 $generated@@101))) (and ($generated@@263 $generated@@678) (and ($generated@@159 $generated@@677) ($generated@@97 $generated@@677 $generated@@429 $generated@@678)))) ($generated@@97 ($generated@@8 ($generated@@160 $generated@@677)) $generated@@46 $generated@@678))
 :pattern ( ($generated@@97 ($generated@@8 ($generated@@160 $generated@@677)) $generated@@46 $generated@@678))
)))
(assert (forall (($generated@@679 T@U) ($generated@@680 T@U) ) (!  (=> (and (and (= (type $generated@@679) $generated@@87) (= (type $generated@@680) ($generated@@99 $generated@@100 $generated@@101))) (and ($generated@@263 $generated@@680) (and ($generated@@163 $generated@@679) ($generated@@97 $generated@@679 $generated@@429 $generated@@680)))) ($generated@@97 ($generated@@8 ($generated@@164 $generated@@679)) $generated@@46 $generated@@680))
 :pattern ( ($generated@@97 ($generated@@8 ($generated@@164 $generated@@679)) $generated@@46 $generated@@680))
)))
(assert (forall (($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (= (type $generated@@681) $generated@@87) (= (type $generated@@682) ($generated@@99 $generated@@100 $generated@@101))) (and ($generated@@263 $generated@@682) (and ($generated@@279 $generated@@681) ($generated@@97 $generated@@681 $generated@@275 $generated@@682)))) ($generated@@97 ($generated@@11 ($generated@@88 $generated@@681)) $generated@@44 $generated@@682))
 :pattern ( ($generated@@97 ($generated@@11 ($generated@@88 $generated@@681)) $generated@@44 $generated@@682))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@87) (= ($generated@@650 ($generated@@372 $generated@@683)) ($generated@@635 $generated@@683)))
 :pattern ( ($generated@@650 ($generated@@372 $generated@@683)))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (and (= (type $generated@@684) $generated@@194) ($generated@@268 $generated@@684 ($generated@@98 0))) (and (= ($generated@@372 ($generated@@425 $generated@@2 $generated@@684)) $generated@@684) ($generated@@182 ($generated@@425 ($generated@@99 $generated@@194 $generated@@4) $generated@@684) ($generated@@98 0))))
 :pattern ( ($generated@@268 $generated@@684 ($generated@@98 0)))
)))
(assert (forall (($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (and (= (type $generated@@685) $generated@@194) (= (type $generated@@686) $generated@@78)) ($generated@@268 $generated@@685 ($generated@@298 $generated@@686))) (and (= ($generated@@372 ($generated@@425 ($generated@@99 $generated@@194 $generated@@4) $generated@@685)) $generated@@685) ($generated@@182 ($generated@@425 ($generated@@99 $generated@@194 $generated@@4) $generated@@685) ($generated@@298 $generated@@686))))
 :pattern ( ($generated@@268 $generated@@685 ($generated@@298 $generated@@686)))
)))
(assert (forall (($generated@@687 T@U) ($generated@@688 T@U) ) (!  (=> (and (and (= (type $generated@@687) $generated@@194) (= (type $generated@@688) $generated@@78)) ($generated@@268 $generated@@687 ($generated@@303 $generated@@688))) (and (= ($generated@@372 ($generated@@425 ($generated@@99 $generated@@194 $generated@@4) $generated@@687)) $generated@@687) ($generated@@182 ($generated@@425 ($generated@@99 $generated@@194 $generated@@4) $generated@@687) ($generated@@303 $generated@@688))))
 :pattern ( ($generated@@268 $generated@@687 ($generated@@303 $generated@@688)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (and (= (type $generated@@689) $generated@@194) (= (type $generated@@690) $generated@@78)) ($generated@@268 $generated@@689 ($generated@@201 $generated@@690))) (and (= ($generated@@372 ($generated@@425 ($generated@@99 $generated@@194 $generated@@2) $generated@@689)) $generated@@689) ($generated@@182 ($generated@@425 ($generated@@99 $generated@@194 $generated@@2) $generated@@689) ($generated@@201 $generated@@690))))
 :pattern ( ($generated@@268 $generated@@689 ($generated@@201 $generated@@690)))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (and (= (type $generated@@691) $generated@@194) (= (type $generated@@692) $generated@@78)) ($generated@@268 $generated@@691 ($generated@@595 $generated@@692))) (and (= ($generated@@372 ($generated@@425 ($generated@@355 $generated@@194) $generated@@691)) $generated@@691) ($generated@@182 ($generated@@425 ($generated@@355 $generated@@194) $generated@@691) ($generated@@595 $generated@@692))))
 :pattern ( ($generated@@268 $generated@@691 ($generated@@595 $generated@@692)))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (and (= (type $generated@@693) $generated@@78) (= (type $generated@@694) $generated@@194)) ($generated@@268 $generated@@694 ($generated@@262 $generated@@693))) (and (= ($generated@@372 ($generated@@425 $generated@@87 $generated@@694)) $generated@@694) ($generated@@182 ($generated@@425 $generated@@87 $generated@@694) ($generated@@262 $generated@@693))))
 :pattern ( ($generated@@268 $generated@@694 ($generated@@262 $generated@@693)))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (and (= (type $generated@@695) $generated@@87) (= (type $generated@@696) $generated@@78)) (= (type $generated@@697) ($generated@@99 $generated@@100 $generated@@101))) (and ($generated@@263 $generated@@697) (and ($generated@@291 $generated@@695) ($generated@@97 $generated@@695 ($generated@@262 $generated@@696) $generated@@697)))) ($generated@@97 ($generated@@293 $generated@@695) ($generated@@262 $generated@@696) $generated@@697))
 :pattern ( ($generated@@97 ($generated@@293 $generated@@695) ($generated@@262 $generated@@696) $generated@@697))
)))
(assert (= ($generated@@95 $generated@@155) $generated@@61))
(assert (= ($generated@@383 $generated@@155) $generated@@73))
(assert (= ($generated@@95 $generated@@429) $generated@@65))
(assert (= ($generated@@383 $generated@@429) $generated@@75))
(assert (= ($generated@@95 $generated@@275) $generated@@71))
(assert (= ($generated@@383 $generated@@275) $generated@@77))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (= (type $generated@@698) ($generated@@99 $generated@@194 $generated@@2)) (= (type $generated@@699) $generated@@78)) (= (type $generated@@700) ($generated@@99 $generated@@100 $generated@@101))) (= ($generated@@97 $generated@@698 ($generated@@201 $generated@@699) $generated@@700) (forall (($generated@@701 T@U) ) (!  (=> (and (= (type $generated@@701) $generated@@194) (< 0 ($generated ($generated@@104 $generated@@698 $generated@@701)))) ($generated@@330 $generated@@701 $generated@@699 $generated@@700))
 :pattern ( ($generated@@104 $generated@@698 $generated@@701))
))))
 :pattern ( ($generated@@97 $generated@@698 ($generated@@201 $generated@@699) $generated@@700))
)))
(assert (= $generated@@199 ($generated@@310 $generated@@199)))
(assert (= $generated@@200 ($generated@@310 $generated@@200)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (and (and (= (type $generated@@702) $generated@@87) (= (type $generated@@703) $generated@@78)) (= (type $generated@@704) ($generated@@99 $generated@@100 $generated@@101))) (and ($generated@@263 $generated@@704) (and ($generated@@184 $generated@@702) (exists (($generated@@705 T@U) ) (!  (and (= (type $generated@@705) $generated@@78) ($generated@@97 $generated@@702 ($generated@@185 $generated@@703 $generated@@705) $generated@@704))
 :pattern ( ($generated@@97 $generated@@702 ($generated@@185 $generated@@703 $generated@@705) $generated@@704))
))))) ($generated@@330 ($generated@@192 $generated@@702) $generated@@703 $generated@@704))
 :pattern ( ($generated@@330 ($generated@@192 $generated@@702) $generated@@703 $generated@@704))
)))
(assert (forall (($generated@@706 T@U) ($generated@@707 T@U) ($generated@@708 T@U) ) (!  (=> (and (and (and (= (type $generated@@706) $generated@@87) (= (type $generated@@707) $generated@@78)) (= (type $generated@@708) ($generated@@99 $generated@@100 $generated@@101))) (and ($generated@@263 $generated@@708) (and ($generated@@184 $generated@@706) (exists (($generated@@709 T@U) ) (!  (and (= (type $generated@@709) $generated@@78) ($generated@@97 $generated@@706 ($generated@@185 $generated@@709 $generated@@707) $generated@@708))
 :pattern ( ($generated@@97 $generated@@706 ($generated@@185 $generated@@709 $generated@@707) $generated@@708))
))))) ($generated@@330 ($generated@@193 $generated@@706) $generated@@707 $generated@@708))
 :pattern ( ($generated@@330 ($generated@@193 $generated@@706) $generated@@707 $generated@@708))
)))
(assert (forall (($generated@@710 T@U) ($generated@@711 T@U) ) (!  (=> (and (and (= (type $generated@@710) $generated@@87) (= (type $generated@@711) ($generated@@99 $generated@@100 $generated@@101))) (and ($generated@@263 $generated@@711) (and ($generated@@279 $generated@@710) ($generated@@97 $generated@@710 $generated@@275 $generated@@711)))) ($generated@@97 ($generated@@172 $generated@@710) $generated@@275 $generated@@711))
 :pattern ( ($generated@@97 ($generated@@172 $generated@@710) $generated@@275 $generated@@711))
)))
(assert (forall (($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (and (= (type $generated@@712) $generated@@87) (= (type $generated@@713) ($generated@@99 $generated@@100 $generated@@101))) (and ($generated@@263 $generated@@713) (and ($generated@@279 $generated@@712) ($generated@@97 $generated@@712 $generated@@275 $generated@@713)))) ($generated@@97 ($generated@@177 $generated@@712) $generated@@275 $generated@@713))
 :pattern ( ($generated@@97 ($generated@@177 $generated@@712) $generated@@275 $generated@@713))
)))
(assert (forall (($generated@@714 T@U) ($generated@@715 T@U) ) (!  (=> (and (= (type $generated@@714) $generated@@194) (= (type $generated@@715) $generated@@194)) (= ($generated@@267 ($generated@@310 $generated@@714) ($generated@@310 $generated@@715)) ($generated@@310 ($generated@@267 $generated@@714 $generated@@715))))
 :pattern ( ($generated@@267 ($generated@@310 $generated@@714) ($generated@@310 $generated@@715)))
)))
(assert (forall (($generated@@716 T@U) ($generated@@717 T@U) ) (!  (=> (and (= (type $generated@@716) $generated@@194) (= (type $generated@@717) $generated@@87)) (= ($generated@@324 ($generated@@310 $generated@@716) ($generated@@310 $generated@@717)) ($generated@@310 ($generated@@324 $generated@@716 $generated@@717))))
 :pattern ( ($generated@@324 ($generated@@310 $generated@@716) ($generated@@310 $generated@@717)))
)))
(assert (forall (($generated@@718 Int) ) (! (= ($generated@@372 ($generated@@8 ($generated@@308 $generated@@718))) ($generated@@310 ($generated@@372 ($generated@@8 $generated@@718))))
 :pattern ( ($generated@@372 ($generated@@8 ($generated@@308 $generated@@718))))
)))
(assert (forall (($generated@@719 Int) ) (! (= ($generated@@363 ($generated@@308 $generated@@719)) ($generated@@310 ($generated@@363 $generated@@719)))
 :pattern ( ($generated@@363 ($generated@@308 $generated@@719)))
)))
(assert (forall (($generated@@720 Int) ) (! (= ($generated@@367 ($generated@@308 $generated@@720)) ($generated@@310 ($generated@@367 $generated@@720)))
 :pattern ( ($generated@@367 ($generated@@308 $generated@@720)))
)))
(assert (forall (($generated@@721 T@U) ) (! (= ($generated@@372 ($generated@@310 $generated@@721)) ($generated@@310 ($generated@@372 $generated@@721)))
 :pattern ( ($generated@@372 ($generated@@310 $generated@@721)))
)))
(assert (forall (($generated@@722 T@U) ) (! (let (($generated@@723 ($generated@@356 (type $generated@@722))))
 (=> (and (= (type $generated@@722) ($generated@@355 $generated@@723)) (= ($generated@@354 $generated@@722) 0)) (= $generated@@722 ($generated@@353 $generated@@723))))
 :pattern ( ($generated@@354 $generated@@722))
)))
(assert (forall (($generated@@724 T@U) ($generated@@725 T@U) ($generated@@726 T@U) ) (! (let (($generated@@727 (type $generated@@725)))
 (=> (and (and (= (type $generated@@724) ($generated@@99 $generated@@727 $generated@@2)) (= (type $generated@@726) $generated@@2)) (<= 0 ($generated $generated@@726))) (= ($generated@@377 ($generated@@105 $generated@@724 $generated@@725 $generated@@726)) (+ (- ($generated@@377 $generated@@724) ($generated ($generated@@104 $generated@@724 $generated@@725))) ($generated $generated@@726)))))
 :pattern ( ($generated@@377 ($generated@@105 $generated@@724 $generated@@725 $generated@@726)))
)))
(assert (forall (($generated@@728 T@U) ($generated@@729 T@U) ) (!  (=> (and (= (type $generated@@728) ($generated@@99 $generated@@100 $generated@@101)) (= (type $generated@@729) $generated@@2)) ($generated@@97 $generated@@729 $generated@@46 $generated@@728))
 :pattern ( ($generated@@97 $generated@@729 $generated@@46 $generated@@728))
)))
(assert (forall (($generated@@730 T@U) ($generated@@731 T@U) ) (!  (=> (and (= (type $generated@@730) ($generated@@99 $generated@@100 $generated@@101)) (= (type $generated@@731) $generated@@3)) ($generated@@97 $generated@@731 $generated@@47 $generated@@730))
 :pattern ( ($generated@@97 $generated@@731 $generated@@47 $generated@@730))
)))
(assert (forall (($generated@@732 T@U) ($generated@@733 T@U) ) (!  (=> (and (= (type $generated@@732) ($generated@@99 $generated@@100 $generated@@101)) (= (type $generated@@733) $generated@@4)) ($generated@@97 $generated@@733 $generated@@44 $generated@@732))
 :pattern ( ($generated@@97 $generated@@733 $generated@@44 $generated@@732))
)))
(assert (forall (($generated@@734 T@U) ($generated@@735 T@U) ) (!  (=> (and (= (type $generated@@734) ($generated@@99 $generated@@100 $generated@@101)) (= (type $generated@@735) $generated@@547)) ($generated@@97 $generated@@735 $generated@@45 $generated@@734))
 :pattern ( ($generated@@97 $generated@@735 $generated@@45 $generated@@734))
)))
(assert (forall (($generated@@736 T@U) ($generated@@737 T@U) ) (!  (=> (and (= (type $generated@@736) ($generated@@99 $generated@@100 $generated@@101)) (= (type $generated@@737) $generated@@194)) ($generated@@97 $generated@@737 $generated@@48 $generated@@736))
 :pattern ( ($generated@@97 $generated@@737 $generated@@48 $generated@@736))
)))
(assert (forall (($generated@@738 T@U) ($generated@@739 Bool) ($generated@@740 T@U) ) (!  (=> (and (= (type $generated@@738) $generated@@87) (= (type $generated@@740) $generated@@87)) (= ($generated@@182 ($generated@@86 $generated@@738 $generated@@739 $generated@@740) $generated@@275)  (and (and ($generated@@182 $generated@@738 $generated@@275) ($generated@@182 ($generated@@11 $generated@@739) $generated@@44)) ($generated@@182 $generated@@740 $generated@@275))))
 :pattern ( ($generated@@182 ($generated@@86 $generated@@738 $generated@@739 $generated@@740) $generated@@275))
)))
(assert (forall (($generated@@741 T@U) ($generated@@742 T@U) ($generated@@743 T@U) ($generated@@744 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@741) $generated@@78) (= (type $generated@@742) $generated@@194)) (= (type $generated@@743) $generated@@87)) (= (type $generated@@744) ($generated@@99 $generated@@100 $generated@@101))) ($generated@@263 $generated@@744)) (= ($generated@@97 ($generated@@324 $generated@@742 $generated@@743) ($generated@@262 $generated@@741) $generated@@744)  (and ($generated@@330 $generated@@742 $generated@@741 $generated@@744) ($generated@@97 $generated@@743 ($generated@@262 $generated@@741) $generated@@744))))
 :pattern ( ($generated@@97 ($generated@@324 $generated@@742 $generated@@743) ($generated@@262 $generated@@741) $generated@@744))
)))
(assert (forall (($generated@@745 T@U) ($generated@@746 T@U) ) (!  (=> (and (= (type $generated@@745) ($generated@@355 $generated@@194)) (= (type $generated@@746) $generated@@78)) (= ($generated@@182 $generated@@745 ($generated@@595 $generated@@746)) (forall (($generated@@747 Int) ) (!  (=> (and (<= 0 $generated@@747) (< $generated@@747 ($generated@@354 $generated@@745))) ($generated@@268 ($generated@@596 $generated@@745 $generated@@747) $generated@@746))
 :pattern ( ($generated@@596 $generated@@745 $generated@@747))
))))
 :pattern ( ($generated@@182 $generated@@745 ($generated@@595 $generated@@746)))
)))
(assert (forall (($generated@@749 T@U) ($generated@@750 Int) ) (!  (=> (= (type $generated@@749) ($generated@@355 $generated@@194)) (=> (and (<= 0 $generated@@750) (< $generated@@750 ($generated@@354 $generated@@749))) (< ($generated@@635 ($generated@@425 $generated@@87 ($generated@@596 $generated@@749 $generated@@750))) ($generated@@748 $generated@@749))))
 :pattern ( ($generated@@635 ($generated@@425 $generated@@87 ($generated@@596 $generated@@749 $generated@@750))))
)))
(assert (forall (($generated@@751 T@U) ($generated@@752 T@U) ($generated@@753 T@U) ) (!  (=> (and (and (and (= (type $generated@@751) ($generated@@388 $generated@@194 $generated@@194)) (= (type $generated@@752) $generated@@78)) (= (type $generated@@753) $generated@@78)) ($generated@@182 $generated@@751 ($generated@@503 $generated@@752 $generated@@753))) (and (and ($generated@@182 ($generated@@386 $generated@@751) ($generated@@298 $generated@@752)) ($generated@@182 ($generated@@436 $generated@@751) ($generated@@298 $generated@@753))) ($generated@@182 ($generated@@477 $generated@@751) ($generated@@298 ($generated@@185 $generated@@752 $generated@@753)))))
 :pattern ( ($generated@@182 $generated@@751 ($generated@@503 $generated@@752 $generated@@753)))
)))
(assert (forall (($generated@@754 T@U) ($generated@@755 T@U) ($generated@@756 T@U) ) (!  (=> (and (and (and (= (type $generated@@754) ($generated@@406 $generated@@194 $generated@@194)) (= (type $generated@@755) $generated@@78)) (= (type $generated@@756) $generated@@78)) ($generated@@182 $generated@@754 ($generated@@511 $generated@@755 $generated@@756))) (and (and ($generated@@182 ($generated@@404 $generated@@754) ($generated@@303 $generated@@755)) ($generated@@182 ($generated@@447 $generated@@754) ($generated@@303 $generated@@756))) ($generated@@182 ($generated@@485 $generated@@754) ($generated@@303 ($generated@@185 $generated@@755 $generated@@756)))))
 :pattern ( ($generated@@182 $generated@@754 ($generated@@511 $generated@@755 $generated@@756)))
)))
(assert (forall (($generated@@757 T@U) ) (!  (=> (= (type $generated@@757) $generated@@2) ($generated@@182 $generated@@757 $generated@@46))
 :pattern ( ($generated@@182 $generated@@757 $generated@@46))
)))
(assert (forall (($generated@@758 T@U) ) (!  (=> (= (type $generated@@758) $generated@@3) ($generated@@182 $generated@@758 $generated@@47))
 :pattern ( ($generated@@182 $generated@@758 $generated@@47))
)))
(assert (forall (($generated@@759 T@U) ) (!  (=> (= (type $generated@@759) $generated@@4) ($generated@@182 $generated@@759 $generated@@44))
 :pattern ( ($generated@@182 $generated@@759 $generated@@44))
)))
(assert (forall (($generated@@760 T@U) ) (!  (=> (= (type $generated@@760) $generated@@547) ($generated@@182 $generated@@760 $generated@@45))
 :pattern ( ($generated@@182 $generated@@760 $generated@@45))
)))
(assert (forall (($generated@@761 T@U) ) (!  (=> (= (type $generated@@761) $generated@@194) ($generated@@182 $generated@@761 $generated@@48))
 :pattern ( ($generated@@182 $generated@@761 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@762 () T@U)
(declare-fun $generated@@763 () Bool)
(declare-fun $generated@@764 () Int)
(declare-fun $generated@@765 () T@U)
(declare-fun $generated@@766 () T@U)
(declare-fun $generated@@767 () Int)
(declare-fun $generated@@768 () Int)
(declare-fun $generated@@769 () T@U)
(declare-fun $generated@@770 () T@U)
(declare-fun $generated@@771 () Bool)
(declare-fun $generated@@772 () T@U)
(declare-fun $generated@@773 () T@U)
(declare-fun $generated@@774 () T@U)
(declare-fun $generated@@775 () Bool)
(declare-fun $generated@@776 () T@U)
(declare-fun $generated@@777 () Bool)
(declare-fun $generated@@778 () T@U)
(declare-fun $generated@@779 () T@U)
(declare-fun $generated@@780 () Bool)
(declare-fun $generated@@781 () Int)
(declare-fun $generated@@782 () T@U)
(declare-fun $generated@@783 () Int)
(declare-fun $generated@@784 () Int)
(declare-fun $generated@@785 () T@U)
(declare-fun $generated@@786 () T@U)
(declare-fun $generated@@787 () Bool)
(declare-fun $generated@@788 () Bool)
(declare-fun $generated@@789 () Bool)
(declare-fun $generated@@790 () T@U)
(declare-fun $generated@@791 () Bool)
(declare-fun $generated@@792 () Int)
(declare-fun $generated@@793 () T@U)
(declare-fun $generated@@794 () Int)
(declare-fun $generated@@795 () Int)
(declare-fun $generated@@796 () T@U)
(declare-fun $generated@@797 () T@U)
(declare-fun $generated@@798 () Bool)
(declare-fun $generated@@799 () T@U)
(declare-fun $generated@@800 () Bool)
(declare-fun $generated@@801 () T@U)
(declare-fun $generated@@802 () Bool)
(declare-fun $generated@@803 () T@U)
(declare-fun $generated@@804 () T@U)
(declare-fun $generated@@805 () T@U)
(declare-fun $generated@@806 () Bool)
(declare-fun $generated@@807 () T@U)
(declare-fun $generated@@808 () Int)
(declare-fun $generated@@809 () Int)
(declare-fun $generated@@810 () Int)
(declare-fun $generated@@811 () Int)
(declare-fun $generated@@812 () Int)
(declare-fun $generated@@813 () Int)
(declare-fun $generated@@814 () T@U)
(declare-fun $generated@@815 () T@U)
(declare-fun $generated@@816 (T@U) Bool)
(declare-fun $generated@@817 () Int)
(declare-fun $generated@@818 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@807) $generated@@87) (= (type $generated@@805) $generated@@87)) (= (type $generated@@790) $generated@@87)) (= (type $generated@@796) $generated@@194)) (= (type $generated@@797) $generated@@87)) (= (type $generated@@793) $generated@@87)) (= (type $generated@@766) ($generated@@99 $generated@@100 $generated@@101))) (= (type $generated@@772) $generated@@87)) (= (type $generated@@773) $generated@@87)) (= (type $generated@@799) $generated@@87)) (= (type $generated@@801) $generated@@87)) (= (type $generated@@779) $generated@@87)) (= (type $generated@@785) $generated@@194)) (= (type $generated@@786) $generated@@87)) (= (type $generated@@782) $generated@@87)) (= (type $generated@@778) $generated@@87)) (= (type $generated@@803) $generated@@87)) (= (type $generated@@804) $generated@@87)) (= (type $generated@@762) $generated@@87)) (= (type $generated@@769) $generated@@194)) (= (type $generated@@770) $generated@@87)) (= (type $generated@@765) $generated@@87)) (= (type $generated@@774) $generated@@87)) (= (type $generated@@776) $generated@@87)) (= (type $generated@@814) ($generated@@208 $generated@@100 $generated@@4))) (= (type $generated@@815) $generated@@100)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 94) (let (($generated@@819 true))
(let (($generated@@820 true))
(let (($generated@@821  (=> (not (= $generated@@762 $generated@@199)) (and (=> (= (ControlFlow 0 84) 82) $generated@@820) (=> (= (ControlFlow 0 84) 83) $generated@@819)))))
(let (($generated@@822  (=> (and (= $generated@@762 $generated@@199) (= (ControlFlow 0 81) (- 0 80))) ($generated@@182 ($generated@@8 ($generated@@308 1)) $generated@@155))))
(let (($generated@@823  (=> (= $generated@@763 ($generated@@0 ($generated@@310 ($generated@@11 true)))) (and (=> (= (ControlFlow 0 85) 81) $generated@@822) (=> (= (ControlFlow 0 85) 84) $generated@@821)))))
(let (($generated@@824 true))
(let (($generated@@825  (=> (and (= $generated@@762 ($generated@@324 ($generated@@372 ($generated@@8 $generated@@764)) $generated@@765)) (<= ($generated@@308 0) $generated@@764)) (=> (and (and (and ($generated@@182 $generated@@765 ($generated@@262 $generated@@155)) ($generated@@97 $generated@@765 ($generated@@262 $generated@@155) $generated@@766)) (<= ($generated@@308 0) $generated@@767)) (and (and (= $generated@@768 $generated@@764) ($generated@@182 ($generated@@8 $generated@@768) $generated@@155)) (and (= $generated@@767 $generated@@768) (= (ControlFlow 0 75) (- 0 74))))) ($generated@@182 ($generated@@8 (+ $generated@@767 1)) $generated@@155)))))
(let (($generated@@826  (=> (not (= $generated@@762 $generated@@199)) (and (=> (= (ControlFlow 0 77) 75) $generated@@825) (=> (= (ControlFlow 0 77) 76) $generated@@824)))))
(let (($generated@@827  (=> (and (= $generated@@762 $generated@@199) (= (ControlFlow 0 73) (- 0 72))) ($generated@@182 ($generated@@8 ($generated@@308 1)) $generated@@155))))
(let (($generated@@828  (=> (= $generated@@763 ($generated@@0 ($generated@@310 ($generated@@11 false)))) (and (=> (= (ControlFlow 0 78) 73) $generated@@827) (=> (= (ControlFlow 0 78) 77) $generated@@826)))))
(let (($generated@@829 true))
(let (($generated@@830  (=> (and (= $generated@@762 ($generated@@324 $generated@@769 $generated@@770)) (= (ControlFlow 0 68) (- 0 67))) false)))
(let (($generated@@831  (=> (not (= $generated@@762 $generated@@199)) (and (=> (= (ControlFlow 0 70) 68) $generated@@830) (=> (= (ControlFlow 0 70) 69) $generated@@829)))))
(let (($generated@@832  (=> (and (= $generated@@762 $generated@@199) (= (ControlFlow 0 66) (- 0 65))) ($generated@@182 ($generated@@8 ($generated@@308 1)) $generated@@155))))
(let (($generated@@833  (=> (= $generated@@763  (not ($generated@@0 ($generated@@310 ($generated@@11 false))))) (and (=> (= (ControlFlow 0 71) 66) $generated@@832) (=> (= (ControlFlow 0 71) 70) $generated@@831)))))
(let (($generated@@834  (=> (= $generated@@763  (not ($generated@@0 ($generated@@310 ($generated@@11 true))))) (and (=> (= (ControlFlow 0 79) 78) $generated@@828) (=> (= (ControlFlow 0 79) 71) $generated@@833)))))
(let (($generated@@835  (=> (= ($generated@@267 ($generated@@372 ($generated@@11 $generated@@771)) ($generated@@372 $generated@@772)) ($generated@@267 ($generated@@372 ($generated@@11 $generated@@763)) ($generated@@372 $generated@@762))) (=> (and ($generated@@182 $generated@@762 ($generated@@262 $generated@@155)) ($generated@@97 $generated@@762 ($generated@@262 $generated@@155) $generated@@766)) (and (=> (= (ControlFlow 0 86) 85) $generated@@823) (=> (= (ControlFlow 0 86) 79) $generated@@834))))))
(let (($generated@@836 true))
(let (($generated@@837  (=> (= $generated@@773 ($generated@@86 $generated@@774 $generated@@775 $generated@@776)) (=> (and ($generated@@182 $generated@@774 $generated@@275) ($generated@@97 $generated@@774 $generated@@275 $generated@@766)) (=> (and (and (and ($generated@@182 $generated@@776 $generated@@275) ($generated@@97 $generated@@776 $generated@@275 $generated@@766)) (= $generated@@777 $generated@@775)) (and ($generated@@182 ($generated@@11 $generated@@777) $generated@@44) (= $generated@@771 $generated@@777))) (and (=> (= (ControlFlow 0 87) 86) $generated@@835) (=> (= (ControlFlow 0 87) 64) $generated@@836)))))))
(let (($generated@@838 true))
(let (($generated@@839  (=> (not (= $generated@@773 $generated@@200)) (and (=> (= (ControlFlow 0 88) 87) $generated@@837) (=> (= (ControlFlow 0 88) 63) $generated@@838)))))
(let (($generated@@840  (=> (and (= $generated@@773 $generated@@200) (= (ControlFlow 0 62) (- 0 61))) ($generated@@182 ($generated@@8 ($generated@@308 0)) $generated@@155))))
(let (($generated@@841  (=> (= $generated@@778 $generated@@200) (and (=> (= (ControlFlow 0 89) 62) $generated@@840) (=> (= (ControlFlow 0 89) 88) $generated@@839)))))
(let (($generated@@842 true))
(let (($generated@@843 true))
(let (($generated@@844  (=> (not (= $generated@@779 $generated@@199)) (and (=> (= (ControlFlow 0 55) 53) $generated@@843) (=> (= (ControlFlow 0 55) 54) $generated@@842)))))
(let (($generated@@845  (=> (and (= $generated@@779 $generated@@199) (= (ControlFlow 0 52) (- 0 51))) ($generated@@182 ($generated@@8 ($generated@@308 2)) $generated@@155))))
(let (($generated@@846  (=> (= $generated@@780 ($generated@@0 ($generated@@310 ($generated@@11 true)))) (and (=> (= (ControlFlow 0 56) 52) $generated@@845) (=> (= (ControlFlow 0 56) 55) $generated@@844)))))
(let (($generated@@847 true))
(let (($generated@@848  (=> (and (= $generated@@779 ($generated@@324 ($generated@@372 ($generated@@8 $generated@@781)) $generated@@782)) (<= ($generated@@308 0) $generated@@781)) (=> (and (and (and ($generated@@182 $generated@@782 ($generated@@262 $generated@@155)) ($generated@@97 $generated@@782 ($generated@@262 $generated@@155) $generated@@766)) (<= ($generated@@308 0) $generated@@783)) (and (and (= $generated@@784 $generated@@781) ($generated@@182 ($generated@@8 $generated@@784) $generated@@155)) (and (= $generated@@783 $generated@@784) (= (ControlFlow 0 46) (- 0 45))))) ($generated@@182 ($generated@@8 (+ $generated@@783 1)) $generated@@155)))))
(let (($generated@@849  (=> (not (= $generated@@779 $generated@@199)) (and (=> (= (ControlFlow 0 48) 46) $generated@@848) (=> (= (ControlFlow 0 48) 47) $generated@@847)))))
(let (($generated@@850  (=> (and (= $generated@@779 $generated@@199) (= (ControlFlow 0 44) (- 0 43))) ($generated@@182 ($generated@@8 ($generated@@308 2)) $generated@@155))))
(let (($generated@@851  (=> (= $generated@@780 ($generated@@0 ($generated@@310 ($generated@@11 false)))) (and (=> (= (ControlFlow 0 49) 44) $generated@@850) (=> (= (ControlFlow 0 49) 48) $generated@@849)))))
(let (($generated@@852 true))
(let (($generated@@853  (=> (and (= $generated@@779 ($generated@@324 $generated@@785 $generated@@786)) (= (ControlFlow 0 39) (- 0 38))) false)))
(let (($generated@@854  (=> (not (= $generated@@779 $generated@@199)) (and (=> (= (ControlFlow 0 41) 39) $generated@@853) (=> (= (ControlFlow 0 41) 40) $generated@@852)))))
(let (($generated@@855  (=> (and (= $generated@@779 $generated@@199) (= (ControlFlow 0 37) (- 0 36))) ($generated@@182 ($generated@@8 ($generated@@308 2)) $generated@@155))))
(let (($generated@@856  (=> (= $generated@@780  (not ($generated@@0 ($generated@@310 ($generated@@11 false))))) (and (=> (= (ControlFlow 0 42) 37) $generated@@855) (=> (= (ControlFlow 0 42) 41) $generated@@854)))))
(let (($generated@@857  (=> (= $generated@@780  (not ($generated@@0 ($generated@@310 ($generated@@11 true))))) (and (=> (= (ControlFlow 0 50) 49) $generated@@851) (=> (= (ControlFlow 0 50) 42) $generated@@856)))))
(let (($generated@@858  (=> (= ($generated@@267 ($generated@@372 ($generated@@11 $generated@@787)) ($generated@@372 $generated@@772)) ($generated@@267 ($generated@@372 ($generated@@11 $generated@@780)) ($generated@@372 $generated@@779))) (=> (and ($generated@@182 $generated@@779 ($generated@@262 $generated@@155)) ($generated@@97 $generated@@779 ($generated@@262 $generated@@155) $generated@@766)) (and (=> (= (ControlFlow 0 57) 56) $generated@@846) (=> (= (ControlFlow 0 57) 50) $generated@@857))))))
(let (($generated@@859 true))
(let (($generated@@860  (=> (and (and (= $generated@@773 $generated@@200) (= $generated@@788 $generated@@789)) (and ($generated@@182 ($generated@@11 $generated@@788) $generated@@44) (= $generated@@787 $generated@@788))) (and (=> (= (ControlFlow 0 58) 57) $generated@@858) (=> (= (ControlFlow 0 58) 35) $generated@@859)))))
(let (($generated@@861 true))
(let (($generated@@862 true))
(let (($generated@@863  (=> (not (= $generated@@790 $generated@@199)) (and (=> (= (ControlFlow 0 30) 28) $generated@@862) (=> (= (ControlFlow 0 30) 29) $generated@@861)))))
(let (($generated@@864  (=> (and (= $generated@@790 $generated@@199) (= (ControlFlow 0 27) (- 0 26))) ($generated@@182 ($generated@@8 ($generated@@308 1)) $generated@@155))))
(let (($generated@@865  (=> (= $generated@@791 ($generated@@0 ($generated@@310 ($generated@@11 true)))) (and (=> (= (ControlFlow 0 31) 27) $generated@@864) (=> (= (ControlFlow 0 31) 30) $generated@@863)))))
(let (($generated@@866 true))
(let (($generated@@867  (=> (and (= $generated@@790 ($generated@@324 ($generated@@372 ($generated@@8 $generated@@792)) $generated@@793)) (<= ($generated@@308 0) $generated@@792)) (=> (and (and (and ($generated@@182 $generated@@793 ($generated@@262 $generated@@155)) ($generated@@97 $generated@@793 ($generated@@262 $generated@@155) $generated@@766)) (<= ($generated@@308 0) $generated@@794)) (and (and (= $generated@@795 $generated@@792) ($generated@@182 ($generated@@8 $generated@@795) $generated@@155)) (and (= $generated@@794 $generated@@795) (= (ControlFlow 0 21) (- 0 20))))) ($generated@@182 ($generated@@8 (+ $generated@@794 1)) $generated@@155)))))
(let (($generated@@868  (=> (not (= $generated@@790 $generated@@199)) (and (=> (= (ControlFlow 0 23) 21) $generated@@867) (=> (= (ControlFlow 0 23) 22) $generated@@866)))))
(let (($generated@@869  (=> (and (= $generated@@790 $generated@@199) (= (ControlFlow 0 19) (- 0 18))) ($generated@@182 ($generated@@8 ($generated@@308 1)) $generated@@155))))
(let (($generated@@870  (=> (= $generated@@791 ($generated@@0 ($generated@@310 ($generated@@11 false)))) (and (=> (= (ControlFlow 0 24) 19) $generated@@869) (=> (= (ControlFlow 0 24) 23) $generated@@868)))))
(let (($generated@@871 true))
(let (($generated@@872  (=> (and (= $generated@@790 ($generated@@324 $generated@@796 $generated@@797)) (= (ControlFlow 0 14) (- 0 13))) false)))
(let (($generated@@873  (=> (not (= $generated@@790 $generated@@199)) (and (=> (= (ControlFlow 0 16) 14) $generated@@872) (=> (= (ControlFlow 0 16) 15) $generated@@871)))))
(let (($generated@@874  (=> (and (= $generated@@790 $generated@@199) (= (ControlFlow 0 12) (- 0 11))) ($generated@@182 ($generated@@8 ($generated@@308 1)) $generated@@155))))
(let (($generated@@875  (=> (= $generated@@791  (not ($generated@@0 ($generated@@310 ($generated@@11 false))))) (and (=> (= (ControlFlow 0 17) 12) $generated@@874) (=> (= (ControlFlow 0 17) 16) $generated@@873)))))
(let (($generated@@876  (=> (= $generated@@791  (not ($generated@@0 ($generated@@310 ($generated@@11 true))))) (and (=> (= (ControlFlow 0 25) 24) $generated@@870) (=> (= (ControlFlow 0 25) 17) $generated@@875)))))
(let (($generated@@877  (=> (= ($generated@@267 ($generated@@372 ($generated@@11 $generated@@798)) ($generated@@372 $generated@@772)) ($generated@@267 ($generated@@372 ($generated@@11 $generated@@791)) ($generated@@372 $generated@@790))) (=> (and ($generated@@182 $generated@@790 ($generated@@262 $generated@@155)) ($generated@@97 $generated@@790 ($generated@@262 $generated@@155) $generated@@766)) (and (=> (= (ControlFlow 0 32) 31) $generated@@865) (=> (= (ControlFlow 0 32) 25) $generated@@876))))))
(let (($generated@@878 true))
(let (($generated@@879  (=> (= $generated@@773 ($generated@@86 $generated@@799 $generated@@800 $generated@@801)) (=> (and ($generated@@182 $generated@@799 $generated@@275) ($generated@@97 $generated@@799 $generated@@275 $generated@@766)) (=> (and (and (and ($generated@@182 $generated@@801 $generated@@275) ($generated@@97 $generated@@801 $generated@@275 $generated@@766)) (= $generated@@802 $generated@@800)) (and ($generated@@182 ($generated@@11 $generated@@802) $generated@@44) (= $generated@@798 $generated@@802))) (and (=> (= (ControlFlow 0 33) 32) $generated@@877) (=> (= (ControlFlow 0 33) 10) $generated@@878)))))))
(let (($generated@@880 true))
(let (($generated@@881  (=> (not (= $generated@@773 $generated@@200)) (and (=> (= (ControlFlow 0 34) 33) $generated@@879) (=> (= (ControlFlow 0 34) 9) $generated@@880)))))
(let (($generated@@882  (=> (= $generated@@778 ($generated@@86 $generated@@803 $generated@@789 $generated@@804)) (=> (and (and ($generated@@182 $generated@@803 $generated@@275) ($generated@@97 $generated@@803 $generated@@275 $generated@@766)) (and ($generated@@182 $generated@@804 $generated@@275) ($generated@@97 $generated@@804 $generated@@275 $generated@@766))) (and (=> (= (ControlFlow 0 59) 58) $generated@@860) (=> (= (ControlFlow 0 59) 34) $generated@@881))))))
(let (($generated@@883 true))
(let (($generated@@884  (=> (not (= $generated@@778 $generated@@200)) (and (=> (= (ControlFlow 0 60) 59) $generated@@882) (=> (= (ControlFlow 0 60) 8) $generated@@883)))))
(let (($generated@@885  (=> (= $generated@@805 ($generated@@86 $generated@@778 $generated@@806 $generated@@773)) (=> (and (and ($generated@@182 $generated@@778 $generated@@275) ($generated@@97 $generated@@778 $generated@@275 $generated@@766)) (and ($generated@@182 $generated@@773 $generated@@275) ($generated@@97 $generated@@773 $generated@@275 $generated@@766))) (and (=> (= (ControlFlow 0 90) 89) $generated@@841) (=> (= (ControlFlow 0 90) 60) $generated@@884))))))
(let (($generated@@886 true))
(let (($generated@@887  (=> (not (= $generated@@805 $generated@@200)) (and (=> (= (ControlFlow 0 91) 90) $generated@@885) (=> (= (ControlFlow 0 91) 7) $generated@@886)))))
(let (($generated@@888  (=> (and (= $generated@@805 $generated@@200) (= (ControlFlow 0 6) (- 0 5))) ($generated@@182 ($generated@@8 ($generated@@308 0)) $generated@@155))))
(let (($generated@@889  (=> (and (and (= $generated@@807 ($generated@@363 $generated@@808)) (= $generated@@809 $generated@@808)) (and ($generated@@182 ($generated@@8 $generated@@809) $generated@@46) (= $generated@@810 $generated@@809))) (and (=> (= (ControlFlow 0 92) 6) $generated@@888) (=> (= (ControlFlow 0 92) 91) $generated@@887)))))
(let (($generated@@890 true))
(let (($generated@@891  (=> (= $generated@@807 ($generated@@367 $generated@@811)) (=> (and (and (= $generated@@812 $generated@@811) ($generated@@182 ($generated@@8 $generated@@812) $generated@@46)) (and (= $generated@@813 $generated@@812) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@182 ($generated@@8 ($generated@@308 3)) $generated@@155)))))
(let (($generated@@892  (=> (not (= $generated@@807 ($generated@@363 $generated@@808))) (and (=> (= (ControlFlow 0 4) 2) $generated@@891) (=> (= (ControlFlow 0 4) 3) $generated@@890)))))
(let (($generated@@893  (=> (= $generated@@814 ($generated@@207 $generated@@815 $generated@@766 $generated@@60 false)) (and (=> (= (ControlFlow 0 93) 92) $generated@@889) (=> (= (ControlFlow 0 93) 4) $generated@@892)))))
(let (($generated@@894  (=> (and ($generated@@263 $generated@@766) ($generated@@816 $generated@@766)) (=> (and (and (and ($generated@@182 $generated@@807 $generated@@429) ($generated@@97 $generated@@807 $generated@@429 $generated@@766)) ($generated@@461 $generated@@807)) (and (and ($generated@@182 $generated@@805 $generated@@275) ($generated@@97 $generated@@805 $generated@@275 $generated@@766)) ($generated@@465 $generated@@805))) (=> (and (and (and (and ($generated@@182 $generated@@772 ($generated@@262 $generated@@155)) ($generated@@97 $generated@@772 ($generated@@262 $generated@@155) $generated@@766)) ($generated@@463 $generated@@772)) (<= ($generated@@308 0) $generated@@817)) (and (= 1 $generated@@818) (= (ControlFlow 0 94) 93))) $generated@@893)))))
$generated@@894)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 () T@U)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@78 () T@U)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@89 (T@U Bool T@U) T@U)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) Bool)
(declare-fun $generated@@101 (Int) T@U)
(declare-fun $generated@@102 (T@T T@T) T@T)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 (T@T) T@T)
(declare-fun $generated@@106 (T@T) T@T)
(declare-fun $generated@@107 (T@U T@U) T@U)
(declare-fun $generated@@108 (T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U) T@U)
(declare-fun $generated@@110 (T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U) Bool)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U) Int)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 (T@U) Int)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@192 (T@U T@U) T@U)
(declare-fun $generated@@198 (T@U T@U) Bool)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@201 () T@T)
(declare-fun $generated@@206 (T@U T@U) Bool)
(declare-fun $generated@@207 (T@U) Int)
(declare-fun $generated@@208 (T@U) Int)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 (T@U) T@U)
(declare-fun $generated@@214 (T@U) Bool)
(declare-fun $generated@@218 (T@U T@U T@U) T@U)
(declare-fun $generated@@219 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@220 (T@T T@T) T@T)
(declare-fun $generated@@221 (T@T) T@T)
(declare-fun $generated@@222 (T@T) T@T)
(declare-fun $generated@@223 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@275 () T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@278 (T@U) Bool)
(declare-fun $generated@@282 (T@U T@U) T@U)
(declare-fun $generated@@283 (T@U T@U) Bool)
(declare-fun $generated@@290 () T@U)
(declare-fun $generated@@293 (T@U T@U) Bool)
(declare-fun $generated@@294 (T@U) Bool)
(declare-fun $generated@@297 (Int Int) T@U)
(declare-fun $generated@@306 (T@U T@U) Bool)
(declare-fun $generated@@313 (T@U) Bool)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@U) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@330 (Int) Int)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@340 (T@U) Bool)
(declare-fun $generated@@343 (T@U) Bool)
(declare-fun $generated@@346 (T@U T@U) T@U)
(declare-fun $generated@@352 (T@U T@U T@U) Bool)
(declare-fun $generated@@379 (T@T) T@U)
(declare-fun $generated@@380 (T@U) Int)
(declare-fun $generated@@381 (T@T) T@T)
(declare-fun $generated@@382 (T@T) T@T)
(declare-fun $generated@@389 (Int) T@U)
(declare-fun $generated@@393 (Int) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@411 (T@U) Int)
(declare-fun $generated@@412 (T@T) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@421 (T@T T@T) T@U)
(declare-fun $generated@@422 (T@T T@T) T@T)
(declare-fun $generated@@423 (T@T) T@T)
(declare-fun $generated@@424 (T@T) T@T)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@439 (T@T T@T) T@U)
(declare-fun $generated@@440 (T@T T@T) T@T)
(declare-fun $generated@@441 (T@T) T@T)
(declare-fun $generated@@442 (T@T) T@T)
(declare-fun $generated@@459 (T@T T@U) T@U)
(declare-fun $generated@@463 () T@U)
(declare-fun $generated@@471 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@532 (T@U T@U) T@U)
(declare-fun $generated@@540 (T@U T@U) T@U)
(declare-fun $generated@@555 (T@T) T@U)
(declare-fun $generated@@579 () T@T)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@591 (T@U) T@U)
(declare-fun $generated@@597 (T@U) T@U)
(declare-fun $generated@@601 (T@U) T@U)
(declare-fun $generated@@609 (T@U) T@U)
(declare-fun $generated@@613 (T@U) T@U)
(declare-fun $generated@@633 (T@U) T@U)
(declare-fun $generated@@634 (T@U Int) T@U)
(declare-fun $generated@@646 (T@U) Int)
(declare-fun $generated@@648 (T@U) T@U)
(declare-fun $generated@@652 (T@U) T@U)
(declare-fun $generated@@656 (T@U) T@U)
(declare-fun $generated@@660 (T@U) T@U)
(declare-fun $generated@@668 (T@U) T@U)
(declare-fun $generated@@673 (T@U) Int)
(declare-fun $generated@@688 (T@U) Int)
(declare-fun $generated@@795 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@81) 6) (= (type $generated@@44) $generated@@81)) (= (type $generated@@45) $generated@@81)) (= (type $generated@@46) $generated@@81)) (= (type $generated@@47) $generated@@81)) (= (type $generated@@48) $generated@@81)) (= ($generated@@1 $generated@@82) 7)) (= (type $generated@@49) $generated@@82)) (= (type $generated@@50) $generated@@82)) (= (type $generated@@51) $generated@@82)) (= (type $generated@@52) $generated@@82)) (= (type $generated@@53) $generated@@82)) (= (type $generated@@54) $generated@@82)) (= (type $generated@@55) $generated@@82)) (= (type $generated@@56) $generated@@82)) (= (type $generated@@57) $generated@@82)) (= (type $generated@@58) $generated@@82)) (= (type $generated@@59) $generated@@82)) (forall (($generated@@87 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@87)) 8))) (forall (($generated@@88 T@T) ) (! (= ($generated@@84 ($generated@@83 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@83 $generated@@88))
))) (= (type $generated@@60) ($generated@@83 $generated@@4))) (= (type $generated@@61) $generated@@82)) (= ($generated@@1 $generated@@85) 9)) (= (type $generated@@62) $generated@@85)) (= (type $generated@@63) $generated@@82)) (= (type $generated@@64) $generated@@85)) (= (type $generated@@65) $generated@@82)) (= (type $generated@@66) $generated@@85)) (= (type $generated@@67) $generated@@85)) (= (type $generated@@68) $generated@@82)) (= (type $generated@@69) $generated@@85)) (= (type $generated@@70) $generated@@85)) (= (type $generated@@71) $generated@@82)) (= (type $generated@@72) $generated@@85)) (= (type $generated@@73) $generated@@82)) (= (type $generated@@74) $generated@@85)) (= ($generated@@1 $generated@@86) 10)) (= (type $generated@@75) $generated@@86)) (= (type $generated@@76) $generated@@86)) (= (type $generated@@77) $generated@@86)) (= (type $generated@@78) $generated@@86)) (= (type $generated@@79) $generated@@86)) (= (type $generated@@80) $generated@@86)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@77 $generated@@78 $generated@@79 $generated@@80)
)
(assert  (and (= ($generated@@1 $generated@@90) 11) (forall (($generated@@92 T@U) ($generated@@93 Bool) ($generated@@94 T@U) ) (! (= (type ($generated@@89 $generated@@92 $generated@@93 $generated@@94)) $generated@@90)
 :pattern ( ($generated@@89 $generated@@92 $generated@@93 $generated@@94))
))))
(assert (forall (($generated@@95 T@U) ($generated@@96 Bool) ($generated@@97 T@U) ) (!  (=> (and (= (type $generated@@95) $generated@@90) (= (type $generated@@97) $generated@@90)) (= ($generated@@91 ($generated@@89 $generated@@95 $generated@@96 $generated@@97)) $generated@@96))
 :pattern ( ($generated@@89 $generated@@95 $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (! (= (type ($generated@@98 $generated@@99)) $generated@@82)
 :pattern ( ($generated@@98 $generated@@99))
)))
(assert (= ($generated@@98 $generated@@44) $generated@@49))
(assert (= ($generated@@98 $generated@@45) $generated@@50))
(assert (= ($generated@@98 $generated@@46) $generated@@51))
(assert (= ($generated@@98 $generated@@47) $generated@@52))
(assert (= ($generated@@98 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ) (= ($generated@@1 ($generated@@102 $generated@@111 $generated@@112)) 12)) (forall (($generated@@113 T@T) ($generated@@114 T@T) ) (! (= ($generated@@105 ($generated@@102 $generated@@113 $generated@@114)) $generated@@113)
 :pattern ( ($generated@@102 $generated@@113 $generated@@114))
))) (forall (($generated@@115 T@T) ($generated@@116 T@T) ) (! (= ($generated@@106 ($generated@@102 $generated@@115 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@102 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@106 (type $generated@@117))))
(= (type ($generated@@107 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@107 $generated@@117 $generated@@118))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 (type $generated@@122)))
(let (($generated@@124 (type $generated@@121)))
(= (type ($generated@@108 $generated@@120 $generated@@121 $generated@@122)) ($generated@@102 $generated@@124 $generated@@123))))
 :pattern ( ($generated@@108 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@106 (type $generated@@125))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@107 ($generated@@108 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@107 ($generated@@108 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@107 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@107 ($generated@@108 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@107 $generated@@134 $generated@@136)))
 :weight 0
)))) (= ($generated@@1 $generated@@103) 13)) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (let (($generated@@139 ($generated@@84 (type $generated@@138))))
(= (type ($generated@@109 $generated@@137 $generated@@138)) $generated@@139))
 :pattern ( ($generated@@109 $generated@@137 $generated@@138))
))) (= ($generated@@1 $generated@@104) 14)) (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= (type ($generated@@110 $generated@@140 $generated@@141 $generated@@142)) $generated@@104)
 :pattern ( ($generated@@110 $generated@@140 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (let (($generated@@146 ($generated@@84 (type $generated@@144))))
 (=> (= (type $generated@@145) $generated@@146) (= ($generated@@109 ($generated@@110 $generated@@143 $generated@@144 $generated@@145) $generated@@144) $generated@@145)))
 :weight 0
))) (and (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@149 $generated@@150) (= ($generated@@109 ($generated@@110 $generated@@148 $generated@@149 $generated@@147) $generated@@150) ($generated@@109 $generated@@148 $generated@@150)))
 :weight 0
)) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or true (= ($generated@@109 ($generated@@110 $generated@@152 $generated@@153 $generated@@151) $generated@@154) ($generated@@109 $generated@@152 $generated@@154)))
 :weight 0
)))) (forall (($generated@@155 Int) ) (! (= (type ($generated@@101 $generated@@155)) $generated@@81)
 :pattern ( ($generated@@101 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (= (type $generated@@156) $generated@@2) (= (type $generated@@157) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@100 $generated@@156 ($generated@@101 0) $generated@@157))
 :pattern ( ($generated@@100 $generated@@156 ($generated@@101 0) $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (= (type $generated@@159) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@160) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@158 $generated@@159 $generated@@160)) (forall (($generated@@161 T@U) ) (!  (=> (and (= (type $generated@@161) $generated@@103) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@159 $generated@@161) $generated@@60))) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@160 $generated@@161) $generated@@60)))
 :pattern ( ($generated@@109 ($generated@@107 $generated@@160 $generated@@161) $generated@@60))
)))
 :pattern ( ($generated@@158 $generated@@159 $generated@@160))
)))
(assert (= (type $generated@@162) $generated@@81))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@2) (= (type $generated@@164) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@100 $generated@@163 $generated@@162 $generated@@164))
 :pattern ( ($generated@@100 $generated@@163 $generated@@162 $generated@@164))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) $generated@@90) (= (type $generated@@169) $generated@@90)) (and ($generated@@166 $generated@@168) ($generated@@166 $generated@@169))) (= ($generated@@165 $generated@@168 $generated@@169) (= ($generated@@167 $generated@@168) ($generated@@167 $generated@@169))))
 :pattern ( ($generated@@165 $generated@@168 $generated@@169) ($generated@@166 $generated@@168))
 :pattern ( ($generated@@165 $generated@@168 $generated@@169) ($generated@@166 $generated@@169))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and (= (type $generated@@172) $generated@@90) (= (type $generated@@173) $generated@@90)) (and ($generated@@170 $generated@@172) ($generated@@170 $generated@@173))) (= ($generated@@165 $generated@@172 $generated@@173) (= ($generated@@171 $generated@@172) ($generated@@171 $generated@@173))))
 :pattern ( ($generated@@165 $generated@@172 $generated@@173) ($generated@@170 $generated@@172))
 :pattern ( ($generated@@165 $generated@@172 $generated@@173) ($generated@@170 $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@174 $generated@@175)) $generated@@85)
 :pattern ( ($generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 Bool) ($generated@@178 T@U) ) (!  (=> (and (= (type $generated@@176) $generated@@90) (= (type $generated@@178) $generated@@90)) (= ($generated@@174 ($generated@@89 $generated@@176 $generated@@177 $generated@@178)) $generated@@74))
 :pattern ( ($generated@@89 $generated@@176 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@180 T@U) ) (! (= (type ($generated@@179 $generated@@180)) $generated@@90)
 :pattern ( ($generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 Bool) ($generated@@183 T@U) ) (!  (=> (and (= (type $generated@@181) $generated@@90) (= (type $generated@@183) $generated@@90)) (= ($generated@@179 ($generated@@89 $generated@@181 $generated@@182 $generated@@183)) $generated@@181))
 :pattern ( ($generated@@89 $generated@@181 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@184 $generated@@185)) $generated@@90)
 :pattern ( ($generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 Bool) ($generated@@188 T@U) ) (!  (=> (and (= (type $generated@@186) $generated@@90) (= (type $generated@@188) $generated@@90)) (= ($generated@@184 ($generated@@89 $generated@@186 $generated@@187 $generated@@188)) $generated@@188))
 :pattern ( ($generated@@89 $generated@@186 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (!  (=> (= (type $generated@@190) $generated@@2) ($generated@@189 $generated@@190 ($generated@@101 0)))
 :pattern ( ($generated@@189 $generated@@190 ($generated@@101 0)))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (! (= (type ($generated@@192 $generated@@193 $generated@@194)) $generated@@81)
 :pattern ( ($generated@@192 $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and (and (= (type $generated@@195) $generated@@81) (= (type $generated@@196) $generated@@81)) (= (type $generated@@197) $generated@@90)) ($generated@@189 $generated@@197 ($generated@@192 $generated@@195 $generated@@196))) ($generated@@191 $generated@@197))
 :pattern ( ($generated@@191 $generated@@197) ($generated@@189 $generated@@197 ($generated@@192 $generated@@195 $generated@@196)))
)))
(assert  (and (and (= ($generated@@1 $generated@@201) 15) (forall (($generated@@202 T@U) ) (! (= (type ($generated@@199 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@199 $generated@@202))
))) (forall (($generated@@203 T@U) ) (! (= (type ($generated@@200 $generated@@203)) $generated@@201)
 :pattern ( ($generated@@200 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (and (= (type $generated@@204) $generated@@90) (= (type $generated@@205) $generated@@90)) true) (= ($generated@@198 $generated@@204 $generated@@205)  (and (= ($generated@@199 $generated@@204) ($generated@@199 $generated@@205)) (= ($generated@@200 $generated@@204) ($generated@@200 $generated@@205)))))
 :pattern ( ($generated@@198 $generated@@204 $generated@@205))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> (and (and (= (type $generated@@209) $generated@@90) (= (type $generated@@210) $generated@@90)) true) (= ($generated@@206 $generated@@209 $generated@@210)  (and (= ($generated@@207 $generated@@209) ($generated@@207 $generated@@210)) (= ($generated@@208 $generated@@209) ($generated@@208 $generated@@210)))))
 :pattern ( ($generated@@206 $generated@@209 $generated@@210))
)))
(assert (= (type $generated@@211) $generated@@90))
(assert (= ($generated@@174 $generated@@211) $generated@@67))
(assert (= (type $generated@@212) $generated@@90))
(assert (= ($generated@@174 $generated@@212) $generated@@72))
(assert (forall (($generated@@215 T@U) ) (! (= (type ($generated@@213 $generated@@215)) $generated@@81)
 :pattern ( ($generated@@213 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (and (and (= (type $generated@@216) ($generated@@102 $generated@@201 $generated@@2)) (= (type $generated@@217) $generated@@81)) ($generated@@189 $generated@@216 ($generated@@213 $generated@@217))) ($generated@@214 $generated@@216))
 :pattern ( ($generated@@189 $generated@@216 ($generated@@213 $generated@@217)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@224 T@T) ($generated@@225 T@T) ) (= ($generated@@1 ($generated@@220 $generated@@224 $generated@@225)) 16)) (forall (($generated@@226 T@T) ($generated@@227 T@T) ) (! (= ($generated@@221 ($generated@@220 $generated@@226 $generated@@227)) $generated@@226)
 :pattern ( ($generated@@220 $generated@@226 $generated@@227))
))) (forall (($generated@@228 T@T) ($generated@@229 T@T) ) (! (= ($generated@@222 ($generated@@220 $generated@@228 $generated@@229)) $generated@@229)
 :pattern ( ($generated@@220 $generated@@228 $generated@@229))
))) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@222 (type $generated@@230))))
(= (type ($generated@@218 $generated@@230 $generated@@231 $generated@@232)) $generated@@233))
 :pattern ( ($generated@@218 $generated@@230 $generated@@231 $generated@@232))
))) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 (type $generated@@237)))
(let (($generated@@239 (type $generated@@235)))
(= (type ($generated@@223 $generated@@234 $generated@@235 $generated@@236 $generated@@237)) ($generated@@220 $generated@@239 $generated@@238))))
 :pattern ( ($generated@@223 $generated@@234 $generated@@235 $generated@@236 $generated@@237))
))) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (let (($generated@@244 ($generated@@222 (type $generated@@240))))
 (=> (= (type $generated@@243) $generated@@244) (= ($generated@@218 ($generated@@223 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@241 $generated@@242) $generated@@243)))
 :weight 0
))) (and (and (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (or (= $generated@@247 $generated@@249) (= ($generated@@218 ($generated@@223 $generated@@246 $generated@@247 $generated@@248 $generated@@245) $generated@@249 $generated@@250) ($generated@@218 $generated@@246 $generated@@249 $generated@@250)))
 :weight 0
)) (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (or (= $generated@@254 $generated@@256) (= ($generated@@218 ($generated@@223 $generated@@252 $generated@@253 $generated@@254 $generated@@251) $generated@@255 $generated@@256) ($generated@@218 $generated@@252 $generated@@255 $generated@@256)))
 :weight 0
))) (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (or true (= ($generated@@218 ($generated@@223 $generated@@258 $generated@@259 $generated@@260 $generated@@257) $generated@@261 $generated@@262) ($generated@@218 $generated@@258 $generated@@261 $generated@@262)))
 :weight 0
)))) (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 Bool) ) (! (= (type ($generated@@219 $generated@@263 $generated@@264 $generated@@265 $generated@@266)) ($generated@@220 $generated@@103 $generated@@4))
 :pattern ( ($generated@@219 $generated@@263 $generated@@264 $generated@@265 $generated@@266))
))))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 Bool) ($generated@@271 T@U) ($generated@@272 T@U) ) (! (let (($generated@@273 ($generated@@84 (type $generated@@272))))
 (=> (and (and (and (and (= (type $generated@@267) $generated@@103) (= (type $generated@@268) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@269) ($generated@@83 $generated@@4))) (= (type $generated@@271) $generated@@103)) (= (type $generated@@272) ($generated@@83 $generated@@273))) (= ($generated@@0 ($generated@@218 ($generated@@219 $generated@@267 $generated@@268 $generated@@269 $generated@@270) $generated@@271 $generated@@272))  (=> (and (not (= $generated@@271 $generated@@267)) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@268 $generated@@271) $generated@@269))) $generated@@270))))
 :pattern ( ($generated@@218 ($generated@@219 $generated@@267 $generated@@268 $generated@@269 $generated@@270) $generated@@271 $generated@@272))
)))
(assert (= (type $generated@@275) $generated@@81))
(assert (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@90) ($generated@@189 $generated@@276 $generated@@275)) ($generated@@274 $generated@@276))
 :pattern ( ($generated@@274 $generated@@276) ($generated@@189 $generated@@276 $generated@@275))
)))
(assert (forall (($generated@@279 T@U) ) (! (= (type ($generated@@277 $generated@@279)) $generated@@81)
 :pattern ( ($generated@@277 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and (and (= (type $generated@@280) $generated@@81) (= (type $generated@@281) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@278 $generated@@281)) ($generated@@100 $generated@@211 ($generated@@277 $generated@@280) $generated@@281))
 :pattern ( ($generated@@100 $generated@@211 ($generated@@277 $generated@@280) $generated@@281))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (= (type ($generated@@282 $generated@@284 $generated@@285)) $generated@@90)
 :pattern ( ($generated@@282 $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (!  (=> (and (and (and (= (type $generated@@286) $generated@@81) (= (type $generated@@287) $generated@@81)) (= (type $generated@@288) $generated@@201)) (= (type $generated@@289) $generated@@201)) (= ($generated@@189 ($generated@@282 $generated@@288 $generated@@289) ($generated@@192 $generated@@286 $generated@@287))  (and ($generated@@283 $generated@@288 $generated@@286) ($generated@@283 $generated@@289 $generated@@287))))
 :pattern ( ($generated@@189 ($generated@@282 $generated@@288 $generated@@289) ($generated@@192 $generated@@286 $generated@@287)))
)))
(assert (= (type $generated@@290) $generated@@81))
(assert ($generated@@189 $generated@@212 $generated@@290))
(assert (forall (($generated@@291 T@U) ) (!  (=> (and (= (type $generated@@291) ($generated@@102 $generated@@103 $generated@@104)) ($generated@@278 $generated@@291)) ($generated@@100 $generated@@212 $generated@@290 $generated@@291))
 :pattern ( ($generated@@100 $generated@@212 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ) (!  (=> (= (type $generated@@292) $generated@@81) ($generated@@189 $generated@@211 ($generated@@277 $generated@@292)))
 :pattern ( ($generated@@189 $generated@@211 ($generated@@277 $generated@@292)))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (= (type $generated@@295) $generated@@90) (= (type $generated@@296) $generated@@90)) (and ($generated@@294 $generated@@295) ($generated@@294 $generated@@296))) (= ($generated@@293 $generated@@295 $generated@@296)  (and (and ($generated@@293 ($generated@@179 $generated@@295) ($generated@@179 $generated@@296)) (= ($generated@@91 $generated@@295) ($generated@@91 $generated@@296))) ($generated@@293 ($generated@@184 $generated@@295) ($generated@@184 $generated@@296)))))
 :pattern ( ($generated@@293 $generated@@295 $generated@@296) ($generated@@294 $generated@@295))
 :pattern ( ($generated@@293 $generated@@295 $generated@@296) ($generated@@294 $generated@@296))
)))
(assert (forall (($generated@@298 Int) ($generated@@299 Int) ) (! (= (type ($generated@@297 $generated@@298 $generated@@299)) $generated@@90)
 :pattern ( ($generated@@297 $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 Int) ($generated@@301 Int) ) (! (= ($generated@@189 ($generated@@297 $generated@@300 $generated@@301) $generated@@275)  (and ($generated@@189 ($generated@@8 $generated@@300) $generated@@46) ($generated@@189 ($generated@@8 $generated@@301) $generated@@46)))
 :pattern ( ($generated@@189 ($generated@@297 $generated@@300 $generated@@301) $generated@@275))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@90) (= (type $generated@@303) $generated@@90)) (= ($generated@@198 $generated@@302 $generated@@303) (= $generated@@302 $generated@@303)))
 :pattern ( ($generated@@198 $generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (= (type $generated@@304) $generated@@90) (= (type $generated@@305) $generated@@90)) (= ($generated@@165 $generated@@304 $generated@@305) (= $generated@@304 $generated@@305)))
 :pattern ( ($generated@@165 $generated@@304 $generated@@305))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and (= (type $generated@@307) $generated@@90) (= (type $generated@@308) $generated@@90)) (= ($generated@@306 $generated@@307 $generated@@308) (= $generated@@307 $generated@@308)))
 :pattern ( ($generated@@306 $generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@90) (= (type $generated@@310) $generated@@90)) (= ($generated@@206 $generated@@309 $generated@@310) (= $generated@@309 $generated@@310)))
 :pattern ( ($generated@@206 $generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@90) (= (type $generated@@312) $generated@@90)) (= ($generated@@293 $generated@@311 $generated@@312) (= $generated@@311 $generated@@312)))
 :pattern ( ($generated@@293 $generated@@311 $generated@@312))
)))
(assert  (and (forall (($generated@@316 T@U) ) (! (= (type ($generated@@314 $generated@@316)) $generated@@201)
 :pattern ( ($generated@@314 $generated@@316))
)) (forall (($generated@@317 T@U) ) (! (= (type ($generated@@315 $generated@@317)) $generated@@90)
 :pattern ( ($generated@@315 $generated@@317))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ) (!  (=> (and (and (= (type $generated@@318) $generated@@90) (= (type $generated@@319) $generated@@90)) (and ($generated@@313 $generated@@318) ($generated@@313 $generated@@319))) (= ($generated@@306 $generated@@318 $generated@@319)  (and (= ($generated@@314 $generated@@318) ($generated@@314 $generated@@319)) ($generated@@306 ($generated@@315 $generated@@318) ($generated@@315 $generated@@319)))))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319) ($generated@@313 $generated@@318))
 :pattern ( ($generated@@306 $generated@@318 $generated@@319) ($generated@@313 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (! (= (type ($generated@@320 $generated@@321)) $generated@@81)
 :pattern ( ($generated@@320 $generated@@321))
)))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) ($generated@@102 $generated@@201 $generated@@4)) (= (type $generated@@323) $generated@@81)) (= ($generated@@189 $generated@@322 ($generated@@320 $generated@@323)) (forall (($generated@@324 T@U) ) (!  (=> (and (= (type $generated@@324) $generated@@201) ($generated@@0 ($generated@@107 $generated@@322 $generated@@324))) ($generated@@283 $generated@@324 $generated@@323))
 :pattern ( ($generated@@107 $generated@@322 $generated@@324))
))))
 :pattern ( ($generated@@189 $generated@@322 ($generated@@320 $generated@@323)))
)))
(assert (forall (($generated@@326 T@U) ) (! (= (type ($generated@@325 $generated@@326)) $generated@@81)
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@327) ($generated@@102 $generated@@201 $generated@@4)) (= (type $generated@@328) $generated@@81)) (= ($generated@@189 $generated@@327 ($generated@@325 $generated@@328)) (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@201) ($generated@@0 ($generated@@107 $generated@@327 $generated@@329))) ($generated@@283 $generated@@329 $generated@@328))
 :pattern ( ($generated@@107 $generated@@327 $generated@@329))
))))
 :pattern ( ($generated@@189 $generated@@327 ($generated@@325 $generated@@328)))
)))
(assert (forall (($generated@@331 Int) ) (! (= ($generated@@330 $generated@@331) $generated@@331)
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@333 T@U) ) (! (let (($generated@@334 (type $generated@@333)))
(= (type ($generated@@332 $generated@@333)) $generated@@334))
 :pattern ( ($generated@@332 $generated@@333))
)))
(assert (forall (($generated@@335 T@U) ) (! (= ($generated@@332 $generated@@335) $generated@@335)
 :pattern ( ($generated@@332 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 Bool) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (and (= (type $generated@@336) $generated@@90) (= (type $generated@@338) $generated@@90)) (= (type $generated@@339) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@278 $generated@@339)) (= ($generated@@100 ($generated@@89 $generated@@336 $generated@@337 $generated@@338) $generated@@290 $generated@@339)  (and (and ($generated@@100 $generated@@336 $generated@@290 $generated@@339) ($generated@@100 ($generated@@11 $generated@@337) $generated@@44 $generated@@339)) ($generated@@100 $generated@@338 $generated@@290 $generated@@339))))
 :pattern ( ($generated@@100 ($generated@@89 $generated@@336 $generated@@337 $generated@@338) $generated@@290 $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@U) ) (!  (=> (and (and (= (type $generated@@341) $generated@@90) (= (type $generated@@342) $generated@@90)) (and ($generated@@340 $generated@@341) ($generated@@340 $generated@@342))) (= ($generated@@306 $generated@@341 $generated@@342) true))
 :pattern ( ($generated@@306 $generated@@341 $generated@@342) ($generated@@340 $generated@@341))
 :pattern ( ($generated@@306 $generated@@341 $generated@@342) ($generated@@340 $generated@@342))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ) (!  (=> (and (and (= (type $generated@@344) $generated@@90) (= (type $generated@@345) $generated@@90)) (and ($generated@@343 $generated@@344) ($generated@@343 $generated@@345))) (= ($generated@@293 $generated@@344 $generated@@345) true))
 :pattern ( ($generated@@293 $generated@@344 $generated@@345) ($generated@@343 $generated@@344))
 :pattern ( ($generated@@293 $generated@@344 $generated@@345) ($generated@@343 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@U) ) (! (= (type ($generated@@346 $generated@@347 $generated@@348)) $generated@@90)
 :pattern ( ($generated@@346 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (= (type $generated@@349) $generated@@81) (= (type $generated@@350) $generated@@201)) (= (type $generated@@351) $generated@@90)) (= ($generated@@189 ($generated@@346 $generated@@350 $generated@@351) ($generated@@277 $generated@@349))  (and ($generated@@283 $generated@@350 $generated@@349) ($generated@@189 $generated@@351 ($generated@@277 $generated@@349)))))
 :pattern ( ($generated@@189 ($generated@@346 $generated@@350 $generated@@351) ($generated@@277 $generated@@349)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ($generated@@357 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@353) $generated@@81) (= (type $generated@@354) $generated@@81)) (= (type $generated@@355) $generated@@201)) (= (type $generated@@356) $generated@@201)) (= (type $generated@@357) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@278 $generated@@357)) (= ($generated@@100 ($generated@@282 $generated@@355 $generated@@356) ($generated@@192 $generated@@353 $generated@@354) $generated@@357)  (and ($generated@@352 $generated@@355 $generated@@353 $generated@@357) ($generated@@352 $generated@@356 $generated@@354 $generated@@357))))
 :pattern ( ($generated@@100 ($generated@@282 $generated@@355 $generated@@356) ($generated@@192 $generated@@353 $generated@@354) $generated@@357))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@90) (= ($generated@@191 $generated@@358) (= ($generated@@174 $generated@@358) $generated@@62)))
 :pattern ( ($generated@@191 $generated@@358))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@90) (= ($generated@@166 $generated@@359) (= ($generated@@174 $generated@@359) $generated@@64)))
 :pattern ( ($generated@@166 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@90) (= ($generated@@170 $generated@@360) (= ($generated@@174 $generated@@360) $generated@@66)))
 :pattern ( ($generated@@170 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@90) (= ($generated@@340 $generated@@361) (= ($generated@@174 $generated@@361) $generated@@67)))
 :pattern ( ($generated@@340 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (= (type $generated@@362) $generated@@90) (= ($generated@@313 $generated@@362) (= ($generated@@174 $generated@@362) $generated@@69)))
 :pattern ( ($generated@@313 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (= (type $generated@@363) $generated@@90) (= ($generated@@274 $generated@@363) (= ($generated@@174 $generated@@363) $generated@@70)))
 :pattern ( ($generated@@274 $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (= (type $generated@@364) $generated@@90) (= ($generated@@343 $generated@@364) (= ($generated@@174 $generated@@364) $generated@@72)))
 :pattern ( ($generated@@343 $generated@@364))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (= (type $generated@@365) $generated@@90) (= ($generated@@294 $generated@@365) (= ($generated@@174 $generated@@365) $generated@@74)))
 :pattern ( ($generated@@294 $generated@@365))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@90) ($generated@@294 $generated@@366)) (exists (($generated@@367 T@U) ($generated@@368 Bool) ($generated@@369 T@U) ) (!  (and (and (= (type $generated@@367) $generated@@90) (= (type $generated@@369) $generated@@90)) (= $generated@@366 ($generated@@89 $generated@@367 $generated@@368 $generated@@369)))
 :no-pattern (type $generated@@367)
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
)))
 :pattern ( ($generated@@294 $generated@@366))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@90) ($generated@@191 $generated@@370)) (exists (($generated@@371 T@U) ($generated@@372 T@U) ) (!  (and (and (= (type $generated@@371) $generated@@201) (= (type $generated@@372) $generated@@201)) (= $generated@@370 ($generated@@282 $generated@@371 $generated@@372)))
 :no-pattern (type $generated@@371)
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
)))
 :pattern ( ($generated@@191 $generated@@370))
)))
(assert (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@90) ($generated@@313 $generated@@373)) (exists (($generated@@374 T@U) ($generated@@375 T@U) ) (!  (and (and (= (type $generated@@374) $generated@@201) (= (type $generated@@375) $generated@@90)) (= $generated@@373 ($generated@@346 $generated@@374 $generated@@375)))
 :no-pattern (type $generated@@374)
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
)))
 :pattern ( ($generated@@313 $generated@@373))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@90) ($generated@@274 $generated@@376)) (exists (($generated@@377 Int) ($generated@@378 Int) ) (= $generated@@376 ($generated@@297 $generated@@377 $generated@@378))))
 :pattern ( ($generated@@274 $generated@@376))
)))
(assert  (and (and (forall (($generated@@383 T@T) ) (= ($generated@@1 ($generated@@381 $generated@@383)) 17)) (forall (($generated@@384 T@T) ) (! (= ($generated@@382 ($generated@@381 $generated@@384)) $generated@@384)
 :pattern ( ($generated@@381 $generated@@384))
))) (forall (($generated@@385 T@T) ) (! (= (type ($generated@@379 $generated@@385)) ($generated@@381 $generated@@385))
 :pattern ( ($generated@@379 $generated@@385))
))))
(assert (forall (($generated@@386 T@T) ) (! (= ($generated@@380 ($generated@@379 $generated@@386)) 0)
 :pattern ( ($generated@@379 $generated@@386))
)))
(assert (forall (($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@387) $generated@@90) ($generated@@340 $generated@@387)) (= $generated@@387 $generated@@211))
 :pattern ( ($generated@@340 $generated@@387))
)))
(assert (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@90) ($generated@@343 $generated@@388)) (= $generated@@388 $generated@@212))
 :pattern ( ($generated@@343 $generated@@388))
)))
(assert (forall (($generated@@390 Int) ) (! (= (type ($generated@@389 $generated@@390)) $generated@@90)
 :pattern ( ($generated@@389 $generated@@390))
)))
(assert (forall (($generated@@391 T@U) ) (!  (=> (and (= (type $generated@@391) $generated@@90) ($generated@@166 $generated@@391)) (exists (($generated@@392 Int) ) (= $generated@@391 ($generated@@389 $generated@@392))))
 :pattern ( ($generated@@166 $generated@@391))
)))
(assert (forall (($generated@@394 Int) ) (! (= (type ($generated@@393 $generated@@394)) $generated@@90)
 :pattern ( ($generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@90) ($generated@@170 $generated@@395)) (exists (($generated@@396 Int) ) (= $generated@@395 ($generated@@393 $generated@@396))))
 :pattern ( ($generated@@170 $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (!  (=> (= (type $generated@@397) $generated@@2) (= ($generated@@189 $generated@@397 $generated@@162) (<= ($generated@@330 0) ($generated $generated@@397))))
 :pattern ( ($generated@@189 $generated@@397 $generated@@162))
)))
(assert (forall (($generated@@399 T@U) ) (! (= (type ($generated@@398 $generated@@399)) $generated@@201)
 :pattern ( ($generated@@398 $generated@@399))
)))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@81) (= (type $generated@@402) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@352 ($generated@@398 $generated@@400) $generated@@401 $generated@@402) ($generated@@100 $generated@@400 $generated@@401 $generated@@402)))
 :pattern ( ($generated@@352 ($generated@@398 $generated@@400) $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@403) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@404) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@405) $generated@@201)) (= (type $generated@@406) $generated@@81)) ($generated@@158 $generated@@403 $generated@@404)) ($generated@@352 $generated@@405 $generated@@406 $generated@@403)) ($generated@@352 $generated@@405 $generated@@406 $generated@@404))
 :pattern ( ($generated@@158 $generated@@403 $generated@@404) ($generated@@352 $generated@@405 $generated@@406 $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@407) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@408) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@410) $generated@@81)) ($generated@@158 $generated@@407 $generated@@408)) ($generated@@100 $generated@@409 $generated@@410 $generated@@407)) ($generated@@100 $generated@@409 $generated@@410 $generated@@408))
 :pattern ( ($generated@@158 $generated@@407 $generated@@408) ($generated@@100 $generated@@409 $generated@@410 $generated@@407))
)))
(assert (forall (($generated@@413 T@T) ) (! (= (type ($generated@@412 $generated@@413)) ($generated@@102 $generated@@413 $generated@@2))
 :pattern ( ($generated@@412 $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@105 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@102 $generated@@415 $generated@@2)) (and (= (= ($generated@@411 $generated@@414) 0) (= $generated@@414 ($generated@@412 $generated@@415))) (=> (not (= ($generated@@411 $generated@@414) 0)) (exists (($generated@@416 T@U) ) (!  (and (= (type $generated@@416) $generated@@415) (< 0 ($generated ($generated@@107 $generated@@414 $generated@@416))))
 :no-pattern (type $generated@@416)
 :no-pattern ($generated $generated@@416)
 :no-pattern ($generated@@0 $generated@@416)
))))))
 :pattern ( ($generated@@411 $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ) (! (= (type ($generated@@417 $generated@@418)) $generated@@86)
 :pattern ( ($generated@@417 $generated@@418))
)))
(assert (forall (($generated@@419 T@U) ) (!  (=> (= (type $generated@@419) $generated@@81) (and (= ($generated@@98 ($generated@@277 $generated@@419)) $generated@@68) (= ($generated@@417 ($generated@@277 $generated@@419)) $generated@@78)))
 :pattern ( ($generated@@277 $generated@@419))
)))
(assert  (and (and (and (and (forall (($generated@@425 T@T) ($generated@@426 T@T) ) (= ($generated@@1 ($generated@@422 $generated@@425 $generated@@426)) 18)) (forall (($generated@@427 T@T) ($generated@@428 T@T) ) (! (= ($generated@@423 ($generated@@422 $generated@@427 $generated@@428)) $generated@@427)
 :pattern ( ($generated@@422 $generated@@427 $generated@@428))
))) (forall (($generated@@429 T@T) ($generated@@430 T@T) ) (! (= ($generated@@424 ($generated@@422 $generated@@429 $generated@@430)) $generated@@430)
 :pattern ( ($generated@@422 $generated@@429 $generated@@430))
))) (forall (($generated@@431 T@U) ) (! (let (($generated@@432 ($generated@@423 (type $generated@@431))))
(= (type ($generated@@420 $generated@@431)) ($generated@@102 $generated@@432 $generated@@4)))
 :pattern ( ($generated@@420 $generated@@431))
))) (forall (($generated@@433 T@T) ($generated@@434 T@T) ) (! (= (type ($generated@@421 $generated@@433 $generated@@434)) ($generated@@422 $generated@@433 $generated@@434))
 :pattern ( ($generated@@421 $generated@@433 $generated@@434))
))))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@T) ) (! (let (($generated@@437 (type $generated@@435)))
 (not ($generated@@0 ($generated@@107 ($generated@@420 ($generated@@421 $generated@@437 $generated@@436)) $generated@@435))))
 :pattern ( (let (($generated@@437 (type $generated@@435)))
($generated@@107 ($generated@@420 ($generated@@421 $generated@@437 $generated@@436)) $generated@@435)))
)))
(assert  (and (and (and (and (forall (($generated@@443 T@T) ($generated@@444 T@T) ) (= ($generated@@1 ($generated@@440 $generated@@443 $generated@@444)) 19)) (forall (($generated@@445 T@T) ($generated@@446 T@T) ) (! (= ($generated@@441 ($generated@@440 $generated@@445 $generated@@446)) $generated@@445)
 :pattern ( ($generated@@440 $generated@@445 $generated@@446))
))) (forall (($generated@@447 T@T) ($generated@@448 T@T) ) (! (= ($generated@@442 ($generated@@440 $generated@@447 $generated@@448)) $generated@@448)
 :pattern ( ($generated@@440 $generated@@447 $generated@@448))
))) (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@441 (type $generated@@449))))
(= (type ($generated@@438 $generated@@449)) ($generated@@102 $generated@@450 $generated@@4)))
 :pattern ( ($generated@@438 $generated@@449))
))) (forall (($generated@@451 T@T) ($generated@@452 T@T) ) (! (= (type ($generated@@439 $generated@@451 $generated@@452)) ($generated@@440 $generated@@451 $generated@@452))
 :pattern ( ($generated@@439 $generated@@451 $generated@@452))
))))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@T) ) (! (let (($generated@@455 (type $generated@@453)))
 (not ($generated@@0 ($generated@@107 ($generated@@438 ($generated@@439 $generated@@455 $generated@@454)) $generated@@453))))
 :pattern ( (let (($generated@@455 (type $generated@@453)))
($generated@@107 ($generated@@438 ($generated@@439 $generated@@455 $generated@@454)) $generated@@453)))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@105 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@102 $generated@@457 $generated@@2)) (= ($generated@@214 $generated@@456) (forall (($generated@@458 T@U) ) (!  (=> (= (type $generated@@458) $generated@@457) (and (<= 0 ($generated ($generated@@107 $generated@@456 $generated@@458))) (<= ($generated ($generated@@107 $generated@@456 $generated@@458)) ($generated@@411 $generated@@456))))
 :pattern ( ($generated@@107 $generated@@456 $generated@@458))
)))))
 :pattern ( ($generated@@214 $generated@@456))
)))
(assert (forall (($generated@@460 T@T) ($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@460 $generated@@461)) $generated@@460)
 :pattern ( ($generated@@459 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@201) ($generated@@283 $generated@@462 $generated@@162)) (and (= ($generated@@398 ($generated@@459 $generated@@2 $generated@@462)) $generated@@462) ($generated@@189 ($generated@@459 $generated@@2 $generated@@462) $generated@@162)))
 :pattern ( ($generated@@283 $generated@@462 $generated@@162))
)))
(assert (= (type $generated@@463) $generated@@81))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@201) ($generated@@283 $generated@@464 $generated@@463)) (and (= ($generated@@398 ($generated@@459 $generated@@90 $generated@@464)) $generated@@464) ($generated@@189 ($generated@@459 $generated@@90 $generated@@464) $generated@@463)))
 :pattern ( ($generated@@283 $generated@@464 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@201) ($generated@@283 $generated@@465 $generated@@275)) (and (= ($generated@@398 ($generated@@459 $generated@@90 $generated@@465)) $generated@@465) ($generated@@189 ($generated@@459 $generated@@90 $generated@@465) $generated@@275)))
 :pattern ( ($generated@@283 $generated@@465 $generated@@275))
)))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@201) ($generated@@283 $generated@@466 $generated@@290)) (and (= ($generated@@398 ($generated@@459 $generated@@90 $generated@@466)) $generated@@466) ($generated@@189 ($generated@@459 $generated@@90 $generated@@466) $generated@@290)))
 :pattern ( ($generated@@283 $generated@@466 $generated@@290))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@424 (type $generated@@467))))
(let (($generated@@469 ($generated@@423 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@422 $generated@@469 $generated@@468)) (or (= $generated@@467 ($generated@@421 $generated@@469 $generated@@468)) (exists (($generated@@470 T@U) ) (!  (and (= (type $generated@@470) $generated@@469) ($generated@@0 ($generated@@107 ($generated@@420 $generated@@467) $generated@@470)))
 :no-pattern (type $generated@@470)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
))))))
 :pattern ( ($generated@@420 $generated@@467))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@424 (type $generated@@472))))
(= (type ($generated@@471 $generated@@472)) ($generated@@102 $generated@@473 $generated@@4)))
 :pattern ( ($generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@424 (type $generated@@474))))
(let (($generated@@476 ($generated@@423 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@422 $generated@@476 $generated@@475)) (or (= $generated@@474 ($generated@@421 $generated@@476 $generated@@475)) (exists (($generated@@477 T@U) ) (!  (and (= (type $generated@@477) $generated@@475) ($generated@@0 ($generated@@107 ($generated@@471 $generated@@474) $generated@@477)))
 :no-pattern (type $generated@@477)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
))))))
 :pattern ( ($generated@@471 $generated@@474))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@442 (type $generated@@478))))
(let (($generated@@480 ($generated@@441 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@440 $generated@@480 $generated@@479)) (or (= $generated@@478 ($generated@@439 $generated@@480 $generated@@479)) (exists (($generated@@481 T@U) ) (!  (and (= (type $generated@@481) $generated@@480) ($generated@@0 ($generated@@107 ($generated@@438 $generated@@478) $generated@@481)))
 :no-pattern (type $generated@@481)
 :no-pattern ($generated $generated@@481)
 :no-pattern ($generated@@0 $generated@@481)
))))))
 :pattern ( ($generated@@438 $generated@@478))
)))
(assert (forall (($generated@@483 T@U) ) (! (let (($generated@@484 ($generated@@442 (type $generated@@483))))
(= (type ($generated@@482 $generated@@483)) ($generated@@102 $generated@@484 $generated@@4)))
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@485 T@U) ) (! (let (($generated@@486 ($generated@@442 (type $generated@@485))))
(let (($generated@@487 ($generated@@441 (type $generated@@485))))
 (=> (= (type $generated@@485) ($generated@@440 $generated@@487 $generated@@486)) (or (= $generated@@485 ($generated@@439 $generated@@487 $generated@@486)) (exists (($generated@@488 T@U) ) (!  (and (= (type $generated@@488) $generated@@486) ($generated@@0 ($generated@@107 ($generated@@482 $generated@@485) $generated@@488)))
 :no-pattern (type $generated@@488)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
))))))
 :pattern ( ($generated@@482 $generated@@485))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) ($generated@@102 $generated@@201 $generated@@2)) (= (type $generated@@490) $generated@@81)) (= ($generated@@189 $generated@@489 ($generated@@213 $generated@@490)) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@201) (< 0 ($generated ($generated@@107 $generated@@489 $generated@@491)))) ($generated@@283 $generated@@491 $generated@@490))
 :pattern ( ($generated@@107 $generated@@489 $generated@@491))
))))
 :pattern ( ($generated@@189 $generated@@489 ($generated@@213 $generated@@490)))
)))
(assert (forall (($generated@@492 Int) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) ($generated@@102 $generated@@103 $generated@@104)) ($generated@@278 $generated@@493)) (= ($generated@@100 ($generated@@389 $generated@@492) $generated@@463 $generated@@493) ($generated@@100 ($generated@@8 $generated@@492) $generated@@46 $generated@@493)))
 :pattern ( ($generated@@100 ($generated@@389 $generated@@492) $generated@@463 $generated@@493))
)))
(assert (forall (($generated@@494 Int) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) ($generated@@102 $generated@@103 $generated@@104)) ($generated@@278 $generated@@495)) (= ($generated@@100 ($generated@@393 $generated@@494) $generated@@463 $generated@@495) ($generated@@100 ($generated@@8 $generated@@494) $generated@@46 $generated@@495)))
 :pattern ( ($generated@@100 ($generated@@393 $generated@@494) $generated@@463 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (and (= (type $generated@@496) ($generated@@102 $generated@@201 $generated@@4)) (= (type $generated@@497) $generated@@81)) (= (type $generated@@498) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@496 ($generated@@320 $generated@@497) $generated@@498) (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@201) ($generated@@0 ($generated@@107 $generated@@496 $generated@@499))) ($generated@@352 $generated@@499 $generated@@497 $generated@@498))
 :pattern ( ($generated@@107 $generated@@496 $generated@@499))
))))
 :pattern ( ($generated@@100 $generated@@496 ($generated@@320 $generated@@497) $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@500) ($generated@@102 $generated@@201 $generated@@4)) (= (type $generated@@501) $generated@@81)) (= (type $generated@@502) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@500 ($generated@@325 $generated@@501) $generated@@502) (forall (($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@201) ($generated@@0 ($generated@@107 $generated@@500 $generated@@503))) ($generated@@352 $generated@@503 $generated@@501 $generated@@502))
 :pattern ( ($generated@@107 $generated@@500 $generated@@503))
))))
 :pattern ( ($generated@@100 $generated@@500 ($generated@@325 $generated@@501) $generated@@502))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated ($generated@@107 ($generated@@412 $generated@@505) $generated@@504)) 0))
 :pattern ( (let (($generated@@505 (type $generated@@504)))
($generated@@107 ($generated@@412 $generated@@505) $generated@@504)))
)))
(assert  (and (forall (($generated@@508 T@U) ) (! (= (type ($generated@@506 $generated@@508)) ($generated@@102 $generated@@201 $generated@@4))
 :pattern ( ($generated@@506 $generated@@508))
)) (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@424 (type $generated@@509))))
(let (($generated@@511 ($generated@@423 (type $generated@@509))))
(= (type ($generated@@507 $generated@@509)) ($generated@@102 $generated@@511 $generated@@510))))
 :pattern ( ($generated@@507 $generated@@509))
))))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) ($generated@@422 $generated@@201 $generated@@201)) (= (type $generated@@513) $generated@@201)) (= ($generated@@0 ($generated@@107 ($generated@@506 $generated@@512) $generated@@513))  (and ($generated@@0 ($generated@@107 ($generated@@420 $generated@@512) ($generated@@199 ($generated@@459 $generated@@90 $generated@@513)))) (= ($generated@@107 ($generated@@507 $generated@@512) ($generated@@199 ($generated@@459 $generated@@90 $generated@@513))) ($generated@@200 ($generated@@459 $generated@@90 $generated@@513))))))
 :pattern ( ($generated@@107 ($generated@@506 $generated@@512) $generated@@513))
)))
(assert  (and (forall (($generated@@516 T@U) ) (! (= (type ($generated@@514 $generated@@516)) ($generated@@102 $generated@@201 $generated@@4))
 :pattern ( ($generated@@514 $generated@@516))
)) (forall (($generated@@517 T@U) ) (! (let (($generated@@518 ($generated@@442 (type $generated@@517))))
(let (($generated@@519 ($generated@@441 (type $generated@@517))))
(= (type ($generated@@515 $generated@@517)) ($generated@@102 $generated@@519 $generated@@518))))
 :pattern ( ($generated@@515 $generated@@517))
))))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) ($generated@@440 $generated@@201 $generated@@201)) (= (type $generated@@521) $generated@@201)) (= ($generated@@0 ($generated@@107 ($generated@@514 $generated@@520) $generated@@521))  (and ($generated@@0 ($generated@@107 ($generated@@438 $generated@@520) ($generated@@199 ($generated@@459 $generated@@90 $generated@@521)))) (= ($generated@@107 ($generated@@515 $generated@@520) ($generated@@199 ($generated@@459 $generated@@90 $generated@@521))) ($generated@@200 ($generated@@459 $generated@@90 $generated@@521))))))
 :pattern ( ($generated@@107 ($generated@@514 $generated@@520) $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (! (let (($generated@@524 (type $generated@@523)))
(let (($generated@@525 ($generated@@423 (type $generated@@522))))
 (=> (= (type $generated@@522) ($generated@@422 $generated@@525 $generated@@524)) (= ($generated@@0 ($generated@@107 ($generated@@471 $generated@@522) $generated@@523)) (exists (($generated@@526 T@U) ) (!  (and (= (type $generated@@526) $generated@@525) (and ($generated@@0 ($generated@@107 ($generated@@420 $generated@@522) $generated@@526)) (= $generated@@523 ($generated@@107 ($generated@@507 $generated@@522) $generated@@526))))
 :pattern ( ($generated@@107 ($generated@@420 $generated@@522) $generated@@526))
 :pattern ( ($generated@@107 ($generated@@507 $generated@@522) $generated@@526))
))))))
 :pattern ( ($generated@@107 ($generated@@471 $generated@@522) $generated@@523))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
(let (($generated@@530 ($generated@@441 (type $generated@@527))))
 (=> (= (type $generated@@527) ($generated@@440 $generated@@530 $generated@@529)) (= ($generated@@0 ($generated@@107 ($generated@@482 $generated@@527) $generated@@528)) (exists (($generated@@531 T@U) ) (!  (and (= (type $generated@@531) $generated@@530) (and ($generated@@0 ($generated@@107 ($generated@@438 $generated@@527) $generated@@531)) (= $generated@@528 ($generated@@107 ($generated@@515 $generated@@527) $generated@@531))))
 :pattern ( ($generated@@107 ($generated@@438 $generated@@527) $generated@@531))
 :pattern ( ($generated@@107 ($generated@@515 $generated@@527) $generated@@531))
))))))
 :pattern ( ($generated@@107 ($generated@@482 $generated@@527) $generated@@528))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (! (= (type ($generated@@532 $generated@@533 $generated@@534)) $generated@@81)
 :pattern ( ($generated@@532 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (and (= (type $generated@@535) ($generated@@422 $generated@@201 $generated@@201)) (= (type $generated@@536) $generated@@81)) (= (type $generated@@537) $generated@@81)) (= (type $generated@@538) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@535 ($generated@@532 $generated@@536 $generated@@537) $generated@@538) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@201) ($generated@@0 ($generated@@107 ($generated@@420 $generated@@535) $generated@@539))) (and ($generated@@352 ($generated@@107 ($generated@@507 $generated@@535) $generated@@539) $generated@@537 $generated@@538) ($generated@@352 $generated@@539 $generated@@536 $generated@@538)))
 :pattern ( ($generated@@107 ($generated@@507 $generated@@535) $generated@@539))
 :pattern ( ($generated@@107 ($generated@@420 $generated@@535) $generated@@539))
))))
 :pattern ( ($generated@@100 $generated@@535 ($generated@@532 $generated@@536 $generated@@537) $generated@@538))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (! (= (type ($generated@@540 $generated@@541 $generated@@542)) $generated@@81)
 :pattern ( ($generated@@540 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (and (= (type $generated@@543) ($generated@@440 $generated@@201 $generated@@201)) (= (type $generated@@544) $generated@@81)) (= (type $generated@@545) $generated@@81)) (= (type $generated@@546) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@543 ($generated@@540 $generated@@544 $generated@@545) $generated@@546) (forall (($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@201) ($generated@@0 ($generated@@107 ($generated@@438 $generated@@543) $generated@@547))) (and ($generated@@352 ($generated@@107 ($generated@@515 $generated@@543) $generated@@547) $generated@@545 $generated@@546) ($generated@@352 $generated@@547 $generated@@544 $generated@@546)))
 :pattern ( ($generated@@107 ($generated@@515 $generated@@543) $generated@@547))
 :pattern ( ($generated@@107 ($generated@@438 $generated@@543) $generated@@547))
))))
 :pattern ( ($generated@@100 $generated@@543 ($generated@@540 $generated@@544 $generated@@545) $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (and (= (type $generated@@548) $generated@@81) (= (type $generated@@549) $generated@@90)) ($generated@@189 $generated@@549 ($generated@@277 $generated@@548))) (or ($generated@@340 $generated@@549) ($generated@@313 $generated@@549)))
 :pattern ( ($generated@@313 $generated@@549) ($generated@@189 $generated@@549 ($generated@@277 $generated@@548)))
 :pattern ( ($generated@@340 $generated@@549) ($generated@@189 $generated@@549 ($generated@@277 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@550) $generated@@90) ($generated@@189 $generated@@550 $generated@@463)) (or ($generated@@166 $generated@@550) ($generated@@170 $generated@@550)))
 :pattern ( ($generated@@170 $generated@@550) ($generated@@189 $generated@@550 $generated@@463))
 :pattern ( ($generated@@166 $generated@@550) ($generated@@189 $generated@@550 $generated@@463))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@90) ($generated@@189 $generated@@551 $generated@@290)) (or ($generated@@343 $generated@@551) ($generated@@294 $generated@@551)))
 :pattern ( ($generated@@294 $generated@@551) ($generated@@189 $generated@@551 $generated@@290))
 :pattern ( ($generated@@343 $generated@@551) ($generated@@189 $generated@@551 $generated@@290))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@552) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@553) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@554) ($generated@@102 $generated@@103 $generated@@104))) (not (= $generated@@552 $generated@@554))) (and ($generated@@158 $generated@@552 $generated@@553) ($generated@@158 $generated@@553 $generated@@554))) ($generated@@158 $generated@@552 $generated@@554))
 :pattern ( ($generated@@158 $generated@@552 $generated@@553) ($generated@@158 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@556 T@T) ) (! (= (type ($generated@@555 $generated@@556)) ($generated@@102 $generated@@556 $generated@@4))
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 ($generated@@442 (type $generated@@557))))
(let (($generated@@559 ($generated@@441 (type $generated@@557))))
 (=> (= (type $generated@@557) ($generated@@440 $generated@@559 $generated@@558)) (= (= $generated@@557 ($generated@@439 $generated@@559 $generated@@558)) (= ($generated@@438 $generated@@557) ($generated@@555 $generated@@559))))))
 :pattern ( ($generated@@438 $generated@@557))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 ($generated@@442 (type $generated@@560))))
(let (($generated@@562 ($generated@@441 (type $generated@@560))))
 (=> (= (type $generated@@560) ($generated@@440 $generated@@562 $generated@@561)) (= (= $generated@@560 ($generated@@439 $generated@@562 $generated@@561)) (= ($generated@@482 $generated@@560) ($generated@@555 $generated@@561))))))
 :pattern ( ($generated@@482 $generated@@560))
)))
(assert (forall (($generated@@563 T@U) ) (! (let (($generated@@564 ($generated@@442 (type $generated@@563))))
(let (($generated@@565 ($generated@@441 (type $generated@@563))))
 (=> (= (type $generated@@563) ($generated@@440 $generated@@565 $generated@@564)) (= (= $generated@@563 ($generated@@439 $generated@@565 $generated@@564)) (= ($generated@@514 $generated@@563) ($generated@@555 $generated@@201))))))
 :pattern ( ($generated@@514 $generated@@563))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 ($generated@@424 (type $generated@@566))))
(let (($generated@@568 ($generated@@423 (type $generated@@566))))
 (=> (= (type $generated@@566) ($generated@@422 $generated@@568 $generated@@567)) (or (= $generated@@566 ($generated@@421 $generated@@568 $generated@@567)) (exists (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (and (and (= (type $generated@@569) $generated@@201) (= (type $generated@@570) $generated@@201)) ($generated@@0 ($generated@@107 ($generated@@506 $generated@@566) ($generated@@398 ($generated@@282 $generated@@569 $generated@@570)))))
 :no-pattern (type $generated@@569)
 :no-pattern (type $generated@@570)
 :no-pattern ($generated $generated@@569)
 :no-pattern ($generated@@0 $generated@@569)
 :no-pattern ($generated $generated@@570)
 :no-pattern ($generated@@0 $generated@@570)
))))))
 :pattern ( ($generated@@506 $generated@@566))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 ($generated@@442 (type $generated@@571))))
(let (($generated@@573 ($generated@@441 (type $generated@@571))))
 (=> (= (type $generated@@571) ($generated@@440 $generated@@573 $generated@@572)) (or (= $generated@@571 ($generated@@439 $generated@@573 $generated@@572)) (exists (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (and (and (= (type $generated@@574) $generated@@201) (= (type $generated@@575) $generated@@201)) ($generated@@0 ($generated@@107 ($generated@@514 $generated@@571) ($generated@@398 ($generated@@282 $generated@@574 $generated@@575)))))
 :no-pattern (type $generated@@574)
 :no-pattern (type $generated@@575)
 :no-pattern ($generated $generated@@574)
 :no-pattern ($generated@@0 $generated@@574)
 :no-pattern ($generated $generated@@575)
 :no-pattern ($generated@@0 $generated@@575)
))))))
 :pattern ( ($generated@@514 $generated@@571))
)))
(assert (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@201) ($generated@@283 $generated@@576 $generated@@46)) (and (= ($generated@@398 ($generated@@459 $generated@@2 $generated@@576)) $generated@@576) ($generated@@189 ($generated@@459 $generated@@2 $generated@@576) $generated@@46)))
 :pattern ( ($generated@@283 $generated@@576 $generated@@46))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@201) ($generated@@283 $generated@@577 $generated@@47)) (and (= ($generated@@398 ($generated@@459 $generated@@3 $generated@@577)) $generated@@577) ($generated@@189 ($generated@@459 $generated@@3 $generated@@577) $generated@@47)))
 :pattern ( ($generated@@283 $generated@@577 $generated@@47))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@201) ($generated@@283 $generated@@578 $generated@@44)) (and (= ($generated@@398 ($generated@@459 $generated@@4 $generated@@578)) $generated@@578) ($generated@@189 ($generated@@459 $generated@@4 $generated@@578) $generated@@44)))
 :pattern ( ($generated@@283 $generated@@578 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@579) 20))
(assert (forall (($generated@@580 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@201) ($generated@@283 $generated@@580 $generated@@45)) (and (= ($generated@@398 ($generated@@459 $generated@@579 $generated@@580)) $generated@@580) ($generated@@189 ($generated@@459 $generated@@579 $generated@@580) $generated@@45)))
 :pattern ( ($generated@@283 $generated@@580 $generated@@45))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (= (type $generated@@582) $generated@@81) (= ($generated@@283 ($generated@@398 $generated@@581) $generated@@582) ($generated@@189 $generated@@581 $generated@@582)))
 :pattern ( ($generated@@283 ($generated@@398 $generated@@581) $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (! (let (($generated@@584 ($generated@@105 (type $generated@@583))))
 (=> (= (type $generated@@583) ($generated@@102 $generated@@584 $generated@@2)) (<= 0 ($generated@@411 $generated@@583))))
 :pattern ( ($generated@@411 $generated@@583))
)))
(assert (forall (($generated@@585 T@U) ) (! (let (($generated@@586 ($generated@@382 (type $generated@@585))))
 (=> (= (type $generated@@585) ($generated@@381 $generated@@586)) (<= 0 ($generated@@380 $generated@@585))))
 :pattern ( ($generated@@380 $generated@@585))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@81)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@81) (= (type $generated@@590) $generated@@81)) (= ($generated@@587 ($generated@@532 $generated@@589 $generated@@590)) $generated@@589))
 :pattern ( ($generated@@532 $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ) (! (= (type ($generated@@591 $generated@@592)) $generated@@81)
 :pattern ( ($generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@81) (= (type $generated@@594) $generated@@81)) (= ($generated@@591 ($generated@@532 $generated@@593 $generated@@594)) $generated@@594))
 :pattern ( ($generated@@532 $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) $generated@@81) (= (type $generated@@596) $generated@@81)) (= ($generated@@98 ($generated@@532 $generated@@595 $generated@@596)) $generated@@58))
 :pattern ( ($generated@@532 $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ) (! (= (type ($generated@@597 $generated@@598)) $generated@@81)
 :pattern ( ($generated@@597 $generated@@598))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) $generated@@81) (= (type $generated@@600) $generated@@81)) (= ($generated@@597 ($generated@@540 $generated@@599 $generated@@600)) $generated@@599))
 :pattern ( ($generated@@540 $generated@@599 $generated@@600))
)))
(assert (forall (($generated@@602 T@U) ) (! (= (type ($generated@@601 $generated@@602)) $generated@@81)
 :pattern ( ($generated@@601 $generated@@602))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@81) (= (type $generated@@604) $generated@@81)) (= ($generated@@601 ($generated@@540 $generated@@603 $generated@@604)) $generated@@604))
 :pattern ( ($generated@@540 $generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@81) (= (type $generated@@606) $generated@@81)) (= ($generated@@98 ($generated@@540 $generated@@605 $generated@@606)) $generated@@59))
 :pattern ( ($generated@@540 $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@201) (= (type $generated@@608) $generated@@201)) (= ($generated@@174 ($generated@@282 $generated@@607 $generated@@608)) $generated@@62))
 :pattern ( ($generated@@282 $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ) (! (= (type ($generated@@609 $generated@@610)) $generated@@81)
 :pattern ( ($generated@@609 $generated@@610))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@81) (= (type $generated@@612) $generated@@81)) (= ($generated@@609 ($generated@@192 $generated@@611 $generated@@612)) $generated@@611))
 :pattern ( ($generated@@192 $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ) (! (= (type ($generated@@613 $generated@@614)) $generated@@81)
 :pattern ( ($generated@@613 $generated@@614))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@81) (= (type $generated@@616) $generated@@81)) (= ($generated@@613 ($generated@@192 $generated@@615 $generated@@616)) $generated@@616))
 :pattern ( ($generated@@192 $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@201) (= (type $generated@@618) $generated@@201)) (= ($generated@@199 ($generated@@282 $generated@@617 $generated@@618)) $generated@@617))
 :pattern ( ($generated@@282 $generated@@617 $generated@@618))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (= (type $generated@@619) $generated@@201) (= (type $generated@@620) $generated@@201)) (= ($generated@@200 ($generated@@282 $generated@@619 $generated@@620)) $generated@@620))
 :pattern ( ($generated@@282 $generated@@619 $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@621) $generated@@201) (= (type $generated@@622) $generated@@90)) (= ($generated@@174 ($generated@@346 $generated@@621 $generated@@622)) $generated@@69))
 :pattern ( ($generated@@346 $generated@@621 $generated@@622))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@623) $generated@@201) (= (type $generated@@624) $generated@@90)) (= ($generated@@314 ($generated@@346 $generated@@623 $generated@@624)) $generated@@623))
 :pattern ( ($generated@@346 $generated@@623 $generated@@624))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@625) $generated@@201) (= (type $generated@@626) $generated@@90)) (= ($generated@@315 ($generated@@346 $generated@@625 $generated@@626)) $generated@@626))
 :pattern ( ($generated@@346 $generated@@625 $generated@@626))
)))
(assert (forall (($generated@@627 Int) ($generated@@628 Int) ) (! (= ($generated@@174 ($generated@@297 $generated@@627 $generated@@628)) $generated@@70)
 :pattern ( ($generated@@297 $generated@@627 $generated@@628))
)))
(assert (forall (($generated@@629 Int) ($generated@@630 Int) ) (! (= ($generated@@207 ($generated@@297 $generated@@629 $generated@@630)) $generated@@629)
 :pattern ( ($generated@@297 $generated@@629 $generated@@630))
)))
(assert (forall (($generated@@631 Int) ($generated@@632 Int) ) (! (= ($generated@@208 ($generated@@297 $generated@@631 $generated@@632)) $generated@@632)
 :pattern ( ($generated@@297 $generated@@631 $generated@@632))
)))
(assert  (and (forall (($generated@@635 T@U) ) (! (= (type ($generated@@633 $generated@@635)) $generated@@81)
 :pattern ( ($generated@@633 $generated@@635))
)) (forall (($generated@@636 T@U) ($generated@@637 Int) ) (! (let (($generated@@638 ($generated@@382 (type $generated@@636))))
(= (type ($generated@@634 $generated@@636 $generated@@637)) $generated@@638))
 :pattern ( ($generated@@634 $generated@@636 $generated@@637))
))))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@639) ($generated@@381 $generated@@201)) (= (type $generated@@640) $generated@@81)) (= (type $generated@@641) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@639 ($generated@@633 $generated@@640) $generated@@641) (forall (($generated@@642 Int) ) (!  (=> (and (<= 0 $generated@@642) (< $generated@@642 ($generated@@380 $generated@@639))) ($generated@@352 ($generated@@634 $generated@@639 $generated@@642) $generated@@640 $generated@@641))
 :pattern ( ($generated@@634 $generated@@639 $generated@@642))
))))
 :pattern ( ($generated@@100 $generated@@639 ($generated@@633 $generated@@640) $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (= (type $generated@@643) $generated@@90) (= (type $generated@@644) $generated@@4)) (= (type $generated@@645) $generated@@90)) (= ($generated@@89 ($generated@@332 $generated@@643) ($generated@@0 ($generated@@332 $generated@@644)) ($generated@@332 $generated@@645)) ($generated@@332 ($generated@@89 $generated@@643 ($generated@@0 $generated@@644) $generated@@645))))
 :pattern ( ($generated@@89 ($generated@@332 $generated@@643) ($generated@@0 ($generated@@332 $generated@@644)) ($generated@@332 $generated@@645)))
)))
(assert (forall (($generated@@647 Int) ) (! (= ($generated@@646 ($generated@@101 $generated@@647)) $generated@@647)
 :pattern ( ($generated@@101 $generated@@647))
)))
(assert (forall (($generated@@649 T@U) ) (! (= (type ($generated@@648 $generated@@649)) $generated@@81)
 :pattern ( ($generated@@648 $generated@@649))
)))
(assert (forall (($generated@@650 T@U) ) (!  (=> (= (type $generated@@650) $generated@@81) (= ($generated@@648 ($generated@@320 $generated@@650)) $generated@@650))
 :pattern ( ($generated@@320 $generated@@650))
)))
(assert (forall (($generated@@651 T@U) ) (!  (=> (= (type $generated@@651) $generated@@81) (= ($generated@@98 ($generated@@320 $generated@@651)) $generated@@54))
 :pattern ( ($generated@@320 $generated@@651))
)))
(assert (forall (($generated@@653 T@U) ) (! (= (type ($generated@@652 $generated@@653)) $generated@@81)
 :pattern ( ($generated@@652 $generated@@653))
)))
(assert (forall (($generated@@654 T@U) ) (!  (=> (= (type $generated@@654) $generated@@81) (= ($generated@@652 ($generated@@325 $generated@@654)) $generated@@654))
 :pattern ( ($generated@@325 $generated@@654))
)))
(assert (forall (($generated@@655 T@U) ) (!  (=> (= (type $generated@@655) $generated@@81) (= ($generated@@98 ($generated@@325 $generated@@655)) $generated@@55))
 :pattern ( ($generated@@325 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ) (! (= (type ($generated@@656 $generated@@657)) $generated@@81)
 :pattern ( ($generated@@656 $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ) (!  (=> (= (type $generated@@658) $generated@@81) (= ($generated@@656 ($generated@@213 $generated@@658)) $generated@@658))
 :pattern ( ($generated@@213 $generated@@658))
)))
(assert (forall (($generated@@659 T@U) ) (!  (=> (= (type $generated@@659) $generated@@81) (= ($generated@@98 ($generated@@213 $generated@@659)) $generated@@56))
 :pattern ( ($generated@@213 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ) (! (= (type ($generated@@660 $generated@@661)) $generated@@81)
 :pattern ( ($generated@@660 $generated@@661))
)))
(assert (forall (($generated@@662 T@U) ) (!  (=> (= (type $generated@@662) $generated@@81) (= ($generated@@660 ($generated@@633 $generated@@662)) $generated@@662))
 :pattern ( ($generated@@633 $generated@@662))
)))
(assert (forall (($generated@@663 T@U) ) (!  (=> (= (type $generated@@663) $generated@@81) (= ($generated@@98 ($generated@@633 $generated@@663)) $generated@@57))
 :pattern ( ($generated@@633 $generated@@663))
)))
(assert (forall (($generated@@664 Int) ) (! (= ($generated@@174 ($generated@@389 $generated@@664)) $generated@@64)
 :pattern ( ($generated@@389 $generated@@664))
)))
(assert (forall (($generated@@665 Int) ) (! (= ($generated@@167 ($generated@@389 $generated@@665)) $generated@@665)
 :pattern ( ($generated@@389 $generated@@665))
)))
(assert (forall (($generated@@666 Int) ) (! (= ($generated@@174 ($generated@@393 $generated@@666)) $generated@@66)
 :pattern ( ($generated@@393 $generated@@666))
)))
(assert (forall (($generated@@667 Int) ) (! (= ($generated@@171 ($generated@@393 $generated@@667)) $generated@@667)
 :pattern ( ($generated@@393 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ) (! (= (type ($generated@@668 $generated@@669)) $generated@@81)
 :pattern ( ($generated@@668 $generated@@669))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@81) (= ($generated@@668 ($generated@@277 $generated@@670)) $generated@@670))
 :pattern ( ($generated@@277 $generated@@670))
)))
(assert (forall (($generated@@671 T@U) ) (! (let (($generated@@672 (type $generated@@671)))
(= ($generated@@459 $generated@@672 ($generated@@398 $generated@@671)) $generated@@671))
 :pattern ( ($generated@@398 $generated@@671))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 Bool) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@674) $generated@@90) (= (type $generated@@676) $generated@@90)) (< ($generated@@673 $generated@@674) ($generated@@673 ($generated@@89 $generated@@674 $generated@@675 $generated@@676))))
 :pattern ( ($generated@@89 $generated@@674 $generated@@675 $generated@@676))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 Bool) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@677) $generated@@90) (= (type $generated@@679) $generated@@90)) (< ($generated@@673 $generated@@679) ($generated@@673 ($generated@@89 $generated@@677 $generated@@678 $generated@@679))))
 :pattern ( ($generated@@89 $generated@@677 $generated@@678 $generated@@679))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (!  (=> (and (and (= (type $generated@@680) ($generated@@422 $generated@@201 $generated@@201)) (= (type $generated@@681) $generated@@81)) (= (type $generated@@682) $generated@@81)) (= ($generated@@189 $generated@@680 ($generated@@532 $generated@@681 $generated@@682)) (forall (($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@683) $generated@@201) ($generated@@0 ($generated@@107 ($generated@@420 $generated@@680) $generated@@683))) (and ($generated@@283 ($generated@@107 ($generated@@507 $generated@@680) $generated@@683) $generated@@682) ($generated@@283 $generated@@683 $generated@@681)))
 :pattern ( ($generated@@107 ($generated@@507 $generated@@680) $generated@@683))
 :pattern ( ($generated@@107 ($generated@@420 $generated@@680) $generated@@683))
))))
 :pattern ( ($generated@@189 $generated@@680 ($generated@@532 $generated@@681 $generated@@682)))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ($generated@@686 T@U) ) (!  (=> (and (and (= (type $generated@@684) ($generated@@440 $generated@@201 $generated@@201)) (= (type $generated@@685) $generated@@81)) (= (type $generated@@686) $generated@@81)) (= ($generated@@189 $generated@@684 ($generated@@540 $generated@@685 $generated@@686)) (forall (($generated@@687 T@U) ) (!  (=> (and (= (type $generated@@687) $generated@@201) ($generated@@0 ($generated@@107 ($generated@@438 $generated@@684) $generated@@687))) (and ($generated@@283 ($generated@@107 ($generated@@515 $generated@@684) $generated@@687) $generated@@686) ($generated@@283 $generated@@687 $generated@@685)))
 :pattern ( ($generated@@107 ($generated@@515 $generated@@684) $generated@@687))
 :pattern ( ($generated@@107 ($generated@@438 $generated@@684) $generated@@687))
))))
 :pattern ( ($generated@@189 $generated@@684 ($generated@@540 $generated@@685 $generated@@686)))
)))
(assert (forall (($generated@@689 T@U) ($generated@@690 T@U) ) (!  (=> (and (= (type $generated@@689) $generated@@201) (= (type $generated@@690) $generated@@201)) (< ($generated@@688 $generated@@689) ($generated@@673 ($generated@@282 $generated@@689 $generated@@690))))
 :pattern ( ($generated@@282 $generated@@689 $generated@@690))
)))
(assert (forall (($generated@@691 T@U) ($generated@@692 T@U) ) (!  (=> (and (= (type $generated@@691) $generated@@201) (= (type $generated@@692) $generated@@201)) (< ($generated@@688 $generated@@692) ($generated@@673 ($generated@@282 $generated@@691 $generated@@692))))
 :pattern ( ($generated@@282 $generated@@691 $generated@@692))
)))
(assert (forall (($generated@@693 T@U) ($generated@@694 T@U) ) (!  (=> (and (= (type $generated@@693) $generated@@201) (= (type $generated@@694) $generated@@90)) (< ($generated@@688 $generated@@693) ($generated@@673 ($generated@@346 $generated@@693 $generated@@694))))
 :pattern ( ($generated@@346 $generated@@693 $generated@@694))
)))
(assert (forall (($generated@@695 T@U) ($generated@@696 T@U) ) (!  (=> (and (= (type $generated@@695) $generated@@201) (= (type $generated@@696) $generated@@90)) (< ($generated@@673 $generated@@696) ($generated@@673 ($generated@@346 $generated@@695 $generated@@696))))
 :pattern ( ($generated@@346 $generated@@695 $generated@@696))
)))
(assert (forall (($generated@@697 Int) ) (! (= ($generated@@189 ($generated@@389 $generated@@697) $generated@@463) ($generated@@189 ($generated@@8 $generated@@697) $generated@@46))
 :pattern ( ($generated@@189 ($generated@@389 $generated@@697) $generated@@463))
)))
(assert (forall (($generated@@698 Int) ) (! (= ($generated@@189 ($generated@@393 $generated@@698) $generated@@463) ($generated@@189 ($generated@@8 $generated@@698) $generated@@46))
 :pattern ( ($generated@@189 ($generated@@393 $generated@@698) $generated@@463))
)))
(assert (forall (($generated@@699 T@U) ($generated@@700 T@U) ($generated@@701 T@U) ) (!  (=> (and (and (and (= (type $generated@@699) $generated@@201) (= (type $generated@@700) $generated@@81)) (= (type $generated@@701) $generated@@81)) ($generated@@283 $generated@@699 ($generated@@532 $generated@@700 $generated@@701))) (and (= ($generated@@398 ($generated@@459 ($generated@@422 $generated@@201 $generated@@201) $generated@@699)) $generated@@699) ($generated@@189 ($generated@@459 ($generated@@422 $generated@@201 $generated@@201) $generated@@699) ($generated@@532 $generated@@700 $generated@@701))))
 :pattern ( ($generated@@283 $generated@@699 ($generated@@532 $generated@@700 $generated@@701)))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 T@U) ($generated@@704 T@U) ) (!  (=> (and (and (and (= (type $generated@@702) $generated@@201) (= (type $generated@@703) $generated@@81)) (= (type $generated@@704) $generated@@81)) ($generated@@283 $generated@@702 ($generated@@540 $generated@@703 $generated@@704))) (and (= ($generated@@398 ($generated@@459 ($generated@@440 $generated@@201 $generated@@201) $generated@@702)) $generated@@702) ($generated@@189 ($generated@@459 ($generated@@440 $generated@@201 $generated@@201) $generated@@702) ($generated@@540 $generated@@703 $generated@@704))))
 :pattern ( ($generated@@283 $generated@@702 ($generated@@540 $generated@@703 $generated@@704)))
)))
(assert (forall (($generated@@705 T@U) ($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (and (and (= (type $generated@@705) $generated@@81) (= (type $generated@@706) $generated@@81)) (= (type $generated@@707) $generated@@201)) ($generated@@283 $generated@@707 ($generated@@192 $generated@@705 $generated@@706))) (and (= ($generated@@398 ($generated@@459 $generated@@90 $generated@@707)) $generated@@707) ($generated@@189 ($generated@@459 $generated@@90 $generated@@707) ($generated@@192 $generated@@705 $generated@@706))))
 :pattern ( ($generated@@283 $generated@@707 ($generated@@192 $generated@@705 $generated@@706)))
)))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (and (and (= (type $generated@@708) $generated@@90) (= (type $generated@@709) $generated@@81)) (= (type $generated@@710) ($generated@@102 $generated@@103 $generated@@104))) (and ($generated@@278 $generated@@710) (and ($generated@@313 $generated@@708) ($generated@@100 $generated@@708 ($generated@@277 $generated@@709) $generated@@710)))) ($generated@@352 ($generated@@314 $generated@@708) $generated@@709 $generated@@710))
 :pattern ( ($generated@@352 ($generated@@314 $generated@@708) $generated@@709 $generated@@710))
)))
(assert (forall (($generated@@711 T@U) ) (! (let (($generated@@712 (type $generated@@711)))
 (not ($generated@@0 ($generated@@107 ($generated@@555 $generated@@712) $generated@@711))))
 :pattern ( (let (($generated@@712 (type $generated@@711)))
($generated@@107 ($generated@@555 $generated@@712) $generated@@711)))
)))
(assert (forall (($generated@@713 T@U) ($generated@@714 T@U) ) (!  (=> (and (= (type $generated@@713) $generated@@81) (= (type $generated@@714) $generated@@81)) (and (= ($generated@@98 ($generated@@192 $generated@@713 $generated@@714)) $generated@@63) (= ($generated@@417 ($generated@@192 $generated@@713 $generated@@714)) $generated@@76)))
 :pattern ( ($generated@@192 $generated@@713 $generated@@714))
)))
(assert (forall (($generated@@715 T@U) ($generated@@716 T@U) ) (!  (=> (and (and (= (type $generated@@715) $generated@@90) (= (type $generated@@716) ($generated@@102 $generated@@103 $generated@@104))) (and ($generated@@278 $generated@@716) (and ($generated@@166 $generated@@715) ($generated@@100 $generated@@715 $generated@@463 $generated@@716)))) ($generated@@100 ($generated@@8 ($generated@@167 $generated@@715)) $generated@@46 $generated@@716))
 :pattern ( ($generated@@100 ($generated@@8 ($generated@@167 $generated@@715)) $generated@@46 $generated@@716))
)))
(assert (forall (($generated@@717 T@U) ($generated@@718 T@U) ) (!  (=> (and (and (= (type $generated@@717) $generated@@90) (= (type $generated@@718) ($generated@@102 $generated@@103 $generated@@104))) (and ($generated@@278 $generated@@718) (and ($generated@@170 $generated@@717) ($generated@@100 $generated@@717 $generated@@463 $generated@@718)))) ($generated@@100 ($generated@@8 ($generated@@171 $generated@@717)) $generated@@46 $generated@@718))
 :pattern ( ($generated@@100 ($generated@@8 ($generated@@171 $generated@@717)) $generated@@46 $generated@@718))
)))
(assert (forall (($generated@@719 T@U) ($generated@@720 T@U) ) (!  (=> (and (and (= (type $generated@@719) $generated@@90) (= (type $generated@@720) ($generated@@102 $generated@@103 $generated@@104))) (and ($generated@@278 $generated@@720) (and ($generated@@274 $generated@@719) ($generated@@100 $generated@@719 $generated@@275 $generated@@720)))) ($generated@@100 ($generated@@8 ($generated@@207 $generated@@719)) $generated@@46 $generated@@720))
 :pattern ( ($generated@@100 ($generated@@8 ($generated@@207 $generated@@719)) $generated@@46 $generated@@720))
)))
(assert (forall (($generated@@721 T@U) ($generated@@722 T@U) ) (!  (=> (and (and (= (type $generated@@721) $generated@@90) (= (type $generated@@722) ($generated@@102 $generated@@103 $generated@@104))) (and ($generated@@278 $generated@@722) (and ($generated@@274 $generated@@721) ($generated@@100 $generated@@721 $generated@@275 $generated@@722)))) ($generated@@100 ($generated@@8 ($generated@@208 $generated@@721)) $generated@@46 $generated@@722))
 :pattern ( ($generated@@100 ($generated@@8 ($generated@@208 $generated@@721)) $generated@@46 $generated@@722))
)))
(assert (forall (($generated@@723 T@U) ($generated@@724 T@U) ) (!  (=> (and (and (= (type $generated@@723) $generated@@90) (= (type $generated@@724) ($generated@@102 $generated@@103 $generated@@104))) (and ($generated@@278 $generated@@724) (and ($generated@@294 $generated@@723) ($generated@@100 $generated@@723 $generated@@290 $generated@@724)))) ($generated@@100 ($generated@@11 ($generated@@91 $generated@@723)) $generated@@44 $generated@@724))
 :pattern ( ($generated@@100 ($generated@@11 ($generated@@91 $generated@@723)) $generated@@44 $generated@@724))
)))
(assert (forall (($generated@@725 T@U) ) (!  (=> (= (type $generated@@725) $generated@@90) (= ($generated@@688 ($generated@@398 $generated@@725)) ($generated@@673 $generated@@725)))
 :pattern ( ($generated@@688 ($generated@@398 $generated@@725)))
)))
(assert (forall (($generated@@726 T@U) ) (!  (=> (and (= (type $generated@@726) $generated@@201) ($generated@@283 $generated@@726 ($generated@@101 0))) (and (= ($generated@@398 ($generated@@459 $generated@@2 $generated@@726)) $generated@@726) ($generated@@189 ($generated@@459 ($generated@@102 $generated@@201 $generated@@4) $generated@@726) ($generated@@101 0))))
 :pattern ( ($generated@@283 $generated@@726 ($generated@@101 0)))
)))
(assert (forall (($generated@@727 T@U) ($generated@@728 T@U) ) (!  (=> (and (and (= (type $generated@@727) $generated@@201) (= (type $generated@@728) $generated@@81)) ($generated@@283 $generated@@727 ($generated@@320 $generated@@728))) (and (= ($generated@@398 ($generated@@459 ($generated@@102 $generated@@201 $generated@@4) $generated@@727)) $generated@@727) ($generated@@189 ($generated@@459 ($generated@@102 $generated@@201 $generated@@4) $generated@@727) ($generated@@320 $generated@@728))))
 :pattern ( ($generated@@283 $generated@@727 ($generated@@320 $generated@@728)))
)))
(assert (forall (($generated@@729 T@U) ($generated@@730 T@U) ) (!  (=> (and (and (= (type $generated@@729) $generated@@201) (= (type $generated@@730) $generated@@81)) ($generated@@283 $generated@@729 ($generated@@325 $generated@@730))) (and (= ($generated@@398 ($generated@@459 ($generated@@102 $generated@@201 $generated@@4) $generated@@729)) $generated@@729) ($generated@@189 ($generated@@459 ($generated@@102 $generated@@201 $generated@@4) $generated@@729) ($generated@@325 $generated@@730))))
 :pattern ( ($generated@@283 $generated@@729 ($generated@@325 $generated@@730)))
)))
(assert (forall (($generated@@731 T@U) ($generated@@732 T@U) ) (!  (=> (and (and (= (type $generated@@731) $generated@@201) (= (type $generated@@732) $generated@@81)) ($generated@@283 $generated@@731 ($generated@@213 $generated@@732))) (and (= ($generated@@398 ($generated@@459 ($generated@@102 $generated@@201 $generated@@2) $generated@@731)) $generated@@731) ($generated@@189 ($generated@@459 ($generated@@102 $generated@@201 $generated@@2) $generated@@731) ($generated@@213 $generated@@732))))
 :pattern ( ($generated@@283 $generated@@731 ($generated@@213 $generated@@732)))
)))
(assert (forall (($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (and (= (type $generated@@733) $generated@@201) (= (type $generated@@734) $generated@@81)) ($generated@@283 $generated@@733 ($generated@@633 $generated@@734))) (and (= ($generated@@398 ($generated@@459 ($generated@@381 $generated@@201) $generated@@733)) $generated@@733) ($generated@@189 ($generated@@459 ($generated@@381 $generated@@201) $generated@@733) ($generated@@633 $generated@@734))))
 :pattern ( ($generated@@283 $generated@@733 ($generated@@633 $generated@@734)))
)))
(assert (forall (($generated@@735 T@U) ($generated@@736 T@U) ) (!  (=> (and (and (= (type $generated@@735) $generated@@81) (= (type $generated@@736) $generated@@201)) ($generated@@283 $generated@@736 ($generated@@277 $generated@@735))) (and (= ($generated@@398 ($generated@@459 $generated@@90 $generated@@736)) $generated@@736) ($generated@@189 ($generated@@459 $generated@@90 $generated@@736) ($generated@@277 $generated@@735))))
 :pattern ( ($generated@@283 $generated@@736 ($generated@@277 $generated@@735)))
)))
(assert (forall (($generated@@737 T@U) ($generated@@738 T@U) ($generated@@739 T@U) ) (!  (=> (and (and (and (= (type $generated@@737) $generated@@90) (= (type $generated@@738) $generated@@81)) (= (type $generated@@739) ($generated@@102 $generated@@103 $generated@@104))) (and ($generated@@278 $generated@@739) (and ($generated@@313 $generated@@737) ($generated@@100 $generated@@737 ($generated@@277 $generated@@738) $generated@@739)))) ($generated@@100 ($generated@@315 $generated@@737) ($generated@@277 $generated@@738) $generated@@739))
 :pattern ( ($generated@@100 ($generated@@315 $generated@@737) ($generated@@277 $generated@@738) $generated@@739))
)))
(assert (= ($generated@@98 $generated@@162) $generated@@61))
(assert (= ($generated@@417 $generated@@162) $generated@@75))
(assert (= ($generated@@98 $generated@@463) $generated@@65))
(assert (= ($generated@@417 $generated@@463) $generated@@77))
(assert (= ($generated@@98 $generated@@275) $generated@@71))
(assert (= ($generated@@417 $generated@@275) $generated@@79))
(assert (= ($generated@@98 $generated@@290) $generated@@73))
(assert (= ($generated@@417 $generated@@290) $generated@@80))
(assert (forall (($generated@@740 T@U) ($generated@@741 T@U) ($generated@@742 T@U) ) (!  (=> (and (and (= (type $generated@@740) ($generated@@102 $generated@@201 $generated@@2)) (= (type $generated@@741) $generated@@81)) (= (type $generated@@742) ($generated@@102 $generated@@103 $generated@@104))) (= ($generated@@100 $generated@@740 ($generated@@213 $generated@@741) $generated@@742) (forall (($generated@@743 T@U) ) (!  (=> (and (= (type $generated@@743) $generated@@201) (< 0 ($generated ($generated@@107 $generated@@740 $generated@@743)))) ($generated@@352 $generated@@743 $generated@@741 $generated@@742))
 :pattern ( ($generated@@107 $generated@@740 $generated@@743))
))))
 :pattern ( ($generated@@100 $generated@@740 ($generated@@213 $generated@@741) $generated@@742))
)))
(assert (= $generated@@211 ($generated@@332 $generated@@211)))
(assert (= $generated@@212 ($generated@@332 $generated@@212)))
(assert (forall (($generated@@744 T@U) ($generated@@745 T@U) ($generated@@746 T@U) ) (!  (=> (and (and (and (= (type $generated@@744) $generated@@90) (= (type $generated@@745) $generated@@81)) (= (type $generated@@746) ($generated@@102 $generated@@103 $generated@@104))) (and ($generated@@278 $generated@@746) (and ($generated@@191 $generated@@744) (exists (($generated@@747 T@U) ) (!  (and (= (type $generated@@747) $generated@@81) ($generated@@100 $generated@@744 ($generated@@192 $generated@@745 $generated@@747) $generated@@746))
 :pattern ( ($generated@@100 $generated@@744 ($generated@@192 $generated@@745 $generated@@747) $generated@@746))
))))) ($generated@@352 ($generated@@199 $generated@@744) $generated@@745 $generated@@746))
 :pattern ( ($generated@@352 ($generated@@199 $generated@@744) $generated@@745 $generated@@746))
)))
(assert (forall (($generated@@748 T@U) ($generated@@749 T@U) ($generated@@750 T@U) ) (!  (=> (and (and (and (= (type $generated@@748) $generated@@90) (= (type $generated@@749) $generated@@81)) (= (type $generated@@750) ($generated@@102 $generated@@103 $generated@@104))) (and ($generated@@278 $generated@@750) (and ($generated@@191 $generated@@748) (exists (($generated@@751 T@U) ) (!  (and (= (type $generated@@751) $generated@@81) ($generated@@100 $generated@@748 ($generated@@192 $generated@@751 $generated@@749) $generated@@750))
 :pattern ( ($generated@@100 $generated@@748 ($generated@@192 $generated@@751 $generated@@749) $generated@@750))
))))) ($generated@@352 ($generated@@200 $generated@@748) $generated@@749 $generated@@750))
 :pattern ( ($generated@@352 ($generated@@200 $generated@@748) $generated@@749 $generated@@750))
)))
(assert (forall (($generated@@752 T@U) ($generated@@753 T@U) ) (!  (=> (and (and (= (type $generated@@752) $generated@@90) (= (type $generated@@753) ($generated@@102 $generated@@103 $generated@@104))) (and ($generated@@278 $generated@@753) (and ($generated@@294 $generated@@752) ($generated@@100 $generated@@752 $generated@@290 $generated@@753)))) ($generated@@100 ($generated@@179 $generated@@752) $generated@@290 $generated@@753))
 :pattern ( ($generated@@100 ($generated@@179 $generated@@752) $generated@@290 $generated@@753))
)))
(assert (forall (($generated@@754 T@U) ($generated@@755 T@U) ) (!  (=> (and (and (= (type $generated@@754) $generated@@90) (= (type $generated@@755) ($generated@@102 $generated@@103 $generated@@104))) (and ($generated@@278 $generated@@755) (and ($generated@@294 $generated@@754) ($generated@@100 $generated@@754 $generated@@290 $generated@@755)))) ($generated@@100 ($generated@@184 $generated@@754) $generated@@290 $generated@@755))
 :pattern ( ($generated@@100 ($generated@@184 $generated@@754) $generated@@290 $generated@@755))
)))
(assert (forall (($generated@@756 T@U) ($generated@@757 T@U) ) (!  (=> (and (= (type $generated@@756) $generated@@201) (= (type $generated@@757) $generated@@201)) (= ($generated@@282 ($generated@@332 $generated@@756) ($generated@@332 $generated@@757)) ($generated@@332 ($generated@@282 $generated@@756 $generated@@757))))
 :pattern ( ($generated@@282 ($generated@@332 $generated@@756) ($generated@@332 $generated@@757)))
)))
(assert (forall (($generated@@758 T@U) ($generated@@759 T@U) ) (!  (=> (and (= (type $generated@@758) $generated@@201) (= (type $generated@@759) $generated@@90)) (= ($generated@@346 ($generated@@332 $generated@@758) ($generated@@332 $generated@@759)) ($generated@@332 ($generated@@346 $generated@@758 $generated@@759))))
 :pattern ( ($generated@@346 ($generated@@332 $generated@@758) ($generated@@332 $generated@@759)))
)))
(assert (forall (($generated@@760 Int) ($generated@@761 Int) ) (! (= ($generated@@297 ($generated@@330 $generated@@760) ($generated@@330 $generated@@761)) ($generated@@332 ($generated@@297 $generated@@760 $generated@@761)))
 :pattern ( ($generated@@297 ($generated@@330 $generated@@760) ($generated@@330 $generated@@761)))
)))
(assert (forall (($generated@@762 Int) ) (! (= ($generated@@398 ($generated@@8 ($generated@@330 $generated@@762))) ($generated@@332 ($generated@@398 ($generated@@8 $generated@@762))))
 :pattern ( ($generated@@398 ($generated@@8 ($generated@@330 $generated@@762))))
)))
(assert (forall (($generated@@763 Int) ) (! (= ($generated@@389 ($generated@@330 $generated@@763)) ($generated@@332 ($generated@@389 $generated@@763)))
 :pattern ( ($generated@@389 ($generated@@330 $generated@@763)))
)))
(assert (forall (($generated@@764 Int) ) (! (= ($generated@@393 ($generated@@330 $generated@@764)) ($generated@@332 ($generated@@393 $generated@@764)))
 :pattern ( ($generated@@393 ($generated@@330 $generated@@764)))
)))
(assert (forall (($generated@@765 T@U) ) (! (= ($generated@@398 ($generated@@332 $generated@@765)) ($generated@@332 ($generated@@398 $generated@@765)))
 :pattern ( ($generated@@398 ($generated@@332 $generated@@765)))
)))
(assert (forall (($generated@@766 Int) ($generated@@767 Int) ($generated@@768 T@U) ) (!  (=> (and (= (type $generated@@768) ($generated@@102 $generated@@103 $generated@@104)) ($generated@@278 $generated@@768)) (= ($generated@@100 ($generated@@297 $generated@@766 $generated@@767) $generated@@275 $generated@@768)  (and ($generated@@100 ($generated@@8 $generated@@766) $generated@@46 $generated@@768) ($generated@@100 ($generated@@8 $generated@@767) $generated@@46 $generated@@768))))
 :pattern ( ($generated@@100 ($generated@@297 $generated@@766 $generated@@767) $generated@@275 $generated@@768))
)))
(assert (forall (($generated@@769 T@U) ) (! (let (($generated@@770 ($generated@@382 (type $generated@@769))))
 (=> (and (= (type $generated@@769) ($generated@@381 $generated@@770)) (= ($generated@@380 $generated@@769) 0)) (= $generated@@769 ($generated@@379 $generated@@770))))
 :pattern ( ($generated@@380 $generated@@769))
)))
(assert (forall (($generated@@771 T@U) ($generated@@772 T@U) ($generated@@773 T@U) ) (! (let (($generated@@774 (type $generated@@772)))
 (=> (and (and (= (type $generated@@771) ($generated@@102 $generated@@774 $generated@@2)) (= (type $generated@@773) $generated@@2)) (<= 0 ($generated $generated@@773))) (= ($generated@@411 ($generated@@108 $generated@@771 $generated@@772 $generated@@773)) (+ (- ($generated@@411 $generated@@771) ($generated ($generated@@107 $generated@@771 $generated@@772))) ($generated $generated@@773)))))
 :pattern ( ($generated@@411 ($generated@@108 $generated@@771 $generated@@772 $generated@@773)))
)))
(assert (forall (($generated@@775 T@U) ($generated@@776 T@U) ) (!  (=> (and (= (type $generated@@775) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@776) $generated@@2)) ($generated@@100 $generated@@776 $generated@@46 $generated@@775))
 :pattern ( ($generated@@100 $generated@@776 $generated@@46 $generated@@775))
)))
(assert (forall (($generated@@777 T@U) ($generated@@778 T@U) ) (!  (=> (and (= (type $generated@@777) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@778) $generated@@3)) ($generated@@100 $generated@@778 $generated@@47 $generated@@777))
 :pattern ( ($generated@@100 $generated@@778 $generated@@47 $generated@@777))
)))
(assert (forall (($generated@@779 T@U) ($generated@@780 T@U) ) (!  (=> (and (= (type $generated@@779) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@780) $generated@@4)) ($generated@@100 $generated@@780 $generated@@44 $generated@@779))
 :pattern ( ($generated@@100 $generated@@780 $generated@@44 $generated@@779))
)))
(assert (forall (($generated@@781 T@U) ($generated@@782 T@U) ) (!  (=> (and (= (type $generated@@781) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@782) $generated@@579)) ($generated@@100 $generated@@782 $generated@@45 $generated@@781))
 :pattern ( ($generated@@100 $generated@@782 $generated@@45 $generated@@781))
)))
(assert (forall (($generated@@783 T@U) ($generated@@784 T@U) ) (!  (=> (and (= (type $generated@@783) ($generated@@102 $generated@@103 $generated@@104)) (= (type $generated@@784) $generated@@201)) ($generated@@100 $generated@@784 $generated@@48 $generated@@783))
 :pattern ( ($generated@@100 $generated@@784 $generated@@48 $generated@@783))
)))
(assert (forall (($generated@@785 T@U) ($generated@@786 Bool) ($generated@@787 T@U) ) (!  (=> (and (= (type $generated@@785) $generated@@90) (= (type $generated@@787) $generated@@90)) (= ($generated@@189 ($generated@@89 $generated@@785 $generated@@786 $generated@@787) $generated@@290)  (and (and ($generated@@189 $generated@@785 $generated@@290) ($generated@@189 ($generated@@11 $generated@@786) $generated@@44)) ($generated@@189 $generated@@787 $generated@@290))))
 :pattern ( ($generated@@189 ($generated@@89 $generated@@785 $generated@@786 $generated@@787) $generated@@290))
)))
(assert (forall (($generated@@788 T@U) ($generated@@789 T@U) ($generated@@790 T@U) ($generated@@791 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@788) $generated@@81) (= (type $generated@@789) $generated@@201)) (= (type $generated@@790) $generated@@90)) (= (type $generated@@791) ($generated@@102 $generated@@103 $generated@@104))) ($generated@@278 $generated@@791)) (= ($generated@@100 ($generated@@346 $generated@@789 $generated@@790) ($generated@@277 $generated@@788) $generated@@791)  (and ($generated@@352 $generated@@789 $generated@@788 $generated@@791) ($generated@@100 $generated@@790 ($generated@@277 $generated@@788) $generated@@791))))
 :pattern ( ($generated@@100 ($generated@@346 $generated@@789 $generated@@790) ($generated@@277 $generated@@788) $generated@@791))
)))
(assert (forall (($generated@@792 T@U) ($generated@@793 T@U) ) (!  (=> (and (= (type $generated@@792) ($generated@@381 $generated@@201)) (= (type $generated@@793) $generated@@81)) (= ($generated@@189 $generated@@792 ($generated@@633 $generated@@793)) (forall (($generated@@794 Int) ) (!  (=> (and (<= 0 $generated@@794) (< $generated@@794 ($generated@@380 $generated@@792))) ($generated@@283 ($generated@@634 $generated@@792 $generated@@794) $generated@@793))
 :pattern ( ($generated@@634 $generated@@792 $generated@@794))
))))
 :pattern ( ($generated@@189 $generated@@792 ($generated@@633 $generated@@793)))
)))
(assert (forall (($generated@@796 T@U) ($generated@@797 Int) ) (!  (=> (= (type $generated@@796) ($generated@@381 $generated@@201)) (=> (and (<= 0 $generated@@797) (< $generated@@797 ($generated@@380 $generated@@796))) (< ($generated@@673 ($generated@@459 $generated@@90 ($generated@@634 $generated@@796 $generated@@797))) ($generated@@795 $generated@@796))))
 :pattern ( ($generated@@673 ($generated@@459 $generated@@90 ($generated@@634 $generated@@796 $generated@@797))))
)))
(assert (forall (($generated@@798 T@U) ($generated@@799 T@U) ($generated@@800 T@U) ) (!  (=> (and (and (and (= (type $generated@@798) ($generated@@422 $generated@@201 $generated@@201)) (= (type $generated@@799) $generated@@81)) (= (type $generated@@800) $generated@@81)) ($generated@@189 $generated@@798 ($generated@@532 $generated@@799 $generated@@800))) (and (and ($generated@@189 ($generated@@420 $generated@@798) ($generated@@320 $generated@@799)) ($generated@@189 ($generated@@471 $generated@@798) ($generated@@320 $generated@@800))) ($generated@@189 ($generated@@506 $generated@@798) ($generated@@320 ($generated@@192 $generated@@799 $generated@@800)))))
 :pattern ( ($generated@@189 $generated@@798 ($generated@@532 $generated@@799 $generated@@800)))
)))
(assert (forall (($generated@@801 T@U) ($generated@@802 T@U) ($generated@@803 T@U) ) (!  (=> (and (and (and (= (type $generated@@801) ($generated@@440 $generated@@201 $generated@@201)) (= (type $generated@@802) $generated@@81)) (= (type $generated@@803) $generated@@81)) ($generated@@189 $generated@@801 ($generated@@540 $generated@@802 $generated@@803))) (and (and ($generated@@189 ($generated@@438 $generated@@801) ($generated@@325 $generated@@802)) ($generated@@189 ($generated@@482 $generated@@801) ($generated@@325 $generated@@803))) ($generated@@189 ($generated@@514 $generated@@801) ($generated@@325 ($generated@@192 $generated@@802 $generated@@803)))))
 :pattern ( ($generated@@189 $generated@@801 ($generated@@540 $generated@@802 $generated@@803)))
)))
(assert (forall (($generated@@804 T@U) ) (!  (=> (= (type $generated@@804) $generated@@2) ($generated@@189 $generated@@804 $generated@@46))
 :pattern ( ($generated@@189 $generated@@804 $generated@@46))
)))
(assert (forall (($generated@@805 T@U) ) (!  (=> (= (type $generated@@805) $generated@@3) ($generated@@189 $generated@@805 $generated@@47))
 :pattern ( ($generated@@189 $generated@@805 $generated@@47))
)))
(assert (forall (($generated@@806 T@U) ) (!  (=> (= (type $generated@@806) $generated@@4) ($generated@@189 $generated@@806 $generated@@44))
 :pattern ( ($generated@@189 $generated@@806 $generated@@44))
)))
(assert (forall (($generated@@807 T@U) ) (!  (=> (= (type $generated@@807) $generated@@579) ($generated@@189 $generated@@807 $generated@@45))
 :pattern ( ($generated@@189 $generated@@807 $generated@@45))
)))
(assert (forall (($generated@@808 T@U) ) (!  (=> (= (type $generated@@808) $generated@@201) ($generated@@189 $generated@@808 $generated@@48))
 :pattern ( ($generated@@189 $generated@@808 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@809 () T@U)
(declare-fun $generated@@810 () T@U)
(declare-fun $generated@@811 () T@U)
(declare-fun $generated@@812 () T@U)
(declare-fun $generated@@813 () T@U)
(declare-fun $generated@@814 () T@U)
(declare-fun $generated@@815 () T@U)
(declare-fun $generated@@816 () T@U)
(declare-fun $generated@@817 () T@U)
(declare-fun $generated@@818 () T@U)
(declare-fun $generated@@819 () T@U)
(declare-fun $generated@@820 (T@U) Bool)
(declare-fun $generated@@821 () T@U)
(declare-fun $generated@@822 () T@U)
(declare-fun $generated@@823 () T@U)
(declare-fun $generated@@824 () T@U)
(declare-fun $generated@@825 () Int)
(declare-fun $generated@@826 () T@U)
(declare-fun $generated@@827 () T@U)
(declare-fun $generated@@828 () Int)
(declare-fun $generated@@829 () T@U)
(declare-fun $generated@@830 () T@U)
(declare-fun $generated@@831 () T@U)
(declare-fun $generated@@832 () T@U)
(declare-fun $generated@@833 () T@U)
(declare-fun $generated@@834 () Int)
(declare-fun $generated@@835 () T@U)
(declare-fun $generated@@836 () Int)
(declare-fun $generated@@837 () T@U)
(declare-fun $generated@@838 () T@U)
(declare-fun $generated@@839 () Int)
(declare-fun $generated@@840 () T@U)
(declare-fun $generated@@841 () Int)
(declare-fun $generated@@842 () T@U)
(declare-fun $generated@@843 () T@U)
(declare-fun $generated@@844 () Int)
(declare-fun $generated@@845 () T@U)
(declare-fun $generated@@846 () Int)
(declare-fun $generated@@847 () T@U)
(declare-fun $generated@@848 () Int)
(declare-fun $generated@@849 () T@U)
(declare-fun $generated@@850 () Int)
(declare-fun $generated@@851 () T@U)
(declare-fun $generated@@852 () Int)
(declare-fun $generated@@853 () T@U)
(declare-fun $generated@@854 () Int)
(declare-fun $generated@@855 () T@U)
(declare-fun $generated@@856 () T@U)
(declare-fun $generated@@857 () T@U)
(declare-fun $generated@@858 () T@U)
(declare-fun $generated@@859 () T@U)
(declare-fun $generated@@860 () T@U)
(declare-fun $generated@@861 () T@U)
(declare-fun $generated@@862 () T@U)
(declare-fun $generated@@863 () T@U)
(declare-fun $generated@@864 () T@U)
(declare-fun $generated@@865 () T@U)
(declare-fun $generated@@866 () T@U)
(declare-fun $generated@@867 () Int)
(declare-fun $generated@@868 () Int)
(declare-fun $generated@@869 () Int)
(declare-fun $generated@@870 () Int)
(declare-fun $generated@@871 () Int)
(declare-fun $generated@@872 () Int)
(declare-fun $generated@@873 () Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@809) ($generated@@220 $generated@@103 $generated@@4)) (= (type $generated@@810) $generated@@103)) (= (type $generated@@811) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@812) $generated@@90)) (= (type $generated@@813) $generated@@90)) (= (type $generated@@814) $generated@@90)) (= (type $generated@@815) $generated@@90)) (= (type $generated@@816) $generated@@90)) (= (type $generated@@817) $generated@@90)) (= (type $generated@@818) $generated@@90)) (= (type $generated@@819) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@821) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@822) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@823) $generated@@90)) (= (type $generated@@824) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@826) $generated@@90)) (= (type $generated@@827) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@829) $generated@@90)) (= (type $generated@@830) $generated@@90)) (= (type $generated@@831) $generated@@90)) (= (type $generated@@832) $generated@@90)) (= (type $generated@@833) $generated@@90)) (= (type $generated@@835) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@837) $generated@@90)) (= (type $generated@@838) $generated@@90)) (= (type $generated@@840) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@842) $generated@@90)) (= (type $generated@@843) $generated@@90)) (= (type $generated@@845) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@847) $generated@@90)) (= (type $generated@@849) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@851) $generated@@90)) (= (type $generated@@853) ($generated@@102 $generated@@103 $generated@@104))) (= (type $generated@@855) $generated@@90)) (= (type $generated@@856) $generated@@90)) (= (type $generated@@857) $generated@@90)) (= (type $generated@@858) $generated@@90)) (= (type $generated@@859) $generated@@90)) (= (type $generated@@860) $generated@@90)) (= (type $generated@@861) $generated@@90)) (= (type $generated@@862) $generated@@90)) (= (type $generated@@863) $generated@@90)) (= (type $generated@@864) $generated@@90)) (= (type $generated@@865) $generated@@90)) (= (type $generated@@866) $generated@@90)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@874  (=> (and (and (= $generated@@809 ($generated@@219 $generated@@810 $generated@@811 $generated@@60 false)) (= $generated@@812 ($generated@@332 ($generated@@346 ($generated@@398 ($generated@@8 ($generated@@330 6))) ($generated@@332 $generated@@211))))) (and (= $generated@@813 ($generated@@346 ($generated@@398 ($generated@@8 ($generated@@330 5))) $generated@@812)) (= $generated@@814 ($generated@@346 ($generated@@398 ($generated@@8 ($generated@@330 4))) $generated@@813)))) (=> (and (and (and (= $generated@@815 ($generated@@346 ($generated@@398 ($generated@@8 ($generated@@330 4))) $generated@@814)) (= $generated@@816 ($generated@@346 ($generated@@398 ($generated@@8 ($generated@@330 3))) $generated@@815))) (and (= $generated@@817 ($generated@@346 ($generated@@398 ($generated@@8 ($generated@@330 2))) $generated@@816)) (= $generated@@818 ($generated@@346 ($generated@@398 ($generated@@8 ($generated@@330 1))) $generated@@817)))) (and (and ($generated@@278 $generated@@819) ($generated@@820 $generated@@819)) (and (forall (($generated@@875 T@U) ) (!  (=> (= (type $generated@@875) $generated@@103) (=> (and (not (= $generated@@875 $generated@@810)) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@811 $generated@@875) $generated@@60))) (= ($generated@@107 $generated@@819 $generated@@875) ($generated@@107 $generated@@811 $generated@@875))))
 :pattern ( ($generated@@107 $generated@@819 $generated@@875))
)) ($generated@@158 $generated@@811 $generated@@819)))) (=> (and (and (and (and ($generated@@278 $generated@@821) ($generated@@820 $generated@@821)) (and (forall (($generated@@876 T@U) ) (!  (=> (= (type $generated@@876) $generated@@103) (=> (and (not (= $generated@@876 $generated@@810)) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@819 $generated@@876) $generated@@60))) (= ($generated@@107 $generated@@821 $generated@@876) ($generated@@107 $generated@@819 $generated@@876))))
 :pattern ( ($generated@@107 $generated@@821 $generated@@876))
)) ($generated@@158 $generated@@819 $generated@@821))) (and (and ($generated@@278 $generated@@822) ($generated@@820 $generated@@822)) (forall (($generated@@877 T@U) ) (!  (=> (= (type $generated@@877) $generated@@103) (=> (and (not (= $generated@@877 $generated@@810)) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@821 $generated@@877) $generated@@60))) (= ($generated@@107 $generated@@822 $generated@@877) ($generated@@107 $generated@@821 $generated@@877))))
 :pattern ( ($generated@@107 $generated@@822 $generated@@877))
)))) (and (and (and ($generated@@158 $generated@@821 $generated@@822) (= $generated@@823 ($generated@@332 ($generated@@297 ($generated@@330 11) ($generated@@330 10))))) (and ($generated@@278 $generated@@824) ($generated@@820 $generated@@824))) (and (and ($generated@@274 $generated@@823) (=> (= ($generated@@207 $generated@@823) ($generated@@330 11)) ($generated@@274 $generated@@823))) (=> (and (= ($generated@@207 $generated@@823) ($generated@@330 11)) (= ($generated@@208 $generated@@823) ($generated@@330 10))) (= $generated@@825 ($generated@@330 0)))))) (=> (and (and (and (and (and ($generated@@274 $generated@@823) (=> (= ($generated@@207 $generated@@823) ($generated@@330 11)) ($generated@@274 $generated@@823))) (=> (and (= ($generated@@207 $generated@@823) ($generated@@330 11)) (not (= ($generated@@208 $generated@@823) 10))) (= $generated@@825 ($generated@@330 1)))) (and (and ($generated@@274 $generated@@823) (=> (not (= ($generated@@207 $generated@@823) ($generated@@330 11))) ($generated@@274 $generated@@823))) (and (or (or (= ($generated@@207 $generated@@823) ($generated@@330 11)) (= ($generated@@208 $generated@@823) ($generated@@330 11))) (= $generated@@825 ($generated@@330 3))) (forall (($generated@@878 T@U) ) (!  (=> (= (type $generated@@878) $generated@@103) (=> (and (not (= $generated@@878 $generated@@810)) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@822 $generated@@878) $generated@@60))) (= ($generated@@107 $generated@@824 $generated@@878) ($generated@@107 $generated@@822 $generated@@878))))
 :pattern ( ($generated@@107 $generated@@824 $generated@@878))
))))) (and (and (and ($generated@@158 $generated@@822 $generated@@824) (= $generated@@826 ($generated@@332 ($generated@@297 ($generated@@330 (- 0 1)) ($generated@@330 10))))) (and ($generated@@278 $generated@@827) ($generated@@820 $generated@@827))) (and (and ($generated@@274 $generated@@826) (=> (= ($generated@@207 $generated@@826) ($generated@@330 11)) ($generated@@274 $generated@@826))) (=> (and (= ($generated@@207 $generated@@826) ($generated@@330 11)) (= ($generated@@208 $generated@@826) ($generated@@330 10))) (= $generated@@828 ($generated@@330 0)))))) (and (and (and (and ($generated@@274 $generated@@826) (=> (= ($generated@@207 $generated@@826) ($generated@@330 11)) ($generated@@274 $generated@@826))) (=> (and (= ($generated@@207 $generated@@826) ($generated@@330 11)) (not (= ($generated@@208 $generated@@826) 10))) (= $generated@@828 ($generated@@330 1)))) (and ($generated@@274 $generated@@826) (=> (not (= ($generated@@207 $generated@@826) ($generated@@330 11))) ($generated@@274 $generated@@826)))) (and (and (and (or (or (= ($generated@@207 $generated@@826) ($generated@@330 11)) (= ($generated@@208 $generated@@826) ($generated@@330 11))) (= $generated@@828 ($generated@@330 3))) (forall (($generated@@879 T@U) ) (!  (=> (= (type $generated@@879) $generated@@103) (=> (and (not (= $generated@@879 $generated@@810)) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@824 $generated@@879) $generated@@60))) (= ($generated@@107 $generated@@827 $generated@@879) ($generated@@107 $generated@@824 $generated@@879))))
 :pattern ( ($generated@@107 $generated@@827 $generated@@879))
))) (and ($generated@@158 $generated@@824 $generated@@827) (= $generated@@829 ($generated@@332 ($generated@@89 ($generated@@332 $generated@@212) ($generated@@0 ($generated@@332 ($generated@@11 true))) ($generated@@332 $generated@@212)))))) (and (and (= $generated@@830 ($generated@@89 $generated@@829 ($generated@@0 ($generated@@332 ($generated@@11 false))) ($generated@@332 $generated@@212))) (= $generated@@831 ($generated@@89 $generated@@830 ($generated@@0 ($generated@@332 ($generated@@11 true))) $generated@@830))) (and (= $generated@@832 ($generated@@89 ($generated@@332 $generated@@212) ($generated@@0 ($generated@@332 ($generated@@11 false))) $generated@@831)) (= $generated@@833 ($generated@@332 ($generated@@389 ($generated@@330 0))))))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@189 $generated@@818 ($generated@@277 $generated@@162))) (=> ($generated@@189 $generated@@818 ($generated@@277 $generated@@162)) (=> (<= ($generated@@330 0) $generated@@834) (=> (and ($generated@@278 $generated@@835) ($generated@@820 $generated@@835)) (=> (and (and (<= ($generated@@330 0) $generated@@836) (forall (($generated@@880 T@U) ) (!  (=> (= (type $generated@@880) $generated@@103) (=> (and (not (= $generated@@880 $generated@@810)) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@827 $generated@@880) $generated@@60))) (= ($generated@@107 $generated@@835 $generated@@880) ($generated@@107 $generated@@827 $generated@@880))))
 :pattern ( ($generated@@107 $generated@@835 $generated@@880))
))) (and ($generated@@158 $generated@@827 $generated@@835) (= $generated@@837 ($generated@@332 ($generated@@389 ($generated@@330 0)))))) (=> (and (and (and (and (= $generated@@838 ($generated@@332 $generated@@211)) (<= ($generated@@330 0) $generated@@839)) (and ($generated@@278 $generated@@840) ($generated@@820 $generated@@840))) (and (and (<= ($generated@@330 0) $generated@@841) (forall (($generated@@881 T@U) ) (!  (=> (= (type $generated@@881) $generated@@103) (=> (and (not (= $generated@@881 $generated@@810)) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@835 $generated@@881) $generated@@60))) (= ($generated@@107 $generated@@840 $generated@@881) ($generated@@107 $generated@@835 $generated@@881))))
 :pattern ( ($generated@@107 $generated@@840 $generated@@881))
))) (and ($generated@@158 $generated@@835 $generated@@840) (= $generated@@842 ($generated@@332 ($generated@@389 ($generated@@330 0))))))) (and (and (and (= $generated@@843 ($generated@@332 $generated@@211)) (<= ($generated@@330 0) $generated@@844)) (and ($generated@@278 $generated@@845) ($generated@@820 $generated@@845))) (and (and (<= ($generated@@330 0) $generated@@846) (forall (($generated@@882 T@U) ) (!  (=> (= (type $generated@@882) $generated@@103) (=> (and (not (= $generated@@882 $generated@@810)) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@840 $generated@@882) $generated@@60))) (= ($generated@@107 $generated@@845 $generated@@882) ($generated@@107 $generated@@840 $generated@@882))))
 :pattern ( ($generated@@107 $generated@@845 $generated@@882))
))) (and ($generated@@158 $generated@@840 $generated@@845) (= $generated@@847 ($generated@@332 ($generated@@393 ($generated@@330 0)))))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@189 $generated@@817 ($generated@@277 $generated@@162))) (=> ($generated@@189 $generated@@817 ($generated@@277 $generated@@162)) (=> (<= ($generated@@330 0) $generated@@848) (=> (and ($generated@@278 $generated@@849) ($generated@@820 $generated@@849)) (=> (and (and (<= ($generated@@330 0) $generated@@850) (forall (($generated@@883 T@U) ) (!  (=> (= (type $generated@@883) $generated@@103) (=> (and (not (= $generated@@883 $generated@@810)) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@845 $generated@@883) $generated@@60))) (= ($generated@@107 $generated@@849 $generated@@883) ($generated@@107 $generated@@845 $generated@@883))))
 :pattern ( ($generated@@107 $generated@@849 $generated@@883))
))) (and ($generated@@158 $generated@@845 $generated@@849) (= $generated@@851 ($generated@@332 ($generated@@389 ($generated@@330 0)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@189 $generated@@816 ($generated@@277 $generated@@162))) (=> ($generated@@189 $generated@@816 ($generated@@277 $generated@@162)) (=> (<= ($generated@@330 0) $generated@@852) (=> (and (and (and ($generated@@278 $generated@@853) ($generated@@820 $generated@@853)) (<= ($generated@@330 0) $generated@@854)) (and (and (forall (($generated@@884 T@U) ) (!  (=> (= (type $generated@@884) $generated@@103) (=> (and (not (= $generated@@884 $generated@@810)) ($generated@@0 ($generated@@109 ($generated@@107 $generated@@849 $generated@@884) $generated@@60))) (= ($generated@@107 $generated@@853 $generated@@884) ($generated@@107 $generated@@849 $generated@@884))))
 :pattern ( ($generated@@107 $generated@@853 $generated@@884))
)) ($generated@@158 $generated@@849 $generated@@853)) (and (= $generated@@855 ($generated@@332 ($generated@@389 ($generated@@330 0)))) (= (ControlFlow 0 2) (- 0 1))))) ($generated@@189 $generated@@813 ($generated@@277 $generated@@162)))))))))))))))))))))))
(let (($generated@@885  (=> (and ($generated@@278 $generated@@811) ($generated@@820 $generated@@811)) (=> (and (and (and ($generated@@189 $generated@@856 ($generated@@277 $generated@@46)) ($generated@@100 $generated@@856 ($generated@@277 $generated@@46) $generated@@811)) true) (and (and ($generated@@189 $generated@@857 ($generated@@277 $generated@@46)) ($generated@@100 $generated@@857 ($generated@@277 $generated@@46) $generated@@811)) true)) (=> (and (and (and (and (and (and ($generated@@189 $generated@@858 ($generated@@277 $generated@@46)) ($generated@@100 $generated@@858 ($generated@@277 $generated@@46) $generated@@811)) true) (and (and ($generated@@189 $generated@@859 ($generated@@277 $generated@@46)) ($generated@@100 $generated@@859 ($generated@@277 $generated@@46) $generated@@811)) true)) (and (and (and ($generated@@189 $generated@@860 ($generated@@277 $generated@@46)) ($generated@@100 $generated@@860 ($generated@@277 $generated@@46) $generated@@811)) true) (and (and ($generated@@189 $generated@@861 ($generated@@277 $generated@@46)) ($generated@@100 $generated@@861 ($generated@@277 $generated@@46) $generated@@811)) true))) (and (and (and (and ($generated@@189 $generated@@862 ($generated@@277 $generated@@46)) ($generated@@100 $generated@@862 ($generated@@277 $generated@@46) $generated@@811)) true) (and (and ($generated@@189 $generated@@863 $generated@@290) ($generated@@100 $generated@@863 $generated@@290 $generated@@811)) true)) (and (and (and ($generated@@189 $generated@@864 $generated@@290) ($generated@@100 $generated@@864 $generated@@290 $generated@@811)) true) (and (and ($generated@@189 $generated@@865 $generated@@290) ($generated@@100 $generated@@865 $generated@@290 $generated@@811)) true)))) (and (and (and (and (and ($generated@@189 $generated@@866 $generated@@290) ($generated@@100 $generated@@866 $generated@@290 $generated@@811)) true) (and (<= ($generated@@330 0) $generated@@867) true)) (and (and (<= ($generated@@330 0) $generated@@868) true) (and (<= ($generated@@330 0) $generated@@869) true))) (and (and (and (<= ($generated@@330 0) $generated@@870) true) (and (<= ($generated@@330 0) $generated@@871) true)) (and (and (<= ($generated@@330 0) $generated@@872) true) (and (= 2 $generated@@873) (= (ControlFlow 0 6) 2)))))) $generated@@874)))))
$generated@@885)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
