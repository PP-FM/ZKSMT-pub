(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) Bool)
(declare-fun $generated@@95 (Int) T@U)
(declare-fun $generated@@96 (T@T T@T) T@T)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 (T@T) T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U) T@U)
(declare-fun $generated@@104 (T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U) T@U)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@258 (T@U T@U) Bool)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@262 (T@U) T@U)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@273 (T@U) T@U)
(declare-fun $generated@@278 (T@U) T@U)
(declare-fun $generated@@282 (T@U) Bool)
(declare-fun $generated@@285 (T@U T@U) T@U)
(declare-fun $generated@@291 (T@U T@U T@U) Bool)
(declare-fun $generated@@300 (T@U) T@U)
(declare-fun $generated@@315 (T@T) T@U)
(declare-fun $generated@@316 (T@U) Int)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@324 (T@U) T@U)
(declare-fun $generated@@325 () T@U)
(declare-fun $generated@@331 (T@U) T@U)
(declare-fun $generated@@336 (T@U) Int)
(declare-fun $generated@@337 (T@T) T@U)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@T) T@U)
(declare-fun $generated@@347 (T@T T@T) T@T)
(declare-fun $generated@@348 (T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@363 (T@U) T@U)
(declare-fun $generated@@364 (T@T T@T) T@U)
(declare-fun $generated@@365 (T@T T@T) T@T)
(declare-fun $generated@@366 (T@T) T@T)
(declare-fun $generated@@367 (T@T) T@T)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@427 (T@T T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@437 (T@U) T@U)
(declare-fun $generated@@438 (T@U) T@U)
(declare-fun $generated@@455 (T@U T@U) T@U)
(declare-fun $generated@@463 (T@U T@U) T@U)
(declare-fun $generated@@473 (T@T) T@U)
(declare-fun $generated@@497 () T@T)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@546 (T@U Int) T@U)
(declare-fun $generated@@555 (T@U) Int)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@586 (T@U) Int)
(declare-fun $generated@@587 (T@U) Int)
(declare-fun $generated@@671 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (and (= ($generated@@1 $generated@@78) 11) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= (type ($generated@@77 $generated@@83 $generated@@84 $generated@@85 $generated@@86)) $generated@@79)
 :pattern ( ($generated@@77 $generated@@83 $generated@@84 $generated@@85 $generated@@86))
))) (forall (($generated@@87 T@U) ) (! (= (type ($generated@@82 $generated@@87)) $generated@@68)
 :pattern ( ($generated@@82 $generated@@87))
))))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@88) $generated@@68) (= (type $generated@@89) $generated@@78)) (= (type $generated@@90) $generated@@79)) (= (type $generated@@91) $generated@@79)) (or ($generated@@80 $generated@@88 $generated@@90 $generated@@91) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@90 ($generated@@82 $generated@@88)) ($generated@@81 $generated@@91 ($generated@@82 $generated@@88)))))) ($generated@@81 ($generated@@77 $generated@@88 $generated@@89 $generated@@90 $generated@@91) ($generated@@82 $generated@@88)))
 :pattern ( ($generated@@77 $generated@@88 $generated@@89 $generated@@90 $generated@@91))
))))
(assert (forall (($generated@@93 T@U) ) (! (= (type ($generated@@92 $generated@@93)) $generated@@69)
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert (= ($generated@@92 $generated@@44) $generated@@49))
(assert (= ($generated@@92 $generated@@45) $generated@@50))
(assert (= ($generated@@92 $generated@@46) $generated@@51))
(assert (= ($generated@@92 $generated@@47) $generated@@52))
(assert (= ($generated@@92 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (= ($generated@@1 ($generated@@96 $generated@@105 $generated@@106)) 13)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@99 ($generated@@96 $generated@@107 $generated@@108)) $generated@@107)
 :pattern ( ($generated@@96 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@100 ($generated@@96 $generated@@109 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@96 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@100 (type $generated@@111))))
(= (type ($generated@@101 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@101 $generated@@111 $generated@@112))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 (type $generated@@116)))
(let (($generated@@118 (type $generated@@115)))
(= (type ($generated@@102 $generated@@114 $generated@@115 $generated@@116)) ($generated@@96 $generated@@118 $generated@@117))))
 :pattern ( ($generated@@102 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@100 (type $generated@@119))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@101 ($generated@@102 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@101 ($generated@@102 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@101 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@101 $generated@@128 $generated@@130)))
 :weight 0
)))) (= ($generated@@1 $generated@@97) 14)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (let (($generated@@133 ($generated@@71 (type $generated@@132))))
(= (type ($generated@@103 $generated@@131 $generated@@132)) $generated@@133))
 :pattern ( ($generated@@103 $generated@@131 $generated@@132))
))) (= ($generated@@1 $generated@@98) 15)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= (type ($generated@@104 $generated@@134 $generated@@135 $generated@@136)) $generated@@98)
 :pattern ( ($generated@@104 $generated@@134 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 ($generated@@71 (type $generated@@138))))
 (=> (= (type $generated@@139) $generated@@140) (= ($generated@@103 ($generated@@104 $generated@@137 $generated@@138 $generated@@139) $generated@@138) $generated@@139)))
 :weight 0
))) (and (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@143 $generated@@144) (= ($generated@@103 ($generated@@104 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@103 $generated@@142 $generated@@144)))
 :weight 0
)) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or true (= ($generated@@103 ($generated@@104 $generated@@146 $generated@@147 $generated@@145) $generated@@148) ($generated@@103 $generated@@146 $generated@@148)))
 :weight 0
)))) (forall (($generated@@149 Int) ) (! (= (type ($generated@@95 $generated@@149)) $generated@@68)
 :pattern ( ($generated@@95 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@2) (= (type $generated@@151) ($generated@@96 $generated@@97 $generated@@98))) ($generated@@94 $generated@@150 ($generated@@95 0) $generated@@151))
 :pattern ( ($generated@@94 $generated@@150 ($generated@@95 0) $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@81 $generated@@152 ($generated@@95 0)))
 :pattern ( ($generated@@81 $generated@@152 ($generated@@95 0)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@155 $generated@@156)) $generated@@68)
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@68) (= (type $generated@@158) $generated@@68)) (= (type $generated@@159) $generated@@79)) ($generated@@81 $generated@@159 ($generated@@154 $generated@@157 $generated@@158))) ($generated@@153 $generated@@159))
 :pattern ( ($generated@@153 $generated@@159) ($generated@@81 $generated@@159 ($generated@@154 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 16) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@79) (= (type $generated@@167) $generated@@79)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert  (and (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@72)
 :pattern ( ($generated@@168 $generated@@170))
)) (= (type $generated@@169) $generated@@79)))
(assert (= ($generated@@168 $generated@@169) $generated@@63))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@68)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@96 $generated@@163 $generated@@2)) (= (type $generated@@175) $generated@@68)) ($generated@@81 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@81 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 17)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@97 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@71 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@97) (= (type $generated@@226) ($generated@@96 $generated@@97 $generated@@98))) (= (type $generated@@227) ($generated@@70 $generated@@4))) (= (type $generated@@229) $generated@@97)) (= (type $generated@@230) ($generated@@70 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@232 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@178 $generated@@97 $generated@@4))
 :pattern ( ($generated@@232 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@71 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@97) (= (type $generated@@238) ($generated@@96 $generated@@97 $generated@@98))) (= (type $generated@@239) ($generated@@70 $generated@@4))) (= (type $generated@@241) $generated@@97)) (= (type $generated@@242) ($generated@@70 $generated@@243))) (= ($generated@@0 ($generated@@176 ($generated@@232 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@176 ($generated@@232 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (and (and (= (type $generated@@245) $generated@@68) (= (type $generated@@246) ($generated@@96 $generated@@97 $generated@@98))) ($generated@@244 $generated@@246)) ($generated@@94 $generated@@169 ($generated@@82 $generated@@245) $generated@@246))
 :pattern ( ($generated@@94 $generated@@169 ($generated@@82 $generated@@245) $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! (= (type ($generated@@247 $generated@@249 $generated@@250)) $generated@@79)
 :pattern ( ($generated@@247 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (and (and (= (type $generated@@251) $generated@@68) (= (type $generated@@252) $generated@@68)) (= (type $generated@@253) $generated@@163)) (= (type $generated@@254) $generated@@163)) (= ($generated@@81 ($generated@@247 $generated@@253 $generated@@254) ($generated@@154 $generated@@251 $generated@@252))  (and ($generated@@248 $generated@@253 $generated@@251) ($generated@@248 $generated@@254 $generated@@252))))
 :pattern ( ($generated@@81 ($generated@@247 $generated@@253 $generated@@254) ($generated@@154 $generated@@251 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@68) ($generated@@81 $generated@@169 ($generated@@82 $generated@@255)))
 :pattern ( ($generated@@81 $generated@@169 ($generated@@82 $generated@@255)))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@79) (= (type $generated@@257) $generated@@79)) (= ($generated@@160 $generated@@256 $generated@@257) (= $generated@@256 $generated@@257)))
 :pattern ( ($generated@@160 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@79) (= (type $generated@@260) $generated@@79)) (= ($generated@@258 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@258 $generated@@259 $generated@@260))
)))
(assert  (and (forall (($generated@@264 T@U) ) (! (= (type ($generated@@262 $generated@@264)) $generated@@163)
 :pattern ( ($generated@@262 $generated@@264))
)) (forall (($generated@@265 T@U) ) (! (= (type ($generated@@263 $generated@@265)) $generated@@79)
 :pattern ( ($generated@@263 $generated@@265))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@79) (= (type $generated@@267) $generated@@79)) (and ($generated@@261 $generated@@266) ($generated@@261 $generated@@267))) (= ($generated@@258 $generated@@266 $generated@@267)  (and (= ($generated@@262 $generated@@266) ($generated@@262 $generated@@267)) ($generated@@258 ($generated@@263 $generated@@266) ($generated@@263 $generated@@267)))))
 :pattern ( ($generated@@258 $generated@@266 $generated@@267) ($generated@@261 $generated@@266))
 :pattern ( ($generated@@258 $generated@@266 $generated@@267) ($generated@@261 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= (type ($generated@@268 $generated@@269)) $generated@@68)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) ($generated@@96 $generated@@163 $generated@@4)) (= (type $generated@@271) $generated@@68)) (= ($generated@@81 $generated@@270 ($generated@@268 $generated@@271)) (forall (($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@163) ($generated@@0 ($generated@@101 $generated@@270 $generated@@272))) ($generated@@248 $generated@@272 $generated@@271))
 :pattern ( ($generated@@101 $generated@@270 $generated@@272))
))))
 :pattern ( ($generated@@81 $generated@@270 ($generated@@268 $generated@@271)))
)))
(assert (forall (($generated@@274 T@U) ) (! (= (type ($generated@@273 $generated@@274)) $generated@@68)
 :pattern ( ($generated@@273 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) ($generated@@96 $generated@@163 $generated@@4)) (= (type $generated@@276) $generated@@68)) (= ($generated@@81 $generated@@275 ($generated@@273 $generated@@276)) (forall (($generated@@277 T@U) ) (!  (=> (and (= (type $generated@@277) $generated@@163) ($generated@@0 ($generated@@101 $generated@@275 $generated@@277))) ($generated@@248 $generated@@277 $generated@@276))
 :pattern ( ($generated@@101 $generated@@275 $generated@@277))
))))
 :pattern ( ($generated@@81 $generated@@275 ($generated@@273 $generated@@276)))
)))
(assert (forall (($generated@@279 T@U) ) (! (let (($generated@@280 (type $generated@@279)))
(= (type ($generated@@278 $generated@@279)) $generated@@280))
 :pattern ( ($generated@@278 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= ($generated@@278 $generated@@281) $generated@@281)
 :pattern ( ($generated@@278 $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (= (type $generated@@283) $generated@@79) (= (type $generated@@284) $generated@@79)) (and ($generated@@282 $generated@@283) ($generated@@282 $generated@@284))) (= ($generated@@258 $generated@@283 $generated@@284) true))
 :pattern ( ($generated@@258 $generated@@283 $generated@@284) ($generated@@282 $generated@@283))
 :pattern ( ($generated@@258 $generated@@283 $generated@@284) ($generated@@282 $generated@@284))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (! (= (type ($generated@@285 $generated@@286 $generated@@287)) $generated@@79)
 :pattern ( ($generated@@285 $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and (= (type $generated@@288) $generated@@68) (= (type $generated@@289) $generated@@163)) (= (type $generated@@290) $generated@@79)) (= ($generated@@81 ($generated@@285 $generated@@289 $generated@@290) ($generated@@82 $generated@@288))  (and ($generated@@248 $generated@@289 $generated@@288) ($generated@@81 $generated@@290 ($generated@@82 $generated@@288)))))
 :pattern ( ($generated@@81 ($generated@@285 $generated@@289 $generated@@290) ($generated@@82 $generated@@288)))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@292) $generated@@68) (= (type $generated@@293) $generated@@68)) (= (type $generated@@294) $generated@@163)) (= (type $generated@@295) $generated@@163)) (= (type $generated@@296) ($generated@@96 $generated@@97 $generated@@98))) ($generated@@244 $generated@@296)) (= ($generated@@94 ($generated@@247 $generated@@294 $generated@@295) ($generated@@154 $generated@@292 $generated@@293) $generated@@296)  (and ($generated@@291 $generated@@294 $generated@@292 $generated@@296) ($generated@@291 $generated@@295 $generated@@293 $generated@@296))))
 :pattern ( ($generated@@94 ($generated@@247 $generated@@294 $generated@@295) ($generated@@154 $generated@@292 $generated@@293) $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@79) (= ($generated@@153 $generated@@297) (= ($generated@@168 $generated@@297) $generated@@61)))
 :pattern ( ($generated@@153 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (= (type $generated@@298) $generated@@79) (= ($generated@@282 $generated@@298) (= ($generated@@168 $generated@@298) $generated@@63)))
 :pattern ( ($generated@@282 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (= (type $generated@@299) $generated@@79) (= ($generated@@261 $generated@@299) (= ($generated@@168 $generated@@299) $generated@@65)))
 :pattern ( ($generated@@261 $generated@@299))
)))
(assert (forall (($generated@@301 T@U) ) (! (= (type ($generated@@300 $generated@@301)) $generated@@78)
 :pattern ( ($generated@@300 $generated@@301))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@302) $generated@@68) (= (type $generated@@303) $generated@@78)) (= (type $generated@@304) $generated@@79)) (= (type $generated@@305) $generated@@79)) (or ($generated@@80 $generated@@302 ($generated@@278 $generated@@304) ($generated@@278 $generated@@305)) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@304 ($generated@@82 $generated@@302)) ($generated@@81 $generated@@305 ($generated@@82 $generated@@302)))))) (and (=> (not ($generated@@0 ($generated@@278 ($generated@@11 ($generated@@282 ($generated@@278 $generated@@304)))))) (let (($generated@@306 ($generated@@278 ($generated@@263 ($generated@@278 $generated@@304)))))
($generated@@80 $generated@@302 $generated@@306 ($generated@@278 $generated@@305)))) (= ($generated@@77 $generated@@302 ($generated@@300 $generated@@303) ($generated@@278 $generated@@304) ($generated@@278 $generated@@305)) (ite ($generated@@282 ($generated@@278 $generated@@304)) $generated@@305 (let (($generated@@307 ($generated@@278 ($generated@@263 ($generated@@278 $generated@@304)))))
(let (($generated@@308 ($generated@@278 ($generated@@262 ($generated@@278 $generated@@304)))))
($generated@@278 ($generated@@285 $generated@@308 ($generated@@278 ($generated@@77 $generated@@302 ($generated@@300 $generated@@303) $generated@@307 ($generated@@278 $generated@@305)))))))))))
 :weight 3
 :pattern ( ($generated@@77 $generated@@302 ($generated@@300 $generated@@303) ($generated@@278 $generated@@304) ($generated@@278 $generated@@305)))
))))
(assert (forall (($generated@@309 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@79) ($generated@@153 $generated@@309)) (exists (($generated@@310 T@U) ($generated@@311 T@U) ) (!  (and (and (= (type $generated@@310) $generated@@163) (= (type $generated@@311) $generated@@163)) (= $generated@@309 ($generated@@247 $generated@@310 $generated@@311)))
 :no-pattern (type $generated@@310)
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@310)
 :no-pattern ($generated@@0 $generated@@310)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
)))
 :pattern ( ($generated@@153 $generated@@309))
)))
(assert (forall (($generated@@312 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@79) ($generated@@261 $generated@@312)) (exists (($generated@@313 T@U) ($generated@@314 T@U) ) (!  (and (and (= (type $generated@@313) $generated@@163) (= (type $generated@@314) $generated@@79)) (= $generated@@312 ($generated@@285 $generated@@313 $generated@@314)))
 :no-pattern (type $generated@@313)
 :no-pattern (type $generated@@314)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
 :no-pattern ($generated $generated@@314)
 :no-pattern ($generated@@0 $generated@@314)
)))
 :pattern ( ($generated@@261 $generated@@312))
)))
(assert  (and (and (forall (($generated@@319 T@T) ) (= ($generated@@1 ($generated@@317 $generated@@319)) 18)) (forall (($generated@@320 T@T) ) (! (= ($generated@@318 ($generated@@317 $generated@@320)) $generated@@320)
 :pattern ( ($generated@@317 $generated@@320))
))) (forall (($generated@@321 T@T) ) (! (= (type ($generated@@315 $generated@@321)) ($generated@@317 $generated@@321))
 :pattern ( ($generated@@315 $generated@@321))
))))
(assert (forall (($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@315 $generated@@322)) 0)
 :pattern ( ($generated@@315 $generated@@322))
)))
(assert (forall (($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@323) $generated@@79) ($generated@@282 $generated@@323)) (= $generated@@323 $generated@@169))
 :pattern ( ($generated@@282 $generated@@323))
)))
(assert  (and (forall (($generated@@326 T@U) ) (! (= (type ($generated@@324 $generated@@326)) $generated@@78)
 :pattern ( ($generated@@324 $generated@@326))
)) (= (type $generated@@325) $generated@@78)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 T@U) ($generated@@330 T@U) ) (!  (=> (and (and (and (= (type $generated@@327) $generated@@68) (= (type $generated@@328) $generated@@78)) (= (type $generated@@329) $generated@@79)) (= (type $generated@@330) $generated@@79)) (= ($generated@@77 $generated@@327 $generated@@328 $generated@@329 $generated@@330) ($generated@@77 $generated@@327 $generated@@325 $generated@@329 $generated@@330)))
 :pattern ( ($generated@@77 $generated@@327 ($generated@@324 $generated@@328) $generated@@329 $generated@@330))
)))
(assert (forall (($generated@@332 T@U) ) (! (= (type ($generated@@331 $generated@@332)) $generated@@163)
 :pattern ( ($generated@@331 $generated@@332))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@68) (= (type $generated@@335) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@291 ($generated@@331 $generated@@333) $generated@@334 $generated@@335) ($generated@@94 $generated@@333 $generated@@334 $generated@@335)))
 :pattern ( ($generated@@291 ($generated@@331 $generated@@333) $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@338 T@T) ) (! (= (type ($generated@@337 $generated@@338)) ($generated@@96 $generated@@338 $generated@@2))
 :pattern ( ($generated@@337 $generated@@338))
)))
(assert (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@99 (type $generated@@339))))
 (=> (= (type $generated@@339) ($generated@@96 $generated@@340 $generated@@2)) (and (= (= ($generated@@336 $generated@@339) 0) (= $generated@@339 ($generated@@337 $generated@@340))) (=> (not (= ($generated@@336 $generated@@339) 0)) (exists (($generated@@341 T@U) ) (!  (and (= (type $generated@@341) $generated@@340) (< 0 ($generated ($generated@@101 $generated@@339 $generated@@341))))
 :no-pattern (type $generated@@341)
 :no-pattern ($generated $generated@@341)
 :no-pattern ($generated@@0 $generated@@341)
))))))
 :pattern ( ($generated@@336 $generated@@339))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@73)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ) (!  (=> (= (type $generated@@344) $generated@@68) (and (= ($generated@@92 ($generated@@82 $generated@@344)) $generated@@64) (= ($generated@@342 ($generated@@82 $generated@@344)) $generated@@67)))
 :pattern ( ($generated@@82 $generated@@344))
)))
(assert  (and (and (and (and (forall (($generated@@350 T@T) ($generated@@351 T@T) ) (= ($generated@@1 ($generated@@347 $generated@@350 $generated@@351)) 19)) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= ($generated@@348 ($generated@@347 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@347 $generated@@352 $generated@@353))
))) (forall (($generated@@354 T@T) ($generated@@355 T@T) ) (! (= ($generated@@349 ($generated@@347 $generated@@354 $generated@@355)) $generated@@355)
 :pattern ( ($generated@@347 $generated@@354 $generated@@355))
))) (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@348 (type $generated@@356))))
(= (type ($generated@@345 $generated@@356)) ($generated@@96 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@345 $generated@@356))
))) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= (type ($generated@@346 $generated@@358 $generated@@359)) ($generated@@347 $generated@@358 $generated@@359))
 :pattern ( ($generated@@346 $generated@@358 $generated@@359))
))))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@T) ) (! (let (($generated@@362 (type $generated@@360)))
 (not ($generated@@0 ($generated@@101 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360))))
 :pattern ( (let (($generated@@362 (type $generated@@360)))
($generated@@101 ($generated@@345 ($generated@@346 $generated@@362 $generated@@361)) $generated@@360)))
)))
(assert  (and (and (and (and (forall (($generated@@368 T@T) ($generated@@369 T@T) ) (= ($generated@@1 ($generated@@365 $generated@@368 $generated@@369)) 20)) (forall (($generated@@370 T@T) ($generated@@371 T@T) ) (! (= ($generated@@366 ($generated@@365 $generated@@370 $generated@@371)) $generated@@370)
 :pattern ( ($generated@@365 $generated@@370 $generated@@371))
))) (forall (($generated@@372 T@T) ($generated@@373 T@T) ) (! (= ($generated@@367 ($generated@@365 $generated@@372 $generated@@373)) $generated@@373)
 :pattern ( ($generated@@365 $generated@@372 $generated@@373))
))) (forall (($generated@@374 T@U) ) (! (let (($generated@@375 ($generated@@366 (type $generated@@374))))
(= (type ($generated@@363 $generated@@374)) ($generated@@96 $generated@@375 $generated@@4)))
 :pattern ( ($generated@@363 $generated@@374))
))) (forall (($generated@@376 T@T) ($generated@@377 T@T) ) (! (= (type ($generated@@364 $generated@@376 $generated@@377)) ($generated@@365 $generated@@376 $generated@@377))
 :pattern ( ($generated@@364 $generated@@376 $generated@@377))
))))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@T) ) (! (let (($generated@@380 (type $generated@@378)))
 (not ($generated@@0 ($generated@@101 ($generated@@363 ($generated@@364 $generated@@380 $generated@@379)) $generated@@378))))
 :pattern ( (let (($generated@@380 (type $generated@@378)))
($generated@@101 ($generated@@363 ($generated@@364 $generated@@380 $generated@@379)) $generated@@378)))
)))
(assert (forall (($generated@@381 T@U) ) (! (let (($generated@@382 ($generated@@99 (type $generated@@381))))
 (=> (= (type $generated@@381) ($generated@@96 $generated@@382 $generated@@2)) (= ($generated@@172 $generated@@381) (forall (($generated@@383 T@U) ) (!  (=> (= (type $generated@@383) $generated@@382) (and (<= 0 ($generated ($generated@@101 $generated@@381 $generated@@383))) (<= ($generated ($generated@@101 $generated@@381 $generated@@383)) ($generated@@336 $generated@@381))))
 :pattern ( ($generated@@101 $generated@@381 $generated@@383))
)))))
 :pattern ( ($generated@@172 $generated@@381))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@349 (type $generated@@384))))
(let (($generated@@386 ($generated@@348 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@347 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@346 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@386) ($generated@@0 ($generated@@101 ($generated@@345 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@345 $generated@@384))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@349 (type $generated@@389))))
(= (type ($generated@@388 $generated@@389)) ($generated@@96 $generated@@390 $generated@@4)))
 :pattern ( ($generated@@388 $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@349 (type $generated@@391))))
(let (($generated@@393 ($generated@@348 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@347 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@346 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@392) ($generated@@0 ($generated@@101 ($generated@@388 $generated@@391) $generated@@394)))
 :no-pattern (type $generated@@394)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
))))))
 :pattern ( ($generated@@388 $generated@@391))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@367 (type $generated@@395))))
(let (($generated@@397 ($generated@@366 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@365 $generated@@397 $generated@@396)) (or (= $generated@@395 ($generated@@364 $generated@@397 $generated@@396)) (exists (($generated@@398 T@U) ) (!  (and (= (type $generated@@398) $generated@@397) ($generated@@0 ($generated@@101 ($generated@@363 $generated@@395) $generated@@398)))
 :no-pattern (type $generated@@398)
 :no-pattern ($generated $generated@@398)
 :no-pattern ($generated@@0 $generated@@398)
))))))
 :pattern ( ($generated@@363 $generated@@395))
)))
(assert (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@367 (type $generated@@400))))
(= (type ($generated@@399 $generated@@400)) ($generated@@96 $generated@@401 $generated@@4)))
 :pattern ( ($generated@@399 $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@367 (type $generated@@402))))
(let (($generated@@404 ($generated@@366 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@365 $generated@@404 $generated@@403)) (or (= $generated@@402 ($generated@@364 $generated@@404 $generated@@403)) (exists (($generated@@405 T@U) ) (!  (and (= (type $generated@@405) $generated@@403) ($generated@@0 ($generated@@101 ($generated@@399 $generated@@402) $generated@@405)))
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@399 $generated@@402))
)))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@96 $generated@@163 $generated@@2)) (= (type $generated@@407) $generated@@68)) (= ($generated@@81 $generated@@406 ($generated@@171 $generated@@407)) (forall (($generated@@408 T@U) ) (!  (=> (and (= (type $generated@@408) $generated@@163) (< 0 ($generated ($generated@@101 $generated@@406 $generated@@408)))) ($generated@@248 $generated@@408 $generated@@407))
 :pattern ( ($generated@@101 $generated@@406 $generated@@408))
))))
 :pattern ( ($generated@@81 $generated@@406 ($generated@@171 $generated@@407)))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@409 T@U) ($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@409) $generated@@68) (= (type $generated@@410) $generated@@78)) (= (type $generated@@411) $generated@@79)) (= (type $generated@@412) $generated@@79)) (or ($generated@@80 $generated@@409 $generated@@411 $generated@@412) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@411 ($generated@@82 $generated@@409)) ($generated@@81 $generated@@412 ($generated@@82 $generated@@409)))))) (and (=> (not ($generated@@282 $generated@@411)) (let (($generated@@413 ($generated@@263 $generated@@411)))
($generated@@80 $generated@@409 $generated@@413 $generated@@412))) (= ($generated@@77 $generated@@409 ($generated@@300 $generated@@410) $generated@@411 $generated@@412) (ite ($generated@@282 $generated@@411) $generated@@412 (let (($generated@@414 ($generated@@263 $generated@@411)))
(let (($generated@@415 ($generated@@262 $generated@@411)))
($generated@@285 $generated@@415 ($generated@@77 $generated@@409 $generated@@410 $generated@@414 $generated@@412))))))))
 :pattern ( ($generated@@77 $generated@@409 ($generated@@300 $generated@@410) $generated@@411 $generated@@412))
))))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (= (type $generated@@416) ($generated@@96 $generated@@163 $generated@@4)) (= (type $generated@@417) $generated@@68)) (= (type $generated@@418) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@416 ($generated@@268 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@163) ($generated@@0 ($generated@@101 $generated@@416 $generated@@419))) ($generated@@291 $generated@@419 $generated@@417 $generated@@418))
 :pattern ( ($generated@@101 $generated@@416 $generated@@419))
))))
 :pattern ( ($generated@@94 $generated@@416 ($generated@@268 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ($generated@@422 T@U) ) (!  (=> (and (and (= (type $generated@@420) ($generated@@96 $generated@@163 $generated@@4)) (= (type $generated@@421) $generated@@68)) (= (type $generated@@422) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@420 ($generated@@273 $generated@@421) $generated@@422) (forall (($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@423) $generated@@163) ($generated@@0 ($generated@@101 $generated@@420 $generated@@423))) ($generated@@291 $generated@@423 $generated@@421 $generated@@422))
 :pattern ( ($generated@@101 $generated@@420 $generated@@423))
))))
 :pattern ( ($generated@@94 $generated@@420 ($generated@@273 $generated@@421) $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 (type $generated@@424)))
(= ($generated ($generated@@101 ($generated@@337 $generated@@425) $generated@@424)) 0))
 :pattern ( (let (($generated@@425 (type $generated@@424)))
($generated@@101 ($generated@@337 $generated@@425) $generated@@424)))
)))
(assert  (and (and (forall (($generated@@429 T@U) ) (! (= (type ($generated@@426 $generated@@429)) ($generated@@96 $generated@@163 $generated@@4))
 :pattern ( ($generated@@426 $generated@@429))
)) (forall (($generated@@430 T@T) ($generated@@431 T@U) ) (! (= (type ($generated@@427 $generated@@430 $generated@@431)) $generated@@430)
 :pattern ( ($generated@@427 $generated@@430 $generated@@431))
))) (forall (($generated@@432 T@U) ) (! (let (($generated@@433 ($generated@@349 (type $generated@@432))))
(let (($generated@@434 ($generated@@348 (type $generated@@432))))
(= (type ($generated@@428 $generated@@432)) ($generated@@96 $generated@@434 $generated@@433))))
 :pattern ( ($generated@@428 $generated@@432))
))))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@435) ($generated@@347 $generated@@163 $generated@@163)) (= (type $generated@@436) $generated@@163)) (= ($generated@@0 ($generated@@101 ($generated@@426 $generated@@435) $generated@@436))  (and ($generated@@0 ($generated@@101 ($generated@@345 $generated@@435) ($generated@@161 ($generated@@427 $generated@@79 $generated@@436)))) (= ($generated@@101 ($generated@@428 $generated@@435) ($generated@@161 ($generated@@427 $generated@@79 $generated@@436))) ($generated@@162 ($generated@@427 $generated@@79 $generated@@436))))))
 :pattern ( ($generated@@101 ($generated@@426 $generated@@435) $generated@@436))
)))
(assert  (and (forall (($generated@@439 T@U) ) (! (= (type ($generated@@437 $generated@@439)) ($generated@@96 $generated@@163 $generated@@4))
 :pattern ( ($generated@@437 $generated@@439))
)) (forall (($generated@@440 T@U) ) (! (let (($generated@@441 ($generated@@367 (type $generated@@440))))
(let (($generated@@442 ($generated@@366 (type $generated@@440))))
(= (type ($generated@@438 $generated@@440)) ($generated@@96 $generated@@442 $generated@@441))))
 :pattern ( ($generated@@438 $generated@@440))
))))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@443) ($generated@@365 $generated@@163 $generated@@163)) (= (type $generated@@444) $generated@@163)) (= ($generated@@0 ($generated@@101 ($generated@@437 $generated@@443) $generated@@444))  (and ($generated@@0 ($generated@@101 ($generated@@363 $generated@@443) ($generated@@161 ($generated@@427 $generated@@79 $generated@@444)))) (= ($generated@@101 ($generated@@438 $generated@@443) ($generated@@161 ($generated@@427 $generated@@79 $generated@@444))) ($generated@@162 ($generated@@427 $generated@@79 $generated@@444))))))
 :pattern ( ($generated@@101 ($generated@@437 $generated@@443) $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@446)))
(let (($generated@@448 ($generated@@348 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@347 $generated@@448 $generated@@447)) (= ($generated@@0 ($generated@@101 ($generated@@388 $generated@@445) $generated@@446)) (exists (($generated@@449 T@U) ) (!  (and (= (type $generated@@449) $generated@@448) (and ($generated@@0 ($generated@@101 ($generated@@345 $generated@@445) $generated@@449)) (= $generated@@446 ($generated@@101 ($generated@@428 $generated@@445) $generated@@449))))
 :pattern ( ($generated@@101 ($generated@@345 $generated@@445) $generated@@449))
 :pattern ( ($generated@@101 ($generated@@428 $generated@@445) $generated@@449))
))))))
 :pattern ( ($generated@@101 ($generated@@388 $generated@@445) $generated@@446))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (! (let (($generated@@452 (type $generated@@451)))
(let (($generated@@453 ($generated@@366 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@365 $generated@@453 $generated@@452)) (= ($generated@@0 ($generated@@101 ($generated@@399 $generated@@450) $generated@@451)) (exists (($generated@@454 T@U) ) (!  (and (= (type $generated@@454) $generated@@453) (and ($generated@@0 ($generated@@101 ($generated@@363 $generated@@450) $generated@@454)) (= $generated@@451 ($generated@@101 ($generated@@438 $generated@@450) $generated@@454))))
 :pattern ( ($generated@@101 ($generated@@363 $generated@@450) $generated@@454))
 :pattern ( ($generated@@101 ($generated@@438 $generated@@450) $generated@@454))
))))))
 :pattern ( ($generated@@101 ($generated@@399 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (! (= (type ($generated@@455 $generated@@456 $generated@@457)) $generated@@68)
 :pattern ( ($generated@@455 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (and (and (= (type $generated@@458) ($generated@@347 $generated@@163 $generated@@163)) (= (type $generated@@459) $generated@@68)) (= (type $generated@@460) $generated@@68)) (= (type $generated@@461) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461) (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@163) ($generated@@0 ($generated@@101 ($generated@@345 $generated@@458) $generated@@462))) (and ($generated@@291 ($generated@@101 ($generated@@428 $generated@@458) $generated@@462) $generated@@460 $generated@@461) ($generated@@291 $generated@@462 $generated@@459 $generated@@461)))
 :pattern ( ($generated@@101 ($generated@@428 $generated@@458) $generated@@462))
 :pattern ( ($generated@@101 ($generated@@345 $generated@@458) $generated@@462))
))))
 :pattern ( ($generated@@94 $generated@@458 ($generated@@455 $generated@@459 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (! (= (type ($generated@@463 $generated@@464 $generated@@465)) $generated@@68)
 :pattern ( ($generated@@463 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (and (and (= (type $generated@@466) ($generated@@365 $generated@@163 $generated@@163)) (= (type $generated@@467) $generated@@68)) (= (type $generated@@468) $generated@@68)) (= (type $generated@@469) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@466 ($generated@@463 $generated@@467 $generated@@468) $generated@@469) (forall (($generated@@470 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@163) ($generated@@0 ($generated@@101 ($generated@@363 $generated@@466) $generated@@470))) (and ($generated@@291 ($generated@@101 ($generated@@438 $generated@@466) $generated@@470) $generated@@468 $generated@@469) ($generated@@291 $generated@@470 $generated@@467 $generated@@469)))
 :pattern ( ($generated@@101 ($generated@@438 $generated@@466) $generated@@470))
 :pattern ( ($generated@@101 ($generated@@363 $generated@@466) $generated@@470))
))))
 :pattern ( ($generated@@94 $generated@@466 ($generated@@463 $generated@@467 $generated@@468) $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (and (= (type $generated@@471) $generated@@68) (= (type $generated@@472) $generated@@79)) ($generated@@81 $generated@@472 ($generated@@82 $generated@@471))) (or ($generated@@282 $generated@@472) ($generated@@261 $generated@@472)))
 :pattern ( ($generated@@261 $generated@@472) ($generated@@81 $generated@@472 ($generated@@82 $generated@@471)))
 :pattern ( ($generated@@282 $generated@@472) ($generated@@81 $generated@@472 ($generated@@82 $generated@@471)))
)))
(assert (forall (($generated@@474 T@T) ) (! (= (type ($generated@@473 $generated@@474)) ($generated@@96 $generated@@474 $generated@@4))
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (! (let (($generated@@476 ($generated@@367 (type $generated@@475))))
(let (($generated@@477 ($generated@@366 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@365 $generated@@477 $generated@@476)) (= (= $generated@@475 ($generated@@364 $generated@@477 $generated@@476)) (= ($generated@@363 $generated@@475) ($generated@@473 $generated@@477))))))
 :pattern ( ($generated@@363 $generated@@475))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@367 (type $generated@@478))))
(let (($generated@@480 ($generated@@366 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@365 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@364 $generated@@480 $generated@@479)) (= ($generated@@399 $generated@@478) ($generated@@473 $generated@@479))))))
 :pattern ( ($generated@@399 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@367 (type $generated@@481))))
(let (($generated@@483 ($generated@@366 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@365 $generated@@483 $generated@@482)) (= (= $generated@@481 ($generated@@364 $generated@@483 $generated@@482)) (= ($generated@@437 $generated@@481) ($generated@@473 $generated@@163))))))
 :pattern ( ($generated@@437 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@349 (type $generated@@484))))
(let (($generated@@486 ($generated@@348 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@347 $generated@@486 $generated@@485)) (or (= $generated@@484 ($generated@@346 $generated@@486 $generated@@485)) (exists (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (and (and (= (type $generated@@487) $generated@@163) (= (type $generated@@488) $generated@@163)) ($generated@@0 ($generated@@101 ($generated@@426 $generated@@484) ($generated@@331 ($generated@@247 $generated@@487 $generated@@488)))))
 :no-pattern (type $generated@@487)
 :no-pattern (type $generated@@488)
 :no-pattern ($generated $generated@@487)
 :no-pattern ($generated@@0 $generated@@487)
 :no-pattern ($generated $generated@@488)
 :no-pattern ($generated@@0 $generated@@488)
))))))
 :pattern ( ($generated@@426 $generated@@484))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@367 (type $generated@@489))))
(let (($generated@@491 ($generated@@366 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@365 $generated@@491 $generated@@490)) (or (= $generated@@489 ($generated@@364 $generated@@491 $generated@@490)) (exists (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (and (and (= (type $generated@@492) $generated@@163) (= (type $generated@@493) $generated@@163)) ($generated@@0 ($generated@@101 ($generated@@437 $generated@@489) ($generated@@331 ($generated@@247 $generated@@492 $generated@@493)))))
 :no-pattern (type $generated@@492)
 :no-pattern (type $generated@@493)
 :no-pattern ($generated $generated@@492)
 :no-pattern ($generated@@0 $generated@@492)
 :no-pattern ($generated $generated@@493)
 :no-pattern ($generated@@0 $generated@@493)
))))))
 :pattern ( ($generated@@437 $generated@@489))
)))
(assert (forall (($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@163) ($generated@@248 $generated@@494 $generated@@46)) (and (= ($generated@@331 ($generated@@427 $generated@@2 $generated@@494)) $generated@@494) ($generated@@81 ($generated@@427 $generated@@2 $generated@@494) $generated@@46)))
 :pattern ( ($generated@@248 $generated@@494 $generated@@46))
)))
(assert (forall (($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@495) $generated@@163) ($generated@@248 $generated@@495 $generated@@47)) (and (= ($generated@@331 ($generated@@427 $generated@@3 $generated@@495)) $generated@@495) ($generated@@81 ($generated@@427 $generated@@3 $generated@@495) $generated@@47)))
 :pattern ( ($generated@@248 $generated@@495 $generated@@47))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@163) ($generated@@248 $generated@@496 $generated@@44)) (and (= ($generated@@331 ($generated@@427 $generated@@4 $generated@@496)) $generated@@496) ($generated@@81 ($generated@@427 $generated@@4 $generated@@496) $generated@@44)))
 :pattern ( ($generated@@248 $generated@@496 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@497) 21))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@163) ($generated@@248 $generated@@498 $generated@@45)) (and (= ($generated@@331 ($generated@@427 $generated@@497 $generated@@498)) $generated@@498) ($generated@@81 ($generated@@427 $generated@@497 $generated@@498) $generated@@45)))
 :pattern ( ($generated@@248 $generated@@498 $generated@@45))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@68) (= ($generated@@248 ($generated@@331 $generated@@499) $generated@@500) ($generated@@81 $generated@@499 $generated@@500)))
 :pattern ( ($generated@@248 ($generated@@331 $generated@@499) $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@99 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@96 $generated@@502 $generated@@2)) (<= 0 ($generated@@336 $generated@@501))))
 :pattern ( ($generated@@336 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (let (($generated@@504 ($generated@@318 (type $generated@@503))))
 (=> (= (type $generated@@503) ($generated@@317 $generated@@504)) (<= 0 ($generated@@316 $generated@@503))))
 :pattern ( ($generated@@316 $generated@@503))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@68) (= (type $generated@@508) $generated@@68)) (= ($generated@@505 ($generated@@455 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@455 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@68) (= (type $generated@@512) $generated@@68)) (= ($generated@@509 ($generated@@455 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@455 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@68) (= (type $generated@@514) $generated@@68)) (= ($generated@@92 ($generated@@455 $generated@@513 $generated@@514)) $generated@@58))
 :pattern ( ($generated@@455 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@68)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@517) $generated@@68) (= (type $generated@@518) $generated@@68)) (= ($generated@@515 ($generated@@463 $generated@@517 $generated@@518)) $generated@@517))
 :pattern ( ($generated@@463 $generated@@517 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@68)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (= (type $generated@@521) $generated@@68) (= (type $generated@@522) $generated@@68)) (= ($generated@@519 ($generated@@463 $generated@@521 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@463 $generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@92 ($generated@@463 $generated@@523 $generated@@524)) $generated@@59))
 :pattern ( ($generated@@463 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@163) (= (type $generated@@526) $generated@@163)) (= ($generated@@168 ($generated@@247 $generated@@525 $generated@@526)) $generated@@61))
 :pattern ( ($generated@@247 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@68)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@68) (= (type $generated@@530) $generated@@68)) (= ($generated@@527 ($generated@@154 $generated@@529 $generated@@530)) $generated@@529))
 :pattern ( ($generated@@154 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@68)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@68) (= (type $generated@@534) $generated@@68)) (= ($generated@@531 ($generated@@154 $generated@@533 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@154 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (= (type $generated@@535) $generated@@163) (= (type $generated@@536) $generated@@163)) (= ($generated@@161 ($generated@@247 $generated@@535 $generated@@536)) $generated@@535))
 :pattern ( ($generated@@247 $generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@163) (= (type $generated@@538) $generated@@163)) (= ($generated@@162 ($generated@@247 $generated@@537 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@247 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@163) (= (type $generated@@540) $generated@@79)) (= ($generated@@168 ($generated@@285 $generated@@539 $generated@@540)) $generated@@65))
 :pattern ( ($generated@@285 $generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@163) (= (type $generated@@542) $generated@@79)) (= ($generated@@262 ($generated@@285 $generated@@541 $generated@@542)) $generated@@541))
 :pattern ( ($generated@@285 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@163) (= (type $generated@@544) $generated@@79)) (= ($generated@@263 ($generated@@285 $generated@@543 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@285 $generated@@543 $generated@@544))
)))
(assert  (and (forall (($generated@@547 T@U) ) (! (= (type ($generated@@545 $generated@@547)) $generated@@68)
 :pattern ( ($generated@@545 $generated@@547))
)) (forall (($generated@@548 T@U) ($generated@@549 Int) ) (! (let (($generated@@550 ($generated@@318 (type $generated@@548))))
(= (type ($generated@@546 $generated@@548 $generated@@549)) $generated@@550))
 :pattern ( ($generated@@546 $generated@@548 $generated@@549))
))))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@551) ($generated@@317 $generated@@163)) (= (type $generated@@552) $generated@@68)) (= (type $generated@@553) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@551 ($generated@@545 $generated@@552) $generated@@553) (forall (($generated@@554 Int) ) (!  (=> (and (<= 0 $generated@@554) (< $generated@@554 ($generated@@316 $generated@@551))) ($generated@@291 ($generated@@546 $generated@@551 $generated@@554) $generated@@552 $generated@@553))
 :pattern ( ($generated@@546 $generated@@551 $generated@@554))
))))
 :pattern ( ($generated@@94 $generated@@551 ($generated@@545 $generated@@552) $generated@@553))
)))
(assert (forall (($generated@@556 Int) ) (! (= ($generated@@555 ($generated@@95 $generated@@556)) $generated@@556)
 :pattern ( ($generated@@95 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@68)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@68) (= ($generated@@557 ($generated@@268 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@268 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@68) (= ($generated@@92 ($generated@@268 $generated@@560)) $generated@@54))
 :pattern ( ($generated@@268 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@68)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@68) (= ($generated@@561 ($generated@@273 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@273 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@68) (= ($generated@@92 ($generated@@273 $generated@@564)) $generated@@55))
 :pattern ( ($generated@@273 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@68)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@68) (= ($generated@@565 ($generated@@171 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@171 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@68) (= ($generated@@92 ($generated@@171 $generated@@568)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@68)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@68) (= ($generated@@569 ($generated@@545 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@545 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@68) (= ($generated@@92 ($generated@@545 $generated@@572)) $generated@@57))
 :pattern ( ($generated@@545 $generated@@572))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@68)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@68) (= ($generated@@573 ($generated@@82 $generated@@575)) $generated@@575))
 :pattern ( ($generated@@82 $generated@@575))
)))
(assert (forall (($generated@@576 T@U) ) (! (let (($generated@@577 (type $generated@@576)))
(= ($generated@@427 $generated@@577 ($generated@@331 $generated@@576)) $generated@@576))
 :pattern ( ($generated@@331 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@578) ($generated@@347 $generated@@163 $generated@@163)) (= (type $generated@@579) $generated@@68)) (= (type $generated@@580) $generated@@68)) (= ($generated@@81 $generated@@578 ($generated@@455 $generated@@579 $generated@@580)) (forall (($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@581) $generated@@163) ($generated@@0 ($generated@@101 ($generated@@345 $generated@@578) $generated@@581))) (and ($generated@@248 ($generated@@101 ($generated@@428 $generated@@578) $generated@@581) $generated@@580) ($generated@@248 $generated@@581 $generated@@579)))
 :pattern ( ($generated@@101 ($generated@@428 $generated@@578) $generated@@581))
 :pattern ( ($generated@@101 ($generated@@345 $generated@@578) $generated@@581))
))))
 :pattern ( ($generated@@81 $generated@@578 ($generated@@455 $generated@@579 $generated@@580)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@582) ($generated@@365 $generated@@163 $generated@@163)) (= (type $generated@@583) $generated@@68)) (= (type $generated@@584) $generated@@68)) (= ($generated@@81 $generated@@582 ($generated@@463 $generated@@583 $generated@@584)) (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@163) ($generated@@0 ($generated@@101 ($generated@@363 $generated@@582) $generated@@585))) (and ($generated@@248 ($generated@@101 ($generated@@438 $generated@@582) $generated@@585) $generated@@584) ($generated@@248 $generated@@585 $generated@@583)))
 :pattern ( ($generated@@101 ($generated@@438 $generated@@582) $generated@@585))
 :pattern ( ($generated@@101 ($generated@@363 $generated@@582) $generated@@585))
))))
 :pattern ( ($generated@@81 $generated@@582 ($generated@@463 $generated@@583 $generated@@584)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@163) (= (type $generated@@589) $generated@@163)) (< ($generated@@586 $generated@@588) ($generated@@587 ($generated@@247 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@247 $generated@@588 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@163) (= (type $generated@@591) $generated@@163)) (< ($generated@@586 $generated@@591) ($generated@@587 ($generated@@247 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@247 $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (= (type $generated@@592) $generated@@163) (= (type $generated@@593) $generated@@79)) (< ($generated@@586 $generated@@592) ($generated@@587 ($generated@@285 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@285 $generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@163) (= (type $generated@@595) $generated@@79)) (< ($generated@@587 $generated@@595) ($generated@@587 ($generated@@285 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@285 $generated@@594 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@163) (= (type $generated@@597) $generated@@68)) (= (type $generated@@598) $generated@@68)) ($generated@@248 $generated@@596 ($generated@@455 $generated@@597 $generated@@598))) (and (= ($generated@@331 ($generated@@427 ($generated@@347 $generated@@163 $generated@@163) $generated@@596)) $generated@@596) ($generated@@81 ($generated@@427 ($generated@@347 $generated@@163 $generated@@163) $generated@@596) ($generated@@455 $generated@@597 $generated@@598))))
 :pattern ( ($generated@@248 $generated@@596 ($generated@@455 $generated@@597 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (and (= (type $generated@@599) $generated@@163) (= (type $generated@@600) $generated@@68)) (= (type $generated@@601) $generated@@68)) ($generated@@248 $generated@@599 ($generated@@463 $generated@@600 $generated@@601))) (and (= ($generated@@331 ($generated@@427 ($generated@@365 $generated@@163 $generated@@163) $generated@@599)) $generated@@599) ($generated@@81 ($generated@@427 ($generated@@365 $generated@@163 $generated@@163) $generated@@599) ($generated@@463 $generated@@600 $generated@@601))))
 :pattern ( ($generated@@248 $generated@@599 ($generated@@463 $generated@@600 $generated@@601)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (and (= (type $generated@@602) $generated@@68) (= (type $generated@@603) $generated@@68)) (= (type $generated@@604) $generated@@163)) ($generated@@248 $generated@@604 ($generated@@154 $generated@@602 $generated@@603))) (and (= ($generated@@331 ($generated@@427 $generated@@79 $generated@@604)) $generated@@604) ($generated@@81 ($generated@@427 $generated@@79 $generated@@604) ($generated@@154 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@248 $generated@@604 ($generated@@154 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (and (and (= (type $generated@@605) $generated@@79) (= (type $generated@@606) $generated@@68)) (= (type $generated@@607) ($generated@@96 $generated@@97 $generated@@98))) (and ($generated@@244 $generated@@607) (and ($generated@@261 $generated@@605) ($generated@@94 $generated@@605 ($generated@@82 $generated@@606) $generated@@607)))) ($generated@@291 ($generated@@262 $generated@@605) $generated@@606 $generated@@607))
 :pattern ( ($generated@@291 ($generated@@262 $generated@@605) $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 (type $generated@@608)))
 (not ($generated@@0 ($generated@@101 ($generated@@473 $generated@@609) $generated@@608))))
 :pattern ( (let (($generated@@609 (type $generated@@608)))
($generated@@101 ($generated@@473 $generated@@609) $generated@@608)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@68) (= (type $generated@@611) $generated@@68)) (and (= ($generated@@92 ($generated@@154 $generated@@610 $generated@@611)) $generated@@62) (= ($generated@@342 ($generated@@154 $generated@@610 $generated@@611)) $generated@@66)))
 :pattern ( ($generated@@154 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ) (!  (=> (= (type $generated@@612) $generated@@79) (= ($generated@@586 ($generated@@331 $generated@@612)) ($generated@@587 $generated@@612)))
 :pattern ( ($generated@@586 ($generated@@331 $generated@@612)))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@613) $generated@@68) (= (type $generated@@614) $generated@@78)) (= (type $generated@@615) $generated@@79)) (= (type $generated@@616) $generated@@79)) (= ($generated@@77 $generated@@613 ($generated@@300 $generated@@614) $generated@@615 $generated@@616) ($generated@@77 $generated@@613 $generated@@614 $generated@@615 $generated@@616)))
 :pattern ( ($generated@@77 $generated@@613 ($generated@@300 $generated@@614) $generated@@615 $generated@@616))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@617) $generated@@163) ($generated@@248 $generated@@617 ($generated@@95 0))) (and (= ($generated@@331 ($generated@@427 $generated@@2 $generated@@617)) $generated@@617) ($generated@@81 ($generated@@427 ($generated@@96 $generated@@163 $generated@@4) $generated@@617) ($generated@@95 0))))
 :pattern ( ($generated@@248 $generated@@617 ($generated@@95 0)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@163) (= (type $generated@@619) $generated@@68)) ($generated@@248 $generated@@618 ($generated@@268 $generated@@619))) (and (= ($generated@@331 ($generated@@427 ($generated@@96 $generated@@163 $generated@@4) $generated@@618)) $generated@@618) ($generated@@81 ($generated@@427 ($generated@@96 $generated@@163 $generated@@4) $generated@@618) ($generated@@268 $generated@@619))))
 :pattern ( ($generated@@248 $generated@@618 ($generated@@268 $generated@@619)))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@163) (= (type $generated@@621) $generated@@68)) ($generated@@248 $generated@@620 ($generated@@273 $generated@@621))) (and (= ($generated@@331 ($generated@@427 ($generated@@96 $generated@@163 $generated@@4) $generated@@620)) $generated@@620) ($generated@@81 ($generated@@427 ($generated@@96 $generated@@163 $generated@@4) $generated@@620) ($generated@@273 $generated@@621))))
 :pattern ( ($generated@@248 $generated@@620 ($generated@@273 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@622) $generated@@163) (= (type $generated@@623) $generated@@68)) ($generated@@248 $generated@@622 ($generated@@171 $generated@@623))) (and (= ($generated@@331 ($generated@@427 ($generated@@96 $generated@@163 $generated@@2) $generated@@622)) $generated@@622) ($generated@@81 ($generated@@427 ($generated@@96 $generated@@163 $generated@@2) $generated@@622) ($generated@@171 $generated@@623))))
 :pattern ( ($generated@@248 $generated@@622 ($generated@@171 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@624) $generated@@163) (= (type $generated@@625) $generated@@68)) ($generated@@248 $generated@@624 ($generated@@545 $generated@@625))) (and (= ($generated@@331 ($generated@@427 ($generated@@317 $generated@@163) $generated@@624)) $generated@@624) ($generated@@81 ($generated@@427 ($generated@@317 $generated@@163) $generated@@624) ($generated@@545 $generated@@625))))
 :pattern ( ($generated@@248 $generated@@624 ($generated@@545 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (= (type $generated@@626) $generated@@68) (= (type $generated@@627) $generated@@163)) ($generated@@248 $generated@@627 ($generated@@82 $generated@@626))) (and (= ($generated@@331 ($generated@@427 $generated@@79 $generated@@627)) $generated@@627) ($generated@@81 ($generated@@427 $generated@@79 $generated@@627) ($generated@@82 $generated@@626))))
 :pattern ( ($generated@@248 $generated@@627 ($generated@@82 $generated@@626)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (and (= (type $generated@@628) $generated@@79) (= (type $generated@@629) $generated@@68)) (= (type $generated@@630) ($generated@@96 $generated@@97 $generated@@98))) (and ($generated@@244 $generated@@630) (and ($generated@@261 $generated@@628) ($generated@@94 $generated@@628 ($generated@@82 $generated@@629) $generated@@630)))) ($generated@@94 ($generated@@263 $generated@@628) ($generated@@82 $generated@@629) $generated@@630))
 :pattern ( ($generated@@94 ($generated@@263 $generated@@628) ($generated@@82 $generated@@629) $generated@@630))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (= (type $generated@@631) ($generated@@96 $generated@@163 $generated@@2)) (= (type $generated@@632) $generated@@68)) (= (type $generated@@633) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@631 ($generated@@171 $generated@@632) $generated@@633) (forall (($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@634) $generated@@163) (< 0 ($generated ($generated@@101 $generated@@631 $generated@@634)))) ($generated@@291 $generated@@634 $generated@@632 $generated@@633))
 :pattern ( ($generated@@101 $generated@@631 $generated@@634))
))))
 :pattern ( ($generated@@94 $generated@@631 ($generated@@171 $generated@@632) $generated@@633))
)))
(assert (= $generated@@169 ($generated@@278 $generated@@169)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) $generated@@79) (= (type $generated@@636) $generated@@68)) (= (type $generated@@637) ($generated@@96 $generated@@97 $generated@@98))) (and ($generated@@244 $generated@@637) (and ($generated@@153 $generated@@635) (exists (($generated@@638 T@U) ) (!  (and (= (type $generated@@638) $generated@@68) ($generated@@94 $generated@@635 ($generated@@154 $generated@@636 $generated@@638) $generated@@637))
 :pattern ( ($generated@@94 $generated@@635 ($generated@@154 $generated@@636 $generated@@638) $generated@@637))
))))) ($generated@@291 ($generated@@161 $generated@@635) $generated@@636 $generated@@637))
 :pattern ( ($generated@@291 ($generated@@161 $generated@@635) $generated@@636 $generated@@637))
)))
(assert (forall (($generated@@639 T@U) ($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (and (= (type $generated@@639) $generated@@79) (= (type $generated@@640) $generated@@68)) (= (type $generated@@641) ($generated@@96 $generated@@97 $generated@@98))) (and ($generated@@244 $generated@@641) (and ($generated@@153 $generated@@639) (exists (($generated@@642 T@U) ) (!  (and (= (type $generated@@642) $generated@@68) ($generated@@94 $generated@@639 ($generated@@154 $generated@@642 $generated@@640) $generated@@641))
 :pattern ( ($generated@@94 $generated@@639 ($generated@@154 $generated@@642 $generated@@640) $generated@@641))
))))) ($generated@@291 ($generated@@162 $generated@@639) $generated@@640 $generated@@641))
 :pattern ( ($generated@@291 ($generated@@162 $generated@@639) $generated@@640 $generated@@641))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ) (!  (=> (and (= (type $generated@@643) $generated@@163) (= (type $generated@@644) $generated@@163)) (= ($generated@@247 ($generated@@278 $generated@@643) ($generated@@278 $generated@@644)) ($generated@@278 ($generated@@247 $generated@@643 $generated@@644))))
 :pattern ( ($generated@@247 ($generated@@278 $generated@@643) ($generated@@278 $generated@@644)))
)))
(assert (forall (($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (= (type $generated@@645) $generated@@163) (= (type $generated@@646) $generated@@79)) (= ($generated@@285 ($generated@@278 $generated@@645) ($generated@@278 $generated@@646)) ($generated@@278 ($generated@@285 $generated@@645 $generated@@646))))
 :pattern ( ($generated@@285 ($generated@@278 $generated@@645) ($generated@@278 $generated@@646)))
)))
(assert (forall (($generated@@647 T@U) ) (! (= ($generated@@331 ($generated@@278 $generated@@647)) ($generated@@278 ($generated@@331 $generated@@647)))
 :pattern ( ($generated@@331 ($generated@@278 $generated@@647)))
)))
(assert (forall (($generated@@648 T@U) ) (! (let (($generated@@649 ($generated@@318 (type $generated@@648))))
 (=> (and (= (type $generated@@648) ($generated@@317 $generated@@649)) (= ($generated@@316 $generated@@648) 0)) (= $generated@@648 ($generated@@315 $generated@@649))))
 :pattern ( ($generated@@316 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ($generated@@652 T@U) ) (! (let (($generated@@653 (type $generated@@651)))
 (=> (and (and (= (type $generated@@650) ($generated@@96 $generated@@653 $generated@@2)) (= (type $generated@@652) $generated@@2)) (<= 0 ($generated $generated@@652))) (= ($generated@@336 ($generated@@102 $generated@@650 $generated@@651 $generated@@652)) (+ (- ($generated@@336 $generated@@650) ($generated ($generated@@101 $generated@@650 $generated@@651))) ($generated $generated@@652)))))
 :pattern ( ($generated@@336 ($generated@@102 $generated@@650 $generated@@651 $generated@@652)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@655) $generated@@2)) ($generated@@94 $generated@@655 $generated@@46 $generated@@654))
 :pattern ( ($generated@@94 $generated@@655 $generated@@46 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@657) $generated@@3)) ($generated@@94 $generated@@657 $generated@@47 $generated@@656))
 :pattern ( ($generated@@94 $generated@@657 $generated@@47 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@659) $generated@@4)) ($generated@@94 $generated@@659 $generated@@44 $generated@@658))
 :pattern ( ($generated@@94 $generated@@659 $generated@@44 $generated@@658))
)))
(assert (forall (($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (= (type $generated@@660) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@661) $generated@@497)) ($generated@@94 $generated@@661 $generated@@45 $generated@@660))
 :pattern ( ($generated@@94 $generated@@661 $generated@@45 $generated@@660))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (= (type $generated@@662) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@663) $generated@@163)) ($generated@@94 $generated@@663 $generated@@48 $generated@@662))
 :pattern ( ($generated@@94 $generated@@663 $generated@@48 $generated@@662))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@664) $generated@@68) (= (type $generated@@665) $generated@@163)) (= (type $generated@@666) $generated@@79)) (= (type $generated@@667) ($generated@@96 $generated@@97 $generated@@98))) ($generated@@244 $generated@@667)) (= ($generated@@94 ($generated@@285 $generated@@665 $generated@@666) ($generated@@82 $generated@@664) $generated@@667)  (and ($generated@@291 $generated@@665 $generated@@664 $generated@@667) ($generated@@94 $generated@@666 ($generated@@82 $generated@@664) $generated@@667))))
 :pattern ( ($generated@@94 ($generated@@285 $generated@@665 $generated@@666) ($generated@@82 $generated@@664) $generated@@667))
)))
(assert (forall (($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (= (type $generated@@668) ($generated@@317 $generated@@163)) (= (type $generated@@669) $generated@@68)) (= ($generated@@81 $generated@@668 ($generated@@545 $generated@@669)) (forall (($generated@@670 Int) ) (!  (=> (and (<= 0 $generated@@670) (< $generated@@670 ($generated@@316 $generated@@668))) ($generated@@248 ($generated@@546 $generated@@668 $generated@@670) $generated@@669))
 :pattern ( ($generated@@546 $generated@@668 $generated@@670))
))))
 :pattern ( ($generated@@81 $generated@@668 ($generated@@545 $generated@@669)))
)))
(assert (forall (($generated@@672 T@U) ($generated@@673 Int) ) (!  (=> (= (type $generated@@672) ($generated@@317 $generated@@163)) (=> (and (<= 0 $generated@@673) (< $generated@@673 ($generated@@316 $generated@@672))) (< ($generated@@587 ($generated@@427 $generated@@79 ($generated@@546 $generated@@672 $generated@@673))) ($generated@@671 $generated@@672))))
 :pattern ( ($generated@@587 ($generated@@427 $generated@@79 ($generated@@546 $generated@@672 $generated@@673))))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (and (and (= (type $generated@@674) ($generated@@347 $generated@@163 $generated@@163)) (= (type $generated@@675) $generated@@68)) (= (type $generated@@676) $generated@@68)) ($generated@@81 $generated@@674 ($generated@@455 $generated@@675 $generated@@676))) (and (and ($generated@@81 ($generated@@345 $generated@@674) ($generated@@268 $generated@@675)) ($generated@@81 ($generated@@388 $generated@@674) ($generated@@268 $generated@@676))) ($generated@@81 ($generated@@426 $generated@@674) ($generated@@268 ($generated@@154 $generated@@675 $generated@@676)))))
 :pattern ( ($generated@@81 $generated@@674 ($generated@@455 $generated@@675 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (and (and (= (type $generated@@677) ($generated@@365 $generated@@163 $generated@@163)) (= (type $generated@@678) $generated@@68)) (= (type $generated@@679) $generated@@68)) ($generated@@81 $generated@@677 ($generated@@463 $generated@@678 $generated@@679))) (and (and ($generated@@81 ($generated@@363 $generated@@677) ($generated@@273 $generated@@678)) ($generated@@81 ($generated@@399 $generated@@677) ($generated@@273 $generated@@679))) ($generated@@81 ($generated@@437 $generated@@677) ($generated@@273 ($generated@@154 $generated@@678 $generated@@679)))))
 :pattern ( ($generated@@81 $generated@@677 ($generated@@463 $generated@@678 $generated@@679)))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@2) ($generated@@81 $generated@@680 $generated@@46))
 :pattern ( ($generated@@81 $generated@@680 $generated@@46))
)))
(assert (forall (($generated@@681 T@U) ) (!  (=> (= (type $generated@@681) $generated@@3) ($generated@@81 $generated@@681 $generated@@47))
 :pattern ( ($generated@@81 $generated@@681 $generated@@47))
)))
(assert (forall (($generated@@682 T@U) ) (!  (=> (= (type $generated@@682) $generated@@4) ($generated@@81 $generated@@682 $generated@@44))
 :pattern ( ($generated@@81 $generated@@682 $generated@@44))
)))
(assert (forall (($generated@@683 T@U) ) (!  (=> (= (type $generated@@683) $generated@@497) ($generated@@81 $generated@@683 $generated@@45))
 :pattern ( ($generated@@81 $generated@@683 $generated@@45))
)))
(assert (forall (($generated@@684 T@U) ) (!  (=> (= (type $generated@@684) $generated@@163) ($generated@@81 $generated@@684 $generated@@48))
 :pattern ( ($generated@@81 $generated@@684 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 () T@U)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () T@U)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () T@U)
(declare-fun $generated@@698 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@685) $generated@@79) (= (type $generated@@686) $generated@@163)) (= (type $generated@@687) $generated@@79)) (= (type $generated@@688) $generated@@68)) (= (type $generated@@689) $generated@@79)) (= (type $generated@@690) ($generated@@96 $generated@@97 $generated@@98))) (= (type $generated@@691) $generated@@79)) (= (type $generated@@692) $generated@@163)) (= (type $generated@@693) $generated@@163)) (= (type $generated@@694) $generated@@79)) (= (type $generated@@695) ($generated@@178 $generated@@97 $generated@@4))) (= (type $generated@@696) $generated@@97)) (= (type $generated@@697) ($generated@@178 $generated@@97 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@699 true))
(let (($generated@@700  (=> (= $generated@@685 ($generated@@285 $generated@@686 $generated@@687)) (=> (and ($generated@@248 $generated@@686 $generated@@688) ($generated@@81 $generated@@687 ($generated@@82 $generated@@688))) (=> (and (and (and (and ($generated@@81 $generated@@689 ($generated@@82 $generated@@688)) ($generated@@94 $generated@@689 ($generated@@82 $generated@@688) $generated@@690)) (= $generated@@691 $generated@@687)) (and ($generated@@81 $generated@@691 ($generated@@82 $generated@@688)) (= $generated@@689 $generated@@691))) (and (and (and ($generated@@248 $generated@@692 $generated@@688) ($generated@@291 $generated@@692 $generated@@688 $generated@@690)) (and (= $generated@@693 $generated@@686) ($generated@@248 $generated@@693 $generated@@688))) (and (and (= $generated@@692 $generated@@693) ($generated@@94 $generated@@689 ($generated@@82 $generated@@688) $generated@@690)) (and ($generated@@94 $generated@@694 ($generated@@82 $generated@@688) $generated@@690) (= (ControlFlow 0 4) (- 0 3)))))) (or (< ($generated@@587 $generated@@689) ($generated@@587 $generated@@685)) (and (= ($generated@@587 $generated@@689) ($generated@@587 $generated@@685)) (< ($generated@@587 $generated@@694) ($generated@@587 $generated@@694)))))))))
(let (($generated@@701  (=> (not (= $generated@@685 $generated@@169)) (and (=> (= (ControlFlow 0 6) 4) $generated@@700) (=> (= (ControlFlow 0 6) 5) $generated@@699)))))
(let (($generated@@702 true))
(let (($generated@@703  (=> (= $generated@@695 ($generated@@232 $generated@@696 $generated@@690 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@702) (=> (= (ControlFlow 0 7) 6) $generated@@701)))))
(let (($generated@@704 true))
(let (($generated@@705  (=> (= $generated@@697 ($generated@@177 $generated@@696 $generated@@690 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@704) (=> (= (ControlFlow 0 8) 7) $generated@@703)))))
(let (($generated@@706  (=> (and ($generated@@244 $generated@@690) ($generated@@698 $generated@@690)) (=> (and (and (and ($generated@@81 $generated@@685 ($generated@@82 $generated@@688)) ($generated@@94 $generated@@685 ($generated@@82 $generated@@688) $generated@@690)) ($generated@@81 $generated@@694 ($generated@@82 $generated@@688))) (and (= 1 $generated@@76) (= (ControlFlow 0 9) 8))) $generated@@705))))
$generated@@706)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) Bool)
(declare-fun $generated@@95 (Int) T@U)
(declare-fun $generated@@96 (T@T T@T) T@T)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 (T@T) T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U) T@U)
(declare-fun $generated@@104 (T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@244 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@250 (T@T T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@272 (T@U) Bool)
(declare-fun $generated@@275 (T@U T@U) T@U)
(declare-fun $generated@@276 (T@U T@U) Bool)
(declare-fun $generated@@286 (T@U T@U) Bool)
(declare-fun $generated@@289 (T@U) Bool)
(declare-fun $generated@@292 (T@U) T@U)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@305 (T@U T@U) T@U)
(declare-fun $generated@@311 (T@U T@U T@U) Bool)
(declare-fun $generated@@333 (T@T) T@U)
(declare-fun $generated@@334 (T@U) Int)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@342 (T@U) T@U)
(declare-fun $generated@@352 (T@U) T@U)
(declare-fun $generated@@365 (T@U) Int)
(declare-fun $generated@@366 (T@T) T@U)
(declare-fun $generated@@371 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@T T@T) T@U)
(declare-fun $generated@@376 (T@T T@T) T@T)
(declare-fun $generated@@377 (T@T) T@T)
(declare-fun $generated@@378 (T@T) T@T)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@T T@T) T@U)
(declare-fun $generated@@394 (T@T T@T) T@T)
(declare-fun $generated@@395 (T@T) T@T)
(declare-fun $generated@@396 (T@T) T@T)
(declare-fun $generated@@421 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@459 (T@U) T@U)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@467 (T@U) T@U)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@485 (T@U T@U) T@U)
(declare-fun $generated@@493 (T@U T@U) T@U)
(declare-fun $generated@@503 (T@T) T@U)
(declare-fun $generated@@527 () T@T)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@575 (T@U) T@U)
(declare-fun $generated@@576 (T@U Int) T@U)
(declare-fun $generated@@585 (T@U) Int)
(declare-fun $generated@@587 (T@U) T@U)
(declare-fun $generated@@591 (T@U) T@U)
(declare-fun $generated@@595 (T@U) T@U)
(declare-fun $generated@@599 (T@U) T@U)
(declare-fun $generated@@603 (T@U) T@U)
(declare-fun $generated@@616 (T@U) Int)
(declare-fun $generated@@617 (T@U) Int)
(declare-fun $generated@@701 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (and (= ($generated@@1 $generated@@78) 11) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= (type ($generated@@77 $generated@@83 $generated@@84 $generated@@85 $generated@@86)) $generated@@79)
 :pattern ( ($generated@@77 $generated@@83 $generated@@84 $generated@@85 $generated@@86))
))) (forall (($generated@@87 T@U) ) (! (= (type ($generated@@82 $generated@@87)) $generated@@68)
 :pattern ( ($generated@@82 $generated@@87))
))))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@88) $generated@@68) (= (type $generated@@89) $generated@@78)) (= (type $generated@@90) $generated@@79)) (= (type $generated@@91) $generated@@79)) (or ($generated@@80 $generated@@88 $generated@@90 $generated@@91) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@90 ($generated@@82 $generated@@88)) ($generated@@81 $generated@@91 ($generated@@82 $generated@@88)))))) ($generated@@81 ($generated@@77 $generated@@88 $generated@@89 $generated@@90 $generated@@91) ($generated@@82 $generated@@88)))
 :pattern ( ($generated@@77 $generated@@88 $generated@@89 $generated@@90 $generated@@91))
))))
(assert (forall (($generated@@93 T@U) ) (! (= (type ($generated@@92 $generated@@93)) $generated@@69)
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert (= ($generated@@92 $generated@@44) $generated@@49))
(assert (= ($generated@@92 $generated@@45) $generated@@50))
(assert (= ($generated@@92 $generated@@46) $generated@@51))
(assert (= ($generated@@92 $generated@@47) $generated@@52))
(assert (= ($generated@@92 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (= ($generated@@1 ($generated@@96 $generated@@105 $generated@@106)) 13)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@99 ($generated@@96 $generated@@107 $generated@@108)) $generated@@107)
 :pattern ( ($generated@@96 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@100 ($generated@@96 $generated@@109 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@96 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@100 (type $generated@@111))))
(= (type ($generated@@101 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@101 $generated@@111 $generated@@112))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 (type $generated@@116)))
(let (($generated@@118 (type $generated@@115)))
(= (type ($generated@@102 $generated@@114 $generated@@115 $generated@@116)) ($generated@@96 $generated@@118 $generated@@117))))
 :pattern ( ($generated@@102 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@100 (type $generated@@119))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@101 ($generated@@102 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@101 ($generated@@102 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@101 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@101 $generated@@128 $generated@@130)))
 :weight 0
)))) (= ($generated@@1 $generated@@97) 14)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (let (($generated@@133 ($generated@@71 (type $generated@@132))))
(= (type ($generated@@103 $generated@@131 $generated@@132)) $generated@@133))
 :pattern ( ($generated@@103 $generated@@131 $generated@@132))
))) (= ($generated@@1 $generated@@98) 15)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= (type ($generated@@104 $generated@@134 $generated@@135 $generated@@136)) $generated@@98)
 :pattern ( ($generated@@104 $generated@@134 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 ($generated@@71 (type $generated@@138))))
 (=> (= (type $generated@@139) $generated@@140) (= ($generated@@103 ($generated@@104 $generated@@137 $generated@@138 $generated@@139) $generated@@138) $generated@@139)))
 :weight 0
))) (and (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@143 $generated@@144) (= ($generated@@103 ($generated@@104 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@103 $generated@@142 $generated@@144)))
 :weight 0
)) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or true (= ($generated@@103 ($generated@@104 $generated@@146 $generated@@147 $generated@@145) $generated@@148) ($generated@@103 $generated@@146 $generated@@148)))
 :weight 0
)))) (forall (($generated@@149 Int) ) (! (= (type ($generated@@95 $generated@@149)) $generated@@68)
 :pattern ( ($generated@@95 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@2) (= (type $generated@@151) ($generated@@96 $generated@@97 $generated@@98))) ($generated@@94 $generated@@150 ($generated@@95 0) $generated@@151))
 :pattern ( ($generated@@94 $generated@@150 ($generated@@95 0) $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@81 $generated@@152 ($generated@@95 0)))
 :pattern ( ($generated@@81 $generated@@152 ($generated@@95 0)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@155 $generated@@156)) $generated@@68)
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@68) (= (type $generated@@158) $generated@@68)) (= (type $generated@@159) $generated@@79)) ($generated@@81 $generated@@159 ($generated@@154 $generated@@157 $generated@@158))) ($generated@@153 $generated@@159))
 :pattern ( ($generated@@153 $generated@@159) ($generated@@81 $generated@@159 ($generated@@154 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 16) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@79) (= (type $generated@@167) $generated@@79)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert  (and (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@72)
 :pattern ( ($generated@@168 $generated@@170))
)) (= (type $generated@@169) $generated@@79)))
(assert (= ($generated@@168 $generated@@169) $generated@@63))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@68)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@96 $generated@@163 $generated@@2)) (= (type $generated@@175) $generated@@68)) ($generated@@81 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@81 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 17)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@97 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@71 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@97) (= (type $generated@@226) ($generated@@96 $generated@@97 $generated@@98))) (= (type $generated@@227) ($generated@@70 $generated@@4))) (= (type $generated@@229) $generated@@97)) (= (type $generated@@230) ($generated@@70 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 Bool) ) (! (= (type ($generated@@232 $generated@@233 $generated@@234 $generated@@235 $generated@@236)) ($generated@@178 $generated@@97 $generated@@4))
 :pattern ( ($generated@@232 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (let (($generated@@243 ($generated@@71 (type $generated@@242))))
 (=> (and (and (and (and (= (type $generated@@237) $generated@@97) (= (type $generated@@238) ($generated@@96 $generated@@97 $generated@@98))) (= (type $generated@@239) ($generated@@70 $generated@@4))) (= (type $generated@@241) $generated@@97)) (= (type $generated@@242) ($generated@@70 $generated@@243))) (= ($generated@@0 ($generated@@176 ($generated@@232 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (not (= $generated@@241 $generated@@237)) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@238 $generated@@241) $generated@@239))) $generated@@240))))
 :pattern ( ($generated@@176 ($generated@@232 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (! (= (type ($generated@@244 $generated@@253 $generated@@254 $generated@@255 $generated@@256)) $generated@@79)
 :pattern ( ($generated@@244 $generated@@253 $generated@@254 $generated@@255 $generated@@256))
)) (forall (($generated@@257 T@U) ) (! (= (type ($generated@@245 $generated@@257)) $generated@@78)
 :pattern ( ($generated@@245 $generated@@257))
))) (forall (($generated@@258 T@U) ) (! (let (($generated@@259 (type $generated@@258)))
(= (type ($generated@@246 $generated@@258)) $generated@@259))
 :pattern ( ($generated@@246 $generated@@258))
))) (forall (($generated@@260 T@U) ) (! (= (type ($generated@@249 $generated@@260)) $generated@@79)
 :pattern ( ($generated@@249 $generated@@260))
))) (forall (($generated@@261 T@T) ($generated@@262 T@U) ) (! (= (type ($generated@@250 $generated@@261 $generated@@262)) $generated@@261)
 :pattern ( ($generated@@250 $generated@@261 $generated@@262))
))) (forall (($generated@@263 T@U) ) (! (= (type ($generated@@251 $generated@@263)) $generated@@163)
 :pattern ( ($generated@@251 $generated@@263))
))) (= (type $generated@@252) $generated@@78)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@264) $generated@@68) (= (type $generated@@265) $generated@@68)) (= (type $generated@@266) $generated@@78)) (= (type $generated@@267) $generated@@79)) (or ($generated@@247 $generated@@264 $generated@@265 ($generated@@246 $generated@@267)) (and (not (= 2 $generated@@76)) ($generated@@81 $generated@@267 ($generated@@82 ($generated@@82 $generated@@265)))))) (and (=> (not ($generated@@0 ($generated@@246 ($generated@@11 ($generated@@248 ($generated@@246 $generated@@267)))))) (let (($generated@@268 ($generated@@246 ($generated@@249 ($generated@@246 $generated@@267)))))
(let (($generated@@269 ($generated@@246 ($generated@@250 $generated@@79 ($generated@@251 ($generated@@246 $generated@@267))))))
 (and ($generated@@247 $generated@@264 $generated@@265 $generated@@268) ($generated@@80 $generated@@265 $generated@@269 ($generated@@244 $generated@@264 $generated@@265 ($generated@@245 $generated@@266) $generated@@268)))))) (= ($generated@@244 $generated@@264 $generated@@265 ($generated@@245 $generated@@266) ($generated@@246 $generated@@267)) (ite ($generated@@248 ($generated@@246 $generated@@267)) $generated@@169 (let (($generated@@270 ($generated@@246 ($generated@@249 ($generated@@246 $generated@@267)))))
(let (($generated@@271 ($generated@@246 ($generated@@250 $generated@@79 ($generated@@251 ($generated@@246 $generated@@267))))))
($generated@@246 ($generated@@77 $generated@@265 ($generated@@245 $generated@@252) $generated@@271 ($generated@@246 ($generated@@244 $generated@@264 $generated@@265 ($generated@@245 $generated@@266) $generated@@270))))))))))
 :weight 3
 :pattern ( ($generated@@244 $generated@@264 $generated@@265 ($generated@@245 $generated@@266) ($generated@@246 $generated@@267)))
))))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> (and (and (= (type $generated@@273) $generated@@68) (= (type $generated@@274) ($generated@@96 $generated@@97 $generated@@98))) ($generated@@272 $generated@@274)) ($generated@@94 $generated@@169 ($generated@@82 $generated@@273) $generated@@274))
 :pattern ( ($generated@@94 $generated@@169 ($generated@@82 $generated@@273) $generated@@274))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (! (= (type ($generated@@275 $generated@@277 $generated@@278)) $generated@@79)
 :pattern ( ($generated@@275 $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ) (!  (=> (and (and (and (= (type $generated@@279) $generated@@68) (= (type $generated@@280) $generated@@68)) (= (type $generated@@281) $generated@@163)) (= (type $generated@@282) $generated@@163)) (= ($generated@@81 ($generated@@275 $generated@@281 $generated@@282) ($generated@@154 $generated@@279 $generated@@280))  (and ($generated@@276 $generated@@281 $generated@@279) ($generated@@276 $generated@@282 $generated@@280))))
 :pattern ( ($generated@@81 ($generated@@275 $generated@@281 $generated@@282) ($generated@@154 $generated@@279 $generated@@280)))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@68) ($generated@@81 $generated@@169 ($generated@@82 $generated@@283)))
 :pattern ( ($generated@@81 $generated@@169 ($generated@@82 $generated@@283)))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@79) (= (type $generated@@285) $generated@@79)) (= ($generated@@160 $generated@@284 $generated@@285) (= $generated@@284 $generated@@285)))
 :pattern ( ($generated@@160 $generated@@284 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) $generated@@79) (= (type $generated@@288) $generated@@79)) (= ($generated@@286 $generated@@287 $generated@@288) (= $generated@@287 $generated@@288)))
 :pattern ( ($generated@@286 $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (= (type $generated@@290) $generated@@79) (= (type $generated@@291) $generated@@79)) (and ($generated@@289 $generated@@290) ($generated@@289 $generated@@291))) (= ($generated@@286 $generated@@290 $generated@@291)  (and (= ($generated@@251 $generated@@290) ($generated@@251 $generated@@291)) ($generated@@286 ($generated@@249 $generated@@290) ($generated@@249 $generated@@291)))))
 :pattern ( ($generated@@286 $generated@@290 $generated@@291) ($generated@@289 $generated@@290))
 :pattern ( ($generated@@286 $generated@@290 $generated@@291) ($generated@@289 $generated@@291))
)))
(assert (forall (($generated@@293 T@U) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@68)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@294) ($generated@@96 $generated@@163 $generated@@4)) (= (type $generated@@295) $generated@@68)) (= ($generated@@81 $generated@@294 ($generated@@292 $generated@@295)) (forall (($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@163) ($generated@@0 ($generated@@101 $generated@@294 $generated@@296))) ($generated@@276 $generated@@296 $generated@@295))
 :pattern ( ($generated@@101 $generated@@294 $generated@@296))
))))
 :pattern ( ($generated@@81 $generated@@294 ($generated@@292 $generated@@295)))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@68)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) ($generated@@96 $generated@@163 $generated@@4)) (= (type $generated@@300) $generated@@68)) (= ($generated@@81 $generated@@299 ($generated@@297 $generated@@300)) (forall (($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@163) ($generated@@0 ($generated@@101 $generated@@299 $generated@@301))) ($generated@@276 $generated@@301 $generated@@300))
 :pattern ( ($generated@@101 $generated@@299 $generated@@301))
))))
 :pattern ( ($generated@@81 $generated@@299 ($generated@@297 $generated@@300)))
)))
(assert (forall (($generated@@302 T@U) ) (! (= ($generated@@246 $generated@@302) $generated@@302)
 :pattern ( ($generated@@246 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (= (type $generated@@303) $generated@@79) (= (type $generated@@304) $generated@@79)) (and ($generated@@248 $generated@@303) ($generated@@248 $generated@@304))) (= ($generated@@286 $generated@@303 $generated@@304) true))
 :pattern ( ($generated@@286 $generated@@303 $generated@@304) ($generated@@248 $generated@@303))
 :pattern ( ($generated@@286 $generated@@303 $generated@@304) ($generated@@248 $generated@@304))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (! (= (type ($generated@@305 $generated@@306 $generated@@307)) $generated@@79)
 :pattern ( ($generated@@305 $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (and (= (type $generated@@308) $generated@@68) (= (type $generated@@309) $generated@@163)) (= (type $generated@@310) $generated@@79)) (= ($generated@@81 ($generated@@305 $generated@@309 $generated@@310) ($generated@@82 $generated@@308))  (and ($generated@@276 $generated@@309 $generated@@308) ($generated@@81 $generated@@310 ($generated@@82 $generated@@308)))))
 :pattern ( ($generated@@81 ($generated@@305 $generated@@309 $generated@@310) ($generated@@82 $generated@@308)))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@312) $generated@@68) (= (type $generated@@313) $generated@@68)) (= (type $generated@@314) $generated@@163)) (= (type $generated@@315) $generated@@163)) (= (type $generated@@316) ($generated@@96 $generated@@97 $generated@@98))) ($generated@@272 $generated@@316)) (= ($generated@@94 ($generated@@275 $generated@@314 $generated@@315) ($generated@@154 $generated@@312 $generated@@313) $generated@@316)  (and ($generated@@311 $generated@@314 $generated@@312 $generated@@316) ($generated@@311 $generated@@315 $generated@@313 $generated@@316))))
 :pattern ( ($generated@@94 ($generated@@275 $generated@@314 $generated@@315) ($generated@@154 $generated@@312 $generated@@313) $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (!  (=> (= (type $generated@@317) $generated@@79) (= ($generated@@153 $generated@@317) (= ($generated@@168 $generated@@317) $generated@@61)))
 :pattern ( ($generated@@153 $generated@@317))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (= (type $generated@@318) $generated@@79) (= ($generated@@248 $generated@@318) (= ($generated@@168 $generated@@318) $generated@@63)))
 :pattern ( ($generated@@248 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (= (type $generated@@319) $generated@@79) (= ($generated@@289 $generated@@319) (= ($generated@@168 $generated@@319) $generated@@65)))
 :pattern ( ($generated@@289 $generated@@319))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@320 T@U) ($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@320) $generated@@68) (= (type $generated@@321) $generated@@78)) (= (type $generated@@322) $generated@@79)) (= (type $generated@@323) $generated@@79)) (or ($generated@@80 $generated@@320 ($generated@@246 $generated@@322) ($generated@@246 $generated@@323)) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@322 ($generated@@82 $generated@@320)) ($generated@@81 $generated@@323 ($generated@@82 $generated@@320)))))) (and (=> (not ($generated@@0 ($generated@@246 ($generated@@11 ($generated@@248 ($generated@@246 $generated@@322)))))) (let (($generated@@324 ($generated@@246 ($generated@@249 ($generated@@246 $generated@@322)))))
($generated@@80 $generated@@320 $generated@@324 ($generated@@246 $generated@@323)))) (= ($generated@@77 $generated@@320 ($generated@@245 $generated@@321) ($generated@@246 $generated@@322) ($generated@@246 $generated@@323)) (ite ($generated@@248 ($generated@@246 $generated@@322)) $generated@@323 (let (($generated@@325 ($generated@@246 ($generated@@249 ($generated@@246 $generated@@322)))))
(let (($generated@@326 ($generated@@246 ($generated@@251 ($generated@@246 $generated@@322)))))
($generated@@246 ($generated@@305 $generated@@326 ($generated@@246 ($generated@@77 $generated@@320 ($generated@@245 $generated@@321) $generated@@325 ($generated@@246 $generated@@323)))))))))))
 :weight 3
 :pattern ( ($generated@@77 $generated@@320 ($generated@@245 $generated@@321) ($generated@@246 $generated@@322) ($generated@@246 $generated@@323)))
))))
(assert (forall (($generated@@327 T@U) ) (!  (=> (and (= (type $generated@@327) $generated@@79) ($generated@@153 $generated@@327)) (exists (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (and (and (= (type $generated@@328) $generated@@163) (= (type $generated@@329) $generated@@163)) (= $generated@@327 ($generated@@275 $generated@@328 $generated@@329)))
 :no-pattern (type $generated@@328)
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@328)
 :no-pattern ($generated@@0 $generated@@328)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
)))
 :pattern ( ($generated@@153 $generated@@327))
)))
(assert (forall (($generated@@330 T@U) ) (!  (=> (and (= (type $generated@@330) $generated@@79) ($generated@@289 $generated@@330)) (exists (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (and (and (= (type $generated@@331) $generated@@163) (= (type $generated@@332) $generated@@79)) (= $generated@@330 ($generated@@305 $generated@@331 $generated@@332)))
 :no-pattern (type $generated@@331)
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
)))
 :pattern ( ($generated@@289 $generated@@330))
)))
(assert  (and (and (forall (($generated@@337 T@T) ) (= ($generated@@1 ($generated@@335 $generated@@337)) 18)) (forall (($generated@@338 T@T) ) (! (= ($generated@@336 ($generated@@335 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@335 $generated@@338))
))) (forall (($generated@@339 T@T) ) (! (= (type ($generated@@333 $generated@@339)) ($generated@@335 $generated@@339))
 :pattern ( ($generated@@333 $generated@@339))
))))
(assert (forall (($generated@@340 T@T) ) (! (= ($generated@@334 ($generated@@333 $generated@@340)) 0)
 :pattern ( ($generated@@333 $generated@@340))
)))
(assert (forall (($generated@@341 T@U) ) (!  (=> (and (= (type $generated@@341) $generated@@79) ($generated@@248 $generated@@341)) (= $generated@@341 $generated@@169))
 :pattern ( ($generated@@248 $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (= (type ($generated@@342 $generated@@343)) $generated@@78)
 :pattern ( ($generated@@342 $generated@@343))
)))
(assert (forall (($generated@@344 T@U) ($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (and (and (and (= (type $generated@@344) $generated@@68) (= (type $generated@@345) $generated@@78)) (= (type $generated@@346) $generated@@79)) (= (type $generated@@347) $generated@@79)) (= ($generated@@77 $generated@@344 $generated@@345 $generated@@346 $generated@@347) ($generated@@77 $generated@@344 $generated@@252 $generated@@346 $generated@@347)))
 :pattern ( ($generated@@77 $generated@@344 ($generated@@342 $generated@@345) $generated@@346 $generated@@347))
)))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ($generated@@351 T@U) ) (!  (=> (and (and (and (= (type $generated@@348) $generated@@68) (= (type $generated@@349) $generated@@68)) (= (type $generated@@350) $generated@@78)) (= (type $generated@@351) $generated@@79)) (= ($generated@@244 $generated@@348 $generated@@349 $generated@@350 $generated@@351) ($generated@@244 $generated@@348 $generated@@349 $generated@@252 $generated@@351)))
 :pattern ( ($generated@@244 $generated@@348 $generated@@349 ($generated@@342 $generated@@350) $generated@@351))
)))
(assert (forall (($generated@@353 T@U) ) (! (= (type ($generated@@352 $generated@@353)) $generated@@163)
 :pattern ( ($generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@68) (= (type $generated@@356) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@311 ($generated@@352 $generated@@354) $generated@@355 $generated@@356) ($generated@@94 $generated@@354 $generated@@355 $generated@@356)))
 :pattern ( ($generated@@311 ($generated@@352 $generated@@354) $generated@@355 $generated@@356))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@357 T@U) ($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@357) $generated@@68) (= (type $generated@@358) $generated@@68)) (= (type $generated@@359) $generated@@78)) (= (type $generated@@360) $generated@@79)) (or ($generated@@247 $generated@@357 $generated@@358 $generated@@360) (and (not (= 2 $generated@@76)) ($generated@@81 $generated@@360 ($generated@@82 ($generated@@82 $generated@@358)))))) (and (=> (not ($generated@@248 $generated@@360)) (let (($generated@@361 ($generated@@249 $generated@@360)))
(let (($generated@@362 ($generated@@250 $generated@@79 ($generated@@251 $generated@@360))))
 (and ($generated@@247 $generated@@357 $generated@@358 $generated@@361) ($generated@@80 $generated@@358 $generated@@362 ($generated@@244 $generated@@357 $generated@@358 $generated@@359 $generated@@361)))))) (= ($generated@@244 $generated@@357 $generated@@358 ($generated@@245 $generated@@359) $generated@@360) (ite ($generated@@248 $generated@@360) $generated@@169 (let (($generated@@363 ($generated@@249 $generated@@360)))
(let (($generated@@364 ($generated@@250 $generated@@79 ($generated@@251 $generated@@360))))
($generated@@77 $generated@@358 ($generated@@245 $generated@@252) $generated@@364 ($generated@@244 $generated@@357 $generated@@358 $generated@@359 $generated@@363))))))))
 :pattern ( ($generated@@244 $generated@@357 $generated@@358 ($generated@@245 $generated@@359) $generated@@360))
))))
(assert (forall (($generated@@367 T@T) ) (! (= (type ($generated@@366 $generated@@367)) ($generated@@96 $generated@@367 $generated@@2))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@99 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@96 $generated@@369 $generated@@2)) (and (= (= ($generated@@365 $generated@@368) 0) (= $generated@@368 ($generated@@366 $generated@@369))) (=> (not (= ($generated@@365 $generated@@368) 0)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@369) (< 0 ($generated ($generated@@101 $generated@@368 $generated@@370))))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@365 $generated@@368))
)))
(assert (forall (($generated@@372 T@U) ) (! (= (type ($generated@@371 $generated@@372)) $generated@@73)
 :pattern ( ($generated@@371 $generated@@372))
)))
(assert (forall (($generated@@373 T@U) ) (!  (=> (= (type $generated@@373) $generated@@68) (and (= ($generated@@92 ($generated@@82 $generated@@373)) $generated@@64) (= ($generated@@371 ($generated@@82 $generated@@373)) $generated@@67)))
 :pattern ( ($generated@@82 $generated@@373))
)))
(assert  (and (and (and (and (forall (($generated@@379 T@T) ($generated@@380 T@T) ) (= ($generated@@1 ($generated@@376 $generated@@379 $generated@@380)) 19)) (forall (($generated@@381 T@T) ($generated@@382 T@T) ) (! (= ($generated@@377 ($generated@@376 $generated@@381 $generated@@382)) $generated@@381)
 :pattern ( ($generated@@376 $generated@@381 $generated@@382))
))) (forall (($generated@@383 T@T) ($generated@@384 T@T) ) (! (= ($generated@@378 ($generated@@376 $generated@@383 $generated@@384)) $generated@@384)
 :pattern ( ($generated@@376 $generated@@383 $generated@@384))
))) (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@377 (type $generated@@385))))
(= (type ($generated@@374 $generated@@385)) ($generated@@96 $generated@@386 $generated@@4)))
 :pattern ( ($generated@@374 $generated@@385))
))) (forall (($generated@@387 T@T) ($generated@@388 T@T) ) (! (= (type ($generated@@375 $generated@@387 $generated@@388)) ($generated@@376 $generated@@387 $generated@@388))
 :pattern ( ($generated@@375 $generated@@387 $generated@@388))
))))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@T) ) (! (let (($generated@@391 (type $generated@@389)))
 (not ($generated@@0 ($generated@@101 ($generated@@374 ($generated@@375 $generated@@391 $generated@@390)) $generated@@389))))
 :pattern ( (let (($generated@@391 (type $generated@@389)))
($generated@@101 ($generated@@374 ($generated@@375 $generated@@391 $generated@@390)) $generated@@389)))
)))
(assert  (and (and (and (and (forall (($generated@@397 T@T) ($generated@@398 T@T) ) (= ($generated@@1 ($generated@@394 $generated@@397 $generated@@398)) 20)) (forall (($generated@@399 T@T) ($generated@@400 T@T) ) (! (= ($generated@@395 ($generated@@394 $generated@@399 $generated@@400)) $generated@@399)
 :pattern ( ($generated@@394 $generated@@399 $generated@@400))
))) (forall (($generated@@401 T@T) ($generated@@402 T@T) ) (! (= ($generated@@396 ($generated@@394 $generated@@401 $generated@@402)) $generated@@402)
 :pattern ( ($generated@@394 $generated@@401 $generated@@402))
))) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@395 (type $generated@@403))))
(= (type ($generated@@392 $generated@@403)) ($generated@@96 $generated@@404 $generated@@4)))
 :pattern ( ($generated@@392 $generated@@403))
))) (forall (($generated@@405 T@T) ($generated@@406 T@T) ) (! (= (type ($generated@@393 $generated@@405 $generated@@406)) ($generated@@394 $generated@@405 $generated@@406))
 :pattern ( ($generated@@393 $generated@@405 $generated@@406))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@T) ) (! (let (($generated@@409 (type $generated@@407)))
 (not ($generated@@0 ($generated@@101 ($generated@@392 ($generated@@393 $generated@@409 $generated@@408)) $generated@@407))))
 :pattern ( (let (($generated@@409 (type $generated@@407)))
($generated@@101 ($generated@@392 ($generated@@393 $generated@@409 $generated@@408)) $generated@@407)))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (and (= (type $generated@@410) $generated@@68) (= (type $generated@@411) $generated@@68)) (= (type $generated@@412) $generated@@78)) (= (type $generated@@413) $generated@@79)) (= ($generated@@244 $generated@@410 $generated@@411 ($generated@@245 $generated@@412) $generated@@413) ($generated@@244 $generated@@410 $generated@@411 $generated@@412 $generated@@413)))
 :pattern ( ($generated@@244 $generated@@410 $generated@@411 ($generated@@245 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 ($generated@@99 (type $generated@@414))))
 (=> (= (type $generated@@414) ($generated@@96 $generated@@415 $generated@@2)) (= ($generated@@172 $generated@@414) (forall (($generated@@416 T@U) ) (!  (=> (= (type $generated@@416) $generated@@415) (and (<= 0 ($generated ($generated@@101 $generated@@414 $generated@@416))) (<= ($generated ($generated@@101 $generated@@414 $generated@@416)) ($generated@@365 $generated@@414))))
 :pattern ( ($generated@@101 $generated@@414 $generated@@416))
)))))
 :pattern ( ($generated@@172 $generated@@414))
)))
(assert (forall (($generated@@417 T@U) ) (! (let (($generated@@418 ($generated@@378 (type $generated@@417))))
(let (($generated@@419 ($generated@@377 (type $generated@@417))))
 (=> (= (type $generated@@417) ($generated@@376 $generated@@419 $generated@@418)) (or (= $generated@@417 ($generated@@375 $generated@@419 $generated@@418)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) ($generated@@0 ($generated@@101 ($generated@@374 $generated@@417) $generated@@420)))
 :no-pattern (type $generated@@420)
 :no-pattern ($generated $generated@@420)
 :no-pattern ($generated@@0 $generated@@420)
))))))
 :pattern ( ($generated@@374 $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@378 (type $generated@@422))))
(= (type ($generated@@421 $generated@@422)) ($generated@@96 $generated@@423 $generated@@4)))
 :pattern ( ($generated@@421 $generated@@422))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@378 (type $generated@@424))))
(let (($generated@@426 ($generated@@377 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@376 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@375 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ) (!  (and (= (type $generated@@427) $generated@@425) ($generated@@0 ($generated@@101 ($generated@@421 $generated@@424) $generated@@427)))
 :no-pattern (type $generated@@427)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
))))))
 :pattern ( ($generated@@421 $generated@@424))
)))
(assert (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@396 (type $generated@@428))))
(let (($generated@@430 ($generated@@395 (type $generated@@428))))
 (=> (= (type $generated@@428) ($generated@@394 $generated@@430 $generated@@429)) (or (= $generated@@428 ($generated@@393 $generated@@430 $generated@@429)) (exists (($generated@@431 T@U) ) (!  (and (= (type $generated@@431) $generated@@430) ($generated@@0 ($generated@@101 ($generated@@392 $generated@@428) $generated@@431)))
 :no-pattern (type $generated@@431)
 :no-pattern ($generated $generated@@431)
 :no-pattern ($generated@@0 $generated@@431)
))))))
 :pattern ( ($generated@@392 $generated@@428))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@396 (type $generated@@433))))
(= (type ($generated@@432 $generated@@433)) ($generated@@96 $generated@@434 $generated@@4)))
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@396 (type $generated@@435))))
(let (($generated@@437 ($generated@@395 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@394 $generated@@437 $generated@@436)) (or (= $generated@@435 ($generated@@393 $generated@@437 $generated@@436)) (exists (($generated@@438 T@U) ) (!  (and (= (type $generated@@438) $generated@@436) ($generated@@0 ($generated@@101 ($generated@@432 $generated@@435) $generated@@438)))
 :no-pattern (type $generated@@438)
 :no-pattern ($generated $generated@@438)
 :no-pattern ($generated@@0 $generated@@438)
))))))
 :pattern ( ($generated@@432 $generated@@435))
)))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@439) ($generated@@96 $generated@@163 $generated@@2)) (= (type $generated@@440) $generated@@68)) (= ($generated@@81 $generated@@439 ($generated@@171 $generated@@440)) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@163) (< 0 ($generated ($generated@@101 $generated@@439 $generated@@441)))) ($generated@@276 $generated@@441 $generated@@440))
 :pattern ( ($generated@@101 $generated@@439 $generated@@441))
))))
 :pattern ( ($generated@@81 $generated@@439 ($generated@@171 $generated@@440)))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@442 T@U) ($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@442) $generated@@68) (= (type $generated@@443) $generated@@78)) (= (type $generated@@444) $generated@@79)) (= (type $generated@@445) $generated@@79)) (or ($generated@@80 $generated@@442 $generated@@444 $generated@@445) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@444 ($generated@@82 $generated@@442)) ($generated@@81 $generated@@445 ($generated@@82 $generated@@442)))))) (and (=> (not ($generated@@248 $generated@@444)) (let (($generated@@446 ($generated@@249 $generated@@444)))
($generated@@80 $generated@@442 $generated@@446 $generated@@445))) (= ($generated@@77 $generated@@442 ($generated@@245 $generated@@443) $generated@@444 $generated@@445) (ite ($generated@@248 $generated@@444) $generated@@445 (let (($generated@@447 ($generated@@249 $generated@@444)))
(let (($generated@@448 ($generated@@251 $generated@@444)))
($generated@@305 $generated@@448 ($generated@@77 $generated@@442 $generated@@443 $generated@@447 $generated@@445))))))))
 :pattern ( ($generated@@77 $generated@@442 ($generated@@245 $generated@@443) $generated@@444 $generated@@445))
))))
(assert (forall (($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (= (type $generated@@449) ($generated@@96 $generated@@163 $generated@@4)) (= (type $generated@@450) $generated@@68)) (= (type $generated@@451) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@449 ($generated@@292 $generated@@450) $generated@@451) (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@163) ($generated@@0 ($generated@@101 $generated@@449 $generated@@452))) ($generated@@311 $generated@@452 $generated@@450 $generated@@451))
 :pattern ( ($generated@@101 $generated@@449 $generated@@452))
))))
 :pattern ( ($generated@@94 $generated@@449 ($generated@@292 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@453 T@U) ($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (and (= (type $generated@@453) ($generated@@96 $generated@@163 $generated@@4)) (= (type $generated@@454) $generated@@68)) (= (type $generated@@455) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@453 ($generated@@297 $generated@@454) $generated@@455) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@163) ($generated@@0 ($generated@@101 $generated@@453 $generated@@456))) ($generated@@311 $generated@@456 $generated@@454 $generated@@455))
 :pattern ( ($generated@@101 $generated@@453 $generated@@456))
))))
 :pattern ( ($generated@@94 $generated@@453 ($generated@@297 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 (type $generated@@457)))
(= ($generated ($generated@@101 ($generated@@366 $generated@@458) $generated@@457)) 0))
 :pattern ( (let (($generated@@458 (type $generated@@457)))
($generated@@101 ($generated@@366 $generated@@458) $generated@@457)))
)))
(assert  (and (forall (($generated@@461 T@U) ) (! (= (type ($generated@@459 $generated@@461)) ($generated@@96 $generated@@163 $generated@@4))
 :pattern ( ($generated@@459 $generated@@461))
)) (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@378 (type $generated@@462))))
(let (($generated@@464 ($generated@@377 (type $generated@@462))))
(= (type ($generated@@460 $generated@@462)) ($generated@@96 $generated@@464 $generated@@463))))
 :pattern ( ($generated@@460 $generated@@462))
))))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@465) ($generated@@376 $generated@@163 $generated@@163)) (= (type $generated@@466) $generated@@163)) (= ($generated@@0 ($generated@@101 ($generated@@459 $generated@@465) $generated@@466))  (and ($generated@@0 ($generated@@101 ($generated@@374 $generated@@465) ($generated@@161 ($generated@@250 $generated@@79 $generated@@466)))) (= ($generated@@101 ($generated@@460 $generated@@465) ($generated@@161 ($generated@@250 $generated@@79 $generated@@466))) ($generated@@162 ($generated@@250 $generated@@79 $generated@@466))))))
 :pattern ( ($generated@@101 ($generated@@459 $generated@@465) $generated@@466))
)))
(assert  (and (forall (($generated@@469 T@U) ) (! (= (type ($generated@@467 $generated@@469)) ($generated@@96 $generated@@163 $generated@@4))
 :pattern ( ($generated@@467 $generated@@469))
)) (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@396 (type $generated@@470))))
(let (($generated@@472 ($generated@@395 (type $generated@@470))))
(= (type ($generated@@468 $generated@@470)) ($generated@@96 $generated@@472 $generated@@471))))
 :pattern ( ($generated@@468 $generated@@470))
))))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@473) ($generated@@394 $generated@@163 $generated@@163)) (= (type $generated@@474) $generated@@163)) (= ($generated@@0 ($generated@@101 ($generated@@467 $generated@@473) $generated@@474))  (and ($generated@@0 ($generated@@101 ($generated@@392 $generated@@473) ($generated@@161 ($generated@@250 $generated@@79 $generated@@474)))) (= ($generated@@101 ($generated@@468 $generated@@473) ($generated@@161 ($generated@@250 $generated@@79 $generated@@474))) ($generated@@162 ($generated@@250 $generated@@79 $generated@@474))))))
 :pattern ( ($generated@@101 ($generated@@467 $generated@@473) $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (! (let (($generated@@477 (type $generated@@476)))
(let (($generated@@478 ($generated@@377 (type $generated@@475))))
 (=> (= (type $generated@@475) ($generated@@376 $generated@@478 $generated@@477)) (= ($generated@@0 ($generated@@101 ($generated@@421 $generated@@475) $generated@@476)) (exists (($generated@@479 T@U) ) (!  (and (= (type $generated@@479) $generated@@478) (and ($generated@@0 ($generated@@101 ($generated@@374 $generated@@475) $generated@@479)) (= $generated@@476 ($generated@@101 ($generated@@460 $generated@@475) $generated@@479))))
 :pattern ( ($generated@@101 ($generated@@374 $generated@@475) $generated@@479))
 :pattern ( ($generated@@101 ($generated@@460 $generated@@475) $generated@@479))
))))))
 :pattern ( ($generated@@101 ($generated@@421 $generated@@475) $generated@@476))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (! (let (($generated@@482 (type $generated@@481)))
(let (($generated@@483 ($generated@@395 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@394 $generated@@483 $generated@@482)) (= ($generated@@0 ($generated@@101 ($generated@@432 $generated@@480) $generated@@481)) (exists (($generated@@484 T@U) ) (!  (and (= (type $generated@@484) $generated@@483) (and ($generated@@0 ($generated@@101 ($generated@@392 $generated@@480) $generated@@484)) (= $generated@@481 ($generated@@101 ($generated@@468 $generated@@480) $generated@@484))))
 :pattern ( ($generated@@101 ($generated@@392 $generated@@480) $generated@@484))
 :pattern ( ($generated@@101 ($generated@@468 $generated@@480) $generated@@484))
))))))
 :pattern ( ($generated@@101 ($generated@@432 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (! (= (type ($generated@@485 $generated@@486 $generated@@487)) $generated@@68)
 :pattern ( ($generated@@485 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (and (and (= (type $generated@@488) ($generated@@376 $generated@@163 $generated@@163)) (= (type $generated@@489) $generated@@68)) (= (type $generated@@490) $generated@@68)) (= (type $generated@@491) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@488 ($generated@@485 $generated@@489 $generated@@490) $generated@@491) (forall (($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@163) ($generated@@0 ($generated@@101 ($generated@@374 $generated@@488) $generated@@492))) (and ($generated@@311 ($generated@@101 ($generated@@460 $generated@@488) $generated@@492) $generated@@490 $generated@@491) ($generated@@311 $generated@@492 $generated@@489 $generated@@491)))
 :pattern ( ($generated@@101 ($generated@@460 $generated@@488) $generated@@492))
 :pattern ( ($generated@@101 ($generated@@374 $generated@@488) $generated@@492))
))))
 :pattern ( ($generated@@94 $generated@@488 ($generated@@485 $generated@@489 $generated@@490) $generated@@491))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (! (= (type ($generated@@493 $generated@@494 $generated@@495)) $generated@@68)
 :pattern ( ($generated@@493 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (and (and (= (type $generated@@496) ($generated@@394 $generated@@163 $generated@@163)) (= (type $generated@@497) $generated@@68)) (= (type $generated@@498) $generated@@68)) (= (type $generated@@499) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@496 ($generated@@493 $generated@@497 $generated@@498) $generated@@499) (forall (($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@163) ($generated@@0 ($generated@@101 ($generated@@392 $generated@@496) $generated@@500))) (and ($generated@@311 ($generated@@101 ($generated@@468 $generated@@496) $generated@@500) $generated@@498 $generated@@499) ($generated@@311 $generated@@500 $generated@@497 $generated@@499)))
 :pattern ( ($generated@@101 ($generated@@468 $generated@@496) $generated@@500))
 :pattern ( ($generated@@101 ($generated@@392 $generated@@496) $generated@@500))
))))
 :pattern ( ($generated@@94 $generated@@496 ($generated@@493 $generated@@497 $generated@@498) $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@79)) ($generated@@81 $generated@@502 ($generated@@82 $generated@@501))) (or ($generated@@248 $generated@@502) ($generated@@289 $generated@@502)))
 :pattern ( ($generated@@289 $generated@@502) ($generated@@81 $generated@@502 ($generated@@82 $generated@@501)))
 :pattern ( ($generated@@248 $generated@@502) ($generated@@81 $generated@@502 ($generated@@82 $generated@@501)))
)))
(assert (forall (($generated@@504 T@T) ) (! (= (type ($generated@@503 $generated@@504)) ($generated@@96 $generated@@504 $generated@@4))
 :pattern ( ($generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ) (! (let (($generated@@506 ($generated@@396 (type $generated@@505))))
(let (($generated@@507 ($generated@@395 (type $generated@@505))))
 (=> (= (type $generated@@505) ($generated@@394 $generated@@507 $generated@@506)) (= (= $generated@@505 ($generated@@393 $generated@@507 $generated@@506)) (= ($generated@@392 $generated@@505) ($generated@@503 $generated@@507))))))
 :pattern ( ($generated@@392 $generated@@505))
)))
(assert (forall (($generated@@508 T@U) ) (! (let (($generated@@509 ($generated@@396 (type $generated@@508))))
(let (($generated@@510 ($generated@@395 (type $generated@@508))))
 (=> (= (type $generated@@508) ($generated@@394 $generated@@510 $generated@@509)) (= (= $generated@@508 ($generated@@393 $generated@@510 $generated@@509)) (= ($generated@@432 $generated@@508) ($generated@@503 $generated@@509))))))
 :pattern ( ($generated@@432 $generated@@508))
)))
(assert (forall (($generated@@511 T@U) ) (! (let (($generated@@512 ($generated@@396 (type $generated@@511))))
(let (($generated@@513 ($generated@@395 (type $generated@@511))))
 (=> (= (type $generated@@511) ($generated@@394 $generated@@513 $generated@@512)) (= (= $generated@@511 ($generated@@393 $generated@@513 $generated@@512)) (= ($generated@@467 $generated@@511) ($generated@@503 $generated@@163))))))
 :pattern ( ($generated@@467 $generated@@511))
)))
(assert (forall (($generated@@514 T@U) ) (! (let (($generated@@515 ($generated@@378 (type $generated@@514))))
(let (($generated@@516 ($generated@@377 (type $generated@@514))))
 (=> (= (type $generated@@514) ($generated@@376 $generated@@516 $generated@@515)) (or (= $generated@@514 ($generated@@375 $generated@@516 $generated@@515)) (exists (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (and (and (= (type $generated@@517) $generated@@163) (= (type $generated@@518) $generated@@163)) ($generated@@0 ($generated@@101 ($generated@@459 $generated@@514) ($generated@@352 ($generated@@275 $generated@@517 $generated@@518)))))
 :no-pattern (type $generated@@517)
 :no-pattern (type $generated@@518)
 :no-pattern ($generated $generated@@517)
 :no-pattern ($generated@@0 $generated@@517)
 :no-pattern ($generated $generated@@518)
 :no-pattern ($generated@@0 $generated@@518)
))))))
 :pattern ( ($generated@@459 $generated@@514))
)))
(assert (forall (($generated@@519 T@U) ) (! (let (($generated@@520 ($generated@@396 (type $generated@@519))))
(let (($generated@@521 ($generated@@395 (type $generated@@519))))
 (=> (= (type $generated@@519) ($generated@@394 $generated@@521 $generated@@520)) (or (= $generated@@519 ($generated@@393 $generated@@521 $generated@@520)) (exists (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (and (and (= (type $generated@@522) $generated@@163) (= (type $generated@@523) $generated@@163)) ($generated@@0 ($generated@@101 ($generated@@467 $generated@@519) ($generated@@352 ($generated@@275 $generated@@522 $generated@@523)))))
 :no-pattern (type $generated@@522)
 :no-pattern (type $generated@@523)
 :no-pattern ($generated $generated@@522)
 :no-pattern ($generated@@0 $generated@@522)
 :no-pattern ($generated $generated@@523)
 :no-pattern ($generated@@0 $generated@@523)
))))))
 :pattern ( ($generated@@467 $generated@@519))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@163) ($generated@@276 $generated@@524 $generated@@46)) (and (= ($generated@@352 ($generated@@250 $generated@@2 $generated@@524)) $generated@@524) ($generated@@81 ($generated@@250 $generated@@2 $generated@@524) $generated@@46)))
 :pattern ( ($generated@@276 $generated@@524 $generated@@46))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@163) ($generated@@276 $generated@@525 $generated@@47)) (and (= ($generated@@352 ($generated@@250 $generated@@3 $generated@@525)) $generated@@525) ($generated@@81 ($generated@@250 $generated@@3 $generated@@525) $generated@@47)))
 :pattern ( ($generated@@276 $generated@@525 $generated@@47))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@163) ($generated@@276 $generated@@526 $generated@@44)) (and (= ($generated@@352 ($generated@@250 $generated@@4 $generated@@526)) $generated@@526) ($generated@@81 ($generated@@250 $generated@@4 $generated@@526) $generated@@44)))
 :pattern ( ($generated@@276 $generated@@526 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@527) 21))
(assert (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@163) ($generated@@276 $generated@@528 $generated@@45)) (and (= ($generated@@352 ($generated@@250 $generated@@527 $generated@@528)) $generated@@528) ($generated@@81 ($generated@@250 $generated@@527 $generated@@528) $generated@@45)))
 :pattern ( ($generated@@276 $generated@@528 $generated@@45))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@68) (= ($generated@@276 ($generated@@352 $generated@@529) $generated@@530) ($generated@@81 $generated@@529 $generated@@530)))
 :pattern ( ($generated@@276 ($generated@@352 $generated@@529) $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (! (let (($generated@@532 ($generated@@99 (type $generated@@531))))
 (=> (= (type $generated@@531) ($generated@@96 $generated@@532 $generated@@2)) (<= 0 ($generated@@365 $generated@@531))))
 :pattern ( ($generated@@365 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 ($generated@@336 (type $generated@@533))))
 (=> (= (type $generated@@533) ($generated@@335 $generated@@534)) (<= 0 ($generated@@334 $generated@@533))))
 :pattern ( ($generated@@334 $generated@@533))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@68)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@68) (= (type $generated@@538) $generated@@68)) (= ($generated@@535 ($generated@@485 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@485 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@68)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@68) (= (type $generated@@542) $generated@@68)) (= ($generated@@539 ($generated@@485 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@485 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@68) (= (type $generated@@544) $generated@@68)) (= ($generated@@92 ($generated@@485 $generated@@543 $generated@@544)) $generated@@58))
 :pattern ( ($generated@@485 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@68)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@68) (= (type $generated@@548) $generated@@68)) (= ($generated@@545 ($generated@@493 $generated@@547 $generated@@548)) $generated@@547))
 :pattern ( ($generated@@493 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@68)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@68) (= (type $generated@@552) $generated@@68)) (= ($generated@@549 ($generated@@493 $generated@@551 $generated@@552)) $generated@@552))
 :pattern ( ($generated@@493 $generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@68) (= (type $generated@@554) $generated@@68)) (= ($generated@@92 ($generated@@493 $generated@@553 $generated@@554)) $generated@@59))
 :pattern ( ($generated@@493 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@163) (= (type $generated@@556) $generated@@163)) (= ($generated@@168 ($generated@@275 $generated@@555 $generated@@556)) $generated@@61))
 :pattern ( ($generated@@275 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@68)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@68) (= (type $generated@@560) $generated@@68)) (= ($generated@@557 ($generated@@154 $generated@@559 $generated@@560)) $generated@@559))
 :pattern ( ($generated@@154 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@68)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@68) (= (type $generated@@564) $generated@@68)) (= ($generated@@561 ($generated@@154 $generated@@563 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@154 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@163) (= (type $generated@@566) $generated@@163)) (= ($generated@@161 ($generated@@275 $generated@@565 $generated@@566)) $generated@@565))
 :pattern ( ($generated@@275 $generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@163) (= (type $generated@@568) $generated@@163)) (= ($generated@@162 ($generated@@275 $generated@@567 $generated@@568)) $generated@@568))
 :pattern ( ($generated@@275 $generated@@567 $generated@@568))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@569) $generated@@163) (= (type $generated@@570) $generated@@79)) (= ($generated@@168 ($generated@@305 $generated@@569 $generated@@570)) $generated@@65))
 :pattern ( ($generated@@305 $generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@163) (= (type $generated@@572) $generated@@79)) (= ($generated@@251 ($generated@@305 $generated@@571 $generated@@572)) $generated@@571))
 :pattern ( ($generated@@305 $generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@163) (= (type $generated@@574) $generated@@79)) (= ($generated@@249 ($generated@@305 $generated@@573 $generated@@574)) $generated@@574))
 :pattern ( ($generated@@305 $generated@@573 $generated@@574))
)))
(assert  (and (forall (($generated@@577 T@U) ) (! (= (type ($generated@@575 $generated@@577)) $generated@@68)
 :pattern ( ($generated@@575 $generated@@577))
)) (forall (($generated@@578 T@U) ($generated@@579 Int) ) (! (let (($generated@@580 ($generated@@336 (type $generated@@578))))
(= (type ($generated@@576 $generated@@578 $generated@@579)) $generated@@580))
 :pattern ( ($generated@@576 $generated@@578 $generated@@579))
))))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@581) ($generated@@335 $generated@@163)) (= (type $generated@@582) $generated@@68)) (= (type $generated@@583) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@581 ($generated@@575 $generated@@582) $generated@@583) (forall (($generated@@584 Int) ) (!  (=> (and (<= 0 $generated@@584) (< $generated@@584 ($generated@@334 $generated@@581))) ($generated@@311 ($generated@@576 $generated@@581 $generated@@584) $generated@@582 $generated@@583))
 :pattern ( ($generated@@576 $generated@@581 $generated@@584))
))))
 :pattern ( ($generated@@94 $generated@@581 ($generated@@575 $generated@@582) $generated@@583))
)))
(assert (forall (($generated@@586 Int) ) (! (= ($generated@@585 ($generated@@95 $generated@@586)) $generated@@586)
 :pattern ( ($generated@@95 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ) (! (= (type ($generated@@587 $generated@@588)) $generated@@68)
 :pattern ( ($generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ) (!  (=> (= (type $generated@@589) $generated@@68) (= ($generated@@587 ($generated@@292 $generated@@589)) $generated@@589))
 :pattern ( ($generated@@292 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ) (!  (=> (= (type $generated@@590) $generated@@68) (= ($generated@@92 ($generated@@292 $generated@@590)) $generated@@54))
 :pattern ( ($generated@@292 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ) (! (= (type ($generated@@591 $generated@@592)) $generated@@68)
 :pattern ( ($generated@@591 $generated@@592))
)))
(assert (forall (($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@68) (= ($generated@@591 ($generated@@297 $generated@@593)) $generated@@593))
 :pattern ( ($generated@@297 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (!  (=> (= (type $generated@@594) $generated@@68) (= ($generated@@92 ($generated@@297 $generated@@594)) $generated@@55))
 :pattern ( ($generated@@297 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ) (! (= (type ($generated@@595 $generated@@596)) $generated@@68)
 :pattern ( ($generated@@595 $generated@@596))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@68) (= ($generated@@595 ($generated@@171 $generated@@597)) $generated@@597))
 :pattern ( ($generated@@171 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@68) (= ($generated@@92 ($generated@@171 $generated@@598)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ) (! (= (type ($generated@@599 $generated@@600)) $generated@@68)
 :pattern ( ($generated@@599 $generated@@600))
)))
(assert (forall (($generated@@601 T@U) ) (!  (=> (= (type $generated@@601) $generated@@68) (= ($generated@@599 ($generated@@575 $generated@@601)) $generated@@601))
 :pattern ( ($generated@@575 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@68) (= ($generated@@92 ($generated@@575 $generated@@602)) $generated@@57))
 :pattern ( ($generated@@575 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ) (! (= (type ($generated@@603 $generated@@604)) $generated@@68)
 :pattern ( ($generated@@603 $generated@@604))
)))
(assert (forall (($generated@@605 T@U) ) (!  (=> (= (type $generated@@605) $generated@@68) (= ($generated@@603 ($generated@@82 $generated@@605)) $generated@@605))
 :pattern ( ($generated@@82 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ) (! (let (($generated@@607 (type $generated@@606)))
(= ($generated@@250 $generated@@607 ($generated@@352 $generated@@606)) $generated@@606))
 :pattern ( ($generated@@352 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@608) ($generated@@376 $generated@@163 $generated@@163)) (= (type $generated@@609) $generated@@68)) (= (type $generated@@610) $generated@@68)) (= ($generated@@81 $generated@@608 ($generated@@485 $generated@@609 $generated@@610)) (forall (($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@611) $generated@@163) ($generated@@0 ($generated@@101 ($generated@@374 $generated@@608) $generated@@611))) (and ($generated@@276 ($generated@@101 ($generated@@460 $generated@@608) $generated@@611) $generated@@610) ($generated@@276 $generated@@611 $generated@@609)))
 :pattern ( ($generated@@101 ($generated@@460 $generated@@608) $generated@@611))
 :pattern ( ($generated@@101 ($generated@@374 $generated@@608) $generated@@611))
))))
 :pattern ( ($generated@@81 $generated@@608 ($generated@@485 $generated@@609 $generated@@610)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (and (= (type $generated@@612) ($generated@@394 $generated@@163 $generated@@163)) (= (type $generated@@613) $generated@@68)) (= (type $generated@@614) $generated@@68)) (= ($generated@@81 $generated@@612 ($generated@@493 $generated@@613 $generated@@614)) (forall (($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@615) $generated@@163) ($generated@@0 ($generated@@101 ($generated@@392 $generated@@612) $generated@@615))) (and ($generated@@276 ($generated@@101 ($generated@@468 $generated@@612) $generated@@615) $generated@@614) ($generated@@276 $generated@@615 $generated@@613)))
 :pattern ( ($generated@@101 ($generated@@468 $generated@@612) $generated@@615))
 :pattern ( ($generated@@101 ($generated@@392 $generated@@612) $generated@@615))
))))
 :pattern ( ($generated@@81 $generated@@612 ($generated@@493 $generated@@613 $generated@@614)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) $generated@@163) (= (type $generated@@619) $generated@@163)) (< ($generated@@616 $generated@@618) ($generated@@617 ($generated@@275 $generated@@618 $generated@@619))))
 :pattern ( ($generated@@275 $generated@@618 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) $generated@@163) (= (type $generated@@621) $generated@@163)) (< ($generated@@616 $generated@@621) ($generated@@617 ($generated@@275 $generated@@620 $generated@@621))))
 :pattern ( ($generated@@275 $generated@@620 $generated@@621))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@163) (= (type $generated@@623) $generated@@79)) (< ($generated@@616 $generated@@622) ($generated@@617 ($generated@@305 $generated@@622 $generated@@623))))
 :pattern ( ($generated@@305 $generated@@622 $generated@@623))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@163) (= (type $generated@@625) $generated@@79)) (< ($generated@@617 $generated@@625) ($generated@@617 ($generated@@305 $generated@@624 $generated@@625))))
 :pattern ( ($generated@@305 $generated@@624 $generated@@625))
)))
(assert (forall (($generated@@626 T@U) ($generated@@627 T@U) ($generated@@628 T@U) ) (!  (=> (and (and (and (= (type $generated@@626) $generated@@163) (= (type $generated@@627) $generated@@68)) (= (type $generated@@628) $generated@@68)) ($generated@@276 $generated@@626 ($generated@@485 $generated@@627 $generated@@628))) (and (= ($generated@@352 ($generated@@250 ($generated@@376 $generated@@163 $generated@@163) $generated@@626)) $generated@@626) ($generated@@81 ($generated@@250 ($generated@@376 $generated@@163 $generated@@163) $generated@@626) ($generated@@485 $generated@@627 $generated@@628))))
 :pattern ( ($generated@@276 $generated@@626 ($generated@@485 $generated@@627 $generated@@628)))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) $generated@@163) (= (type $generated@@630) $generated@@68)) (= (type $generated@@631) $generated@@68)) ($generated@@276 $generated@@629 ($generated@@493 $generated@@630 $generated@@631))) (and (= ($generated@@352 ($generated@@250 ($generated@@394 $generated@@163 $generated@@163) $generated@@629)) $generated@@629) ($generated@@81 ($generated@@250 ($generated@@394 $generated@@163 $generated@@163) $generated@@629) ($generated@@493 $generated@@630 $generated@@631))))
 :pattern ( ($generated@@276 $generated@@629 ($generated@@493 $generated@@630 $generated@@631)))
)))
(assert (forall (($generated@@632 T@U) ($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (and (and (= (type $generated@@632) $generated@@68) (= (type $generated@@633) $generated@@68)) (= (type $generated@@634) $generated@@163)) ($generated@@276 $generated@@634 ($generated@@154 $generated@@632 $generated@@633))) (and (= ($generated@@352 ($generated@@250 $generated@@79 $generated@@634)) $generated@@634) ($generated@@81 ($generated@@250 $generated@@79 $generated@@634) ($generated@@154 $generated@@632 $generated@@633))))
 :pattern ( ($generated@@276 $generated@@634 ($generated@@154 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ($generated@@637 T@U) ) (!  (=> (and (and (and (= (type $generated@@635) $generated@@79) (= (type $generated@@636) $generated@@68)) (= (type $generated@@637) ($generated@@96 $generated@@97 $generated@@98))) (and ($generated@@272 $generated@@637) (and ($generated@@289 $generated@@635) ($generated@@94 $generated@@635 ($generated@@82 $generated@@636) $generated@@637)))) ($generated@@311 ($generated@@251 $generated@@635) $generated@@636 $generated@@637))
 :pattern ( ($generated@@311 ($generated@@251 $generated@@635) $generated@@636 $generated@@637))
)))
(assert (forall (($generated@@638 T@U) ) (! (let (($generated@@639 (type $generated@@638)))
 (not ($generated@@0 ($generated@@101 ($generated@@503 $generated@@639) $generated@@638))))
 :pattern ( (let (($generated@@639 (type $generated@@638)))
($generated@@101 ($generated@@503 $generated@@639) $generated@@638)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (= (type $generated@@640) $generated@@68) (= (type $generated@@641) $generated@@68)) (and (= ($generated@@92 ($generated@@154 $generated@@640 $generated@@641)) $generated@@62) (= ($generated@@371 ($generated@@154 $generated@@640 $generated@@641)) $generated@@66)))
 :pattern ( ($generated@@154 $generated@@640 $generated@@641))
)))
(assert (forall (($generated@@642 T@U) ) (!  (=> (= (type $generated@@642) $generated@@79) (= ($generated@@616 ($generated@@352 $generated@@642)) ($generated@@617 $generated@@642)))
 :pattern ( ($generated@@616 ($generated@@352 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (!  (=> (and (and (and (= (type $generated@@643) $generated@@68) (= (type $generated@@644) $generated@@78)) (= (type $generated@@645) $generated@@79)) (= (type $generated@@646) $generated@@79)) (= ($generated@@77 $generated@@643 ($generated@@245 $generated@@644) $generated@@645 $generated@@646) ($generated@@77 $generated@@643 $generated@@644 $generated@@645 $generated@@646)))
 :pattern ( ($generated@@77 $generated@@643 ($generated@@245 $generated@@644) $generated@@645 $generated@@646))
)))
(assert (forall (($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@647) $generated@@163) ($generated@@276 $generated@@647 ($generated@@95 0))) (and (= ($generated@@352 ($generated@@250 $generated@@2 $generated@@647)) $generated@@647) ($generated@@81 ($generated@@250 ($generated@@96 $generated@@163 $generated@@4) $generated@@647) ($generated@@95 0))))
 :pattern ( ($generated@@276 $generated@@647 ($generated@@95 0)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (and (= (type $generated@@648) $generated@@163) (= (type $generated@@649) $generated@@68)) ($generated@@276 $generated@@648 ($generated@@292 $generated@@649))) (and (= ($generated@@352 ($generated@@250 ($generated@@96 $generated@@163 $generated@@4) $generated@@648)) $generated@@648) ($generated@@81 ($generated@@250 ($generated@@96 $generated@@163 $generated@@4) $generated@@648) ($generated@@292 $generated@@649))))
 :pattern ( ($generated@@276 $generated@@648 ($generated@@292 $generated@@649)))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (and (= (type $generated@@650) $generated@@163) (= (type $generated@@651) $generated@@68)) ($generated@@276 $generated@@650 ($generated@@297 $generated@@651))) (and (= ($generated@@352 ($generated@@250 ($generated@@96 $generated@@163 $generated@@4) $generated@@650)) $generated@@650) ($generated@@81 ($generated@@250 ($generated@@96 $generated@@163 $generated@@4) $generated@@650) ($generated@@297 $generated@@651))))
 :pattern ( ($generated@@276 $generated@@650 ($generated@@297 $generated@@651)))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (= (type $generated@@652) $generated@@163) (= (type $generated@@653) $generated@@68)) ($generated@@276 $generated@@652 ($generated@@171 $generated@@653))) (and (= ($generated@@352 ($generated@@250 ($generated@@96 $generated@@163 $generated@@2) $generated@@652)) $generated@@652) ($generated@@81 ($generated@@250 ($generated@@96 $generated@@163 $generated@@2) $generated@@652) ($generated@@171 $generated@@653))))
 :pattern ( ($generated@@276 $generated@@652 ($generated@@171 $generated@@653)))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (and (= (type $generated@@654) $generated@@163) (= (type $generated@@655) $generated@@68)) ($generated@@276 $generated@@654 ($generated@@575 $generated@@655))) (and (= ($generated@@352 ($generated@@250 ($generated@@335 $generated@@163) $generated@@654)) $generated@@654) ($generated@@81 ($generated@@250 ($generated@@335 $generated@@163) $generated@@654) ($generated@@575 $generated@@655))))
 :pattern ( ($generated@@276 $generated@@654 ($generated@@575 $generated@@655)))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (= (type $generated@@656) $generated@@68) (= (type $generated@@657) $generated@@163)) ($generated@@276 $generated@@657 ($generated@@82 $generated@@656))) (and (= ($generated@@352 ($generated@@250 $generated@@79 $generated@@657)) $generated@@657) ($generated@@81 ($generated@@250 $generated@@79 $generated@@657) ($generated@@82 $generated@@656))))
 :pattern ( ($generated@@276 $generated@@657 ($generated@@82 $generated@@656)))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (and (and (= (type $generated@@658) $generated@@79) (= (type $generated@@659) $generated@@68)) (= (type $generated@@660) ($generated@@96 $generated@@97 $generated@@98))) (and ($generated@@272 $generated@@660) (and ($generated@@289 $generated@@658) ($generated@@94 $generated@@658 ($generated@@82 $generated@@659) $generated@@660)))) ($generated@@94 ($generated@@249 $generated@@658) ($generated@@82 $generated@@659) $generated@@660))
 :pattern ( ($generated@@94 ($generated@@249 $generated@@658) ($generated@@82 $generated@@659) $generated@@660))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ($generated@@663 T@U) ) (!  (=> (and (and (= (type $generated@@661) ($generated@@96 $generated@@163 $generated@@2)) (= (type $generated@@662) $generated@@68)) (= (type $generated@@663) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@661 ($generated@@171 $generated@@662) $generated@@663) (forall (($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@664) $generated@@163) (< 0 ($generated ($generated@@101 $generated@@661 $generated@@664)))) ($generated@@311 $generated@@664 $generated@@662 $generated@@663))
 :pattern ( ($generated@@101 $generated@@661 $generated@@664))
))))
 :pattern ( ($generated@@94 $generated@@661 ($generated@@171 $generated@@662) $generated@@663))
)))
(assert (= $generated@@169 ($generated@@246 $generated@@169)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ($generated@@667 T@U) ) (!  (=> (and (and (and (= (type $generated@@665) $generated@@79) (= (type $generated@@666) $generated@@68)) (= (type $generated@@667) ($generated@@96 $generated@@97 $generated@@98))) (and ($generated@@272 $generated@@667) (and ($generated@@153 $generated@@665) (exists (($generated@@668 T@U) ) (!  (and (= (type $generated@@668) $generated@@68) ($generated@@94 $generated@@665 ($generated@@154 $generated@@666 $generated@@668) $generated@@667))
 :pattern ( ($generated@@94 $generated@@665 ($generated@@154 $generated@@666 $generated@@668) $generated@@667))
))))) ($generated@@311 ($generated@@161 $generated@@665) $generated@@666 $generated@@667))
 :pattern ( ($generated@@311 ($generated@@161 $generated@@665) $generated@@666 $generated@@667))
)))
(assert (forall (($generated@@669 T@U) ($generated@@670 T@U) ($generated@@671 T@U) ) (!  (=> (and (and (and (= (type $generated@@669) $generated@@79) (= (type $generated@@670) $generated@@68)) (= (type $generated@@671) ($generated@@96 $generated@@97 $generated@@98))) (and ($generated@@272 $generated@@671) (and ($generated@@153 $generated@@669) (exists (($generated@@672 T@U) ) (!  (and (= (type $generated@@672) $generated@@68) ($generated@@94 $generated@@669 ($generated@@154 $generated@@672 $generated@@670) $generated@@671))
 :pattern ( ($generated@@94 $generated@@669 ($generated@@154 $generated@@672 $generated@@670) $generated@@671))
))))) ($generated@@311 ($generated@@162 $generated@@669) $generated@@670 $generated@@671))
 :pattern ( ($generated@@311 ($generated@@162 $generated@@669) $generated@@670 $generated@@671))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ) (!  (=> (and (= (type $generated@@673) $generated@@163) (= (type $generated@@674) $generated@@163)) (= ($generated@@275 ($generated@@246 $generated@@673) ($generated@@246 $generated@@674)) ($generated@@246 ($generated@@275 $generated@@673 $generated@@674))))
 :pattern ( ($generated@@275 ($generated@@246 $generated@@673) ($generated@@246 $generated@@674)))
)))
(assert (forall (($generated@@675 T@U) ($generated@@676 T@U) ) (!  (=> (and (= (type $generated@@675) $generated@@163) (= (type $generated@@676) $generated@@79)) (= ($generated@@305 ($generated@@246 $generated@@675) ($generated@@246 $generated@@676)) ($generated@@246 ($generated@@305 $generated@@675 $generated@@676))))
 :pattern ( ($generated@@305 ($generated@@246 $generated@@675) ($generated@@246 $generated@@676)))
)))
(assert (forall (($generated@@677 T@U) ) (! (= ($generated@@352 ($generated@@246 $generated@@677)) ($generated@@246 ($generated@@352 $generated@@677)))
 :pattern ( ($generated@@352 ($generated@@246 $generated@@677)))
)))
(assert (forall (($generated@@678 T@U) ) (! (let (($generated@@679 ($generated@@336 (type $generated@@678))))
 (=> (and (= (type $generated@@678) ($generated@@335 $generated@@679)) (= ($generated@@334 $generated@@678) 0)) (= $generated@@678 ($generated@@333 $generated@@679))))
 :pattern ( ($generated@@334 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ($generated@@682 T@U) ) (! (let (($generated@@683 (type $generated@@681)))
 (=> (and (and (= (type $generated@@680) ($generated@@96 $generated@@683 $generated@@2)) (= (type $generated@@682) $generated@@2)) (<= 0 ($generated $generated@@682))) (= ($generated@@365 ($generated@@102 $generated@@680 $generated@@681 $generated@@682)) (+ (- ($generated@@365 $generated@@680) ($generated ($generated@@101 $generated@@680 $generated@@681))) ($generated $generated@@682)))))
 :pattern ( ($generated@@365 ($generated@@102 $generated@@680 $generated@@681 $generated@@682)))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ) (!  (=> (and (= (type $generated@@684) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@685) $generated@@2)) ($generated@@94 $generated@@685 $generated@@46 $generated@@684))
 :pattern ( ($generated@@94 $generated@@685 $generated@@46 $generated@@684))
)))
(assert (forall (($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (= (type $generated@@686) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@687) $generated@@3)) ($generated@@94 $generated@@687 $generated@@47 $generated@@686))
 :pattern ( ($generated@@94 $generated@@687 $generated@@47 $generated@@686))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@688) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@689) $generated@@4)) ($generated@@94 $generated@@689 $generated@@44 $generated@@688))
 :pattern ( ($generated@@94 $generated@@689 $generated@@44 $generated@@688))
)))
(assert (forall (($generated@@690 T@U) ($generated@@691 T@U) ) (!  (=> (and (= (type $generated@@690) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@691) $generated@@527)) ($generated@@94 $generated@@691 $generated@@45 $generated@@690))
 :pattern ( ($generated@@94 $generated@@691 $generated@@45 $generated@@690))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 T@U) ) (!  (=> (and (= (type $generated@@692) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@693) $generated@@163)) ($generated@@94 $generated@@693 $generated@@48 $generated@@692))
 :pattern ( ($generated@@94 $generated@@693 $generated@@48 $generated@@692))
)))
(assert (forall (($generated@@694 T@U) ($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@694) $generated@@68) (= (type $generated@@695) $generated@@163)) (= (type $generated@@696) $generated@@79)) (= (type $generated@@697) ($generated@@96 $generated@@97 $generated@@98))) ($generated@@272 $generated@@697)) (= ($generated@@94 ($generated@@305 $generated@@695 $generated@@696) ($generated@@82 $generated@@694) $generated@@697)  (and ($generated@@311 $generated@@695 $generated@@694 $generated@@697) ($generated@@94 $generated@@696 ($generated@@82 $generated@@694) $generated@@697))))
 :pattern ( ($generated@@94 ($generated@@305 $generated@@695 $generated@@696) ($generated@@82 $generated@@694) $generated@@697))
)))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ) (!  (=> (and (= (type $generated@@698) ($generated@@335 $generated@@163)) (= (type $generated@@699) $generated@@68)) (= ($generated@@81 $generated@@698 ($generated@@575 $generated@@699)) (forall (($generated@@700 Int) ) (!  (=> (and (<= 0 $generated@@700) (< $generated@@700 ($generated@@334 $generated@@698))) ($generated@@276 ($generated@@576 $generated@@698 $generated@@700) $generated@@699))
 :pattern ( ($generated@@576 $generated@@698 $generated@@700))
))))
 :pattern ( ($generated@@81 $generated@@698 ($generated@@575 $generated@@699)))
)))
(assert (forall (($generated@@702 T@U) ($generated@@703 Int) ) (!  (=> (= (type $generated@@702) ($generated@@335 $generated@@163)) (=> (and (<= 0 $generated@@703) (< $generated@@703 ($generated@@334 $generated@@702))) (< ($generated@@617 ($generated@@250 $generated@@79 ($generated@@576 $generated@@702 $generated@@703))) ($generated@@701 $generated@@702))))
 :pattern ( ($generated@@617 ($generated@@250 $generated@@79 ($generated@@576 $generated@@702 $generated@@703))))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@704 T@U) ($generated@@705 T@U) ($generated@@706 T@U) ($generated@@707 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@704) $generated@@68) (= (type $generated@@705) $generated@@68)) (= (type $generated@@706) $generated@@78)) (= (type $generated@@707) $generated@@79)) (or ($generated@@247 $generated@@704 $generated@@705 $generated@@707) (and (not (= 2 $generated@@76)) ($generated@@81 $generated@@707 ($generated@@82 ($generated@@82 $generated@@705)))))) ($generated@@81 ($generated@@244 $generated@@704 $generated@@705 $generated@@706 $generated@@707) ($generated@@82 $generated@@705)))
 :pattern ( ($generated@@244 $generated@@704 $generated@@705 $generated@@706 $generated@@707))
))))
(assert (forall (($generated@@708 T@U) ($generated@@709 T@U) ($generated@@710 T@U) ) (!  (=> (and (and (and (= (type $generated@@708) ($generated@@376 $generated@@163 $generated@@163)) (= (type $generated@@709) $generated@@68)) (= (type $generated@@710) $generated@@68)) ($generated@@81 $generated@@708 ($generated@@485 $generated@@709 $generated@@710))) (and (and ($generated@@81 ($generated@@374 $generated@@708) ($generated@@292 $generated@@709)) ($generated@@81 ($generated@@421 $generated@@708) ($generated@@292 $generated@@710))) ($generated@@81 ($generated@@459 $generated@@708) ($generated@@292 ($generated@@154 $generated@@709 $generated@@710)))))
 :pattern ( ($generated@@81 $generated@@708 ($generated@@485 $generated@@709 $generated@@710)))
)))
(assert (forall (($generated@@711 T@U) ($generated@@712 T@U) ($generated@@713 T@U) ) (!  (=> (and (and (and (= (type $generated@@711) ($generated@@394 $generated@@163 $generated@@163)) (= (type $generated@@712) $generated@@68)) (= (type $generated@@713) $generated@@68)) ($generated@@81 $generated@@711 ($generated@@493 $generated@@712 $generated@@713))) (and (and ($generated@@81 ($generated@@392 $generated@@711) ($generated@@297 $generated@@712)) ($generated@@81 ($generated@@432 $generated@@711) ($generated@@297 $generated@@713))) ($generated@@81 ($generated@@467 $generated@@711) ($generated@@297 ($generated@@154 $generated@@712 $generated@@713)))))
 :pattern ( ($generated@@81 $generated@@711 ($generated@@493 $generated@@712 $generated@@713)))
)))
(assert (forall (($generated@@714 T@U) ) (!  (=> (= (type $generated@@714) $generated@@2) ($generated@@81 $generated@@714 $generated@@46))
 :pattern ( ($generated@@81 $generated@@714 $generated@@46))
)))
(assert (forall (($generated@@715 T@U) ) (!  (=> (= (type $generated@@715) $generated@@3) ($generated@@81 $generated@@715 $generated@@47))
 :pattern ( ($generated@@81 $generated@@715 $generated@@47))
)))
(assert (forall (($generated@@716 T@U) ) (!  (=> (= (type $generated@@716) $generated@@4) ($generated@@81 $generated@@716 $generated@@44))
 :pattern ( ($generated@@81 $generated@@716 $generated@@44))
)))
(assert (forall (($generated@@717 T@U) ) (!  (=> (= (type $generated@@717) $generated@@527) ($generated@@81 $generated@@717 $generated@@45))
 :pattern ( ($generated@@81 $generated@@717 $generated@@45))
)))
(assert (forall (($generated@@718 T@U) ) (!  (=> (= (type $generated@@718) $generated@@163) ($generated@@81 $generated@@718 $generated@@48))
 :pattern ( ($generated@@81 $generated@@718 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@719 () T@U)
(declare-fun $generated@@720 () T@U)
(declare-fun $generated@@721 () T@U)
(declare-fun $generated@@722 () T@U)
(declare-fun $generated@@723 () T@U)
(declare-fun $generated@@724 () T@U)
(declare-fun $generated@@725 () T@U)
(declare-fun $generated@@726 () T@U)
(declare-fun $generated@@727 () T@U)
(declare-fun $generated@@728 () T@U)
(declare-fun $generated@@729 () T@U)
(declare-fun $generated@@730 () T@U)
(declare-fun $generated@@731 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@719) $generated@@79) (= (type $generated@@720) $generated@@79)) (= (type $generated@@721) $generated@@79)) (= (type $generated@@722) $generated@@68)) (= (type $generated@@723) $generated@@79)) (= (type $generated@@724) ($generated@@96 $generated@@97 $generated@@98))) (= (type $generated@@725) $generated@@79)) (= (type $generated@@726) $generated@@79)) (= (type $generated@@727) $generated@@79)) (= (type $generated@@728) ($generated@@178 $generated@@97 $generated@@4))) (= (type $generated@@729) $generated@@97)) (= (type $generated@@730) ($generated@@178 $generated@@97 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@732 true))
(let (($generated@@733  (=> (= $generated@@719 ($generated@@305 ($generated@@352 $generated@@720) $generated@@721)) (=> (and ($generated@@81 $generated@@720 ($generated@@82 $generated@@722)) ($generated@@81 $generated@@721 ($generated@@82 ($generated@@82 $generated@@722)))) (=> (and (and (and (and ($generated@@81 $generated@@723 ($generated@@82 ($generated@@82 $generated@@722))) ($generated@@94 $generated@@723 ($generated@@82 ($generated@@82 $generated@@722)) $generated@@724)) (= $generated@@725 $generated@@721)) (and ($generated@@81 $generated@@725 ($generated@@82 ($generated@@82 $generated@@722))) (= $generated@@723 $generated@@725))) (and (and (and ($generated@@81 $generated@@726 ($generated@@82 $generated@@722)) ($generated@@94 $generated@@726 ($generated@@82 $generated@@722) $generated@@724)) (and (= $generated@@727 $generated@@720) ($generated@@81 $generated@@727 ($generated@@82 $generated@@722)))) (and (and (= $generated@@726 $generated@@727) ($generated@@94 $generated@@726 ($generated@@82 $generated@@722) $generated@@724)) (and ($generated@@94 $generated@@723 ($generated@@82 ($generated@@82 $generated@@722)) $generated@@724) (= (ControlFlow 0 4) (- 0 3)))))) (< ($generated@@617 $generated@@723) ($generated@@617 $generated@@719)))))))
(let (($generated@@734  (=> (not (= $generated@@719 $generated@@169)) (and (=> (= (ControlFlow 0 6) 4) $generated@@733) (=> (= (ControlFlow 0 6) 5) $generated@@732)))))
(let (($generated@@735 true))
(let (($generated@@736  (=> (= $generated@@728 ($generated@@232 $generated@@729 $generated@@724 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@735) (=> (= (ControlFlow 0 7) 6) $generated@@734)))))
(let (($generated@@737 true))
(let (($generated@@738  (=> (= $generated@@730 ($generated@@177 $generated@@729 $generated@@724 $generated@@60 false)) (and (=> (= (ControlFlow 0 8) 1) $generated@@737) (=> (= (ControlFlow 0 8) 7) $generated@@736)))))
(let (($generated@@739  (=> (and (and (and ($generated@@272 $generated@@724) ($generated@@731 $generated@@724)) ($generated@@81 $generated@@719 ($generated@@82 ($generated@@82 $generated@@722)))) (and (= 2 $generated@@76) (= (ControlFlow 0 9) 8))) $generated@@738)))
$generated@@739)))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) Bool)
(declare-fun $generated@@95 (Int) T@U)
(declare-fun $generated@@96 (T@T T@T) T@T)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 (T@T) T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U) T@U)
(declare-fun $generated@@104 (T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U) Bool)
(declare-fun $generated@@235 (T@U T@U) T@U)
(declare-fun $generated@@236 (T@U T@U) Bool)
(declare-fun $generated@@246 (T@U T@U) Bool)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U) T@U)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@270 (T@U) Bool)
(declare-fun $generated@@273 (T@U T@U) T@U)
(declare-fun $generated@@279 (T@U T@U T@U) Bool)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@303 (T@T) T@U)
(declare-fun $generated@@304 (T@U) Int)
(declare-fun $generated@@305 (T@T) T@T)
(declare-fun $generated@@306 (T@T) T@T)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 () T@U)
(declare-fun $generated@@319 (T@U) T@U)
(declare-fun $generated@@324 (T@U) Int)
(declare-fun $generated@@325 (T@T) T@U)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@334 (T@T T@T) T@U)
(declare-fun $generated@@335 (T@T T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@337 (T@T) T@T)
(declare-fun $generated@@351 (T@U) T@U)
(declare-fun $generated@@352 (T@T T@T) T@U)
(declare-fun $generated@@353 (T@T T@T) T@T)
(declare-fun $generated@@354 (T@T) T@T)
(declare-fun $generated@@355 (T@T) T@T)
(declare-fun $generated@@376 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@397 (T@U) Bool)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@417 (T@T T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@427 (T@U) T@U)
(declare-fun $generated@@428 (T@U) T@U)
(declare-fun $generated@@445 (T@U T@U) T@U)
(declare-fun $generated@@453 (T@U T@U) T@U)
(declare-fun $generated@@463 (T@T) T@U)
(declare-fun $generated@@487 () T@T)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@505 (T@U) T@U)
(declare-fun $generated@@509 (T@U) T@U)
(declare-fun $generated@@517 (T@U) T@U)
(declare-fun $generated@@521 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@536 (T@U Int) T@U)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@555 (T@U) T@U)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@563 (T@U) T@U)
(declare-fun $generated@@576 (T@U) Int)
(declare-fun $generated@@577 (T@U) Int)
(declare-fun $generated@@661 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (and (= ($generated@@1 $generated@@78) 11) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= (type ($generated@@77 $generated@@83 $generated@@84 $generated@@85 $generated@@86)) $generated@@79)
 :pattern ( ($generated@@77 $generated@@83 $generated@@84 $generated@@85 $generated@@86))
))) (forall (($generated@@87 T@U) ) (! (= (type ($generated@@82 $generated@@87)) $generated@@68)
 :pattern ( ($generated@@82 $generated@@87))
))))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@88) $generated@@68) (= (type $generated@@89) $generated@@78)) (= (type $generated@@90) $generated@@79)) (= (type $generated@@91) $generated@@79)) (or ($generated@@80 $generated@@88 $generated@@90 $generated@@91) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@90 ($generated@@82 $generated@@88)) ($generated@@81 $generated@@91 ($generated@@82 $generated@@88)))))) ($generated@@81 ($generated@@77 $generated@@88 $generated@@89 $generated@@90 $generated@@91) ($generated@@82 $generated@@88)))
 :pattern ( ($generated@@77 $generated@@88 $generated@@89 $generated@@90 $generated@@91))
))))
(assert (forall (($generated@@93 T@U) ) (! (= (type ($generated@@92 $generated@@93)) $generated@@69)
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert (= ($generated@@92 $generated@@44) $generated@@49))
(assert (= ($generated@@92 $generated@@45) $generated@@50))
(assert (= ($generated@@92 $generated@@46) $generated@@51))
(assert (= ($generated@@92 $generated@@47) $generated@@52))
(assert (= ($generated@@92 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (= ($generated@@1 ($generated@@96 $generated@@105 $generated@@106)) 13)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@99 ($generated@@96 $generated@@107 $generated@@108)) $generated@@107)
 :pattern ( ($generated@@96 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@100 ($generated@@96 $generated@@109 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@96 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@100 (type $generated@@111))))
(= (type ($generated@@101 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@101 $generated@@111 $generated@@112))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 (type $generated@@116)))
(let (($generated@@118 (type $generated@@115)))
(= (type ($generated@@102 $generated@@114 $generated@@115 $generated@@116)) ($generated@@96 $generated@@118 $generated@@117))))
 :pattern ( ($generated@@102 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@100 (type $generated@@119))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@101 ($generated@@102 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@101 ($generated@@102 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@101 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@101 $generated@@128 $generated@@130)))
 :weight 0
)))) (= ($generated@@1 $generated@@97) 14)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (let (($generated@@133 ($generated@@71 (type $generated@@132))))
(= (type ($generated@@103 $generated@@131 $generated@@132)) $generated@@133))
 :pattern ( ($generated@@103 $generated@@131 $generated@@132))
))) (= ($generated@@1 $generated@@98) 15)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= (type ($generated@@104 $generated@@134 $generated@@135 $generated@@136)) $generated@@98)
 :pattern ( ($generated@@104 $generated@@134 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 ($generated@@71 (type $generated@@138))))
 (=> (= (type $generated@@139) $generated@@140) (= ($generated@@103 ($generated@@104 $generated@@137 $generated@@138 $generated@@139) $generated@@138) $generated@@139)))
 :weight 0
))) (and (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@143 $generated@@144) (= ($generated@@103 ($generated@@104 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@103 $generated@@142 $generated@@144)))
 :weight 0
)) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or true (= ($generated@@103 ($generated@@104 $generated@@146 $generated@@147 $generated@@145) $generated@@148) ($generated@@103 $generated@@146 $generated@@148)))
 :weight 0
)))) (forall (($generated@@149 Int) ) (! (= (type ($generated@@95 $generated@@149)) $generated@@68)
 :pattern ( ($generated@@95 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@2) (= (type $generated@@151) ($generated@@96 $generated@@97 $generated@@98))) ($generated@@94 $generated@@150 ($generated@@95 0) $generated@@151))
 :pattern ( ($generated@@94 $generated@@150 ($generated@@95 0) $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@81 $generated@@152 ($generated@@95 0)))
 :pattern ( ($generated@@81 $generated@@152 ($generated@@95 0)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@155 $generated@@156)) $generated@@68)
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@68) (= (type $generated@@158) $generated@@68)) (= (type $generated@@159) $generated@@79)) ($generated@@81 $generated@@159 ($generated@@154 $generated@@157 $generated@@158))) ($generated@@153 $generated@@159))
 :pattern ( ($generated@@153 $generated@@159) ($generated@@81 $generated@@159 ($generated@@154 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 16) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@79) (= (type $generated@@167) $generated@@79)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert  (and (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@72)
 :pattern ( ($generated@@168 $generated@@170))
)) (= (type $generated@@169) $generated@@79)))
(assert (= ($generated@@168 $generated@@169) $generated@@63))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@68)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@96 $generated@@163 $generated@@2)) (= (type $generated@@175) $generated@@68)) ($generated@@81 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@81 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 17)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@97 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@71 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@97) (= (type $generated@@226) ($generated@@96 $generated@@97 $generated@@98))) (= (type $generated@@227) ($generated@@70 $generated@@4))) (= (type $generated@@229) $generated@@97)) (= (type $generated@@230) ($generated@@70 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and (and (= (type $generated@@233) $generated@@68) (= (type $generated@@234) ($generated@@96 $generated@@97 $generated@@98))) ($generated@@232 $generated@@234)) ($generated@@94 $generated@@169 ($generated@@82 $generated@@233) $generated@@234))
 :pattern ( ($generated@@94 $generated@@169 ($generated@@82 $generated@@233) $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= (type ($generated@@235 $generated@@237 $generated@@238)) $generated@@79)
 :pattern ( ($generated@@235 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (and (and (= (type $generated@@239) $generated@@68) (= (type $generated@@240) $generated@@68)) (= (type $generated@@241) $generated@@163)) (= (type $generated@@242) $generated@@163)) (= ($generated@@81 ($generated@@235 $generated@@241 $generated@@242) ($generated@@154 $generated@@239 $generated@@240))  (and ($generated@@236 $generated@@241 $generated@@239) ($generated@@236 $generated@@242 $generated@@240))))
 :pattern ( ($generated@@81 ($generated@@235 $generated@@241 $generated@@242) ($generated@@154 $generated@@239 $generated@@240)))
)))
(assert (forall (($generated@@243 T@U) ) (!  (=> (= (type $generated@@243) $generated@@68) ($generated@@81 $generated@@169 ($generated@@82 $generated@@243)))
 :pattern ( ($generated@@81 $generated@@169 ($generated@@82 $generated@@243)))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (= (type $generated@@244) $generated@@79) (= (type $generated@@245) $generated@@79)) (= ($generated@@160 $generated@@244 $generated@@245) (= $generated@@244 $generated@@245)))
 :pattern ( ($generated@@160 $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@79) (= (type $generated@@248) $generated@@79)) (= ($generated@@246 $generated@@247 $generated@@248) (= $generated@@247 $generated@@248)))
 :pattern ( ($generated@@246 $generated@@247 $generated@@248))
)))
(assert  (and (forall (($generated@@252 T@U) ) (! (= (type ($generated@@250 $generated@@252)) $generated@@163)
 :pattern ( ($generated@@250 $generated@@252))
)) (forall (($generated@@253 T@U) ) (! (= (type ($generated@@251 $generated@@253)) $generated@@79)
 :pattern ( ($generated@@251 $generated@@253))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (= (type $generated@@254) $generated@@79) (= (type $generated@@255) $generated@@79)) (and ($generated@@249 $generated@@254) ($generated@@249 $generated@@255))) (= ($generated@@246 $generated@@254 $generated@@255)  (and (= ($generated@@250 $generated@@254) ($generated@@250 $generated@@255)) ($generated@@246 ($generated@@251 $generated@@254) ($generated@@251 $generated@@255)))))
 :pattern ( ($generated@@246 $generated@@254 $generated@@255) ($generated@@249 $generated@@254))
 :pattern ( ($generated@@246 $generated@@254 $generated@@255) ($generated@@249 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@68)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@96 $generated@@163 $generated@@4)) (= (type $generated@@259) $generated@@68)) (= ($generated@@81 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@163) ($generated@@0 ($generated@@101 $generated@@258 $generated@@260))) ($generated@@236 $generated@@260 $generated@@259))
 :pattern ( ($generated@@101 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@81 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@68)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@96 $generated@@163 $generated@@4)) (= (type $generated@@264) $generated@@68)) (= ($generated@@81 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@163) ($generated@@0 ($generated@@101 $generated@@263 $generated@@265))) ($generated@@236 $generated@@265 $generated@@264))
 :pattern ( ($generated@@101 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@81 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (! (let (($generated@@268 (type $generated@@267)))
(= (type ($generated@@266 $generated@@267)) $generated@@268))
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ) (! (= ($generated@@266 $generated@@269) $generated@@269)
 :pattern ( ($generated@@266 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (and (= (type $generated@@271) $generated@@79) (= (type $generated@@272) $generated@@79)) (and ($generated@@270 $generated@@271) ($generated@@270 $generated@@272))) (= ($generated@@246 $generated@@271 $generated@@272) true))
 :pattern ( ($generated@@246 $generated@@271 $generated@@272) ($generated@@270 $generated@@271))
 :pattern ( ($generated@@246 $generated@@271 $generated@@272) ($generated@@270 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (! (= (type ($generated@@273 $generated@@274 $generated@@275)) $generated@@79)
 :pattern ( ($generated@@273 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (= (type $generated@@276) $generated@@68) (= (type $generated@@277) $generated@@163)) (= (type $generated@@278) $generated@@79)) (= ($generated@@81 ($generated@@273 $generated@@277 $generated@@278) ($generated@@82 $generated@@276))  (and ($generated@@236 $generated@@277 $generated@@276) ($generated@@81 $generated@@278 ($generated@@82 $generated@@276)))))
 :pattern ( ($generated@@81 ($generated@@273 $generated@@277 $generated@@278) ($generated@@82 $generated@@276)))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@280) $generated@@68) (= (type $generated@@281) $generated@@68)) (= (type $generated@@282) $generated@@163)) (= (type $generated@@283) $generated@@163)) (= (type $generated@@284) ($generated@@96 $generated@@97 $generated@@98))) ($generated@@232 $generated@@284)) (= ($generated@@94 ($generated@@235 $generated@@282 $generated@@283) ($generated@@154 $generated@@280 $generated@@281) $generated@@284)  (and ($generated@@279 $generated@@282 $generated@@280 $generated@@284) ($generated@@279 $generated@@283 $generated@@281 $generated@@284))))
 :pattern ( ($generated@@94 ($generated@@235 $generated@@282 $generated@@283) ($generated@@154 $generated@@280 $generated@@281) $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@79) (= ($generated@@153 $generated@@285) (= ($generated@@168 $generated@@285) $generated@@61)))
 :pattern ( ($generated@@153 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= (type $generated@@286) $generated@@79) (= ($generated@@270 $generated@@286) (= ($generated@@168 $generated@@286) $generated@@63)))
 :pattern ( ($generated@@270 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (!  (=> (= (type $generated@@287) $generated@@79) (= ($generated@@249 $generated@@287) (= ($generated@@168 $generated@@287) $generated@@65)))
 :pattern ( ($generated@@249 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (= (type ($generated@@288 $generated@@289)) $generated@@78)
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@290) $generated@@68) (= (type $generated@@291) $generated@@78)) (= (type $generated@@292) $generated@@79)) (= (type $generated@@293) $generated@@79)) (or ($generated@@80 $generated@@290 ($generated@@266 $generated@@292) ($generated@@266 $generated@@293)) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@292 ($generated@@82 $generated@@290)) ($generated@@81 $generated@@293 ($generated@@82 $generated@@290)))))) (and (=> (not ($generated@@0 ($generated@@266 ($generated@@11 ($generated@@270 ($generated@@266 $generated@@292)))))) (let (($generated@@294 ($generated@@266 ($generated@@251 ($generated@@266 $generated@@292)))))
($generated@@80 $generated@@290 $generated@@294 ($generated@@266 $generated@@293)))) (= ($generated@@77 $generated@@290 ($generated@@288 $generated@@291) ($generated@@266 $generated@@292) ($generated@@266 $generated@@293)) (ite ($generated@@270 ($generated@@266 $generated@@292)) $generated@@293 (let (($generated@@295 ($generated@@266 ($generated@@251 ($generated@@266 $generated@@292)))))
(let (($generated@@296 ($generated@@266 ($generated@@250 ($generated@@266 $generated@@292)))))
($generated@@266 ($generated@@273 $generated@@296 ($generated@@266 ($generated@@77 $generated@@290 ($generated@@288 $generated@@291) $generated@@295 ($generated@@266 $generated@@293)))))))))))
 :weight 3
 :pattern ( ($generated@@77 $generated@@290 ($generated@@288 $generated@@291) ($generated@@266 $generated@@292) ($generated@@266 $generated@@293)))
))))
(assert (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@79) ($generated@@153 $generated@@297)) (exists (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (and (and (= (type $generated@@298) $generated@@163) (= (type $generated@@299) $generated@@163)) (= $generated@@297 ($generated@@235 $generated@@298 $generated@@299)))
 :no-pattern (type $generated@@298)
 :no-pattern (type $generated@@299)
 :no-pattern ($generated $generated@@298)
 :no-pattern ($generated@@0 $generated@@298)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
)))
 :pattern ( ($generated@@153 $generated@@297))
)))
(assert (forall (($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@79) ($generated@@249 $generated@@300)) (exists (($generated@@301 T@U) ($generated@@302 T@U) ) (!  (and (and (= (type $generated@@301) $generated@@163) (= (type $generated@@302) $generated@@79)) (= $generated@@300 ($generated@@273 $generated@@301 $generated@@302)))
 :no-pattern (type $generated@@301)
 :no-pattern (type $generated@@302)
 :no-pattern ($generated $generated@@301)
 :no-pattern ($generated@@0 $generated@@301)
 :no-pattern ($generated $generated@@302)
 :no-pattern ($generated@@0 $generated@@302)
)))
 :pattern ( ($generated@@249 $generated@@300))
)))
(assert  (and (and (forall (($generated@@307 T@T) ) (= ($generated@@1 ($generated@@305 $generated@@307)) 18)) (forall (($generated@@308 T@T) ) (! (= ($generated@@306 ($generated@@305 $generated@@308)) $generated@@308)
 :pattern ( ($generated@@305 $generated@@308))
))) (forall (($generated@@309 T@T) ) (! (= (type ($generated@@303 $generated@@309)) ($generated@@305 $generated@@309))
 :pattern ( ($generated@@303 $generated@@309))
))))
(assert (forall (($generated@@310 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@310)) 0)
 :pattern ( ($generated@@303 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@79) ($generated@@270 $generated@@311)) (= $generated@@311 $generated@@169))
 :pattern ( ($generated@@270 $generated@@311))
)))
(assert  (and (forall (($generated@@314 T@U) ) (! (= (type ($generated@@312 $generated@@314)) $generated@@78)
 :pattern ( ($generated@@312 $generated@@314))
)) (= (type $generated@@313) $generated@@78)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ($generated@@318 T@U) ) (!  (=> (and (and (and (= (type $generated@@315) $generated@@68) (= (type $generated@@316) $generated@@78)) (= (type $generated@@317) $generated@@79)) (= (type $generated@@318) $generated@@79)) (= ($generated@@77 $generated@@315 $generated@@316 $generated@@317 $generated@@318) ($generated@@77 $generated@@315 $generated@@313 $generated@@317 $generated@@318)))
 :pattern ( ($generated@@77 $generated@@315 ($generated@@312 $generated@@316) $generated@@317 $generated@@318))
)))
(assert (forall (($generated@@320 T@U) ) (! (= (type ($generated@@319 $generated@@320)) $generated@@163)
 :pattern ( ($generated@@319 $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and (= (type $generated@@322) $generated@@68) (= (type $generated@@323) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@279 ($generated@@319 $generated@@321) $generated@@322 $generated@@323) ($generated@@94 $generated@@321 $generated@@322 $generated@@323)))
 :pattern ( ($generated@@279 ($generated@@319 $generated@@321) $generated@@322 $generated@@323))
)))
(assert (forall (($generated@@326 T@T) ) (! (= (type ($generated@@325 $generated@@326)) ($generated@@96 $generated@@326 $generated@@2))
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@327 T@U) ) (! (let (($generated@@328 ($generated@@99 (type $generated@@327))))
 (=> (= (type $generated@@327) ($generated@@96 $generated@@328 $generated@@2)) (and (= (= ($generated@@324 $generated@@327) 0) (= $generated@@327 ($generated@@325 $generated@@328))) (=> (not (= ($generated@@324 $generated@@327) 0)) (exists (($generated@@329 T@U) ) (!  (and (= (type $generated@@329) $generated@@328) (< 0 ($generated ($generated@@101 $generated@@327 $generated@@329))))
 :no-pattern (type $generated@@329)
 :no-pattern ($generated $generated@@329)
 :no-pattern ($generated@@0 $generated@@329)
))))))
 :pattern ( ($generated@@324 $generated@@327))
)))
(assert (forall (($generated@@331 T@U) ) (! (= (type ($generated@@330 $generated@@331)) $generated@@73)
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ) (!  (=> (= (type $generated@@332) $generated@@68) (and (= ($generated@@92 ($generated@@82 $generated@@332)) $generated@@64) (= ($generated@@330 ($generated@@82 $generated@@332)) $generated@@67)))
 :pattern ( ($generated@@82 $generated@@332))
)))
(assert  (and (and (and (and (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (= ($generated@@1 ($generated@@335 $generated@@338 $generated@@339)) 19)) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= ($generated@@336 ($generated@@335 $generated@@340 $generated@@341)) $generated@@340)
 :pattern ( ($generated@@335 $generated@@340 $generated@@341))
))) (forall (($generated@@342 T@T) ($generated@@343 T@T) ) (! (= ($generated@@337 ($generated@@335 $generated@@342 $generated@@343)) $generated@@343)
 :pattern ( ($generated@@335 $generated@@342 $generated@@343))
))) (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@336 (type $generated@@344))))
(= (type ($generated@@333 $generated@@344)) ($generated@@96 $generated@@345 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@344))
))) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= (type ($generated@@334 $generated@@346 $generated@@347)) ($generated@@335 $generated@@346 $generated@@347))
 :pattern ( ($generated@@334 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@T) ) (! (let (($generated@@350 (type $generated@@348)))
 (not ($generated@@0 ($generated@@101 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348))))
 :pattern ( (let (($generated@@350 (type $generated@@348)))
($generated@@101 ($generated@@333 ($generated@@334 $generated@@350 $generated@@349)) $generated@@348)))
)))
(assert  (and (and (and (and (forall (($generated@@356 T@T) ($generated@@357 T@T) ) (= ($generated@@1 ($generated@@353 $generated@@356 $generated@@357)) 20)) (forall (($generated@@358 T@T) ($generated@@359 T@T) ) (! (= ($generated@@354 ($generated@@353 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@353 $generated@@358 $generated@@359))
))) (forall (($generated@@360 T@T) ($generated@@361 T@T) ) (! (= ($generated@@355 ($generated@@353 $generated@@360 $generated@@361)) $generated@@361)
 :pattern ( ($generated@@353 $generated@@360 $generated@@361))
))) (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@354 (type $generated@@362))))
(= (type ($generated@@351 $generated@@362)) ($generated@@96 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@351 $generated@@362))
))) (forall (($generated@@364 T@T) ($generated@@365 T@T) ) (! (= (type ($generated@@352 $generated@@364 $generated@@365)) ($generated@@353 $generated@@364 $generated@@365))
 :pattern ( ($generated@@352 $generated@@364 $generated@@365))
))))
(assert (forall (($generated@@366 T@U) ($generated@@367 T@T) ) (! (let (($generated@@368 (type $generated@@366)))
 (not ($generated@@0 ($generated@@101 ($generated@@351 ($generated@@352 $generated@@368 $generated@@367)) $generated@@366))))
 :pattern ( (let (($generated@@368 (type $generated@@366)))
($generated@@101 ($generated@@351 ($generated@@352 $generated@@368 $generated@@367)) $generated@@366)))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@99 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@96 $generated@@370 $generated@@2)) (= ($generated@@172 $generated@@369) (forall (($generated@@371 T@U) ) (!  (=> (= (type $generated@@371) $generated@@370) (and (<= 0 ($generated ($generated@@101 $generated@@369 $generated@@371))) (<= ($generated ($generated@@101 $generated@@369 $generated@@371)) ($generated@@324 $generated@@369))))
 :pattern ( ($generated@@101 $generated@@369 $generated@@371))
)))))
 :pattern ( ($generated@@172 $generated@@369))
)))
(assert (forall (($generated@@372 T@U) ) (! (let (($generated@@373 ($generated@@337 (type $generated@@372))))
(let (($generated@@374 ($generated@@336 (type $generated@@372))))
 (=> (= (type $generated@@372) ($generated@@335 $generated@@374 $generated@@373)) (or (= $generated@@372 ($generated@@334 $generated@@374 $generated@@373)) (exists (($generated@@375 T@U) ) (!  (and (= (type $generated@@375) $generated@@374) ($generated@@0 ($generated@@101 ($generated@@333 $generated@@372) $generated@@375)))
 :no-pattern (type $generated@@375)
 :no-pattern ($generated $generated@@375)
 :no-pattern ($generated@@0 $generated@@375)
))))))
 :pattern ( ($generated@@333 $generated@@372))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@337 (type $generated@@377))))
(= (type ($generated@@376 $generated@@377)) ($generated@@96 $generated@@378 $generated@@4)))
 :pattern ( ($generated@@376 $generated@@377))
)))
(assert (forall (($generated@@379 T@U) ) (! (let (($generated@@380 ($generated@@337 (type $generated@@379))))
(let (($generated@@381 ($generated@@336 (type $generated@@379))))
 (=> (= (type $generated@@379) ($generated@@335 $generated@@381 $generated@@380)) (or (= $generated@@379 ($generated@@334 $generated@@381 $generated@@380)) (exists (($generated@@382 T@U) ) (!  (and (= (type $generated@@382) $generated@@380) ($generated@@0 ($generated@@101 ($generated@@376 $generated@@379) $generated@@382)))
 :no-pattern (type $generated@@382)
 :no-pattern ($generated $generated@@382)
 :no-pattern ($generated@@0 $generated@@382)
))))))
 :pattern ( ($generated@@376 $generated@@379))
)))
(assert (forall (($generated@@383 T@U) ) (! (let (($generated@@384 ($generated@@355 (type $generated@@383))))
(let (($generated@@385 ($generated@@354 (type $generated@@383))))
 (=> (= (type $generated@@383) ($generated@@353 $generated@@385 $generated@@384)) (or (= $generated@@383 ($generated@@352 $generated@@385 $generated@@384)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@385) ($generated@@0 ($generated@@101 ($generated@@351 $generated@@383) $generated@@386)))
 :no-pattern (type $generated@@386)
 :no-pattern ($generated $generated@@386)
 :no-pattern ($generated@@0 $generated@@386)
))))))
 :pattern ( ($generated@@351 $generated@@383))
)))
(assert (forall (($generated@@388 T@U) ) (! (let (($generated@@389 ($generated@@355 (type $generated@@388))))
(= (type ($generated@@387 $generated@@388)) ($generated@@96 $generated@@389 $generated@@4)))
 :pattern ( ($generated@@387 $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 ($generated@@355 (type $generated@@390))))
(let (($generated@@392 ($generated@@354 (type $generated@@390))))
 (=> (= (type $generated@@390) ($generated@@353 $generated@@392 $generated@@391)) (or (= $generated@@390 ($generated@@352 $generated@@392 $generated@@391)) (exists (($generated@@393 T@U) ) (!  (and (= (type $generated@@393) $generated@@391) ($generated@@0 ($generated@@101 ($generated@@387 $generated@@390) $generated@@393)))
 :no-pattern (type $generated@@393)
 :no-pattern ($generated $generated@@393)
 :no-pattern ($generated@@0 $generated@@393)
))))))
 :pattern ( ($generated@@387 $generated@@390))
)))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@96 $generated@@163 $generated@@2)) (= (type $generated@@395) $generated@@68)) (= ($generated@@81 $generated@@394 ($generated@@171 $generated@@395)) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@163) (< 0 ($generated ($generated@@101 $generated@@394 $generated@@396)))) ($generated@@236 $generated@@396 $generated@@395))
 :pattern ( ($generated@@101 $generated@@394 $generated@@396))
))))
 :pattern ( ($generated@@81 $generated@@394 ($generated@@171 $generated@@395)))
)))
(assert (forall (($generated@@398 T@U) ) (!  (=> (and (= (type $generated@@398) $generated@@79) ($generated@@397 $generated@@398)) (or ($generated@@270 $generated@@398) ($generated@@249 $generated@@398)))
 :pattern ( ($generated@@397 $generated@@398))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@399) $generated@@68) (= (type $generated@@400) $generated@@78)) (= (type $generated@@401) $generated@@79)) (= (type $generated@@402) $generated@@79)) (or ($generated@@80 $generated@@399 $generated@@401 $generated@@402) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@401 ($generated@@82 $generated@@399)) ($generated@@81 $generated@@402 ($generated@@82 $generated@@399)))))) (and (=> (not ($generated@@270 $generated@@401)) (let (($generated@@403 ($generated@@251 $generated@@401)))
($generated@@80 $generated@@399 $generated@@403 $generated@@402))) (= ($generated@@77 $generated@@399 ($generated@@288 $generated@@400) $generated@@401 $generated@@402) (ite ($generated@@270 $generated@@401) $generated@@402 (let (($generated@@404 ($generated@@251 $generated@@401)))
(let (($generated@@405 ($generated@@250 $generated@@401)))
($generated@@273 $generated@@405 ($generated@@77 $generated@@399 $generated@@400 $generated@@404 $generated@@402))))))))
 :pattern ( ($generated@@77 $generated@@399 ($generated@@288 $generated@@400) $generated@@401 $generated@@402))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ($generated@@408 T@U) ) (!  (=> (and (and (= (type $generated@@406) ($generated@@96 $generated@@163 $generated@@4)) (= (type $generated@@407) $generated@@68)) (= (type $generated@@408) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@406 ($generated@@256 $generated@@407) $generated@@408) (forall (($generated@@409 T@U) ) (!  (=> (and (= (type $generated@@409) $generated@@163) ($generated@@0 ($generated@@101 $generated@@406 $generated@@409))) ($generated@@279 $generated@@409 $generated@@407 $generated@@408))
 :pattern ( ($generated@@101 $generated@@406 $generated@@409))
))))
 :pattern ( ($generated@@94 $generated@@406 ($generated@@256 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@410 T@U) ($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (and (= (type $generated@@410) ($generated@@96 $generated@@163 $generated@@4)) (= (type $generated@@411) $generated@@68)) (= (type $generated@@412) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@410 ($generated@@261 $generated@@411) $generated@@412) (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@163) ($generated@@0 ($generated@@101 $generated@@410 $generated@@413))) ($generated@@279 $generated@@413 $generated@@411 $generated@@412))
 :pattern ( ($generated@@101 $generated@@410 $generated@@413))
))))
 :pattern ( ($generated@@94 $generated@@410 ($generated@@261 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(= ($generated ($generated@@101 ($generated@@325 $generated@@415) $generated@@414)) 0))
 :pattern ( (let (($generated@@415 (type $generated@@414)))
($generated@@101 ($generated@@325 $generated@@415) $generated@@414)))
)))
(assert  (and (and (forall (($generated@@419 T@U) ) (! (= (type ($generated@@416 $generated@@419)) ($generated@@96 $generated@@163 $generated@@4))
 :pattern ( ($generated@@416 $generated@@419))
)) (forall (($generated@@420 T@T) ($generated@@421 T@U) ) (! (= (type ($generated@@417 $generated@@420 $generated@@421)) $generated@@420)
 :pattern ( ($generated@@417 $generated@@420 $generated@@421))
))) (forall (($generated@@422 T@U) ) (! (let (($generated@@423 ($generated@@337 (type $generated@@422))))
(let (($generated@@424 ($generated@@336 (type $generated@@422))))
(= (type ($generated@@418 $generated@@422)) ($generated@@96 $generated@@424 $generated@@423))))
 :pattern ( ($generated@@418 $generated@@422))
))))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (= (type $generated@@425) ($generated@@335 $generated@@163 $generated@@163)) (= (type $generated@@426) $generated@@163)) (= ($generated@@0 ($generated@@101 ($generated@@416 $generated@@425) $generated@@426))  (and ($generated@@0 ($generated@@101 ($generated@@333 $generated@@425) ($generated@@161 ($generated@@417 $generated@@79 $generated@@426)))) (= ($generated@@101 ($generated@@418 $generated@@425) ($generated@@161 ($generated@@417 $generated@@79 $generated@@426))) ($generated@@162 ($generated@@417 $generated@@79 $generated@@426))))))
 :pattern ( ($generated@@101 ($generated@@416 $generated@@425) $generated@@426))
)))
(assert  (and (forall (($generated@@429 T@U) ) (! (= (type ($generated@@427 $generated@@429)) ($generated@@96 $generated@@163 $generated@@4))
 :pattern ( ($generated@@427 $generated@@429))
)) (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@355 (type $generated@@430))))
(let (($generated@@432 ($generated@@354 (type $generated@@430))))
(= (type ($generated@@428 $generated@@430)) ($generated@@96 $generated@@432 $generated@@431))))
 :pattern ( ($generated@@428 $generated@@430))
))))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (!  (=> (and (= (type $generated@@433) ($generated@@353 $generated@@163 $generated@@163)) (= (type $generated@@434) $generated@@163)) (= ($generated@@0 ($generated@@101 ($generated@@427 $generated@@433) $generated@@434))  (and ($generated@@0 ($generated@@101 ($generated@@351 $generated@@433) ($generated@@161 ($generated@@417 $generated@@79 $generated@@434)))) (= ($generated@@101 ($generated@@428 $generated@@433) ($generated@@161 ($generated@@417 $generated@@79 $generated@@434))) ($generated@@162 ($generated@@417 $generated@@79 $generated@@434))))))
 :pattern ( ($generated@@101 ($generated@@427 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (let (($generated@@437 (type $generated@@436)))
(let (($generated@@438 ($generated@@336 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@335 $generated@@438 $generated@@437)) (= ($generated@@0 ($generated@@101 ($generated@@376 $generated@@435) $generated@@436)) (exists (($generated@@439 T@U) ) (!  (and (= (type $generated@@439) $generated@@438) (and ($generated@@0 ($generated@@101 ($generated@@333 $generated@@435) $generated@@439)) (= $generated@@436 ($generated@@101 ($generated@@418 $generated@@435) $generated@@439))))
 :pattern ( ($generated@@101 ($generated@@333 $generated@@435) $generated@@439))
 :pattern ( ($generated@@101 ($generated@@418 $generated@@435) $generated@@439))
))))))
 :pattern ( ($generated@@101 ($generated@@376 $generated@@435) $generated@@436))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (! (let (($generated@@442 (type $generated@@441)))
(let (($generated@@443 ($generated@@354 (type $generated@@440))))
 (=> (= (type $generated@@440) ($generated@@353 $generated@@443 $generated@@442)) (= ($generated@@0 ($generated@@101 ($generated@@387 $generated@@440) $generated@@441)) (exists (($generated@@444 T@U) ) (!  (and (= (type $generated@@444) $generated@@443) (and ($generated@@0 ($generated@@101 ($generated@@351 $generated@@440) $generated@@444)) (= $generated@@441 ($generated@@101 ($generated@@428 $generated@@440) $generated@@444))))
 :pattern ( ($generated@@101 ($generated@@351 $generated@@440) $generated@@444))
 :pattern ( ($generated@@101 ($generated@@428 $generated@@440) $generated@@444))
))))))
 :pattern ( ($generated@@101 ($generated@@387 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (! (= (type ($generated@@445 $generated@@446 $generated@@447)) $generated@@68)
 :pattern ( ($generated@@445 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (and (and (= (type $generated@@448) ($generated@@335 $generated@@163 $generated@@163)) (= (type $generated@@449) $generated@@68)) (= (type $generated@@450) $generated@@68)) (= (type $generated@@451) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@448 ($generated@@445 $generated@@449 $generated@@450) $generated@@451) (forall (($generated@@452 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@163) ($generated@@0 ($generated@@101 ($generated@@333 $generated@@448) $generated@@452))) (and ($generated@@279 ($generated@@101 ($generated@@418 $generated@@448) $generated@@452) $generated@@450 $generated@@451) ($generated@@279 $generated@@452 $generated@@449 $generated@@451)))
 :pattern ( ($generated@@101 ($generated@@418 $generated@@448) $generated@@452))
 :pattern ( ($generated@@101 ($generated@@333 $generated@@448) $generated@@452))
))))
 :pattern ( ($generated@@94 $generated@@448 ($generated@@445 $generated@@449 $generated@@450) $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (! (= (type ($generated@@453 $generated@@454 $generated@@455)) $generated@@68)
 :pattern ( ($generated@@453 $generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (and (and (= (type $generated@@456) ($generated@@353 $generated@@163 $generated@@163)) (= (type $generated@@457) $generated@@68)) (= (type $generated@@458) $generated@@68)) (= (type $generated@@459) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@456 ($generated@@453 $generated@@457 $generated@@458) $generated@@459) (forall (($generated@@460 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@163) ($generated@@0 ($generated@@101 ($generated@@351 $generated@@456) $generated@@460))) (and ($generated@@279 ($generated@@101 ($generated@@428 $generated@@456) $generated@@460) $generated@@458 $generated@@459) ($generated@@279 $generated@@460 $generated@@457 $generated@@459)))
 :pattern ( ($generated@@101 ($generated@@428 $generated@@456) $generated@@460))
 :pattern ( ($generated@@101 ($generated@@351 $generated@@456) $generated@@460))
))))
 :pattern ( ($generated@@94 $generated@@456 ($generated@@453 $generated@@457 $generated@@458) $generated@@459))
)))
(assert (forall (($generated@@461 T@U) ($generated@@462 T@U) ) (!  (=> (and (and (= (type $generated@@461) $generated@@68) (= (type $generated@@462) $generated@@79)) ($generated@@81 $generated@@462 ($generated@@82 $generated@@461))) (or ($generated@@270 $generated@@462) ($generated@@249 $generated@@462)))
 :pattern ( ($generated@@249 $generated@@462) ($generated@@81 $generated@@462 ($generated@@82 $generated@@461)))
 :pattern ( ($generated@@270 $generated@@462) ($generated@@81 $generated@@462 ($generated@@82 $generated@@461)))
)))
(assert (forall (($generated@@464 T@T) ) (! (= (type ($generated@@463 $generated@@464)) ($generated@@96 $generated@@464 $generated@@4))
 :pattern ( ($generated@@463 $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ) (! (let (($generated@@466 ($generated@@355 (type $generated@@465))))
(let (($generated@@467 ($generated@@354 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@353 $generated@@467 $generated@@466)) (= (= $generated@@465 ($generated@@352 $generated@@467 $generated@@466)) (= ($generated@@351 $generated@@465) ($generated@@463 $generated@@467))))))
 :pattern ( ($generated@@351 $generated@@465))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@355 (type $generated@@468))))
(let (($generated@@470 ($generated@@354 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@353 $generated@@470 $generated@@469)) (= (= $generated@@468 ($generated@@352 $generated@@470 $generated@@469)) (= ($generated@@387 $generated@@468) ($generated@@463 $generated@@469))))))
 :pattern ( ($generated@@387 $generated@@468))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@355 (type $generated@@471))))
(let (($generated@@473 ($generated@@354 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@353 $generated@@473 $generated@@472)) (= (= $generated@@471 ($generated@@352 $generated@@473 $generated@@472)) (= ($generated@@427 $generated@@471) ($generated@@463 $generated@@163))))))
 :pattern ( ($generated@@427 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@337 (type $generated@@474))))
(let (($generated@@476 ($generated@@336 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@335 $generated@@476 $generated@@475)) (or (= $generated@@474 ($generated@@334 $generated@@476 $generated@@475)) (exists (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (and (and (= (type $generated@@477) $generated@@163) (= (type $generated@@478) $generated@@163)) ($generated@@0 ($generated@@101 ($generated@@416 $generated@@474) ($generated@@319 ($generated@@235 $generated@@477 $generated@@478)))))
 :no-pattern (type $generated@@477)
 :no-pattern (type $generated@@478)
 :no-pattern ($generated $generated@@477)
 :no-pattern ($generated@@0 $generated@@477)
 :no-pattern ($generated $generated@@478)
 :no-pattern ($generated@@0 $generated@@478)
))))))
 :pattern ( ($generated@@416 $generated@@474))
)))
(assert (forall (($generated@@479 T@U) ) (! (let (($generated@@480 ($generated@@355 (type $generated@@479))))
(let (($generated@@481 ($generated@@354 (type $generated@@479))))
 (=> (= (type $generated@@479) ($generated@@353 $generated@@481 $generated@@480)) (or (= $generated@@479 ($generated@@352 $generated@@481 $generated@@480)) (exists (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (and (and (= (type $generated@@482) $generated@@163) (= (type $generated@@483) $generated@@163)) ($generated@@0 ($generated@@101 ($generated@@427 $generated@@479) ($generated@@319 ($generated@@235 $generated@@482 $generated@@483)))))
 :no-pattern (type $generated@@482)
 :no-pattern (type $generated@@483)
 :no-pattern ($generated $generated@@482)
 :no-pattern ($generated@@0 $generated@@482)
 :no-pattern ($generated $generated@@483)
 :no-pattern ($generated@@0 $generated@@483)
))))))
 :pattern ( ($generated@@427 $generated@@479))
)))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@163) ($generated@@236 $generated@@484 $generated@@46)) (and (= ($generated@@319 ($generated@@417 $generated@@2 $generated@@484)) $generated@@484) ($generated@@81 ($generated@@417 $generated@@2 $generated@@484) $generated@@46)))
 :pattern ( ($generated@@236 $generated@@484 $generated@@46))
)))
(assert (forall (($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@163) ($generated@@236 $generated@@485 $generated@@47)) (and (= ($generated@@319 ($generated@@417 $generated@@3 $generated@@485)) $generated@@485) ($generated@@81 ($generated@@417 $generated@@3 $generated@@485) $generated@@47)))
 :pattern ( ($generated@@236 $generated@@485 $generated@@47))
)))
(assert (forall (($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@163) ($generated@@236 $generated@@486 $generated@@44)) (and (= ($generated@@319 ($generated@@417 $generated@@4 $generated@@486)) $generated@@486) ($generated@@81 ($generated@@417 $generated@@4 $generated@@486) $generated@@44)))
 :pattern ( ($generated@@236 $generated@@486 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@487) 21))
(assert (forall (($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@163) ($generated@@236 $generated@@488 $generated@@45)) (and (= ($generated@@319 ($generated@@417 $generated@@487 $generated@@488)) $generated@@488) ($generated@@81 ($generated@@417 $generated@@487 $generated@@488) $generated@@45)))
 :pattern ( ($generated@@236 $generated@@488 $generated@@45))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (= (type $generated@@490) $generated@@68) (= ($generated@@236 ($generated@@319 $generated@@489) $generated@@490) ($generated@@81 $generated@@489 $generated@@490)))
 :pattern ( ($generated@@236 ($generated@@319 $generated@@489) $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ) (! (let (($generated@@492 ($generated@@99 (type $generated@@491))))
 (=> (= (type $generated@@491) ($generated@@96 $generated@@492 $generated@@2)) (<= 0 ($generated@@324 $generated@@491))))
 :pattern ( ($generated@@324 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (let (($generated@@494 ($generated@@306 (type $generated@@493))))
 (=> (= (type $generated@@493) ($generated@@305 $generated@@494)) (<= 0 ($generated@@304 $generated@@493))))
 :pattern ( ($generated@@304 $generated@@493))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@68)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@68) (= (type $generated@@498) $generated@@68)) (= ($generated@@495 ($generated@@445 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@445 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@68)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@68) (= (type $generated@@502) $generated@@68)) (= ($generated@@499 ($generated@@445 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@445 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@68) (= (type $generated@@504) $generated@@68)) (= ($generated@@92 ($generated@@445 $generated@@503 $generated@@504)) $generated@@58))
 :pattern ( ($generated@@445 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (= (type ($generated@@505 $generated@@506)) $generated@@68)
 :pattern ( ($generated@@505 $generated@@506))
)))
(assert (forall (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (= (type $generated@@507) $generated@@68) (= (type $generated@@508) $generated@@68)) (= ($generated@@505 ($generated@@453 $generated@@507 $generated@@508)) $generated@@507))
 :pattern ( ($generated@@453 $generated@@507 $generated@@508))
)))
(assert (forall (($generated@@510 T@U) ) (! (= (type ($generated@@509 $generated@@510)) $generated@@68)
 :pattern ( ($generated@@509 $generated@@510))
)))
(assert (forall (($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (= (type $generated@@511) $generated@@68) (= (type $generated@@512) $generated@@68)) (= ($generated@@509 ($generated@@453 $generated@@511 $generated@@512)) $generated@@512))
 :pattern ( ($generated@@453 $generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@68) (= (type $generated@@514) $generated@@68)) (= ($generated@@92 ($generated@@453 $generated@@513 $generated@@514)) $generated@@59))
 :pattern ( ($generated@@453 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@163) (= (type $generated@@516) $generated@@163)) (= ($generated@@168 ($generated@@235 $generated@@515 $generated@@516)) $generated@@61))
 :pattern ( ($generated@@235 $generated@@515 $generated@@516))
)))
(assert (forall (($generated@@518 T@U) ) (! (= (type ($generated@@517 $generated@@518)) $generated@@68)
 :pattern ( ($generated@@517 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (= (type $generated@@519) $generated@@68) (= (type $generated@@520) $generated@@68)) (= ($generated@@517 ($generated@@154 $generated@@519 $generated@@520)) $generated@@519))
 :pattern ( ($generated@@154 $generated@@519 $generated@@520))
)))
(assert (forall (($generated@@522 T@U) ) (! (= (type ($generated@@521 $generated@@522)) $generated@@68)
 :pattern ( ($generated@@521 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (= (type $generated@@523) $generated@@68) (= (type $generated@@524) $generated@@68)) (= ($generated@@521 ($generated@@154 $generated@@523 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@154 $generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (= (type $generated@@525) $generated@@163) (= (type $generated@@526) $generated@@163)) (= ($generated@@161 ($generated@@235 $generated@@525 $generated@@526)) $generated@@525))
 :pattern ( ($generated@@235 $generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@163) (= (type $generated@@528) $generated@@163)) (= ($generated@@162 ($generated@@235 $generated@@527 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@235 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ) (!  (=> (and (= (type $generated@@529) $generated@@163) (= (type $generated@@530) $generated@@79)) (= ($generated@@168 ($generated@@273 $generated@@529 $generated@@530)) $generated@@65))
 :pattern ( ($generated@@273 $generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@163) (= (type $generated@@532) $generated@@79)) (= ($generated@@250 ($generated@@273 $generated@@531 $generated@@532)) $generated@@531))
 :pattern ( ($generated@@273 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@163) (= (type $generated@@534) $generated@@79)) (= ($generated@@251 ($generated@@273 $generated@@533 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@273 $generated@@533 $generated@@534))
)))
(assert  (and (forall (($generated@@537 T@U) ) (! (= (type ($generated@@535 $generated@@537)) $generated@@68)
 :pattern ( ($generated@@535 $generated@@537))
)) (forall (($generated@@538 T@U) ($generated@@539 Int) ) (! (let (($generated@@540 ($generated@@306 (type $generated@@538))))
(= (type ($generated@@536 $generated@@538 $generated@@539)) $generated@@540))
 :pattern ( ($generated@@536 $generated@@538 $generated@@539))
))))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@305 $generated@@163)) (= (type $generated@@542) $generated@@68)) (= (type $generated@@543) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@541 ($generated@@535 $generated@@542) $generated@@543) (forall (($generated@@544 Int) ) (!  (=> (and (<= 0 $generated@@544) (< $generated@@544 ($generated@@304 $generated@@541))) ($generated@@279 ($generated@@536 $generated@@541 $generated@@544) $generated@@542 $generated@@543))
 :pattern ( ($generated@@536 $generated@@541 $generated@@544))
))))
 :pattern ( ($generated@@94 $generated@@541 ($generated@@535 $generated@@542) $generated@@543))
)))
(assert (forall (($generated@@546 Int) ) (! (= ($generated@@545 ($generated@@95 $generated@@546)) $generated@@546)
 :pattern ( ($generated@@95 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@68)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ) (!  (=> (= (type $generated@@549) $generated@@68) (= ($generated@@547 ($generated@@256 $generated@@549)) $generated@@549))
 :pattern ( ($generated@@256 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ) (!  (=> (= (type $generated@@550) $generated@@68) (= ($generated@@92 ($generated@@256 $generated@@550)) $generated@@54))
 :pattern ( ($generated@@256 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@68)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ) (!  (=> (= (type $generated@@553) $generated@@68) (= ($generated@@551 ($generated@@261 $generated@@553)) $generated@@553))
 :pattern ( ($generated@@261 $generated@@553))
)))
(assert (forall (($generated@@554 T@U) ) (!  (=> (= (type $generated@@554) $generated@@68) (= ($generated@@92 ($generated@@261 $generated@@554)) $generated@@55))
 :pattern ( ($generated@@261 $generated@@554))
)))
(assert (forall (($generated@@556 T@U) ) (! (= (type ($generated@@555 $generated@@556)) $generated@@68)
 :pattern ( ($generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ) (!  (=> (= (type $generated@@557) $generated@@68) (= ($generated@@555 ($generated@@171 $generated@@557)) $generated@@557))
 :pattern ( ($generated@@171 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ) (!  (=> (= (type $generated@@558) $generated@@68) (= ($generated@@92 ($generated@@171 $generated@@558)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@558))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@68)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (= (type $generated@@561) $generated@@68) (= ($generated@@559 ($generated@@535 $generated@@561)) $generated@@561))
 :pattern ( ($generated@@535 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ) (!  (=> (= (type $generated@@562) $generated@@68) (= ($generated@@92 ($generated@@535 $generated@@562)) $generated@@57))
 :pattern ( ($generated@@535 $generated@@562))
)))
(assert (forall (($generated@@564 T@U) ) (! (= (type ($generated@@563 $generated@@564)) $generated@@68)
 :pattern ( ($generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@68) (= ($generated@@563 ($generated@@82 $generated@@565)) $generated@@565))
 :pattern ( ($generated@@82 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ) (! (let (($generated@@567 (type $generated@@566)))
(= ($generated@@417 $generated@@567 ($generated@@319 $generated@@566)) $generated@@566))
 :pattern ( ($generated@@319 $generated@@566))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@568) ($generated@@335 $generated@@163 $generated@@163)) (= (type $generated@@569) $generated@@68)) (= (type $generated@@570) $generated@@68)) (= ($generated@@81 $generated@@568 ($generated@@445 $generated@@569 $generated@@570)) (forall (($generated@@571 T@U) ) (!  (=> (and (= (type $generated@@571) $generated@@163) ($generated@@0 ($generated@@101 ($generated@@333 $generated@@568) $generated@@571))) (and ($generated@@236 ($generated@@101 ($generated@@418 $generated@@568) $generated@@571) $generated@@570) ($generated@@236 $generated@@571 $generated@@569)))
 :pattern ( ($generated@@101 ($generated@@418 $generated@@568) $generated@@571))
 :pattern ( ($generated@@101 ($generated@@333 $generated@@568) $generated@@571))
))))
 :pattern ( ($generated@@81 $generated@@568 ($generated@@445 $generated@@569 $generated@@570)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@572) ($generated@@353 $generated@@163 $generated@@163)) (= (type $generated@@573) $generated@@68)) (= (type $generated@@574) $generated@@68)) (= ($generated@@81 $generated@@572 ($generated@@453 $generated@@573 $generated@@574)) (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@163) ($generated@@0 ($generated@@101 ($generated@@351 $generated@@572) $generated@@575))) (and ($generated@@236 ($generated@@101 ($generated@@428 $generated@@572) $generated@@575) $generated@@574) ($generated@@236 $generated@@575 $generated@@573)))
 :pattern ( ($generated@@101 ($generated@@428 $generated@@572) $generated@@575))
 :pattern ( ($generated@@101 ($generated@@351 $generated@@572) $generated@@575))
))))
 :pattern ( ($generated@@81 $generated@@572 ($generated@@453 $generated@@573 $generated@@574)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@163) (= (type $generated@@579) $generated@@163)) (< ($generated@@576 $generated@@578) ($generated@@577 ($generated@@235 $generated@@578 $generated@@579))))
 :pattern ( ($generated@@235 $generated@@578 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) $generated@@163) (= (type $generated@@581) $generated@@163)) (< ($generated@@576 $generated@@581) ($generated@@577 ($generated@@235 $generated@@580 $generated@@581))))
 :pattern ( ($generated@@235 $generated@@580 $generated@@581))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@163) (= (type $generated@@583) $generated@@79)) (< ($generated@@576 $generated@@582) ($generated@@577 ($generated@@273 $generated@@582 $generated@@583))))
 :pattern ( ($generated@@273 $generated@@582 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) $generated@@163) (= (type $generated@@585) $generated@@79)) (< ($generated@@577 $generated@@585) ($generated@@577 ($generated@@273 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@273 $generated@@584 $generated@@585))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) $generated@@163) (= (type $generated@@587) $generated@@68)) (= (type $generated@@588) $generated@@68)) ($generated@@236 $generated@@586 ($generated@@445 $generated@@587 $generated@@588))) (and (= ($generated@@319 ($generated@@417 ($generated@@335 $generated@@163 $generated@@163) $generated@@586)) $generated@@586) ($generated@@81 ($generated@@417 ($generated@@335 $generated@@163 $generated@@163) $generated@@586) ($generated@@445 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@236 $generated@@586 ($generated@@445 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@163) (= (type $generated@@590) $generated@@68)) (= (type $generated@@591) $generated@@68)) ($generated@@236 $generated@@589 ($generated@@453 $generated@@590 $generated@@591))) (and (= ($generated@@319 ($generated@@417 ($generated@@353 $generated@@163 $generated@@163) $generated@@589)) $generated@@589) ($generated@@81 ($generated@@417 ($generated@@353 $generated@@163 $generated@@163) $generated@@589) ($generated@@453 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@236 $generated@@589 ($generated@@453 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@68) (= (type $generated@@593) $generated@@68)) (= (type $generated@@594) $generated@@163)) ($generated@@236 $generated@@594 ($generated@@154 $generated@@592 $generated@@593))) (and (= ($generated@@319 ($generated@@417 $generated@@79 $generated@@594)) $generated@@594) ($generated@@81 ($generated@@417 $generated@@79 $generated@@594) ($generated@@154 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@236 $generated@@594 ($generated@@154 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@79) (= (type $generated@@596) $generated@@68)) (= (type $generated@@597) ($generated@@96 $generated@@97 $generated@@98))) (and ($generated@@232 $generated@@597) (and ($generated@@249 $generated@@595) ($generated@@94 $generated@@595 ($generated@@82 $generated@@596) $generated@@597)))) ($generated@@279 ($generated@@250 $generated@@595) $generated@@596 $generated@@597))
 :pattern ( ($generated@@279 ($generated@@250 $generated@@595) $generated@@596 $generated@@597))
)))
(assert (forall (($generated@@598 T@U) ) (! (let (($generated@@599 (type $generated@@598)))
 (not ($generated@@0 ($generated@@101 ($generated@@463 $generated@@599) $generated@@598))))
 :pattern ( (let (($generated@@599 (type $generated@@598)))
($generated@@101 ($generated@@463 $generated@@599) $generated@@598)))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@600) $generated@@68) (= (type $generated@@601) $generated@@68)) (and (= ($generated@@92 ($generated@@154 $generated@@600 $generated@@601)) $generated@@62) (= ($generated@@330 ($generated@@154 $generated@@600 $generated@@601)) $generated@@66)))
 :pattern ( ($generated@@154 $generated@@600 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ) (!  (=> (= (type $generated@@602) $generated@@79) (= ($generated@@576 ($generated@@319 $generated@@602)) ($generated@@577 $generated@@602)))
 :pattern ( ($generated@@576 ($generated@@319 $generated@@602)))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (and (and (= (type $generated@@603) $generated@@68) (= (type $generated@@604) $generated@@78)) (= (type $generated@@605) $generated@@79)) (= (type $generated@@606) $generated@@79)) (= ($generated@@77 $generated@@603 ($generated@@288 $generated@@604) $generated@@605 $generated@@606) ($generated@@77 $generated@@603 $generated@@604 $generated@@605 $generated@@606)))
 :pattern ( ($generated@@77 $generated@@603 ($generated@@288 $generated@@604) $generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@163) ($generated@@236 $generated@@607 ($generated@@95 0))) (and (= ($generated@@319 ($generated@@417 $generated@@2 $generated@@607)) $generated@@607) ($generated@@81 ($generated@@417 ($generated@@96 $generated@@163 $generated@@4) $generated@@607) ($generated@@95 0))))
 :pattern ( ($generated@@236 $generated@@607 ($generated@@95 0)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (and (= (type $generated@@608) $generated@@163) (= (type $generated@@609) $generated@@68)) ($generated@@236 $generated@@608 ($generated@@256 $generated@@609))) (and (= ($generated@@319 ($generated@@417 ($generated@@96 $generated@@163 $generated@@4) $generated@@608)) $generated@@608) ($generated@@81 ($generated@@417 ($generated@@96 $generated@@163 $generated@@4) $generated@@608) ($generated@@256 $generated@@609))))
 :pattern ( ($generated@@236 $generated@@608 ($generated@@256 $generated@@609)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@163) (= (type $generated@@611) $generated@@68)) ($generated@@236 $generated@@610 ($generated@@261 $generated@@611))) (and (= ($generated@@319 ($generated@@417 ($generated@@96 $generated@@163 $generated@@4) $generated@@610)) $generated@@610) ($generated@@81 ($generated@@417 ($generated@@96 $generated@@163 $generated@@4) $generated@@610) ($generated@@261 $generated@@611))))
 :pattern ( ($generated@@236 $generated@@610 ($generated@@261 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@163) (= (type $generated@@613) $generated@@68)) ($generated@@236 $generated@@612 ($generated@@171 $generated@@613))) (and (= ($generated@@319 ($generated@@417 ($generated@@96 $generated@@163 $generated@@2) $generated@@612)) $generated@@612) ($generated@@81 ($generated@@417 ($generated@@96 $generated@@163 $generated@@2) $generated@@612) ($generated@@171 $generated@@613))))
 :pattern ( ($generated@@236 $generated@@612 ($generated@@171 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@163) (= (type $generated@@615) $generated@@68)) ($generated@@236 $generated@@614 ($generated@@535 $generated@@615))) (and (= ($generated@@319 ($generated@@417 ($generated@@305 $generated@@163) $generated@@614)) $generated@@614) ($generated@@81 ($generated@@417 ($generated@@305 $generated@@163) $generated@@614) ($generated@@535 $generated@@615))))
 :pattern ( ($generated@@236 $generated@@614 ($generated@@535 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@68) (= (type $generated@@617) $generated@@163)) ($generated@@236 $generated@@617 ($generated@@82 $generated@@616))) (and (= ($generated@@319 ($generated@@417 $generated@@79 $generated@@617)) $generated@@617) ($generated@@81 ($generated@@417 $generated@@79 $generated@@617) ($generated@@82 $generated@@616))))
 :pattern ( ($generated@@236 $generated@@617 ($generated@@82 $generated@@616)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) $generated@@79) (= (type $generated@@619) $generated@@68)) (= (type $generated@@620) ($generated@@96 $generated@@97 $generated@@98))) (and ($generated@@232 $generated@@620) (and ($generated@@249 $generated@@618) ($generated@@94 $generated@@618 ($generated@@82 $generated@@619) $generated@@620)))) ($generated@@94 ($generated@@251 $generated@@618) ($generated@@82 $generated@@619) $generated@@620))
 :pattern ( ($generated@@94 ($generated@@251 $generated@@618) ($generated@@82 $generated@@619) $generated@@620))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (= (type $generated@@621) ($generated@@96 $generated@@163 $generated@@2)) (= (type $generated@@622) $generated@@68)) (= (type $generated@@623) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@621 ($generated@@171 $generated@@622) $generated@@623) (forall (($generated@@624 T@U) ) (!  (=> (and (= (type $generated@@624) $generated@@163) (< 0 ($generated ($generated@@101 $generated@@621 $generated@@624)))) ($generated@@279 $generated@@624 $generated@@622 $generated@@623))
 :pattern ( ($generated@@101 $generated@@621 $generated@@624))
))))
 :pattern ( ($generated@@94 $generated@@621 ($generated@@171 $generated@@622) $generated@@623))
)))
(assert (= $generated@@169 ($generated@@266 $generated@@169)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@79) (= (type $generated@@626) $generated@@68)) (= (type $generated@@627) ($generated@@96 $generated@@97 $generated@@98))) (and ($generated@@232 $generated@@627) (and ($generated@@153 $generated@@625) (exists (($generated@@628 T@U) ) (!  (and (= (type $generated@@628) $generated@@68) ($generated@@94 $generated@@625 ($generated@@154 $generated@@626 $generated@@628) $generated@@627))
 :pattern ( ($generated@@94 $generated@@625 ($generated@@154 $generated@@626 $generated@@628) $generated@@627))
))))) ($generated@@279 ($generated@@161 $generated@@625) $generated@@626 $generated@@627))
 :pattern ( ($generated@@279 ($generated@@161 $generated@@625) $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@629 T@U) ($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (and (and (= (type $generated@@629) $generated@@79) (= (type $generated@@630) $generated@@68)) (= (type $generated@@631) ($generated@@96 $generated@@97 $generated@@98))) (and ($generated@@232 $generated@@631) (and ($generated@@153 $generated@@629) (exists (($generated@@632 T@U) ) (!  (and (= (type $generated@@632) $generated@@68) ($generated@@94 $generated@@629 ($generated@@154 $generated@@632 $generated@@630) $generated@@631))
 :pattern ( ($generated@@94 $generated@@629 ($generated@@154 $generated@@632 $generated@@630) $generated@@631))
))))) ($generated@@279 ($generated@@162 $generated@@629) $generated@@630 $generated@@631))
 :pattern ( ($generated@@279 ($generated@@162 $generated@@629) $generated@@630 $generated@@631))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ) (!  (=> (and (= (type $generated@@633) $generated@@163) (= (type $generated@@634) $generated@@163)) (= ($generated@@235 ($generated@@266 $generated@@633) ($generated@@266 $generated@@634)) ($generated@@266 ($generated@@235 $generated@@633 $generated@@634))))
 :pattern ( ($generated@@235 ($generated@@266 $generated@@633) ($generated@@266 $generated@@634)))
)))
(assert (forall (($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (= (type $generated@@635) $generated@@163) (= (type $generated@@636) $generated@@79)) (= ($generated@@273 ($generated@@266 $generated@@635) ($generated@@266 $generated@@636)) ($generated@@266 ($generated@@273 $generated@@635 $generated@@636))))
 :pattern ( ($generated@@273 ($generated@@266 $generated@@635) ($generated@@266 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ) (! (= ($generated@@319 ($generated@@266 $generated@@637)) ($generated@@266 ($generated@@319 $generated@@637)))
 :pattern ( ($generated@@319 ($generated@@266 $generated@@637)))
)))
(assert (forall (($generated@@638 T@U) ) (! (let (($generated@@639 ($generated@@306 (type $generated@@638))))
 (=> (and (= (type $generated@@638) ($generated@@305 $generated@@639)) (= ($generated@@304 $generated@@638) 0)) (= $generated@@638 ($generated@@303 $generated@@639))))
 :pattern ( ($generated@@304 $generated@@638))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ($generated@@642 T@U) ) (! (let (($generated@@643 (type $generated@@641)))
 (=> (and (and (= (type $generated@@640) ($generated@@96 $generated@@643 $generated@@2)) (= (type $generated@@642) $generated@@2)) (<= 0 ($generated $generated@@642))) (= ($generated@@324 ($generated@@102 $generated@@640 $generated@@641 $generated@@642)) (+ (- ($generated@@324 $generated@@640) ($generated ($generated@@101 $generated@@640 $generated@@641))) ($generated $generated@@642)))))
 :pattern ( ($generated@@324 ($generated@@102 $generated@@640 $generated@@641 $generated@@642)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (= (type $generated@@644) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@645) $generated@@2)) ($generated@@94 $generated@@645 $generated@@46 $generated@@644))
 :pattern ( ($generated@@94 $generated@@645 $generated@@46 $generated@@644))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (= (type $generated@@646) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@647) $generated@@3)) ($generated@@94 $generated@@647 $generated@@47 $generated@@646))
 :pattern ( ($generated@@94 $generated@@647 $generated@@47 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@649) $generated@@4)) ($generated@@94 $generated@@649 $generated@@44 $generated@@648))
 :pattern ( ($generated@@94 $generated@@649 $generated@@44 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@651) $generated@@487)) ($generated@@94 $generated@@651 $generated@@45 $generated@@650))
 :pattern ( ($generated@@94 $generated@@651 $generated@@45 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@653) $generated@@163)) ($generated@@94 $generated@@653 $generated@@48 $generated@@652))
 :pattern ( ($generated@@94 $generated@@653 $generated@@48 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@654) $generated@@68) (= (type $generated@@655) $generated@@163)) (= (type $generated@@656) $generated@@79)) (= (type $generated@@657) ($generated@@96 $generated@@97 $generated@@98))) ($generated@@232 $generated@@657)) (= ($generated@@94 ($generated@@273 $generated@@655 $generated@@656) ($generated@@82 $generated@@654) $generated@@657)  (and ($generated@@279 $generated@@655 $generated@@654 $generated@@657) ($generated@@94 $generated@@656 ($generated@@82 $generated@@654) $generated@@657))))
 :pattern ( ($generated@@94 ($generated@@273 $generated@@655 $generated@@656) ($generated@@82 $generated@@654) $generated@@657))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@305 $generated@@163)) (= (type $generated@@659) $generated@@68)) (= ($generated@@81 $generated@@658 ($generated@@535 $generated@@659)) (forall (($generated@@660 Int) ) (!  (=> (and (<= 0 $generated@@660) (< $generated@@660 ($generated@@304 $generated@@658))) ($generated@@236 ($generated@@536 $generated@@658 $generated@@660) $generated@@659))
 :pattern ( ($generated@@536 $generated@@658 $generated@@660))
))))
 :pattern ( ($generated@@81 $generated@@658 ($generated@@535 $generated@@659)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 Int) ) (!  (=> (= (type $generated@@662) ($generated@@305 $generated@@163)) (=> (and (<= 0 $generated@@663) (< $generated@@663 ($generated@@304 $generated@@662))) (< ($generated@@577 ($generated@@417 $generated@@79 ($generated@@536 $generated@@662 $generated@@663))) ($generated@@661 $generated@@662))))
 :pattern ( ($generated@@577 ($generated@@417 $generated@@79 ($generated@@536 $generated@@662 $generated@@663))))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@664) ($generated@@335 $generated@@163 $generated@@163)) (= (type $generated@@665) $generated@@68)) (= (type $generated@@666) $generated@@68)) ($generated@@81 $generated@@664 ($generated@@445 $generated@@665 $generated@@666))) (and (and ($generated@@81 ($generated@@333 $generated@@664) ($generated@@256 $generated@@665)) ($generated@@81 ($generated@@376 $generated@@664) ($generated@@256 $generated@@666))) ($generated@@81 ($generated@@416 $generated@@664) ($generated@@256 ($generated@@154 $generated@@665 $generated@@666)))))
 :pattern ( ($generated@@81 $generated@@664 ($generated@@445 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) ($generated@@353 $generated@@163 $generated@@163)) (= (type $generated@@668) $generated@@68)) (= (type $generated@@669) $generated@@68)) ($generated@@81 $generated@@667 ($generated@@453 $generated@@668 $generated@@669))) (and (and ($generated@@81 ($generated@@351 $generated@@667) ($generated@@261 $generated@@668)) ($generated@@81 ($generated@@387 $generated@@667) ($generated@@261 $generated@@669))) ($generated@@81 ($generated@@427 $generated@@667) ($generated@@261 ($generated@@154 $generated@@668 $generated@@669)))))
 :pattern ( ($generated@@81 $generated@@667 ($generated@@453 $generated@@668 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@2) ($generated@@81 $generated@@670 $generated@@46))
 :pattern ( ($generated@@81 $generated@@670 $generated@@46))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@3) ($generated@@81 $generated@@671 $generated@@47))
 :pattern ( ($generated@@81 $generated@@671 $generated@@47))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@4) ($generated@@81 $generated@@672 $generated@@44))
 :pattern ( ($generated@@81 $generated@@672 $generated@@44))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@487) ($generated@@81 $generated@@673 $generated@@45))
 :pattern ( ($generated@@81 $generated@@673 $generated@@45))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@163) ($generated@@81 $generated@@674 $generated@@48))
 :pattern ( ($generated@@81 $generated@@674 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () T@U)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 (T@U) Bool)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(assert  (and (and (and (and (and (and (and (= (type $generated@@675) ($generated@@178 $generated@@97 $generated@@4)) (= (type $generated@@676) $generated@@97)) (= (type $generated@@677) ($generated@@96 $generated@@97 $generated@@98))) (= (type $generated@@678) $generated@@79)) (= (type $generated@@679) $generated@@79)) (= (type $generated@@680) ($generated@@96 $generated@@97 $generated@@98))) (= (type $generated@@682) $generated@@68)) (= (type $generated@@683) $generated@@79)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@684  (=> (= $generated@@675 ($generated@@177 $generated@@676 $generated@@677 $generated@@60 false)) (=> (and ($generated@@397 $generated@@678) ($generated@@397 $generated@@679)) (=> (and (and (and ($generated@@232 $generated@@680) ($generated@@681 $generated@@680)) (= $generated@@677 $generated@@680)) (and (forall (($generated@@685 T@U) ($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (and (= (type $generated@@685) $generated@@79) (= (type $generated@@686) $generated@@79)) (= (type $generated@@687) $generated@@79)) (=> (and (and (and (and ($generated@@81 $generated@@685 ($generated@@82 $generated@@682)) ($generated@@81 $generated@@686 ($generated@@82 $generated@@682))) ($generated@@81 $generated@@687 ($generated@@82 $generated@@682))) ($generated@@0 ($generated@@266 ($generated@@11 true)))) (or (< ($generated@@577 $generated@@685) ($generated@@577 $generated@@683)) (and (= ($generated@@577 $generated@@685) ($generated@@577 $generated@@683)) (or (< ($generated@@577 $generated@@686) ($generated@@577 $generated@@678)) (and (= ($generated@@577 $generated@@686) ($generated@@577 $generated@@678)) (< ($generated@@577 $generated@@687) ($generated@@577 $generated@@679))))))) ($generated@@246 ($generated@@77 $generated@@682 ($generated@@288 $generated@@313) ($generated@@77 $generated@@682 ($generated@@288 $generated@@313) $generated@@685 $generated@@686) $generated@@687) ($generated@@77 $generated@@682 ($generated@@288 $generated@@313) $generated@@685 ($generated@@77 $generated@@682 ($generated@@288 $generated@@313) $generated@@686 $generated@@687)))))
 :no-pattern (type $generated@@685)
 :no-pattern (type $generated@@686)
 :no-pattern (type $generated@@687)
 :no-pattern ($generated $generated@@685)
 :no-pattern ($generated@@0 $generated@@685)
 :no-pattern ($generated $generated@@686)
 :no-pattern ($generated@@0 $generated@@686)
 :no-pattern ($generated $generated@@687)
 :no-pattern ($generated@@0 $generated@@687)
)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@246 ($generated@@77 $generated@@682 ($generated@@288 ($generated@@288 $generated@@313)) ($generated@@77 $generated@@682 ($generated@@288 ($generated@@288 $generated@@313)) $generated@@683 $generated@@678) $generated@@679) ($generated@@77 $generated@@682 ($generated@@288 ($generated@@288 $generated@@313)) $generated@@683 ($generated@@77 $generated@@682 ($generated@@288 ($generated@@288 $generated@@313)) $generated@@678 $generated@@679))))))))
(let (($generated@@688  (=> (and (and (and (and ($generated@@232 $generated@@677) ($generated@@681 $generated@@677)) (and ($generated@@81 $generated@@683 ($generated@@82 $generated@@682)) ($generated@@94 $generated@@683 ($generated@@82 $generated@@682) $generated@@677))) (and (and ($generated@@81 $generated@@678 ($generated@@82 $generated@@682)) ($generated@@94 $generated@@678 ($generated@@82 $generated@@682) $generated@@677)) ($generated@@397 $generated@@678))) (and (and (and ($generated@@81 $generated@@679 ($generated@@82 $generated@@682)) ($generated@@94 $generated@@679 ($generated@@82 $generated@@682) $generated@@677)) ($generated@@397 $generated@@679)) (and (= 2 $generated@@76) (= (ControlFlow 0 3) 2)))) $generated@@684)))
$generated@@688)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) Bool)
(declare-fun $generated@@95 (Int) T@U)
(declare-fun $generated@@96 (T@T T@T) T@T)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 (T@T) T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U) T@U)
(declare-fun $generated@@104 (T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T) T@T)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@181 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@232 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@233 (T@U) T@U)
(declare-fun $generated@@234 (T@U) T@U)
(declare-fun $generated@@235 (T@U T@U T@U) Bool)
(declare-fun $generated@@236 (T@U) Bool)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@238 (T@T T@U) T@U)
(declare-fun $generated@@239 (T@U) T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@263 (T@U T@U) T@U)
(declare-fun $generated@@264 (T@U T@U) Bool)
(declare-fun $generated@@274 (T@U T@U) Bool)
(declare-fun $generated@@277 (T@U) Bool)
(declare-fun $generated@@280 (T@U) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@293 (T@U T@U) T@U)
(declare-fun $generated@@299 (T@U T@U T@U) Bool)
(declare-fun $generated@@321 (T@T) T@U)
(declare-fun $generated@@322 (T@U) Int)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@340 (T@U) T@U)
(declare-fun $generated@@353 (T@U) Int)
(declare-fun $generated@@354 (T@T) T@U)
(declare-fun $generated@@359 (T@U) T@U)
(declare-fun $generated@@362 (T@U) T@U)
(declare-fun $generated@@363 (T@T T@T) T@U)
(declare-fun $generated@@364 (T@T T@T) T@T)
(declare-fun $generated@@365 (T@T) T@T)
(declare-fun $generated@@366 (T@T) T@T)
(declare-fun $generated@@380 (T@U) T@U)
(declare-fun $generated@@381 (T@T T@T) T@U)
(declare-fun $generated@@382 (T@T T@T) T@T)
(declare-fun $generated@@383 (T@T) T@T)
(declare-fun $generated@@384 (T@T) T@T)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@420 (T@U) T@U)
(declare-fun $generated@@430 (T@U) Bool)
(declare-fun $generated@@449 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@457 (T@U) T@U)
(declare-fun $generated@@458 (T@U) T@U)
(declare-fun $generated@@475 (T@U T@U) T@U)
(declare-fun $generated@@483 (T@U T@U) T@U)
(declare-fun $generated@@493 (T@T) T@U)
(declare-fun $generated@@517 () T@T)
(declare-fun $generated@@525 (T@U) T@U)
(declare-fun $generated@@529 (T@U) T@U)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@539 (T@U) T@U)
(declare-fun $generated@@547 (T@U) T@U)
(declare-fun $generated@@551 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@566 (T@U Int) T@U)
(declare-fun $generated@@575 (T@U) Int)
(declare-fun $generated@@577 (T@U) T@U)
(declare-fun $generated@@581 (T@U) T@U)
(declare-fun $generated@@585 (T@U) T@U)
(declare-fun $generated@@589 (T@U) T@U)
(declare-fun $generated@@593 (T@U) T@U)
(declare-fun $generated@@606 (T@U) Int)
(declare-fun $generated@@607 (T@U) Int)
(declare-fun $generated@@691 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@68) 6) (= (type $generated@@44) $generated@@68)) (= (type $generated@@45) $generated@@68)) (= (type $generated@@46) $generated@@68)) (= (type $generated@@47) $generated@@68)) (= (type $generated@@48) $generated@@68)) (= ($generated@@1 $generated@@69) 7)) (= (type $generated@@49) $generated@@69)) (= (type $generated@@50) $generated@@69)) (= (type $generated@@51) $generated@@69)) (= (type $generated@@52) $generated@@69)) (= (type $generated@@53) $generated@@69)) (= (type $generated@@54) $generated@@69)) (= (type $generated@@55) $generated@@69)) (= (type $generated@@56) $generated@@69)) (= (type $generated@@57) $generated@@69)) (= (type $generated@@58) $generated@@69)) (= (type $generated@@59) $generated@@69)) (forall (($generated@@74 T@T) ) (= ($generated@@1 ($generated@@70 $generated@@74)) 8))) (forall (($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@70 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@70 $generated@@75))
))) (= (type $generated@@60) ($generated@@70 $generated@@4))) (= ($generated@@1 $generated@@72) 9)) (= (type $generated@@61) $generated@@72)) (= (type $generated@@62) $generated@@69)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@69)) (= (type $generated@@65) $generated@@72)) (= ($generated@@1 $generated@@73) 10)) (= (type $generated@@66) $generated@@73)) (= (type $generated@@67) $generated@@73)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67)
)
(assert  (and (and (and (= ($generated@@1 $generated@@78) 11) (= ($generated@@1 $generated@@79) 12)) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= (type ($generated@@77 $generated@@83 $generated@@84 $generated@@85 $generated@@86)) $generated@@79)
 :pattern ( ($generated@@77 $generated@@83 $generated@@84 $generated@@85 $generated@@86))
))) (forall (($generated@@87 T@U) ) (! (= (type ($generated@@82 $generated@@87)) $generated@@68)
 :pattern ( ($generated@@82 $generated@@87))
))))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@88) $generated@@68) (= (type $generated@@89) $generated@@78)) (= (type $generated@@90) $generated@@79)) (= (type $generated@@91) $generated@@79)) (or ($generated@@80 $generated@@88 $generated@@90 $generated@@91) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@90 ($generated@@82 $generated@@88)) ($generated@@81 $generated@@91 ($generated@@82 $generated@@88)))))) ($generated@@81 ($generated@@77 $generated@@88 $generated@@89 $generated@@90 $generated@@91) ($generated@@82 $generated@@88)))
 :pattern ( ($generated@@77 $generated@@88 $generated@@89 $generated@@90 $generated@@91))
))))
(assert (forall (($generated@@93 T@U) ) (! (= (type ($generated@@92 $generated@@93)) $generated@@69)
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert (= ($generated@@92 $generated@@44) $generated@@49))
(assert (= ($generated@@92 $generated@@45) $generated@@50))
(assert (= ($generated@@92 $generated@@46) $generated@@51))
(assert (= ($generated@@92 $generated@@47) $generated@@52))
(assert (= ($generated@@92 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (= ($generated@@1 ($generated@@96 $generated@@105 $generated@@106)) 13)) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@99 ($generated@@96 $generated@@107 $generated@@108)) $generated@@107)
 :pattern ( ($generated@@96 $generated@@107 $generated@@108))
))) (forall (($generated@@109 T@T) ($generated@@110 T@T) ) (! (= ($generated@@100 ($generated@@96 $generated@@109 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@96 $generated@@109 $generated@@110))
))) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@100 (type $generated@@111))))
(= (type ($generated@@101 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@101 $generated@@111 $generated@@112))
))) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (let (($generated@@117 (type $generated@@116)))
(let (($generated@@118 (type $generated@@115)))
(= (type ($generated@@102 $generated@@114 $generated@@115 $generated@@116)) ($generated@@96 $generated@@118 $generated@@117))))
 :pattern ( ($generated@@102 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@100 (type $generated@@119))))
 (=> (= (type $generated@@121) $generated@@122) (= ($generated@@101 ($generated@@102 $generated@@119 $generated@@120 $generated@@121) $generated@@120) $generated@@121)))
 :weight 0
))) (and (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@125 $generated@@126) (= ($generated@@101 ($generated@@102 $generated@@124 $generated@@125 $generated@@123) $generated@@126) ($generated@@101 $generated@@124 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or true (= ($generated@@101 ($generated@@102 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@101 $generated@@128 $generated@@130)))
 :weight 0
)))) (= ($generated@@1 $generated@@97) 14)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (let (($generated@@133 ($generated@@71 (type $generated@@132))))
(= (type ($generated@@103 $generated@@131 $generated@@132)) $generated@@133))
 :pattern ( ($generated@@103 $generated@@131 $generated@@132))
))) (= ($generated@@1 $generated@@98) 15)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= (type ($generated@@104 $generated@@134 $generated@@135 $generated@@136)) $generated@@98)
 :pattern ( ($generated@@104 $generated@@134 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (let (($generated@@140 ($generated@@71 (type $generated@@138))))
 (=> (= (type $generated@@139) $generated@@140) (= ($generated@@103 ($generated@@104 $generated@@137 $generated@@138 $generated@@139) $generated@@138) $generated@@139)))
 :weight 0
))) (and (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@143 $generated@@144) (= ($generated@@103 ($generated@@104 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@103 $generated@@142 $generated@@144)))
 :weight 0
)) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or true (= ($generated@@103 ($generated@@104 $generated@@146 $generated@@147 $generated@@145) $generated@@148) ($generated@@103 $generated@@146 $generated@@148)))
 :weight 0
)))) (forall (($generated@@149 Int) ) (! (= (type ($generated@@95 $generated@@149)) $generated@@68)
 :pattern ( ($generated@@95 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@150) $generated@@2) (= (type $generated@@151) ($generated@@96 $generated@@97 $generated@@98))) ($generated@@94 $generated@@150 ($generated@@95 0) $generated@@151))
 :pattern ( ($generated@@94 $generated@@150 ($generated@@95 0) $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@81 $generated@@152 ($generated@@95 0)))
 :pattern ( ($generated@@81 $generated@@152 ($generated@@95 0)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@155 $generated@@156)) $generated@@68)
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@68) (= (type $generated@@158) $generated@@68)) (= (type $generated@@159) $generated@@79)) ($generated@@81 $generated@@159 ($generated@@154 $generated@@157 $generated@@158))) ($generated@@153 $generated@@159))
 :pattern ( ($generated@@153 $generated@@159) ($generated@@81 $generated@@159 ($generated@@154 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 16) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@79) (= (type $generated@@167) $generated@@79)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert  (and (forall (($generated@@170 T@U) ) (! (= (type ($generated@@168 $generated@@170)) $generated@@72)
 :pattern ( ($generated@@168 $generated@@170))
)) (= (type $generated@@169) $generated@@79)))
(assert (= ($generated@@168 $generated@@169) $generated@@63))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@68)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@96 $generated@@163 $generated@@2)) (= (type $generated@@175) $generated@@68)) ($generated@@81 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@81 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@1 ($generated@@178 $generated@@182 $generated@@183)) 17)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@179 ($generated@@178 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@178 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@180 ($generated@@178 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@178 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@180 (type $generated@@188))))
(= (type ($generated@@176 $generated@@188 $generated@@189 $generated@@190)) $generated@@191))
 :pattern ( ($generated@@176 $generated@@188 $generated@@189 $generated@@190))
))) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (let (($generated@@196 (type $generated@@195)))
(let (($generated@@197 (type $generated@@193)))
(= (type ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195)) ($generated@@178 $generated@@197 $generated@@196))))
 :pattern ( ($generated@@181 $generated@@192 $generated@@193 $generated@@194 $generated@@195))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@180 (type $generated@@198))))
 (=> (= (type $generated@@201) $generated@@202) (= ($generated@@176 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@199 $generated@@200) $generated@@201)))
 :weight 0
))) (and (and (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@176 ($generated@@181 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@176 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@176 ($generated@@181 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@176 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or true (= ($generated@@176 ($generated@@181 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@176 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ) (! (= (type ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224)) ($generated@@178 $generated@@97 $generated@@4))
 :pattern ( ($generated@@177 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 Bool) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (let (($generated@@231 ($generated@@71 (type $generated@@230))))
 (=> (and (and (and (and (= (type $generated@@225) $generated@@97) (= (type $generated@@226) ($generated@@96 $generated@@97 $generated@@98))) (= (type $generated@@227) ($generated@@70 $generated@@4))) (= (type $generated@@229) $generated@@97)) (= (type $generated@@230) ($generated@@70 $generated@@231))) (= ($generated@@0 ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))  (=> (and (not (= $generated@@229 $generated@@225)) ($generated@@0 ($generated@@103 ($generated@@101 $generated@@226 $generated@@229) $generated@@227))) $generated@@228))))
 :pattern ( ($generated@@176 ($generated@@177 $generated@@225 $generated@@226 $generated@@227 $generated@@228) $generated@@229 $generated@@230))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (= (type ($generated@@232 $generated@@241 $generated@@242 $generated@@243 $generated@@244)) $generated@@79)
 :pattern ( ($generated@@232 $generated@@241 $generated@@242 $generated@@243 $generated@@244))
)) (forall (($generated@@245 T@U) ) (! (= (type ($generated@@233 $generated@@245)) $generated@@78)
 :pattern ( ($generated@@233 $generated@@245))
))) (forall (($generated@@246 T@U) ) (! (let (($generated@@247 (type $generated@@246)))
(= (type ($generated@@234 $generated@@246)) $generated@@247))
 :pattern ( ($generated@@234 $generated@@246))
))) (forall (($generated@@248 T@U) ) (! (= (type ($generated@@237 $generated@@248)) $generated@@79)
 :pattern ( ($generated@@237 $generated@@248))
))) (forall (($generated@@249 T@T) ($generated@@250 T@U) ) (! (= (type ($generated@@238 $generated@@249 $generated@@250)) $generated@@249)
 :pattern ( ($generated@@238 $generated@@249 $generated@@250))
))) (forall (($generated@@251 T@U) ) (! (= (type ($generated@@239 $generated@@251)) $generated@@163)
 :pattern ( ($generated@@239 $generated@@251))
))) (= (type $generated@@240) $generated@@78)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@252) $generated@@68) (= (type $generated@@253) $generated@@68)) (= (type $generated@@254) $generated@@78)) (= (type $generated@@255) $generated@@79)) (or ($generated@@235 $generated@@252 $generated@@253 ($generated@@234 $generated@@255)) (and (not (= 2 $generated@@76)) ($generated@@81 $generated@@255 ($generated@@82 ($generated@@82 $generated@@253)))))) (and (=> (not ($generated@@0 ($generated@@234 ($generated@@11 ($generated@@236 ($generated@@234 $generated@@255)))))) (let (($generated@@256 ($generated@@234 ($generated@@237 ($generated@@234 $generated@@255)))))
(let (($generated@@257 ($generated@@234 ($generated@@238 $generated@@79 ($generated@@239 ($generated@@234 $generated@@255))))))
 (and ($generated@@235 $generated@@252 $generated@@253 $generated@@256) ($generated@@80 $generated@@253 $generated@@257 ($generated@@232 $generated@@252 $generated@@253 ($generated@@233 $generated@@254) $generated@@256)))))) (= ($generated@@232 $generated@@252 $generated@@253 ($generated@@233 $generated@@254) ($generated@@234 $generated@@255)) (ite ($generated@@236 ($generated@@234 $generated@@255)) $generated@@169 (let (($generated@@258 ($generated@@234 ($generated@@237 ($generated@@234 $generated@@255)))))
(let (($generated@@259 ($generated@@234 ($generated@@238 $generated@@79 ($generated@@239 ($generated@@234 $generated@@255))))))
($generated@@234 ($generated@@77 $generated@@253 ($generated@@233 $generated@@240) $generated@@259 ($generated@@234 ($generated@@232 $generated@@252 $generated@@253 ($generated@@233 $generated@@254) $generated@@258))))))))))
 :weight 3
 :pattern ( ($generated@@232 $generated@@252 $generated@@253 ($generated@@233 $generated@@254) ($generated@@234 $generated@@255)))
))))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (and (= (type $generated@@261) $generated@@68) (= (type $generated@@262) ($generated@@96 $generated@@97 $generated@@98))) ($generated@@260 $generated@@262)) ($generated@@94 $generated@@169 ($generated@@82 $generated@@261) $generated@@262))
 :pattern ( ($generated@@94 $generated@@169 ($generated@@82 $generated@@261) $generated@@262))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (! (= (type ($generated@@263 $generated@@265 $generated@@266)) $generated@@79)
 :pattern ( ($generated@@263 $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (= (type $generated@@267) $generated@@68) (= (type $generated@@268) $generated@@68)) (= (type $generated@@269) $generated@@163)) (= (type $generated@@270) $generated@@163)) (= ($generated@@81 ($generated@@263 $generated@@269 $generated@@270) ($generated@@154 $generated@@267 $generated@@268))  (and ($generated@@264 $generated@@269 $generated@@267) ($generated@@264 $generated@@270 $generated@@268))))
 :pattern ( ($generated@@81 ($generated@@263 $generated@@269 $generated@@270) ($generated@@154 $generated@@267 $generated@@268)))
)))
(assert (forall (($generated@@271 T@U) ) (!  (=> (= (type $generated@@271) $generated@@68) ($generated@@81 $generated@@169 ($generated@@82 $generated@@271)))
 :pattern ( ($generated@@81 $generated@@169 ($generated@@82 $generated@@271)))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@272) $generated@@79) (= (type $generated@@273) $generated@@79)) (= ($generated@@160 $generated@@272 $generated@@273) (= $generated@@272 $generated@@273)))
 :pattern ( ($generated@@160 $generated@@272 $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@275) $generated@@79) (= (type $generated@@276) $generated@@79)) (= ($generated@@274 $generated@@275 $generated@@276) (= $generated@@275 $generated@@276)))
 :pattern ( ($generated@@274 $generated@@275 $generated@@276))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (and (= (type $generated@@278) $generated@@79) (= (type $generated@@279) $generated@@79)) (and ($generated@@277 $generated@@278) ($generated@@277 $generated@@279))) (= ($generated@@274 $generated@@278 $generated@@279)  (and (= ($generated@@239 $generated@@278) ($generated@@239 $generated@@279)) ($generated@@274 ($generated@@237 $generated@@278) ($generated@@237 $generated@@279)))))
 :pattern ( ($generated@@274 $generated@@278 $generated@@279) ($generated@@277 $generated@@278))
 :pattern ( ($generated@@274 $generated@@278 $generated@@279) ($generated@@277 $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ) (! (= (type ($generated@@280 $generated@@281)) $generated@@68)
 :pattern ( ($generated@@280 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@282) ($generated@@96 $generated@@163 $generated@@4)) (= (type $generated@@283) $generated@@68)) (= ($generated@@81 $generated@@282 ($generated@@280 $generated@@283)) (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@163) ($generated@@0 ($generated@@101 $generated@@282 $generated@@284))) ($generated@@264 $generated@@284 $generated@@283))
 :pattern ( ($generated@@101 $generated@@282 $generated@@284))
))))
 :pattern ( ($generated@@81 $generated@@282 ($generated@@280 $generated@@283)))
)))
(assert (forall (($generated@@286 T@U) ) (! (= (type ($generated@@285 $generated@@286)) $generated@@68)
 :pattern ( ($generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (=> (and (= (type $generated@@287) ($generated@@96 $generated@@163 $generated@@4)) (= (type $generated@@288) $generated@@68)) (= ($generated@@81 $generated@@287 ($generated@@285 $generated@@288)) (forall (($generated@@289 T@U) ) (!  (=> (and (= (type $generated@@289) $generated@@163) ($generated@@0 ($generated@@101 $generated@@287 $generated@@289))) ($generated@@264 $generated@@289 $generated@@288))
 :pattern ( ($generated@@101 $generated@@287 $generated@@289))
))))
 :pattern ( ($generated@@81 $generated@@287 ($generated@@285 $generated@@288)))
)))
(assert (forall (($generated@@290 T@U) ) (! (= ($generated@@234 $generated@@290) $generated@@290)
 :pattern ( ($generated@@234 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (and (and (= (type $generated@@291) $generated@@79) (= (type $generated@@292) $generated@@79)) (and ($generated@@236 $generated@@291) ($generated@@236 $generated@@292))) (= ($generated@@274 $generated@@291 $generated@@292) true))
 :pattern ( ($generated@@274 $generated@@291 $generated@@292) ($generated@@236 $generated@@291))
 :pattern ( ($generated@@274 $generated@@291 $generated@@292) ($generated@@236 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (! (= (type ($generated@@293 $generated@@294 $generated@@295)) $generated@@79)
 :pattern ( ($generated@@293 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (= (type $generated@@296) $generated@@68) (= (type $generated@@297) $generated@@163)) (= (type $generated@@298) $generated@@79)) (= ($generated@@81 ($generated@@293 $generated@@297 $generated@@298) ($generated@@82 $generated@@296))  (and ($generated@@264 $generated@@297 $generated@@296) ($generated@@81 $generated@@298 ($generated@@82 $generated@@296)))))
 :pattern ( ($generated@@81 ($generated@@293 $generated@@297 $generated@@298) ($generated@@82 $generated@@296)))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@300) $generated@@68) (= (type $generated@@301) $generated@@68)) (= (type $generated@@302) $generated@@163)) (= (type $generated@@303) $generated@@163)) (= (type $generated@@304) ($generated@@96 $generated@@97 $generated@@98))) ($generated@@260 $generated@@304)) (= ($generated@@94 ($generated@@263 $generated@@302 $generated@@303) ($generated@@154 $generated@@300 $generated@@301) $generated@@304)  (and ($generated@@299 $generated@@302 $generated@@300 $generated@@304) ($generated@@299 $generated@@303 $generated@@301 $generated@@304))))
 :pattern ( ($generated@@94 ($generated@@263 $generated@@302 $generated@@303) ($generated@@154 $generated@@300 $generated@@301) $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@79) (= ($generated@@153 $generated@@305) (= ($generated@@168 $generated@@305) $generated@@61)))
 :pattern ( ($generated@@153 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (!  (=> (= (type $generated@@306) $generated@@79) (= ($generated@@236 $generated@@306) (= ($generated@@168 $generated@@306) $generated@@63)))
 :pattern ( ($generated@@236 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= (type $generated@@307) $generated@@79) (= ($generated@@277 $generated@@307) (= ($generated@@168 $generated@@307) $generated@@65)))
 :pattern ( ($generated@@277 $generated@@307))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@308) $generated@@68) (= (type $generated@@309) $generated@@78)) (= (type $generated@@310) $generated@@79)) (= (type $generated@@311) $generated@@79)) (or ($generated@@80 $generated@@308 ($generated@@234 $generated@@310) ($generated@@234 $generated@@311)) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@310 ($generated@@82 $generated@@308)) ($generated@@81 $generated@@311 ($generated@@82 $generated@@308)))))) (and (=> (not ($generated@@0 ($generated@@234 ($generated@@11 ($generated@@236 ($generated@@234 $generated@@310)))))) (let (($generated@@312 ($generated@@234 ($generated@@237 ($generated@@234 $generated@@310)))))
($generated@@80 $generated@@308 $generated@@312 ($generated@@234 $generated@@311)))) (= ($generated@@77 $generated@@308 ($generated@@233 $generated@@309) ($generated@@234 $generated@@310) ($generated@@234 $generated@@311)) (ite ($generated@@236 ($generated@@234 $generated@@310)) $generated@@311 (let (($generated@@313 ($generated@@234 ($generated@@237 ($generated@@234 $generated@@310)))))
(let (($generated@@314 ($generated@@234 ($generated@@239 ($generated@@234 $generated@@310)))))
($generated@@234 ($generated@@293 $generated@@314 ($generated@@234 ($generated@@77 $generated@@308 ($generated@@233 $generated@@309) $generated@@313 ($generated@@234 $generated@@311)))))))))))
 :weight 3
 :pattern ( ($generated@@77 $generated@@308 ($generated@@233 $generated@@309) ($generated@@234 $generated@@310) ($generated@@234 $generated@@311)))
))))
(assert (forall (($generated@@315 T@U) ) (!  (=> (and (= (type $generated@@315) $generated@@79) ($generated@@153 $generated@@315)) (exists (($generated@@316 T@U) ($generated@@317 T@U) ) (!  (and (and (= (type $generated@@316) $generated@@163) (= (type $generated@@317) $generated@@163)) (= $generated@@315 ($generated@@263 $generated@@316 $generated@@317)))
 :no-pattern (type $generated@@316)
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@316)
 :no-pattern ($generated@@0 $generated@@316)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
)))
 :pattern ( ($generated@@153 $generated@@315))
)))
(assert (forall (($generated@@318 T@U) ) (!  (=> (and (= (type $generated@@318) $generated@@79) ($generated@@277 $generated@@318)) (exists (($generated@@319 T@U) ($generated@@320 T@U) ) (!  (and (and (= (type $generated@@319) $generated@@163) (= (type $generated@@320) $generated@@79)) (= $generated@@318 ($generated@@293 $generated@@319 $generated@@320)))
 :no-pattern (type $generated@@319)
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
)))
 :pattern ( ($generated@@277 $generated@@318))
)))
(assert  (and (and (forall (($generated@@325 T@T) ) (= ($generated@@1 ($generated@@323 $generated@@325)) 18)) (forall (($generated@@326 T@T) ) (! (= ($generated@@324 ($generated@@323 $generated@@326)) $generated@@326)
 :pattern ( ($generated@@323 $generated@@326))
))) (forall (($generated@@327 T@T) ) (! (= (type ($generated@@321 $generated@@327)) ($generated@@323 $generated@@327))
 :pattern ( ($generated@@321 $generated@@327))
))))
(assert (forall (($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@321 $generated@@328)) 0)
 :pattern ( ($generated@@321 $generated@@328))
)))
(assert (forall (($generated@@329 T@U) ) (!  (=> (and (= (type $generated@@329) $generated@@79) ($generated@@236 $generated@@329)) (= $generated@@329 $generated@@169))
 :pattern ( ($generated@@236 $generated@@329))
)))
(assert (forall (($generated@@331 T@U) ) (! (= (type ($generated@@330 $generated@@331)) $generated@@78)
 :pattern ( ($generated@@330 $generated@@331))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ($generated@@334 T@U) ($generated@@335 T@U) ) (!  (=> (and (and (and (= (type $generated@@332) $generated@@68) (= (type $generated@@333) $generated@@78)) (= (type $generated@@334) $generated@@79)) (= (type $generated@@335) $generated@@79)) (= ($generated@@77 $generated@@332 $generated@@333 $generated@@334 $generated@@335) ($generated@@77 $generated@@332 $generated@@240 $generated@@334 $generated@@335)))
 :pattern ( ($generated@@77 $generated@@332 ($generated@@330 $generated@@333) $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@U) ($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (and (and (and (= (type $generated@@336) $generated@@68) (= (type $generated@@337) $generated@@68)) (= (type $generated@@338) $generated@@78)) (= (type $generated@@339) $generated@@79)) (= ($generated@@232 $generated@@336 $generated@@337 $generated@@338 $generated@@339) ($generated@@232 $generated@@336 $generated@@337 $generated@@240 $generated@@339)))
 :pattern ( ($generated@@232 $generated@@336 $generated@@337 ($generated@@330 $generated@@338) $generated@@339))
)))
(assert (forall (($generated@@341 T@U) ) (! (= (type ($generated@@340 $generated@@341)) $generated@@163)
 :pattern ( ($generated@@340 $generated@@341))
)))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@U) ($generated@@344 T@U) ) (!  (=> (and (= (type $generated@@343) $generated@@68) (= (type $generated@@344) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@299 ($generated@@340 $generated@@342) $generated@@343 $generated@@344) ($generated@@94 $generated@@342 $generated@@343 $generated@@344)))
 :pattern ( ($generated@@299 ($generated@@340 $generated@@342) $generated@@343 $generated@@344))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ($generated@@348 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@345) $generated@@68) (= (type $generated@@346) $generated@@68)) (= (type $generated@@347) $generated@@78)) (= (type $generated@@348) $generated@@79)) (or ($generated@@235 $generated@@345 $generated@@346 $generated@@348) (and (not (= 2 $generated@@76)) ($generated@@81 $generated@@348 ($generated@@82 ($generated@@82 $generated@@346)))))) (and (=> (not ($generated@@236 $generated@@348)) (let (($generated@@349 ($generated@@237 $generated@@348)))
(let (($generated@@350 ($generated@@238 $generated@@79 ($generated@@239 $generated@@348))))
 (and ($generated@@235 $generated@@345 $generated@@346 $generated@@349) ($generated@@80 $generated@@346 $generated@@350 ($generated@@232 $generated@@345 $generated@@346 $generated@@347 $generated@@349)))))) (= ($generated@@232 $generated@@345 $generated@@346 ($generated@@233 $generated@@347) $generated@@348) (ite ($generated@@236 $generated@@348) $generated@@169 (let (($generated@@351 ($generated@@237 $generated@@348)))
(let (($generated@@352 ($generated@@238 $generated@@79 ($generated@@239 $generated@@348))))
($generated@@77 $generated@@346 ($generated@@233 $generated@@240) $generated@@352 ($generated@@232 $generated@@345 $generated@@346 $generated@@347 $generated@@351))))))))
 :pattern ( ($generated@@232 $generated@@345 $generated@@346 ($generated@@233 $generated@@347) $generated@@348))
))))
(assert (forall (($generated@@355 T@T) ) (! (= (type ($generated@@354 $generated@@355)) ($generated@@96 $generated@@355 $generated@@2))
 :pattern ( ($generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@99 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@96 $generated@@357 $generated@@2)) (and (= (= ($generated@@353 $generated@@356) 0) (= $generated@@356 ($generated@@354 $generated@@357))) (=> (not (= ($generated@@353 $generated@@356) 0)) (exists (($generated@@358 T@U) ) (!  (and (= (type $generated@@358) $generated@@357) (< 0 ($generated ($generated@@101 $generated@@356 $generated@@358))))
 :no-pattern (type $generated@@358)
 :no-pattern ($generated $generated@@358)
 :no-pattern ($generated@@0 $generated@@358)
))))))
 :pattern ( ($generated@@353 $generated@@356))
)))
(assert (forall (($generated@@360 T@U) ) (! (= (type ($generated@@359 $generated@@360)) $generated@@73)
 :pattern ( ($generated@@359 $generated@@360))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@68) (and (= ($generated@@92 ($generated@@82 $generated@@361)) $generated@@64) (= ($generated@@359 ($generated@@82 $generated@@361)) $generated@@67)))
 :pattern ( ($generated@@82 $generated@@361))
)))
(assert  (and (and (and (and (forall (($generated@@367 T@T) ($generated@@368 T@T) ) (= ($generated@@1 ($generated@@364 $generated@@367 $generated@@368)) 19)) (forall (($generated@@369 T@T) ($generated@@370 T@T) ) (! (= ($generated@@365 ($generated@@364 $generated@@369 $generated@@370)) $generated@@369)
 :pattern ( ($generated@@364 $generated@@369 $generated@@370))
))) (forall (($generated@@371 T@T) ($generated@@372 T@T) ) (! (= ($generated@@366 ($generated@@364 $generated@@371 $generated@@372)) $generated@@372)
 :pattern ( ($generated@@364 $generated@@371 $generated@@372))
))) (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@365 (type $generated@@373))))
(= (type ($generated@@362 $generated@@373)) ($generated@@96 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@362 $generated@@373))
))) (forall (($generated@@375 T@T) ($generated@@376 T@T) ) (! (= (type ($generated@@363 $generated@@375 $generated@@376)) ($generated@@364 $generated@@375 $generated@@376))
 :pattern ( ($generated@@363 $generated@@375 $generated@@376))
))))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@T) ) (! (let (($generated@@379 (type $generated@@377)))
 (not ($generated@@0 ($generated@@101 ($generated@@362 ($generated@@363 $generated@@379 $generated@@378)) $generated@@377))))
 :pattern ( (let (($generated@@379 (type $generated@@377)))
($generated@@101 ($generated@@362 ($generated@@363 $generated@@379 $generated@@378)) $generated@@377)))
)))
(assert  (and (and (and (and (forall (($generated@@385 T@T) ($generated@@386 T@T) ) (= ($generated@@1 ($generated@@382 $generated@@385 $generated@@386)) 20)) (forall (($generated@@387 T@T) ($generated@@388 T@T) ) (! (= ($generated@@383 ($generated@@382 $generated@@387 $generated@@388)) $generated@@387)
 :pattern ( ($generated@@382 $generated@@387 $generated@@388))
))) (forall (($generated@@389 T@T) ($generated@@390 T@T) ) (! (= ($generated@@384 ($generated@@382 $generated@@389 $generated@@390)) $generated@@390)
 :pattern ( ($generated@@382 $generated@@389 $generated@@390))
))) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@383 (type $generated@@391))))
(= (type ($generated@@380 $generated@@391)) ($generated@@96 $generated@@392 $generated@@4)))
 :pattern ( ($generated@@380 $generated@@391))
))) (forall (($generated@@393 T@T) ($generated@@394 T@T) ) (! (= (type ($generated@@381 $generated@@393 $generated@@394)) ($generated@@382 $generated@@393 $generated@@394))
 :pattern ( ($generated@@381 $generated@@393 $generated@@394))
))))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@T) ) (! (let (($generated@@397 (type $generated@@395)))
 (not ($generated@@0 ($generated@@101 ($generated@@380 ($generated@@381 $generated@@397 $generated@@396)) $generated@@395))))
 :pattern ( (let (($generated@@397 (type $generated@@395)))
($generated@@101 ($generated@@380 ($generated@@381 $generated@@397 $generated@@396)) $generated@@395)))
)))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (and (and (= (type $generated@@398) $generated@@68) (= (type $generated@@399) $generated@@68)) (= (type $generated@@400) $generated@@78)) (= (type $generated@@401) $generated@@79)) (= ($generated@@232 $generated@@398 $generated@@399 ($generated@@233 $generated@@400) $generated@@401) ($generated@@232 $generated@@398 $generated@@399 $generated@@400 $generated@@401)))
 :pattern ( ($generated@@232 $generated@@398 $generated@@399 ($generated@@233 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@99 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@96 $generated@@403 $generated@@2)) (= ($generated@@172 $generated@@402) (forall (($generated@@404 T@U) ) (!  (=> (= (type $generated@@404) $generated@@403) (and (<= 0 ($generated ($generated@@101 $generated@@402 $generated@@404))) (<= ($generated ($generated@@101 $generated@@402 $generated@@404)) ($generated@@353 $generated@@402))))
 :pattern ( ($generated@@101 $generated@@402 $generated@@404))
)))))
 :pattern ( ($generated@@172 $generated@@402))
)))
(assert (forall (($generated@@405 T@U) ) (! (let (($generated@@406 ($generated@@366 (type $generated@@405))))
(let (($generated@@407 ($generated@@365 (type $generated@@405))))
 (=> (= (type $generated@@405) ($generated@@364 $generated@@407 $generated@@406)) (or (= $generated@@405 ($generated@@363 $generated@@407 $generated@@406)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) ($generated@@0 ($generated@@101 ($generated@@362 $generated@@405) $generated@@408)))
 :no-pattern (type $generated@@408)
 :no-pattern ($generated $generated@@408)
 :no-pattern ($generated@@0 $generated@@408)
))))))
 :pattern ( ($generated@@362 $generated@@405))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@366 (type $generated@@410))))
(= (type ($generated@@409 $generated@@410)) ($generated@@96 $generated@@411 $generated@@4)))
 :pattern ( ($generated@@409 $generated@@410))
)))
(assert (forall (($generated@@412 T@U) ) (! (let (($generated@@413 ($generated@@366 (type $generated@@412))))
(let (($generated@@414 ($generated@@365 (type $generated@@412))))
 (=> (= (type $generated@@412) ($generated@@364 $generated@@414 $generated@@413)) (or (= $generated@@412 ($generated@@363 $generated@@414 $generated@@413)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@413) ($generated@@0 ($generated@@101 ($generated@@409 $generated@@412) $generated@@415)))
 :no-pattern (type $generated@@415)
 :no-pattern ($generated $generated@@415)
 :no-pattern ($generated@@0 $generated@@415)
))))))
 :pattern ( ($generated@@409 $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@384 (type $generated@@416))))
(let (($generated@@418 ($generated@@383 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@382 $generated@@418 $generated@@417)) (or (= $generated@@416 ($generated@@381 $generated@@418 $generated@@417)) (exists (($generated@@419 T@U) ) (!  (and (= (type $generated@@419) $generated@@418) ($generated@@0 ($generated@@101 ($generated@@380 $generated@@416) $generated@@419)))
 :no-pattern (type $generated@@419)
 :no-pattern ($generated $generated@@419)
 :no-pattern ($generated@@0 $generated@@419)
))))))
 :pattern ( ($generated@@380 $generated@@416))
)))
(assert (forall (($generated@@421 T@U) ) (! (let (($generated@@422 ($generated@@384 (type $generated@@421))))
(= (type ($generated@@420 $generated@@421)) ($generated@@96 $generated@@422 $generated@@4)))
 :pattern ( ($generated@@420 $generated@@421))
)))
(assert (forall (($generated@@423 T@U) ) (! (let (($generated@@424 ($generated@@384 (type $generated@@423))))
(let (($generated@@425 ($generated@@383 (type $generated@@423))))
 (=> (= (type $generated@@423) ($generated@@382 $generated@@425 $generated@@424)) (or (= $generated@@423 ($generated@@381 $generated@@425 $generated@@424)) (exists (($generated@@426 T@U) ) (!  (and (= (type $generated@@426) $generated@@424) ($generated@@0 ($generated@@101 ($generated@@420 $generated@@423) $generated@@426)))
 :no-pattern (type $generated@@426)
 :no-pattern ($generated $generated@@426)
 :no-pattern ($generated@@0 $generated@@426)
))))))
 :pattern ( ($generated@@420 $generated@@423))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@427) ($generated@@96 $generated@@163 $generated@@2)) (= (type $generated@@428) $generated@@68)) (= ($generated@@81 $generated@@427 ($generated@@171 $generated@@428)) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@163) (< 0 ($generated ($generated@@101 $generated@@427 $generated@@429)))) ($generated@@264 $generated@@429 $generated@@428))
 :pattern ( ($generated@@101 $generated@@427 $generated@@429))
))))
 :pattern ( ($generated@@81 $generated@@427 ($generated@@171 $generated@@428)))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@79) ($generated@@430 $generated@@431)) (or ($generated@@236 $generated@@431) ($generated@@277 $generated@@431)))
 :pattern ( ($generated@@430 $generated@@431))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@432) $generated@@68) (= (type $generated@@433) $generated@@78)) (= (type $generated@@434) $generated@@79)) (= (type $generated@@435) $generated@@79)) (or ($generated@@80 $generated@@432 $generated@@434 $generated@@435) (and (not (= 1 $generated@@76)) (and ($generated@@81 $generated@@434 ($generated@@82 $generated@@432)) ($generated@@81 $generated@@435 ($generated@@82 $generated@@432)))))) (and (=> (not ($generated@@236 $generated@@434)) (let (($generated@@436 ($generated@@237 $generated@@434)))
($generated@@80 $generated@@432 $generated@@436 $generated@@435))) (= ($generated@@77 $generated@@432 ($generated@@233 $generated@@433) $generated@@434 $generated@@435) (ite ($generated@@236 $generated@@434) $generated@@435 (let (($generated@@437 ($generated@@237 $generated@@434)))
(let (($generated@@438 ($generated@@239 $generated@@434)))
($generated@@293 $generated@@438 ($generated@@77 $generated@@432 $generated@@433 $generated@@437 $generated@@435))))))))
 :pattern ( ($generated@@77 $generated@@432 ($generated@@233 $generated@@433) $generated@@434 $generated@@435))
))))
(assert (forall (($generated@@439 T@U) ($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (and (= (type $generated@@439) ($generated@@96 $generated@@163 $generated@@4)) (= (type $generated@@440) $generated@@68)) (= (type $generated@@441) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@439 ($generated@@280 $generated@@440) $generated@@441) (forall (($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@163) ($generated@@0 ($generated@@101 $generated@@439 $generated@@442))) ($generated@@299 $generated@@442 $generated@@440 $generated@@441))
 :pattern ( ($generated@@101 $generated@@439 $generated@@442))
))))
 :pattern ( ($generated@@94 $generated@@439 ($generated@@280 $generated@@440) $generated@@441))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ($generated@@445 T@U) ) (!  (=> (and (and (= (type $generated@@443) ($generated@@96 $generated@@163 $generated@@4)) (= (type $generated@@444) $generated@@68)) (= (type $generated@@445) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@443 ($generated@@285 $generated@@444) $generated@@445) (forall (($generated@@446 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@163) ($generated@@0 ($generated@@101 $generated@@443 $generated@@446))) ($generated@@299 $generated@@446 $generated@@444 $generated@@445))
 :pattern ( ($generated@@101 $generated@@443 $generated@@446))
))))
 :pattern ( ($generated@@94 $generated@@443 ($generated@@285 $generated@@444) $generated@@445))
)))
(assert (forall (($generated@@447 T@U) ) (! (let (($generated@@448 (type $generated@@447)))
(= ($generated ($generated@@101 ($generated@@354 $generated@@448) $generated@@447)) 0))
 :pattern ( (let (($generated@@448 (type $generated@@447)))
($generated@@101 ($generated@@354 $generated@@448) $generated@@447)))
)))
(assert  (and (forall (($generated@@451 T@U) ) (! (= (type ($generated@@449 $generated@@451)) ($generated@@96 $generated@@163 $generated@@4))
 :pattern ( ($generated@@449 $generated@@451))
)) (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@366 (type $generated@@452))))
(let (($generated@@454 ($generated@@365 (type $generated@@452))))
(= (type ($generated@@450 $generated@@452)) ($generated@@96 $generated@@454 $generated@@453))))
 :pattern ( ($generated@@450 $generated@@452))
))))
(assert (forall (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@455) ($generated@@364 $generated@@163 $generated@@163)) (= (type $generated@@456) $generated@@163)) (= ($generated@@0 ($generated@@101 ($generated@@449 $generated@@455) $generated@@456))  (and ($generated@@0 ($generated@@101 ($generated@@362 $generated@@455) ($generated@@161 ($generated@@238 $generated@@79 $generated@@456)))) (= ($generated@@101 ($generated@@450 $generated@@455) ($generated@@161 ($generated@@238 $generated@@79 $generated@@456))) ($generated@@162 ($generated@@238 $generated@@79 $generated@@456))))))
 :pattern ( ($generated@@101 ($generated@@449 $generated@@455) $generated@@456))
)))
(assert  (and (forall (($generated@@459 T@U) ) (! (= (type ($generated@@457 $generated@@459)) ($generated@@96 $generated@@163 $generated@@4))
 :pattern ( ($generated@@457 $generated@@459))
)) (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@384 (type $generated@@460))))
(let (($generated@@462 ($generated@@383 (type $generated@@460))))
(= (type ($generated@@458 $generated@@460)) ($generated@@96 $generated@@462 $generated@@461))))
 :pattern ( ($generated@@458 $generated@@460))
))))
(assert (forall (($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@463) ($generated@@382 $generated@@163 $generated@@163)) (= (type $generated@@464) $generated@@163)) (= ($generated@@0 ($generated@@101 ($generated@@457 $generated@@463) $generated@@464))  (and ($generated@@0 ($generated@@101 ($generated@@380 $generated@@463) ($generated@@161 ($generated@@238 $generated@@79 $generated@@464)))) (= ($generated@@101 ($generated@@458 $generated@@463) ($generated@@161 ($generated@@238 $generated@@79 $generated@@464))) ($generated@@162 ($generated@@238 $generated@@79 $generated@@464))))))
 :pattern ( ($generated@@101 ($generated@@457 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ) (! (let (($generated@@467 (type $generated@@466)))
(let (($generated@@468 ($generated@@365 (type $generated@@465))))
 (=> (= (type $generated@@465) ($generated@@364 $generated@@468 $generated@@467)) (= ($generated@@0 ($generated@@101 ($generated@@409 $generated@@465) $generated@@466)) (exists (($generated@@469 T@U) ) (!  (and (= (type $generated@@469) $generated@@468) (and ($generated@@0 ($generated@@101 ($generated@@362 $generated@@465) $generated@@469)) (= $generated@@466 ($generated@@101 ($generated@@450 $generated@@465) $generated@@469))))
 :pattern ( ($generated@@101 ($generated@@362 $generated@@465) $generated@@469))
 :pattern ( ($generated@@101 ($generated@@450 $generated@@465) $generated@@469))
))))))
 :pattern ( ($generated@@101 ($generated@@409 $generated@@465) $generated@@466))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (! (let (($generated@@472 (type $generated@@471)))
(let (($generated@@473 ($generated@@383 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@382 $generated@@473 $generated@@472)) (= ($generated@@0 ($generated@@101 ($generated@@420 $generated@@470) $generated@@471)) (exists (($generated@@474 T@U) ) (!  (and (= (type $generated@@474) $generated@@473) (and ($generated@@0 ($generated@@101 ($generated@@380 $generated@@470) $generated@@474)) (= $generated@@471 ($generated@@101 ($generated@@458 $generated@@470) $generated@@474))))
 :pattern ( ($generated@@101 ($generated@@380 $generated@@470) $generated@@474))
 :pattern ( ($generated@@101 ($generated@@458 $generated@@470) $generated@@474))
))))))
 :pattern ( ($generated@@101 ($generated@@420 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (! (= (type ($generated@@475 $generated@@476 $generated@@477)) $generated@@68)
 :pattern ( ($generated@@475 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (and (and (= (type $generated@@478) ($generated@@364 $generated@@163 $generated@@163)) (= (type $generated@@479) $generated@@68)) (= (type $generated@@480) $generated@@68)) (= (type $generated@@481) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@478 ($generated@@475 $generated@@479 $generated@@480) $generated@@481) (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@163) ($generated@@0 ($generated@@101 ($generated@@362 $generated@@478) $generated@@482))) (and ($generated@@299 ($generated@@101 ($generated@@450 $generated@@478) $generated@@482) $generated@@480 $generated@@481) ($generated@@299 $generated@@482 $generated@@479 $generated@@481)))
 :pattern ( ($generated@@101 ($generated@@450 $generated@@478) $generated@@482))
 :pattern ( ($generated@@101 ($generated@@362 $generated@@478) $generated@@482))
))))
 :pattern ( ($generated@@94 $generated@@478 ($generated@@475 $generated@@479 $generated@@480) $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (! (= (type ($generated@@483 $generated@@484 $generated@@485)) $generated@@68)
 :pattern ( ($generated@@483 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (and (and (= (type $generated@@486) ($generated@@382 $generated@@163 $generated@@163)) (= (type $generated@@487) $generated@@68)) (= (type $generated@@488) $generated@@68)) (= (type $generated@@489) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489) (forall (($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@163) ($generated@@0 ($generated@@101 ($generated@@380 $generated@@486) $generated@@490))) (and ($generated@@299 ($generated@@101 ($generated@@458 $generated@@486) $generated@@490) $generated@@488 $generated@@489) ($generated@@299 $generated@@490 $generated@@487 $generated@@489)))
 :pattern ( ($generated@@101 ($generated@@458 $generated@@486) $generated@@490))
 :pattern ( ($generated@@101 ($generated@@380 $generated@@486) $generated@@490))
))))
 :pattern ( ($generated@@94 $generated@@486 ($generated@@483 $generated@@487 $generated@@488) $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@491) $generated@@68) (= (type $generated@@492) $generated@@79)) ($generated@@81 $generated@@492 ($generated@@82 $generated@@491))) (or ($generated@@236 $generated@@492) ($generated@@277 $generated@@492)))
 :pattern ( ($generated@@277 $generated@@492) ($generated@@81 $generated@@492 ($generated@@82 $generated@@491)))
 :pattern ( ($generated@@236 $generated@@492) ($generated@@81 $generated@@492 ($generated@@82 $generated@@491)))
)))
(assert (forall (($generated@@494 T@T) ) (! (= (type ($generated@@493 $generated@@494)) ($generated@@96 $generated@@494 $generated@@4))
 :pattern ( ($generated@@493 $generated@@494))
)))
(assert (forall (($generated@@495 T@U) ) (! (let (($generated@@496 ($generated@@384 (type $generated@@495))))
(let (($generated@@497 ($generated@@383 (type $generated@@495))))
 (=> (= (type $generated@@495) ($generated@@382 $generated@@497 $generated@@496)) (= (= $generated@@495 ($generated@@381 $generated@@497 $generated@@496)) (= ($generated@@380 $generated@@495) ($generated@@493 $generated@@497))))))
 :pattern ( ($generated@@380 $generated@@495))
)))
(assert (forall (($generated@@498 T@U) ) (! (let (($generated@@499 ($generated@@384 (type $generated@@498))))
(let (($generated@@500 ($generated@@383 (type $generated@@498))))
 (=> (= (type $generated@@498) ($generated@@382 $generated@@500 $generated@@499)) (= (= $generated@@498 ($generated@@381 $generated@@500 $generated@@499)) (= ($generated@@420 $generated@@498) ($generated@@493 $generated@@499))))))
 :pattern ( ($generated@@420 $generated@@498))
)))
(assert (forall (($generated@@501 T@U) ) (! (let (($generated@@502 ($generated@@384 (type $generated@@501))))
(let (($generated@@503 ($generated@@383 (type $generated@@501))))
 (=> (= (type $generated@@501) ($generated@@382 $generated@@503 $generated@@502)) (= (= $generated@@501 ($generated@@381 $generated@@503 $generated@@502)) (= ($generated@@457 $generated@@501) ($generated@@493 $generated@@163))))))
 :pattern ( ($generated@@457 $generated@@501))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@366 (type $generated@@504))))
(let (($generated@@506 ($generated@@365 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@364 $generated@@506 $generated@@505)) (or (= $generated@@504 ($generated@@363 $generated@@506 $generated@@505)) (exists (($generated@@507 T@U) ($generated@@508 T@U) ) (!  (and (and (= (type $generated@@507) $generated@@163) (= (type $generated@@508) $generated@@163)) ($generated@@0 ($generated@@101 ($generated@@449 $generated@@504) ($generated@@340 ($generated@@263 $generated@@507 $generated@@508)))))
 :no-pattern (type $generated@@507)
 :no-pattern (type $generated@@508)
 :no-pattern ($generated $generated@@507)
 :no-pattern ($generated@@0 $generated@@507)
 :no-pattern ($generated $generated@@508)
 :no-pattern ($generated@@0 $generated@@508)
))))))
 :pattern ( ($generated@@449 $generated@@504))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 ($generated@@384 (type $generated@@509))))
(let (($generated@@511 ($generated@@383 (type $generated@@509))))
 (=> (= (type $generated@@509) ($generated@@382 $generated@@511 $generated@@510)) (or (= $generated@@509 ($generated@@381 $generated@@511 $generated@@510)) (exists (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (and (and (= (type $generated@@512) $generated@@163) (= (type $generated@@513) $generated@@163)) ($generated@@0 ($generated@@101 ($generated@@457 $generated@@509) ($generated@@340 ($generated@@263 $generated@@512 $generated@@513)))))
 :no-pattern (type $generated@@512)
 :no-pattern (type $generated@@513)
 :no-pattern ($generated $generated@@512)
 :no-pattern ($generated@@0 $generated@@512)
 :no-pattern ($generated $generated@@513)
 :no-pattern ($generated@@0 $generated@@513)
))))))
 :pattern ( ($generated@@457 $generated@@509))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@163) ($generated@@264 $generated@@514 $generated@@46)) (and (= ($generated@@340 ($generated@@238 $generated@@2 $generated@@514)) $generated@@514) ($generated@@81 ($generated@@238 $generated@@2 $generated@@514) $generated@@46)))
 :pattern ( ($generated@@264 $generated@@514 $generated@@46))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@515) $generated@@163) ($generated@@264 $generated@@515 $generated@@47)) (and (= ($generated@@340 ($generated@@238 $generated@@3 $generated@@515)) $generated@@515) ($generated@@81 ($generated@@238 $generated@@3 $generated@@515) $generated@@47)))
 :pattern ( ($generated@@264 $generated@@515 $generated@@47))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@163) ($generated@@264 $generated@@516 $generated@@44)) (and (= ($generated@@340 ($generated@@238 $generated@@4 $generated@@516)) $generated@@516) ($generated@@81 ($generated@@238 $generated@@4 $generated@@516) $generated@@44)))
 :pattern ( ($generated@@264 $generated@@516 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@517) 21))
(assert (forall (($generated@@518 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@163) ($generated@@264 $generated@@518 $generated@@45)) (and (= ($generated@@340 ($generated@@238 $generated@@517 $generated@@518)) $generated@@518) ($generated@@81 ($generated@@238 $generated@@517 $generated@@518) $generated@@45)))
 :pattern ( ($generated@@264 $generated@@518 $generated@@45))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@68) (= ($generated@@264 ($generated@@340 $generated@@519) $generated@@520) ($generated@@81 $generated@@519 $generated@@520)))
 :pattern ( ($generated@@264 ($generated@@340 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (! (let (($generated@@522 ($generated@@99 (type $generated@@521))))
 (=> (= (type $generated@@521) ($generated@@96 $generated@@522 $generated@@2)) (<= 0 ($generated@@353 $generated@@521))))
 :pattern ( ($generated@@353 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (let (($generated@@524 ($generated@@324 (type $generated@@523))))
 (=> (= (type $generated@@523) ($generated@@323 $generated@@524)) (<= 0 ($generated@@322 $generated@@523))))
 :pattern ( ($generated@@322 $generated@@523))
)))
(assert (forall (($generated@@526 T@U) ) (! (= (type ($generated@@525 $generated@@526)) $generated@@68)
 :pattern ( ($generated@@525 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@527) $generated@@68) (= (type $generated@@528) $generated@@68)) (= ($generated@@525 ($generated@@475 $generated@@527 $generated@@528)) $generated@@527))
 :pattern ( ($generated@@475 $generated@@527 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ) (! (= (type ($generated@@529 $generated@@530)) $generated@@68)
 :pattern ( ($generated@@529 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (= (type $generated@@531) $generated@@68) (= (type $generated@@532) $generated@@68)) (= ($generated@@529 ($generated@@475 $generated@@531 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@475 $generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@68) (= (type $generated@@534) $generated@@68)) (= ($generated@@92 ($generated@@475 $generated@@533 $generated@@534)) $generated@@58))
 :pattern ( ($generated@@475 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@68)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@68) (= (type $generated@@538) $generated@@68)) (= ($generated@@535 ($generated@@483 $generated@@537 $generated@@538)) $generated@@537))
 :pattern ( ($generated@@483 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@540 T@U) ) (! (= (type ($generated@@539 $generated@@540)) $generated@@68)
 :pattern ( ($generated@@539 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@541) $generated@@68) (= (type $generated@@542) $generated@@68)) (= ($generated@@539 ($generated@@483 $generated@@541 $generated@@542)) $generated@@542))
 :pattern ( ($generated@@483 $generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@68) (= (type $generated@@544) $generated@@68)) (= ($generated@@92 ($generated@@483 $generated@@543 $generated@@544)) $generated@@59))
 :pattern ( ($generated@@483 $generated@@543 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (= (type $generated@@545) $generated@@163) (= (type $generated@@546) $generated@@163)) (= ($generated@@168 ($generated@@263 $generated@@545 $generated@@546)) $generated@@61))
 :pattern ( ($generated@@263 $generated@@545 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ) (! (= (type ($generated@@547 $generated@@548)) $generated@@68)
 :pattern ( ($generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@68) (= (type $generated@@550) $generated@@68)) (= ($generated@@547 ($generated@@154 $generated@@549 $generated@@550)) $generated@@549))
 :pattern ( ($generated@@154 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ) (! (= (type ($generated@@551 $generated@@552)) $generated@@68)
 :pattern ( ($generated@@551 $generated@@552))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@68) (= (type $generated@@554) $generated@@68)) (= ($generated@@551 ($generated@@154 $generated@@553 $generated@@554)) $generated@@554))
 :pattern ( ($generated@@154 $generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@163) (= (type $generated@@556) $generated@@163)) (= ($generated@@161 ($generated@@263 $generated@@555 $generated@@556)) $generated@@555))
 :pattern ( ($generated@@263 $generated@@555 $generated@@556))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) $generated@@163) (= (type $generated@@558) $generated@@163)) (= ($generated@@162 ($generated@@263 $generated@@557 $generated@@558)) $generated@@558))
 :pattern ( ($generated@@263 $generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@163) (= (type $generated@@560) $generated@@79)) (= ($generated@@168 ($generated@@293 $generated@@559 $generated@@560)) $generated@@65))
 :pattern ( ($generated@@293 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@163) (= (type $generated@@562) $generated@@79)) (= ($generated@@239 ($generated@@293 $generated@@561 $generated@@562)) $generated@@561))
 :pattern ( ($generated@@293 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@163) (= (type $generated@@564) $generated@@79)) (= ($generated@@237 ($generated@@293 $generated@@563 $generated@@564)) $generated@@564))
 :pattern ( ($generated@@293 $generated@@563 $generated@@564))
)))
(assert  (and (forall (($generated@@567 T@U) ) (! (= (type ($generated@@565 $generated@@567)) $generated@@68)
 :pattern ( ($generated@@565 $generated@@567))
)) (forall (($generated@@568 T@U) ($generated@@569 Int) ) (! (let (($generated@@570 ($generated@@324 (type $generated@@568))))
(= (type ($generated@@566 $generated@@568 $generated@@569)) $generated@@570))
 :pattern ( ($generated@@566 $generated@@568 $generated@@569))
))))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@571) ($generated@@323 $generated@@163)) (= (type $generated@@572) $generated@@68)) (= (type $generated@@573) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@571 ($generated@@565 $generated@@572) $generated@@573) (forall (($generated@@574 Int) ) (!  (=> (and (<= 0 $generated@@574) (< $generated@@574 ($generated@@322 $generated@@571))) ($generated@@299 ($generated@@566 $generated@@571 $generated@@574) $generated@@572 $generated@@573))
 :pattern ( ($generated@@566 $generated@@571 $generated@@574))
))))
 :pattern ( ($generated@@94 $generated@@571 ($generated@@565 $generated@@572) $generated@@573))
)))
(assert (forall (($generated@@576 Int) ) (! (= ($generated@@575 ($generated@@95 $generated@@576)) $generated@@576)
 :pattern ( ($generated@@95 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ) (! (= (type ($generated@@577 $generated@@578)) $generated@@68)
 :pattern ( ($generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ) (!  (=> (= (type $generated@@579) $generated@@68) (= ($generated@@577 ($generated@@280 $generated@@579)) $generated@@579))
 :pattern ( ($generated@@280 $generated@@579))
)))
(assert (forall (($generated@@580 T@U) ) (!  (=> (= (type $generated@@580) $generated@@68) (= ($generated@@92 ($generated@@280 $generated@@580)) $generated@@54))
 :pattern ( ($generated@@280 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ) (! (= (type ($generated@@581 $generated@@582)) $generated@@68)
 :pattern ( ($generated@@581 $generated@@582))
)))
(assert (forall (($generated@@583 T@U) ) (!  (=> (= (type $generated@@583) $generated@@68) (= ($generated@@581 ($generated@@285 $generated@@583)) $generated@@583))
 :pattern ( ($generated@@285 $generated@@583))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@68) (= ($generated@@92 ($generated@@285 $generated@@584)) $generated@@55))
 :pattern ( ($generated@@285 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ) (! (= (type ($generated@@585 $generated@@586)) $generated@@68)
 :pattern ( ($generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@68) (= ($generated@@585 ($generated@@171 $generated@@587)) $generated@@587))
 :pattern ( ($generated@@171 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ) (!  (=> (= (type $generated@@588) $generated@@68) (= ($generated@@92 ($generated@@171 $generated@@588)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ) (! (= (type ($generated@@589 $generated@@590)) $generated@@68)
 :pattern ( ($generated@@589 $generated@@590))
)))
(assert (forall (($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@68) (= ($generated@@589 ($generated@@565 $generated@@591)) $generated@@591))
 :pattern ( ($generated@@565 $generated@@591))
)))
(assert (forall (($generated@@592 T@U) ) (!  (=> (= (type $generated@@592) $generated@@68) (= ($generated@@92 ($generated@@565 $generated@@592)) $generated@@57))
 :pattern ( ($generated@@565 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ) (! (= (type ($generated@@593 $generated@@594)) $generated@@68)
 :pattern ( ($generated@@593 $generated@@594))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@68) (= ($generated@@593 ($generated@@82 $generated@@595)) $generated@@595))
 :pattern ( ($generated@@82 $generated@@595))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@596)))
(= ($generated@@238 $generated@@597 ($generated@@340 $generated@@596)) $generated@@596))
 :pattern ( ($generated@@340 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (and (= (type $generated@@598) ($generated@@364 $generated@@163 $generated@@163)) (= (type $generated@@599) $generated@@68)) (= (type $generated@@600) $generated@@68)) (= ($generated@@81 $generated@@598 ($generated@@475 $generated@@599 $generated@@600)) (forall (($generated@@601 T@U) ) (!  (=> (and (= (type $generated@@601) $generated@@163) ($generated@@0 ($generated@@101 ($generated@@362 $generated@@598) $generated@@601))) (and ($generated@@264 ($generated@@101 ($generated@@450 $generated@@598) $generated@@601) $generated@@600) ($generated@@264 $generated@@601 $generated@@599)))
 :pattern ( ($generated@@101 ($generated@@450 $generated@@598) $generated@@601))
 :pattern ( ($generated@@101 ($generated@@362 $generated@@598) $generated@@601))
))))
 :pattern ( ($generated@@81 $generated@@598 ($generated@@475 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (and (= (type $generated@@602) ($generated@@382 $generated@@163 $generated@@163)) (= (type $generated@@603) $generated@@68)) (= (type $generated@@604) $generated@@68)) (= ($generated@@81 $generated@@602 ($generated@@483 $generated@@603 $generated@@604)) (forall (($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@605) $generated@@163) ($generated@@0 ($generated@@101 ($generated@@380 $generated@@602) $generated@@605))) (and ($generated@@264 ($generated@@101 ($generated@@458 $generated@@602) $generated@@605) $generated@@604) ($generated@@264 $generated@@605 $generated@@603)))
 :pattern ( ($generated@@101 ($generated@@458 $generated@@602) $generated@@605))
 :pattern ( ($generated@@101 ($generated@@380 $generated@@602) $generated@@605))
))))
 :pattern ( ($generated@@81 $generated@@602 ($generated@@483 $generated@@603 $generated@@604)))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) $generated@@163) (= (type $generated@@609) $generated@@163)) (< ($generated@@606 $generated@@608) ($generated@@607 ($generated@@263 $generated@@608 $generated@@609))))
 :pattern ( ($generated@@263 $generated@@608 $generated@@609))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) $generated@@163) (= (type $generated@@611) $generated@@163)) (< ($generated@@606 $generated@@611) ($generated@@607 ($generated@@263 $generated@@610 $generated@@611))))
 :pattern ( ($generated@@263 $generated@@610 $generated@@611))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) $generated@@163) (= (type $generated@@613) $generated@@79)) (< ($generated@@606 $generated@@612) ($generated@@607 ($generated@@293 $generated@@612 $generated@@613))))
 :pattern ( ($generated@@293 $generated@@612 $generated@@613))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@163) (= (type $generated@@615) $generated@@79)) (< ($generated@@607 $generated@@615) ($generated@@607 ($generated@@293 $generated@@614 $generated@@615))))
 :pattern ( ($generated@@293 $generated@@614 $generated@@615))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (and (= (type $generated@@616) $generated@@163) (= (type $generated@@617) $generated@@68)) (= (type $generated@@618) $generated@@68)) ($generated@@264 $generated@@616 ($generated@@475 $generated@@617 $generated@@618))) (and (= ($generated@@340 ($generated@@238 ($generated@@364 $generated@@163 $generated@@163) $generated@@616)) $generated@@616) ($generated@@81 ($generated@@238 ($generated@@364 $generated@@163 $generated@@163) $generated@@616) ($generated@@475 $generated@@617 $generated@@618))))
 :pattern ( ($generated@@264 $generated@@616 ($generated@@475 $generated@@617 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (and (= (type $generated@@619) $generated@@163) (= (type $generated@@620) $generated@@68)) (= (type $generated@@621) $generated@@68)) ($generated@@264 $generated@@619 ($generated@@483 $generated@@620 $generated@@621))) (and (= ($generated@@340 ($generated@@238 ($generated@@382 $generated@@163 $generated@@163) $generated@@619)) $generated@@619) ($generated@@81 ($generated@@238 ($generated@@382 $generated@@163 $generated@@163) $generated@@619) ($generated@@483 $generated@@620 $generated@@621))))
 :pattern ( ($generated@@264 $generated@@619 ($generated@@483 $generated@@620 $generated@@621)))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ($generated@@624 T@U) ) (!  (=> (and (and (and (= (type $generated@@622) $generated@@68) (= (type $generated@@623) $generated@@68)) (= (type $generated@@624) $generated@@163)) ($generated@@264 $generated@@624 ($generated@@154 $generated@@622 $generated@@623))) (and (= ($generated@@340 ($generated@@238 $generated@@79 $generated@@624)) $generated@@624) ($generated@@81 ($generated@@238 $generated@@79 $generated@@624) ($generated@@154 $generated@@622 $generated@@623))))
 :pattern ( ($generated@@264 $generated@@624 ($generated@@154 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@625 T@U) ($generated@@626 T@U) ($generated@@627 T@U) ) (!  (=> (and (and (and (= (type $generated@@625) $generated@@79) (= (type $generated@@626) $generated@@68)) (= (type $generated@@627) ($generated@@96 $generated@@97 $generated@@98))) (and ($generated@@260 $generated@@627) (and ($generated@@277 $generated@@625) ($generated@@94 $generated@@625 ($generated@@82 $generated@@626) $generated@@627)))) ($generated@@299 ($generated@@239 $generated@@625) $generated@@626 $generated@@627))
 :pattern ( ($generated@@299 ($generated@@239 $generated@@625) $generated@@626 $generated@@627))
)))
(assert (forall (($generated@@628 T@U) ) (! (let (($generated@@629 (type $generated@@628)))
 (not ($generated@@0 ($generated@@101 ($generated@@493 $generated@@629) $generated@@628))))
 :pattern ( (let (($generated@@629 (type $generated@@628)))
($generated@@101 ($generated@@493 $generated@@629) $generated@@628)))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@630) $generated@@68) (= (type $generated@@631) $generated@@68)) (and (= ($generated@@92 ($generated@@154 $generated@@630 $generated@@631)) $generated@@62) (= ($generated@@359 ($generated@@154 $generated@@630 $generated@@631)) $generated@@66)))
 :pattern ( ($generated@@154 $generated@@630 $generated@@631))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@79) (= ($generated@@606 ($generated@@340 $generated@@632)) ($generated@@607 $generated@@632)))
 :pattern ( ($generated@@606 ($generated@@340 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@68) (= (type $generated@@634) $generated@@78)) (= (type $generated@@635) $generated@@79)) (= (type $generated@@636) $generated@@79)) (= ($generated@@77 $generated@@633 ($generated@@233 $generated@@634) $generated@@635 $generated@@636) ($generated@@77 $generated@@633 $generated@@634 $generated@@635 $generated@@636)))
 :pattern ( ($generated@@77 $generated@@633 ($generated@@233 $generated@@634) $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@163) ($generated@@264 $generated@@637 ($generated@@95 0))) (and (= ($generated@@340 ($generated@@238 $generated@@2 $generated@@637)) $generated@@637) ($generated@@81 ($generated@@238 ($generated@@96 $generated@@163 $generated@@4) $generated@@637) ($generated@@95 0))))
 :pattern ( ($generated@@264 $generated@@637 ($generated@@95 0)))
)))
(assert (forall (($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (= (type $generated@@638) $generated@@163) (= (type $generated@@639) $generated@@68)) ($generated@@264 $generated@@638 ($generated@@280 $generated@@639))) (and (= ($generated@@340 ($generated@@238 ($generated@@96 $generated@@163 $generated@@4) $generated@@638)) $generated@@638) ($generated@@81 ($generated@@238 ($generated@@96 $generated@@163 $generated@@4) $generated@@638) ($generated@@280 $generated@@639))))
 :pattern ( ($generated@@264 $generated@@638 ($generated@@280 $generated@@639)))
)))
(assert (forall (($generated@@640 T@U) ($generated@@641 T@U) ) (!  (=> (and (and (= (type $generated@@640) $generated@@163) (= (type $generated@@641) $generated@@68)) ($generated@@264 $generated@@640 ($generated@@285 $generated@@641))) (and (= ($generated@@340 ($generated@@238 ($generated@@96 $generated@@163 $generated@@4) $generated@@640)) $generated@@640) ($generated@@81 ($generated@@238 ($generated@@96 $generated@@163 $generated@@4) $generated@@640) ($generated@@285 $generated@@641))))
 :pattern ( ($generated@@264 $generated@@640 ($generated@@285 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ($generated@@643 T@U) ) (!  (=> (and (and (= (type $generated@@642) $generated@@163) (= (type $generated@@643) $generated@@68)) ($generated@@264 $generated@@642 ($generated@@171 $generated@@643))) (and (= ($generated@@340 ($generated@@238 ($generated@@96 $generated@@163 $generated@@2) $generated@@642)) $generated@@642) ($generated@@81 ($generated@@238 ($generated@@96 $generated@@163 $generated@@2) $generated@@642) ($generated@@171 $generated@@643))))
 :pattern ( ($generated@@264 $generated@@642 ($generated@@171 $generated@@643)))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ) (!  (=> (and (and (= (type $generated@@644) $generated@@163) (= (type $generated@@645) $generated@@68)) ($generated@@264 $generated@@644 ($generated@@565 $generated@@645))) (and (= ($generated@@340 ($generated@@238 ($generated@@323 $generated@@163) $generated@@644)) $generated@@644) ($generated@@81 ($generated@@238 ($generated@@323 $generated@@163) $generated@@644) ($generated@@565 $generated@@645))))
 :pattern ( ($generated@@264 $generated@@644 ($generated@@565 $generated@@645)))
)))
(assert (forall (($generated@@646 T@U) ($generated@@647 T@U) ) (!  (=> (and (and (= (type $generated@@646) $generated@@68) (= (type $generated@@647) $generated@@163)) ($generated@@264 $generated@@647 ($generated@@82 $generated@@646))) (and (= ($generated@@340 ($generated@@238 $generated@@79 $generated@@647)) $generated@@647) ($generated@@81 ($generated@@238 $generated@@79 $generated@@647) ($generated@@82 $generated@@646))))
 :pattern ( ($generated@@264 $generated@@647 ($generated@@82 $generated@@646)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (!  (=> (and (and (and (= (type $generated@@648) $generated@@79) (= (type $generated@@649) $generated@@68)) (= (type $generated@@650) ($generated@@96 $generated@@97 $generated@@98))) (and ($generated@@260 $generated@@650) (and ($generated@@277 $generated@@648) ($generated@@94 $generated@@648 ($generated@@82 $generated@@649) $generated@@650)))) ($generated@@94 ($generated@@237 $generated@@648) ($generated@@82 $generated@@649) $generated@@650))
 :pattern ( ($generated@@94 ($generated@@237 $generated@@648) ($generated@@82 $generated@@649) $generated@@650))
)))
(assert (forall (($generated@@651 T@U) ($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (and (= (type $generated@@651) ($generated@@96 $generated@@163 $generated@@2)) (= (type $generated@@652) $generated@@68)) (= (type $generated@@653) ($generated@@96 $generated@@97 $generated@@98))) (= ($generated@@94 $generated@@651 ($generated@@171 $generated@@652) $generated@@653) (forall (($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@654) $generated@@163) (< 0 ($generated ($generated@@101 $generated@@651 $generated@@654)))) ($generated@@299 $generated@@654 $generated@@652 $generated@@653))
 :pattern ( ($generated@@101 $generated@@651 $generated@@654))
))))
 :pattern ( ($generated@@94 $generated@@651 ($generated@@171 $generated@@652) $generated@@653))
)))
(assert (= $generated@@169 ($generated@@234 $generated@@169)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (and (and (= (type $generated@@655) $generated@@79) (= (type $generated@@656) $generated@@68)) (= (type $generated@@657) ($generated@@96 $generated@@97 $generated@@98))) (and ($generated@@260 $generated@@657) (and ($generated@@153 $generated@@655) (exists (($generated@@658 T@U) ) (!  (and (= (type $generated@@658) $generated@@68) ($generated@@94 $generated@@655 ($generated@@154 $generated@@656 $generated@@658) $generated@@657))
 :pattern ( ($generated@@94 $generated@@655 ($generated@@154 $generated@@656 $generated@@658) $generated@@657))
))))) ($generated@@299 ($generated@@161 $generated@@655) $generated@@656 $generated@@657))
 :pattern ( ($generated@@299 ($generated@@161 $generated@@655) $generated@@656 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ($generated@@661 T@U) ) (!  (=> (and (and (and (= (type $generated@@659) $generated@@79) (= (type $generated@@660) $generated@@68)) (= (type $generated@@661) ($generated@@96 $generated@@97 $generated@@98))) (and ($generated@@260 $generated@@661) (and ($generated@@153 $generated@@659) (exists (($generated@@662 T@U) ) (!  (and (= (type $generated@@662) $generated@@68) ($generated@@94 $generated@@659 ($generated@@154 $generated@@662 $generated@@660) $generated@@661))
 :pattern ( ($generated@@94 $generated@@659 ($generated@@154 $generated@@662 $generated@@660) $generated@@661))
))))) ($generated@@299 ($generated@@162 $generated@@659) $generated@@660 $generated@@661))
 :pattern ( ($generated@@299 ($generated@@162 $generated@@659) $generated@@660 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) $generated@@163) (= (type $generated@@664) $generated@@163)) (= ($generated@@263 ($generated@@234 $generated@@663) ($generated@@234 $generated@@664)) ($generated@@234 ($generated@@263 $generated@@663 $generated@@664))))
 :pattern ( ($generated@@263 ($generated@@234 $generated@@663) ($generated@@234 $generated@@664)))
)))
(assert (forall (($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@665) $generated@@163) (= (type $generated@@666) $generated@@79)) (= ($generated@@293 ($generated@@234 $generated@@665) ($generated@@234 $generated@@666)) ($generated@@234 ($generated@@293 $generated@@665 $generated@@666))))
 :pattern ( ($generated@@293 ($generated@@234 $generated@@665) ($generated@@234 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ) (! (= ($generated@@340 ($generated@@234 $generated@@667)) ($generated@@234 ($generated@@340 $generated@@667)))
 :pattern ( ($generated@@340 ($generated@@234 $generated@@667)))
)))
(assert (forall (($generated@@668 T@U) ) (! (let (($generated@@669 ($generated@@324 (type $generated@@668))))
 (=> (and (= (type $generated@@668) ($generated@@323 $generated@@669)) (= ($generated@@322 $generated@@668) 0)) (= $generated@@668 ($generated@@321 $generated@@669))))
 :pattern ( ($generated@@322 $generated@@668))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (! (let (($generated@@673 (type $generated@@671)))
 (=> (and (and (= (type $generated@@670) ($generated@@96 $generated@@673 $generated@@2)) (= (type $generated@@672) $generated@@2)) (<= 0 ($generated $generated@@672))) (= ($generated@@353 ($generated@@102 $generated@@670 $generated@@671 $generated@@672)) (+ (- ($generated@@353 $generated@@670) ($generated ($generated@@101 $generated@@670 $generated@@671))) ($generated $generated@@672)))))
 :pattern ( ($generated@@353 ($generated@@102 $generated@@670 $generated@@671 $generated@@672)))
)))
(assert (forall (($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (= (type $generated@@674) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@675) $generated@@2)) ($generated@@94 $generated@@675 $generated@@46 $generated@@674))
 :pattern ( ($generated@@94 $generated@@675 $generated@@46 $generated@@674))
)))
(assert (forall (($generated@@676 T@U) ($generated@@677 T@U) ) (!  (=> (and (= (type $generated@@676) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@677) $generated@@3)) ($generated@@94 $generated@@677 $generated@@47 $generated@@676))
 :pattern ( ($generated@@94 $generated@@677 $generated@@47 $generated@@676))
)))
(assert (forall (($generated@@678 T@U) ($generated@@679 T@U) ) (!  (=> (and (= (type $generated@@678) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@679) $generated@@4)) ($generated@@94 $generated@@679 $generated@@44 $generated@@678))
 :pattern ( ($generated@@94 $generated@@679 $generated@@44 $generated@@678))
)))
(assert (forall (($generated@@680 T@U) ($generated@@681 T@U) ) (!  (=> (and (= (type $generated@@680) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@681) $generated@@517)) ($generated@@94 $generated@@681 $generated@@45 $generated@@680))
 :pattern ( ($generated@@94 $generated@@681 $generated@@45 $generated@@680))
)))
(assert (forall (($generated@@682 T@U) ($generated@@683 T@U) ) (!  (=> (and (= (type $generated@@682) ($generated@@96 $generated@@97 $generated@@98)) (= (type $generated@@683) $generated@@163)) ($generated@@94 $generated@@683 $generated@@48 $generated@@682))
 :pattern ( ($generated@@94 $generated@@683 $generated@@48 $generated@@682))
)))
(assert (forall (($generated@@684 T@U) ($generated@@685 T@U) ($generated@@686 T@U) ($generated@@687 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@684) $generated@@68) (= (type $generated@@685) $generated@@163)) (= (type $generated@@686) $generated@@79)) (= (type $generated@@687) ($generated@@96 $generated@@97 $generated@@98))) ($generated@@260 $generated@@687)) (= ($generated@@94 ($generated@@293 $generated@@685 $generated@@686) ($generated@@82 $generated@@684) $generated@@687)  (and ($generated@@299 $generated@@685 $generated@@684 $generated@@687) ($generated@@94 $generated@@686 ($generated@@82 $generated@@684) $generated@@687))))
 :pattern ( ($generated@@94 ($generated@@293 $generated@@685 $generated@@686) ($generated@@82 $generated@@684) $generated@@687))
)))
(assert (forall (($generated@@688 T@U) ($generated@@689 T@U) ) (!  (=> (and (= (type $generated@@688) ($generated@@323 $generated@@163)) (= (type $generated@@689) $generated@@68)) (= ($generated@@81 $generated@@688 ($generated@@565 $generated@@689)) (forall (($generated@@690 Int) ) (!  (=> (and (<= 0 $generated@@690) (< $generated@@690 ($generated@@322 $generated@@688))) ($generated@@264 ($generated@@566 $generated@@688 $generated@@690) $generated@@689))
 :pattern ( ($generated@@566 $generated@@688 $generated@@690))
))))
 :pattern ( ($generated@@81 $generated@@688 ($generated@@565 $generated@@689)))
)))
(assert (forall (($generated@@692 T@U) ($generated@@693 Int) ) (!  (=> (= (type $generated@@692) ($generated@@323 $generated@@163)) (=> (and (<= 0 $generated@@693) (< $generated@@693 ($generated@@322 $generated@@692))) (< ($generated@@607 ($generated@@238 $generated@@79 ($generated@@566 $generated@@692 $generated@@693))) ($generated@@691 $generated@@692))))
 :pattern ( ($generated@@607 ($generated@@238 $generated@@79 ($generated@@566 $generated@@692 $generated@@693))))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@694 T@U) ($generated@@695 T@U) ($generated@@696 T@U) ($generated@@697 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@694) $generated@@68) (= (type $generated@@695) $generated@@68)) (= (type $generated@@696) $generated@@78)) (= (type $generated@@697) $generated@@79)) (or ($generated@@235 $generated@@694 $generated@@695 $generated@@697) (and (not (= 2 $generated@@76)) ($generated@@81 $generated@@697 ($generated@@82 ($generated@@82 $generated@@695)))))) ($generated@@81 ($generated@@232 $generated@@694 $generated@@695 $generated@@696 $generated@@697) ($generated@@82 $generated@@695)))
 :pattern ( ($generated@@232 $generated@@694 $generated@@695 $generated@@696 $generated@@697))
))))
(assert (forall (($generated@@698 T@U) ($generated@@699 T@U) ($generated@@700 T@U) ) (!  (=> (and (and (and (= (type $generated@@698) ($generated@@364 $generated@@163 $generated@@163)) (= (type $generated@@699) $generated@@68)) (= (type $generated@@700) $generated@@68)) ($generated@@81 $generated@@698 ($generated@@475 $generated@@699 $generated@@700))) (and (and ($generated@@81 ($generated@@362 $generated@@698) ($generated@@280 $generated@@699)) ($generated@@81 ($generated@@409 $generated@@698) ($generated@@280 $generated@@700))) ($generated@@81 ($generated@@449 $generated@@698) ($generated@@280 ($generated@@154 $generated@@699 $generated@@700)))))
 :pattern ( ($generated@@81 $generated@@698 ($generated@@475 $generated@@699 $generated@@700)))
)))
(assert (forall (($generated@@701 T@U) ($generated@@702 T@U) ($generated@@703 T@U) ) (!  (=> (and (and (and (= (type $generated@@701) ($generated@@382 $generated@@163 $generated@@163)) (= (type $generated@@702) $generated@@68)) (= (type $generated@@703) $generated@@68)) ($generated@@81 $generated@@701 ($generated@@483 $generated@@702 $generated@@703))) (and (and ($generated@@81 ($generated@@380 $generated@@701) ($generated@@285 $generated@@702)) ($generated@@81 ($generated@@420 $generated@@701) ($generated@@285 $generated@@703))) ($generated@@81 ($generated@@457 $generated@@701) ($generated@@285 ($generated@@154 $generated@@702 $generated@@703)))))
 :pattern ( ($generated@@81 $generated@@701 ($generated@@483 $generated@@702 $generated@@703)))
)))
(assert (forall (($generated@@704 T@U) ) (!  (=> (= (type $generated@@704) $generated@@2) ($generated@@81 $generated@@704 $generated@@46))
 :pattern ( ($generated@@81 $generated@@704 $generated@@46))
)))
(assert (forall (($generated@@705 T@U) ) (!  (=> (= (type $generated@@705) $generated@@3) ($generated@@81 $generated@@705 $generated@@47))
 :pattern ( ($generated@@81 $generated@@705 $generated@@47))
)))
(assert (forall (($generated@@706 T@U) ) (!  (=> (= (type $generated@@706) $generated@@4) ($generated@@81 $generated@@706 $generated@@44))
 :pattern ( ($generated@@81 $generated@@706 $generated@@44))
)))
(assert (forall (($generated@@707 T@U) ) (!  (=> (= (type $generated@@707) $generated@@517) ($generated@@81 $generated@@707 $generated@@45))
 :pattern ( ($generated@@81 $generated@@707 $generated@@45))
)))
(assert (forall (($generated@@708 T@U) ) (!  (=> (= (type $generated@@708) $generated@@163) ($generated@@81 $generated@@708 $generated@@48))
 :pattern ( ($generated@@81 $generated@@708 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@709 () T@U)
(declare-fun $generated@@710 () T@U)
(declare-fun $generated@@711 () T@U)
(declare-fun $generated@@712 () T@U)
(declare-fun $generated@@713 () T@U)
(declare-fun $generated@@714 () T@U)
(declare-fun $generated@@715 () T@U)
(declare-fun $generated@@716 () T@U)
(declare-fun $generated@@717 () T@U)
(declare-fun $generated@@718 () T@U)
(declare-fun $generated@@719 () T@U)
(declare-fun $generated@@720 () T@U)
(declare-fun $generated@@721 () T@U)
(declare-fun $generated@@722 () T@U)
(declare-fun $generated@@723 (T@U) Bool)
(declare-fun $generated@@724 () T@U)
(declare-fun $generated@@725 () T@U)
(declare-fun $generated@@726 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@709) $generated@@68) (= (type $generated@@710) $generated@@68)) (= (type $generated@@711) $generated@@79)) (= (type $generated@@712) $generated@@79)) (= (type $generated@@713) $generated@@79)) (= (type $generated@@714) $generated@@79)) (= (type $generated@@715) $generated@@79)) (= (type $generated@@716) ($generated@@96 $generated@@97 $generated@@98))) (= (type $generated@@717) $generated@@79)) (= (type $generated@@718) $generated@@79)) (= (type $generated@@719) $generated@@79)) (= (type $generated@@720) $generated@@79)) (= (type $generated@@721) $generated@@79)) (= (type $generated@@722) ($generated@@96 $generated@@97 $generated@@98))) (= (type $generated@@724) ($generated@@178 $generated@@97 $generated@@4))) (= (type $generated@@725) $generated@@97)) (= (type $generated@@726) ($generated@@96 $generated@@97 $generated@@98))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@727  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@274 ($generated@@232 $generated@@709 $generated@@710 ($generated@@233 ($generated@@233 $generated@@240)) ($generated@@77 ($generated@@82 $generated@@710) ($generated@@233 ($generated@@233 $generated@@240)) $generated@@711 $generated@@712)) ($generated@@77 $generated@@710 ($generated@@233 ($generated@@233 $generated@@240)) ($generated@@232 $generated@@709 $generated@@710 ($generated@@233 ($generated@@233 $generated@@240)) $generated@@711) ($generated@@232 $generated@@709 $generated@@710 ($generated@@233 ($generated@@233 $generated@@240)) $generated@@712))))))
(let (($generated@@728  (=> (= $generated@@711 ($generated@@293 ($generated@@340 $generated@@713) $generated@@714)) (=> (and ($generated@@81 $generated@@713 ($generated@@82 $generated@@710)) ($generated@@81 $generated@@714 ($generated@@82 ($generated@@82 $generated@@710)))) (=> (and (and (and ($generated@@81 $generated@@715 ($generated@@82 ($generated@@82 $generated@@710))) ($generated@@94 $generated@@715 ($generated@@82 ($generated@@82 $generated@@710)) $generated@@716)) (= $generated@@717 $generated@@714)) (and ($generated@@81 $generated@@717 ($generated@@82 ($generated@@82 $generated@@710))) (= $generated@@715 $generated@@717))) (=> (and (and (and (and (and ($generated@@81 $generated@@718 ($generated@@82 $generated@@710)) ($generated@@94 $generated@@718 ($generated@@82 $generated@@710) $generated@@716)) (= $generated@@719 $generated@@713)) (and (and ($generated@@81 $generated@@719 ($generated@@82 $generated@@710)) (= $generated@@718 $generated@@719)) (and ($generated@@94 $generated@@715 ($generated@@82 ($generated@@82 $generated@@710)) $generated@@716) ($generated@@235 $generated@@709 $generated@@710 $generated@@715)))) (and (and (and ($generated@@235 $generated@@709 $generated@@710 $generated@@715) (= $generated@@720 ($generated@@232 $generated@@709 $generated@@710 ($generated@@233 $generated@@240) $generated@@715))) (and ($generated@@94 $generated@@712 ($generated@@82 ($generated@@82 $generated@@710)) $generated@@716) ($generated@@235 $generated@@709 $generated@@710 $generated@@712))) (and (and ($generated@@235 $generated@@709 $generated@@710 $generated@@712) (= $generated@@721 ($generated@@232 $generated@@709 $generated@@710 ($generated@@233 $generated@@240) $generated@@712))) (and ($generated@@260 $generated@@722) ($generated@@723 $generated@@722))))) (and (and (and (and ($generated@@430 ($generated@@77 $generated@@710 ($generated@@233 $generated@@240) ($generated@@77 $generated@@710 ($generated@@233 $generated@@240) $generated@@718 $generated@@720) $generated@@721)) ($generated@@430 ($generated@@77 $generated@@710 ($generated@@233 $generated@@240) $generated@@718 ($generated@@77 $generated@@710 ($generated@@233 $generated@@240) $generated@@720 $generated@@721)))) (and (and ($generated@@80 $generated@@710 $generated@@718 $generated@@720) ($generated@@80 $generated@@710 ($generated@@77 $generated@@710 ($generated@@233 $generated@@240) $generated@@718 $generated@@720) $generated@@721)) (and ($generated@@80 $generated@@710 $generated@@720 $generated@@721) ($generated@@80 $generated@@710 $generated@@718 ($generated@@77 $generated@@710 ($generated@@233 $generated@@240) $generated@@720 $generated@@721))))) ($generated@@274 ($generated@@77 $generated@@710 ($generated@@233 ($generated@@233 $generated@@240)) ($generated@@77 $generated@@710 ($generated@@233 ($generated@@233 $generated@@240)) $generated@@718 $generated@@720) $generated@@721) ($generated@@77 $generated@@710 ($generated@@233 ($generated@@233 $generated@@240)) $generated@@718 ($generated@@77 $generated@@710 ($generated@@233 ($generated@@233 $generated@@240)) $generated@@720 $generated@@721)))) (and (= $generated@@716 $generated@@722) (= (ControlFlow 0 5) 3)))) $generated@@727))))))
(let (($generated@@729  (=> (and (= $generated@@711 $generated@@169) (= (ControlFlow 0 4) 3)) $generated@@727)))
(let (($generated@@730 true))
(let (($generated@@731  (=> (not (= $generated@@711 $generated@@169)) (and (=> (= (ControlFlow 0 6) 5) $generated@@728) (=> (= (ControlFlow 0 6) 1) $generated@@730)))))
(let (($generated@@732  (=> (= $generated@@724 ($generated@@177 $generated@@725 $generated@@726 $generated@@60 false)) (=> (and ($generated@@430 $generated@@711) ($generated@@430 $generated@@712)) (=> (and (and ($generated@@260 $generated@@716) ($generated@@723 $generated@@716)) (and (= $generated@@726 $generated@@716) (forall (($generated@@733 T@U) ($generated@@734 T@U) ) (!  (=> (and (= (type $generated@@733) $generated@@79) (= (type $generated@@734) $generated@@79)) (=> (and (and (and ($generated@@81 $generated@@733 ($generated@@82 ($generated@@82 $generated@@710))) ($generated@@81 $generated@@734 ($generated@@82 ($generated@@82 $generated@@710)))) ($generated@@0 ($generated@@234 ($generated@@11 true)))) (or (< ($generated@@607 $generated@@733) ($generated@@607 $generated@@711)) (and (= ($generated@@607 $generated@@733) ($generated@@607 $generated@@711)) (< ($generated@@607 $generated@@734) ($generated@@607 $generated@@712))))) ($generated@@274 ($generated@@232 $generated@@709 $generated@@710 ($generated@@233 $generated@@240) ($generated@@77 ($generated@@82 $generated@@710) ($generated@@233 $generated@@240) $generated@@733 $generated@@734)) ($generated@@77 $generated@@710 ($generated@@233 $generated@@240) ($generated@@232 $generated@@709 $generated@@710 ($generated@@233 $generated@@240) $generated@@733) ($generated@@232 $generated@@709 $generated@@710 ($generated@@233 $generated@@240) $generated@@734)))))
 :no-pattern (type $generated@@733)
 :no-pattern (type $generated@@734)
 :no-pattern ($generated $generated@@733)
 :no-pattern ($generated@@0 $generated@@733)
 :no-pattern ($generated $generated@@734)
 :no-pattern ($generated@@0 $generated@@734)
)))) (and (=> (= (ControlFlow 0 7) 4) $generated@@729) (=> (= (ControlFlow 0 7) 6) $generated@@731)))))))
(let (($generated@@735  (=> (and ($generated@@260 $generated@@726) ($generated@@723 $generated@@726)) (=> (and (and ($generated@@81 $generated@@711 ($generated@@82 ($generated@@82 $generated@@710))) ($generated@@94 $generated@@711 ($generated@@82 ($generated@@82 $generated@@710)) $generated@@726)) ($generated@@430 $generated@@711)) (=> (and (and (and ($generated@@81 $generated@@712 ($generated@@82 ($generated@@82 $generated@@710))) ($generated@@94 $generated@@712 ($generated@@82 ($generated@@82 $generated@@710)) $generated@@726)) ($generated@@430 $generated@@712)) (and (= 3 $generated@@76) (= (ControlFlow 0 8) 7))) $generated@@732)))))
$generated@@735))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
