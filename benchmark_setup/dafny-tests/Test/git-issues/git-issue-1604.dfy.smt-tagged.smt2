(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@147 () Int)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U) T@U)
(declare-fun $generated@@180 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@181 (T@T T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@T) T@T)
(declare-fun $generated@@184 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@235 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@251 (T@U T@U) T@U)
(declare-fun $generated@@252 (T@U T@U) Bool)
(declare-fun $generated@@259 (T@U) Bool)
(declare-fun $generated@@260 (T@U) Bool)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@269 (T@U) T@U)
(declare-fun $generated@@274 (Int) Int)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@280 (T@U) Bool)
(declare-fun $generated@@281 (T@U T@U T@U) Bool)
(declare-fun $generated@@287 (T@U) T@U)
(declare-fun $generated@@293 (T@T) T@U)
(declare-fun $generated@@294 (T@U) Int)
(declare-fun $generated@@295 (T@T) T@T)
(declare-fun $generated@@296 (T@T) T@T)
(declare-fun $generated@@301 (Int Int) Int)
(declare-fun $generated@@303 (T@U) T@U)
(declare-fun $generated@@308 (T@U) Int)
(declare-fun $generated@@309 (T@T) T@U)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@315 (T@T T@T) T@U)
(declare-fun $generated@@316 (T@T T@T) T@T)
(declare-fun $generated@@317 (T@T) T@T)
(declare-fun $generated@@318 (T@T) T@T)
(declare-fun $generated@@332 (T@U) T@U)
(declare-fun $generated@@333 (T@T T@T) T@U)
(declare-fun $generated@@334 (T@T T@T) T@T)
(declare-fun $generated@@335 (T@T) T@T)
(declare-fun $generated@@336 (T@T) T@T)
(declare-fun $generated@@353 (T@T T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@377 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@398 (T@U) T@U)
(declare-fun $generated@@405 (T@U) T@U)
(declare-fun $generated@@406 (T@U) T@U)
(declare-fun $generated@@423 (T@U T@U) T@U)
(declare-fun $generated@@431 (T@U T@U) T@U)
(declare-fun $generated@@441 (T@T) T@U)
(declare-fun $generated@@465 () T@T)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@477 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@487 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@499 (T@U) T@U)
(declare-fun $generated@@507 (T@U) T@U)
(declare-fun $generated@@508 (T@U Int) T@U)
(declare-fun $generated@@517 (T@U) Int)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@531 (T@U) T@U)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@546 (T@U) Int)
(declare-fun $generated@@562 (T@U) T@U)
(declare-fun $generated@@617 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (= (type $generated@@138) $generated@@70) (= (type $generated@@139) $generated@@83)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@83) (= (type $generated@@141) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@140 $generated@@138 $generated@@141)  (or (= $generated@@140 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@141 $generated@@140) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@140 $generated@@138 $generated@@141))
)))
(assert (= (type $generated@@142) $generated@@70))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@83) (= (type $generated@@144) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@143 $generated@@142 $generated@@144)  (or (= $generated@@143 $generated@@139) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@143 $generated@@142 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> (= (type $generated@@146) $generated@@2) ($generated@@145 $generated@@146 ($generated@@81 0)))
 :pattern ( ($generated@@145 $generated@@146 ($generated@@81 0)))
)))
(assert (= (type $generated@@150) $generated@@70))
(assert  (=> (<= 1 $generated@@147) (forall (($generated@@151 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@83) (or ($generated@@149 $generated@@151) (and (not (= 1 $generated@@147)) ($generated@@145 $generated@@151 $generated@@150)))) true)
 :pattern ( ($generated@@148 $generated@@151))
))))
(assert ($generated@@152 $generated@@142))
(assert  (and (= ($generated@@1 $generated@@155) 14) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@156 $generated@@157)) $generated@@70)
 :pattern ( ($generated@@154 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and (and (= (type $generated@@158) $generated@@70) (= (type $generated@@159) $generated@@70)) (= (type $generated@@160) $generated@@155)) ($generated@@145 $generated@@160 ($generated@@154 $generated@@158 $generated@@159))) ($generated@@153 $generated@@160))
 :pattern ( ($generated@@153 $generated@@160) ($generated@@145 $generated@@160 ($generated@@154 $generated@@158 $generated@@159)))
)))
(assert  (and (and (= ($generated@@1 $generated@@164) 15) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@164)
 :pattern ( ($generated@@162 $generated@@165))
))) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@164)
 :pattern ( ($generated@@163 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (= (type $generated@@167) $generated@@155) (= (type $generated@@168) $generated@@155)) true) (= ($generated@@161 $generated@@167 $generated@@168)  (and (= ($generated@@162 $generated@@167) ($generated@@162 $generated@@168)) (= ($generated@@163 $generated@@167) ($generated@@163 $generated@@168)))))
 :pattern ( ($generated@@161 $generated@@167 $generated@@168))
)))
(assert (= (type $generated@@169) $generated@@70))
(assert (forall (($generated@@170 T@U) ) (!  (=> (= (type $generated@@170) $generated@@83) (=> (and (not (= $generated@@170 $generated@@139)) ($generated@@145 $generated@@170 $generated@@142)) ($generated@@145 $generated@@170 $generated@@169)))
 :pattern ( ($generated@@145 $generated@@170 $generated@@142))
)))
(assert (forall (($generated@@173 T@U) ) (! (= (type ($generated@@171 $generated@@173)) $generated@@70)
 :pattern ( ($generated@@171 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (= (type $generated@@174) ($generated@@82 $generated@@164 $generated@@2)) (= (type $generated@@175) $generated@@70)) ($generated@@145 $generated@@174 ($generated@@171 $generated@@175))) ($generated@@172 $generated@@174))
 :pattern ( ($generated@@145 $generated@@174 ($generated@@171 $generated@@175)))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@176 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ) (!  (=> (= (type $generated@@178) $generated@@83) (= ($generated@@145 $generated@@178 $generated@@142)  (or (= $generated@@178 $generated@@139) (= ($generated@@176 $generated@@178) $generated@@142))))
 :pattern ( ($generated@@145 $generated@@178 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (= ($generated@@1 ($generated@@181 $generated@@185 $generated@@186)) 16)) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@182 ($generated@@181 $generated@@187 $generated@@188)) $generated@@187)
 :pattern ( ($generated@@181 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@183 ($generated@@181 $generated@@189 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@181 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (let (($generated@@194 ($generated@@183 (type $generated@@191))))
(= (type ($generated@@179 $generated@@191 $generated@@192 $generated@@193)) $generated@@194))
 :pattern ( ($generated@@179 $generated@@191 $generated@@192 $generated@@193))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (let (($generated@@199 (type $generated@@198)))
(let (($generated@@200 (type $generated@@196)))
(= (type ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@198)) ($generated@@181 $generated@@200 $generated@@199))))
 :pattern ( ($generated@@184 $generated@@195 $generated@@196 $generated@@197 $generated@@198))
))) (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (let (($generated@@205 ($generated@@183 (type $generated@@201))))
 (=> (= (type $generated@@204) $generated@@205) (= ($generated@@179 ($generated@@184 $generated@@201 $generated@@202 $generated@@203 $generated@@204) $generated@@202 $generated@@203) $generated@@204)))
 :weight 0
))) (and (and (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@179 ($generated@@184 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@179 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@179 ($generated@@184 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@179 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (or true (= ($generated@@179 ($generated@@184 $generated@@219 $generated@@220 $generated@@221 $generated@@218) $generated@@222 $generated@@223) ($generated@@179 $generated@@219 $generated@@222 $generated@@223)))
 :weight 0
)))) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 Bool) ) (! (= (type ($generated@@180 $generated@@224 $generated@@225 $generated@@226 $generated@@227)) ($generated@@181 $generated@@83 $generated@@4))
 :pattern ( ($generated@@180 $generated@@224 $generated@@225 $generated@@226 $generated@@227))
))))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ($generated@@232 T@U) ($generated@@233 T@U) ) (! (let (($generated@@234 ($generated@@73 (type $generated@@233))))
 (=> (and (and (and (and (= (type $generated@@228) $generated@@83) (= (type $generated@@229) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@230) ($generated@@72 $generated@@4))) (= (type $generated@@232) $generated@@83)) (= (type $generated@@233) ($generated@@72 $generated@@234))) (= ($generated@@0 ($generated@@179 ($generated@@180 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))  (=> (and (not (= $generated@@232 $generated@@228)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@229 $generated@@232) $generated@@230))) $generated@@231))))
 :pattern ( ($generated@@179 ($generated@@180 $generated@@228 $generated@@229 $generated@@230 $generated@@231) $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ) (! (= (type ($generated@@235 $generated@@236 $generated@@237 $generated@@238 $generated@@239)) ($generated@@181 $generated@@83 $generated@@4))
 :pattern ( ($generated@@235 $generated@@236 $generated@@237 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 Bool) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (let (($generated@@246 ($generated@@73 (type $generated@@245))))
 (=> (and (and (and (and (= (type $generated@@240) $generated@@83) (= (type $generated@@241) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@242) ($generated@@72 $generated@@4))) (= (type $generated@@244) $generated@@83)) (= (type $generated@@245) ($generated@@72 $generated@@246))) (= ($generated@@0 ($generated@@179 ($generated@@235 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))  (=> (and (not (= $generated@@244 $generated@@240)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@241 $generated@@244) $generated@@242))) $generated@@243))))
 :pattern ( ($generated@@179 ($generated@@235 $generated@@240 $generated@@241 $generated@@242 $generated@@243) $generated@@244 $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (= (type $generated@@247) $generated@@83) (= (type $generated@@248) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@247 $generated@@169 $generated@@248) ($generated@@80 $generated@@247 $generated@@138 $generated@@248)))
 :pattern ( ($generated@@80 $generated@@247 $generated@@169 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@83) (= (type $generated@@250) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@249 $generated@@150 $generated@@250) ($generated@@80 $generated@@249 $generated@@142 $generated@@250)))
 :pattern ( ($generated@@80 $generated@@249 $generated@@150 $generated@@250))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (! (= (type ($generated@@251 $generated@@253 $generated@@254)) $generated@@155)
 :pattern ( ($generated@@251 $generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (and (and (= (type $generated@@255) $generated@@70) (= (type $generated@@256) $generated@@70)) (= (type $generated@@257) $generated@@164)) (= (type $generated@@258) $generated@@164)) (= ($generated@@145 ($generated@@251 $generated@@257 $generated@@258) ($generated@@154 $generated@@255 $generated@@256))  (and ($generated@@252 $generated@@257 $generated@@255) ($generated@@252 $generated@@258 $generated@@256))))
 :pattern ( ($generated@@145 ($generated@@251 $generated@@257 $generated@@258) ($generated@@154 $generated@@255 $generated@@256)))
)))
(assert  (=> (<= 2 $generated@@147) (forall (($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@261) $generated@@83) (or ($generated@@260 $generated@@261) (and (not (= 2 $generated@@147)) (and ($generated@@145 $generated@@261 $generated@@169) (and ($generated@@145 $generated@@261 $generated@@150) ($generated@@148 $generated@@261)))))) true)
 :pattern ( ($generated@@259 $generated@@261))
))))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@155) (= (type $generated@@263) $generated@@155)) (= ($generated@@161 $generated@@262 $generated@@263) (= $generated@@262 $generated@@263)))
 :pattern ( ($generated@@161 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ) (! (= (type ($generated@@264 $generated@@265)) $generated@@70)
 :pattern ( ($generated@@264 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@266) ($generated@@82 $generated@@164 $generated@@4)) (= (type $generated@@267) $generated@@70)) (= ($generated@@145 $generated@@266 ($generated@@264 $generated@@267)) (forall (($generated@@268 T@U) ) (!  (=> (and (= (type $generated@@268) $generated@@164) ($generated@@0 ($generated@@87 $generated@@266 $generated@@268))) ($generated@@252 $generated@@268 $generated@@267))
 :pattern ( ($generated@@87 $generated@@266 $generated@@268))
))))
 :pattern ( ($generated@@145 $generated@@266 ($generated@@264 $generated@@267)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= (type ($generated@@269 $generated@@270)) $generated@@70)
 :pattern ( ($generated@@269 $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) ($generated@@82 $generated@@164 $generated@@4)) (= (type $generated@@272) $generated@@70)) (= ($generated@@145 $generated@@271 ($generated@@269 $generated@@272)) (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@164) ($generated@@0 ($generated@@87 $generated@@271 $generated@@273))) ($generated@@252 $generated@@273 $generated@@272))
 :pattern ( ($generated@@87 $generated@@271 $generated@@273))
))))
 :pattern ( ($generated@@145 $generated@@271 ($generated@@269 $generated@@272)))
)))
(assert (forall (($generated@@275 Int) ) (! (= ($generated@@274 $generated@@275) $generated@@275)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (let (($generated@@278 (type $generated@@277)))
(= (type ($generated@@276 $generated@@277)) $generated@@278))
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@279 T@U) ) (! (= ($generated@@276 $generated@@279) $generated@@279)
 :pattern ( ($generated@@276 $generated@@279))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@282) $generated@@70) (= (type $generated@@283) $generated@@70)) (= (type $generated@@284) $generated@@164)) (= (type $generated@@285) $generated@@164)) (= (type $generated@@286) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@280 $generated@@286)) (= ($generated@@80 ($generated@@251 $generated@@284 $generated@@285) ($generated@@154 $generated@@282 $generated@@283) $generated@@286)  (and ($generated@@281 $generated@@284 $generated@@282 $generated@@286) ($generated@@281 $generated@@285 $generated@@283 $generated@@286))))
 :pattern ( ($generated@@80 ($generated@@251 $generated@@284 $generated@@285) ($generated@@154 $generated@@282 $generated@@283) $generated@@286))
)))
(assert (forall (($generated@@288 T@U) ) (! (= (type ($generated@@287 $generated@@288)) $generated@@74)
 :pattern ( ($generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ) (!  (=> (= (type $generated@@289) $generated@@155) (= ($generated@@153 $generated@@289) (= ($generated@@287 $generated@@289) $generated@@61)))
 :pattern ( ($generated@@153 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ) (!  (=> (and (= (type $generated@@290) $generated@@155) ($generated@@153 $generated@@290)) (exists (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (and (and (= (type $generated@@291) $generated@@164) (= (type $generated@@292) $generated@@164)) (= $generated@@290 ($generated@@251 $generated@@291 $generated@@292)))
 :no-pattern (type $generated@@291)
 :no-pattern (type $generated@@292)
 :no-pattern ($generated $generated@@291)
 :no-pattern ($generated@@0 $generated@@291)
 :no-pattern ($generated $generated@@292)
 :no-pattern ($generated@@0 $generated@@292)
)))
 :pattern ( ($generated@@153 $generated@@290))
)))
(assert  (and (and (forall (($generated@@297 T@T) ) (= ($generated@@1 ($generated@@295 $generated@@297)) 17)) (forall (($generated@@298 T@T) ) (! (= ($generated@@296 ($generated@@295 $generated@@298)) $generated@@298)
 :pattern ( ($generated@@295 $generated@@298))
))) (forall (($generated@@299 T@T) ) (! (= (type ($generated@@293 $generated@@299)) ($generated@@295 $generated@@299))
 :pattern ( ($generated@@293 $generated@@299))
))))
(assert (forall (($generated@@300 T@T) ) (! (= ($generated@@294 ($generated@@293 $generated@@300)) 0)
 :pattern ( ($generated@@293 $generated@@300))
)))
(assert  (=> (<= 2 $generated@@147) (forall (($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@302) $generated@@83) (or ($generated@@260 ($generated@@276 $generated@@302)) (and (not (= 2 $generated@@147)) (and ($generated@@145 $generated@@302 $generated@@169) (and ($generated@@145 ($generated@@276 $generated@@302) $generated@@150) ($generated@@148 ($generated@@276 $generated@@302))))))) (= ($generated@@259 ($generated@@276 $generated@@302)) (= ($generated@@274 ($generated@@301 1 ($generated@@274 0))) ($generated@@274 0))))
 :weight 3
 :pattern ( ($generated@@259 ($generated@@276 $generated@@302)))
))))
(assert (forall (($generated@@304 T@U) ) (! (= (type ($generated@@303 $generated@@304)) $generated@@164)
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (= (type $generated@@306) $generated@@70) (= (type $generated@@307) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@281 ($generated@@303 $generated@@305) $generated@@306 $generated@@307) ($generated@@80 $generated@@305 $generated@@306 $generated@@307)))
 :pattern ( ($generated@@281 ($generated@@303 $generated@@305) $generated@@306 $generated@@307))
)))
(assert (forall (($generated@@310 T@T) ) (! (= (type ($generated@@309 $generated@@310)) ($generated@@82 $generated@@310 $generated@@2))
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ) (! (let (($generated@@312 ($generated@@85 (type $generated@@311))))
 (=> (= (type $generated@@311) ($generated@@82 $generated@@312 $generated@@2)) (and (= (= ($generated@@308 $generated@@311) 0) (= $generated@@311 ($generated@@309 $generated@@312))) (=> (not (= ($generated@@308 $generated@@311) 0)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@312) (< 0 ($generated ($generated@@87 $generated@@311 $generated@@313))))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@308 $generated@@311))
)))
(assert  (and (and (and (and (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (= ($generated@@1 ($generated@@316 $generated@@319 $generated@@320)) 18)) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@317 ($generated@@316 $generated@@321 $generated@@322)) $generated@@321)
 :pattern ( ($generated@@316 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (! (= ($generated@@318 ($generated@@316 $generated@@323 $generated@@324)) $generated@@324)
 :pattern ( ($generated@@316 $generated@@323 $generated@@324))
))) (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@317 (type $generated@@325))))
(= (type ($generated@@314 $generated@@325)) ($generated@@82 $generated@@326 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@325))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= (type ($generated@@315 $generated@@327 $generated@@328)) ($generated@@316 $generated@@327 $generated@@328))
 :pattern ( ($generated@@315 $generated@@327 $generated@@328))
))))
(assert (forall (($generated@@329 T@U) ($generated@@330 T@T) ) (! (let (($generated@@331 (type $generated@@329)))
 (not ($generated@@0 ($generated@@87 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329))))
 :pattern ( (let (($generated@@331 (type $generated@@329)))
($generated@@87 ($generated@@314 ($generated@@315 $generated@@331 $generated@@330)) $generated@@329)))
)))
(assert  (and (and (and (and (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (= ($generated@@1 ($generated@@334 $generated@@337 $generated@@338)) 19)) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@335 ($generated@@334 $generated@@339 $generated@@340)) $generated@@339)
 :pattern ( ($generated@@334 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= ($generated@@336 ($generated@@334 $generated@@341 $generated@@342)) $generated@@342)
 :pattern ( ($generated@@334 $generated@@341 $generated@@342))
))) (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@335 (type $generated@@343))))
(= (type ($generated@@332 $generated@@343)) ($generated@@82 $generated@@344 $generated@@4)))
 :pattern ( ($generated@@332 $generated@@343))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= (type ($generated@@333 $generated@@345 $generated@@346)) ($generated@@334 $generated@@345 $generated@@346))
 :pattern ( ($generated@@333 $generated@@345 $generated@@346))
))))
(assert (forall (($generated@@347 T@U) ($generated@@348 T@T) ) (! (let (($generated@@349 (type $generated@@347)))
 (not ($generated@@0 ($generated@@87 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347))))
 :pattern ( (let (($generated@@349 (type $generated@@347)))
($generated@@87 ($generated@@332 ($generated@@333 $generated@@349 $generated@@348)) $generated@@347)))
)))
(assert (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@85 (type $generated@@350))))
 (=> (= (type $generated@@350) ($generated@@82 $generated@@351 $generated@@2)) (= ($generated@@172 $generated@@350) (forall (($generated@@352 T@U) ) (!  (=> (= (type $generated@@352) $generated@@351) (and (<= 0 ($generated ($generated@@87 $generated@@350 $generated@@352))) (<= ($generated ($generated@@87 $generated@@350 $generated@@352)) ($generated@@308 $generated@@350))))
 :pattern ( ($generated@@87 $generated@@350 $generated@@352))
)))))
 :pattern ( ($generated@@172 $generated@@350))
)))
(assert (forall (($generated@@354 T@T) ($generated@@355 T@U) ) (! (= (type ($generated@@353 $generated@@354 $generated@@355)) $generated@@354)
 :pattern ( ($generated@@353 $generated@@354 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@164) ($generated@@252 $generated@@356 $generated@@138)) (and (= ($generated@@303 ($generated@@353 $generated@@83 $generated@@356)) $generated@@356) ($generated@@145 ($generated@@353 $generated@@83 $generated@@356) $generated@@138)))
 :pattern ( ($generated@@252 $generated@@356 $generated@@138))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@164) ($generated@@252 $generated@@357 $generated@@169)) (and (= ($generated@@303 ($generated@@353 $generated@@83 $generated@@357)) $generated@@357) ($generated@@145 ($generated@@353 $generated@@83 $generated@@357) $generated@@169)))
 :pattern ( ($generated@@252 $generated@@357 $generated@@169))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (and (= (type $generated@@358) $generated@@164) ($generated@@252 $generated@@358 $generated@@142)) (and (= ($generated@@303 ($generated@@353 $generated@@83 $generated@@358)) $generated@@358) ($generated@@145 ($generated@@353 $generated@@83 $generated@@358) $generated@@142)))
 :pattern ( ($generated@@252 $generated@@358 $generated@@142))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@164) ($generated@@252 $generated@@359 $generated@@150)) (and (= ($generated@@303 ($generated@@353 $generated@@83 $generated@@359)) $generated@@359) ($generated@@145 ($generated@@353 $generated@@83 $generated@@359) $generated@@150)))
 :pattern ( ($generated@@252 $generated@@359 $generated@@150))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (= (type $generated@@360) $generated@@83) (= ($generated@@145 $generated@@360 $generated@@169)  (and ($generated@@145 $generated@@360 $generated@@138) (not (= $generated@@360 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@360 $generated@@169))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (= (type $generated@@361) $generated@@83) (= ($generated@@145 $generated@@361 $generated@@150)  (and ($generated@@145 $generated@@361 $generated@@142) (not (= $generated@@361 $generated@@139)))))
 :pattern ( ($generated@@145 $generated@@361 $generated@@150))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@318 (type $generated@@362))))
(let (($generated@@364 ($generated@@317 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@316 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@315 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@87 ($generated@@314 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@314 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@318 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@82 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@318 (type $generated@@369))))
(let (($generated@@371 ($generated@@317 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@316 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@315 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@87 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@336 (type $generated@@373))))
(let (($generated@@375 ($generated@@335 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@334 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@333 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@375) ($generated@@0 ($generated@@87 ($generated@@332 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@332 $generated@@373))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@336 (type $generated@@378))))
(= (type ($generated@@377 $generated@@378)) ($generated@@82 $generated@@379 $generated@@4)))
 :pattern ( ($generated@@377 $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@336 (type $generated@@380))))
(let (($generated@@382 ($generated@@335 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@334 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@333 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@381) ($generated@@0 ($generated@@87 ($generated@@377 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@377 $generated@@380))
)))
(assert (forall (($generated@@384 T@U) ($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@384) ($generated@@82 $generated@@164 $generated@@2)) (= (type $generated@@385) $generated@@70)) (= ($generated@@145 $generated@@384 ($generated@@171 $generated@@385)) (forall (($generated@@386 T@U) ) (!  (=> (and (= (type $generated@@386) $generated@@164) (< 0 ($generated ($generated@@87 $generated@@384 $generated@@386)))) ($generated@@252 $generated@@386 $generated@@385))
 :pattern ( ($generated@@87 $generated@@384 $generated@@386))
))))
 :pattern ( ($generated@@145 $generated@@384 ($generated@@171 $generated@@385)))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (and (= (type $generated@@387) ($generated@@82 $generated@@164 $generated@@4)) (= (type $generated@@388) $generated@@70)) (= (type $generated@@389) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@387 ($generated@@264 $generated@@388) $generated@@389) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@164) ($generated@@0 ($generated@@87 $generated@@387 $generated@@390))) ($generated@@281 $generated@@390 $generated@@388 $generated@@389))
 :pattern ( ($generated@@87 $generated@@387 $generated@@390))
))))
 :pattern ( ($generated@@80 $generated@@387 ($generated@@264 $generated@@388) $generated@@389))
)))
(assert (forall (($generated@@391 T@U) ($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (and (= (type $generated@@391) ($generated@@82 $generated@@164 $generated@@4)) (= (type $generated@@392) $generated@@70)) (= (type $generated@@393) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@391 ($generated@@269 $generated@@392) $generated@@393) (forall (($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@394) $generated@@164) ($generated@@0 ($generated@@87 $generated@@391 $generated@@394))) ($generated@@281 $generated@@394 $generated@@392 $generated@@393))
 :pattern ( ($generated@@87 $generated@@391 $generated@@394))
))))
 :pattern ( ($generated@@80 $generated@@391 ($generated@@269 $generated@@392) $generated@@393))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 (type $generated@@395)))
(= ($generated ($generated@@87 ($generated@@309 $generated@@396) $generated@@395)) 0))
 :pattern ( (let (($generated@@396 (type $generated@@395)))
($generated@@87 ($generated@@309 $generated@@396) $generated@@395)))
)))
(assert  (and (forall (($generated@@399 T@U) ) (! (= (type ($generated@@397 $generated@@399)) ($generated@@82 $generated@@164 $generated@@4))
 :pattern ( ($generated@@397 $generated@@399))
)) (forall (($generated@@400 T@U) ) (! (let (($generated@@401 ($generated@@318 (type $generated@@400))))
(let (($generated@@402 ($generated@@317 (type $generated@@400))))
(= (type ($generated@@398 $generated@@400)) ($generated@@82 $generated@@402 $generated@@401))))
 :pattern ( ($generated@@398 $generated@@400))
))))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@403) ($generated@@316 $generated@@164 $generated@@164)) (= (type $generated@@404) $generated@@164)) (= ($generated@@0 ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))  (and ($generated@@0 ($generated@@87 ($generated@@314 $generated@@403) ($generated@@162 ($generated@@353 $generated@@155 $generated@@404)))) (= ($generated@@87 ($generated@@398 $generated@@403) ($generated@@162 ($generated@@353 $generated@@155 $generated@@404))) ($generated@@163 ($generated@@353 $generated@@155 $generated@@404))))))
 :pattern ( ($generated@@87 ($generated@@397 $generated@@403) $generated@@404))
)))
(assert  (and (forall (($generated@@407 T@U) ) (! (= (type ($generated@@405 $generated@@407)) ($generated@@82 $generated@@164 $generated@@4))
 :pattern ( ($generated@@405 $generated@@407))
)) (forall (($generated@@408 T@U) ) (! (let (($generated@@409 ($generated@@336 (type $generated@@408))))
(let (($generated@@410 ($generated@@335 (type $generated@@408))))
(= (type ($generated@@406 $generated@@408)) ($generated@@82 $generated@@410 $generated@@409))))
 :pattern ( ($generated@@406 $generated@@408))
))))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@411) ($generated@@334 $generated@@164 $generated@@164)) (= (type $generated@@412) $generated@@164)) (= ($generated@@0 ($generated@@87 ($generated@@405 $generated@@411) $generated@@412))  (and ($generated@@0 ($generated@@87 ($generated@@332 $generated@@411) ($generated@@162 ($generated@@353 $generated@@155 $generated@@412)))) (= ($generated@@87 ($generated@@406 $generated@@411) ($generated@@162 ($generated@@353 $generated@@155 $generated@@412))) ($generated@@163 ($generated@@353 $generated@@155 $generated@@412))))))
 :pattern ( ($generated@@87 ($generated@@405 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@317 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@316 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@87 ($generated@@366 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@87 ($generated@@314 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@87 ($generated@@398 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@87 ($generated@@314 $generated@@413) $generated@@417))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@87 ($generated@@366 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@418 T@U) ($generated@@419 T@U) ) (! (let (($generated@@420 (type $generated@@419)))
(let (($generated@@421 ($generated@@335 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@334 $generated@@421 $generated@@420)) (= ($generated@@0 ($generated@@87 ($generated@@377 $generated@@418) $generated@@419)) (exists (($generated@@422 T@U) ) (!  (and (= (type $generated@@422) $generated@@421) (and ($generated@@0 ($generated@@87 ($generated@@332 $generated@@418) $generated@@422)) (= $generated@@419 ($generated@@87 ($generated@@406 $generated@@418) $generated@@422))))
 :pattern ( ($generated@@87 ($generated@@332 $generated@@418) $generated@@422))
 :pattern ( ($generated@@87 ($generated@@406 $generated@@418) $generated@@422))
))))))
 :pattern ( ($generated@@87 ($generated@@377 $generated@@418) $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (= (type ($generated@@423 $generated@@424 $generated@@425)) $generated@@70)
 :pattern ( ($generated@@423 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (and (and (= (type $generated@@426) ($generated@@316 $generated@@164 $generated@@164)) (= (type $generated@@427) $generated@@70)) (= (type $generated@@428) $generated@@70)) (= (type $generated@@429) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429) (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@164) ($generated@@0 ($generated@@87 ($generated@@314 $generated@@426) $generated@@430))) (and ($generated@@281 ($generated@@87 ($generated@@398 $generated@@426) $generated@@430) $generated@@428 $generated@@429) ($generated@@281 $generated@@430 $generated@@427 $generated@@429)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@426) $generated@@430))
 :pattern ( ($generated@@87 ($generated@@314 $generated@@426) $generated@@430))
))))
 :pattern ( ($generated@@80 $generated@@426 ($generated@@423 $generated@@427 $generated@@428) $generated@@429))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ) (! (= (type ($generated@@431 $generated@@432 $generated@@433)) $generated@@70)
 :pattern ( ($generated@@431 $generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ($generated@@436 T@U) ($generated@@437 T@U) ) (!  (=> (and (and (and (= (type $generated@@434) ($generated@@334 $generated@@164 $generated@@164)) (= (type $generated@@435) $generated@@70)) (= (type $generated@@436) $generated@@70)) (= (type $generated@@437) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437) (forall (($generated@@438 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@164) ($generated@@0 ($generated@@87 ($generated@@332 $generated@@434) $generated@@438))) (and ($generated@@281 ($generated@@87 ($generated@@406 $generated@@434) $generated@@438) $generated@@436 $generated@@437) ($generated@@281 $generated@@438 $generated@@435 $generated@@437)))
 :pattern ( ($generated@@87 ($generated@@406 $generated@@434) $generated@@438))
 :pattern ( ($generated@@87 ($generated@@332 $generated@@434) $generated@@438))
))))
 :pattern ( ($generated@@80 $generated@@434 ($generated@@431 $generated@@435 $generated@@436) $generated@@437))
)))
(assert (forall (($generated@@439 Int) ($generated@@440 Int) ) (! (= ($generated@@301 $generated@@439 $generated@@440) (div $generated@@439 $generated@@440))
 :pattern ( ($generated@@301 $generated@@439 $generated@@440))
)))
(assert (forall (($generated@@442 T@T) ) (! (= (type ($generated@@441 $generated@@442)) ($generated@@82 $generated@@442 $generated@@4))
 :pattern ( ($generated@@441 $generated@@442))
)))
(assert (forall (($generated@@443 T@U) ) (! (let (($generated@@444 ($generated@@336 (type $generated@@443))))
(let (($generated@@445 ($generated@@335 (type $generated@@443))))
 (=> (= (type $generated@@443) ($generated@@334 $generated@@445 $generated@@444)) (= (= $generated@@443 ($generated@@333 $generated@@445 $generated@@444)) (= ($generated@@332 $generated@@443) ($generated@@441 $generated@@445))))))
 :pattern ( ($generated@@332 $generated@@443))
)))
(assert (forall (($generated@@446 T@U) ) (! (let (($generated@@447 ($generated@@336 (type $generated@@446))))
(let (($generated@@448 ($generated@@335 (type $generated@@446))))
 (=> (= (type $generated@@446) ($generated@@334 $generated@@448 $generated@@447)) (= (= $generated@@446 ($generated@@333 $generated@@448 $generated@@447)) (= ($generated@@377 $generated@@446) ($generated@@441 $generated@@447))))))
 :pattern ( ($generated@@377 $generated@@446))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@336 (type $generated@@449))))
(let (($generated@@451 ($generated@@335 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@334 $generated@@451 $generated@@450)) (= (= $generated@@449 ($generated@@333 $generated@@451 $generated@@450)) (= ($generated@@405 $generated@@449) ($generated@@441 $generated@@164))))))
 :pattern ( ($generated@@405 $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ) (! (let (($generated@@453 ($generated@@318 (type $generated@@452))))
(let (($generated@@454 ($generated@@317 (type $generated@@452))))
 (=> (= (type $generated@@452) ($generated@@316 $generated@@454 $generated@@453)) (or (= $generated@@452 ($generated@@315 $generated@@454 $generated@@453)) (exists (($generated@@455 T@U) ($generated@@456 T@U) ) (!  (and (and (= (type $generated@@455) $generated@@164) (= (type $generated@@456) $generated@@164)) ($generated@@0 ($generated@@87 ($generated@@397 $generated@@452) ($generated@@303 ($generated@@251 $generated@@455 $generated@@456)))))
 :no-pattern (type $generated@@455)
 :no-pattern (type $generated@@456)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
 :no-pattern ($generated $generated@@456)
 :no-pattern ($generated@@0 $generated@@456)
))))))
 :pattern ( ($generated@@397 $generated@@452))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@336 (type $generated@@457))))
(let (($generated@@459 ($generated@@335 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@334 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@333 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@164) (= (type $generated@@461) $generated@@164)) ($generated@@0 ($generated@@87 ($generated@@405 $generated@@457) ($generated@@303 ($generated@@251 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@405 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@164) ($generated@@252 $generated@@462 $generated@@46)) (and (= ($generated@@303 ($generated@@353 $generated@@2 $generated@@462)) $generated@@462) ($generated@@145 ($generated@@353 $generated@@2 $generated@@462) $generated@@46)))
 :pattern ( ($generated@@252 $generated@@462 $generated@@46))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@164) ($generated@@252 $generated@@463 $generated@@47)) (and (= ($generated@@303 ($generated@@353 $generated@@3 $generated@@463)) $generated@@463) ($generated@@145 ($generated@@353 $generated@@3 $generated@@463) $generated@@47)))
 :pattern ( ($generated@@252 $generated@@463 $generated@@47))
)))
(assert (forall (($generated@@464 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@164) ($generated@@252 $generated@@464 $generated@@44)) (and (= ($generated@@303 ($generated@@353 $generated@@4 $generated@@464)) $generated@@464) ($generated@@145 ($generated@@353 $generated@@4 $generated@@464) $generated@@44)))
 :pattern ( ($generated@@252 $generated@@464 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@465) 20))
(assert (forall (($generated@@466 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@164) ($generated@@252 $generated@@466 $generated@@45)) (and (= ($generated@@303 ($generated@@353 $generated@@465 $generated@@466)) $generated@@466) ($generated@@145 ($generated@@353 $generated@@465 $generated@@466) $generated@@45)))
 :pattern ( ($generated@@252 $generated@@466 $generated@@45))
)))
(assert (forall (($generated@@467 T@U) ($generated@@468 T@U) ) (!  (=> (= (type $generated@@468) $generated@@70) (= ($generated@@252 ($generated@@303 $generated@@467) $generated@@468) ($generated@@145 $generated@@467 $generated@@468)))
 :pattern ( ($generated@@252 ($generated@@303 $generated@@467) $generated@@468))
)))
(assert (forall (($generated@@469 T@U) ) (! (let (($generated@@470 ($generated@@85 (type $generated@@469))))
 (=> (= (type $generated@@469) ($generated@@82 $generated@@470 $generated@@2)) (<= 0 ($generated@@308 $generated@@469))))
 :pattern ( ($generated@@308 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (let (($generated@@472 ($generated@@296 (type $generated@@471))))
 (=> (= (type $generated@@471) ($generated@@295 $generated@@472)) (<= 0 ($generated@@294 $generated@@471))))
 :pattern ( ($generated@@294 $generated@@471))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@70)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@70) (= (type $generated@@476) $generated@@70)) (= ($generated@@473 ($generated@@423 $generated@@475 $generated@@476)) $generated@@475))
 :pattern ( ($generated@@423 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@478 T@U) ) (! (= (type ($generated@@477 $generated@@478)) $generated@@70)
 :pattern ( ($generated@@477 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@70) (= (type $generated@@480) $generated@@70)) (= ($generated@@477 ($generated@@423 $generated@@479 $generated@@480)) $generated@@480))
 :pattern ( ($generated@@423 $generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@70) (= (type $generated@@482) $generated@@70)) (= ($generated@@78 ($generated@@423 $generated@@481 $generated@@482)) $generated@@58))
 :pattern ( ($generated@@423 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@70)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@70) (= (type $generated@@486) $generated@@70)) (= ($generated@@483 ($generated@@431 $generated@@485 $generated@@486)) $generated@@485))
 :pattern ( ($generated@@431 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@488 T@U) ) (! (= (type ($generated@@487 $generated@@488)) $generated@@70)
 :pattern ( ($generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@70) (= (type $generated@@490) $generated@@70)) (= ($generated@@487 ($generated@@431 $generated@@489 $generated@@490)) $generated@@490))
 :pattern ( ($generated@@431 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@70) (= (type $generated@@492) $generated@@70)) (= ($generated@@78 ($generated@@431 $generated@@491 $generated@@492)) $generated@@59))
 :pattern ( ($generated@@431 $generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@164) (= (type $generated@@494) $generated@@164)) (= ($generated@@287 ($generated@@251 $generated@@493 $generated@@494)) $generated@@61))
 :pattern ( ($generated@@251 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@70)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@70) (= (type $generated@@498) $generated@@70)) (= ($generated@@495 ($generated@@154 $generated@@497 $generated@@498)) $generated@@497))
 :pattern ( ($generated@@154 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@500 T@U) ) (! (= (type ($generated@@499 $generated@@500)) $generated@@70)
 :pattern ( ($generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@70) (= (type $generated@@502) $generated@@70)) (= ($generated@@499 ($generated@@154 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@154 $generated@@501 $generated@@502))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ) (!  (=> (and (= (type $generated@@503) $generated@@164) (= (type $generated@@504) $generated@@164)) (= ($generated@@162 ($generated@@251 $generated@@503 $generated@@504)) $generated@@503))
 :pattern ( ($generated@@251 $generated@@503 $generated@@504))
)))
(assert (forall (($generated@@505 T@U) ($generated@@506 T@U) ) (!  (=> (and (= (type $generated@@505) $generated@@164) (= (type $generated@@506) $generated@@164)) (= ($generated@@163 ($generated@@251 $generated@@505 $generated@@506)) $generated@@506))
 :pattern ( ($generated@@251 $generated@@505 $generated@@506))
)))
(assert  (and (forall (($generated@@509 T@U) ) (! (= (type ($generated@@507 $generated@@509)) $generated@@70)
 :pattern ( ($generated@@507 $generated@@509))
)) (forall (($generated@@510 T@U) ($generated@@511 Int) ) (! (let (($generated@@512 ($generated@@296 (type $generated@@510))))
(= (type ($generated@@508 $generated@@510 $generated@@511)) $generated@@512))
 :pattern ( ($generated@@508 $generated@@510 $generated@@511))
))))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (and (= (type $generated@@513) ($generated@@295 $generated@@164)) (= (type $generated@@514) $generated@@70)) (= (type $generated@@515) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@513 ($generated@@507 $generated@@514) $generated@@515) (forall (($generated@@516 Int) ) (!  (=> (and (<= 0 $generated@@516) (< $generated@@516 ($generated@@294 $generated@@513))) ($generated@@281 ($generated@@508 $generated@@513 $generated@@516) $generated@@514 $generated@@515))
 :pattern ( ($generated@@508 $generated@@513 $generated@@516))
))))
 :pattern ( ($generated@@80 $generated@@513 ($generated@@507 $generated@@514) $generated@@515))
)))
(assert (forall (($generated@@518 Int) ) (! (= ($generated@@517 ($generated@@81 $generated@@518)) $generated@@518)
 :pattern ( ($generated@@81 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@70)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@519 ($generated@@264 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@264 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@78 ($generated@@264 $generated@@522)) $generated@@54))
 :pattern ( ($generated@@264 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@70)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@523 ($generated@@269 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@269 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@78 ($generated@@269 $generated@@526)) $generated@@55))
 :pattern ( ($generated@@269 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@70)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@70) (= ($generated@@527 ($generated@@171 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@171 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@70) (= ($generated@@78 ($generated@@171 $generated@@530)) $generated@@56))
 :pattern ( ($generated@@171 $generated@@530))
)))
(assert (forall (($generated@@532 T@U) ) (! (= (type ($generated@@531 $generated@@532)) $generated@@70)
 :pattern ( ($generated@@531 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@70) (= ($generated@@531 ($generated@@507 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@507 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@70) (= ($generated@@78 ($generated@@507 $generated@@534)) $generated@@57))
 :pattern ( ($generated@@507 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (! (let (($generated@@536 (type $generated@@535)))
(= ($generated@@353 $generated@@536 ($generated@@303 $generated@@535)) $generated@@535))
 :pattern ( ($generated@@303 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (and (= (type $generated@@537) ($generated@@316 $generated@@164 $generated@@164)) (= (type $generated@@538) $generated@@70)) (= (type $generated@@539) $generated@@70)) (= ($generated@@145 $generated@@537 ($generated@@423 $generated@@538 $generated@@539)) (forall (($generated@@540 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@164) ($generated@@0 ($generated@@87 ($generated@@314 $generated@@537) $generated@@540))) (and ($generated@@252 ($generated@@87 ($generated@@398 $generated@@537) $generated@@540) $generated@@539) ($generated@@252 $generated@@540 $generated@@538)))
 :pattern ( ($generated@@87 ($generated@@398 $generated@@537) $generated@@540))
 :pattern ( ($generated@@87 ($generated@@314 $generated@@537) $generated@@540))
))))
 :pattern ( ($generated@@145 $generated@@537 ($generated@@423 $generated@@538 $generated@@539)))
)))
(assert (forall (($generated@@541 T@U) ($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (and (= (type $generated@@541) ($generated@@334 $generated@@164 $generated@@164)) (= (type $generated@@542) $generated@@70)) (= (type $generated@@543) $generated@@70)) (= ($generated@@145 $generated@@541 ($generated@@431 $generated@@542 $generated@@543)) (forall (($generated@@544 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@164) ($generated@@0 ($generated@@87 ($generated@@332 $generated@@541) $generated@@544))) (and ($generated@@252 ($generated@@87 ($generated@@406 $generated@@541) $generated@@544) $generated@@543) ($generated@@252 $generated@@544 $generated@@542)))
 :pattern ( ($generated@@87 ($generated@@406 $generated@@541) $generated@@544))
 :pattern ( ($generated@@87 ($generated@@332 $generated@@541) $generated@@544))
))))
 :pattern ( ($generated@@145 $generated@@541 ($generated@@431 $generated@@542 $generated@@543)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) $generated@@164) (= (type $generated@@548) $generated@@164)) (< ($generated@@545 $generated@@547) ($generated@@546 ($generated@@251 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@251 $generated@@547 $generated@@548))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@164) (= (type $generated@@550) $generated@@164)) (< ($generated@@545 $generated@@550) ($generated@@546 ($generated@@251 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@251 $generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@164) (= (type $generated@@552) $generated@@70)) (= (type $generated@@553) $generated@@70)) ($generated@@252 $generated@@551 ($generated@@423 $generated@@552 $generated@@553))) (and (= ($generated@@303 ($generated@@353 ($generated@@316 $generated@@164 $generated@@164) $generated@@551)) $generated@@551) ($generated@@145 ($generated@@353 ($generated@@316 $generated@@164 $generated@@164) $generated@@551) ($generated@@423 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@252 $generated@@551 ($generated@@423 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@164) (= (type $generated@@555) $generated@@70)) (= (type $generated@@556) $generated@@70)) ($generated@@252 $generated@@554 ($generated@@431 $generated@@555 $generated@@556))) (and (= ($generated@@303 ($generated@@353 ($generated@@334 $generated@@164 $generated@@164) $generated@@554)) $generated@@554) ($generated@@145 ($generated@@353 ($generated@@334 $generated@@164 $generated@@164) $generated@@554) ($generated@@431 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@252 $generated@@554 ($generated@@431 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@70) (= (type $generated@@558) $generated@@70)) (= (type $generated@@559) $generated@@164)) ($generated@@252 $generated@@559 ($generated@@154 $generated@@557 $generated@@558))) (and (= ($generated@@303 ($generated@@353 $generated@@155 $generated@@559)) $generated@@559) ($generated@@145 ($generated@@353 $generated@@155 $generated@@559) ($generated@@154 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@252 $generated@@559 ($generated@@154 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
 (not ($generated@@0 ($generated@@87 ($generated@@441 $generated@@561) $generated@@560))))
 :pattern ( (let (($generated@@561 (type $generated@@560)))
($generated@@87 ($generated@@441 $generated@@561) $generated@@560)))
)))
(assert (forall (($generated@@563 T@U) ) (! (= (type ($generated@@562 $generated@@563)) $generated@@75)
 :pattern ( ($generated@@562 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@70) (= (type $generated@@565) $generated@@70)) (and (= ($generated@@78 ($generated@@154 $generated@@564 $generated@@565)) $generated@@62) (= ($generated@@562 ($generated@@154 $generated@@564 $generated@@565)) $generated@@67)))
 :pattern ( ($generated@@154 $generated@@564 $generated@@565))
)))
(assert  (=> (<= 2 $generated@@147) (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@83) (or ($generated@@260 $generated@@566) (and (not (= 2 $generated@@147)) (and ($generated@@145 $generated@@566 $generated@@169) (and ($generated@@145 $generated@@566 $generated@@150) ($generated@@148 $generated@@566)))))) (= ($generated@@259 $generated@@566) (= ($generated@@274 ($generated@@301 1 ($generated@@274 0))) ($generated@@274 0))))
 :pattern ( ($generated@@259 $generated@@566))
))))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@155) (= ($generated@@545 ($generated@@303 $generated@@567)) ($generated@@546 $generated@@567)))
 :pattern ( ($generated@@545 ($generated@@303 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@164) ($generated@@252 $generated@@568 ($generated@@81 0))) (and (= ($generated@@303 ($generated@@353 $generated@@2 $generated@@568)) $generated@@568) ($generated@@145 ($generated@@353 ($generated@@82 $generated@@164 $generated@@4) $generated@@568) ($generated@@81 0))))
 :pattern ( ($generated@@252 $generated@@568 ($generated@@81 0)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@164) (= (type $generated@@570) $generated@@70)) ($generated@@252 $generated@@569 ($generated@@264 $generated@@570))) (and (= ($generated@@303 ($generated@@353 ($generated@@82 $generated@@164 $generated@@4) $generated@@569)) $generated@@569) ($generated@@145 ($generated@@353 ($generated@@82 $generated@@164 $generated@@4) $generated@@569) ($generated@@264 $generated@@570))))
 :pattern ( ($generated@@252 $generated@@569 ($generated@@264 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@164) (= (type $generated@@572) $generated@@70)) ($generated@@252 $generated@@571 ($generated@@269 $generated@@572))) (and (= ($generated@@303 ($generated@@353 ($generated@@82 $generated@@164 $generated@@4) $generated@@571)) $generated@@571) ($generated@@145 ($generated@@353 ($generated@@82 $generated@@164 $generated@@4) $generated@@571) ($generated@@269 $generated@@572))))
 :pattern ( ($generated@@252 $generated@@571 ($generated@@269 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@164) (= (type $generated@@574) $generated@@70)) ($generated@@252 $generated@@573 ($generated@@171 $generated@@574))) (and (= ($generated@@303 ($generated@@353 ($generated@@82 $generated@@164 $generated@@2) $generated@@573)) $generated@@573) ($generated@@145 ($generated@@353 ($generated@@82 $generated@@164 $generated@@2) $generated@@573) ($generated@@171 $generated@@574))))
 :pattern ( ($generated@@252 $generated@@573 ($generated@@171 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@575) $generated@@164) (= (type $generated@@576) $generated@@70)) ($generated@@252 $generated@@575 ($generated@@507 $generated@@576))) (and (= ($generated@@303 ($generated@@353 ($generated@@295 $generated@@164) $generated@@575)) $generated@@575) ($generated@@145 ($generated@@353 ($generated@@295 $generated@@164) $generated@@575) ($generated@@507 $generated@@576))))
 :pattern ( ($generated@@252 $generated@@575 ($generated@@507 $generated@@576)))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@577) $generated@@83) (= (type $generated@@578) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@577 $generated@@139)) ($generated@@80 $generated@@577 $generated@@142 $generated@@578))) ($generated@@80 $generated@@577 $generated@@169 $generated@@578))
 :pattern ( ($generated@@80 $generated@@577 $generated@@142 $generated@@578))
)))
(assert  (=> (<= 1 $generated@@147) (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@83) (or ($generated@@149 $generated@@579) (and (not (= 1 $generated@@147)) ($generated@@145 $generated@@579 $generated@@150)))) (= ($generated@@148 $generated@@579) ($generated@@0 ($generated@@276 ($generated@@11 false)))))
 :pattern ( ($generated@@148 $generated@@579))
))))
(assert (= ($generated@@78 $generated@@138) $generated@@63))
(assert (= ($generated@@562 $generated@@138) $generated@@68))
(assert (= ($generated@@78 $generated@@169) $generated@@64))
(assert (= ($generated@@562 $generated@@169) $generated@@68))
(assert (= ($generated@@78 $generated@@142) $generated@@65))
(assert (= ($generated@@562 $generated@@142) $generated@@69))
(assert (= ($generated@@78 $generated@@150) $generated@@66))
(assert (= ($generated@@562 $generated@@150) $generated@@69))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@580) ($generated@@82 $generated@@164 $generated@@2)) (= (type $generated@@581) $generated@@70)) (= (type $generated@@582) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@580 ($generated@@171 $generated@@581) $generated@@582) (forall (($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@583) $generated@@164) (< 0 ($generated ($generated@@87 $generated@@580 $generated@@583)))) ($generated@@281 $generated@@583 $generated@@581 $generated@@582))
 :pattern ( ($generated@@87 $generated@@580 $generated@@583))
))))
 :pattern ( ($generated@@80 $generated@@580 ($generated@@171 $generated@@581) $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ) (!  (=> (= (type $generated@@584) $generated@@83) (= ($generated@@145 $generated@@584 $generated@@138)  (or (= $generated@@584 $generated@@139) ($generated@@152 ($generated@@176 $generated@@584)))))
 :pattern ( ($generated@@145 $generated@@584 $generated@@138))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (and (= (type $generated@@585) $generated@@155) (= (type $generated@@586) $generated@@70)) (= (type $generated@@587) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@280 $generated@@587) (and ($generated@@153 $generated@@585) (exists (($generated@@588 T@U) ) (!  (and (= (type $generated@@588) $generated@@70) ($generated@@80 $generated@@585 ($generated@@154 $generated@@586 $generated@@588) $generated@@587))
 :pattern ( ($generated@@80 $generated@@585 ($generated@@154 $generated@@586 $generated@@588) $generated@@587))
))))) ($generated@@281 ($generated@@162 $generated@@585) $generated@@586 $generated@@587))
 :pattern ( ($generated@@281 ($generated@@162 $generated@@585) $generated@@586 $generated@@587))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@155) (= (type $generated@@590) $generated@@70)) (= (type $generated@@591) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@280 $generated@@591) (and ($generated@@153 $generated@@589) (exists (($generated@@592 T@U) ) (!  (and (= (type $generated@@592) $generated@@70) ($generated@@80 $generated@@589 ($generated@@154 $generated@@592 $generated@@590) $generated@@591))
 :pattern ( ($generated@@80 $generated@@589 ($generated@@154 $generated@@592 $generated@@590) $generated@@591))
))))) ($generated@@281 ($generated@@163 $generated@@589) $generated@@590 $generated@@591))
 :pattern ( ($generated@@281 ($generated@@163 $generated@@589) $generated@@590 $generated@@591))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@593) $generated@@164) (= (type $generated@@594) $generated@@164)) (= ($generated@@251 ($generated@@276 $generated@@593) ($generated@@276 $generated@@594)) ($generated@@276 ($generated@@251 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@251 ($generated@@276 $generated@@593) ($generated@@276 $generated@@594)))
)))
(assert (forall (($generated@@595 Int) ) (! (= ($generated@@303 ($generated@@8 ($generated@@274 $generated@@595))) ($generated@@276 ($generated@@303 ($generated@@8 $generated@@595))))
 :pattern ( ($generated@@303 ($generated@@8 ($generated@@274 $generated@@595))))
)))
(assert (forall (($generated@@596 T@U) ) (! (= ($generated@@303 ($generated@@276 $generated@@596)) ($generated@@276 ($generated@@303 $generated@@596)))
 :pattern ( ($generated@@303 ($generated@@276 $generated@@596)))
)))
(assert (forall (($generated@@597 T@U) ) (! (let (($generated@@598 ($generated@@296 (type $generated@@597))))
 (=> (and (= (type $generated@@597) ($generated@@295 $generated@@598)) (= ($generated@@294 $generated@@597) 0)) (= $generated@@597 ($generated@@293 $generated@@598))))
 :pattern ( ($generated@@294 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ($generated@@601 T@U) ) (! (let (($generated@@602 (type $generated@@600)))
 (=> (and (and (= (type $generated@@599) ($generated@@82 $generated@@602 $generated@@2)) (= (type $generated@@601) $generated@@2)) (<= 0 ($generated $generated@@601))) (= ($generated@@308 ($generated@@88 $generated@@599 $generated@@600 $generated@@601)) (+ (- ($generated@@308 $generated@@599) ($generated ($generated@@87 $generated@@599 $generated@@600))) ($generated $generated@@601)))))
 :pattern ( ($generated@@308 ($generated@@88 $generated@@599 $generated@@600 $generated@@601)))
)))
(assert  (=> (<= 1 $generated@@147) (forall (($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@603) $generated@@83) (or ($generated@@149 ($generated@@276 $generated@@603)) (and (not (= 1 $generated@@147)) ($generated@@145 $generated@@603 $generated@@150)))) (= ($generated@@148 ($generated@@276 $generated@@603)) ($generated@@0 ($generated@@276 ($generated@@11 false)))))
 :weight 3
 :pattern ( ($generated@@148 ($generated@@276 $generated@@603)))
))))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@605) $generated@@2)) ($generated@@80 $generated@@605 $generated@@46 $generated@@604))
 :pattern ( ($generated@@80 $generated@@605 $generated@@46 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@607) $generated@@3)) ($generated@@80 $generated@@607 $generated@@47 $generated@@606))
 :pattern ( ($generated@@80 $generated@@607 $generated@@47 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@609) $generated@@4)) ($generated@@80 $generated@@609 $generated@@44 $generated@@608))
 :pattern ( ($generated@@80 $generated@@609 $generated@@44 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@611) $generated@@465)) ($generated@@80 $generated@@611 $generated@@45 $generated@@610))
 :pattern ( ($generated@@80 $generated@@611 $generated@@45 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@613) $generated@@164)) ($generated@@80 $generated@@613 $generated@@48 $generated@@612))
 :pattern ( ($generated@@80 $generated@@613 $generated@@48 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@295 $generated@@164)) (= (type $generated@@615) $generated@@70)) (= ($generated@@145 $generated@@614 ($generated@@507 $generated@@615)) (forall (($generated@@616 Int) ) (!  (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@294 $generated@@614))) ($generated@@252 ($generated@@508 $generated@@614 $generated@@616) $generated@@615))
 :pattern ( ($generated@@508 $generated@@614 $generated@@616))
))))
 :pattern ( ($generated@@145 $generated@@614 ($generated@@507 $generated@@615)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 Int) ) (!  (=> (= (type $generated@@618) ($generated@@295 $generated@@164)) (=> (and (<= 0 $generated@@619) (< $generated@@619 ($generated@@294 $generated@@618))) (< ($generated@@546 ($generated@@353 $generated@@155 ($generated@@508 $generated@@618 $generated@@619))) ($generated@@617 $generated@@618))))
 :pattern ( ($generated@@546 ($generated@@353 $generated@@155 ($generated@@508 $generated@@618 $generated@@619))))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) ($generated@@316 $generated@@164 $generated@@164)) (= (type $generated@@621) $generated@@70)) (= (type $generated@@622) $generated@@70)) ($generated@@145 $generated@@620 ($generated@@423 $generated@@621 $generated@@622))) (and (and ($generated@@145 ($generated@@314 $generated@@620) ($generated@@264 $generated@@621)) ($generated@@145 ($generated@@366 $generated@@620) ($generated@@264 $generated@@622))) ($generated@@145 ($generated@@397 $generated@@620) ($generated@@264 ($generated@@154 $generated@@621 $generated@@622)))))
 :pattern ( ($generated@@145 $generated@@620 ($generated@@423 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) ($generated@@334 $generated@@164 $generated@@164)) (= (type $generated@@624) $generated@@70)) (= (type $generated@@625) $generated@@70)) ($generated@@145 $generated@@623 ($generated@@431 $generated@@624 $generated@@625))) (and (and ($generated@@145 ($generated@@332 $generated@@623) ($generated@@269 $generated@@624)) ($generated@@145 ($generated@@377 $generated@@623) ($generated@@269 $generated@@625))) ($generated@@145 ($generated@@405 $generated@@623) ($generated@@269 ($generated@@154 $generated@@624 $generated@@625)))))
 :pattern ( ($generated@@145 $generated@@623 ($generated@@431 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@2) ($generated@@145 $generated@@626 $generated@@46))
 :pattern ( ($generated@@145 $generated@@626 $generated@@46))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@3) ($generated@@145 $generated@@627 $generated@@47))
 :pattern ( ($generated@@145 $generated@@627 $generated@@47))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@4) ($generated@@145 $generated@@628 $generated@@44))
 :pattern ( ($generated@@145 $generated@@628 $generated@@44))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@465) ($generated@@145 $generated@@629 $generated@@45))
 :pattern ( ($generated@@145 $generated@@629 $generated@@45))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@164) ($generated@@145 $generated@@630 $generated@@48))
 :pattern ( ($generated@@145 $generated@@630 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@631) ($generated@@181 $generated@@83 $generated@@4)) (= (type $generated@@632) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@633) ($generated@@181 $generated@@83 $generated@@4))) (= (type $generated@@634) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@636  (=> (and (= $generated@@631 ($generated@@235 $generated@@139 $generated@@632 $generated@@60 false)) (= (ControlFlow 0 3) (- 0 2))) (not (= ($generated@@274 0) 0)))))
(let (($generated@@637 true))
(let (($generated@@638  (=> (and (= $generated@@633 ($generated@@180 $generated@@139 $generated@@632 $generated@@60 false)) ($generated@@145 $generated@@634 $generated@@150)) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@145 $generated@@634 $generated@@150)) (=> ($generated@@145 $generated@@634 $generated@@150) (=> ($generated@@80 $generated@@634 $generated@@150 $generated@@632) (=> (and ($generated@@149 $generated@@634) ($generated@@148 $generated@@634)) (and (=> (= (ControlFlow 0 4) 1) $generated@@637) (=> (= (ControlFlow 0 4) 3) $generated@@636)))))))))
(let (($generated@@639  (=> (and (and (and ($generated@@280 $generated@@632) ($generated@@635 $generated@@632)) ($generated@@145 $generated@@634 $generated@@169)) (and (= 2 $generated@@147) (= (ControlFlow 0 6) 4))) $generated@@638)))
$generated@@639)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (Int) T@U)
(declare-fun $generated@@85 (T@T T@T) T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 (T@U T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@162 (T@U T@U) Bool)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@184 (T@T T@T) T@T)
(declare-fun $generated@@185 (T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@238 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@258 (T@U T@U) T@U)
(declare-fun $generated@@259 (T@U T@U) Bool)
(declare-fun $generated@@266 () Int)
(declare-fun $generated@@267 (T@U) Bool)
(declare-fun $generated@@268 (T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (Int) Int)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@288 (T@U) Bool)
(declare-fun $generated@@289 (T@U T@U T@U) Bool)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@314 (T@U) Int)
(declare-fun $generated@@315 (T@T) T@U)
(declare-fun $generated@@320 (T@U) T@U)
(declare-fun $generated@@321 (T@T T@T) T@U)
(declare-fun $generated@@322 (T@T T@T) T@T)
(declare-fun $generated@@323 (T@T) T@T)
(declare-fun $generated@@324 (T@T) T@T)
(declare-fun $generated@@338 (T@U) T@U)
(declare-fun $generated@@339 (T@T T@T) T@U)
(declare-fun $generated@@340 (T@T T@T) T@T)
(declare-fun $generated@@341 (T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@359 (T@T T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@396 (Int Int) Int)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@409 (T@U) T@U)
(declare-fun $generated@@416 (T@U) T@U)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@434 (T@U T@U) T@U)
(declare-fun $generated@@442 (T@U T@U) T@U)
(declare-fun $generated@@452 (T@T) T@U)
(declare-fun $generated@@476 () T@T)
(declare-fun $generated@@484 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@510 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@519 (T@U Int) T@U)
(declare-fun $generated@@528 (T@U) Int)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@538 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@556 (T@U) Int)
(declare-fun $generated@@557 (T@U) Int)
(declare-fun $generated@@573 (T@U) T@U)
(declare-fun $generated@@628 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@73) 6) (= (type $generated@@44) $generated@@73)) (= (type $generated@@45) $generated@@73)) (= (type $generated@@46) $generated@@73)) (= (type $generated@@47) $generated@@73)) (= (type $generated@@48) $generated@@73)) (= ($generated@@1 $generated@@74) 7)) (= (type $generated@@49) $generated@@74)) (= (type $generated@@50) $generated@@74)) (= (type $generated@@51) $generated@@74)) (= (type $generated@@52) $generated@@74)) (= (type $generated@@53) $generated@@74)) (= (type $generated@@54) $generated@@74)) (= (type $generated@@55) $generated@@74)) (= (type $generated@@56) $generated@@74)) (= (type $generated@@57) $generated@@74)) (= (type $generated@@58) $generated@@74)) (= (type $generated@@59) $generated@@74)) (forall (($generated@@79 T@T) ) (= ($generated@@1 ($generated@@75 $generated@@79)) 8))) (forall (($generated@@80 T@T) ) (! (= ($generated@@76 ($generated@@75 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@75 $generated@@80))
))) (= (type $generated@@60) ($generated@@75 $generated@@4))) (= ($generated@@1 $generated@@77) 9)) (= (type $generated@@61) $generated@@77)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@74)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@74)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)) (= ($generated@@1 $generated@@78) 10)) (= (type $generated@@69) $generated@@78)) (= (type $generated@@70) $generated@@78)) (= (type $generated@@71) $generated@@78)) (= (type $generated@@72) $generated@@78)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72)
)
(assert (forall (($generated@@82 T@U) ) (! (= (type ($generated@@81 $generated@@82)) $generated@@74)
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (= ($generated@@81 $generated@@44) $generated@@49))
(assert (= ($generated@@81 $generated@@45) $generated@@50))
(assert (= ($generated@@81 $generated@@46) $generated@@51))
(assert (= ($generated@@81 $generated@@47) $generated@@52))
(assert (= ($generated@@81 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (= ($generated@@1 ($generated@@85 $generated@@94 $generated@@95)) 11)) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@88 ($generated@@85 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@85 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@89 ($generated@@85 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@85 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@89 (type $generated@@100))))
(= (type ($generated@@90 $generated@@100 $generated@@101)) $generated@@102))
 :pattern ( ($generated@@90 $generated@@100 $generated@@101))
))) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (let (($generated@@106 (type $generated@@105)))
(let (($generated@@107 (type $generated@@104)))
(= (type ($generated@@91 $generated@@103 $generated@@104 $generated@@105)) ($generated@@85 $generated@@107 $generated@@106))))
 :pattern ( ($generated@@91 $generated@@103 $generated@@104 $generated@@105))
))) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (let (($generated@@111 ($generated@@89 (type $generated@@108))))
 (=> (= (type $generated@@110) $generated@@111) (= ($generated@@90 ($generated@@91 $generated@@108 $generated@@109 $generated@@110) $generated@@109) $generated@@110)))
 :weight 0
))) (and (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@114 $generated@@115) (= ($generated@@90 ($generated@@91 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@90 $generated@@113 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@90 $generated@@117 $generated@@119)))
 :weight 0
)))) (= ($generated@@1 $generated@@86) 12)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (let (($generated@@122 ($generated@@76 (type $generated@@121))))
(= (type ($generated@@92 $generated@@120 $generated@@121)) $generated@@122))
 :pattern ( ($generated@@92 $generated@@120 $generated@@121))
))) (= ($generated@@1 $generated@@87) 13)) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= (type ($generated@@93 $generated@@123 $generated@@124 $generated@@125)) $generated@@87)
 :pattern ( ($generated@@93 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (let (($generated@@129 ($generated@@76 (type $generated@@127))))
 (=> (= (type $generated@@128) $generated@@129) (= ($generated@@92 ($generated@@93 $generated@@126 $generated@@127 $generated@@128) $generated@@127) $generated@@128)))
 :weight 0
))) (and (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@92 ($generated@@93 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@92 $generated@@131 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@92 $generated@@135 $generated@@137)))
 :weight 0
)))) (forall (($generated@@138 Int) ) (! (= (type ($generated@@84 $generated@@138)) $generated@@73)
 :pattern ( ($generated@@84 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
 :pattern ( ($generated@@83 $generated@@139 ($generated@@84 0) $generated@@140))
)))
(assert  (and (= (type $generated@@141) $generated@@73) (= (type $generated@@142) $generated@@86)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@143) $generated@@86) (= (type $generated@@144) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@143 $generated@@141 $generated@@144)  (or (= $generated@@143 $generated@@142) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@144 $generated@@143) $generated@@60)))))
 :pattern ( ($generated@@83 $generated@@143 $generated@@141 $generated@@144))
)))
(assert (= (type $generated@@145) $generated@@73))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@86) (= (type $generated@@147) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@146 $generated@@145 $generated@@147)  (or (= $generated@@146 $generated@@142) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@147 $generated@@146) $generated@@60)))))
 :pattern ( ($generated@@83 $generated@@146 $generated@@145 $generated@@147))
)))
(assert (= (type $generated@@148) $generated@@73))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@86) (= (type $generated@@150) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@149 $generated@@148 $generated@@150)  (or (= $generated@@149 $generated@@142) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@83 $generated@@149 $generated@@148 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@151 $generated@@152 ($generated@@84 0)))
 :pattern ( ($generated@@151 $generated@@152 ($generated@@84 0)))
)))
(assert ($generated@@153 $generated@@145))
(assert ($generated@@153 $generated@@148))
(assert  (and (= ($generated@@1 $generated@@156) 14) (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! (= (type ($generated@@155 $generated@@157 $generated@@158)) $generated@@73)
 :pattern ( ($generated@@155 $generated@@157 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and (and (= (type $generated@@159) $generated@@73) (= (type $generated@@160) $generated@@73)) (= (type $generated@@161) $generated@@156)) ($generated@@151 $generated@@161 ($generated@@155 $generated@@159 $generated@@160))) ($generated@@154 $generated@@161))
 :pattern ( ($generated@@154 $generated@@161) ($generated@@151 $generated@@161 ($generated@@155 $generated@@159 $generated@@160)))
)))
(assert  (and (and (= ($generated@@1 $generated@@165) 15) (forall (($generated@@166 T@U) ) (! (= (type ($generated@@163 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@163 $generated@@166))
))) (forall (($generated@@167 T@U) ) (! (= (type ($generated@@164 $generated@@167)) $generated@@165)
 :pattern ( ($generated@@164 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and (= (type $generated@@168) $generated@@156) (= (type $generated@@169) $generated@@156)) true) (= ($generated@@162 $generated@@168 $generated@@169)  (and (= ($generated@@163 $generated@@168) ($generated@@163 $generated@@169)) (= ($generated@@164 $generated@@168) ($generated@@164 $generated@@169)))))
 :pattern ( ($generated@@162 $generated@@168 $generated@@169))
)))
(assert (= (type $generated@@170) $generated@@73))
(assert (forall (($generated@@171 T@U) ) (!  (=> (= (type $generated@@171) $generated@@86) (=> (and (not (= $generated@@171 $generated@@142)) ($generated@@151 $generated@@171 $generated@@145)) ($generated@@151 $generated@@171 $generated@@170)))
 :pattern ( ($generated@@151 $generated@@171 $generated@@145))
)))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= (type $generated@@172) $generated@@86) (=> (and (not (= $generated@@172 $generated@@142)) ($generated@@151 $generated@@172 $generated@@148)) ($generated@@151 $generated@@172 $generated@@170)))
 :pattern ( ($generated@@151 $generated@@172 $generated@@148))
)))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@73)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@85 $generated@@165 $generated@@2)) (= (type $generated@@177) $generated@@73)) ($generated@@151 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@151 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ) (! (= (type ($generated@@178 $generated@@179)) $generated@@73)
 :pattern ( ($generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= (type $generated@@180) $generated@@86) (= ($generated@@151 $generated@@180 $generated@@145)  (or (= $generated@@180 $generated@@142) (= ($generated@@178 $generated@@180) $generated@@145))))
 :pattern ( ($generated@@151 $generated@@180 $generated@@145))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> (= (type $generated@@181) $generated@@86) (= ($generated@@151 $generated@@181 $generated@@148)  (or (= $generated@@181 $generated@@142) (= ($generated@@178 $generated@@181) $generated@@148))))
 :pattern ( ($generated@@151 $generated@@181 $generated@@148))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@1 ($generated@@184 $generated@@188 $generated@@189)) 16)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@185 ($generated@@184 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@184 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@186 ($generated@@184 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@184 $generated@@192 $generated@@193))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (let (($generated@@197 ($generated@@186 (type $generated@@194))))
(= (type ($generated@@182 $generated@@194 $generated@@195 $generated@@196)) $generated@@197))
 :pattern ( ($generated@@182 $generated@@194 $generated@@195 $generated@@196))
))) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 (type $generated@@201)))
(let (($generated@@203 (type $generated@@199)))
(= (type ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201)) ($generated@@184 $generated@@203 $generated@@202))))
 :pattern ( ($generated@@187 $generated@@198 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@186 (type $generated@@204))))
 (=> (= (type $generated@@207) $generated@@208) (= ($generated@@182 ($generated@@187 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@205 $generated@@206) $generated@@207)))
 :weight 0
))) (and (and (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@182 ($generated@@187 $generated@@210 $generated@@211 $generated@@212 $generated@@209) $generated@@213 $generated@@214) ($generated@@182 $generated@@210 $generated@@213 $generated@@214)))
 :weight 0
)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@218 $generated@@220) (= ($generated@@182 ($generated@@187 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@182 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or true (= ($generated@@182 ($generated@@187 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@182 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)))) (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ) (! (= (type ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230)) ($generated@@184 $generated@@86 $generated@@4))
 :pattern ( ($generated@@183 $generated@@227 $generated@@228 $generated@@229 $generated@@230))
))))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 Bool) ($generated@@235 T@U) ($generated@@236 T@U) ) (! (let (($generated@@237 ($generated@@76 (type $generated@@236))))
 (=> (and (and (and (and (= (type $generated@@231) $generated@@86) (= (type $generated@@232) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@233) ($generated@@75 $generated@@4))) (= (type $generated@@235) $generated@@86)) (= (type $generated@@236) ($generated@@75 $generated@@237))) (= ($generated@@0 ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))  (=> (and (not (= $generated@@235 $generated@@231)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@232 $generated@@235) $generated@@233))) $generated@@234))))
 :pattern ( ($generated@@182 ($generated@@183 $generated@@231 $generated@@232 $generated@@233 $generated@@234) $generated@@235 $generated@@236))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ) (! (= (type ($generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242)) ($generated@@184 $generated@@86 $generated@@4))
 :pattern ( ($generated@@238 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 Bool) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (let (($generated@@249 ($generated@@76 (type $generated@@248))))
 (=> (and (and (and (and (= (type $generated@@243) $generated@@86) (= (type $generated@@244) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@245) ($generated@@75 $generated@@4))) (= (type $generated@@247) $generated@@86)) (= (type $generated@@248) ($generated@@75 $generated@@249))) (= ($generated@@0 ($generated@@182 ($generated@@238 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))  (=> (and (not (= $generated@@247 $generated@@243)) ($generated@@0 ($generated@@92 ($generated@@90 $generated@@244 $generated@@247) $generated@@245))) $generated@@246))))
 :pattern ( ($generated@@182 ($generated@@238 $generated@@243 $generated@@244 $generated@@245 $generated@@246) $generated@@247 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (= (type $generated@@250) $generated@@86) (= (type $generated@@251) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@250 $generated@@170 $generated@@251) ($generated@@83 $generated@@250 $generated@@141 $generated@@251)))
 :pattern ( ($generated@@83 $generated@@250 $generated@@170 $generated@@251))
)))
(assert (= (type $generated@@252) $generated@@73))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@86) (= (type $generated@@254) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@253 $generated@@252 $generated@@254) ($generated@@83 $generated@@253 $generated@@145 $generated@@254)))
 :pattern ( ($generated@@83 $generated@@253 $generated@@252 $generated@@254))
)))
(assert (= (type $generated@@255) $generated@@73))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@86) (= (type $generated@@257) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@256 $generated@@255 $generated@@257) ($generated@@83 $generated@@256 $generated@@148 $generated@@257)))
 :pattern ( ($generated@@83 $generated@@256 $generated@@255 $generated@@257))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= (type ($generated@@258 $generated@@260 $generated@@261)) $generated@@156)
 :pattern ( ($generated@@258 $generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (and (and (and (= (type $generated@@262) $generated@@73) (= (type $generated@@263) $generated@@73)) (= (type $generated@@264) $generated@@165)) (= (type $generated@@265) $generated@@165)) (= ($generated@@151 ($generated@@258 $generated@@264 $generated@@265) ($generated@@155 $generated@@262 $generated@@263))  (and ($generated@@259 $generated@@264 $generated@@262) ($generated@@259 $generated@@265 $generated@@263))))
 :pattern ( ($generated@@151 ($generated@@258 $generated@@264 $generated@@265) ($generated@@155 $generated@@262 $generated@@263)))
)))
(assert  (=> (<= 1 $generated@@266) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@86) (or ($generated@@268 $generated@@269) (and (not (= 1 $generated@@266)) (and ($generated@@151 $generated@@269 $generated@@170) ($generated@@151 $generated@@269 $generated@@252))))) true)
 :pattern ( ($generated@@267 $generated@@269))
))))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@156) (= (type $generated@@271) $generated@@156)) (= ($generated@@162 $generated@@270 $generated@@271) (= $generated@@270 $generated@@271)))
 :pattern ( ($generated@@162 $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@73)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) ($generated@@85 $generated@@165 $generated@@4)) (= (type $generated@@275) $generated@@73)) (= ($generated@@151 $generated@@274 ($generated@@272 $generated@@275)) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@165) ($generated@@0 ($generated@@90 $generated@@274 $generated@@276))) ($generated@@259 $generated@@276 $generated@@275))
 :pattern ( ($generated@@90 $generated@@274 $generated@@276))
))))
 :pattern ( ($generated@@151 $generated@@274 ($generated@@272 $generated@@275)))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@73)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) ($generated@@85 $generated@@165 $generated@@4)) (= (type $generated@@280) $generated@@73)) (= ($generated@@151 $generated@@279 ($generated@@277 $generated@@280)) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@165) ($generated@@0 ($generated@@90 $generated@@279 $generated@@281))) ($generated@@259 $generated@@281 $generated@@280))
 :pattern ( ($generated@@90 $generated@@279 $generated@@281))
))))
 :pattern ( ($generated@@151 $generated@@279 ($generated@@277 $generated@@280)))
)))
(assert (forall (($generated@@283 Int) ) (! (= ($generated@@282 $generated@@283) $generated@@283)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 (type $generated@@285)))
(= (type ($generated@@284 $generated@@285)) $generated@@286))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= ($generated@@284 $generated@@287) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@290) $generated@@73) (= (type $generated@@291) $generated@@73)) (= (type $generated@@292) $generated@@165)) (= (type $generated@@293) $generated@@165)) (= (type $generated@@294) ($generated@@85 $generated@@86 $generated@@87))) ($generated@@288 $generated@@294)) (= ($generated@@83 ($generated@@258 $generated@@292 $generated@@293) ($generated@@155 $generated@@290 $generated@@291) $generated@@294)  (and ($generated@@289 $generated@@292 $generated@@290 $generated@@294) ($generated@@289 $generated@@293 $generated@@291 $generated@@294))))
 :pattern ( ($generated@@83 ($generated@@258 $generated@@292 $generated@@293) ($generated@@155 $generated@@290 $generated@@291) $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@77)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@156) (= ($generated@@154 $generated@@297) (= ($generated@@295 $generated@@297) $generated@@61)))
 :pattern ( ($generated@@154 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@156) ($generated@@154 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@165) (= (type $generated@@300) $generated@@165)) (= $generated@@298 ($generated@@258 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@154 $generated@@298))
)))
(assert  (and (and (forall (($generated@@305 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@305)) 17)) (forall (($generated@@306 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@303 $generated@@306))
))) (forall (($generated@@307 T@T) ) (! (= (type ($generated@@301 $generated@@307)) ($generated@@303 $generated@@307))
 :pattern ( ($generated@@301 $generated@@307))
))))
(assert (forall (($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@308)) 0)
 :pattern ( ($generated@@301 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@165)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@73) (= (type $generated@@313) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@289 ($generated@@309 $generated@@311) $generated@@312 $generated@@313) ($generated@@83 $generated@@311 $generated@@312 $generated@@313)))
 :pattern ( ($generated@@289 ($generated@@309 $generated@@311) $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@316 T@T) ) (! (= (type ($generated@@315 $generated@@316)) ($generated@@85 $generated@@316 $generated@@2))
 :pattern ( ($generated@@315 $generated@@316))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@88 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@85 $generated@@318 $generated@@2)) (and (= (= ($generated@@314 $generated@@317) 0) (= $generated@@317 ($generated@@315 $generated@@318))) (=> (not (= ($generated@@314 $generated@@317) 0)) (exists (($generated@@319 T@U) ) (!  (and (= (type $generated@@319) $generated@@318) (< 0 ($generated ($generated@@90 $generated@@317 $generated@@319))))
 :no-pattern (type $generated@@319)
 :no-pattern ($generated $generated@@319)
 :no-pattern ($generated@@0 $generated@@319)
))))))
 :pattern ( ($generated@@314 $generated@@317))
)))
(assert  (and (and (and (and (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (= ($generated@@1 ($generated@@322 $generated@@325 $generated@@326)) 18)) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@323 ($generated@@322 $generated@@327 $generated@@328)) $generated@@327)
 :pattern ( ($generated@@322 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@T) ($generated@@330 T@T) ) (! (= ($generated@@324 ($generated@@322 $generated@@329 $generated@@330)) $generated@@330)
 :pattern ( ($generated@@322 $generated@@329 $generated@@330))
))) (forall (($generated@@331 T@U) ) (! (let (($generated@@332 ($generated@@323 (type $generated@@331))))
(= (type ($generated@@320 $generated@@331)) ($generated@@85 $generated@@332 $generated@@4)))
 :pattern ( ($generated@@320 $generated@@331))
))) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= (type ($generated@@321 $generated@@333 $generated@@334)) ($generated@@322 $generated@@333 $generated@@334))
 :pattern ( ($generated@@321 $generated@@333 $generated@@334))
))))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@T) ) (! (let (($generated@@337 (type $generated@@335)))
 (not ($generated@@0 ($generated@@90 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335))))
 :pattern ( (let (($generated@@337 (type $generated@@335)))
($generated@@90 ($generated@@320 ($generated@@321 $generated@@337 $generated@@336)) $generated@@335)))
)))
(assert  (and (and (and (and (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (= ($generated@@1 ($generated@@340 $generated@@343 $generated@@344)) 19)) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@341 ($generated@@340 $generated@@345 $generated@@346)) $generated@@345)
 :pattern ( ($generated@@340 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@T) ($generated@@348 T@T) ) (! (= ($generated@@342 ($generated@@340 $generated@@347 $generated@@348)) $generated@@348)
 :pattern ( ($generated@@340 $generated@@347 $generated@@348))
))) (forall (($generated@@349 T@U) ) (! (let (($generated@@350 ($generated@@341 (type $generated@@349))))
(= (type ($generated@@338 $generated@@349)) ($generated@@85 $generated@@350 $generated@@4)))
 :pattern ( ($generated@@338 $generated@@349))
))) (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (! (= (type ($generated@@339 $generated@@351 $generated@@352)) ($generated@@340 $generated@@351 $generated@@352))
 :pattern ( ($generated@@339 $generated@@351 $generated@@352))
))))
(assert (forall (($generated@@353 T@U) ($generated@@354 T@T) ) (! (let (($generated@@355 (type $generated@@353)))
 (not ($generated@@0 ($generated@@90 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353))))
 :pattern ( (let (($generated@@355 (type $generated@@353)))
($generated@@90 ($generated@@338 ($generated@@339 $generated@@355 $generated@@354)) $generated@@353)))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@88 (type $generated@@356))))
 (=> (= (type $generated@@356) ($generated@@85 $generated@@357 $generated@@2)) (= ($generated@@174 $generated@@356) (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@357) (and (<= 0 ($generated ($generated@@90 $generated@@356 $generated@@358))) (<= ($generated ($generated@@90 $generated@@356 $generated@@358)) ($generated@@314 $generated@@356))))
 :pattern ( ($generated@@90 $generated@@356 $generated@@358))
)))))
 :pattern ( ($generated@@174 $generated@@356))
)))
(assert (forall (($generated@@360 T@T) ($generated@@361 T@U) ) (! (= (type ($generated@@359 $generated@@360 $generated@@361)) $generated@@360)
 :pattern ( ($generated@@359 $generated@@360 $generated@@361))
)))
(assert (forall (($generated@@362 T@U) ) (!  (=> (and (= (type $generated@@362) $generated@@165) ($generated@@259 $generated@@362 $generated@@141)) (and (= ($generated@@309 ($generated@@359 $generated@@86 $generated@@362)) $generated@@362) ($generated@@151 ($generated@@359 $generated@@86 $generated@@362) $generated@@141)))
 :pattern ( ($generated@@259 $generated@@362 $generated@@141))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@165) ($generated@@259 $generated@@363 $generated@@170)) (and (= ($generated@@309 ($generated@@359 $generated@@86 $generated@@363)) $generated@@363) ($generated@@151 ($generated@@359 $generated@@86 $generated@@363) $generated@@170)))
 :pattern ( ($generated@@259 $generated@@363 $generated@@170))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@165) ($generated@@259 $generated@@364 $generated@@145)) (and (= ($generated@@309 ($generated@@359 $generated@@86 $generated@@364)) $generated@@364) ($generated@@151 ($generated@@359 $generated@@86 $generated@@364) $generated@@145)))
 :pattern ( ($generated@@259 $generated@@364 $generated@@145))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@165) ($generated@@259 $generated@@365 $generated@@252)) (and (= ($generated@@309 ($generated@@359 $generated@@86 $generated@@365)) $generated@@365) ($generated@@151 ($generated@@359 $generated@@86 $generated@@365) $generated@@252)))
 :pattern ( ($generated@@259 $generated@@365 $generated@@252))
)))
(assert (forall (($generated@@366 T@U) ) (!  (=> (and (= (type $generated@@366) $generated@@165) ($generated@@259 $generated@@366 $generated@@148)) (and (= ($generated@@309 ($generated@@359 $generated@@86 $generated@@366)) $generated@@366) ($generated@@151 ($generated@@359 $generated@@86 $generated@@366) $generated@@148)))
 :pattern ( ($generated@@259 $generated@@366 $generated@@148))
)))
(assert (forall (($generated@@367 T@U) ) (!  (=> (and (= (type $generated@@367) $generated@@165) ($generated@@259 $generated@@367 $generated@@255)) (and (= ($generated@@309 ($generated@@359 $generated@@86 $generated@@367)) $generated@@367) ($generated@@151 ($generated@@359 $generated@@86 $generated@@367) $generated@@255)))
 :pattern ( ($generated@@259 $generated@@367 $generated@@255))
)))
(assert (forall (($generated@@368 T@U) ) (!  (=> (= (type $generated@@368) $generated@@86) (= ($generated@@151 $generated@@368 $generated@@170)  (and ($generated@@151 $generated@@368 $generated@@141) (not (= $generated@@368 $generated@@142)))))
 :pattern ( ($generated@@151 $generated@@368 $generated@@170))
)))
(assert (forall (($generated@@369 T@U) ) (!  (=> (= (type $generated@@369) $generated@@86) (= ($generated@@151 $generated@@369 $generated@@252)  (and ($generated@@151 $generated@@369 $generated@@145) (not (= $generated@@369 $generated@@142)))))
 :pattern ( ($generated@@151 $generated@@369 $generated@@252))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (= (type $generated@@370) $generated@@86) (= ($generated@@151 $generated@@370 $generated@@255)  (and ($generated@@151 $generated@@370 $generated@@148) (not (= $generated@@370 $generated@@142)))))
 :pattern ( ($generated@@151 $generated@@370 $generated@@255))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@324 (type $generated@@371))))
(let (($generated@@373 ($generated@@323 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@322 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@321 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@90 ($generated@@320 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@320 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@324 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@85 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@324 (type $generated@@378))))
(let (($generated@@380 ($generated@@323 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@322 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@321 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@90 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@342 (type $generated@@382))))
(let (($generated@@384 ($generated@@341 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@340 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@339 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@384) ($generated@@0 ($generated@@90 ($generated@@338 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@338 $generated@@382))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@342 (type $generated@@387))))
(= (type ($generated@@386 $generated@@387)) ($generated@@85 $generated@@388 $generated@@4)))
 :pattern ( ($generated@@386 $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@342 (type $generated@@389))))
(let (($generated@@391 ($generated@@341 (type $generated@@389))))
 (=> (= (type $generated@@389) ($generated@@340 $generated@@391 $generated@@390)) (or (= $generated@@389 ($generated@@339 $generated@@391 $generated@@390)) (exists (($generated@@392 T@U) ) (!  (and (= (type $generated@@392) $generated@@390) ($generated@@0 ($generated@@90 ($generated@@386 $generated@@389) $generated@@392)))
 :no-pattern (type $generated@@392)
 :no-pattern ($generated $generated@@392)
 :no-pattern ($generated@@0 $generated@@392)
))))))
 :pattern ( ($generated@@386 $generated@@389))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (!  (=> (and (= (type $generated@@393) ($generated@@85 $generated@@165 $generated@@2)) (= (type $generated@@394) $generated@@73)) (= ($generated@@151 $generated@@393 ($generated@@173 $generated@@394)) (forall (($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@395) $generated@@165) (< 0 ($generated ($generated@@90 $generated@@393 $generated@@395)))) ($generated@@259 $generated@@395 $generated@@394))
 :pattern ( ($generated@@90 $generated@@393 $generated@@395))
))))
 :pattern ( ($generated@@151 $generated@@393 ($generated@@173 $generated@@394)))
)))
(assert  (=> (<= 1 $generated@@266) (forall (($generated@@397 T@U) ) (!  (=> (and (= (type $generated@@397) $generated@@86) (or ($generated@@268 ($generated@@284 $generated@@397)) (and (not (= 1 $generated@@266)) (and ($generated@@151 $generated@@397 $generated@@170) ($generated@@151 ($generated@@284 $generated@@397) $generated@@252))))) (= ($generated@@267 ($generated@@284 $generated@@397)) (ite ($generated@@151 ($generated@@284 $generated@@397) $generated@@255) (= ($generated@@282 ($generated@@396 1 ($generated@@282 0))) ($generated@@282 0)) true)))
 :weight 3
 :pattern ( ($generated@@267 ($generated@@284 $generated@@397)))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ($generated@@400 T@U) ) (!  (=> (and (and (= (type $generated@@398) ($generated@@85 $generated@@165 $generated@@4)) (= (type $generated@@399) $generated@@73)) (= (type $generated@@400) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@398 ($generated@@272 $generated@@399) $generated@@400) (forall (($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@401) $generated@@165) ($generated@@0 ($generated@@90 $generated@@398 $generated@@401))) ($generated@@289 $generated@@401 $generated@@399 $generated@@400))
 :pattern ( ($generated@@90 $generated@@398 $generated@@401))
))))
 :pattern ( ($generated@@83 $generated@@398 ($generated@@272 $generated@@399) $generated@@400))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ($generated@@404 T@U) ) (!  (=> (and (and (= (type $generated@@402) ($generated@@85 $generated@@165 $generated@@4)) (= (type $generated@@403) $generated@@73)) (= (type $generated@@404) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@402 ($generated@@277 $generated@@403) $generated@@404) (forall (($generated@@405 T@U) ) (!  (=> (and (= (type $generated@@405) $generated@@165) ($generated@@0 ($generated@@90 $generated@@402 $generated@@405))) ($generated@@289 $generated@@405 $generated@@403 $generated@@404))
 :pattern ( ($generated@@90 $generated@@402 $generated@@405))
))))
 :pattern ( ($generated@@83 $generated@@402 ($generated@@277 $generated@@403) $generated@@404))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 (type $generated@@406)))
(= ($generated ($generated@@90 ($generated@@315 $generated@@407) $generated@@406)) 0))
 :pattern ( (let (($generated@@407 (type $generated@@406)))
($generated@@90 ($generated@@315 $generated@@407) $generated@@406)))
)))
(assert  (and (forall (($generated@@410 T@U) ) (! (= (type ($generated@@408 $generated@@410)) ($generated@@85 $generated@@165 $generated@@4))
 :pattern ( ($generated@@408 $generated@@410))
)) (forall (($generated@@411 T@U) ) (! (let (($generated@@412 ($generated@@324 (type $generated@@411))))
(let (($generated@@413 ($generated@@323 (type $generated@@411))))
(= (type ($generated@@409 $generated@@411)) ($generated@@85 $generated@@413 $generated@@412))))
 :pattern ( ($generated@@409 $generated@@411))
))))
(assert (forall (($generated@@414 T@U) ($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@414) ($generated@@322 $generated@@165 $generated@@165)) (= (type $generated@@415) $generated@@165)) (= ($generated@@0 ($generated@@90 ($generated@@408 $generated@@414) $generated@@415))  (and ($generated@@0 ($generated@@90 ($generated@@320 $generated@@414) ($generated@@163 ($generated@@359 $generated@@156 $generated@@415)))) (= ($generated@@90 ($generated@@409 $generated@@414) ($generated@@163 ($generated@@359 $generated@@156 $generated@@415))) ($generated@@164 ($generated@@359 $generated@@156 $generated@@415))))))
 :pattern ( ($generated@@90 ($generated@@408 $generated@@414) $generated@@415))
)))
(assert  (and (forall (($generated@@418 T@U) ) (! (= (type ($generated@@416 $generated@@418)) ($generated@@85 $generated@@165 $generated@@4))
 :pattern ( ($generated@@416 $generated@@418))
)) (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@342 (type $generated@@419))))
(let (($generated@@421 ($generated@@341 (type $generated@@419))))
(= (type ($generated@@417 $generated@@419)) ($generated@@85 $generated@@421 $generated@@420))))
 :pattern ( ($generated@@417 $generated@@419))
))))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (=> (and (= (type $generated@@422) ($generated@@340 $generated@@165 $generated@@165)) (= (type $generated@@423) $generated@@165)) (= ($generated@@0 ($generated@@90 ($generated@@416 $generated@@422) $generated@@423))  (and ($generated@@0 ($generated@@90 ($generated@@338 $generated@@422) ($generated@@163 ($generated@@359 $generated@@156 $generated@@423)))) (= ($generated@@90 ($generated@@417 $generated@@422) ($generated@@163 ($generated@@359 $generated@@156 $generated@@423))) ($generated@@164 ($generated@@359 $generated@@156 $generated@@423))))))
 :pattern ( ($generated@@90 ($generated@@416 $generated@@422) $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (! (let (($generated@@426 (type $generated@@425)))
(let (($generated@@427 ($generated@@323 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@322 $generated@@427 $generated@@426)) (= ($generated@@0 ($generated@@90 ($generated@@375 $generated@@424) $generated@@425)) (exists (($generated@@428 T@U) ) (!  (and (= (type $generated@@428) $generated@@427) (and ($generated@@0 ($generated@@90 ($generated@@320 $generated@@424) $generated@@428)) (= $generated@@425 ($generated@@90 ($generated@@409 $generated@@424) $generated@@428))))
 :pattern ( ($generated@@90 ($generated@@320 $generated@@424) $generated@@428))
 :pattern ( ($generated@@90 ($generated@@409 $generated@@424) $generated@@428))
))))))
 :pattern ( ($generated@@90 ($generated@@375 $generated@@424) $generated@@425))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ) (! (let (($generated@@431 (type $generated@@430)))
(let (($generated@@432 ($generated@@341 (type $generated@@429))))
 (=> (= (type $generated@@429) ($generated@@340 $generated@@432 $generated@@431)) (= ($generated@@0 ($generated@@90 ($generated@@386 $generated@@429) $generated@@430)) (exists (($generated@@433 T@U) ) (!  (and (= (type $generated@@433) $generated@@432) (and ($generated@@0 ($generated@@90 ($generated@@338 $generated@@429) $generated@@433)) (= $generated@@430 ($generated@@90 ($generated@@417 $generated@@429) $generated@@433))))
 :pattern ( ($generated@@90 ($generated@@338 $generated@@429) $generated@@433))
 :pattern ( ($generated@@90 ($generated@@417 $generated@@429) $generated@@433))
))))))
 :pattern ( ($generated@@90 ($generated@@386 $generated@@429) $generated@@430))
)))
(assert (forall (($generated@@435 T@U) ($generated@@436 T@U) ) (! (= (type ($generated@@434 $generated@@435 $generated@@436)) $generated@@73)
 :pattern ( ($generated@@434 $generated@@435 $generated@@436))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ($generated@@440 T@U) ) (!  (=> (and (and (and (= (type $generated@@437) ($generated@@322 $generated@@165 $generated@@165)) (= (type $generated@@438) $generated@@73)) (= (type $generated@@439) $generated@@73)) (= (type $generated@@440) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440) (forall (($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@441) $generated@@165) ($generated@@0 ($generated@@90 ($generated@@320 $generated@@437) $generated@@441))) (and ($generated@@289 ($generated@@90 ($generated@@409 $generated@@437) $generated@@441) $generated@@439 $generated@@440) ($generated@@289 $generated@@441 $generated@@438 $generated@@440)))
 :pattern ( ($generated@@90 ($generated@@409 $generated@@437) $generated@@441))
 :pattern ( ($generated@@90 ($generated@@320 $generated@@437) $generated@@441))
))))
 :pattern ( ($generated@@83 $generated@@437 ($generated@@434 $generated@@438 $generated@@439) $generated@@440))
)))
(assert (forall (($generated@@443 T@U) ($generated@@444 T@U) ) (! (= (type ($generated@@442 $generated@@443 $generated@@444)) $generated@@73)
 :pattern ( ($generated@@442 $generated@@443 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ) (!  (=> (and (and (and (= (type $generated@@445) ($generated@@340 $generated@@165 $generated@@165)) (= (type $generated@@446) $generated@@73)) (= (type $generated@@447) $generated@@73)) (= (type $generated@@448) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448) (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@165) ($generated@@0 ($generated@@90 ($generated@@338 $generated@@445) $generated@@449))) (and ($generated@@289 ($generated@@90 ($generated@@417 $generated@@445) $generated@@449) $generated@@447 $generated@@448) ($generated@@289 $generated@@449 $generated@@446 $generated@@448)))
 :pattern ( ($generated@@90 ($generated@@417 $generated@@445) $generated@@449))
 :pattern ( ($generated@@90 ($generated@@338 $generated@@445) $generated@@449))
))))
 :pattern ( ($generated@@83 $generated@@445 ($generated@@442 $generated@@446 $generated@@447) $generated@@448))
)))
(assert (forall (($generated@@450 Int) ($generated@@451 Int) ) (! (= ($generated@@396 $generated@@450 $generated@@451) (div $generated@@450 $generated@@451))
 :pattern ( ($generated@@396 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@453 T@T) ) (! (= (type ($generated@@452 $generated@@453)) ($generated@@85 $generated@@453 $generated@@4))
 :pattern ( ($generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@342 (type $generated@@454))))
(let (($generated@@456 ($generated@@341 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@340 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@339 $generated@@456 $generated@@455)) (= ($generated@@338 $generated@@454) ($generated@@452 $generated@@456))))))
 :pattern ( ($generated@@338 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@342 (type $generated@@457))))
(let (($generated@@459 ($generated@@341 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@340 $generated@@459 $generated@@458)) (= (= $generated@@457 ($generated@@339 $generated@@459 $generated@@458)) (= ($generated@@386 $generated@@457) ($generated@@452 $generated@@458))))))
 :pattern ( ($generated@@386 $generated@@457))
)))
(assert (forall (($generated@@460 T@U) ) (! (let (($generated@@461 ($generated@@342 (type $generated@@460))))
(let (($generated@@462 ($generated@@341 (type $generated@@460))))
 (=> (= (type $generated@@460) ($generated@@340 $generated@@462 $generated@@461)) (= (= $generated@@460 ($generated@@339 $generated@@462 $generated@@461)) (= ($generated@@416 $generated@@460) ($generated@@452 $generated@@165))))))
 :pattern ( ($generated@@416 $generated@@460))
)))
(assert (forall (($generated@@463 T@U) ) (! (let (($generated@@464 ($generated@@324 (type $generated@@463))))
(let (($generated@@465 ($generated@@323 (type $generated@@463))))
 (=> (= (type $generated@@463) ($generated@@322 $generated@@465 $generated@@464)) (or (= $generated@@463 ($generated@@321 $generated@@465 $generated@@464)) (exists (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (and (and (= (type $generated@@466) $generated@@165) (= (type $generated@@467) $generated@@165)) ($generated@@0 ($generated@@90 ($generated@@408 $generated@@463) ($generated@@309 ($generated@@258 $generated@@466 $generated@@467)))))
 :no-pattern (type $generated@@466)
 :no-pattern (type $generated@@467)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
 :no-pattern ($generated $generated@@467)
 :no-pattern ($generated@@0 $generated@@467)
))))))
 :pattern ( ($generated@@408 $generated@@463))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@342 (type $generated@@468))))
(let (($generated@@470 ($generated@@341 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@340 $generated@@470 $generated@@469)) (or (= $generated@@468 ($generated@@339 $generated@@470 $generated@@469)) (exists (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (and (and (= (type $generated@@471) $generated@@165) (= (type $generated@@472) $generated@@165)) ($generated@@0 ($generated@@90 ($generated@@416 $generated@@468) ($generated@@309 ($generated@@258 $generated@@471 $generated@@472)))))
 :no-pattern (type $generated@@471)
 :no-pattern (type $generated@@472)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
 :no-pattern ($generated $generated@@472)
 :no-pattern ($generated@@0 $generated@@472)
))))))
 :pattern ( ($generated@@416 $generated@@468))
)))
(assert (forall (($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@473) $generated@@165) ($generated@@259 $generated@@473 $generated@@46)) (and (= ($generated@@309 ($generated@@359 $generated@@2 $generated@@473)) $generated@@473) ($generated@@151 ($generated@@359 $generated@@2 $generated@@473) $generated@@46)))
 :pattern ( ($generated@@259 $generated@@473 $generated@@46))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@165) ($generated@@259 $generated@@474 $generated@@47)) (and (= ($generated@@309 ($generated@@359 $generated@@3 $generated@@474)) $generated@@474) ($generated@@151 ($generated@@359 $generated@@3 $generated@@474) $generated@@47)))
 :pattern ( ($generated@@259 $generated@@474 $generated@@47))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@165) ($generated@@259 $generated@@475 $generated@@44)) (and (= ($generated@@309 ($generated@@359 $generated@@4 $generated@@475)) $generated@@475) ($generated@@151 ($generated@@359 $generated@@4 $generated@@475) $generated@@44)))
 :pattern ( ($generated@@259 $generated@@475 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@476) 20))
(assert (forall (($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@165) ($generated@@259 $generated@@477 $generated@@45)) (and (= ($generated@@309 ($generated@@359 $generated@@476 $generated@@477)) $generated@@477) ($generated@@151 ($generated@@359 $generated@@476 $generated@@477) $generated@@45)))
 :pattern ( ($generated@@259 $generated@@477 $generated@@45))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@73) (= ($generated@@259 ($generated@@309 $generated@@478) $generated@@479) ($generated@@151 $generated@@478 $generated@@479)))
 :pattern ( ($generated@@259 ($generated@@309 $generated@@478) $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ) (! (let (($generated@@481 ($generated@@88 (type $generated@@480))))
 (=> (= (type $generated@@480) ($generated@@85 $generated@@481 $generated@@2)) (<= 0 ($generated@@314 $generated@@480))))
 :pattern ( ($generated@@314 $generated@@480))
)))
(assert (forall (($generated@@482 T@U) ) (! (let (($generated@@483 ($generated@@304 (type $generated@@482))))
 (=> (= (type $generated@@482) ($generated@@303 $generated@@483)) (<= 0 ($generated@@302 $generated@@482))))
 :pattern ( ($generated@@302 $generated@@482))
)))
(assert (forall (($generated@@485 T@U) ) (! (= (type ($generated@@484 $generated@@485)) $generated@@73)
 :pattern ( ($generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@73) (= (type $generated@@487) $generated@@73)) (= ($generated@@484 ($generated@@434 $generated@@486 $generated@@487)) $generated@@486))
 :pattern ( ($generated@@434 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@73)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@73) (= (type $generated@@491) $generated@@73)) (= ($generated@@488 ($generated@@434 $generated@@490 $generated@@491)) $generated@@491))
 :pattern ( ($generated@@434 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@73) (= (type $generated@@493) $generated@@73)) (= ($generated@@81 ($generated@@434 $generated@@492 $generated@@493)) $generated@@58))
 :pattern ( ($generated@@434 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@73)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@73) (= (type $generated@@497) $generated@@73)) (= ($generated@@494 ($generated@@442 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@442 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@73)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@73) (= (type $generated@@501) $generated@@73)) (= ($generated@@498 ($generated@@442 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@442 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@73) (= (type $generated@@503) $generated@@73)) (= ($generated@@81 ($generated@@442 $generated@@502 $generated@@503)) $generated@@59))
 :pattern ( ($generated@@442 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@165) (= (type $generated@@505) $generated@@165)) (= ($generated@@295 ($generated@@258 $generated@@504 $generated@@505)) $generated@@61))
 :pattern ( ($generated@@258 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@73)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@73) (= (type $generated@@509) $generated@@73)) (= ($generated@@506 ($generated@@155 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@155 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@511 T@U) ) (! (= (type ($generated@@510 $generated@@511)) $generated@@73)
 :pattern ( ($generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@73) (= (type $generated@@513) $generated@@73)) (= ($generated@@510 ($generated@@155 $generated@@512 $generated@@513)) $generated@@513))
 :pattern ( ($generated@@155 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@165) (= (type $generated@@515) $generated@@165)) (= ($generated@@163 ($generated@@258 $generated@@514 $generated@@515)) $generated@@514))
 :pattern ( ($generated@@258 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@165) (= (type $generated@@517) $generated@@165)) (= ($generated@@164 ($generated@@258 $generated@@516 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@258 $generated@@516 $generated@@517))
)))
(assert  (and (forall (($generated@@520 T@U) ) (! (= (type ($generated@@518 $generated@@520)) $generated@@73)
 :pattern ( ($generated@@518 $generated@@520))
)) (forall (($generated@@521 T@U) ($generated@@522 Int) ) (! (let (($generated@@523 ($generated@@304 (type $generated@@521))))
(= (type ($generated@@519 $generated@@521 $generated@@522)) $generated@@523))
 :pattern ( ($generated@@519 $generated@@521 $generated@@522))
))))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (= (type $generated@@524) ($generated@@303 $generated@@165)) (= (type $generated@@525) $generated@@73)) (= (type $generated@@526) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@524 ($generated@@518 $generated@@525) $generated@@526) (forall (($generated@@527 Int) ) (!  (=> (and (<= 0 $generated@@527) (< $generated@@527 ($generated@@302 $generated@@524))) ($generated@@289 ($generated@@519 $generated@@524 $generated@@527) $generated@@525 $generated@@526))
 :pattern ( ($generated@@519 $generated@@524 $generated@@527))
))))
 :pattern ( ($generated@@83 $generated@@524 ($generated@@518 $generated@@525) $generated@@526))
)))
(assert (forall (($generated@@529 Int) ) (! (= ($generated@@528 ($generated@@84 $generated@@529)) $generated@@529)
 :pattern ( ($generated@@84 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@73)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@73) (= ($generated@@530 ($generated@@272 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@272 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@73) (= ($generated@@81 ($generated@@272 $generated@@533)) $generated@@54))
 :pattern ( ($generated@@272 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@73)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ) (!  (=> (= (type $generated@@536) $generated@@73) (= ($generated@@534 ($generated@@277 $generated@@536)) $generated@@536))
 :pattern ( ($generated@@277 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ) (!  (=> (= (type $generated@@537) $generated@@73) (= ($generated@@81 ($generated@@277 $generated@@537)) $generated@@55))
 :pattern ( ($generated@@277 $generated@@537))
)))
(assert (forall (($generated@@539 T@U) ) (! (= (type ($generated@@538 $generated@@539)) $generated@@73)
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ) (!  (=> (= (type $generated@@540) $generated@@73) (= ($generated@@538 ($generated@@173 $generated@@540)) $generated@@540))
 :pattern ( ($generated@@173 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@73) (= ($generated@@81 ($generated@@173 $generated@@541)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ) (! (= (type ($generated@@542 $generated@@543)) $generated@@73)
 :pattern ( ($generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@73) (= ($generated@@542 ($generated@@518 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@518 $generated@@544))
)))
(assert (forall (($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@73) (= ($generated@@81 ($generated@@518 $generated@@545)) $generated@@57))
 :pattern ( ($generated@@518 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ) (! (let (($generated@@547 (type $generated@@546)))
(= ($generated@@359 $generated@@547 ($generated@@309 $generated@@546)) $generated@@546))
 :pattern ( ($generated@@309 $generated@@546))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@322 $generated@@165 $generated@@165)) (= (type $generated@@549) $generated@@73)) (= (type $generated@@550) $generated@@73)) (= ($generated@@151 $generated@@548 ($generated@@434 $generated@@549 $generated@@550)) (forall (($generated@@551 T@U) ) (!  (=> (and (= (type $generated@@551) $generated@@165) ($generated@@0 ($generated@@90 ($generated@@320 $generated@@548) $generated@@551))) (and ($generated@@259 ($generated@@90 ($generated@@409 $generated@@548) $generated@@551) $generated@@550) ($generated@@259 $generated@@551 $generated@@549)))
 :pattern ( ($generated@@90 ($generated@@409 $generated@@548) $generated@@551))
 :pattern ( ($generated@@90 ($generated@@320 $generated@@548) $generated@@551))
))))
 :pattern ( ($generated@@151 $generated@@548 ($generated@@434 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (= (type $generated@@552) ($generated@@340 $generated@@165 $generated@@165)) (= (type $generated@@553) $generated@@73)) (= (type $generated@@554) $generated@@73)) (= ($generated@@151 $generated@@552 ($generated@@442 $generated@@553 $generated@@554)) (forall (($generated@@555 T@U) ) (!  (=> (and (= (type $generated@@555) $generated@@165) ($generated@@0 ($generated@@90 ($generated@@338 $generated@@552) $generated@@555))) (and ($generated@@259 ($generated@@90 ($generated@@417 $generated@@552) $generated@@555) $generated@@554) ($generated@@259 $generated@@555 $generated@@553)))
 :pattern ( ($generated@@90 ($generated@@417 $generated@@552) $generated@@555))
 :pattern ( ($generated@@90 ($generated@@338 $generated@@552) $generated@@555))
))))
 :pattern ( ($generated@@151 $generated@@552 ($generated@@442 $generated@@553 $generated@@554)))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@165) (= (type $generated@@559) $generated@@165)) (< ($generated@@556 $generated@@558) ($generated@@557 ($generated@@258 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@258 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@560) $generated@@165) (= (type $generated@@561) $generated@@165)) (< ($generated@@556 $generated@@561) ($generated@@557 ($generated@@258 $generated@@560 $generated@@561))))
 :pattern ( ($generated@@258 $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (and (= (type $generated@@562) $generated@@165) (= (type $generated@@563) $generated@@73)) (= (type $generated@@564) $generated@@73)) ($generated@@259 $generated@@562 ($generated@@434 $generated@@563 $generated@@564))) (and (= ($generated@@309 ($generated@@359 ($generated@@322 $generated@@165 $generated@@165) $generated@@562)) $generated@@562) ($generated@@151 ($generated@@359 ($generated@@322 $generated@@165 $generated@@165) $generated@@562) ($generated@@434 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@259 $generated@@562 ($generated@@434 $generated@@563 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (and (= (type $generated@@565) $generated@@165) (= (type $generated@@566) $generated@@73)) (= (type $generated@@567) $generated@@73)) ($generated@@259 $generated@@565 ($generated@@442 $generated@@566 $generated@@567))) (and (= ($generated@@309 ($generated@@359 ($generated@@340 $generated@@165 $generated@@165) $generated@@565)) $generated@@565) ($generated@@151 ($generated@@359 ($generated@@340 $generated@@165 $generated@@165) $generated@@565) ($generated@@442 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@259 $generated@@565 ($generated@@442 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (and (= (type $generated@@568) $generated@@73) (= (type $generated@@569) $generated@@73)) (= (type $generated@@570) $generated@@165)) ($generated@@259 $generated@@570 ($generated@@155 $generated@@568 $generated@@569))) (and (= ($generated@@309 ($generated@@359 $generated@@156 $generated@@570)) $generated@@570) ($generated@@151 ($generated@@359 $generated@@156 $generated@@570) ($generated@@155 $generated@@568 $generated@@569))))
 :pattern ( ($generated@@259 $generated@@570 ($generated@@155 $generated@@568 $generated@@569)))
)))
(assert (forall (($generated@@571 T@U) ) (! (let (($generated@@572 (type $generated@@571)))
 (not ($generated@@0 ($generated@@90 ($generated@@452 $generated@@572) $generated@@571))))
 :pattern ( (let (($generated@@572 (type $generated@@571)))
($generated@@90 ($generated@@452 $generated@@572) $generated@@571)))
)))
(assert (forall (($generated@@574 T@U) ) (! (= (type ($generated@@573 $generated@@574)) $generated@@78)
 :pattern ( ($generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@73) (= (type $generated@@576) $generated@@73)) (and (= ($generated@@81 ($generated@@155 $generated@@575 $generated@@576)) $generated@@62) (= ($generated@@573 ($generated@@155 $generated@@575 $generated@@576)) $generated@@69)))
 :pattern ( ($generated@@155 $generated@@575 $generated@@576))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@156) (= ($generated@@556 ($generated@@309 $generated@@577)) ($generated@@557 $generated@@577)))
 :pattern ( ($generated@@556 ($generated@@309 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@165) ($generated@@259 $generated@@578 ($generated@@84 0))) (and (= ($generated@@309 ($generated@@359 $generated@@2 $generated@@578)) $generated@@578) ($generated@@151 ($generated@@359 ($generated@@85 $generated@@165 $generated@@4) $generated@@578) ($generated@@84 0))))
 :pattern ( ($generated@@259 $generated@@578 ($generated@@84 0)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@165) (= (type $generated@@580) $generated@@73)) ($generated@@259 $generated@@579 ($generated@@272 $generated@@580))) (and (= ($generated@@309 ($generated@@359 ($generated@@85 $generated@@165 $generated@@4) $generated@@579)) $generated@@579) ($generated@@151 ($generated@@359 ($generated@@85 $generated@@165 $generated@@4) $generated@@579) ($generated@@272 $generated@@580))))
 :pattern ( ($generated@@259 $generated@@579 ($generated@@272 $generated@@580)))
)))
(assert (forall (($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (= (type $generated@@581) $generated@@165) (= (type $generated@@582) $generated@@73)) ($generated@@259 $generated@@581 ($generated@@277 $generated@@582))) (and (= ($generated@@309 ($generated@@359 ($generated@@85 $generated@@165 $generated@@4) $generated@@581)) $generated@@581) ($generated@@151 ($generated@@359 ($generated@@85 $generated@@165 $generated@@4) $generated@@581) ($generated@@277 $generated@@582))))
 :pattern ( ($generated@@259 $generated@@581 ($generated@@277 $generated@@582)))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@583) $generated@@165) (= (type $generated@@584) $generated@@73)) ($generated@@259 $generated@@583 ($generated@@173 $generated@@584))) (and (= ($generated@@309 ($generated@@359 ($generated@@85 $generated@@165 $generated@@2) $generated@@583)) $generated@@583) ($generated@@151 ($generated@@359 ($generated@@85 $generated@@165 $generated@@2) $generated@@583) ($generated@@173 $generated@@584))))
 :pattern ( ($generated@@259 $generated@@583 ($generated@@173 $generated@@584)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (= (type $generated@@585) $generated@@165) (= (type $generated@@586) $generated@@73)) ($generated@@259 $generated@@585 ($generated@@518 $generated@@586))) (and (= ($generated@@309 ($generated@@359 ($generated@@303 $generated@@165) $generated@@585)) $generated@@585) ($generated@@151 ($generated@@359 ($generated@@303 $generated@@165) $generated@@585) ($generated@@518 $generated@@586))))
 :pattern ( ($generated@@259 $generated@@585 ($generated@@518 $generated@@586)))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@587) $generated@@86) (= (type $generated@@588) ($generated@@85 $generated@@86 $generated@@87))) (and (not (= $generated@@587 $generated@@142)) ($generated@@83 $generated@@587 $generated@@145 $generated@@588))) ($generated@@83 $generated@@587 $generated@@170 $generated@@588))
 :pattern ( ($generated@@83 $generated@@587 $generated@@145 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (= (type $generated@@589) $generated@@86) (= (type $generated@@590) ($generated@@85 $generated@@86 $generated@@87))) (and (not (= $generated@@589 $generated@@142)) ($generated@@83 $generated@@589 $generated@@148 $generated@@590))) ($generated@@83 $generated@@589 $generated@@170 $generated@@590))
 :pattern ( ($generated@@83 $generated@@589 $generated@@148 $generated@@590))
)))
(assert (= ($generated@@81 $generated@@141) $generated@@63))
(assert (= ($generated@@573 $generated@@141) $generated@@70))
(assert (= ($generated@@81 $generated@@170) $generated@@64))
(assert (= ($generated@@573 $generated@@170) $generated@@70))
(assert (= ($generated@@81 $generated@@145) $generated@@65))
(assert (= ($generated@@573 $generated@@145) $generated@@71))
(assert (= ($generated@@81 $generated@@252) $generated@@66))
(assert (= ($generated@@573 $generated@@252) $generated@@71))
(assert (= ($generated@@81 $generated@@148) $generated@@67))
(assert (= ($generated@@573 $generated@@148) $generated@@72))
(assert (= ($generated@@81 $generated@@255) $generated@@68))
(assert (= ($generated@@573 $generated@@255) $generated@@72))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (!  (=> (and (and (= (type $generated@@591) ($generated@@85 $generated@@165 $generated@@2)) (= (type $generated@@592) $generated@@73)) (= (type $generated@@593) ($generated@@85 $generated@@86 $generated@@87))) (= ($generated@@83 $generated@@591 ($generated@@173 $generated@@592) $generated@@593) (forall (($generated@@594 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@165) (< 0 ($generated ($generated@@90 $generated@@591 $generated@@594)))) ($generated@@289 $generated@@594 $generated@@592 $generated@@593))
 :pattern ( ($generated@@90 $generated@@591 $generated@@594))
))))
 :pattern ( ($generated@@83 $generated@@591 ($generated@@173 $generated@@592) $generated@@593))
)))
(assert (forall (($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@86) (= ($generated@@151 $generated@@595 $generated@@141)  (or (= $generated@@595 $generated@@142) ($generated@@153 ($generated@@178 $generated@@595)))))
 :pattern ( ($generated@@151 $generated@@595 $generated@@141))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (and (and (= (type $generated@@596) $generated@@156) (= (type $generated@@597) $generated@@73)) (= (type $generated@@598) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@288 $generated@@598) (and ($generated@@154 $generated@@596) (exists (($generated@@599 T@U) ) (!  (and (= (type $generated@@599) $generated@@73) ($generated@@83 $generated@@596 ($generated@@155 $generated@@597 $generated@@599) $generated@@598))
 :pattern ( ($generated@@83 $generated@@596 ($generated@@155 $generated@@597 $generated@@599) $generated@@598))
))))) ($generated@@289 ($generated@@163 $generated@@596) $generated@@597 $generated@@598))
 :pattern ( ($generated@@289 ($generated@@163 $generated@@596) $generated@@597 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (and (and (= (type $generated@@600) $generated@@156) (= (type $generated@@601) $generated@@73)) (= (type $generated@@602) ($generated@@85 $generated@@86 $generated@@87))) (and ($generated@@288 $generated@@602) (and ($generated@@154 $generated@@600) (exists (($generated@@603 T@U) ) (!  (and (= (type $generated@@603) $generated@@73) ($generated@@83 $generated@@600 ($generated@@155 $generated@@603 $generated@@601) $generated@@602))
 :pattern ( ($generated@@83 $generated@@600 ($generated@@155 $generated@@603 $generated@@601) $generated@@602))
))))) ($generated@@289 ($generated@@164 $generated@@600) $generated@@601 $generated@@602))
 :pattern ( ($generated@@289 ($generated@@164 $generated@@600) $generated@@601 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@165) (= (type $generated@@605) $generated@@165)) (= ($generated@@258 ($generated@@284 $generated@@604) ($generated@@284 $generated@@605)) ($generated@@284 ($generated@@258 $generated@@604 $generated@@605))))
 :pattern ( ($generated@@258 ($generated@@284 $generated@@604) ($generated@@284 $generated@@605)))
)))
(assert (forall (($generated@@606 Int) ) (! (= ($generated@@309 ($generated@@8 ($generated@@282 $generated@@606))) ($generated@@284 ($generated@@309 ($generated@@8 $generated@@606))))
 :pattern ( ($generated@@309 ($generated@@8 ($generated@@282 $generated@@606))))
)))
(assert (forall (($generated@@607 T@U) ) (! (= ($generated@@309 ($generated@@284 $generated@@607)) ($generated@@284 ($generated@@309 $generated@@607)))
 :pattern ( ($generated@@309 ($generated@@284 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 ($generated@@304 (type $generated@@608))))
 (=> (and (= (type $generated@@608) ($generated@@303 $generated@@609)) (= ($generated@@302 $generated@@608) 0)) (= $generated@@608 ($generated@@301 $generated@@609))))
 :pattern ( ($generated@@302 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (! (let (($generated@@613 (type $generated@@611)))
 (=> (and (and (= (type $generated@@610) ($generated@@85 $generated@@613 $generated@@2)) (= (type $generated@@612) $generated@@2)) (<= 0 ($generated $generated@@612))) (= ($generated@@314 ($generated@@91 $generated@@610 $generated@@611 $generated@@612)) (+ (- ($generated@@314 $generated@@610) ($generated ($generated@@90 $generated@@610 $generated@@611))) ($generated $generated@@612)))))
 :pattern ( ($generated@@314 ($generated@@91 $generated@@610 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@615) $generated@@2)) ($generated@@83 $generated@@615 $generated@@46 $generated@@614))
 :pattern ( ($generated@@83 $generated@@615 $generated@@46 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@617) $generated@@3)) ($generated@@83 $generated@@617 $generated@@47 $generated@@616))
 :pattern ( ($generated@@83 $generated@@617 $generated@@47 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@619) $generated@@4)) ($generated@@83 $generated@@619 $generated@@44 $generated@@618))
 :pattern ( ($generated@@83 $generated@@619 $generated@@44 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@621) $generated@@476)) ($generated@@83 $generated@@621 $generated@@45 $generated@@620))
 :pattern ( ($generated@@83 $generated@@621 $generated@@45 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@85 $generated@@86 $generated@@87)) (= (type $generated@@623) $generated@@165)) ($generated@@83 $generated@@623 $generated@@48 $generated@@622))
 :pattern ( ($generated@@83 $generated@@623 $generated@@48 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@303 $generated@@165)) (= (type $generated@@625) $generated@@73)) (= ($generated@@151 $generated@@624 ($generated@@518 $generated@@625)) (forall (($generated@@626 Int) ) (!  (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@302 $generated@@624))) ($generated@@259 ($generated@@519 $generated@@624 $generated@@626) $generated@@625))
 :pattern ( ($generated@@519 $generated@@624 $generated@@626))
))))
 :pattern ( ($generated@@151 $generated@@624 ($generated@@518 $generated@@625)))
)))
(assert  (=> (<= 1 $generated@@266) (forall (($generated@@627 T@U) ) (!  (=> (and (= (type $generated@@627) $generated@@86) (or ($generated@@268 $generated@@627) (and (not (= 1 $generated@@266)) (and ($generated@@151 $generated@@627 $generated@@170) ($generated@@151 $generated@@627 $generated@@252))))) (= ($generated@@267 $generated@@627) (ite ($generated@@151 $generated@@627 $generated@@255) (= ($generated@@282 ($generated@@396 1 ($generated@@282 0))) ($generated@@282 0)) true)))
 :pattern ( ($generated@@267 $generated@@627))
))))
(assert (forall (($generated@@629 T@U) ($generated@@630 Int) ) (!  (=> (= (type $generated@@629) ($generated@@303 $generated@@165)) (=> (and (<= 0 $generated@@630) (< $generated@@630 ($generated@@302 $generated@@629))) (< ($generated@@557 ($generated@@359 $generated@@156 ($generated@@519 $generated@@629 $generated@@630))) ($generated@@628 $generated@@629))))
 :pattern ( ($generated@@557 ($generated@@359 $generated@@156 ($generated@@519 $generated@@629 $generated@@630))))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) ($generated@@322 $generated@@165 $generated@@165)) (= (type $generated@@632) $generated@@73)) (= (type $generated@@633) $generated@@73)) ($generated@@151 $generated@@631 ($generated@@434 $generated@@632 $generated@@633))) (and (and ($generated@@151 ($generated@@320 $generated@@631) ($generated@@272 $generated@@632)) ($generated@@151 ($generated@@375 $generated@@631) ($generated@@272 $generated@@633))) ($generated@@151 ($generated@@408 $generated@@631) ($generated@@272 ($generated@@155 $generated@@632 $generated@@633)))))
 :pattern ( ($generated@@151 $generated@@631 ($generated@@434 $generated@@632 $generated@@633)))
)))
(assert (forall (($generated@@634 T@U) ($generated@@635 T@U) ($generated@@636 T@U) ) (!  (=> (and (and (and (= (type $generated@@634) ($generated@@340 $generated@@165 $generated@@165)) (= (type $generated@@635) $generated@@73)) (= (type $generated@@636) $generated@@73)) ($generated@@151 $generated@@634 ($generated@@442 $generated@@635 $generated@@636))) (and (and ($generated@@151 ($generated@@338 $generated@@634) ($generated@@277 $generated@@635)) ($generated@@151 ($generated@@386 $generated@@634) ($generated@@277 $generated@@636))) ($generated@@151 ($generated@@416 $generated@@634) ($generated@@277 ($generated@@155 $generated@@635 $generated@@636)))))
 :pattern ( ($generated@@151 $generated@@634 ($generated@@442 $generated@@635 $generated@@636)))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@2) ($generated@@151 $generated@@637 $generated@@46))
 :pattern ( ($generated@@151 $generated@@637 $generated@@46))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@3) ($generated@@151 $generated@@638 $generated@@47))
 :pattern ( ($generated@@151 $generated@@638 $generated@@47))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@4) ($generated@@151 $generated@@639 $generated@@44))
 :pattern ( ($generated@@151 $generated@@639 $generated@@44))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@476) ($generated@@151 $generated@@640 $generated@@45))
 :pattern ( ($generated@@151 $generated@@640 $generated@@45))
)))
(assert (forall (($generated@@641 T@U) ) (!  (=> (= (type $generated@@641) $generated@@165) ($generated@@151 $generated@@641 $generated@@48))
 :pattern ( ($generated@@151 $generated@@641 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 (T@U) Bool)
(assert  (and (and (and (= (type $generated@@642) $generated@@86) (= (type $generated@@643) ($generated@@184 $generated@@86 $generated@@4))) (= (type $generated@@644) ($generated@@85 $generated@@86 $generated@@87))) (= (type $generated@@645) ($generated@@184 $generated@@86 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@647 true))
(let (($generated@@648  (=> (and ($generated@@151 $generated@@642 $generated@@255) (= (ControlFlow 0 3) (- 0 2))) (not (= ($generated@@282 0) 0)))))
(let (($generated@@649  (=> (= $generated@@643 ($generated@@238 $generated@@142 $generated@@644 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 3) $generated@@648) (=> (= (ControlFlow 0 5) 4) $generated@@647)))))
(let (($generated@@650 true))
(let (($generated@@651  (=> (and (= $generated@@645 ($generated@@183 $generated@@142 $generated@@644 $generated@@60 false)) ($generated@@151 $generated@@642 $generated@@252)) (and (=> (= (ControlFlow 0 6) 1) $generated@@650) (=> (= (ControlFlow 0 6) 5) $generated@@649)))))
(let (($generated@@652  (=> (and (and (and ($generated@@288 $generated@@644) ($generated@@646 $generated@@644)) ($generated@@151 $generated@@642 $generated@@170)) (and (= 1 $generated@@266) (= (ControlFlow 0 7) 6))) $generated@@651)))
$generated@@652)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@T) T@T)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (Int) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@U T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@159 () Int)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 (T@U T@U) T@U)
(declare-fun $generated@@167 () T@T)
(declare-fun $generated@@173 (T@U T@U) Bool)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 () T@T)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@193 (T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@195 (T@T T@T) T@T)
(declare-fun $generated@@196 (T@T) T@T)
(declare-fun $generated@@197 (T@T) T@T)
(declare-fun $generated@@198 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@259 (T@U T@U) T@U)
(declare-fun $generated@@260 (T@U T@U) Bool)
(declare-fun $generated@@267 (T@U) Bool)
(declare-fun $generated@@268 (T@U) Bool)
(declare-fun $generated@@272 (T@U) T@U)
(declare-fun $generated@@277 (T@U) T@U)
(declare-fun $generated@@282 (Int) Int)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@288 (T@U) Bool)
(declare-fun $generated@@289 (T@U T@U T@U) Bool)
(declare-fun $generated@@295 (T@U) T@U)
(declare-fun $generated@@301 (T@T) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@T)
(declare-fun $generated@@304 (T@T) T@T)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@322 (T@U) Int)
(declare-fun $generated@@323 (T@T) T@U)
(declare-fun $generated@@328 (T@U) T@U)
(declare-fun $generated@@329 (T@T T@T) T@U)
(declare-fun $generated@@330 (T@T T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@332 (T@T) T@T)
(declare-fun $generated@@346 (T@U) T@U)
(declare-fun $generated@@347 (T@T T@T) T@U)
(declare-fun $generated@@348 (T@T T@T) T@T)
(declare-fun $generated@@349 (T@T) T@T)
(declare-fun $generated@@350 (T@T) T@T)
(declare-fun $generated@@367 (T@T T@U) T@U)
(declare-fun $generated@@384 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@405 (Int Int) Int)
(declare-fun $generated@@417 (T@U) T@U)
(declare-fun $generated@@418 (T@U) T@U)
(declare-fun $generated@@425 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@443 (T@U T@U) T@U)
(declare-fun $generated@@451 (T@U T@U) T@U)
(declare-fun $generated@@461 (T@U T@U) T@U)
(declare-fun $generated@@476 (T@T) T@U)
(declare-fun $generated@@500 () T@T)
(declare-fun $generated@@508 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@534 (T@U) T@U)
(declare-fun $generated@@542 (T@U) T@U)
(declare-fun $generated@@543 (T@U Int) T@U)
(declare-fun $generated@@555 (T@U) Int)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@565 (T@U) T@U)
(declare-fun $generated@@569 (T@U) T@U)
(declare-fun $generated@@583 (T@U) Int)
(declare-fun $generated@@584 (T@U) Int)
(declare-fun $generated@@598 (T@T) T@U)
(declare-fun $generated@@604 (T@U) T@U)
(declare-fun $generated@@667 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@75) 6) (= (type $generated@@44) $generated@@75)) (= (type $generated@@45) $generated@@75)) (= (type $generated@@46) $generated@@75)) (= (type $generated@@47) $generated@@75)) (= (type $generated@@48) $generated@@75)) (= ($generated@@1 $generated@@76) 7)) (= (type $generated@@49) $generated@@76)) (= (type $generated@@50) $generated@@76)) (= (type $generated@@51) $generated@@76)) (= (type $generated@@52) $generated@@76)) (= (type $generated@@53) $generated@@76)) (= (type $generated@@54) $generated@@76)) (= (type $generated@@55) $generated@@76)) (= (type $generated@@56) $generated@@76)) (= (type $generated@@57) $generated@@76)) (= (type $generated@@58) $generated@@76)) (= (type $generated@@59) $generated@@76)) (forall (($generated@@81 T@T) ) (= ($generated@@1 ($generated@@77 $generated@@81)) 8))) (forall (($generated@@82 T@T) ) (! (= ($generated@@78 ($generated@@77 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@77 $generated@@82))
))) (= (type $generated@@60) ($generated@@77 $generated@@4))) (= ($generated@@1 $generated@@79) 9)) (= (type $generated@@61) $generated@@79)) (= (type $generated@@62) $generated@@76)) (= (type $generated@@63) $generated@@76)) (= (type $generated@@64) $generated@@76)) (= (type $generated@@65) $generated@@76)) (= (type $generated@@66) $generated@@76)) (= (type $generated@@67) $generated@@76)) (= (type $generated@@68) $generated@@76)) (= (type $generated@@69) $generated@@76)) (= ($generated@@1 $generated@@80) 10)) (= (type $generated@@70) $generated@@80)) (= (type $generated@@71) $generated@@80)) (= (type $generated@@72) $generated@@80)) (= (type $generated@@73) $generated@@80)) (= (type $generated@@74) $generated@@80)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70 $generated@@71 $generated@@72 $generated@@73 $generated@@74)
)
(assert (forall (($generated@@84 T@U) ) (! (= (type ($generated@@83 $generated@@84)) $generated@@76)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (= ($generated@@83 $generated@@44) $generated@@49))
(assert (= ($generated@@83 $generated@@45) $generated@@50))
(assert (= ($generated@@83 $generated@@46) $generated@@51))
(assert (= ($generated@@83 $generated@@47) $generated@@52))
(assert (= ($generated@@83 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (= ($generated@@1 ($generated@@87 $generated@@96 $generated@@97)) 11)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@87 $generated@@98 $generated@@99))
))) (forall (($generated@@100 T@T) ($generated@@101 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@87 $generated@@100 $generated@@101))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 ($generated@@91 (type $generated@@102))))
(= (type ($generated@@92 $generated@@102 $generated@@103)) $generated@@104))
 :pattern ( ($generated@@92 $generated@@102 $generated@@103))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 (type $generated@@107)))
(let (($generated@@109 (type $generated@@106)))
(= (type ($generated@@93 $generated@@105 $generated@@106 $generated@@107)) ($generated@@87 $generated@@109 $generated@@108))))
 :pattern ( ($generated@@93 $generated@@105 $generated@@106 $generated@@107))
))) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@91 (type $generated@@110))))
 (=> (= (type $generated@@112) $generated@@113) (= ($generated@@92 ($generated@@93 $generated@@110 $generated@@111 $generated@@112) $generated@@111) $generated@@112)))
 :weight 0
))) (and (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@116 $generated@@117) (= ($generated@@92 ($generated@@93 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@92 $generated@@115 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or true (= ($generated@@92 ($generated@@93 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@92 $generated@@119 $generated@@121)))
 :weight 0
)))) (= ($generated@@1 $generated@@88) 12)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (let (($generated@@124 ($generated@@78 (type $generated@@123))))
(= (type ($generated@@94 $generated@@122 $generated@@123)) $generated@@124))
 :pattern ( ($generated@@94 $generated@@122 $generated@@123))
))) (= ($generated@@1 $generated@@89) 13)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= (type ($generated@@95 $generated@@125 $generated@@126 $generated@@127)) $generated@@89)
 :pattern ( ($generated@@95 $generated@@125 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (let (($generated@@131 ($generated@@78 (type $generated@@129))))
 (=> (= (type $generated@@130) $generated@@131) (= ($generated@@94 ($generated@@95 $generated@@128 $generated@@129 $generated@@130) $generated@@129) $generated@@130)))
 :weight 0
))) (and (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 ($generated@@95 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@133 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or true (= ($generated@@94 ($generated@@95 $generated@@137 $generated@@138 $generated@@136) $generated@@139) ($generated@@94 $generated@@137 $generated@@139)))
 :weight 0
)))) (forall (($generated@@140 Int) ) (! (= (type ($generated@@86 $generated@@140)) $generated@@75)
 :pattern ( ($generated@@86 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (= (type $generated@@141) $generated@@2) (= (type $generated@@142) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
 :pattern ( ($generated@@85 $generated@@141 ($generated@@86 0) $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and (= (type $generated@@144) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@145) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@143 $generated@@144 $generated@@145)) (forall (($generated@@146 T@U) ) (!  (=> (and (= (type $generated@@146) $generated@@88) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@144 $generated@@146) $generated@@60))) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60)))
 :pattern ( ($generated@@94 ($generated@@92 $generated@@145 $generated@@146) $generated@@60))
)))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145))
)))
(assert  (and (= (type $generated@@147) $generated@@75) (= (type $generated@@148) $generated@@88)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@88) (= (type $generated@@150) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@149 $generated@@147 $generated@@150)  (or (= $generated@@149 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@150 $generated@@149) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@149 $generated@@147 $generated@@150))
)))
(assert (= (type $generated@@151) $generated@@75))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@88) (= (type $generated@@153) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@152 $generated@@151 $generated@@153)  (or (= $generated@@152 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@153 $generated@@152) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@152 $generated@@151 $generated@@153))
)))
(assert (= (type $generated@@154) $generated@@75))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@88) (= (type $generated@@156) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@155 $generated@@154 $generated@@156)  (or (= $generated@@155 $generated@@148) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@156 $generated@@155) $generated@@60)))))
 :pattern ( ($generated@@85 $generated@@155 $generated@@154 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@157 $generated@@158 ($generated@@86 0)))
 :pattern ( ($generated@@157 $generated@@158 ($generated@@86 0)))
)))
(assert (= (type $generated@@162) $generated@@75))
(assert  (=> (<= 1 $generated@@159) (forall (($generated@@163 T@U) ) (!  (=> (and (= (type $generated@@163) $generated@@88) (or ($generated@@161 $generated@@163) (and (not (= 1 $generated@@159)) ($generated@@157 $generated@@163 $generated@@162)))) true)
 :pattern ( ($generated@@160 $generated@@163))
))))
(assert ($generated@@164 $generated@@151))
(assert ($generated@@164 $generated@@154))
(assert  (and (= ($generated@@1 $generated@@167) 14) (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@168 $generated@@169)) $generated@@75)
 :pattern ( ($generated@@166 $generated@@168 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (and (= (type $generated@@170) $generated@@75) (= (type $generated@@171) $generated@@75)) (= (type $generated@@172) $generated@@167)) ($generated@@157 $generated@@172 ($generated@@166 $generated@@170 $generated@@171))) ($generated@@165 $generated@@172))
 :pattern ( ($generated@@165 $generated@@172) ($generated@@157 $generated@@172 ($generated@@166 $generated@@170 $generated@@171)))
)))
(assert  (and (and (= ($generated@@1 $generated@@176) 15) (forall (($generated@@177 T@U) ) (! (= (type ($generated@@174 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@174 $generated@@177))
))) (forall (($generated@@178 T@U) ) (! (= (type ($generated@@175 $generated@@178)) $generated@@176)
 :pattern ( ($generated@@175 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (= (type $generated@@179) $generated@@167) (= (type $generated@@180) $generated@@167)) true) (= ($generated@@173 $generated@@179 $generated@@180)  (and (= ($generated@@174 $generated@@179) ($generated@@174 $generated@@180)) (= ($generated@@175 $generated@@179) ($generated@@175 $generated@@180)))))
 :pattern ( ($generated@@173 $generated@@179 $generated@@180))
)))
(assert (= (type $generated@@181) $generated@@75))
(assert (forall (($generated@@182 T@U) ) (!  (=> (= (type $generated@@182) $generated@@88) (=> (and (not (= $generated@@182 $generated@@148)) ($generated@@157 $generated@@182 $generated@@151)) ($generated@@157 $generated@@182 $generated@@181)))
 :pattern ( ($generated@@157 $generated@@182 $generated@@151))
)))
(assert (forall (($generated@@183 T@U) ) (!  (=> (= (type $generated@@183) $generated@@88) (=> (and (not (= $generated@@183 $generated@@148)) ($generated@@157 $generated@@183 $generated@@154)) ($generated@@157 $generated@@183 $generated@@181)))
 :pattern ( ($generated@@157 $generated@@183 $generated@@154))
)))
(assert (forall (($generated@@186 T@U) ) (! (= (type ($generated@@184 $generated@@186)) $generated@@75)
 :pattern ( ($generated@@184 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (= (type $generated@@187) ($generated@@87 $generated@@176 $generated@@2)) (= (type $generated@@188) $generated@@75)) ($generated@@157 $generated@@187 ($generated@@184 $generated@@188))) ($generated@@185 $generated@@187))
 :pattern ( ($generated@@157 $generated@@187 ($generated@@184 $generated@@188)))
)))
(assert (forall (($generated@@190 T@U) ) (! (= (type ($generated@@189 $generated@@190)) $generated@@75)
 :pattern ( ($generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ) (!  (=> (= (type $generated@@191) $generated@@88) (= ($generated@@157 $generated@@191 $generated@@151)  (or (= $generated@@191 $generated@@148) (= ($generated@@189 $generated@@191) $generated@@151))))
 :pattern ( ($generated@@157 $generated@@191 $generated@@151))
)))
(assert (forall (($generated@@192 T@U) ) (!  (=> (= (type $generated@@192) $generated@@88) (= ($generated@@157 $generated@@192 $generated@@154)  (or (= $generated@@192 $generated@@148) (= ($generated@@189 $generated@@192) $generated@@154))))
 :pattern ( ($generated@@157 $generated@@192 $generated@@154))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (= ($generated@@1 ($generated@@195 $generated@@199 $generated@@200)) 16)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@196 ($generated@@195 $generated@@201 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@195 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@197 ($generated@@195 $generated@@203 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@195 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (let (($generated@@208 ($generated@@197 (type $generated@@205))))
(= (type ($generated@@193 $generated@@205 $generated@@206 $generated@@207)) $generated@@208))
 :pattern ( ($generated@@193 $generated@@205 $generated@@206 $generated@@207))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 (type $generated@@212)))
(let (($generated@@214 (type $generated@@210)))
(= (type ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212)) ($generated@@195 $generated@@214 $generated@@213))))
 :pattern ( ($generated@@198 $generated@@209 $generated@@210 $generated@@211 $generated@@212))
))) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (let (($generated@@219 ($generated@@197 (type $generated@@215))))
 (=> (= (type $generated@@218) $generated@@219) (= ($generated@@193 ($generated@@198 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@216 $generated@@217) $generated@@218)))
 :weight 0
))) (and (and (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@193 ($generated@@198 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@193 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
)) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@229 $generated@@231) (= ($generated@@193 ($generated@@198 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@193 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (or true (= ($generated@@193 ($generated@@198 $generated@@233 $generated@@234 $generated@@235 $generated@@232) $generated@@236 $generated@@237) ($generated@@193 $generated@@233 $generated@@236 $generated@@237)))
 :weight 0
)))) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 Bool) ) (! (= (type ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241)) ($generated@@195 $generated@@88 $generated@@4))
 :pattern ( ($generated@@194 $generated@@238 $generated@@239 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 Bool) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (let (($generated@@248 ($generated@@78 (type $generated@@247))))
 (=> (and (and (and (and (= (type $generated@@242) $generated@@88) (= (type $generated@@243) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@244) ($generated@@77 $generated@@4))) (= (type $generated@@246) $generated@@88)) (= (type $generated@@247) ($generated@@77 $generated@@248))) (= ($generated@@0 ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))  (=> (and (not (= $generated@@246 $generated@@242)) ($generated@@0 ($generated@@94 ($generated@@92 $generated@@243 $generated@@246) $generated@@244))) $generated@@245))))
 :pattern ( ($generated@@193 ($generated@@194 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@88) (= (type $generated@@250) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@249 $generated@@181 $generated@@250) ($generated@@85 $generated@@249 $generated@@147 $generated@@250)))
 :pattern ( ($generated@@85 $generated@@249 $generated@@181 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) $generated@@88) (= (type $generated@@252) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@251 $generated@@162 $generated@@252) ($generated@@85 $generated@@251 $generated@@151 $generated@@252)))
 :pattern ( ($generated@@85 $generated@@251 $generated@@162 $generated@@252))
)))
(assert (= (type $generated@@253) $generated@@75))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@88) (= (type $generated@@255) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@254 $generated@@253 $generated@@255) ($generated@@85 $generated@@254 $generated@@154 $generated@@255)))
 :pattern ( ($generated@@85 $generated@@254 $generated@@253 $generated@@255))
)))
(assert (= (type $generated@@256) $generated@@75))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@88) (= (type $generated@@258) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@257 $generated@@256 $generated@@258) ($generated@@85 $generated@@257 $generated@@162 $generated@@258)))
 :pattern ( ($generated@@85 $generated@@257 $generated@@256 $generated@@258))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (! (= (type ($generated@@259 $generated@@261 $generated@@262)) $generated@@167)
 :pattern ( ($generated@@259 $generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (and (and (= (type $generated@@263) $generated@@75) (= (type $generated@@264) $generated@@75)) (= (type $generated@@265) $generated@@176)) (= (type $generated@@266) $generated@@176)) (= ($generated@@157 ($generated@@259 $generated@@265 $generated@@266) ($generated@@166 $generated@@263 $generated@@264))  (and ($generated@@260 $generated@@265 $generated@@263) ($generated@@260 $generated@@266 $generated@@264))))
 :pattern ( ($generated@@157 ($generated@@259 $generated@@265 $generated@@266) ($generated@@166 $generated@@263 $generated@@264)))
)))
(assert  (=> (<= 1 $generated@@159) (forall (($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@269) $generated@@88) (or ($generated@@268 $generated@@269) (and (not (= 1 $generated@@159)) (and ($generated@@157 $generated@@269 $generated@@181) ($generated@@157 $generated@@269 $generated@@162))))) true)
 :pattern ( ($generated@@267 $generated@@269))
))))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@167) (= (type $generated@@271) $generated@@167)) (= ($generated@@173 $generated@@270 $generated@@271) (= $generated@@270 $generated@@271)))
 :pattern ( ($generated@@173 $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= (type ($generated@@272 $generated@@273)) $generated@@75)
 :pattern ( ($generated@@272 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) ($generated@@87 $generated@@176 $generated@@4)) (= (type $generated@@275) $generated@@75)) (= ($generated@@157 $generated@@274 ($generated@@272 $generated@@275)) (forall (($generated@@276 T@U) ) (!  (=> (and (= (type $generated@@276) $generated@@176) ($generated@@0 ($generated@@92 $generated@@274 $generated@@276))) ($generated@@260 $generated@@276 $generated@@275))
 :pattern ( ($generated@@92 $generated@@274 $generated@@276))
))))
 :pattern ( ($generated@@157 $generated@@274 ($generated@@272 $generated@@275)))
)))
(assert (forall (($generated@@278 T@U) ) (! (= (type ($generated@@277 $generated@@278)) $generated@@75)
 :pattern ( ($generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@279) ($generated@@87 $generated@@176 $generated@@4)) (= (type $generated@@280) $generated@@75)) (= ($generated@@157 $generated@@279 ($generated@@277 $generated@@280)) (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@176) ($generated@@0 ($generated@@92 $generated@@279 $generated@@281))) ($generated@@260 $generated@@281 $generated@@280))
 :pattern ( ($generated@@92 $generated@@279 $generated@@281))
))))
 :pattern ( ($generated@@157 $generated@@279 ($generated@@277 $generated@@280)))
)))
(assert (forall (($generated@@283 Int) ) (! (= ($generated@@282 $generated@@283) $generated@@283)
 :pattern ( ($generated@@282 $generated@@283))
)))
(assert (forall (($generated@@285 T@U) ) (! (let (($generated@@286 (type $generated@@285)))
(= (type ($generated@@284 $generated@@285)) $generated@@286))
 :pattern ( ($generated@@284 $generated@@285))
)))
(assert (forall (($generated@@287 T@U) ) (! (= ($generated@@284 $generated@@287) $generated@@287)
 :pattern ( ($generated@@284 $generated@@287))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@290) $generated@@75) (= (type $generated@@291) $generated@@75)) (= (type $generated@@292) $generated@@176)) (= (type $generated@@293) $generated@@176)) (= (type $generated@@294) ($generated@@87 $generated@@88 $generated@@89))) ($generated@@288 $generated@@294)) (= ($generated@@85 ($generated@@259 $generated@@292 $generated@@293) ($generated@@166 $generated@@290 $generated@@291) $generated@@294)  (and ($generated@@289 $generated@@292 $generated@@290 $generated@@294) ($generated@@289 $generated@@293 $generated@@291 $generated@@294))))
 :pattern ( ($generated@@85 ($generated@@259 $generated@@292 $generated@@293) ($generated@@166 $generated@@290 $generated@@291) $generated@@294))
)))
(assert (forall (($generated@@296 T@U) ) (! (= (type ($generated@@295 $generated@@296)) $generated@@79)
 :pattern ( ($generated@@295 $generated@@296))
)))
(assert (forall (($generated@@297 T@U) ) (!  (=> (= (type $generated@@297) $generated@@167) (= ($generated@@165 $generated@@297) (= ($generated@@295 $generated@@297) $generated@@61)))
 :pattern ( ($generated@@165 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ) (!  (=> (and (= (type $generated@@298) $generated@@167) ($generated@@165 $generated@@298)) (exists (($generated@@299 T@U) ($generated@@300 T@U) ) (!  (and (and (= (type $generated@@299) $generated@@176) (= (type $generated@@300) $generated@@176)) (= $generated@@298 ($generated@@259 $generated@@299 $generated@@300)))
 :no-pattern (type $generated@@299)
 :no-pattern (type $generated@@300)
 :no-pattern ($generated $generated@@299)
 :no-pattern ($generated@@0 $generated@@299)
 :no-pattern ($generated $generated@@300)
 :no-pattern ($generated@@0 $generated@@300)
)))
 :pattern ( ($generated@@165 $generated@@298))
)))
(assert  (and (and (forall (($generated@@305 T@T) ) (= ($generated@@1 ($generated@@303 $generated@@305)) 17)) (forall (($generated@@306 T@T) ) (! (= ($generated@@304 ($generated@@303 $generated@@306)) $generated@@306)
 :pattern ( ($generated@@303 $generated@@306))
))) (forall (($generated@@307 T@T) ) (! (= (type ($generated@@301 $generated@@307)) ($generated@@303 $generated@@307))
 :pattern ( ($generated@@301 $generated@@307))
))))
(assert (forall (($generated@@308 T@T) ) (! (= ($generated@@302 ($generated@@301 $generated@@308)) 0)
 :pattern ( ($generated@@301 $generated@@308))
)))
(assert (forall (($generated@@310 T@U) ) (! (= (type ($generated@@309 $generated@@310)) $generated@@176)
 :pattern ( ($generated@@309 $generated@@310))
)))
(assert (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (= (type $generated@@312) $generated@@75) (= (type $generated@@313) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@289 ($generated@@309 $generated@@311) $generated@@312 $generated@@313) ($generated@@85 $generated@@311 $generated@@312 $generated@@313)))
 :pattern ( ($generated@@289 ($generated@@309 $generated@@311) $generated@@312 $generated@@313))
)))
(assert (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ($generated@@317 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@314) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@315) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@316) $generated@@176)) (= (type $generated@@317) $generated@@75)) ($generated@@143 $generated@@314 $generated@@315)) ($generated@@289 $generated@@316 $generated@@317 $generated@@314)) ($generated@@289 $generated@@316 $generated@@317 $generated@@315))
 :pattern ( ($generated@@143 $generated@@314 $generated@@315) ($generated@@289 $generated@@316 $generated@@317 $generated@@314))
)))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ($generated@@321 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@318) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@319) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@321) $generated@@75)) ($generated@@143 $generated@@318 $generated@@319)) ($generated@@85 $generated@@320 $generated@@321 $generated@@318)) ($generated@@85 $generated@@320 $generated@@321 $generated@@319))
 :pattern ( ($generated@@143 $generated@@318 $generated@@319) ($generated@@85 $generated@@320 $generated@@321 $generated@@318))
)))
(assert (forall (($generated@@324 T@T) ) (! (= (type ($generated@@323 $generated@@324)) ($generated@@87 $generated@@324 $generated@@2))
 :pattern ( ($generated@@323 $generated@@324))
)))
(assert (forall (($generated@@325 T@U) ) (! (let (($generated@@326 ($generated@@90 (type $generated@@325))))
 (=> (= (type $generated@@325) ($generated@@87 $generated@@326 $generated@@2)) (and (= (= ($generated@@322 $generated@@325) 0) (= $generated@@325 ($generated@@323 $generated@@326))) (=> (not (= ($generated@@322 $generated@@325) 0)) (exists (($generated@@327 T@U) ) (!  (and (= (type $generated@@327) $generated@@326) (< 0 ($generated ($generated@@92 $generated@@325 $generated@@327))))
 :no-pattern (type $generated@@327)
 :no-pattern ($generated $generated@@327)
 :no-pattern ($generated@@0 $generated@@327)
))))))
 :pattern ( ($generated@@322 $generated@@325))
)))
(assert  (and (and (and (and (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (= ($generated@@1 ($generated@@330 $generated@@333 $generated@@334)) 18)) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@331 ($generated@@330 $generated@@335 $generated@@336)) $generated@@335)
 :pattern ( ($generated@@330 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@332 ($generated@@330 $generated@@337 $generated@@338)) $generated@@338)
 :pattern ( ($generated@@330 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@U) ) (! (let (($generated@@340 ($generated@@331 (type $generated@@339))))
(= (type ($generated@@328 $generated@@339)) ($generated@@87 $generated@@340 $generated@@4)))
 :pattern ( ($generated@@328 $generated@@339))
))) (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (! (= (type ($generated@@329 $generated@@341 $generated@@342)) ($generated@@330 $generated@@341 $generated@@342))
 :pattern ( ($generated@@329 $generated@@341 $generated@@342))
))))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (let (($generated@@345 (type $generated@@343)))
 (not ($generated@@0 ($generated@@92 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343))))
 :pattern ( (let (($generated@@345 (type $generated@@343)))
($generated@@92 ($generated@@328 ($generated@@329 $generated@@345 $generated@@344)) $generated@@343)))
)))
(assert  (and (and (and (and (forall (($generated@@351 T@T) ($generated@@352 T@T) ) (= ($generated@@1 ($generated@@348 $generated@@351 $generated@@352)) 19)) (forall (($generated@@353 T@T) ($generated@@354 T@T) ) (! (= ($generated@@349 ($generated@@348 $generated@@353 $generated@@354)) $generated@@353)
 :pattern ( ($generated@@348 $generated@@353 $generated@@354))
))) (forall (($generated@@355 T@T) ($generated@@356 T@T) ) (! (= ($generated@@350 ($generated@@348 $generated@@355 $generated@@356)) $generated@@356)
 :pattern ( ($generated@@348 $generated@@355 $generated@@356))
))) (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@349 (type $generated@@357))))
(= (type ($generated@@346 $generated@@357)) ($generated@@87 $generated@@358 $generated@@4)))
 :pattern ( ($generated@@346 $generated@@357))
))) (forall (($generated@@359 T@T) ($generated@@360 T@T) ) (! (= (type ($generated@@347 $generated@@359 $generated@@360)) ($generated@@348 $generated@@359 $generated@@360))
 :pattern ( ($generated@@347 $generated@@359 $generated@@360))
))))
(assert (forall (($generated@@361 T@U) ($generated@@362 T@T) ) (! (let (($generated@@363 (type $generated@@361)))
 (not ($generated@@0 ($generated@@92 ($generated@@346 ($generated@@347 $generated@@363 $generated@@362)) $generated@@361))))
 :pattern ( (let (($generated@@363 (type $generated@@361)))
($generated@@92 ($generated@@346 ($generated@@347 $generated@@363 $generated@@362)) $generated@@361)))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@90 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@87 $generated@@365 $generated@@2)) (= ($generated@@185 $generated@@364) (forall (($generated@@366 T@U) ) (!  (=> (= (type $generated@@366) $generated@@365) (and (<= 0 ($generated ($generated@@92 $generated@@364 $generated@@366))) (<= ($generated ($generated@@92 $generated@@364 $generated@@366)) ($generated@@322 $generated@@364))))
 :pattern ( ($generated@@92 $generated@@364 $generated@@366))
)))))
 :pattern ( ($generated@@185 $generated@@364))
)))
(assert (forall (($generated@@368 T@T) ($generated@@369 T@U) ) (! (= (type ($generated@@367 $generated@@368 $generated@@369)) $generated@@368)
 :pattern ( ($generated@@367 $generated@@368 $generated@@369))
)))
(assert (forall (($generated@@370 T@U) ) (!  (=> (and (= (type $generated@@370) $generated@@176) ($generated@@260 $generated@@370 $generated@@147)) (and (= ($generated@@309 ($generated@@367 $generated@@88 $generated@@370)) $generated@@370) ($generated@@157 ($generated@@367 $generated@@88 $generated@@370) $generated@@147)))
 :pattern ( ($generated@@260 $generated@@370 $generated@@147))
)))
(assert (forall (($generated@@371 T@U) ) (!  (=> (and (= (type $generated@@371) $generated@@176) ($generated@@260 $generated@@371 $generated@@181)) (and (= ($generated@@309 ($generated@@367 $generated@@88 $generated@@371)) $generated@@371) ($generated@@157 ($generated@@367 $generated@@88 $generated@@371) $generated@@181)))
 :pattern ( ($generated@@260 $generated@@371 $generated@@181))
)))
(assert (forall (($generated@@372 T@U) ) (!  (=> (and (= (type $generated@@372) $generated@@176) ($generated@@260 $generated@@372 $generated@@151)) (and (= ($generated@@309 ($generated@@367 $generated@@88 $generated@@372)) $generated@@372) ($generated@@157 ($generated@@367 $generated@@88 $generated@@372) $generated@@151)))
 :pattern ( ($generated@@260 $generated@@372 $generated@@151))
)))
(assert (forall (($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@373) $generated@@176) ($generated@@260 $generated@@373 $generated@@162)) (and (= ($generated@@309 ($generated@@367 $generated@@88 $generated@@373)) $generated@@373) ($generated@@157 ($generated@@367 $generated@@88 $generated@@373) $generated@@162)))
 :pattern ( ($generated@@260 $generated@@373 $generated@@162))
)))
(assert (forall (($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@374) $generated@@176) ($generated@@260 $generated@@374 $generated@@154)) (and (= ($generated@@309 ($generated@@367 $generated@@88 $generated@@374)) $generated@@374) ($generated@@157 ($generated@@367 $generated@@88 $generated@@374) $generated@@154)))
 :pattern ( ($generated@@260 $generated@@374 $generated@@154))
)))
(assert (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@176) ($generated@@260 $generated@@375 $generated@@253)) (and (= ($generated@@309 ($generated@@367 $generated@@88 $generated@@375)) $generated@@375) ($generated@@157 ($generated@@367 $generated@@88 $generated@@375) $generated@@253)))
 :pattern ( ($generated@@260 $generated@@375 $generated@@253))
)))
(assert (forall (($generated@@376 T@U) ) (!  (=> (and (= (type $generated@@376) $generated@@176) ($generated@@260 $generated@@376 $generated@@256)) (and (= ($generated@@309 ($generated@@367 $generated@@88 $generated@@376)) $generated@@376) ($generated@@157 ($generated@@367 $generated@@88 $generated@@376) $generated@@256)))
 :pattern ( ($generated@@260 $generated@@376 $generated@@256))
)))
(assert (forall (($generated@@377 T@U) ) (!  (=> (= (type $generated@@377) $generated@@88) (= ($generated@@157 $generated@@377 $generated@@181)  (and ($generated@@157 $generated@@377 $generated@@147) (not (= $generated@@377 $generated@@148)))))
 :pattern ( ($generated@@157 $generated@@377 $generated@@181))
)))
(assert (forall (($generated@@378 T@U) ) (!  (=> (= (type $generated@@378) $generated@@88) (= ($generated@@157 $generated@@378 $generated@@162)  (and ($generated@@157 $generated@@378 $generated@@151) (not (= $generated@@378 $generated@@148)))))
 :pattern ( ($generated@@157 $generated@@378 $generated@@162))
)))
(assert (forall (($generated@@379 T@U) ) (!  (=> (= (type $generated@@379) $generated@@88) (= ($generated@@157 $generated@@379 $generated@@253)  (and ($generated@@157 $generated@@379 $generated@@154) (not (= $generated@@379 $generated@@148)))))
 :pattern ( ($generated@@157 $generated@@379 $generated@@253))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@332 (type $generated@@380))))
(let (($generated@@382 ($generated@@331 (type $generated@@380))))
 (=> (= (type $generated@@380) ($generated@@330 $generated@@382 $generated@@381)) (or (= $generated@@380 ($generated@@329 $generated@@382 $generated@@381)) (exists (($generated@@383 T@U) ) (!  (and (= (type $generated@@383) $generated@@382) ($generated@@0 ($generated@@92 ($generated@@328 $generated@@380) $generated@@383)))
 :no-pattern (type $generated@@383)
 :no-pattern ($generated $generated@@383)
 :no-pattern ($generated@@0 $generated@@383)
))))))
 :pattern ( ($generated@@328 $generated@@380))
)))
(assert (forall (($generated@@385 T@U) ) (! (let (($generated@@386 ($generated@@332 (type $generated@@385))))
(= (type ($generated@@384 $generated@@385)) ($generated@@87 $generated@@386 $generated@@4)))
 :pattern ( ($generated@@384 $generated@@385))
)))
(assert (forall (($generated@@387 T@U) ) (! (let (($generated@@388 ($generated@@332 (type $generated@@387))))
(let (($generated@@389 ($generated@@331 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@330 $generated@@389 $generated@@388)) (or (= $generated@@387 ($generated@@329 $generated@@389 $generated@@388)) (exists (($generated@@390 T@U) ) (!  (and (= (type $generated@@390) $generated@@388) ($generated@@0 ($generated@@92 ($generated@@384 $generated@@387) $generated@@390)))
 :no-pattern (type $generated@@390)
 :no-pattern ($generated $generated@@390)
 :no-pattern ($generated@@0 $generated@@390)
))))))
 :pattern ( ($generated@@384 $generated@@387))
)))
(assert (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@350 (type $generated@@391))))
(let (($generated@@393 ($generated@@349 (type $generated@@391))))
 (=> (= (type $generated@@391) ($generated@@348 $generated@@393 $generated@@392)) (or (= $generated@@391 ($generated@@347 $generated@@393 $generated@@392)) (exists (($generated@@394 T@U) ) (!  (and (= (type $generated@@394) $generated@@393) ($generated@@0 ($generated@@92 ($generated@@346 $generated@@391) $generated@@394)))
 :no-pattern (type $generated@@394)
 :no-pattern ($generated $generated@@394)
 :no-pattern ($generated@@0 $generated@@394)
))))))
 :pattern ( ($generated@@346 $generated@@391))
)))
(assert (forall (($generated@@396 T@U) ) (! (let (($generated@@397 ($generated@@350 (type $generated@@396))))
(= (type ($generated@@395 $generated@@396)) ($generated@@87 $generated@@397 $generated@@4)))
 :pattern ( ($generated@@395 $generated@@396))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@350 (type $generated@@398))))
(let (($generated@@400 ($generated@@349 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@348 $generated@@400 $generated@@399)) (or (= $generated@@398 ($generated@@347 $generated@@400 $generated@@399)) (exists (($generated@@401 T@U) ) (!  (and (= (type $generated@@401) $generated@@399) ($generated@@0 ($generated@@92 ($generated@@395 $generated@@398) $generated@@401)))
 :no-pattern (type $generated@@401)
 :no-pattern ($generated $generated@@401)
 :no-pattern ($generated@@0 $generated@@401)
))))))
 :pattern ( ($generated@@395 $generated@@398))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@87 $generated@@176 $generated@@2)) (= (type $generated@@403) $generated@@75)) (= ($generated@@157 $generated@@402 ($generated@@184 $generated@@403)) (forall (($generated@@404 T@U) ) (!  (=> (and (= (type $generated@@404) $generated@@176) (< 0 ($generated ($generated@@92 $generated@@402 $generated@@404)))) ($generated@@260 $generated@@404 $generated@@403))
 :pattern ( ($generated@@92 $generated@@402 $generated@@404))
))))
 :pattern ( ($generated@@157 $generated@@402 ($generated@@184 $generated@@403)))
)))
(assert  (=> (<= 1 $generated@@159) (forall (($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@406) $generated@@88) (or ($generated@@268 ($generated@@284 $generated@@406)) (and (not (= 1 $generated@@159)) (and ($generated@@157 $generated@@406 $generated@@181) ($generated@@157 ($generated@@284 $generated@@406) $generated@@162))))) (= ($generated@@267 ($generated@@284 $generated@@406)) (ite ($generated@@157 ($generated@@284 $generated@@406) $generated@@253) (= ($generated@@282 ($generated@@405 1 ($generated@@282 0))) ($generated@@282 0)) true)))
 :weight 3
 :pattern ( ($generated@@267 ($generated@@284 $generated@@406)))
))))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ($generated@@409 T@U) ) (!  (=> (and (and (= (type $generated@@407) ($generated@@87 $generated@@176 $generated@@4)) (= (type $generated@@408) $generated@@75)) (= (type $generated@@409) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@407 ($generated@@272 $generated@@408) $generated@@409) (forall (($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@410) $generated@@176) ($generated@@0 ($generated@@92 $generated@@407 $generated@@410))) ($generated@@289 $generated@@410 $generated@@408 $generated@@409))
 :pattern ( ($generated@@92 $generated@@407 $generated@@410))
))))
 :pattern ( ($generated@@85 $generated@@407 ($generated@@272 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ($generated@@413 T@U) ) (!  (=> (and (and (= (type $generated@@411) ($generated@@87 $generated@@176 $generated@@4)) (= (type $generated@@412) $generated@@75)) (= (type $generated@@413) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@411 ($generated@@277 $generated@@412) $generated@@413) (forall (($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@414) $generated@@176) ($generated@@0 ($generated@@92 $generated@@411 $generated@@414))) ($generated@@289 $generated@@414 $generated@@412 $generated@@413))
 :pattern ( ($generated@@92 $generated@@411 $generated@@414))
))))
 :pattern ( ($generated@@85 $generated@@411 ($generated@@277 $generated@@412) $generated@@413))
)))
(assert (forall (($generated@@415 T@U) ) (! (let (($generated@@416 (type $generated@@415)))
(= ($generated ($generated@@92 ($generated@@323 $generated@@416) $generated@@415)) 0))
 :pattern ( (let (($generated@@416 (type $generated@@415)))
($generated@@92 ($generated@@323 $generated@@416) $generated@@415)))
)))
(assert  (and (forall (($generated@@419 T@U) ) (! (= (type ($generated@@417 $generated@@419)) ($generated@@87 $generated@@176 $generated@@4))
 :pattern ( ($generated@@417 $generated@@419))
)) (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@332 (type $generated@@420))))
(let (($generated@@422 ($generated@@331 (type $generated@@420))))
(= (type ($generated@@418 $generated@@420)) ($generated@@87 $generated@@422 $generated@@421))))
 :pattern ( ($generated@@418 $generated@@420))
))))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (= (type $generated@@423) ($generated@@330 $generated@@176 $generated@@176)) (= (type $generated@@424) $generated@@176)) (= ($generated@@0 ($generated@@92 ($generated@@417 $generated@@423) $generated@@424))  (and ($generated@@0 ($generated@@92 ($generated@@328 $generated@@423) ($generated@@174 ($generated@@367 $generated@@167 $generated@@424)))) (= ($generated@@92 ($generated@@418 $generated@@423) ($generated@@174 ($generated@@367 $generated@@167 $generated@@424))) ($generated@@175 ($generated@@367 $generated@@167 $generated@@424))))))
 :pattern ( ($generated@@92 ($generated@@417 $generated@@423) $generated@@424))
)))
(assert  (and (forall (($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@427)) ($generated@@87 $generated@@176 $generated@@4))
 :pattern ( ($generated@@425 $generated@@427))
)) (forall (($generated@@428 T@U) ) (! (let (($generated@@429 ($generated@@350 (type $generated@@428))))
(let (($generated@@430 ($generated@@349 (type $generated@@428))))
(= (type ($generated@@426 $generated@@428)) ($generated@@87 $generated@@430 $generated@@429))))
 :pattern ( ($generated@@426 $generated@@428))
))))
(assert (forall (($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@431) ($generated@@348 $generated@@176 $generated@@176)) (= (type $generated@@432) $generated@@176)) (= ($generated@@0 ($generated@@92 ($generated@@425 $generated@@431) $generated@@432))  (and ($generated@@0 ($generated@@92 ($generated@@346 $generated@@431) ($generated@@174 ($generated@@367 $generated@@167 $generated@@432)))) (= ($generated@@92 ($generated@@426 $generated@@431) ($generated@@174 ($generated@@367 $generated@@167 $generated@@432))) ($generated@@175 ($generated@@367 $generated@@167 $generated@@432))))))
 :pattern ( ($generated@@92 ($generated@@425 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@433 T@U) ($generated@@434 T@U) ) (! (let (($generated@@435 (type $generated@@434)))
(let (($generated@@436 ($generated@@331 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@330 $generated@@436 $generated@@435)) (= ($generated@@0 ($generated@@92 ($generated@@384 $generated@@433) $generated@@434)) (exists (($generated@@437 T@U) ) (!  (and (= (type $generated@@437) $generated@@436) (and ($generated@@0 ($generated@@92 ($generated@@328 $generated@@433) $generated@@437)) (= $generated@@434 ($generated@@92 ($generated@@418 $generated@@433) $generated@@437))))
 :pattern ( ($generated@@92 ($generated@@328 $generated@@433) $generated@@437))
 :pattern ( ($generated@@92 ($generated@@418 $generated@@433) $generated@@437))
))))))
 :pattern ( ($generated@@92 ($generated@@384 $generated@@433) $generated@@434))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (! (let (($generated@@440 (type $generated@@439)))
(let (($generated@@441 ($generated@@349 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@348 $generated@@441 $generated@@440)) (= ($generated@@0 ($generated@@92 ($generated@@395 $generated@@438) $generated@@439)) (exists (($generated@@442 T@U) ) (!  (and (= (type $generated@@442) $generated@@441) (and ($generated@@0 ($generated@@92 ($generated@@346 $generated@@438) $generated@@442)) (= $generated@@439 ($generated@@92 ($generated@@426 $generated@@438) $generated@@442))))
 :pattern ( ($generated@@92 ($generated@@346 $generated@@438) $generated@@442))
 :pattern ( ($generated@@92 ($generated@@426 $generated@@438) $generated@@442))
))))))
 :pattern ( ($generated@@92 ($generated@@395 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ($generated@@445 T@U) ) (! (= (type ($generated@@443 $generated@@444 $generated@@445)) $generated@@75)
 :pattern ( ($generated@@443 $generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (and (and (= (type $generated@@446) ($generated@@330 $generated@@176 $generated@@176)) (= (type $generated@@447) $generated@@75)) (= (type $generated@@448) $generated@@75)) (= (type $generated@@449) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@446 ($generated@@443 $generated@@447 $generated@@448) $generated@@449) (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@176) ($generated@@0 ($generated@@92 ($generated@@328 $generated@@446) $generated@@450))) (and ($generated@@289 ($generated@@92 ($generated@@418 $generated@@446) $generated@@450) $generated@@448 $generated@@449) ($generated@@289 $generated@@450 $generated@@447 $generated@@449)))
 :pattern ( ($generated@@92 ($generated@@418 $generated@@446) $generated@@450))
 :pattern ( ($generated@@92 ($generated@@328 $generated@@446) $generated@@450))
))))
 :pattern ( ($generated@@85 $generated@@446 ($generated@@443 $generated@@447 $generated@@448) $generated@@449))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (! (= (type ($generated@@451 $generated@@452 $generated@@453)) $generated@@75)
 :pattern ( ($generated@@451 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (and (and (= (type $generated@@454) ($generated@@348 $generated@@176 $generated@@176)) (= (type $generated@@455) $generated@@75)) (= (type $generated@@456) $generated@@75)) (= (type $generated@@457) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457) (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@176) ($generated@@0 ($generated@@92 ($generated@@346 $generated@@454) $generated@@458))) (and ($generated@@289 ($generated@@92 ($generated@@426 $generated@@454) $generated@@458) $generated@@456 $generated@@457) ($generated@@289 $generated@@458 $generated@@455 $generated@@457)))
 :pattern ( ($generated@@92 ($generated@@426 $generated@@454) $generated@@458))
 :pattern ( ($generated@@92 ($generated@@346 $generated@@454) $generated@@458))
))))
 :pattern ( ($generated@@85 $generated@@454 ($generated@@451 $generated@@455 $generated@@456) $generated@@457))
)))
(assert (forall (($generated@@459 Int) ($generated@@460 Int) ) (! (= ($generated@@405 $generated@@459 $generated@@460) (div $generated@@459 $generated@@460))
 :pattern ( ($generated@@405 $generated@@459 $generated@@460))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (! (let (($generated@@464 (type $generated@@463)))
(= (type ($generated@@461 $generated@@462 $generated@@463)) ($generated@@87 $generated@@464 $generated@@4)))
 :pattern ( ($generated@@461 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ($generated@@466 T@U) ($generated@@467 T@U) ) (! (let (($generated@@468 (type $generated@@466)))
 (=> (and (and (= (type $generated@@465) ($generated@@87 $generated@@468 $generated@@4)) (= (type $generated@@467) $generated@@468)) ($generated@@0 ($generated@@92 $generated@@465 $generated@@467))) ($generated@@0 ($generated@@92 ($generated@@461 $generated@@465 $generated@@466) $generated@@467))))
 :pattern ( ($generated@@461 $generated@@465 $generated@@466) ($generated@@92 $generated@@465 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ($generated@@470 T@U) ($generated@@471 T@U) ) (! (let (($generated@@472 (type $generated@@470)))
 (=> (and (= (type $generated@@469) ($generated@@87 $generated@@472 $generated@@4)) (= (type $generated@@471) $generated@@472)) (= ($generated@@0 ($generated@@92 ($generated@@461 $generated@@469 $generated@@470) $generated@@471))  (or (= $generated@@471 $generated@@470) ($generated@@0 ($generated@@92 $generated@@469 $generated@@471))))))
 :pattern ( ($generated@@92 ($generated@@461 $generated@@469 $generated@@470) $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@473) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@474) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@475) ($generated@@87 $generated@@88 $generated@@89))) (not (= $generated@@473 $generated@@475))) (and ($generated@@143 $generated@@473 $generated@@474) ($generated@@143 $generated@@474 $generated@@475))) ($generated@@143 $generated@@473 $generated@@475))
 :pattern ( ($generated@@143 $generated@@473 $generated@@474) ($generated@@143 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@T) ) (! (= (type ($generated@@476 $generated@@477)) ($generated@@87 $generated@@477 $generated@@4))
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (! (let (($generated@@479 ($generated@@350 (type $generated@@478))))
(let (($generated@@480 ($generated@@349 (type $generated@@478))))
 (=> (= (type $generated@@478) ($generated@@348 $generated@@480 $generated@@479)) (= (= $generated@@478 ($generated@@347 $generated@@480 $generated@@479)) (= ($generated@@346 $generated@@478) ($generated@@476 $generated@@480))))))
 :pattern ( ($generated@@346 $generated@@478))
)))
(assert (forall (($generated@@481 T@U) ) (! (let (($generated@@482 ($generated@@350 (type $generated@@481))))
(let (($generated@@483 ($generated@@349 (type $generated@@481))))
 (=> (= (type $generated@@481) ($generated@@348 $generated@@483 $generated@@482)) (= (= $generated@@481 ($generated@@347 $generated@@483 $generated@@482)) (= ($generated@@395 $generated@@481) ($generated@@476 $generated@@482))))))
 :pattern ( ($generated@@395 $generated@@481))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 ($generated@@350 (type $generated@@484))))
(let (($generated@@486 ($generated@@349 (type $generated@@484))))
 (=> (= (type $generated@@484) ($generated@@348 $generated@@486 $generated@@485)) (= (= $generated@@484 ($generated@@347 $generated@@486 $generated@@485)) (= ($generated@@425 $generated@@484) ($generated@@476 $generated@@176))))))
 :pattern ( ($generated@@425 $generated@@484))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@332 (type $generated@@487))))
(let (($generated@@489 ($generated@@331 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@330 $generated@@489 $generated@@488)) (or (= $generated@@487 ($generated@@329 $generated@@489 $generated@@488)) (exists (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (and (and (= (type $generated@@490) $generated@@176) (= (type $generated@@491) $generated@@176)) ($generated@@0 ($generated@@92 ($generated@@417 $generated@@487) ($generated@@309 ($generated@@259 $generated@@490 $generated@@491)))))
 :no-pattern (type $generated@@490)
 :no-pattern (type $generated@@491)
 :no-pattern ($generated $generated@@490)
 :no-pattern ($generated@@0 $generated@@490)
 :no-pattern ($generated $generated@@491)
 :no-pattern ($generated@@0 $generated@@491)
))))))
 :pattern ( ($generated@@417 $generated@@487))
)))
(assert (forall (($generated@@492 T@U) ) (! (let (($generated@@493 ($generated@@350 (type $generated@@492))))
(let (($generated@@494 ($generated@@349 (type $generated@@492))))
 (=> (= (type $generated@@492) ($generated@@348 $generated@@494 $generated@@493)) (or (= $generated@@492 ($generated@@347 $generated@@494 $generated@@493)) (exists (($generated@@495 T@U) ($generated@@496 T@U) ) (!  (and (and (= (type $generated@@495) $generated@@176) (= (type $generated@@496) $generated@@176)) ($generated@@0 ($generated@@92 ($generated@@425 $generated@@492) ($generated@@309 ($generated@@259 $generated@@495 $generated@@496)))))
 :no-pattern (type $generated@@495)
 :no-pattern (type $generated@@496)
 :no-pattern ($generated $generated@@495)
 :no-pattern ($generated@@0 $generated@@495)
 :no-pattern ($generated $generated@@496)
 :no-pattern ($generated@@0 $generated@@496)
))))))
 :pattern ( ($generated@@425 $generated@@492))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@176) ($generated@@260 $generated@@497 $generated@@46)) (and (= ($generated@@309 ($generated@@367 $generated@@2 $generated@@497)) $generated@@497) ($generated@@157 ($generated@@367 $generated@@2 $generated@@497) $generated@@46)))
 :pattern ( ($generated@@260 $generated@@497 $generated@@46))
)))
(assert (forall (($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@176) ($generated@@260 $generated@@498 $generated@@47)) (and (= ($generated@@309 ($generated@@367 $generated@@3 $generated@@498)) $generated@@498) ($generated@@157 ($generated@@367 $generated@@3 $generated@@498) $generated@@47)))
 :pattern ( ($generated@@260 $generated@@498 $generated@@47))
)))
(assert (forall (($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@176) ($generated@@260 $generated@@499 $generated@@44)) (and (= ($generated@@309 ($generated@@367 $generated@@4 $generated@@499)) $generated@@499) ($generated@@157 ($generated@@367 $generated@@4 $generated@@499) $generated@@44)))
 :pattern ( ($generated@@260 $generated@@499 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@500) 20))
(assert (forall (($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@176) ($generated@@260 $generated@@501 $generated@@45)) (and (= ($generated@@309 ($generated@@367 $generated@@500 $generated@@501)) $generated@@501) ($generated@@157 ($generated@@367 $generated@@500 $generated@@501) $generated@@45)))
 :pattern ( ($generated@@260 $generated@@501 $generated@@45))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (= (type $generated@@503) $generated@@75) (= ($generated@@260 ($generated@@309 $generated@@502) $generated@@503) ($generated@@157 $generated@@502 $generated@@503)))
 :pattern ( ($generated@@260 ($generated@@309 $generated@@502) $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 ($generated@@90 (type $generated@@504))))
 (=> (= (type $generated@@504) ($generated@@87 $generated@@505 $generated@@2)) (<= 0 ($generated@@322 $generated@@504))))
 :pattern ( ($generated@@322 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ) (! (let (($generated@@507 ($generated@@304 (type $generated@@506))))
 (=> (= (type $generated@@506) ($generated@@303 $generated@@507)) (<= 0 ($generated@@302 $generated@@506))))
 :pattern ( ($generated@@302 $generated@@506))
)))
(assert (forall (($generated@@509 T@U) ) (! (= (type ($generated@@508 $generated@@509)) $generated@@75)
 :pattern ( ($generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@75) (= (type $generated@@511) $generated@@75)) (= ($generated@@508 ($generated@@443 $generated@@510 $generated@@511)) $generated@@510))
 :pattern ( ($generated@@443 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@75)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ($generated@@515 T@U) ) (!  (=> (and (= (type $generated@@514) $generated@@75) (= (type $generated@@515) $generated@@75)) (= ($generated@@512 ($generated@@443 $generated@@514 $generated@@515)) $generated@@515))
 :pattern ( ($generated@@443 $generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@75) (= (type $generated@@517) $generated@@75)) (= ($generated@@83 ($generated@@443 $generated@@516 $generated@@517)) $generated@@58))
 :pattern ( ($generated@@443 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@75)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@75) (= (type $generated@@521) $generated@@75)) (= ($generated@@518 ($generated@@451 $generated@@520 $generated@@521)) $generated@@520))
 :pattern ( ($generated@@451 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@75)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@75) (= (type $generated@@525) $generated@@75)) (= ($generated@@522 ($generated@@451 $generated@@524 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@451 $generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (= (type $generated@@526) $generated@@75) (= (type $generated@@527) $generated@@75)) (= ($generated@@83 ($generated@@451 $generated@@526 $generated@@527)) $generated@@59))
 :pattern ( ($generated@@451 $generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@176) (= (type $generated@@529) $generated@@176)) (= ($generated@@295 ($generated@@259 $generated@@528 $generated@@529)) $generated@@61))
 :pattern ( ($generated@@259 $generated@@528 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@75)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@532) $generated@@75) (= (type $generated@@533) $generated@@75)) (= ($generated@@530 ($generated@@166 $generated@@532 $generated@@533)) $generated@@532))
 :pattern ( ($generated@@166 $generated@@532 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ) (! (= (type ($generated@@534 $generated@@535)) $generated@@75)
 :pattern ( ($generated@@534 $generated@@535))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@536) $generated@@75) (= (type $generated@@537) $generated@@75)) (= ($generated@@534 ($generated@@166 $generated@@536 $generated@@537)) $generated@@537))
 :pattern ( ($generated@@166 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@176) (= (type $generated@@539) $generated@@176)) (= ($generated@@174 ($generated@@259 $generated@@538 $generated@@539)) $generated@@538))
 :pattern ( ($generated@@259 $generated@@538 $generated@@539))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@176) (= (type $generated@@541) $generated@@176)) (= ($generated@@175 ($generated@@259 $generated@@540 $generated@@541)) $generated@@541))
 :pattern ( ($generated@@259 $generated@@540 $generated@@541))
)))
(assert  (and (forall (($generated@@544 T@U) ) (! (= (type ($generated@@542 $generated@@544)) $generated@@75)
 :pattern ( ($generated@@542 $generated@@544))
)) (forall (($generated@@545 T@U) ($generated@@546 Int) ) (! (let (($generated@@547 ($generated@@304 (type $generated@@545))))
(= (type ($generated@@543 $generated@@545 $generated@@546)) $generated@@547))
 :pattern ( ($generated@@543 $generated@@545 $generated@@546))
))))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@548) ($generated@@303 $generated@@176)) (= (type $generated@@549) $generated@@75)) (= (type $generated@@550) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@548 ($generated@@542 $generated@@549) $generated@@550) (forall (($generated@@551 Int) ) (!  (=> (and (<= 0 $generated@@551) (< $generated@@551 ($generated@@302 $generated@@548))) ($generated@@289 ($generated@@543 $generated@@548 $generated@@551) $generated@@549 $generated@@550))
 :pattern ( ($generated@@543 $generated@@548 $generated@@551))
))))
 :pattern ( ($generated@@85 $generated@@548 ($generated@@542 $generated@@549) $generated@@550))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ) (! (let (($generated@@554 (type $generated@@553)))
 (=> (= (type $generated@@552) ($generated@@87 $generated@@554 $generated@@4)) ($generated@@0 ($generated@@92 ($generated@@461 $generated@@552 $generated@@553) $generated@@553))))
 :pattern ( ($generated@@461 $generated@@552 $generated@@553))
)))
(assert (forall (($generated@@556 Int) ) (! (= ($generated@@555 ($generated@@86 $generated@@556)) $generated@@556)
 :pattern ( ($generated@@86 $generated@@556))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@75)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (!  (=> (= (type $generated@@559) $generated@@75) (= ($generated@@557 ($generated@@272 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@272 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@75) (= ($generated@@83 ($generated@@272 $generated@@560)) $generated@@54))
 :pattern ( ($generated@@272 $generated@@560))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@75)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (= (type $generated@@563) $generated@@75) (= ($generated@@561 ($generated@@277 $generated@@563)) $generated@@563))
 :pattern ( ($generated@@277 $generated@@563))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@75) (= ($generated@@83 ($generated@@277 $generated@@564)) $generated@@55))
 :pattern ( ($generated@@277 $generated@@564))
)))
(assert (forall (($generated@@566 T@U) ) (! (= (type ($generated@@565 $generated@@566)) $generated@@75)
 :pattern ( ($generated@@565 $generated@@566))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (= (type $generated@@567) $generated@@75) (= ($generated@@565 ($generated@@184 $generated@@567)) $generated@@567))
 :pattern ( ($generated@@184 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ) (!  (=> (= (type $generated@@568) $generated@@75) (= ($generated@@83 ($generated@@184 $generated@@568)) $generated@@56))
 :pattern ( ($generated@@184 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ) (! (= (type ($generated@@569 $generated@@570)) $generated@@75)
 :pattern ( ($generated@@569 $generated@@570))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@75) (= ($generated@@569 ($generated@@542 $generated@@571)) $generated@@571))
 :pattern ( ($generated@@542 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@75) (= ($generated@@83 ($generated@@542 $generated@@572)) $generated@@57))
 :pattern ( ($generated@@542 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ) (! (let (($generated@@574 (type $generated@@573)))
(= ($generated@@367 $generated@@574 ($generated@@309 $generated@@573)) $generated@@573))
 :pattern ( ($generated@@309 $generated@@573))
)))
(assert (forall (($generated@@575 T@U) ($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@575) ($generated@@330 $generated@@176 $generated@@176)) (= (type $generated@@576) $generated@@75)) (= (type $generated@@577) $generated@@75)) (= ($generated@@157 $generated@@575 ($generated@@443 $generated@@576 $generated@@577)) (forall (($generated@@578 T@U) ) (!  (=> (and (= (type $generated@@578) $generated@@176) ($generated@@0 ($generated@@92 ($generated@@328 $generated@@575) $generated@@578))) (and ($generated@@260 ($generated@@92 ($generated@@418 $generated@@575) $generated@@578) $generated@@577) ($generated@@260 $generated@@578 $generated@@576)))
 :pattern ( ($generated@@92 ($generated@@418 $generated@@575) $generated@@578))
 :pattern ( ($generated@@92 ($generated@@328 $generated@@575) $generated@@578))
))))
 :pattern ( ($generated@@157 $generated@@575 ($generated@@443 $generated@@576 $generated@@577)))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) ($generated@@348 $generated@@176 $generated@@176)) (= (type $generated@@580) $generated@@75)) (= (type $generated@@581) $generated@@75)) (= ($generated@@157 $generated@@579 ($generated@@451 $generated@@580 $generated@@581)) (forall (($generated@@582 T@U) ) (!  (=> (and (= (type $generated@@582) $generated@@176) ($generated@@0 ($generated@@92 ($generated@@346 $generated@@579) $generated@@582))) (and ($generated@@260 ($generated@@92 ($generated@@426 $generated@@579) $generated@@582) $generated@@581) ($generated@@260 $generated@@582 $generated@@580)))
 :pattern ( ($generated@@92 ($generated@@426 $generated@@579) $generated@@582))
 :pattern ( ($generated@@92 ($generated@@346 $generated@@579) $generated@@582))
))))
 :pattern ( ($generated@@157 $generated@@579 ($generated@@451 $generated@@580 $generated@@581)))
)))
(assert (forall (($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@176) (= (type $generated@@586) $generated@@176)) (< ($generated@@583 $generated@@585) ($generated@@584 ($generated@@259 $generated@@585 $generated@@586))))
 :pattern ( ($generated@@259 $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (= (type $generated@@587) $generated@@176) (= (type $generated@@588) $generated@@176)) (< ($generated@@583 $generated@@588) ($generated@@584 ($generated@@259 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@259 $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@176) (= (type $generated@@590) $generated@@75)) (= (type $generated@@591) $generated@@75)) ($generated@@260 $generated@@589 ($generated@@443 $generated@@590 $generated@@591))) (and (= ($generated@@309 ($generated@@367 ($generated@@330 $generated@@176 $generated@@176) $generated@@589)) $generated@@589) ($generated@@157 ($generated@@367 ($generated@@330 $generated@@176 $generated@@176) $generated@@589) ($generated@@443 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@260 $generated@@589 ($generated@@443 $generated@@590 $generated@@591)))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@176) (= (type $generated@@593) $generated@@75)) (= (type $generated@@594) $generated@@75)) ($generated@@260 $generated@@592 ($generated@@451 $generated@@593 $generated@@594))) (and (= ($generated@@309 ($generated@@367 ($generated@@348 $generated@@176 $generated@@176) $generated@@592)) $generated@@592) ($generated@@157 ($generated@@367 ($generated@@348 $generated@@176 $generated@@176) $generated@@592) ($generated@@451 $generated@@593 $generated@@594))))
 :pattern ( ($generated@@260 $generated@@592 ($generated@@451 $generated@@593 $generated@@594)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (and (and (= (type $generated@@595) $generated@@75) (= (type $generated@@596) $generated@@75)) (= (type $generated@@597) $generated@@176)) ($generated@@260 $generated@@597 ($generated@@166 $generated@@595 $generated@@596))) (and (= ($generated@@309 ($generated@@367 $generated@@167 $generated@@597)) $generated@@597) ($generated@@157 ($generated@@367 $generated@@167 $generated@@597) ($generated@@166 $generated@@595 $generated@@596))))
 :pattern ( ($generated@@260 $generated@@597 ($generated@@166 $generated@@595 $generated@@596)))
)))
(assert (forall (($generated@@599 T@T) ) (! (= (type ($generated@@598 $generated@@599)) ($generated@@87 $generated@@599 $generated@@4))
 :pattern ( ($generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@600)))
 (not ($generated@@0 ($generated@@92 ($generated@@598 $generated@@601) $generated@@600))))
 :pattern ( (let (($generated@@601 (type $generated@@600)))
($generated@@92 ($generated@@598 $generated@@601) $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ) (! (let (($generated@@603 (type $generated@@602)))
 (not ($generated@@0 ($generated@@92 ($generated@@476 $generated@@603) $generated@@602))))
 :pattern ( (let (($generated@@603 (type $generated@@602)))
($generated@@92 ($generated@@476 $generated@@603) $generated@@602)))
)))
(assert (forall (($generated@@605 T@U) ) (! (= (type ($generated@@604 $generated@@605)) $generated@@80)
 :pattern ( ($generated@@604 $generated@@605))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) $generated@@75) (= (type $generated@@607) $generated@@75)) (and (= ($generated@@83 ($generated@@166 $generated@@606 $generated@@607)) $generated@@62) (= ($generated@@604 ($generated@@166 $generated@@606 $generated@@607)) $generated@@70)))
 :pattern ( ($generated@@166 $generated@@606 $generated@@607))
)))
(assert (forall (($generated@@608 T@U) ) (!  (=> (= (type $generated@@608) $generated@@167) (= ($generated@@583 ($generated@@309 $generated@@608)) ($generated@@584 $generated@@608)))
 :pattern ( ($generated@@583 ($generated@@309 $generated@@608)))
)))
(assert (forall (($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@609) $generated@@176) ($generated@@260 $generated@@609 ($generated@@86 0))) (and (= ($generated@@309 ($generated@@367 $generated@@2 $generated@@609)) $generated@@609) ($generated@@157 ($generated@@367 ($generated@@87 $generated@@176 $generated@@4) $generated@@609) ($generated@@86 0))))
 :pattern ( ($generated@@260 $generated@@609 ($generated@@86 0)))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (and (= (type $generated@@610) $generated@@176) (= (type $generated@@611) $generated@@75)) ($generated@@260 $generated@@610 ($generated@@272 $generated@@611))) (and (= ($generated@@309 ($generated@@367 ($generated@@87 $generated@@176 $generated@@4) $generated@@610)) $generated@@610) ($generated@@157 ($generated@@367 ($generated@@87 $generated@@176 $generated@@4) $generated@@610) ($generated@@272 $generated@@611))))
 :pattern ( ($generated@@260 $generated@@610 ($generated@@272 $generated@@611)))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (= (type $generated@@612) $generated@@176) (= (type $generated@@613) $generated@@75)) ($generated@@260 $generated@@612 ($generated@@277 $generated@@613))) (and (= ($generated@@309 ($generated@@367 ($generated@@87 $generated@@176 $generated@@4) $generated@@612)) $generated@@612) ($generated@@157 ($generated@@367 ($generated@@87 $generated@@176 $generated@@4) $generated@@612) ($generated@@277 $generated@@613))))
 :pattern ( ($generated@@260 $generated@@612 ($generated@@277 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (and (= (type $generated@@614) $generated@@176) (= (type $generated@@615) $generated@@75)) ($generated@@260 $generated@@614 ($generated@@184 $generated@@615))) (and (= ($generated@@309 ($generated@@367 ($generated@@87 $generated@@176 $generated@@2) $generated@@614)) $generated@@614) ($generated@@157 ($generated@@367 ($generated@@87 $generated@@176 $generated@@2) $generated@@614) ($generated@@184 $generated@@615))))
 :pattern ( ($generated@@260 $generated@@614 ($generated@@184 $generated@@615)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (and (= (type $generated@@616) $generated@@176) (= (type $generated@@617) $generated@@75)) ($generated@@260 $generated@@616 ($generated@@542 $generated@@617))) (and (= ($generated@@309 ($generated@@367 ($generated@@303 $generated@@176) $generated@@616)) $generated@@616) ($generated@@157 ($generated@@367 ($generated@@303 $generated@@176) $generated@@616) ($generated@@542 $generated@@617))))
 :pattern ( ($generated@@260 $generated@@616 ($generated@@542 $generated@@617)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (and (= (type $generated@@618) $generated@@88) (= (type $generated@@619) ($generated@@87 $generated@@88 $generated@@89))) (and (not (= $generated@@618 $generated@@148)) ($generated@@85 $generated@@618 $generated@@151 $generated@@619))) ($generated@@85 $generated@@618 $generated@@181 $generated@@619))
 :pattern ( ($generated@@85 $generated@@618 $generated@@151 $generated@@619))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (and (= (type $generated@@620) $generated@@88) (= (type $generated@@621) ($generated@@87 $generated@@88 $generated@@89))) (and (not (= $generated@@620 $generated@@148)) ($generated@@85 $generated@@620 $generated@@154 $generated@@621))) ($generated@@85 $generated@@620 $generated@@181 $generated@@621))
 :pattern ( ($generated@@85 $generated@@620 $generated@@154 $generated@@621))
)))
(assert  (=> (<= 1 $generated@@159) (forall (($generated@@622 T@U) ) (!  (=> (and (= (type $generated@@622) $generated@@88) (or ($generated@@161 $generated@@622) (and (not (= 1 $generated@@159)) ($generated@@157 $generated@@622 $generated@@162)))) (= ($generated@@160 $generated@@622) ($generated@@0 ($generated@@284 ($generated@@11 false)))))
 :pattern ( ($generated@@160 $generated@@622))
))))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (! (let (($generated@@627 (type $generated@@626)))
 (=> (and (and (and (= (type $generated@@623) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@624) $generated@@88)) (= (type $generated@@625) ($generated@@77 $generated@@627))) ($generated@@288 ($generated@@93 $generated@@623 $generated@@624 ($generated@@95 ($generated@@92 $generated@@623 $generated@@624) $generated@@625 $generated@@626)))) ($generated@@143 $generated@@623 ($generated@@93 $generated@@623 $generated@@624 ($generated@@95 ($generated@@92 $generated@@623 $generated@@624) $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@93 $generated@@623 $generated@@624 ($generated@@95 ($generated@@92 $generated@@623 $generated@@624) $generated@@625 $generated@@626)))
)))
(assert (= ($generated@@83 $generated@@147) $generated@@63))
(assert (= ($generated@@604 $generated@@147) $generated@@71))
(assert (= ($generated@@83 $generated@@181) $generated@@64))
(assert (= ($generated@@604 $generated@@181) $generated@@71))
(assert (= ($generated@@83 $generated@@151) $generated@@65))
(assert (= ($generated@@604 $generated@@151) $generated@@72))
(assert (= ($generated@@83 $generated@@162) $generated@@66))
(assert (= ($generated@@604 $generated@@162) $generated@@72))
(assert (= ($generated@@83 $generated@@154) $generated@@67))
(assert (= ($generated@@604 $generated@@154) $generated@@73))
(assert (= ($generated@@83 $generated@@253) $generated@@68))
(assert (= ($generated@@604 $generated@@253) $generated@@73))
(assert (= ($generated@@83 $generated@@256) $generated@@69))
(assert (= ($generated@@604 $generated@@256) $generated@@74))
(assert (forall (($generated@@628 T@U) ($generated@@629 T@U) ($generated@@630 T@U) ) (!  (=> (and (and (= (type $generated@@628) ($generated@@87 $generated@@176 $generated@@2)) (= (type $generated@@629) $generated@@75)) (= (type $generated@@630) ($generated@@87 $generated@@88 $generated@@89))) (= ($generated@@85 $generated@@628 ($generated@@184 $generated@@629) $generated@@630) (forall (($generated@@631 T@U) ) (!  (=> (and (= (type $generated@@631) $generated@@176) (< 0 ($generated ($generated@@92 $generated@@628 $generated@@631)))) ($generated@@289 $generated@@631 $generated@@629 $generated@@630))
 :pattern ( ($generated@@92 $generated@@628 $generated@@631))
))))
 :pattern ( ($generated@@85 $generated@@628 ($generated@@184 $generated@@629) $generated@@630))
)))
(assert (forall (($generated@@632 T@U) ) (!  (=> (= (type $generated@@632) $generated@@88) (= ($generated@@157 $generated@@632 $generated@@147)  (or (= $generated@@632 $generated@@148) ($generated@@164 ($generated@@189 $generated@@632)))))
 :pattern ( ($generated@@157 $generated@@632 $generated@@147))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) $generated@@167) (= (type $generated@@634) $generated@@75)) (= (type $generated@@635) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@288 $generated@@635) (and ($generated@@165 $generated@@633) (exists (($generated@@636 T@U) ) (!  (and (= (type $generated@@636) $generated@@75) ($generated@@85 $generated@@633 ($generated@@166 $generated@@634 $generated@@636) $generated@@635))
 :pattern ( ($generated@@85 $generated@@633 ($generated@@166 $generated@@634 $generated@@636) $generated@@635))
))))) ($generated@@289 ($generated@@174 $generated@@633) $generated@@634 $generated@@635))
 :pattern ( ($generated@@289 ($generated@@174 $generated@@633) $generated@@634 $generated@@635))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ($generated@@639 T@U) ) (!  (=> (and (and (and (= (type $generated@@637) $generated@@167) (= (type $generated@@638) $generated@@75)) (= (type $generated@@639) ($generated@@87 $generated@@88 $generated@@89))) (and ($generated@@288 $generated@@639) (and ($generated@@165 $generated@@637) (exists (($generated@@640 T@U) ) (!  (and (= (type $generated@@640) $generated@@75) ($generated@@85 $generated@@637 ($generated@@166 $generated@@640 $generated@@638) $generated@@639))
 :pattern ( ($generated@@85 $generated@@637 ($generated@@166 $generated@@640 $generated@@638) $generated@@639))
))))) ($generated@@289 ($generated@@175 $generated@@637) $generated@@638 $generated@@639))
 :pattern ( ($generated@@289 ($generated@@175 $generated@@637) $generated@@638 $generated@@639))
)))
(assert (forall (($generated@@641 T@U) ($generated@@642 T@U) ) (!  (=> (and (= (type $generated@@641) $generated@@176) (= (type $generated@@642) $generated@@176)) (= ($generated@@259 ($generated@@284 $generated@@641) ($generated@@284 $generated@@642)) ($generated@@284 ($generated@@259 $generated@@641 $generated@@642))))
 :pattern ( ($generated@@259 ($generated@@284 $generated@@641) ($generated@@284 $generated@@642)))
)))
(assert (forall (($generated@@643 T@U) ) (!  (=> (= (type $generated@@643) $generated@@88) (= ($generated@@157 $generated@@643 $generated@@256)  (and ($generated@@157 $generated@@643 $generated@@162) ($generated@@160 $generated@@643))))
 :pattern ( ($generated@@157 $generated@@643 $generated@@256))
)))
(assert (forall (($generated@@644 Int) ) (! (= ($generated@@309 ($generated@@8 ($generated@@282 $generated@@644))) ($generated@@284 ($generated@@309 ($generated@@8 $generated@@644))))
 :pattern ( ($generated@@309 ($generated@@8 ($generated@@282 $generated@@644))))
)))
(assert (forall (($generated@@645 T@U) ) (! (= ($generated@@309 ($generated@@284 $generated@@645)) ($generated@@284 ($generated@@309 $generated@@645)))
 :pattern ( ($generated@@309 ($generated@@284 $generated@@645)))
)))
(assert (forall (($generated@@646 T@U) ) (! (let (($generated@@647 ($generated@@304 (type $generated@@646))))
 (=> (and (= (type $generated@@646) ($generated@@303 $generated@@647)) (= ($generated@@302 $generated@@646) 0)) (= $generated@@646 ($generated@@301 $generated@@647))))
 :pattern ( ($generated@@302 $generated@@646))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ($generated@@650 T@U) ) (! (let (($generated@@651 (type $generated@@649)))
 (=> (and (and (= (type $generated@@648) ($generated@@87 $generated@@651 $generated@@2)) (= (type $generated@@650) $generated@@2)) (<= 0 ($generated $generated@@650))) (= ($generated@@322 ($generated@@93 $generated@@648 $generated@@649 $generated@@650)) (+ (- ($generated@@322 $generated@@648) ($generated ($generated@@92 $generated@@648 $generated@@649))) ($generated $generated@@650)))))
 :pattern ( ($generated@@322 ($generated@@93 $generated@@648 $generated@@649 $generated@@650)))
)))
(assert  (=> (<= 1 $generated@@159) (forall (($generated@@652 T@U) ) (!  (=> (and (= (type $generated@@652) $generated@@88) (or ($generated@@161 ($generated@@284 $generated@@652)) (and (not (= 1 $generated@@159)) ($generated@@157 $generated@@652 $generated@@162)))) (= ($generated@@160 ($generated@@284 $generated@@652)) ($generated@@0 ($generated@@284 ($generated@@11 false)))))
 :weight 3
 :pattern ( ($generated@@160 ($generated@@284 $generated@@652)))
))))
(assert (forall (($generated@@653 T@U) ($generated@@654 T@U) ) (!  (=> (and (= (type $generated@@653) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@654) $generated@@2)) ($generated@@85 $generated@@654 $generated@@46 $generated@@653))
 :pattern ( ($generated@@85 $generated@@654 $generated@@46 $generated@@653))
)))
(assert (forall (($generated@@655 T@U) ($generated@@656 T@U) ) (!  (=> (and (= (type $generated@@655) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@656) $generated@@3)) ($generated@@85 $generated@@656 $generated@@47 $generated@@655))
 :pattern ( ($generated@@85 $generated@@656 $generated@@47 $generated@@655))
)))
(assert (forall (($generated@@657 T@U) ($generated@@658 T@U) ) (!  (=> (and (= (type $generated@@657) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@658) $generated@@4)) ($generated@@85 $generated@@658 $generated@@44 $generated@@657))
 :pattern ( ($generated@@85 $generated@@658 $generated@@44 $generated@@657))
)))
(assert (forall (($generated@@659 T@U) ($generated@@660 T@U) ) (!  (=> (and (= (type $generated@@659) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@660) $generated@@500)) ($generated@@85 $generated@@660 $generated@@45 $generated@@659))
 :pattern ( ($generated@@85 $generated@@660 $generated@@45 $generated@@659))
)))
(assert (forall (($generated@@661 T@U) ($generated@@662 T@U) ) (!  (=> (and (= (type $generated@@661) ($generated@@87 $generated@@88 $generated@@89)) (= (type $generated@@662) $generated@@176)) ($generated@@85 $generated@@662 $generated@@48 $generated@@661))
 :pattern ( ($generated@@85 $generated@@662 $generated@@48 $generated@@661))
)))
(assert (forall (($generated@@663 T@U) ($generated@@664 T@U) ) (!  (=> (and (= (type $generated@@663) ($generated@@303 $generated@@176)) (= (type $generated@@664) $generated@@75)) (= ($generated@@157 $generated@@663 ($generated@@542 $generated@@664)) (forall (($generated@@665 Int) ) (!  (=> (and (<= 0 $generated@@665) (< $generated@@665 ($generated@@302 $generated@@663))) ($generated@@260 ($generated@@543 $generated@@663 $generated@@665) $generated@@664))
 :pattern ( ($generated@@543 $generated@@663 $generated@@665))
))))
 :pattern ( ($generated@@157 $generated@@663 ($generated@@542 $generated@@664)))
)))
(assert  (=> (<= 1 $generated@@159) (forall (($generated@@666 T@U) ) (!  (=> (and (= (type $generated@@666) $generated@@88) (or ($generated@@268 $generated@@666) (and (not (= 1 $generated@@159)) (and ($generated@@157 $generated@@666 $generated@@181) ($generated@@157 $generated@@666 $generated@@162))))) (= ($generated@@267 $generated@@666) (ite ($generated@@157 $generated@@666 $generated@@253) (= ($generated@@282 ($generated@@405 1 ($generated@@282 0))) ($generated@@282 0)) true)))
 :pattern ( ($generated@@267 $generated@@666))
))))
(assert (forall (($generated@@668 T@U) ($generated@@669 Int) ) (!  (=> (= (type $generated@@668) ($generated@@303 $generated@@176)) (=> (and (<= 0 $generated@@669) (< $generated@@669 ($generated@@302 $generated@@668))) (< ($generated@@584 ($generated@@367 $generated@@167 ($generated@@543 $generated@@668 $generated@@669))) ($generated@@667 $generated@@668))))
 :pattern ( ($generated@@584 ($generated@@367 $generated@@167 ($generated@@543 $generated@@668 $generated@@669))))
)))
(assert (forall (($generated@@670 T@U) ($generated@@671 T@U) ($generated@@672 T@U) ) (!  (=> (and (and (and (= (type $generated@@670) ($generated@@330 $generated@@176 $generated@@176)) (= (type $generated@@671) $generated@@75)) (= (type $generated@@672) $generated@@75)) ($generated@@157 $generated@@670 ($generated@@443 $generated@@671 $generated@@672))) (and (and ($generated@@157 ($generated@@328 $generated@@670) ($generated@@272 $generated@@671)) ($generated@@157 ($generated@@384 $generated@@670) ($generated@@272 $generated@@672))) ($generated@@157 ($generated@@417 $generated@@670) ($generated@@272 ($generated@@166 $generated@@671 $generated@@672)))))
 :pattern ( ($generated@@157 $generated@@670 ($generated@@443 $generated@@671 $generated@@672)))
)))
(assert (forall (($generated@@673 T@U) ($generated@@674 T@U) ($generated@@675 T@U) ) (!  (=> (and (and (and (= (type $generated@@673) ($generated@@348 $generated@@176 $generated@@176)) (= (type $generated@@674) $generated@@75)) (= (type $generated@@675) $generated@@75)) ($generated@@157 $generated@@673 ($generated@@451 $generated@@674 $generated@@675))) (and (and ($generated@@157 ($generated@@346 $generated@@673) ($generated@@277 $generated@@674)) ($generated@@157 ($generated@@395 $generated@@673) ($generated@@277 $generated@@675))) ($generated@@157 ($generated@@425 $generated@@673) ($generated@@277 ($generated@@166 $generated@@674 $generated@@675)))))
 :pattern ( ($generated@@157 $generated@@673 ($generated@@451 $generated@@674 $generated@@675)))
)))
(assert (forall (($generated@@676 T@U) ) (!  (=> (= (type $generated@@676) $generated@@2) ($generated@@157 $generated@@676 $generated@@46))
 :pattern ( ($generated@@157 $generated@@676 $generated@@46))
)))
(assert (forall (($generated@@677 T@U) ) (!  (=> (= (type $generated@@677) $generated@@3) ($generated@@157 $generated@@677 $generated@@47))
 :pattern ( ($generated@@157 $generated@@677 $generated@@47))
)))
(assert (forall (($generated@@678 T@U) ) (!  (=> (= (type $generated@@678) $generated@@4) ($generated@@157 $generated@@678 $generated@@44))
 :pattern ( ($generated@@157 $generated@@678 $generated@@44))
)))
(assert (forall (($generated@@679 T@U) ) (!  (=> (= (type $generated@@679) $generated@@500) ($generated@@157 $generated@@679 $generated@@45))
 :pattern ( ($generated@@157 $generated@@679 $generated@@45))
)))
(assert (forall (($generated@@680 T@U) ) (!  (=> (= (type $generated@@680) $generated@@176) ($generated@@157 $generated@@680 $generated@@48))
 :pattern ( ($generated@@157 $generated@@680 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@681 () Bool)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () Bool)
(declare-fun $generated@@684 () Int)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(declare-fun $generated@@688 () T@U)
(declare-fun $generated@@689 () T@U)
(declare-fun $generated@@690 () T@U)
(declare-fun $generated@@691 () T@U)
(declare-fun $generated@@692 (T@U) Bool)
(declare-fun $generated@@693 () T@U)
(declare-fun $generated@@694 () T@U)
(declare-fun $generated@@695 () Bool)
(declare-fun $generated@@696 () T@U)
(declare-fun $generated@@697 () Bool)
(declare-fun $generated@@698 () T@U)
(declare-fun $generated@@699 () T@U)
(declare-fun $generated@@700 () T@U)
(declare-fun $generated@@701 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type $generated@@682) ($generated@@87 $generated@@176 $generated@@4)) (= (type $generated@@685) ($generated@@87 $generated@@176 $generated@@4))) (= (type $generated@@686) $generated@@88)) (= (type $generated@@687) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@688) ($generated@@195 $generated@@88 $generated@@4))) (= (type $generated@@689) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@690) $generated@@88)) (= (type $generated@@691) ($generated@@87 $generated@@88 $generated@@89))) (= (type $generated@@693) $generated@@88)) (= (type $generated@@694) ($generated@@87 $generated@@176 $generated@@4))) (= (type $generated@@696) $generated@@88)) (= (type $generated@@698) $generated@@88)) (= (type $generated@@699) ($generated@@87 $generated@@176 $generated@@4))) (= (type $generated@@700) ($generated@@87 $generated@@176 $generated@@4))) (= (type $generated@@701) ($generated@@87 $generated@@176 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@702  (=> (and (= $generated@@681 (forall (($generated@@703 Int) ) (!  (=> (<= ($generated@@282 0) $generated@@703) (=> ($generated@@0 ($generated@@92 $generated@@682 ($generated@@309 ($generated@@8 $generated@@703)))) (> $generated@@703 1)))
 :pattern ( ($generated@@92 $generated@@682 ($generated@@309 ($generated@@8 $generated@@703))))
))) (= (ControlFlow 0 2) (- 0 1))) $generated@@683)))
(let (($generated@@704  (=> (and (not ($generated@@0 ($generated@@92 $generated@@682 ($generated@@309 ($generated@@8 $generated@@684))))) (= (ControlFlow 0 5) 2)) $generated@@702)))
(let (($generated@@705  (=> (and ($generated@@0 ($generated@@92 $generated@@682 ($generated@@309 ($generated@@8 $generated@@684)))) (= (ControlFlow 0 4) 2)) $generated@@702)))
(let (($generated@@706  (=> (<= ($generated@@282 0) $generated@@684) (and (=> (= (ControlFlow 0 6) 4) $generated@@705) (=> (= (ControlFlow 0 6) 5) $generated@@704)))))
(let (($generated@@707  (=> (and (< $generated@@684 ($generated@@282 0)) (= (ControlFlow 0 3) 2)) $generated@@702)))
(let (($generated@@708  (=> (forall (($generated@@709 T@U) ) (!  (=> (and (and (= (type $generated@@709) $generated@@88) ($generated@@157 $generated@@709 $generated@@162)) ($generated@@0 ($generated@@92 $generated@@685 ($generated@@309 $generated@@709)))) ($generated@@268 $generated@@709))
 :pattern ( ($generated@@267 $generated@@709))
 :pattern ( ($generated@@92 $generated@@685 ($generated@@309 $generated@@709)))
)) (=> (and (= $generated@@683 (forall (($generated@@710 T@U) ) (!  (=> (and (and (= (type $generated@@710) $generated@@88) ($generated@@157 $generated@@710 $generated@@162)) ($generated@@0 ($generated@@92 $generated@@685 ($generated@@309 $generated@@710)))) ($generated@@267 $generated@@710))
 :pattern ( ($generated@@267 $generated@@710))
 :pattern ( ($generated@@92 $generated@@685 ($generated@@309 $generated@@710)))
))) (= $generated@@682 ($generated@@284 ($generated@@461 ($generated@@461 ($generated@@461 ($generated@@598 $generated@@176) ($generated@@309 ($generated@@8 ($generated@@282 2)))) ($generated@@309 ($generated@@8 ($generated@@282 3)))) ($generated@@309 ($generated@@8 ($generated@@282 4))))))) (and (=> (= (ControlFlow 0 7) 6) $generated@@706) (=> (= (ControlFlow 0 7) 3) $generated@@707))))))
(let (($generated@@711  (=> (and (not ($generated@@0 ($generated@@92 $generated@@685 ($generated@@309 $generated@@686)))) (= (ControlFlow 0 11) 7)) $generated@@708)))
(let (($generated@@712  (=> (and ($generated@@0 ($generated@@92 $generated@@685 ($generated@@309 $generated@@686))) ($generated@@85 $generated@@686 $generated@@181 $generated@@687)) (and (=> (= (ControlFlow 0 9) (- 0 10)) ($generated@@157 $generated@@686 $generated@@162)) (=> ($generated@@157 $generated@@686 $generated@@162) (=> (and ($generated@@268 $generated@@686) (= (ControlFlow 0 9) 7)) $generated@@708))))))
(let (($generated@@713  (=> (and ($generated@@157 $generated@@686 $generated@@162) ($generated@@85 $generated@@686 $generated@@162 $generated@@687)) (and (=> (= (ControlFlow 0 12) 9) $generated@@712) (=> (= (ControlFlow 0 12) 11) $generated@@711)))))
(let (($generated@@714  (=> (and (not (and ($generated@@157 $generated@@686 $generated@@162) ($generated@@85 $generated@@686 $generated@@162 $generated@@687))) (= (ControlFlow 0 8) 7)) $generated@@708)))
(let (($generated@@715  (=> (= $generated@@688 ($generated@@194 $generated@@148 $generated@@689 $generated@@60 false)) (=> (and (and (not (= $generated@@690 $generated@@148)) (= ($generated@@189 $generated@@690) $generated@@151)) (and (not ($generated@@0 ($generated@@94 ($generated@@92 $generated@@689 $generated@@690) $generated@@60))) (= $generated@@691 ($generated@@93 $generated@@689 $generated@@690 ($generated@@95 ($generated@@92 $generated@@689 $generated@@690) $generated@@60 ($generated@@11 true)))))) (=> (and (and (and ($generated@@288 $generated@@691) ($generated@@692 $generated@@691)) (and (not (= $generated@@693 $generated@@148)) (= ($generated@@189 $generated@@693) $generated@@154))) (and (and (not ($generated@@0 ($generated@@94 ($generated@@92 $generated@@691 $generated@@693) $generated@@60))) (= $generated@@687 ($generated@@93 $generated@@691 $generated@@693 ($generated@@95 ($generated@@92 $generated@@691 $generated@@693) $generated@@60 ($generated@@11 true))))) (and ($generated@@288 $generated@@687) ($generated@@692 $generated@@687)))) (and (=> (= (ControlFlow 0 13) (- 0 15)) true) (and (=> (= (ControlFlow 0 13) (- 0 14)) true) (=> (and (= $generated@@685 ($generated@@461 ($generated@@461 ($generated@@598 $generated@@176) ($generated@@309 $generated@@690)) ($generated@@309 $generated@@693))) (= $generated@@694 ($generated@@284 ($generated@@598 $generated@@176)))) (and (=> (= (ControlFlow 0 13) 12) $generated@@713) (=> (= (ControlFlow 0 13) 8) $generated@@714))))))))))
(let (($generated@@716  (=> (and ($generated@@288 $generated@@689) ($generated@@692 $generated@@689)) (=> (and (and (=> $generated@@695 (and ($generated@@157 $generated@@696 $generated@@162) ($generated@@85 $generated@@696 $generated@@162 $generated@@689))) true) (and (=> $generated@@697 (and ($generated@@157 $generated@@698 $generated@@253) ($generated@@85 $generated@@698 $generated@@253 $generated@@689))) true)) (=> (and (and (and (and ($generated@@157 $generated@@699 ($generated@@272 $generated@@181)) ($generated@@85 $generated@@699 ($generated@@272 $generated@@181) $generated@@689)) true) (and (and ($generated@@157 $generated@@700 ($generated@@272 $generated@@256)) ($generated@@85 $generated@@700 ($generated@@272 $generated@@256) $generated@@689)) true)) (and (and (and ($generated@@157 $generated@@701 ($generated@@272 $generated@@46)) ($generated@@85 $generated@@701 ($generated@@272 $generated@@46) $generated@@689)) true) (and (= 3 $generated@@159) (= (ControlFlow 0 16) 13)))) $generated@@715)))))
$generated@@716)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
