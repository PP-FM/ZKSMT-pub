(set-logic UFLIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int T@U) T@U)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@142 (Int) T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) Bool)
(declare-fun $generated@@244 (T@U) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@268 (T@U) Bool)
(declare-fun $generated@@271 (T@U T@U T@U) Bool)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@309 (T@T T@T) T@U)
(declare-fun $generated@@310 (T@T T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@327 (T@T T@T) T@U)
(declare-fun $generated@@328 (T@T T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@347 (T@T T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@428 (T@T) T@U)
(declare-fun $generated@@452 () T@T)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@538 (T@U) Bool)
(declare-fun $generated@@540 (T@U) Int)
(declare-fun $generated@@541 (T@U) Int)
(declare-fun $generated@@559 (T@U) T@U)
(declare-fun $generated@@617 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@82) 11) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@93 $generated@@94)) 12))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@83 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@83 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@83 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@83 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@83 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@72 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@85) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@85)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@72 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ($generated@@138 T@U) ) (! (= (type ($generated@@80 $generated@@137 $generated@@138)) $generated@@82)
 :pattern ( ($generated@@80 $generated@@137 $generated@@138))
))) (= (type $generated@@81) $generated@@69)))
(assert (forall (($generated@@139 Int) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (= (type $generated@@140) $generated@@82) (= (type $generated@@141) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@86 $generated@@141)) (= ($generated@@79 ($generated@@80 $generated@@139 $generated@@140) $generated@@81 $generated@@141)  (and ($generated@@79 ($generated@@8 $generated@@139) $generated@@46 $generated@@141) ($generated@@79 $generated@@140 $generated@@81 $generated@@141))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@139 $generated@@140) $generated@@81 $generated@@141))
)))
(assert (forall (($generated@@143 Int) ) (! (= (type ($generated@@142 $generated@@143)) $generated@@69)
 :pattern ( ($generated@@142 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@79 $generated@@144 ($generated@@142 0) $generated@@145))
 :pattern ( ($generated@@79 $generated@@144 ($generated@@142 0) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@2) ($generated@@146 $generated@@147 ($generated@@142 0)))
 :pattern ( ($generated@@146 $generated@@147 ($generated@@142 0)))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@149 $generated@@150 $generated@@151)) $generated@@69)
 :pattern ( ($generated@@149 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@69) (= (type $generated@@153) $generated@@69)) (= (type $generated@@154) $generated@@82)) ($generated@@146 $generated@@154 ($generated@@149 $generated@@152 $generated@@153))) ($generated@@148 $generated@@154))
 :pattern ( ($generated@@148 $generated@@154) ($generated@@146 $generated@@154 ($generated@@149 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 15) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@82) (= (type $generated@@162) $generated@@82)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert  (and (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@73)
 :pattern ( ($generated@@163 $generated@@165))
)) (= (type $generated@@164) $generated@@82)))
(assert (= ($generated@@163 $generated@@164) $generated@@63))
(assert (= (type $generated@@166) $generated@@82))
(assert (= ($generated@@163 $generated@@166) $generated@@65))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@69)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@83 $generated@@158 $generated@@2)) (= (type $generated@@171) $generated@@69)) ($generated@@146 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@146 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@178 $generated@@179)) 16)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@174 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@176 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(let (($generated@@193 (type $generated@@189)))
(= (type ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@174 $generated@@193 $generated@@192))))
 :pattern ( ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@176 (type $generated@@194))))
 (=> (= (type $generated@@197) $generated@@198) (= ($generated@@172 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@195 $generated@@196) $generated@@197)))
 :weight 0
))) (and (and (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@172 ($generated@@177 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@172 ($generated@@177 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@172 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or true (= ($generated@@172 ($generated@@177 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@172 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@174 $generated@@84 $generated@@4))
 :pattern ( ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@72 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@84) (= (type $generated@@222) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@223) ($generated@@71 $generated@@4))) (= (type $generated@@225) $generated@@84)) (= (type $generated@@226) ($generated@@71 $generated@@227))) (= ($generated@@0 ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@82)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@69) (= (type $generated@@233) $generated@@69)) (= (type $generated@@234) $generated@@158)) (= (type $generated@@235) $generated@@158)) (= ($generated@@146 ($generated@@228 $generated@@234 $generated@@235) ($generated@@149 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@146 ($generated@@228 $generated@@234 $generated@@235) ($generated@@149 $generated@@232 $generated@@233)))
)))
(assert ($generated@@146 $generated@@164 $generated@@81))
(assert ($generated@@146 $generated@@166 $generated@@81))
(assert (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@83 $generated@@84 $generated@@85)) ($generated@@86 $generated@@236)) ($generated@@79 $generated@@164 $generated@@81 $generated@@236))
 :pattern ( ($generated@@79 $generated@@164 $generated@@81 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@83 $generated@@84 $generated@@85)) ($generated@@86 $generated@@237)) ($generated@@79 $generated@@166 $generated@@81 $generated@@237))
 :pattern ( ($generated@@79 $generated@@166 $generated@@81 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@82) (= (type $generated@@239) $generated@@82)) (= ($generated@@155 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@155 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@82) (= (type $generated@@242) $generated@@82)) (= ($generated@@240 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@240 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@82)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (= (type $generated@@247) $generated@@82) (= (type $generated@@248) $generated@@82)) (and ($generated@@243 $generated@@247) ($generated@@243 $generated@@248))) (= ($generated@@240 $generated@@247 $generated@@248)  (and (= ($generated@@244 $generated@@247) ($generated@@244 $generated@@248)) ($generated@@240 ($generated@@245 $generated@@247) ($generated@@245 $generated@@248)))))
 :pattern ( ($generated@@240 $generated@@247 $generated@@248) ($generated@@243 $generated@@247))
 :pattern ( ($generated@@240 $generated@@247 $generated@@248) ($generated@@243 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@69)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@83 $generated@@158 $generated@@4)) (= (type $generated@@252) $generated@@69)) (= ($generated@@146 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@158) ($generated@@0 ($generated@@89 $generated@@251 $generated@@253))) ($generated@@229 $generated@@253 $generated@@252))
 :pattern ( ($generated@@89 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@146 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@69)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@83 $generated@@158 $generated@@4)) (= (type $generated@@257) $generated@@69)) (= ($generated@@146 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@158) ($generated@@0 ($generated@@89 $generated@@256 $generated@@258))) ($generated@@229 $generated@@258 $generated@@257))
 :pattern ( ($generated@@89 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@146 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@82) (= (type $generated@@267) $generated@@82)) (and ($generated@@265 $generated@@266) ($generated@@265 $generated@@267))) (= ($generated@@240 $generated@@266 $generated@@267) true))
 :pattern ( ($generated@@240 $generated@@266 $generated@@267) ($generated@@265 $generated@@266))
 :pattern ( ($generated@@240 $generated@@266 $generated@@267) ($generated@@265 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (= (type $generated@@269) $generated@@82) (= (type $generated@@270) $generated@@82)) (and ($generated@@268 $generated@@269) ($generated@@268 $generated@@270))) (= ($generated@@240 $generated@@269 $generated@@270) true))
 :pattern ( ($generated@@240 $generated@@269 $generated@@270) ($generated@@268 $generated@@269))
 :pattern ( ($generated@@240 $generated@@269 $generated@@270) ($generated@@268 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) $generated@@69) (= (type $generated@@273) $generated@@69)) (= (type $generated@@274) $generated@@158)) (= (type $generated@@275) $generated@@158)) (= (type $generated@@276) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@86 $generated@@276)) (= ($generated@@79 ($generated@@228 $generated@@274 $generated@@275) ($generated@@149 $generated@@272 $generated@@273) $generated@@276)  (and ($generated@@271 $generated@@274 $generated@@272 $generated@@276) ($generated@@271 $generated@@275 $generated@@273 $generated@@276))))
 :pattern ( ($generated@@79 ($generated@@228 $generated@@274 $generated@@275) ($generated@@149 $generated@@272 $generated@@273) $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@82) (= ($generated@@148 $generated@@277) (= ($generated@@163 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@82) (= ($generated@@265 $generated@@278) (= ($generated@@163 $generated@@278) $generated@@63)))
 :pattern ( ($generated@@265 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@82) (= ($generated@@268 $generated@@279) (= ($generated@@163 $generated@@279) $generated@@65)))
 :pattern ( ($generated@@268 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@82) (= ($generated@@243 $generated@@280) (= ($generated@@163 $generated@@280) $generated@@66)))
 :pattern ( ($generated@@243 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@82) ($generated@@148 $generated@@281)) (exists (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (and (and (= (type $generated@@282) $generated@@158) (= (type $generated@@283) $generated@@158)) (= $generated@@281 ($generated@@228 $generated@@282 $generated@@283)))
 :no-pattern (type $generated@@282)
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
)))
 :pattern ( ($generated@@148 $generated@@281))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@82) ($generated@@243 $generated@@284)) (exists (($generated@@285 Int) ($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@82) (= $generated@@284 ($generated@@80 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@243 $generated@@284))
)))
(assert  (and (and (forall (($generated@@291 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@291)) 17)) (forall (($generated@@292 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@289 $generated@@292))
))) (forall (($generated@@293 T@T) ) (! (= (type ($generated@@287 $generated@@293)) ($generated@@289 $generated@@293))
 :pattern ( ($generated@@287 $generated@@293))
))))
(assert (forall (($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@294)) 0)
 :pattern ( ($generated@@287 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@82) ($generated@@265 $generated@@295)) (= $generated@@295 $generated@@164))
 :pattern ( ($generated@@265 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@82) ($generated@@268 $generated@@296)) (= $generated@@296 $generated@@166))
 :pattern ( ($generated@@268 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@158)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@69) (= (type $generated@@301) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@271 ($generated@@297 $generated@@299) $generated@@300 $generated@@301) ($generated@@79 $generated@@299 $generated@@300 $generated@@301)))
 :pattern ( ($generated@@271 ($generated@@297 $generated@@299) $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@304 T@T) ) (! (= (type ($generated@@303 $generated@@304)) ($generated@@83 $generated@@304 $generated@@2))
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@87 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@83 $generated@@306 $generated@@2)) (and (= (= ($generated@@302 $generated@@305) 0) (= $generated@@305 ($generated@@303 $generated@@306))) (=> (not (= ($generated@@302 $generated@@305) 0)) (exists (($generated@@307 T@U) ) (!  (and (= (type $generated@@307) $generated@@306) (< 0 ($generated ($generated@@89 $generated@@305 $generated@@307))))
 :no-pattern (type $generated@@307)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
))))))
 :pattern ( ($generated@@302 $generated@@305))
)))
(assert  (and (and (and (and (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (= ($generated@@1 ($generated@@310 $generated@@313 $generated@@314)) 18)) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@311 ($generated@@310 $generated@@315 $generated@@316)) $generated@@315)
 :pattern ( ($generated@@310 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@312 ($generated@@310 $generated@@317 $generated@@318)) $generated@@318)
 :pattern ( ($generated@@310 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@311 (type $generated@@319))))
(= (type ($generated@@308 $generated@@319)) ($generated@@83 $generated@@320 $generated@@4)))
 :pattern ( ($generated@@308 $generated@@319))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= (type ($generated@@309 $generated@@321 $generated@@322)) ($generated@@310 $generated@@321 $generated@@322))
 :pattern ( ($generated@@309 $generated@@321 $generated@@322))
))))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@T) ) (! (let (($generated@@325 (type $generated@@323)))
 (not ($generated@@0 ($generated@@89 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323))))
 :pattern ( (let (($generated@@325 (type $generated@@323)))
($generated@@89 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323)))
)))
(assert  (and (and (and (and (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (= ($generated@@1 ($generated@@328 $generated@@331 $generated@@332)) 19)) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@329 ($generated@@328 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@328 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@330 ($generated@@328 $generated@@335 $generated@@336)) $generated@@336)
 :pattern ( ($generated@@328 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@329 (type $generated@@337))))
(= (type ($generated@@326 $generated@@337)) ($generated@@83 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@337))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= (type ($generated@@327 $generated@@339 $generated@@340)) ($generated@@328 $generated@@339 $generated@@340))
 :pattern ( ($generated@@327 $generated@@339 $generated@@340))
))))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@T) ) (! (let (($generated@@343 (type $generated@@341)))
 (not ($generated@@0 ($generated@@89 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341))))
 :pattern ( (let (($generated@@343 (type $generated@@341)))
($generated@@89 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341)))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@87 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@83 $generated@@345 $generated@@2)) (= ($generated@@168 $generated@@344) (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@345) (and (<= 0 ($generated ($generated@@89 $generated@@344 $generated@@346))) (<= ($generated ($generated@@89 $generated@@344 $generated@@346)) ($generated@@302 $generated@@344))))
 :pattern ( ($generated@@89 $generated@@344 $generated@@346))
)))))
 :pattern ( ($generated@@168 $generated@@344))
)))
(assert (forall (($generated@@348 T@T) ($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@348 $generated@@349)) $generated@@348)
 :pattern ( ($generated@@347 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@158) ($generated@@229 $generated@@350 $generated@@81)) (and (= ($generated@@297 ($generated@@347 $generated@@82 $generated@@350)) $generated@@350) ($generated@@146 ($generated@@347 $generated@@82 $generated@@350) $generated@@81)))
 :pattern ( ($generated@@229 $generated@@350 $generated@@81))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@312 (type $generated@@351))))
(let (($generated@@353 ($generated@@311 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@310 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@309 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@89 ($generated@@308 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@308 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@312 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@83 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@312 (type $generated@@358))))
(let (($generated@@360 ($generated@@311 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@310 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@309 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@89 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@330 (type $generated@@362))))
(let (($generated@@364 ($generated@@329 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@328 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@327 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@89 ($generated@@326 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@326 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@330 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@83 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@330 (type $generated@@369))))
(let (($generated@@371 ($generated@@329 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@328 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@327 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@89 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@83 $generated@@158 $generated@@2)) (= (type $generated@@374) $generated@@69)) (= ($generated@@146 $generated@@373 ($generated@@167 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@158) (< 0 ($generated ($generated@@89 $generated@@373 $generated@@375)))) ($generated@@229 $generated@@375 $generated@@374))
 :pattern ( ($generated@@89 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@146 $generated@@373 ($generated@@167 $generated@@374)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@83 $generated@@158 $generated@@4)) (= (type $generated@@377) $generated@@69)) (= (type $generated@@378) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@79 $generated@@376 ($generated@@249 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@158) ($generated@@0 ($generated@@89 $generated@@376 $generated@@379))) ($generated@@271 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@89 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@79 $generated@@376 ($generated@@249 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@83 $generated@@158 $generated@@4)) (= (type $generated@@381) $generated@@69)) (= (type $generated@@382) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@79 $generated@@380 ($generated@@254 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@158) ($generated@@0 ($generated@@89 $generated@@380 $generated@@383))) ($generated@@271 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@89 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@79 $generated@@380 ($generated@@254 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@89 ($generated@@303 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@89 ($generated@@303 $generated@@385) $generated@@384)))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@83 $generated@@158 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@312 (type $generated@@389))))
(let (($generated@@391 ($generated@@311 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@83 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@310 $generated@@158 $generated@@158)) (= (type $generated@@393) $generated@@158)) (= ($generated@@0 ($generated@@89 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@89 ($generated@@308 $generated@@392) ($generated@@156 ($generated@@347 $generated@@82 $generated@@393)))) (= ($generated@@89 ($generated@@387 $generated@@392) ($generated@@156 ($generated@@347 $generated@@82 $generated@@393))) ($generated@@157 ($generated@@347 $generated@@82 $generated@@393))))))
 :pattern ( ($generated@@89 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@83 $generated@@158 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@330 (type $generated@@397))))
(let (($generated@@399 ($generated@@329 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@83 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@328 $generated@@158 $generated@@158)) (= (type $generated@@401) $generated@@158)) (= ($generated@@0 ($generated@@89 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@89 ($generated@@326 $generated@@400) ($generated@@156 ($generated@@347 $generated@@82 $generated@@401)))) (= ($generated@@89 ($generated@@395 $generated@@400) ($generated@@156 ($generated@@347 $generated@@82 $generated@@401))) ($generated@@157 ($generated@@347 $generated@@82 $generated@@401))))))
 :pattern ( ($generated@@89 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@311 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@310 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@89 ($generated@@355 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@89 ($generated@@308 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@89 ($generated@@387 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@89 ($generated@@308 $generated@@402) $generated@@406))
 :pattern ( ($generated@@89 ($generated@@387 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@89 ($generated@@355 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@329 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@328 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@89 ($generated@@366 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@89 ($generated@@326 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@89 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@89 ($generated@@326 $generated@@407) $generated@@411))
 :pattern ( ($generated@@89 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@89 ($generated@@366 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@69)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@310 $generated@@158 $generated@@158)) (= (type $generated@@416) $generated@@69)) (= (type $generated@@417) $generated@@69)) (= (type $generated@@418) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@79 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@158) ($generated@@0 ($generated@@89 ($generated@@308 $generated@@415) $generated@@419))) (and ($generated@@271 ($generated@@89 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@271 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@89 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@89 ($generated@@308 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@79 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@69)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@328 $generated@@158 $generated@@158)) (= (type $generated@@424) $generated@@69)) (= (type $generated@@425) $generated@@69)) (= (type $generated@@426) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@79 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@158) ($generated@@0 ($generated@@89 ($generated@@326 $generated@@423) $generated@@427))) (and ($generated@@271 ($generated@@89 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@271 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@89 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@89 ($generated@@326 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@79 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@429 T@T) ) (! (= (type ($generated@@428 $generated@@429)) ($generated@@83 $generated@@429 $generated@@4))
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@330 (type $generated@@430))))
(let (($generated@@432 ($generated@@329 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@328 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@327 $generated@@432 $generated@@431)) (= ($generated@@326 $generated@@430) ($generated@@428 $generated@@432))))))
 :pattern ( ($generated@@326 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@330 (type $generated@@433))))
(let (($generated@@435 ($generated@@329 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@328 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@327 $generated@@435 $generated@@434)) (= ($generated@@366 $generated@@433) ($generated@@428 $generated@@434))))))
 :pattern ( ($generated@@366 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@330 (type $generated@@436))))
(let (($generated@@438 ($generated@@329 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@328 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@327 $generated@@438 $generated@@437)) (= ($generated@@394 $generated@@436) ($generated@@428 $generated@@158))))))
 :pattern ( ($generated@@394 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@312 (type $generated@@439))))
(let (($generated@@441 ($generated@@311 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@310 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@309 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@158) (= (type $generated@@443) $generated@@158)) ($generated@@0 ($generated@@89 ($generated@@386 $generated@@439) ($generated@@297 ($generated@@228 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@386 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@330 (type $generated@@444))))
(let (($generated@@446 ($generated@@329 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@328 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@327 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@158) (= (type $generated@@448) $generated@@158)) ($generated@@0 ($generated@@89 ($generated@@394 $generated@@444) ($generated@@297 ($generated@@228 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@394 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@158) ($generated@@229 $generated@@449 $generated@@46)) (and (= ($generated@@297 ($generated@@347 $generated@@2 $generated@@449)) $generated@@449) ($generated@@146 ($generated@@347 $generated@@2 $generated@@449) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@449 $generated@@46))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@158) ($generated@@229 $generated@@450 $generated@@47)) (and (= ($generated@@297 ($generated@@347 $generated@@3 $generated@@450)) $generated@@450) ($generated@@146 ($generated@@347 $generated@@3 $generated@@450) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@450 $generated@@47))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@158) ($generated@@229 $generated@@451 $generated@@44)) (and (= ($generated@@297 ($generated@@347 $generated@@4 $generated@@451)) $generated@@451) ($generated@@146 ($generated@@347 $generated@@4 $generated@@451) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@451 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@452) 20))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@158) ($generated@@229 $generated@@453 $generated@@45)) (and (= ($generated@@297 ($generated@@347 $generated@@452 $generated@@453)) $generated@@453) ($generated@@146 ($generated@@347 $generated@@452 $generated@@453) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@453 $generated@@45))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (= (type $generated@@455) $generated@@69) (= ($generated@@229 ($generated@@297 $generated@@454) $generated@@455) ($generated@@146 $generated@@454 $generated@@455)))
 :pattern ( ($generated@@229 ($generated@@297 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@87 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@83 $generated@@457 $generated@@2)) (<= 0 ($generated@@302 $generated@@456))))
 :pattern ( ($generated@@302 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@290 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@289 $generated@@459)) (<= 0 ($generated@@288 $generated@@458))))
 :pattern ( ($generated@@288 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@69)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@69) (= (type $generated@@463) $generated@@69)) (= ($generated@@460 ($generated@@412 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@412 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@69)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@69) (= (type $generated@@467) $generated@@69)) (= ($generated@@464 ($generated@@412 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@412 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@69) (= (type $generated@@469) $generated@@69)) (= ($generated@@77 ($generated@@412 $generated@@468 $generated@@469)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@69)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@69) (= (type $generated@@473) $generated@@69)) (= ($generated@@470 ($generated@@420 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@420 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@69)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@69) (= (type $generated@@477) $generated@@69)) (= ($generated@@474 ($generated@@420 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@420 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@69) (= (type $generated@@479) $generated@@69)) (= ($generated@@77 ($generated@@420 $generated@@478 $generated@@479)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@158) (= (type $generated@@481) $generated@@158)) (= ($generated@@163 ($generated@@228 $generated@@480 $generated@@481)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@69)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@69) (= (type $generated@@485) $generated@@69)) (= ($generated@@482 ($generated@@149 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@149 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@69)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@69) (= (type $generated@@489) $generated@@69)) (= ($generated@@486 ($generated@@149 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@149 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@158) (= (type $generated@@491) $generated@@158)) (= ($generated@@156 ($generated@@228 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@228 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@158) (= (type $generated@@493) $generated@@158)) (= ($generated@@157 ($generated@@228 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@228 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 Int) ($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@82) (= ($generated@@163 ($generated@@80 $generated@@494 $generated@@495)) $generated@@66))
 :pattern ( ($generated@@80 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 Int) ($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@82) (= ($generated@@244 ($generated@@80 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@80 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 Int) ($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@82) (= ($generated@@245 ($generated@@80 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@80 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@69)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@290 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@289 $generated@@158)) (= (type $generated@@507) $generated@@69)) (= (type $generated@@508) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@79 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@288 $generated@@506))) ($generated@@271 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@79 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@142 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@142 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@69)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@69) (= ($generated@@512 ($generated@@249 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@249 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@69) (= ($generated@@77 ($generated@@249 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@69)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@69) (= ($generated@@516 ($generated@@254 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@254 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@69) (= ($generated@@77 ($generated@@254 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@69)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@69) (= ($generated@@520 ($generated@@167 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@167 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@69) (= ($generated@@77 ($generated@@167 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@69)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@69) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@69) (= ($generated@@77 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
(= ($generated@@347 $generated@@529 ($generated@@297 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@297 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@310 $generated@@158 $generated@@158)) (= (type $generated@@531) $generated@@69)) (= (type $generated@@532) $generated@@69)) (= ($generated@@146 $generated@@530 ($generated@@412 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@158) ($generated@@0 ($generated@@89 ($generated@@308 $generated@@530) $generated@@533))) (and ($generated@@229 ($generated@@89 ($generated@@387 $generated@@530) $generated@@533) $generated@@532) ($generated@@229 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@89 ($generated@@387 $generated@@530) $generated@@533))
 :pattern ( ($generated@@89 ($generated@@308 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@146 $generated@@530 ($generated@@412 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@328 $generated@@158 $generated@@158)) (= (type $generated@@535) $generated@@69)) (= (type $generated@@536) $generated@@69)) (= ($generated@@146 $generated@@534 ($generated@@420 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@158) ($generated@@0 ($generated@@89 ($generated@@326 $generated@@534) $generated@@537))) (and ($generated@@229 ($generated@@89 ($generated@@395 $generated@@534) $generated@@537) $generated@@536) ($generated@@229 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@89 ($generated@@395 $generated@@534) $generated@@537))
 :pattern ( ($generated@@89 ($generated@@326 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@146 $generated@@534 ($generated@@420 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@82) ($generated@@538 $generated@@539)) (or (or ($generated@@265 $generated@@539) ($generated@@268 $generated@@539)) ($generated@@243 $generated@@539)))
 :pattern ( ($generated@@538 $generated@@539))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@158) (= (type $generated@@543) $generated@@158)) (< ($generated@@540 $generated@@542) ($generated@@541 ($generated@@228 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@228 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ($generated@@545 T@U) ) (!  (=> (and (= (type $generated@@544) $generated@@158) (= (type $generated@@545) $generated@@158)) (< ($generated@@540 $generated@@545) ($generated@@541 ($generated@@228 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@228 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 Int) ($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@82) (< ($generated@@541 $generated@@547) ($generated@@541 ($generated@@80 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@80 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@158) (= (type $generated@@549) $generated@@69)) (= (type $generated@@550) $generated@@69)) ($generated@@229 $generated@@548 ($generated@@412 $generated@@549 $generated@@550))) (and (= ($generated@@297 ($generated@@347 ($generated@@310 $generated@@158 $generated@@158) $generated@@548)) $generated@@548) ($generated@@146 ($generated@@347 ($generated@@310 $generated@@158 $generated@@158) $generated@@548) ($generated@@412 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@229 $generated@@548 ($generated@@412 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@158) (= (type $generated@@552) $generated@@69)) (= (type $generated@@553) $generated@@69)) ($generated@@229 $generated@@551 ($generated@@420 $generated@@552 $generated@@553))) (and (= ($generated@@297 ($generated@@347 ($generated@@328 $generated@@158 $generated@@158) $generated@@551)) $generated@@551) ($generated@@146 ($generated@@347 ($generated@@328 $generated@@158 $generated@@158) $generated@@551) ($generated@@420 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@229 $generated@@551 ($generated@@420 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@69) (= (type $generated@@555) $generated@@69)) (= (type $generated@@556) $generated@@158)) ($generated@@229 $generated@@556 ($generated@@149 $generated@@554 $generated@@555))) (and (= ($generated@@297 ($generated@@347 $generated@@82 $generated@@556)) $generated@@556) ($generated@@146 ($generated@@347 $generated@@82 $generated@@556) ($generated@@149 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@229 $generated@@556 ($generated@@149 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@557 T@U) ) (! (let (($generated@@558 (type $generated@@557)))
 (not ($generated@@0 ($generated@@89 ($generated@@428 $generated@@558) $generated@@557))))
 :pattern ( (let (($generated@@558 (type $generated@@557)))
($generated@@89 ($generated@@428 $generated@@558) $generated@@557)))
)))
(assert (forall (($generated@@560 T@U) ) (! (= (type ($generated@@559 $generated@@560)) $generated@@74)
 :pattern ( ($generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@69) (= (type $generated@@562) $generated@@69)) (and (= ($generated@@77 ($generated@@149 $generated@@561 $generated@@562)) $generated@@62) (= ($generated@@559 ($generated@@149 $generated@@561 $generated@@562)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (and (= (type $generated@@563) $generated@@82) (= (type $generated@@564) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@86 $generated@@564) (and ($generated@@243 $generated@@563) ($generated@@79 $generated@@563 $generated@@81 $generated@@564)))) ($generated@@79 ($generated@@8 ($generated@@244 $generated@@563)) $generated@@46 $generated@@564))
 :pattern ( ($generated@@79 ($generated@@8 ($generated@@244 $generated@@563)) $generated@@46 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@82) ($generated@@146 $generated@@565 $generated@@81)) (or (or ($generated@@265 $generated@@565) ($generated@@268 $generated@@565)) ($generated@@243 $generated@@565)))
 :pattern ( ($generated@@243 $generated@@565) ($generated@@146 $generated@@565 $generated@@81))
 :pattern ( ($generated@@268 $generated@@565) ($generated@@146 $generated@@565 $generated@@81))
 :pattern ( ($generated@@265 $generated@@565) ($generated@@146 $generated@@565 $generated@@81))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (= (type $generated@@566) $generated@@82) (= ($generated@@540 ($generated@@297 $generated@@566)) ($generated@@541 $generated@@566)))
 :pattern ( ($generated@@540 ($generated@@297 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@567) $generated@@158) ($generated@@229 $generated@@567 ($generated@@142 0))) (and (= ($generated@@297 ($generated@@347 $generated@@2 $generated@@567)) $generated@@567) ($generated@@146 ($generated@@347 ($generated@@83 $generated@@158 $generated@@4) $generated@@567) ($generated@@142 0))))
 :pattern ( ($generated@@229 $generated@@567 ($generated@@142 0)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@158) (= (type $generated@@569) $generated@@69)) ($generated@@229 $generated@@568 ($generated@@249 $generated@@569))) (and (= ($generated@@297 ($generated@@347 ($generated@@83 $generated@@158 $generated@@4) $generated@@568)) $generated@@568) ($generated@@146 ($generated@@347 ($generated@@83 $generated@@158 $generated@@4) $generated@@568) ($generated@@249 $generated@@569))))
 :pattern ( ($generated@@229 $generated@@568 ($generated@@249 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@158) (= (type $generated@@571) $generated@@69)) ($generated@@229 $generated@@570 ($generated@@254 $generated@@571))) (and (= ($generated@@297 ($generated@@347 ($generated@@83 $generated@@158 $generated@@4) $generated@@570)) $generated@@570) ($generated@@146 ($generated@@347 ($generated@@83 $generated@@158 $generated@@4) $generated@@570) ($generated@@254 $generated@@571))))
 :pattern ( ($generated@@229 $generated@@570 ($generated@@254 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@158) (= (type $generated@@573) $generated@@69)) ($generated@@229 $generated@@572 ($generated@@167 $generated@@573))) (and (= ($generated@@297 ($generated@@347 ($generated@@83 $generated@@158 $generated@@2) $generated@@572)) $generated@@572) ($generated@@146 ($generated@@347 ($generated@@83 $generated@@158 $generated@@2) $generated@@572) ($generated@@167 $generated@@573))))
 :pattern ( ($generated@@229 $generated@@572 ($generated@@167 $generated@@573)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@158) (= (type $generated@@575) $generated@@69)) ($generated@@229 $generated@@574 ($generated@@500 $generated@@575))) (and (= ($generated@@297 ($generated@@347 ($generated@@289 $generated@@158) $generated@@574)) $generated@@574) ($generated@@146 ($generated@@347 ($generated@@289 $generated@@158) $generated@@574) ($generated@@500 $generated@@575))))
 :pattern ( ($generated@@229 $generated@@574 ($generated@@500 $generated@@575)))
)))
(assert (= ($generated@@77 $generated@@81) $generated@@64))
(assert (= ($generated@@559 $generated@@81) $generated@@68))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ($generated@@578 T@U) ) (!  (=> (and (and (= (type $generated@@576) ($generated@@83 $generated@@158 $generated@@2)) (= (type $generated@@577) $generated@@69)) (= (type $generated@@578) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@79 $generated@@576 ($generated@@167 $generated@@577) $generated@@578) (forall (($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@579) $generated@@158) (< 0 ($generated ($generated@@89 $generated@@576 $generated@@579)))) ($generated@@271 $generated@@579 $generated@@577 $generated@@578))
 :pattern ( ($generated@@89 $generated@@576 $generated@@579))
))))
 :pattern ( ($generated@@79 $generated@@576 ($generated@@167 $generated@@577) $generated@@578))
)))
(assert (= $generated@@164 ($generated@@261 $generated@@164)))
(assert (= $generated@@166 ($generated@@261 $generated@@166)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ($generated@@582 T@U) ) (!  (=> (and (and (and (= (type $generated@@580) $generated@@82) (= (type $generated@@581) $generated@@69)) (= (type $generated@@582) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@86 $generated@@582) (and ($generated@@148 $generated@@580) (exists (($generated@@583 T@U) ) (!  (and (= (type $generated@@583) $generated@@69) ($generated@@79 $generated@@580 ($generated@@149 $generated@@581 $generated@@583) $generated@@582))
 :pattern ( ($generated@@79 $generated@@580 ($generated@@149 $generated@@581 $generated@@583) $generated@@582))
))))) ($generated@@271 ($generated@@156 $generated@@580) $generated@@581 $generated@@582))
 :pattern ( ($generated@@271 ($generated@@156 $generated@@580) $generated@@581 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ($generated@@586 T@U) ) (!  (=> (and (and (and (= (type $generated@@584) $generated@@82) (= (type $generated@@585) $generated@@69)) (= (type $generated@@586) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@86 $generated@@586) (and ($generated@@148 $generated@@584) (exists (($generated@@587 T@U) ) (!  (and (= (type $generated@@587) $generated@@69) ($generated@@79 $generated@@584 ($generated@@149 $generated@@587 $generated@@585) $generated@@586))
 :pattern ( ($generated@@79 $generated@@584 ($generated@@149 $generated@@587 $generated@@585) $generated@@586))
))))) ($generated@@271 ($generated@@157 $generated@@584) $generated@@585 $generated@@586))
 :pattern ( ($generated@@271 ($generated@@157 $generated@@584) $generated@@585 $generated@@586))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (and (= (type $generated@@588) $generated@@82) (= (type $generated@@589) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@86 $generated@@589) (and ($generated@@243 $generated@@588) ($generated@@79 $generated@@588 $generated@@81 $generated@@589)))) ($generated@@79 ($generated@@245 $generated@@588) $generated@@81 $generated@@589))
 :pattern ( ($generated@@79 ($generated@@245 $generated@@588) $generated@@81 $generated@@589))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (= (type $generated@@590) $generated@@158) (= (type $generated@@591) $generated@@158)) (= ($generated@@228 ($generated@@261 $generated@@590) ($generated@@261 $generated@@591)) ($generated@@261 ($generated@@228 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@228 ($generated@@261 $generated@@590) ($generated@@261 $generated@@591)))
)))
(assert (forall (($generated@@592 Int) ($generated@@593 T@U) ) (!  (=> (= (type $generated@@593) $generated@@82) (= ($generated@@80 ($generated@@259 $generated@@592) ($generated@@261 $generated@@593)) ($generated@@261 ($generated@@80 $generated@@592 $generated@@593))))
 :pattern ( ($generated@@80 ($generated@@259 $generated@@592) ($generated@@261 $generated@@593)))
)))
(assert (forall (($generated@@594 Int) ) (! (= ($generated@@297 ($generated@@8 ($generated@@259 $generated@@594))) ($generated@@261 ($generated@@297 ($generated@@8 $generated@@594))))
 :pattern ( ($generated@@297 ($generated@@8 ($generated@@259 $generated@@594))))
)))
(assert (forall (($generated@@595 T@U) ) (! (= ($generated@@297 ($generated@@261 $generated@@595)) ($generated@@261 ($generated@@297 $generated@@595)))
 :pattern ( ($generated@@297 ($generated@@261 $generated@@595)))
)))
(assert (forall (($generated@@596 Int) ($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@82) (= ($generated@@146 ($generated@@80 $generated@@596 $generated@@597) $generated@@81)  (and ($generated@@146 ($generated@@8 $generated@@596) $generated@@46) ($generated@@146 $generated@@597 $generated@@81))))
 :pattern ( ($generated@@146 ($generated@@80 $generated@@596 $generated@@597) $generated@@81))
)))
(assert (forall (($generated@@598 T@U) ) (! (let (($generated@@599 ($generated@@290 (type $generated@@598))))
 (=> (and (= (type $generated@@598) ($generated@@289 $generated@@599)) (= ($generated@@288 $generated@@598) 0)) (= $generated@@598 ($generated@@287 $generated@@599))))
 :pattern ( ($generated@@288 $generated@@598))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ) (! (let (($generated@@603 (type $generated@@601)))
 (=> (and (and (= (type $generated@@600) ($generated@@83 $generated@@603 $generated@@2)) (= (type $generated@@602) $generated@@2)) (<= 0 ($generated $generated@@602))) (= ($generated@@302 ($generated@@90 $generated@@600 $generated@@601 $generated@@602)) (+ (- ($generated@@302 $generated@@600) ($generated ($generated@@89 $generated@@600 $generated@@601))) ($generated $generated@@602)))))
 :pattern ( ($generated@@302 ($generated@@90 $generated@@600 $generated@@601 $generated@@602)))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@605) $generated@@2)) ($generated@@79 $generated@@605 $generated@@46 $generated@@604))
 :pattern ( ($generated@@79 $generated@@605 $generated@@46 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@607) $generated@@3)) ($generated@@79 $generated@@607 $generated@@47 $generated@@606))
 :pattern ( ($generated@@79 $generated@@607 $generated@@47 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@609) $generated@@4)) ($generated@@79 $generated@@609 $generated@@44 $generated@@608))
 :pattern ( ($generated@@79 $generated@@609 $generated@@44 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@611) $generated@@452)) ($generated@@79 $generated@@611 $generated@@45 $generated@@610))
 :pattern ( ($generated@@79 $generated@@611 $generated@@45 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@613) $generated@@158)) ($generated@@79 $generated@@613 $generated@@48 $generated@@612))
 :pattern ( ($generated@@79 $generated@@613 $generated@@48 $generated@@612))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@289 $generated@@158)) (= (type $generated@@615) $generated@@69)) (= ($generated@@146 $generated@@614 ($generated@@500 $generated@@615)) (forall (($generated@@616 Int) ) (!  (=> (and (<= 0 $generated@@616) (< $generated@@616 ($generated@@288 $generated@@614))) ($generated@@229 ($generated@@501 $generated@@614 $generated@@616) $generated@@615))
 :pattern ( ($generated@@501 $generated@@614 $generated@@616))
))))
 :pattern ( ($generated@@146 $generated@@614 ($generated@@500 $generated@@615)))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 Int) ) (!  (=> (= (type $generated@@618) ($generated@@289 $generated@@158)) (=> (and (<= 0 $generated@@619) (< $generated@@619 ($generated@@288 $generated@@618))) (< ($generated@@541 ($generated@@347 $generated@@82 ($generated@@501 $generated@@618 $generated@@619))) ($generated@@617 $generated@@618))))
 :pattern ( ($generated@@541 ($generated@@347 $generated@@82 ($generated@@501 $generated@@618 $generated@@619))))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (and (= (type $generated@@620) ($generated@@310 $generated@@158 $generated@@158)) (= (type $generated@@621) $generated@@69)) (= (type $generated@@622) $generated@@69)) ($generated@@146 $generated@@620 ($generated@@412 $generated@@621 $generated@@622))) (and (and ($generated@@146 ($generated@@308 $generated@@620) ($generated@@249 $generated@@621)) ($generated@@146 ($generated@@355 $generated@@620) ($generated@@249 $generated@@622))) ($generated@@146 ($generated@@386 $generated@@620) ($generated@@249 ($generated@@149 $generated@@621 $generated@@622)))))
 :pattern ( ($generated@@146 $generated@@620 ($generated@@412 $generated@@621 $generated@@622)))
)))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (and (= (type $generated@@623) ($generated@@328 $generated@@158 $generated@@158)) (= (type $generated@@624) $generated@@69)) (= (type $generated@@625) $generated@@69)) ($generated@@146 $generated@@623 ($generated@@420 $generated@@624 $generated@@625))) (and (and ($generated@@146 ($generated@@326 $generated@@623) ($generated@@254 $generated@@624)) ($generated@@146 ($generated@@366 $generated@@623) ($generated@@254 $generated@@625))) ($generated@@146 ($generated@@394 $generated@@623) ($generated@@254 ($generated@@149 $generated@@624 $generated@@625)))))
 :pattern ( ($generated@@146 $generated@@623 ($generated@@420 $generated@@624 $generated@@625)))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@2) ($generated@@146 $generated@@626 $generated@@46))
 :pattern ( ($generated@@146 $generated@@626 $generated@@46))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@3) ($generated@@146 $generated@@627 $generated@@47))
 :pattern ( ($generated@@146 $generated@@627 $generated@@47))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@4) ($generated@@146 $generated@@628 $generated@@44))
 :pattern ( ($generated@@146 $generated@@628 $generated@@44))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@452) ($generated@@146 $generated@@629 $generated@@45))
 :pattern ( ($generated@@146 $generated@@629 $generated@@45))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@158) ($generated@@146 $generated@@630 $generated@@48))
 :pattern ( ($generated@@146 $generated@@630 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@631 () Int)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 (T@U) Bool)
(declare-fun $generated@@638 () Int)
(assert  (and (and (and (and (= (type $generated@@632) $generated@@82) (= (type $generated@@633) ($generated@@174 $generated@@84 $generated@@4))) (= (type $generated@@634) $generated@@84)) (= (type $generated@@635) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@636) $generated@@82)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@639 true))
(let (($generated@@640 true))
(let (($generated@@641  (=> (and (= $generated@@631 ($generated@@259 1)) ($generated@@538 $generated@@632)) (and (=> (= (ControlFlow 0 4) 2) $generated@@640) (=> (= (ControlFlow 0 4) 3) $generated@@639)))))
(let (($generated@@642 true))
(let (($generated@@643  (=> (= $generated@@633 ($generated@@173 $generated@@634 $generated@@635 $generated@@60 false)) (=> (and (and ($generated@@146 $generated@@632 $generated@@81) ($generated@@79 $generated@@632 $generated@@81 $generated@@635)) (and (= $generated@@636 ($generated@@261 ($generated@@80 ($generated@@259 1) ($generated@@261 ($generated@@80 ($generated@@259 2) ($generated@@261 $generated@@164)))))) ($generated@@146 $generated@@636 $generated@@81))) (and (=> (= (ControlFlow 0 5) (- 0 8)) ($generated@@243 $generated@@636)) (=> ($generated@@243 $generated@@636) (=> (= ($generated@@80 $generated@@631 $generated@@632) $generated@@636) (and (=> (= (ControlFlow 0 5) (- 0 7)) (= $generated@@631 ($generated@@259 1))) (=> (= $generated@@631 ($generated@@259 1)) (=> ($generated@@538 $generated@@632) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@240 $generated@@632 ($generated@@80 ($generated@@259 2) ($generated@@261 $generated@@164)))) (=> ($generated@@240 $generated@@632 ($generated@@80 ($generated@@259 2) ($generated@@261 $generated@@164))) (and (=> (= (ControlFlow 0 5) 1) $generated@@642) (=> (= (ControlFlow 0 5) 4) $generated@@641))))))))))))))
(let (($generated@@644  (=> (and (and ($generated@@86 $generated@@635) ($generated@@637 $generated@@635)) (and (= 1 $generated@@638) (= (ControlFlow 0 9) 5))) $generated@@643)))
$generated@@644)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int T@U) T@U)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@142 (Int) T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) Bool)
(declare-fun $generated@@244 (T@U) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@268 (T@U) Bool)
(declare-fun $generated@@271 (T@U T@U T@U) Bool)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@309 (T@T T@T) T@U)
(declare-fun $generated@@310 (T@T T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@327 (T@T T@T) T@U)
(declare-fun $generated@@328 (T@T T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@347 (T@T T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@428 (T@T) T@U)
(declare-fun $generated@@452 () T@T)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@539 (T@U) Int)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@615 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@82) 11) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@93 $generated@@94)) 12))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@83 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@83 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@83 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@83 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@83 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@72 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@85) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@85)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@72 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ($generated@@138 T@U) ) (! (= (type ($generated@@80 $generated@@137 $generated@@138)) $generated@@82)
 :pattern ( ($generated@@80 $generated@@137 $generated@@138))
))) (= (type $generated@@81) $generated@@69)))
(assert (forall (($generated@@139 Int) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (= (type $generated@@140) $generated@@82) (= (type $generated@@141) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@86 $generated@@141)) (= ($generated@@79 ($generated@@80 $generated@@139 $generated@@140) $generated@@81 $generated@@141)  (and ($generated@@79 ($generated@@8 $generated@@139) $generated@@46 $generated@@141) ($generated@@79 $generated@@140 $generated@@81 $generated@@141))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@139 $generated@@140) $generated@@81 $generated@@141))
)))
(assert (forall (($generated@@143 Int) ) (! (= (type ($generated@@142 $generated@@143)) $generated@@69)
 :pattern ( ($generated@@142 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@79 $generated@@144 ($generated@@142 0) $generated@@145))
 :pattern ( ($generated@@79 $generated@@144 ($generated@@142 0) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@2) ($generated@@146 $generated@@147 ($generated@@142 0)))
 :pattern ( ($generated@@146 $generated@@147 ($generated@@142 0)))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@149 $generated@@150 $generated@@151)) $generated@@69)
 :pattern ( ($generated@@149 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@69) (= (type $generated@@153) $generated@@69)) (= (type $generated@@154) $generated@@82)) ($generated@@146 $generated@@154 ($generated@@149 $generated@@152 $generated@@153))) ($generated@@148 $generated@@154))
 :pattern ( ($generated@@148 $generated@@154) ($generated@@146 $generated@@154 ($generated@@149 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 15) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@82) (= (type $generated@@162) $generated@@82)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert  (and (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@73)
 :pattern ( ($generated@@163 $generated@@165))
)) (= (type $generated@@164) $generated@@82)))
(assert (= ($generated@@163 $generated@@164) $generated@@63))
(assert (= (type $generated@@166) $generated@@82))
(assert (= ($generated@@163 $generated@@166) $generated@@65))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@69)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@83 $generated@@158 $generated@@2)) (= (type $generated@@171) $generated@@69)) ($generated@@146 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@146 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@178 $generated@@179)) 16)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@174 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@176 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(let (($generated@@193 (type $generated@@189)))
(= (type ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@174 $generated@@193 $generated@@192))))
 :pattern ( ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@176 (type $generated@@194))))
 (=> (= (type $generated@@197) $generated@@198) (= ($generated@@172 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@195 $generated@@196) $generated@@197)))
 :weight 0
))) (and (and (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@172 ($generated@@177 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@172 ($generated@@177 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@172 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or true (= ($generated@@172 ($generated@@177 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@172 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@174 $generated@@84 $generated@@4))
 :pattern ( ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@72 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@84) (= (type $generated@@222) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@223) ($generated@@71 $generated@@4))) (= (type $generated@@225) $generated@@84)) (= (type $generated@@226) ($generated@@71 $generated@@227))) (= ($generated@@0 ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@82)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@69) (= (type $generated@@233) $generated@@69)) (= (type $generated@@234) $generated@@158)) (= (type $generated@@235) $generated@@158)) (= ($generated@@146 ($generated@@228 $generated@@234 $generated@@235) ($generated@@149 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@146 ($generated@@228 $generated@@234 $generated@@235) ($generated@@149 $generated@@232 $generated@@233)))
)))
(assert ($generated@@146 $generated@@164 $generated@@81))
(assert ($generated@@146 $generated@@166 $generated@@81))
(assert (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@83 $generated@@84 $generated@@85)) ($generated@@86 $generated@@236)) ($generated@@79 $generated@@164 $generated@@81 $generated@@236))
 :pattern ( ($generated@@79 $generated@@164 $generated@@81 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@83 $generated@@84 $generated@@85)) ($generated@@86 $generated@@237)) ($generated@@79 $generated@@166 $generated@@81 $generated@@237))
 :pattern ( ($generated@@79 $generated@@166 $generated@@81 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@82) (= (type $generated@@239) $generated@@82)) (= ($generated@@155 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@155 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@82) (= (type $generated@@242) $generated@@82)) (= ($generated@@240 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@240 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@82)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (= (type $generated@@247) $generated@@82) (= (type $generated@@248) $generated@@82)) (and ($generated@@243 $generated@@247) ($generated@@243 $generated@@248))) (= ($generated@@240 $generated@@247 $generated@@248)  (and (= ($generated@@244 $generated@@247) ($generated@@244 $generated@@248)) ($generated@@240 ($generated@@245 $generated@@247) ($generated@@245 $generated@@248)))))
 :pattern ( ($generated@@240 $generated@@247 $generated@@248) ($generated@@243 $generated@@247))
 :pattern ( ($generated@@240 $generated@@247 $generated@@248) ($generated@@243 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@69)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@83 $generated@@158 $generated@@4)) (= (type $generated@@252) $generated@@69)) (= ($generated@@146 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@158) ($generated@@0 ($generated@@89 $generated@@251 $generated@@253))) ($generated@@229 $generated@@253 $generated@@252))
 :pattern ( ($generated@@89 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@146 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@69)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@83 $generated@@158 $generated@@4)) (= (type $generated@@257) $generated@@69)) (= ($generated@@146 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@158) ($generated@@0 ($generated@@89 $generated@@256 $generated@@258))) ($generated@@229 $generated@@258 $generated@@257))
 :pattern ( ($generated@@89 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@146 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@82) (= (type $generated@@267) $generated@@82)) (and ($generated@@265 $generated@@266) ($generated@@265 $generated@@267))) (= ($generated@@240 $generated@@266 $generated@@267) true))
 :pattern ( ($generated@@240 $generated@@266 $generated@@267) ($generated@@265 $generated@@266))
 :pattern ( ($generated@@240 $generated@@266 $generated@@267) ($generated@@265 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (= (type $generated@@269) $generated@@82) (= (type $generated@@270) $generated@@82)) (and ($generated@@268 $generated@@269) ($generated@@268 $generated@@270))) (= ($generated@@240 $generated@@269 $generated@@270) true))
 :pattern ( ($generated@@240 $generated@@269 $generated@@270) ($generated@@268 $generated@@269))
 :pattern ( ($generated@@240 $generated@@269 $generated@@270) ($generated@@268 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) $generated@@69) (= (type $generated@@273) $generated@@69)) (= (type $generated@@274) $generated@@158)) (= (type $generated@@275) $generated@@158)) (= (type $generated@@276) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@86 $generated@@276)) (= ($generated@@79 ($generated@@228 $generated@@274 $generated@@275) ($generated@@149 $generated@@272 $generated@@273) $generated@@276)  (and ($generated@@271 $generated@@274 $generated@@272 $generated@@276) ($generated@@271 $generated@@275 $generated@@273 $generated@@276))))
 :pattern ( ($generated@@79 ($generated@@228 $generated@@274 $generated@@275) ($generated@@149 $generated@@272 $generated@@273) $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@82) (= ($generated@@148 $generated@@277) (= ($generated@@163 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@82) (= ($generated@@265 $generated@@278) (= ($generated@@163 $generated@@278) $generated@@63)))
 :pattern ( ($generated@@265 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@82) (= ($generated@@268 $generated@@279) (= ($generated@@163 $generated@@279) $generated@@65)))
 :pattern ( ($generated@@268 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@82) (= ($generated@@243 $generated@@280) (= ($generated@@163 $generated@@280) $generated@@66)))
 :pattern ( ($generated@@243 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@82) ($generated@@148 $generated@@281)) (exists (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (and (and (= (type $generated@@282) $generated@@158) (= (type $generated@@283) $generated@@158)) (= $generated@@281 ($generated@@228 $generated@@282 $generated@@283)))
 :no-pattern (type $generated@@282)
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
)))
 :pattern ( ($generated@@148 $generated@@281))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@82) ($generated@@243 $generated@@284)) (exists (($generated@@285 Int) ($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@82) (= $generated@@284 ($generated@@80 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@243 $generated@@284))
)))
(assert  (and (and (forall (($generated@@291 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@291)) 17)) (forall (($generated@@292 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@289 $generated@@292))
))) (forall (($generated@@293 T@T) ) (! (= (type ($generated@@287 $generated@@293)) ($generated@@289 $generated@@293))
 :pattern ( ($generated@@287 $generated@@293))
))))
(assert (forall (($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@294)) 0)
 :pattern ( ($generated@@287 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@82) ($generated@@265 $generated@@295)) (= $generated@@295 $generated@@164))
 :pattern ( ($generated@@265 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@82) ($generated@@268 $generated@@296)) (= $generated@@296 $generated@@166))
 :pattern ( ($generated@@268 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@158)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@69) (= (type $generated@@301) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@271 ($generated@@297 $generated@@299) $generated@@300 $generated@@301) ($generated@@79 $generated@@299 $generated@@300 $generated@@301)))
 :pattern ( ($generated@@271 ($generated@@297 $generated@@299) $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@304 T@T) ) (! (= (type ($generated@@303 $generated@@304)) ($generated@@83 $generated@@304 $generated@@2))
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@87 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@83 $generated@@306 $generated@@2)) (and (= (= ($generated@@302 $generated@@305) 0) (= $generated@@305 ($generated@@303 $generated@@306))) (=> (not (= ($generated@@302 $generated@@305) 0)) (exists (($generated@@307 T@U) ) (!  (and (= (type $generated@@307) $generated@@306) (< 0 ($generated ($generated@@89 $generated@@305 $generated@@307))))
 :no-pattern (type $generated@@307)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
))))))
 :pattern ( ($generated@@302 $generated@@305))
)))
(assert  (and (and (and (and (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (= ($generated@@1 ($generated@@310 $generated@@313 $generated@@314)) 18)) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@311 ($generated@@310 $generated@@315 $generated@@316)) $generated@@315)
 :pattern ( ($generated@@310 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@312 ($generated@@310 $generated@@317 $generated@@318)) $generated@@318)
 :pattern ( ($generated@@310 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@311 (type $generated@@319))))
(= (type ($generated@@308 $generated@@319)) ($generated@@83 $generated@@320 $generated@@4)))
 :pattern ( ($generated@@308 $generated@@319))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= (type ($generated@@309 $generated@@321 $generated@@322)) ($generated@@310 $generated@@321 $generated@@322))
 :pattern ( ($generated@@309 $generated@@321 $generated@@322))
))))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@T) ) (! (let (($generated@@325 (type $generated@@323)))
 (not ($generated@@0 ($generated@@89 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323))))
 :pattern ( (let (($generated@@325 (type $generated@@323)))
($generated@@89 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323)))
)))
(assert  (and (and (and (and (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (= ($generated@@1 ($generated@@328 $generated@@331 $generated@@332)) 19)) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@329 ($generated@@328 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@328 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@330 ($generated@@328 $generated@@335 $generated@@336)) $generated@@336)
 :pattern ( ($generated@@328 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@329 (type $generated@@337))))
(= (type ($generated@@326 $generated@@337)) ($generated@@83 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@337))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= (type ($generated@@327 $generated@@339 $generated@@340)) ($generated@@328 $generated@@339 $generated@@340))
 :pattern ( ($generated@@327 $generated@@339 $generated@@340))
))))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@T) ) (! (let (($generated@@343 (type $generated@@341)))
 (not ($generated@@0 ($generated@@89 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341))))
 :pattern ( (let (($generated@@343 (type $generated@@341)))
($generated@@89 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341)))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@87 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@83 $generated@@345 $generated@@2)) (= ($generated@@168 $generated@@344) (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@345) (and (<= 0 ($generated ($generated@@89 $generated@@344 $generated@@346))) (<= ($generated ($generated@@89 $generated@@344 $generated@@346)) ($generated@@302 $generated@@344))))
 :pattern ( ($generated@@89 $generated@@344 $generated@@346))
)))))
 :pattern ( ($generated@@168 $generated@@344))
)))
(assert (forall (($generated@@348 T@T) ($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@348 $generated@@349)) $generated@@348)
 :pattern ( ($generated@@347 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@158) ($generated@@229 $generated@@350 $generated@@81)) (and (= ($generated@@297 ($generated@@347 $generated@@82 $generated@@350)) $generated@@350) ($generated@@146 ($generated@@347 $generated@@82 $generated@@350) $generated@@81)))
 :pattern ( ($generated@@229 $generated@@350 $generated@@81))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@312 (type $generated@@351))))
(let (($generated@@353 ($generated@@311 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@310 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@309 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@89 ($generated@@308 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@308 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@312 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@83 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@312 (type $generated@@358))))
(let (($generated@@360 ($generated@@311 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@310 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@309 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@89 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@330 (type $generated@@362))))
(let (($generated@@364 ($generated@@329 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@328 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@327 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@89 ($generated@@326 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@326 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@330 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@83 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@330 (type $generated@@369))))
(let (($generated@@371 ($generated@@329 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@328 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@327 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@89 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@83 $generated@@158 $generated@@2)) (= (type $generated@@374) $generated@@69)) (= ($generated@@146 $generated@@373 ($generated@@167 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@158) (< 0 ($generated ($generated@@89 $generated@@373 $generated@@375)))) ($generated@@229 $generated@@375 $generated@@374))
 :pattern ( ($generated@@89 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@146 $generated@@373 ($generated@@167 $generated@@374)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@83 $generated@@158 $generated@@4)) (= (type $generated@@377) $generated@@69)) (= (type $generated@@378) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@79 $generated@@376 ($generated@@249 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@158) ($generated@@0 ($generated@@89 $generated@@376 $generated@@379))) ($generated@@271 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@89 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@79 $generated@@376 ($generated@@249 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@83 $generated@@158 $generated@@4)) (= (type $generated@@381) $generated@@69)) (= (type $generated@@382) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@79 $generated@@380 ($generated@@254 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@158) ($generated@@0 ($generated@@89 $generated@@380 $generated@@383))) ($generated@@271 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@89 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@79 $generated@@380 ($generated@@254 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@89 ($generated@@303 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@89 ($generated@@303 $generated@@385) $generated@@384)))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@83 $generated@@158 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@312 (type $generated@@389))))
(let (($generated@@391 ($generated@@311 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@83 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@310 $generated@@158 $generated@@158)) (= (type $generated@@393) $generated@@158)) (= ($generated@@0 ($generated@@89 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@89 ($generated@@308 $generated@@392) ($generated@@156 ($generated@@347 $generated@@82 $generated@@393)))) (= ($generated@@89 ($generated@@387 $generated@@392) ($generated@@156 ($generated@@347 $generated@@82 $generated@@393))) ($generated@@157 ($generated@@347 $generated@@82 $generated@@393))))))
 :pattern ( ($generated@@89 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@83 $generated@@158 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@330 (type $generated@@397))))
(let (($generated@@399 ($generated@@329 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@83 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@328 $generated@@158 $generated@@158)) (= (type $generated@@401) $generated@@158)) (= ($generated@@0 ($generated@@89 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@89 ($generated@@326 $generated@@400) ($generated@@156 ($generated@@347 $generated@@82 $generated@@401)))) (= ($generated@@89 ($generated@@395 $generated@@400) ($generated@@156 ($generated@@347 $generated@@82 $generated@@401))) ($generated@@157 ($generated@@347 $generated@@82 $generated@@401))))))
 :pattern ( ($generated@@89 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@311 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@310 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@89 ($generated@@355 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@89 ($generated@@308 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@89 ($generated@@387 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@89 ($generated@@308 $generated@@402) $generated@@406))
 :pattern ( ($generated@@89 ($generated@@387 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@89 ($generated@@355 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@329 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@328 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@89 ($generated@@366 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@89 ($generated@@326 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@89 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@89 ($generated@@326 $generated@@407) $generated@@411))
 :pattern ( ($generated@@89 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@89 ($generated@@366 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@69)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@310 $generated@@158 $generated@@158)) (= (type $generated@@416) $generated@@69)) (= (type $generated@@417) $generated@@69)) (= (type $generated@@418) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@79 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@158) ($generated@@0 ($generated@@89 ($generated@@308 $generated@@415) $generated@@419))) (and ($generated@@271 ($generated@@89 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@271 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@89 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@89 ($generated@@308 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@79 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@69)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@328 $generated@@158 $generated@@158)) (= (type $generated@@424) $generated@@69)) (= (type $generated@@425) $generated@@69)) (= (type $generated@@426) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@79 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@158) ($generated@@0 ($generated@@89 ($generated@@326 $generated@@423) $generated@@427))) (and ($generated@@271 ($generated@@89 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@271 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@89 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@89 ($generated@@326 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@79 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@429 T@T) ) (! (= (type ($generated@@428 $generated@@429)) ($generated@@83 $generated@@429 $generated@@4))
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@330 (type $generated@@430))))
(let (($generated@@432 ($generated@@329 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@328 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@327 $generated@@432 $generated@@431)) (= ($generated@@326 $generated@@430) ($generated@@428 $generated@@432))))))
 :pattern ( ($generated@@326 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@330 (type $generated@@433))))
(let (($generated@@435 ($generated@@329 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@328 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@327 $generated@@435 $generated@@434)) (= ($generated@@366 $generated@@433) ($generated@@428 $generated@@434))))))
 :pattern ( ($generated@@366 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@330 (type $generated@@436))))
(let (($generated@@438 ($generated@@329 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@328 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@327 $generated@@438 $generated@@437)) (= ($generated@@394 $generated@@436) ($generated@@428 $generated@@158))))))
 :pattern ( ($generated@@394 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@312 (type $generated@@439))))
(let (($generated@@441 ($generated@@311 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@310 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@309 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@158) (= (type $generated@@443) $generated@@158)) ($generated@@0 ($generated@@89 ($generated@@386 $generated@@439) ($generated@@297 ($generated@@228 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@386 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@330 (type $generated@@444))))
(let (($generated@@446 ($generated@@329 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@328 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@327 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@158) (= (type $generated@@448) $generated@@158)) ($generated@@0 ($generated@@89 ($generated@@394 $generated@@444) ($generated@@297 ($generated@@228 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@394 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@158) ($generated@@229 $generated@@449 $generated@@46)) (and (= ($generated@@297 ($generated@@347 $generated@@2 $generated@@449)) $generated@@449) ($generated@@146 ($generated@@347 $generated@@2 $generated@@449) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@449 $generated@@46))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@158) ($generated@@229 $generated@@450 $generated@@47)) (and (= ($generated@@297 ($generated@@347 $generated@@3 $generated@@450)) $generated@@450) ($generated@@146 ($generated@@347 $generated@@3 $generated@@450) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@450 $generated@@47))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@158) ($generated@@229 $generated@@451 $generated@@44)) (and (= ($generated@@297 ($generated@@347 $generated@@4 $generated@@451)) $generated@@451) ($generated@@146 ($generated@@347 $generated@@4 $generated@@451) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@451 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@452) 20))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@158) ($generated@@229 $generated@@453 $generated@@45)) (and (= ($generated@@297 ($generated@@347 $generated@@452 $generated@@453)) $generated@@453) ($generated@@146 ($generated@@347 $generated@@452 $generated@@453) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@453 $generated@@45))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (= (type $generated@@455) $generated@@69) (= ($generated@@229 ($generated@@297 $generated@@454) $generated@@455) ($generated@@146 $generated@@454 $generated@@455)))
 :pattern ( ($generated@@229 ($generated@@297 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@87 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@83 $generated@@457 $generated@@2)) (<= 0 ($generated@@302 $generated@@456))))
 :pattern ( ($generated@@302 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@290 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@289 $generated@@459)) (<= 0 ($generated@@288 $generated@@458))))
 :pattern ( ($generated@@288 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@69)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@69) (= (type $generated@@463) $generated@@69)) (= ($generated@@460 ($generated@@412 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@412 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@69)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@69) (= (type $generated@@467) $generated@@69)) (= ($generated@@464 ($generated@@412 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@412 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@69) (= (type $generated@@469) $generated@@69)) (= ($generated@@77 ($generated@@412 $generated@@468 $generated@@469)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@69)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@69) (= (type $generated@@473) $generated@@69)) (= ($generated@@470 ($generated@@420 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@420 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@69)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@69) (= (type $generated@@477) $generated@@69)) (= ($generated@@474 ($generated@@420 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@420 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@69) (= (type $generated@@479) $generated@@69)) (= ($generated@@77 ($generated@@420 $generated@@478 $generated@@479)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@158) (= (type $generated@@481) $generated@@158)) (= ($generated@@163 ($generated@@228 $generated@@480 $generated@@481)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@69)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@69) (= (type $generated@@485) $generated@@69)) (= ($generated@@482 ($generated@@149 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@149 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@69)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@69) (= (type $generated@@489) $generated@@69)) (= ($generated@@486 ($generated@@149 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@149 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@158) (= (type $generated@@491) $generated@@158)) (= ($generated@@156 ($generated@@228 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@228 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@158) (= (type $generated@@493) $generated@@158)) (= ($generated@@157 ($generated@@228 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@228 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 Int) ($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@82) (= ($generated@@163 ($generated@@80 $generated@@494 $generated@@495)) $generated@@66))
 :pattern ( ($generated@@80 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 Int) ($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@82) (= ($generated@@244 ($generated@@80 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@80 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 Int) ($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@82) (= ($generated@@245 ($generated@@80 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@80 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@69)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@290 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@289 $generated@@158)) (= (type $generated@@507) $generated@@69)) (= (type $generated@@508) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@79 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@288 $generated@@506))) ($generated@@271 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@79 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@142 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@142 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@69)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@69) (= ($generated@@512 ($generated@@249 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@249 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@69) (= ($generated@@77 ($generated@@249 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@69)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@69) (= ($generated@@516 ($generated@@254 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@254 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@69) (= ($generated@@77 ($generated@@254 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@69)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@69) (= ($generated@@520 ($generated@@167 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@167 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@69) (= ($generated@@77 ($generated@@167 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@69)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@69) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@69) (= ($generated@@77 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
(= ($generated@@347 $generated@@529 ($generated@@297 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@297 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@310 $generated@@158 $generated@@158)) (= (type $generated@@531) $generated@@69)) (= (type $generated@@532) $generated@@69)) (= ($generated@@146 $generated@@530 ($generated@@412 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@158) ($generated@@0 ($generated@@89 ($generated@@308 $generated@@530) $generated@@533))) (and ($generated@@229 ($generated@@89 ($generated@@387 $generated@@530) $generated@@533) $generated@@532) ($generated@@229 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@89 ($generated@@387 $generated@@530) $generated@@533))
 :pattern ( ($generated@@89 ($generated@@308 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@146 $generated@@530 ($generated@@412 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@328 $generated@@158 $generated@@158)) (= (type $generated@@535) $generated@@69)) (= (type $generated@@536) $generated@@69)) (= ($generated@@146 $generated@@534 ($generated@@420 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@158) ($generated@@0 ($generated@@89 ($generated@@326 $generated@@534) $generated@@537))) (and ($generated@@229 ($generated@@89 ($generated@@395 $generated@@534) $generated@@537) $generated@@536) ($generated@@229 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@89 ($generated@@395 $generated@@534) $generated@@537))
 :pattern ( ($generated@@89 ($generated@@326 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@146 $generated@@534 ($generated@@420 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@158) (= (type $generated@@541) $generated@@158)) (< ($generated@@538 $generated@@540) ($generated@@539 ($generated@@228 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@228 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@158) (= (type $generated@@543) $generated@@158)) (< ($generated@@538 $generated@@543) ($generated@@539 ($generated@@228 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@228 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 Int) ($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@82) (< ($generated@@539 $generated@@545) ($generated@@539 ($generated@@80 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@80 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@158) (= (type $generated@@547) $generated@@69)) (= (type $generated@@548) $generated@@69)) ($generated@@229 $generated@@546 ($generated@@412 $generated@@547 $generated@@548))) (and (= ($generated@@297 ($generated@@347 ($generated@@310 $generated@@158 $generated@@158) $generated@@546)) $generated@@546) ($generated@@146 ($generated@@347 ($generated@@310 $generated@@158 $generated@@158) $generated@@546) ($generated@@412 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@229 $generated@@546 ($generated@@412 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@158) (= (type $generated@@550) $generated@@69)) (= (type $generated@@551) $generated@@69)) ($generated@@229 $generated@@549 ($generated@@420 $generated@@550 $generated@@551))) (and (= ($generated@@297 ($generated@@347 ($generated@@328 $generated@@158 $generated@@158) $generated@@549)) $generated@@549) ($generated@@146 ($generated@@347 ($generated@@328 $generated@@158 $generated@@158) $generated@@549) ($generated@@420 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@229 $generated@@549 ($generated@@420 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@69) (= (type $generated@@553) $generated@@69)) (= (type $generated@@554) $generated@@158)) ($generated@@229 $generated@@554 ($generated@@149 $generated@@552 $generated@@553))) (and (= ($generated@@297 ($generated@@347 $generated@@82 $generated@@554)) $generated@@554) ($generated@@146 ($generated@@347 $generated@@82 $generated@@554) ($generated@@149 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@229 $generated@@554 ($generated@@149 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
 (not ($generated@@0 ($generated@@89 ($generated@@428 $generated@@556) $generated@@555))))
 :pattern ( (let (($generated@@556 (type $generated@@555)))
($generated@@89 ($generated@@428 $generated@@556) $generated@@555)))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@74)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@69) (= (type $generated@@560) $generated@@69)) (and (= ($generated@@77 ($generated@@149 $generated@@559 $generated@@560)) $generated@@62) (= ($generated@@557 ($generated@@149 $generated@@559 $generated@@560)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@82) (= (type $generated@@562) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@86 $generated@@562) (and ($generated@@243 $generated@@561) ($generated@@79 $generated@@561 $generated@@81 $generated@@562)))) ($generated@@79 ($generated@@8 ($generated@@244 $generated@@561)) $generated@@46 $generated@@562))
 :pattern ( ($generated@@79 ($generated@@8 ($generated@@244 $generated@@561)) $generated@@46 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@82) ($generated@@146 $generated@@563 $generated@@81)) (or (or ($generated@@265 $generated@@563) ($generated@@268 $generated@@563)) ($generated@@243 $generated@@563)))
 :pattern ( ($generated@@243 $generated@@563) ($generated@@146 $generated@@563 $generated@@81))
 :pattern ( ($generated@@268 $generated@@563) ($generated@@146 $generated@@563 $generated@@81))
 :pattern ( ($generated@@265 $generated@@563) ($generated@@146 $generated@@563 $generated@@81))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@82) (= ($generated@@538 ($generated@@297 $generated@@564)) ($generated@@539 $generated@@564)))
 :pattern ( ($generated@@538 ($generated@@297 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@158) ($generated@@229 $generated@@565 ($generated@@142 0))) (and (= ($generated@@297 ($generated@@347 $generated@@2 $generated@@565)) $generated@@565) ($generated@@146 ($generated@@347 ($generated@@83 $generated@@158 $generated@@4) $generated@@565) ($generated@@142 0))))
 :pattern ( ($generated@@229 $generated@@565 ($generated@@142 0)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@158) (= (type $generated@@567) $generated@@69)) ($generated@@229 $generated@@566 ($generated@@249 $generated@@567))) (and (= ($generated@@297 ($generated@@347 ($generated@@83 $generated@@158 $generated@@4) $generated@@566)) $generated@@566) ($generated@@146 ($generated@@347 ($generated@@83 $generated@@158 $generated@@4) $generated@@566) ($generated@@249 $generated@@567))))
 :pattern ( ($generated@@229 $generated@@566 ($generated@@249 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@158) (= (type $generated@@569) $generated@@69)) ($generated@@229 $generated@@568 ($generated@@254 $generated@@569))) (and (= ($generated@@297 ($generated@@347 ($generated@@83 $generated@@158 $generated@@4) $generated@@568)) $generated@@568) ($generated@@146 ($generated@@347 ($generated@@83 $generated@@158 $generated@@4) $generated@@568) ($generated@@254 $generated@@569))))
 :pattern ( ($generated@@229 $generated@@568 ($generated@@254 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@158) (= (type $generated@@571) $generated@@69)) ($generated@@229 $generated@@570 ($generated@@167 $generated@@571))) (and (= ($generated@@297 ($generated@@347 ($generated@@83 $generated@@158 $generated@@2) $generated@@570)) $generated@@570) ($generated@@146 ($generated@@347 ($generated@@83 $generated@@158 $generated@@2) $generated@@570) ($generated@@167 $generated@@571))))
 :pattern ( ($generated@@229 $generated@@570 ($generated@@167 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@158) (= (type $generated@@573) $generated@@69)) ($generated@@229 $generated@@572 ($generated@@500 $generated@@573))) (and (= ($generated@@297 ($generated@@347 ($generated@@289 $generated@@158) $generated@@572)) $generated@@572) ($generated@@146 ($generated@@347 ($generated@@289 $generated@@158) $generated@@572) ($generated@@500 $generated@@573))))
 :pattern ( ($generated@@229 $generated@@572 ($generated@@500 $generated@@573)))
)))
(assert (= ($generated@@77 $generated@@81) $generated@@64))
(assert (= ($generated@@557 $generated@@81) $generated@@68))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@83 $generated@@158 $generated@@2)) (= (type $generated@@575) $generated@@69)) (= (type $generated@@576) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@79 $generated@@574 ($generated@@167 $generated@@575) $generated@@576) (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@158) (< 0 ($generated ($generated@@89 $generated@@574 $generated@@577)))) ($generated@@271 $generated@@577 $generated@@575 $generated@@576))
 :pattern ( ($generated@@89 $generated@@574 $generated@@577))
))))
 :pattern ( ($generated@@79 $generated@@574 ($generated@@167 $generated@@575) $generated@@576))
)))
(assert (= $generated@@164 ($generated@@261 $generated@@164)))
(assert (= $generated@@166 ($generated@@261 $generated@@166)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@82) (= (type $generated@@579) $generated@@69)) (= (type $generated@@580) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@86 $generated@@580) (and ($generated@@148 $generated@@578) (exists (($generated@@581 T@U) ) (!  (and (= (type $generated@@581) $generated@@69) ($generated@@79 $generated@@578 ($generated@@149 $generated@@579 $generated@@581) $generated@@580))
 :pattern ( ($generated@@79 $generated@@578 ($generated@@149 $generated@@579 $generated@@581) $generated@@580))
))))) ($generated@@271 ($generated@@156 $generated@@578) $generated@@579 $generated@@580))
 :pattern ( ($generated@@271 ($generated@@156 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@82) (= (type $generated@@583) $generated@@69)) (= (type $generated@@584) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@86 $generated@@584) (and ($generated@@148 $generated@@582) (exists (($generated@@585 T@U) ) (!  (and (= (type $generated@@585) $generated@@69) ($generated@@79 $generated@@582 ($generated@@149 $generated@@585 $generated@@583) $generated@@584))
 :pattern ( ($generated@@79 $generated@@582 ($generated@@149 $generated@@585 $generated@@583) $generated@@584))
))))) ($generated@@271 ($generated@@157 $generated@@582) $generated@@583 $generated@@584))
 :pattern ( ($generated@@271 ($generated@@157 $generated@@582) $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@82) (= (type $generated@@587) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@86 $generated@@587) (and ($generated@@243 $generated@@586) ($generated@@79 $generated@@586 $generated@@81 $generated@@587)))) ($generated@@79 ($generated@@245 $generated@@586) $generated@@81 $generated@@587))
 :pattern ( ($generated@@79 ($generated@@245 $generated@@586) $generated@@81 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@158) (= (type $generated@@589) $generated@@158)) (= ($generated@@228 ($generated@@261 $generated@@588) ($generated@@261 $generated@@589)) ($generated@@261 ($generated@@228 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@228 ($generated@@261 $generated@@588) ($generated@@261 $generated@@589)))
)))
(assert (forall (($generated@@590 Int) ($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@82) (= ($generated@@80 ($generated@@259 $generated@@590) ($generated@@261 $generated@@591)) ($generated@@261 ($generated@@80 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@80 ($generated@@259 $generated@@590) ($generated@@261 $generated@@591)))
)))
(assert (forall (($generated@@592 Int) ) (! (= ($generated@@297 ($generated@@8 ($generated@@259 $generated@@592))) ($generated@@261 ($generated@@297 ($generated@@8 $generated@@592))))
 :pattern ( ($generated@@297 ($generated@@8 ($generated@@259 $generated@@592))))
)))
(assert (forall (($generated@@593 T@U) ) (! (= ($generated@@297 ($generated@@261 $generated@@593)) ($generated@@261 ($generated@@297 $generated@@593)))
 :pattern ( ($generated@@297 ($generated@@261 $generated@@593)))
)))
(assert (forall (($generated@@594 Int) ($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@82) (= ($generated@@146 ($generated@@80 $generated@@594 $generated@@595) $generated@@81)  (and ($generated@@146 ($generated@@8 $generated@@594) $generated@@46) ($generated@@146 $generated@@595 $generated@@81))))
 :pattern ( ($generated@@146 ($generated@@80 $generated@@594 $generated@@595) $generated@@81))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@290 (type $generated@@596))))
 (=> (and (= (type $generated@@596) ($generated@@289 $generated@@597)) (= ($generated@@288 $generated@@596) 0)) (= $generated@@596 ($generated@@287 $generated@@597))))
 :pattern ( ($generated@@288 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@599)))
 (=> (and (and (= (type $generated@@598) ($generated@@83 $generated@@601 $generated@@2)) (= (type $generated@@600) $generated@@2)) (<= 0 ($generated $generated@@600))) (= ($generated@@302 ($generated@@90 $generated@@598 $generated@@599 $generated@@600)) (+ (- ($generated@@302 $generated@@598) ($generated ($generated@@89 $generated@@598 $generated@@599))) ($generated $generated@@600)))))
 :pattern ( ($generated@@302 ($generated@@90 $generated@@598 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@603) $generated@@2)) ($generated@@79 $generated@@603 $generated@@46 $generated@@602))
 :pattern ( ($generated@@79 $generated@@603 $generated@@46 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@605) $generated@@3)) ($generated@@79 $generated@@605 $generated@@47 $generated@@604))
 :pattern ( ($generated@@79 $generated@@605 $generated@@47 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@607) $generated@@4)) ($generated@@79 $generated@@607 $generated@@44 $generated@@606))
 :pattern ( ($generated@@79 $generated@@607 $generated@@44 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@609) $generated@@452)) ($generated@@79 $generated@@609 $generated@@45 $generated@@608))
 :pattern ( ($generated@@79 $generated@@609 $generated@@45 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@611) $generated@@158)) ($generated@@79 $generated@@611 $generated@@48 $generated@@610))
 :pattern ( ($generated@@79 $generated@@611 $generated@@48 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@289 $generated@@158)) (= (type $generated@@613) $generated@@69)) (= ($generated@@146 $generated@@612 ($generated@@500 $generated@@613)) (forall (($generated@@614 Int) ) (!  (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@288 $generated@@612))) ($generated@@229 ($generated@@501 $generated@@612 $generated@@614) $generated@@613))
 :pattern ( ($generated@@501 $generated@@612 $generated@@614))
))))
 :pattern ( ($generated@@146 $generated@@612 ($generated@@500 $generated@@613)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 Int) ) (!  (=> (= (type $generated@@616) ($generated@@289 $generated@@158)) (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@288 $generated@@616))) (< ($generated@@539 ($generated@@347 $generated@@82 ($generated@@501 $generated@@616 $generated@@617))) ($generated@@615 $generated@@616))))
 :pattern ( ($generated@@539 ($generated@@347 $generated@@82 ($generated@@501 $generated@@616 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@310 $generated@@158 $generated@@158)) (= (type $generated@@619) $generated@@69)) (= (type $generated@@620) $generated@@69)) ($generated@@146 $generated@@618 ($generated@@412 $generated@@619 $generated@@620))) (and (and ($generated@@146 ($generated@@308 $generated@@618) ($generated@@249 $generated@@619)) ($generated@@146 ($generated@@355 $generated@@618) ($generated@@249 $generated@@620))) ($generated@@146 ($generated@@386 $generated@@618) ($generated@@249 ($generated@@149 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@146 $generated@@618 ($generated@@412 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) ($generated@@328 $generated@@158 $generated@@158)) (= (type $generated@@622) $generated@@69)) (= (type $generated@@623) $generated@@69)) ($generated@@146 $generated@@621 ($generated@@420 $generated@@622 $generated@@623))) (and (and ($generated@@146 ($generated@@326 $generated@@621) ($generated@@254 $generated@@622)) ($generated@@146 ($generated@@366 $generated@@621) ($generated@@254 $generated@@623))) ($generated@@146 ($generated@@394 $generated@@621) ($generated@@254 ($generated@@149 $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@146 $generated@@621 ($generated@@420 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@2) ($generated@@146 $generated@@624 $generated@@46))
 :pattern ( ($generated@@146 $generated@@624 $generated@@46))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@3) ($generated@@146 $generated@@625 $generated@@47))
 :pattern ( ($generated@@146 $generated@@625 $generated@@47))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@4) ($generated@@146 $generated@@626 $generated@@44))
 :pattern ( ($generated@@146 $generated@@626 $generated@@44))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@452) ($generated@@146 $generated@@627 $generated@@45))
 :pattern ( ($generated@@146 $generated@@627 $generated@@45))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@158) ($generated@@146 $generated@@628 $generated@@48))
 :pattern ( ($generated@@146 $generated@@628 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 (T@U) Bool)
(declare-fun $generated@@635 () Int)
(assert  (and (and (and (= (type $generated@@630) ($generated@@174 $generated@@84 $generated@@4)) (= (type $generated@@631) $generated@@84)) (= (type $generated@@632) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@633) $generated@@82)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@636 true))
(let (($generated@@637 true))
(let (($generated@@638  (=> (= $generated@@629 ($generated@@259 1)) (and (=> (= (ControlFlow 0 4) 2) $generated@@637) (=> (= (ControlFlow 0 4) 3) $generated@@636)))))
(let (($generated@@639 true))
(let (($generated@@640  (=> (= $generated@@630 ($generated@@173 $generated@@631 $generated@@632 $generated@@60 false)) (=> (and (= $generated@@633 ($generated@@261 ($generated@@80 ($generated@@259 1) ($generated@@261 $generated@@164)))) ($generated@@146 $generated@@633 $generated@@81)) (and (=> (= (ControlFlow 0 5) (- 0 9)) ($generated@@243 $generated@@633)) (=> ($generated@@243 $generated@@633) (and (=> (= (ControlFlow 0 5) (- 0 8)) ($generated@@265 ($generated@@245 $generated@@633))) (=> ($generated@@265 ($generated@@245 $generated@@633)) (=> (= ($generated@@80 $generated@@629 ($generated@@261 $generated@@164)) $generated@@633) (and (=> (= (ControlFlow 0 5) (- 0 7)) (= $generated@@629 ($generated@@259 1))) (=> (= $generated@@629 ($generated@@259 1)) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@240 $generated@@164 $generated@@164)) (=> ($generated@@240 $generated@@164 $generated@@164) (and (=> (= (ControlFlow 0 5) 1) $generated@@639) (=> (= (ControlFlow 0 5) 4) $generated@@638)))))))))))))))
(let (($generated@@641  (=> (and (and ($generated@@86 $generated@@632) ($generated@@634 $generated@@632)) (and (= 1 $generated@@635) (= (ControlFlow 0 10) 5))) $generated@@640)))
$generated@@641)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int T@U) T@U)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U) T@U)
(declare-fun $generated@@142 (Int) T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) T@U)
(declare-fun $generated@@155 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@172 (T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(declare-fun $generated@@177 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U T@U) T@U)
(declare-fun $generated@@229 (T@U T@U) Bool)
(declare-fun $generated@@240 (T@U T@U) Bool)
(declare-fun $generated@@243 (T@U) Bool)
(declare-fun $generated@@244 (T@U) Int)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) T@U)
(declare-fun $generated@@254 (T@U) T@U)
(declare-fun $generated@@259 (Int) Int)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Bool)
(declare-fun $generated@@268 (T@U) Bool)
(declare-fun $generated@@271 (T@U T@U T@U) Bool)
(declare-fun $generated@@287 (T@T) T@U)
(declare-fun $generated@@288 (T@U) Int)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@297 (T@U) T@U)
(declare-fun $generated@@302 (T@U) Int)
(declare-fun $generated@@303 (T@T) T@U)
(declare-fun $generated@@308 (T@U) T@U)
(declare-fun $generated@@309 (T@T T@T) T@U)
(declare-fun $generated@@310 (T@T T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@326 (T@U) T@U)
(declare-fun $generated@@327 (T@T T@T) T@U)
(declare-fun $generated@@328 (T@T T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@347 (T@T T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@386 (T@U) T@U)
(declare-fun $generated@@387 (T@U) T@U)
(declare-fun $generated@@394 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@412 (T@U T@U) T@U)
(declare-fun $generated@@420 (T@U T@U) T@U)
(declare-fun $generated@@428 (T@T) T@U)
(declare-fun $generated@@452 () T@T)
(declare-fun $generated@@460 (T@U) T@U)
(declare-fun $generated@@464 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@539 (T@U) Int)
(declare-fun $generated@@557 (T@U) T@U)
(declare-fun $generated@@615 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@73)) (= (type $generated@@66) $generated@@73)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@82) 11) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@93 $generated@@94)) 12))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@87 ($generated@@83 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@83 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@88 ($generated@@83 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@83 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (let (($generated@@101 ($generated@@88 (type $generated@@99))))
(= (type ($generated@@89 $generated@@99 $generated@@100)) $generated@@101))
 :pattern ( ($generated@@89 $generated@@99 $generated@@100))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 (type $generated@@104)))
(let (($generated@@106 (type $generated@@103)))
(= (type ($generated@@90 $generated@@102 $generated@@103 $generated@@104)) ($generated@@83 $generated@@106 $generated@@105))))
 :pattern ( ($generated@@90 $generated@@102 $generated@@103 $generated@@104))
))) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (let (($generated@@110 ($generated@@88 (type $generated@@107))))
 (=> (= (type $generated@@109) $generated@@110) (= ($generated@@89 ($generated@@90 $generated@@107 $generated@@108 $generated@@109) $generated@@108) $generated@@109)))
 :weight 0
))) (and (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@113 $generated@@114) (= ($generated@@89 ($generated@@90 $generated@@112 $generated@@113 $generated@@111) $generated@@114) ($generated@@89 $generated@@112 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@89 $generated@@116 $generated@@118)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@72 (type $generated@@120))))
(= (type ($generated@@91 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@91 $generated@@119 $generated@@120))
))) (= ($generated@@1 $generated@@85) 14)) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= (type ($generated@@92 $generated@@122 $generated@@123 $generated@@124)) $generated@@85)
 :pattern ( ($generated@@92 $generated@@122 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (let (($generated@@128 ($generated@@72 (type $generated@@126))))
 (=> (= (type $generated@@127) $generated@@128) (= ($generated@@91 ($generated@@92 $generated@@125 $generated@@126 $generated@@127) $generated@@126) $generated@@127)))
 :weight 0
))) (and (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@91 ($generated@@92 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@91 $generated@@130 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or true (= ($generated@@91 ($generated@@92 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@91 $generated@@134 $generated@@136)))
 :weight 0
)))) (forall (($generated@@137 Int) ($generated@@138 T@U) ) (! (= (type ($generated@@80 $generated@@137 $generated@@138)) $generated@@82)
 :pattern ( ($generated@@80 $generated@@137 $generated@@138))
))) (= (type $generated@@81) $generated@@69)))
(assert (forall (($generated@@139 Int) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (and (= (type $generated@@140) $generated@@82) (= (type $generated@@141) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@86 $generated@@141)) (= ($generated@@79 ($generated@@80 $generated@@139 $generated@@140) $generated@@81 $generated@@141)  (and ($generated@@79 ($generated@@8 $generated@@139) $generated@@46 $generated@@141) ($generated@@79 $generated@@140 $generated@@81 $generated@@141))))
 :pattern ( ($generated@@79 ($generated@@80 $generated@@139 $generated@@140) $generated@@81 $generated@@141))
)))
(assert (forall (($generated@@143 Int) ) (! (= (type ($generated@@142 $generated@@143)) $generated@@69)
 :pattern ( ($generated@@142 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@2) (= (type $generated@@145) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@79 $generated@@144 ($generated@@142 0) $generated@@145))
 :pattern ( ($generated@@79 $generated@@144 ($generated@@142 0) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> (= (type $generated@@147) $generated@@2) ($generated@@146 $generated@@147 ($generated@@142 0)))
 :pattern ( ($generated@@146 $generated@@147 ($generated@@142 0)))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (type ($generated@@149 $generated@@150 $generated@@151)) $generated@@69)
 :pattern ( ($generated@@149 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (and (and (= (type $generated@@152) $generated@@69) (= (type $generated@@153) $generated@@69)) (= (type $generated@@154) $generated@@82)) ($generated@@146 $generated@@154 ($generated@@149 $generated@@152 $generated@@153))) ($generated@@148 $generated@@154))
 :pattern ( ($generated@@148 $generated@@154) ($generated@@146 $generated@@154 ($generated@@149 $generated@@152 $generated@@153)))
)))
(assert  (and (and (= ($generated@@1 $generated@@158) 15) (forall (($generated@@159 T@U) ) (! (= (type ($generated@@156 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@156 $generated@@159))
))) (forall (($generated@@160 T@U) ) (! (= (type ($generated@@157 $generated@@160)) $generated@@158)
 :pattern ( ($generated@@157 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and (and (= (type $generated@@161) $generated@@82) (= (type $generated@@162) $generated@@82)) true) (= ($generated@@155 $generated@@161 $generated@@162)  (and (= ($generated@@156 $generated@@161) ($generated@@156 $generated@@162)) (= ($generated@@157 $generated@@161) ($generated@@157 $generated@@162)))))
 :pattern ( ($generated@@155 $generated@@161 $generated@@162))
)))
(assert  (and (forall (($generated@@165 T@U) ) (! (= (type ($generated@@163 $generated@@165)) $generated@@73)
 :pattern ( ($generated@@163 $generated@@165))
)) (= (type $generated@@164) $generated@@82)))
(assert (= ($generated@@163 $generated@@164) $generated@@63))
(assert (= (type $generated@@166) $generated@@82))
(assert (= ($generated@@163 $generated@@166) $generated@@65))
(assert (forall (($generated@@169 T@U) ) (! (= (type ($generated@@167 $generated@@169)) $generated@@69)
 :pattern ( ($generated@@167 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and (= (type $generated@@170) ($generated@@83 $generated@@158 $generated@@2)) (= (type $generated@@171) $generated@@69)) ($generated@@146 $generated@@170 ($generated@@167 $generated@@171))) ($generated@@168 $generated@@170))
 :pattern ( ($generated@@146 $generated@@170 ($generated@@167 $generated@@171)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@1 ($generated@@174 $generated@@178 $generated@@179)) 16)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@175 ($generated@@174 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@174 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@176 ($generated@@174 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@174 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (let (($generated@@187 ($generated@@176 (type $generated@@184))))
(= (type ($generated@@172 $generated@@184 $generated@@185 $generated@@186)) $generated@@187))
 :pattern ( ($generated@@172 $generated@@184 $generated@@185 $generated@@186))
))) (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (let (($generated@@192 (type $generated@@191)))
(let (($generated@@193 (type $generated@@189)))
(= (type ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191)) ($generated@@174 $generated@@193 $generated@@192))))
 :pattern ( ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@191))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@176 (type $generated@@194))))
 (=> (= (type $generated@@197) $generated@@198) (= ($generated@@172 ($generated@@177 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@195 $generated@@196) $generated@@197)))
 :weight 0
))) (and (and (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@172 ($generated@@177 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@172 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@172 ($generated@@177 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@172 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
))) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or true (= ($generated@@172 ($generated@@177 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@172 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
)))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ) (! (= (type ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220)) ($generated@@174 $generated@@84 $generated@@4))
 :pattern ( ($generated@@173 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (let (($generated@@227 ($generated@@72 (type $generated@@226))))
 (=> (and (and (and (and (= (type $generated@@221) $generated@@84) (= (type $generated@@222) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@223) ($generated@@71 $generated@@4))) (= (type $generated@@225) $generated@@84)) (= (type $generated@@226) ($generated@@71 $generated@@227))) (= ($generated@@0 ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (not (= $generated@@225 $generated@@221)) ($generated@@0 ($generated@@91 ($generated@@89 $generated@@222 $generated@@225) $generated@@223))) $generated@@224))))
 :pattern ( ($generated@@172 ($generated@@173 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= (type ($generated@@228 $generated@@230 $generated@@231)) $generated@@82)
 :pattern ( ($generated@@228 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (and (and (= (type $generated@@232) $generated@@69) (= (type $generated@@233) $generated@@69)) (= (type $generated@@234) $generated@@158)) (= (type $generated@@235) $generated@@158)) (= ($generated@@146 ($generated@@228 $generated@@234 $generated@@235) ($generated@@149 $generated@@232 $generated@@233))  (and ($generated@@229 $generated@@234 $generated@@232) ($generated@@229 $generated@@235 $generated@@233))))
 :pattern ( ($generated@@146 ($generated@@228 $generated@@234 $generated@@235) ($generated@@149 $generated@@232 $generated@@233)))
)))
(assert ($generated@@146 $generated@@164 $generated@@81))
(assert ($generated@@146 $generated@@166 $generated@@81))
(assert (forall (($generated@@236 T@U) ) (!  (=> (and (= (type $generated@@236) ($generated@@83 $generated@@84 $generated@@85)) ($generated@@86 $generated@@236)) ($generated@@79 $generated@@164 $generated@@81 $generated@@236))
 :pattern ( ($generated@@79 $generated@@164 $generated@@81 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@83 $generated@@84 $generated@@85)) ($generated@@86 $generated@@237)) ($generated@@79 $generated@@166 $generated@@81 $generated@@237))
 :pattern ( ($generated@@79 $generated@@166 $generated@@81 $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@238) $generated@@82) (= (type $generated@@239) $generated@@82)) (= ($generated@@155 $generated@@238 $generated@@239) (= $generated@@238 $generated@@239)))
 :pattern ( ($generated@@155 $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and (= (type $generated@@241) $generated@@82) (= (type $generated@@242) $generated@@82)) (= ($generated@@240 $generated@@241 $generated@@242) (= $generated@@241 $generated@@242)))
 :pattern ( ($generated@@240 $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@246 T@U) ) (! (= (type ($generated@@245 $generated@@246)) $generated@@82)
 :pattern ( ($generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and (and (= (type $generated@@247) $generated@@82) (= (type $generated@@248) $generated@@82)) (and ($generated@@243 $generated@@247) ($generated@@243 $generated@@248))) (= ($generated@@240 $generated@@247 $generated@@248)  (and (= ($generated@@244 $generated@@247) ($generated@@244 $generated@@248)) ($generated@@240 ($generated@@245 $generated@@247) ($generated@@245 $generated@@248)))))
 :pattern ( ($generated@@240 $generated@@247 $generated@@248) ($generated@@243 $generated@@247))
 :pattern ( ($generated@@240 $generated@@247 $generated@@248) ($generated@@243 $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! (= (type ($generated@@249 $generated@@250)) $generated@@69)
 :pattern ( ($generated@@249 $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (= (type $generated@@251) ($generated@@83 $generated@@158 $generated@@4)) (= (type $generated@@252) $generated@@69)) (= ($generated@@146 $generated@@251 ($generated@@249 $generated@@252)) (forall (($generated@@253 T@U) ) (!  (=> (and (= (type $generated@@253) $generated@@158) ($generated@@0 ($generated@@89 $generated@@251 $generated@@253))) ($generated@@229 $generated@@253 $generated@@252))
 :pattern ( ($generated@@89 $generated@@251 $generated@@253))
))))
 :pattern ( ($generated@@146 $generated@@251 ($generated@@249 $generated@@252)))
)))
(assert (forall (($generated@@255 T@U) ) (! (= (type ($generated@@254 $generated@@255)) $generated@@69)
 :pattern ( ($generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) ($generated@@83 $generated@@158 $generated@@4)) (= (type $generated@@257) $generated@@69)) (= ($generated@@146 $generated@@256 ($generated@@254 $generated@@257)) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@158) ($generated@@0 ($generated@@89 $generated@@256 $generated@@258))) ($generated@@229 $generated@@258 $generated@@257))
 :pattern ( ($generated@@89 $generated@@256 $generated@@258))
))))
 :pattern ( ($generated@@146 $generated@@256 ($generated@@254 $generated@@257)))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@259 $generated@@260) $generated@@260)
 :pattern ( ($generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (let (($generated@@263 (type $generated@@262)))
(= (type ($generated@@261 $generated@@262)) $generated@@263))
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (= ($generated@@261 $generated@@264) $generated@@264)
 :pattern ( ($generated@@261 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> (and (and (= (type $generated@@266) $generated@@82) (= (type $generated@@267) $generated@@82)) (and ($generated@@265 $generated@@266) ($generated@@265 $generated@@267))) (= ($generated@@240 $generated@@266 $generated@@267) true))
 :pattern ( ($generated@@240 $generated@@266 $generated@@267) ($generated@@265 $generated@@266))
 :pattern ( ($generated@@240 $generated@@266 $generated@@267) ($generated@@265 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (= (type $generated@@269) $generated@@82) (= (type $generated@@270) $generated@@82)) (and ($generated@@268 $generated@@269) ($generated@@268 $generated@@270))) (= ($generated@@240 $generated@@269 $generated@@270) true))
 :pattern ( ($generated@@240 $generated@@269 $generated@@270) ($generated@@268 $generated@@269))
 :pattern ( ($generated@@240 $generated@@269 $generated@@270) ($generated@@268 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@272) $generated@@69) (= (type $generated@@273) $generated@@69)) (= (type $generated@@274) $generated@@158)) (= (type $generated@@275) $generated@@158)) (= (type $generated@@276) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@86 $generated@@276)) (= ($generated@@79 ($generated@@228 $generated@@274 $generated@@275) ($generated@@149 $generated@@272 $generated@@273) $generated@@276)  (and ($generated@@271 $generated@@274 $generated@@272 $generated@@276) ($generated@@271 $generated@@275 $generated@@273 $generated@@276))))
 :pattern ( ($generated@@79 ($generated@@228 $generated@@274 $generated@@275) ($generated@@149 $generated@@272 $generated@@273) $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@82) (= ($generated@@148 $generated@@277) (= ($generated@@163 $generated@@277) $generated@@61)))
 :pattern ( ($generated@@148 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (= (type $generated@@278) $generated@@82) (= ($generated@@265 $generated@@278) (= ($generated@@163 $generated@@278) $generated@@63)))
 :pattern ( ($generated@@265 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ) (!  (=> (= (type $generated@@279) $generated@@82) (= ($generated@@268 $generated@@279) (= ($generated@@163 $generated@@279) $generated@@65)))
 :pattern ( ($generated@@268 $generated@@279))
)))
(assert (forall (($generated@@280 T@U) ) (!  (=> (= (type $generated@@280) $generated@@82) (= ($generated@@243 $generated@@280) (= ($generated@@163 $generated@@280) $generated@@66)))
 :pattern ( ($generated@@243 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (and (= (type $generated@@281) $generated@@82) ($generated@@148 $generated@@281)) (exists (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (and (and (= (type $generated@@282) $generated@@158) (= (type $generated@@283) $generated@@158)) (= $generated@@281 ($generated@@228 $generated@@282 $generated@@283)))
 :no-pattern (type $generated@@282)
 :no-pattern (type $generated@@283)
 :no-pattern ($generated $generated@@282)
 :no-pattern ($generated@@0 $generated@@282)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
)))
 :pattern ( ($generated@@148 $generated@@281))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@284) $generated@@82) ($generated@@243 $generated@@284)) (exists (($generated@@285 Int) ($generated@@286 T@U) ) (!  (and (= (type $generated@@286) $generated@@82) (= $generated@@284 ($generated@@80 $generated@@285 $generated@@286)))
 :no-pattern (type $generated@@286)
 :no-pattern ($generated $generated@@286)
 :no-pattern ($generated@@0 $generated@@286)
)))
 :pattern ( ($generated@@243 $generated@@284))
)))
(assert  (and (and (forall (($generated@@291 T@T) ) (= ($generated@@1 ($generated@@289 $generated@@291)) 17)) (forall (($generated@@292 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@292)) $generated@@292)
 :pattern ( ($generated@@289 $generated@@292))
))) (forall (($generated@@293 T@T) ) (! (= (type ($generated@@287 $generated@@293)) ($generated@@289 $generated@@293))
 :pattern ( ($generated@@287 $generated@@293))
))))
(assert (forall (($generated@@294 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@294)) 0)
 :pattern ( ($generated@@287 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ) (!  (=> (and (= (type $generated@@295) $generated@@82) ($generated@@265 $generated@@295)) (= $generated@@295 $generated@@164))
 :pattern ( ($generated@@265 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@82) ($generated@@268 $generated@@296)) (= $generated@@296 $generated@@166))
 :pattern ( ($generated@@268 $generated@@296))
)))
(assert (forall (($generated@@298 T@U) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@158)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (= (type $generated@@300) $generated@@69) (= (type $generated@@301) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@271 ($generated@@297 $generated@@299) $generated@@300 $generated@@301) ($generated@@79 $generated@@299 $generated@@300 $generated@@301)))
 :pattern ( ($generated@@271 ($generated@@297 $generated@@299) $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@304 T@T) ) (! (= (type ($generated@@303 $generated@@304)) ($generated@@83 $generated@@304 $generated@@2))
 :pattern ( ($generated@@303 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ) (! (let (($generated@@306 ($generated@@87 (type $generated@@305))))
 (=> (= (type $generated@@305) ($generated@@83 $generated@@306 $generated@@2)) (and (= (= ($generated@@302 $generated@@305) 0) (= $generated@@305 ($generated@@303 $generated@@306))) (=> (not (= ($generated@@302 $generated@@305) 0)) (exists (($generated@@307 T@U) ) (!  (and (= (type $generated@@307) $generated@@306) (< 0 ($generated ($generated@@89 $generated@@305 $generated@@307))))
 :no-pattern (type $generated@@307)
 :no-pattern ($generated $generated@@307)
 :no-pattern ($generated@@0 $generated@@307)
))))))
 :pattern ( ($generated@@302 $generated@@305))
)))
(assert  (and (and (and (and (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (= ($generated@@1 ($generated@@310 $generated@@313 $generated@@314)) 18)) (forall (($generated@@315 T@T) ($generated@@316 T@T) ) (! (= ($generated@@311 ($generated@@310 $generated@@315 $generated@@316)) $generated@@315)
 :pattern ( ($generated@@310 $generated@@315 $generated@@316))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= ($generated@@312 ($generated@@310 $generated@@317 $generated@@318)) $generated@@318)
 :pattern ( ($generated@@310 $generated@@317 $generated@@318))
))) (forall (($generated@@319 T@U) ) (! (let (($generated@@320 ($generated@@311 (type $generated@@319))))
(= (type ($generated@@308 $generated@@319)) ($generated@@83 $generated@@320 $generated@@4)))
 :pattern ( ($generated@@308 $generated@@319))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= (type ($generated@@309 $generated@@321 $generated@@322)) ($generated@@310 $generated@@321 $generated@@322))
 :pattern ( ($generated@@309 $generated@@321 $generated@@322))
))))
(assert (forall (($generated@@323 T@U) ($generated@@324 T@T) ) (! (let (($generated@@325 (type $generated@@323)))
 (not ($generated@@0 ($generated@@89 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323))))
 :pattern ( (let (($generated@@325 (type $generated@@323)))
($generated@@89 ($generated@@308 ($generated@@309 $generated@@325 $generated@@324)) $generated@@323)))
)))
(assert  (and (and (and (and (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (= ($generated@@1 ($generated@@328 $generated@@331 $generated@@332)) 19)) (forall (($generated@@333 T@T) ($generated@@334 T@T) ) (! (= ($generated@@329 ($generated@@328 $generated@@333 $generated@@334)) $generated@@333)
 :pattern ( ($generated@@328 $generated@@333 $generated@@334))
))) (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (! (= ($generated@@330 ($generated@@328 $generated@@335 $generated@@336)) $generated@@336)
 :pattern ( ($generated@@328 $generated@@335 $generated@@336))
))) (forall (($generated@@337 T@U) ) (! (let (($generated@@338 ($generated@@329 (type $generated@@337))))
(= (type ($generated@@326 $generated@@337)) ($generated@@83 $generated@@338 $generated@@4)))
 :pattern ( ($generated@@326 $generated@@337))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= (type ($generated@@327 $generated@@339 $generated@@340)) ($generated@@328 $generated@@339 $generated@@340))
 :pattern ( ($generated@@327 $generated@@339 $generated@@340))
))))
(assert (forall (($generated@@341 T@U) ($generated@@342 T@T) ) (! (let (($generated@@343 (type $generated@@341)))
 (not ($generated@@0 ($generated@@89 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341))))
 :pattern ( (let (($generated@@343 (type $generated@@341)))
($generated@@89 ($generated@@326 ($generated@@327 $generated@@343 $generated@@342)) $generated@@341)))
)))
(assert (forall (($generated@@344 T@U) ) (! (let (($generated@@345 ($generated@@87 (type $generated@@344))))
 (=> (= (type $generated@@344) ($generated@@83 $generated@@345 $generated@@2)) (= ($generated@@168 $generated@@344) (forall (($generated@@346 T@U) ) (!  (=> (= (type $generated@@346) $generated@@345) (and (<= 0 ($generated ($generated@@89 $generated@@344 $generated@@346))) (<= ($generated ($generated@@89 $generated@@344 $generated@@346)) ($generated@@302 $generated@@344))))
 :pattern ( ($generated@@89 $generated@@344 $generated@@346))
)))))
 :pattern ( ($generated@@168 $generated@@344))
)))
(assert (forall (($generated@@348 T@T) ($generated@@349 T@U) ) (! (= (type ($generated@@347 $generated@@348 $generated@@349)) $generated@@348)
 :pattern ( ($generated@@347 $generated@@348 $generated@@349))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@158) ($generated@@229 $generated@@350 $generated@@81)) (and (= ($generated@@297 ($generated@@347 $generated@@82 $generated@@350)) $generated@@350) ($generated@@146 ($generated@@347 $generated@@82 $generated@@350) $generated@@81)))
 :pattern ( ($generated@@229 $generated@@350 $generated@@81))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@312 (type $generated@@351))))
(let (($generated@@353 ($generated@@311 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@310 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@309 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@89 ($generated@@308 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@308 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@312 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@83 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@312 (type $generated@@358))))
(let (($generated@@360 ($generated@@311 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@310 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@309 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@89 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@330 (type $generated@@362))))
(let (($generated@@364 ($generated@@329 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@328 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@327 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@89 ($generated@@326 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@326 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@330 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@83 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@330 (type $generated@@369))))
(let (($generated@@371 ($generated@@329 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@328 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@327 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@89 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@83 $generated@@158 $generated@@2)) (= (type $generated@@374) $generated@@69)) (= ($generated@@146 $generated@@373 ($generated@@167 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@158) (< 0 ($generated ($generated@@89 $generated@@373 $generated@@375)))) ($generated@@229 $generated@@375 $generated@@374))
 :pattern ( ($generated@@89 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@146 $generated@@373 ($generated@@167 $generated@@374)))
)))
(assert (forall (($generated@@376 T@U) ($generated@@377 T@U) ($generated@@378 T@U) ) (!  (=> (and (and (= (type $generated@@376) ($generated@@83 $generated@@158 $generated@@4)) (= (type $generated@@377) $generated@@69)) (= (type $generated@@378) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@79 $generated@@376 ($generated@@249 $generated@@377) $generated@@378) (forall (($generated@@379 T@U) ) (!  (=> (and (= (type $generated@@379) $generated@@158) ($generated@@0 ($generated@@89 $generated@@376 $generated@@379))) ($generated@@271 $generated@@379 $generated@@377 $generated@@378))
 :pattern ( ($generated@@89 $generated@@376 $generated@@379))
))))
 :pattern ( ($generated@@79 $generated@@376 ($generated@@249 $generated@@377) $generated@@378))
)))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ($generated@@382 T@U) ) (!  (=> (and (and (= (type $generated@@380) ($generated@@83 $generated@@158 $generated@@4)) (= (type $generated@@381) $generated@@69)) (= (type $generated@@382) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@79 $generated@@380 ($generated@@254 $generated@@381) $generated@@382) (forall (($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@383) $generated@@158) ($generated@@0 ($generated@@89 $generated@@380 $generated@@383))) ($generated@@271 $generated@@383 $generated@@381 $generated@@382))
 :pattern ( ($generated@@89 $generated@@380 $generated@@383))
))))
 :pattern ( ($generated@@79 $generated@@380 ($generated@@254 $generated@@381) $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 (type $generated@@384)))
(= ($generated ($generated@@89 ($generated@@303 $generated@@385) $generated@@384)) 0))
 :pattern ( (let (($generated@@385 (type $generated@@384)))
($generated@@89 ($generated@@303 $generated@@385) $generated@@384)))
)))
(assert  (and (forall (($generated@@388 T@U) ) (! (= (type ($generated@@386 $generated@@388)) ($generated@@83 $generated@@158 $generated@@4))
 :pattern ( ($generated@@386 $generated@@388))
)) (forall (($generated@@389 T@U) ) (! (let (($generated@@390 ($generated@@312 (type $generated@@389))))
(let (($generated@@391 ($generated@@311 (type $generated@@389))))
(= (type ($generated@@387 $generated@@389)) ($generated@@83 $generated@@391 $generated@@390))))
 :pattern ( ($generated@@387 $generated@@389))
))))
(assert (forall (($generated@@392 T@U) ($generated@@393 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@310 $generated@@158 $generated@@158)) (= (type $generated@@393) $generated@@158)) (= ($generated@@0 ($generated@@89 ($generated@@386 $generated@@392) $generated@@393))  (and ($generated@@0 ($generated@@89 ($generated@@308 $generated@@392) ($generated@@156 ($generated@@347 $generated@@82 $generated@@393)))) (= ($generated@@89 ($generated@@387 $generated@@392) ($generated@@156 ($generated@@347 $generated@@82 $generated@@393))) ($generated@@157 ($generated@@347 $generated@@82 $generated@@393))))))
 :pattern ( ($generated@@89 ($generated@@386 $generated@@392) $generated@@393))
)))
(assert  (and (forall (($generated@@396 T@U) ) (! (= (type ($generated@@394 $generated@@396)) ($generated@@83 $generated@@158 $generated@@4))
 :pattern ( ($generated@@394 $generated@@396))
)) (forall (($generated@@397 T@U) ) (! (let (($generated@@398 ($generated@@330 (type $generated@@397))))
(let (($generated@@399 ($generated@@329 (type $generated@@397))))
(= (type ($generated@@395 $generated@@397)) ($generated@@83 $generated@@399 $generated@@398))))
 :pattern ( ($generated@@395 $generated@@397))
))))
(assert (forall (($generated@@400 T@U) ($generated@@401 T@U) ) (!  (=> (and (= (type $generated@@400) ($generated@@328 $generated@@158 $generated@@158)) (= (type $generated@@401) $generated@@158)) (= ($generated@@0 ($generated@@89 ($generated@@394 $generated@@400) $generated@@401))  (and ($generated@@0 ($generated@@89 ($generated@@326 $generated@@400) ($generated@@156 ($generated@@347 $generated@@82 $generated@@401)))) (= ($generated@@89 ($generated@@395 $generated@@400) ($generated@@156 ($generated@@347 $generated@@82 $generated@@401))) ($generated@@157 ($generated@@347 $generated@@82 $generated@@401))))))
 :pattern ( ($generated@@89 ($generated@@394 $generated@@400) $generated@@401))
)))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (! (let (($generated@@404 (type $generated@@403)))
(let (($generated@@405 ($generated@@311 (type $generated@@402))))
 (=> (= (type $generated@@402) ($generated@@310 $generated@@405 $generated@@404)) (= ($generated@@0 ($generated@@89 ($generated@@355 $generated@@402) $generated@@403)) (exists (($generated@@406 T@U) ) (!  (and (= (type $generated@@406) $generated@@405) (and ($generated@@0 ($generated@@89 ($generated@@308 $generated@@402) $generated@@406)) (= $generated@@403 ($generated@@89 ($generated@@387 $generated@@402) $generated@@406))))
 :pattern ( ($generated@@89 ($generated@@308 $generated@@402) $generated@@406))
 :pattern ( ($generated@@89 ($generated@@387 $generated@@402) $generated@@406))
))))))
 :pattern ( ($generated@@89 ($generated@@355 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@407 T@U) ($generated@@408 T@U) ) (! (let (($generated@@409 (type $generated@@408)))
(let (($generated@@410 ($generated@@329 (type $generated@@407))))
 (=> (= (type $generated@@407) ($generated@@328 $generated@@410 $generated@@409)) (= ($generated@@0 ($generated@@89 ($generated@@366 $generated@@407) $generated@@408)) (exists (($generated@@411 T@U) ) (!  (and (= (type $generated@@411) $generated@@410) (and ($generated@@0 ($generated@@89 ($generated@@326 $generated@@407) $generated@@411)) (= $generated@@408 ($generated@@89 ($generated@@395 $generated@@407) $generated@@411))))
 :pattern ( ($generated@@89 ($generated@@326 $generated@@407) $generated@@411))
 :pattern ( ($generated@@89 ($generated@@395 $generated@@407) $generated@@411))
))))))
 :pattern ( ($generated@@89 ($generated@@366 $generated@@407) $generated@@408))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (= (type ($generated@@412 $generated@@413 $generated@@414)) $generated@@69)
 :pattern ( ($generated@@412 $generated@@413 $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ($generated@@417 T@U) ($generated@@418 T@U) ) (!  (=> (and (and (and (= (type $generated@@415) ($generated@@310 $generated@@158 $generated@@158)) (= (type $generated@@416) $generated@@69)) (= (type $generated@@417) $generated@@69)) (= (type $generated@@418) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@79 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418) (forall (($generated@@419 T@U) ) (!  (=> (and (= (type $generated@@419) $generated@@158) ($generated@@0 ($generated@@89 ($generated@@308 $generated@@415) $generated@@419))) (and ($generated@@271 ($generated@@89 ($generated@@387 $generated@@415) $generated@@419) $generated@@417 $generated@@418) ($generated@@271 $generated@@419 $generated@@416 $generated@@418)))
 :pattern ( ($generated@@89 ($generated@@387 $generated@@415) $generated@@419))
 :pattern ( ($generated@@89 ($generated@@308 $generated@@415) $generated@@419))
))))
 :pattern ( ($generated@@79 $generated@@415 ($generated@@412 $generated@@416 $generated@@417) $generated@@418))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ) (! (= (type ($generated@@420 $generated@@421 $generated@@422)) $generated@@69)
 :pattern ( ($generated@@420 $generated@@421 $generated@@422))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ) (!  (=> (and (and (and (= (type $generated@@423) ($generated@@328 $generated@@158 $generated@@158)) (= (type $generated@@424) $generated@@69)) (= (type $generated@@425) $generated@@69)) (= (type $generated@@426) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@79 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426) (forall (($generated@@427 T@U) ) (!  (=> (and (= (type $generated@@427) $generated@@158) ($generated@@0 ($generated@@89 ($generated@@326 $generated@@423) $generated@@427))) (and ($generated@@271 ($generated@@89 ($generated@@395 $generated@@423) $generated@@427) $generated@@425 $generated@@426) ($generated@@271 $generated@@427 $generated@@424 $generated@@426)))
 :pattern ( ($generated@@89 ($generated@@395 $generated@@423) $generated@@427))
 :pattern ( ($generated@@89 ($generated@@326 $generated@@423) $generated@@427))
))))
 :pattern ( ($generated@@79 $generated@@423 ($generated@@420 $generated@@424 $generated@@425) $generated@@426))
)))
(assert (forall (($generated@@429 T@T) ) (! (= (type ($generated@@428 $generated@@429)) ($generated@@83 $generated@@429 $generated@@4))
 :pattern ( ($generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ) (! (let (($generated@@431 ($generated@@330 (type $generated@@430))))
(let (($generated@@432 ($generated@@329 (type $generated@@430))))
 (=> (= (type $generated@@430) ($generated@@328 $generated@@432 $generated@@431)) (= (= $generated@@430 ($generated@@327 $generated@@432 $generated@@431)) (= ($generated@@326 $generated@@430) ($generated@@428 $generated@@432))))))
 :pattern ( ($generated@@326 $generated@@430))
)))
(assert (forall (($generated@@433 T@U) ) (! (let (($generated@@434 ($generated@@330 (type $generated@@433))))
(let (($generated@@435 ($generated@@329 (type $generated@@433))))
 (=> (= (type $generated@@433) ($generated@@328 $generated@@435 $generated@@434)) (= (= $generated@@433 ($generated@@327 $generated@@435 $generated@@434)) (= ($generated@@366 $generated@@433) ($generated@@428 $generated@@434))))))
 :pattern ( ($generated@@366 $generated@@433))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@330 (type $generated@@436))))
(let (($generated@@438 ($generated@@329 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@328 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@327 $generated@@438 $generated@@437)) (= ($generated@@394 $generated@@436) ($generated@@428 $generated@@158))))))
 :pattern ( ($generated@@394 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@312 (type $generated@@439))))
(let (($generated@@441 ($generated@@311 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@310 $generated@@441 $generated@@440)) (or (= $generated@@439 ($generated@@309 $generated@@441 $generated@@440)) (exists (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (and (and (= (type $generated@@442) $generated@@158) (= (type $generated@@443) $generated@@158)) ($generated@@0 ($generated@@89 ($generated@@386 $generated@@439) ($generated@@297 ($generated@@228 $generated@@442 $generated@@443)))))
 :no-pattern (type $generated@@442)
 :no-pattern (type $generated@@443)
 :no-pattern ($generated $generated@@442)
 :no-pattern ($generated@@0 $generated@@442)
 :no-pattern ($generated $generated@@443)
 :no-pattern ($generated@@0 $generated@@443)
))))))
 :pattern ( ($generated@@386 $generated@@439))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@330 (type $generated@@444))))
(let (($generated@@446 ($generated@@329 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@328 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@327 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@158) (= (type $generated@@448) $generated@@158)) ($generated@@0 ($generated@@89 ($generated@@394 $generated@@444) ($generated@@297 ($generated@@228 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@394 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@449) $generated@@158) ($generated@@229 $generated@@449 $generated@@46)) (and (= ($generated@@297 ($generated@@347 $generated@@2 $generated@@449)) $generated@@449) ($generated@@146 ($generated@@347 $generated@@2 $generated@@449) $generated@@46)))
 :pattern ( ($generated@@229 $generated@@449 $generated@@46))
)))
(assert (forall (($generated@@450 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@158) ($generated@@229 $generated@@450 $generated@@47)) (and (= ($generated@@297 ($generated@@347 $generated@@3 $generated@@450)) $generated@@450) ($generated@@146 ($generated@@347 $generated@@3 $generated@@450) $generated@@47)))
 :pattern ( ($generated@@229 $generated@@450 $generated@@47))
)))
(assert (forall (($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@451) $generated@@158) ($generated@@229 $generated@@451 $generated@@44)) (and (= ($generated@@297 ($generated@@347 $generated@@4 $generated@@451)) $generated@@451) ($generated@@146 ($generated@@347 $generated@@4 $generated@@451) $generated@@44)))
 :pattern ( ($generated@@229 $generated@@451 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@452) 20))
(assert (forall (($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@453) $generated@@158) ($generated@@229 $generated@@453 $generated@@45)) (and (= ($generated@@297 ($generated@@347 $generated@@452 $generated@@453)) $generated@@453) ($generated@@146 ($generated@@347 $generated@@452 $generated@@453) $generated@@45)))
 :pattern ( ($generated@@229 $generated@@453 $generated@@45))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (= (type $generated@@455) $generated@@69) (= ($generated@@229 ($generated@@297 $generated@@454) $generated@@455) ($generated@@146 $generated@@454 $generated@@455)))
 :pattern ( ($generated@@229 ($generated@@297 $generated@@454) $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@87 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@83 $generated@@457 $generated@@2)) (<= 0 ($generated@@302 $generated@@456))))
 :pattern ( ($generated@@302 $generated@@456))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@290 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@289 $generated@@459)) (<= 0 ($generated@@288 $generated@@458))))
 :pattern ( ($generated@@288 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (= (type ($generated@@460 $generated@@461)) $generated@@69)
 :pattern ( ($generated@@460 $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@69) (= (type $generated@@463) $generated@@69)) (= ($generated@@460 ($generated@@412 $generated@@462 $generated@@463)) $generated@@462))
 :pattern ( ($generated@@412 $generated@@462 $generated@@463))
)))
(assert (forall (($generated@@465 T@U) ) (! (= (type ($generated@@464 $generated@@465)) $generated@@69)
 :pattern ( ($generated@@464 $generated@@465))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@466) $generated@@69) (= (type $generated@@467) $generated@@69)) (= ($generated@@464 ($generated@@412 $generated@@466 $generated@@467)) $generated@@467))
 :pattern ( ($generated@@412 $generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@69) (= (type $generated@@469) $generated@@69)) (= ($generated@@77 ($generated@@412 $generated@@468 $generated@@469)) $generated@@58))
 :pattern ( ($generated@@412 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@69)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@69) (= (type $generated@@473) $generated@@69)) (= ($generated@@470 ($generated@@420 $generated@@472 $generated@@473)) $generated@@472))
 :pattern ( ($generated@@420 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@475 T@U) ) (! (= (type ($generated@@474 $generated@@475)) $generated@@69)
 :pattern ( ($generated@@474 $generated@@475))
)))
(assert (forall (($generated@@476 T@U) ($generated@@477 T@U) ) (!  (=> (and (= (type $generated@@476) $generated@@69) (= (type $generated@@477) $generated@@69)) (= ($generated@@474 ($generated@@420 $generated@@476 $generated@@477)) $generated@@477))
 :pattern ( ($generated@@420 $generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@69) (= (type $generated@@479) $generated@@69)) (= ($generated@@77 ($generated@@420 $generated@@478 $generated@@479)) $generated@@59))
 :pattern ( ($generated@@420 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@158) (= (type $generated@@481) $generated@@158)) (= ($generated@@163 ($generated@@228 $generated@@480 $generated@@481)) $generated@@61))
 :pattern ( ($generated@@228 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@69)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@69) (= (type $generated@@485) $generated@@69)) (= ($generated@@482 ($generated@@149 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@149 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@69)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@69) (= (type $generated@@489) $generated@@69)) (= ($generated@@486 ($generated@@149 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@149 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@158) (= (type $generated@@491) $generated@@158)) (= ($generated@@156 ($generated@@228 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@228 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@158) (= (type $generated@@493) $generated@@158)) (= ($generated@@157 ($generated@@228 $generated@@492 $generated@@493)) $generated@@493))
 :pattern ( ($generated@@228 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 Int) ($generated@@495 T@U) ) (!  (=> (= (type $generated@@495) $generated@@82) (= ($generated@@163 ($generated@@80 $generated@@494 $generated@@495)) $generated@@66))
 :pattern ( ($generated@@80 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 Int) ($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@82) (= ($generated@@244 ($generated@@80 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@80 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 Int) ($generated@@499 T@U) ) (!  (=> (= (type $generated@@499) $generated@@82) (= ($generated@@245 ($generated@@80 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@80 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@69)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@290 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@289 $generated@@158)) (= (type $generated@@507) $generated@@69)) (= (type $generated@@508) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@79 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@288 $generated@@506))) ($generated@@271 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@79 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@142 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@142 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@69)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@69) (= ($generated@@512 ($generated@@249 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@249 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@69) (= ($generated@@77 ($generated@@249 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@249 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@69)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@69) (= ($generated@@516 ($generated@@254 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@254 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@69) (= ($generated@@77 ($generated@@254 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@254 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@69)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@69) (= ($generated@@520 ($generated@@167 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@167 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@69) (= ($generated@@77 ($generated@@167 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@167 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@69)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@69) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@69) (= ($generated@@77 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
(= ($generated@@347 $generated@@529 ($generated@@297 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@297 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@310 $generated@@158 $generated@@158)) (= (type $generated@@531) $generated@@69)) (= (type $generated@@532) $generated@@69)) (= ($generated@@146 $generated@@530 ($generated@@412 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@158) ($generated@@0 ($generated@@89 ($generated@@308 $generated@@530) $generated@@533))) (and ($generated@@229 ($generated@@89 ($generated@@387 $generated@@530) $generated@@533) $generated@@532) ($generated@@229 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@89 ($generated@@387 $generated@@530) $generated@@533))
 :pattern ( ($generated@@89 ($generated@@308 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@146 $generated@@530 ($generated@@412 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@328 $generated@@158 $generated@@158)) (= (type $generated@@535) $generated@@69)) (= (type $generated@@536) $generated@@69)) (= ($generated@@146 $generated@@534 ($generated@@420 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@158) ($generated@@0 ($generated@@89 ($generated@@326 $generated@@534) $generated@@537))) (and ($generated@@229 ($generated@@89 ($generated@@395 $generated@@534) $generated@@537) $generated@@536) ($generated@@229 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@89 ($generated@@395 $generated@@534) $generated@@537))
 :pattern ( ($generated@@89 ($generated@@326 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@146 $generated@@534 ($generated@@420 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@158) (= (type $generated@@541) $generated@@158)) (< ($generated@@538 $generated@@540) ($generated@@539 ($generated@@228 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@228 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@158) (= (type $generated@@543) $generated@@158)) (< ($generated@@538 $generated@@543) ($generated@@539 ($generated@@228 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@228 $generated@@542 $generated@@543))
)))
(assert (forall (($generated@@544 Int) ($generated@@545 T@U) ) (!  (=> (= (type $generated@@545) $generated@@82) (< ($generated@@539 $generated@@545) ($generated@@539 ($generated@@80 $generated@@544 $generated@@545))))
 :pattern ( ($generated@@80 $generated@@544 $generated@@545))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (and (= (type $generated@@546) $generated@@158) (= (type $generated@@547) $generated@@69)) (= (type $generated@@548) $generated@@69)) ($generated@@229 $generated@@546 ($generated@@412 $generated@@547 $generated@@548))) (and (= ($generated@@297 ($generated@@347 ($generated@@310 $generated@@158 $generated@@158) $generated@@546)) $generated@@546) ($generated@@146 ($generated@@347 ($generated@@310 $generated@@158 $generated@@158) $generated@@546) ($generated@@412 $generated@@547 $generated@@548))))
 :pattern ( ($generated@@229 $generated@@546 ($generated@@412 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ($generated@@551 T@U) ) (!  (=> (and (and (and (= (type $generated@@549) $generated@@158) (= (type $generated@@550) $generated@@69)) (= (type $generated@@551) $generated@@69)) ($generated@@229 $generated@@549 ($generated@@420 $generated@@550 $generated@@551))) (and (= ($generated@@297 ($generated@@347 ($generated@@328 $generated@@158 $generated@@158) $generated@@549)) $generated@@549) ($generated@@146 ($generated@@347 ($generated@@328 $generated@@158 $generated@@158) $generated@@549) ($generated@@420 $generated@@550 $generated@@551))))
 :pattern ( ($generated@@229 $generated@@549 ($generated@@420 $generated@@550 $generated@@551)))
)))
(assert (forall (($generated@@552 T@U) ($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (and (and (= (type $generated@@552) $generated@@69) (= (type $generated@@553) $generated@@69)) (= (type $generated@@554) $generated@@158)) ($generated@@229 $generated@@554 ($generated@@149 $generated@@552 $generated@@553))) (and (= ($generated@@297 ($generated@@347 $generated@@82 $generated@@554)) $generated@@554) ($generated@@146 ($generated@@347 $generated@@82 $generated@@554) ($generated@@149 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@229 $generated@@554 ($generated@@149 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@555 T@U) ) (! (let (($generated@@556 (type $generated@@555)))
 (not ($generated@@0 ($generated@@89 ($generated@@428 $generated@@556) $generated@@555))))
 :pattern ( (let (($generated@@556 (type $generated@@555)))
($generated@@89 ($generated@@428 $generated@@556) $generated@@555)))
)))
(assert (forall (($generated@@558 T@U) ) (! (= (type ($generated@@557 $generated@@558)) $generated@@74)
 :pattern ( ($generated@@557 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ) (!  (=> (and (= (type $generated@@559) $generated@@69) (= (type $generated@@560) $generated@@69)) (and (= ($generated@@77 ($generated@@149 $generated@@559 $generated@@560)) $generated@@62) (= ($generated@@557 ($generated@@149 $generated@@559 $generated@@560)) $generated@@67)))
 :pattern ( ($generated@@149 $generated@@559 $generated@@560))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (= (type $generated@@561) $generated@@82) (= (type $generated@@562) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@86 $generated@@562) (and ($generated@@243 $generated@@561) ($generated@@79 $generated@@561 $generated@@81 $generated@@562)))) ($generated@@79 ($generated@@8 ($generated@@244 $generated@@561)) $generated@@46 $generated@@562))
 :pattern ( ($generated@@79 ($generated@@8 ($generated@@244 $generated@@561)) $generated@@46 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@82) ($generated@@146 $generated@@563 $generated@@81)) (or (or ($generated@@265 $generated@@563) ($generated@@268 $generated@@563)) ($generated@@243 $generated@@563)))
 :pattern ( ($generated@@243 $generated@@563) ($generated@@146 $generated@@563 $generated@@81))
 :pattern ( ($generated@@268 $generated@@563) ($generated@@146 $generated@@563 $generated@@81))
 :pattern ( ($generated@@265 $generated@@563) ($generated@@146 $generated@@563 $generated@@81))
)))
(assert (forall (($generated@@564 T@U) ) (!  (=> (= (type $generated@@564) $generated@@82) (= ($generated@@538 ($generated@@297 $generated@@564)) ($generated@@539 $generated@@564)))
 :pattern ( ($generated@@538 ($generated@@297 $generated@@564)))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (and (= (type $generated@@565) $generated@@158) ($generated@@229 $generated@@565 ($generated@@142 0))) (and (= ($generated@@297 ($generated@@347 $generated@@2 $generated@@565)) $generated@@565) ($generated@@146 ($generated@@347 ($generated@@83 $generated@@158 $generated@@4) $generated@@565) ($generated@@142 0))))
 :pattern ( ($generated@@229 $generated@@565 ($generated@@142 0)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@158) (= (type $generated@@567) $generated@@69)) ($generated@@229 $generated@@566 ($generated@@249 $generated@@567))) (and (= ($generated@@297 ($generated@@347 ($generated@@83 $generated@@158 $generated@@4) $generated@@566)) $generated@@566) ($generated@@146 ($generated@@347 ($generated@@83 $generated@@158 $generated@@4) $generated@@566) ($generated@@249 $generated@@567))))
 :pattern ( ($generated@@229 $generated@@566 ($generated@@249 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@158) (= (type $generated@@569) $generated@@69)) ($generated@@229 $generated@@568 ($generated@@254 $generated@@569))) (and (= ($generated@@297 ($generated@@347 ($generated@@83 $generated@@158 $generated@@4) $generated@@568)) $generated@@568) ($generated@@146 ($generated@@347 ($generated@@83 $generated@@158 $generated@@4) $generated@@568) ($generated@@254 $generated@@569))))
 :pattern ( ($generated@@229 $generated@@568 ($generated@@254 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ) (!  (=> (and (and (= (type $generated@@570) $generated@@158) (= (type $generated@@571) $generated@@69)) ($generated@@229 $generated@@570 ($generated@@167 $generated@@571))) (and (= ($generated@@297 ($generated@@347 ($generated@@83 $generated@@158 $generated@@2) $generated@@570)) $generated@@570) ($generated@@146 ($generated@@347 ($generated@@83 $generated@@158 $generated@@2) $generated@@570) ($generated@@167 $generated@@571))))
 :pattern ( ($generated@@229 $generated@@570 ($generated@@167 $generated@@571)))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (and (= (type $generated@@572) $generated@@158) (= (type $generated@@573) $generated@@69)) ($generated@@229 $generated@@572 ($generated@@500 $generated@@573))) (and (= ($generated@@297 ($generated@@347 ($generated@@289 $generated@@158) $generated@@572)) $generated@@572) ($generated@@146 ($generated@@347 ($generated@@289 $generated@@158) $generated@@572) ($generated@@500 $generated@@573))))
 :pattern ( ($generated@@229 $generated@@572 ($generated@@500 $generated@@573)))
)))
(assert (= ($generated@@77 $generated@@81) $generated@@64))
(assert (= ($generated@@557 $generated@@81) $generated@@68))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ($generated@@576 T@U) ) (!  (=> (and (and (= (type $generated@@574) ($generated@@83 $generated@@158 $generated@@2)) (= (type $generated@@575) $generated@@69)) (= (type $generated@@576) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@79 $generated@@574 ($generated@@167 $generated@@575) $generated@@576) (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@158) (< 0 ($generated ($generated@@89 $generated@@574 $generated@@577)))) ($generated@@271 $generated@@577 $generated@@575 $generated@@576))
 :pattern ( ($generated@@89 $generated@@574 $generated@@577))
))))
 :pattern ( ($generated@@79 $generated@@574 ($generated@@167 $generated@@575) $generated@@576))
)))
(assert (= $generated@@164 ($generated@@261 $generated@@164)))
(assert (= $generated@@166 ($generated@@261 $generated@@166)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@82) (= (type $generated@@579) $generated@@69)) (= (type $generated@@580) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@86 $generated@@580) (and ($generated@@148 $generated@@578) (exists (($generated@@581 T@U) ) (!  (and (= (type $generated@@581) $generated@@69) ($generated@@79 $generated@@578 ($generated@@149 $generated@@579 $generated@@581) $generated@@580))
 :pattern ( ($generated@@79 $generated@@578 ($generated@@149 $generated@@579 $generated@@581) $generated@@580))
))))) ($generated@@271 ($generated@@156 $generated@@578) $generated@@579 $generated@@580))
 :pattern ( ($generated@@271 ($generated@@156 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@82) (= (type $generated@@583) $generated@@69)) (= (type $generated@@584) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@86 $generated@@584) (and ($generated@@148 $generated@@582) (exists (($generated@@585 T@U) ) (!  (and (= (type $generated@@585) $generated@@69) ($generated@@79 $generated@@582 ($generated@@149 $generated@@585 $generated@@583) $generated@@584))
 :pattern ( ($generated@@79 $generated@@582 ($generated@@149 $generated@@585 $generated@@583) $generated@@584))
))))) ($generated@@271 ($generated@@157 $generated@@582) $generated@@583 $generated@@584))
 :pattern ( ($generated@@271 ($generated@@157 $generated@@582) $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (and (= (type $generated@@586) $generated@@82) (= (type $generated@@587) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@86 $generated@@587) (and ($generated@@243 $generated@@586) ($generated@@79 $generated@@586 $generated@@81 $generated@@587)))) ($generated@@79 ($generated@@245 $generated@@586) $generated@@81 $generated@@587))
 :pattern ( ($generated@@79 ($generated@@245 $generated@@586) $generated@@81 $generated@@587))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@588) $generated@@158) (= (type $generated@@589) $generated@@158)) (= ($generated@@228 ($generated@@261 $generated@@588) ($generated@@261 $generated@@589)) ($generated@@261 ($generated@@228 $generated@@588 $generated@@589))))
 :pattern ( ($generated@@228 ($generated@@261 $generated@@588) ($generated@@261 $generated@@589)))
)))
(assert (forall (($generated@@590 Int) ($generated@@591 T@U) ) (!  (=> (= (type $generated@@591) $generated@@82) (= ($generated@@80 ($generated@@259 $generated@@590) ($generated@@261 $generated@@591)) ($generated@@261 ($generated@@80 $generated@@590 $generated@@591))))
 :pattern ( ($generated@@80 ($generated@@259 $generated@@590) ($generated@@261 $generated@@591)))
)))
(assert (forall (($generated@@592 Int) ) (! (= ($generated@@297 ($generated@@8 ($generated@@259 $generated@@592))) ($generated@@261 ($generated@@297 ($generated@@8 $generated@@592))))
 :pattern ( ($generated@@297 ($generated@@8 ($generated@@259 $generated@@592))))
)))
(assert (forall (($generated@@593 T@U) ) (! (= ($generated@@297 ($generated@@261 $generated@@593)) ($generated@@261 ($generated@@297 $generated@@593)))
 :pattern ( ($generated@@297 ($generated@@261 $generated@@593)))
)))
(assert (forall (($generated@@594 Int) ($generated@@595 T@U) ) (!  (=> (= (type $generated@@595) $generated@@82) (= ($generated@@146 ($generated@@80 $generated@@594 $generated@@595) $generated@@81)  (and ($generated@@146 ($generated@@8 $generated@@594) $generated@@46) ($generated@@146 $generated@@595 $generated@@81))))
 :pattern ( ($generated@@146 ($generated@@80 $generated@@594 $generated@@595) $generated@@81))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 ($generated@@290 (type $generated@@596))))
 (=> (and (= (type $generated@@596) ($generated@@289 $generated@@597)) (= ($generated@@288 $generated@@596) 0)) (= $generated@@596 ($generated@@287 $generated@@597))))
 :pattern ( ($generated@@288 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ($generated@@600 T@U) ) (! (let (($generated@@601 (type $generated@@599)))
 (=> (and (and (= (type $generated@@598) ($generated@@83 $generated@@601 $generated@@2)) (= (type $generated@@600) $generated@@2)) (<= 0 ($generated $generated@@600))) (= ($generated@@302 ($generated@@90 $generated@@598 $generated@@599 $generated@@600)) (+ (- ($generated@@302 $generated@@598) ($generated ($generated@@89 $generated@@598 $generated@@599))) ($generated $generated@@600)))))
 :pattern ( ($generated@@302 ($generated@@90 $generated@@598 $generated@@599 $generated@@600)))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@603) $generated@@2)) ($generated@@79 $generated@@603 $generated@@46 $generated@@602))
 :pattern ( ($generated@@79 $generated@@603 $generated@@46 $generated@@602))
)))
(assert (forall (($generated@@604 T@U) ($generated@@605 T@U) ) (!  (=> (and (= (type $generated@@604) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@605) $generated@@3)) ($generated@@79 $generated@@605 $generated@@47 $generated@@604))
 :pattern ( ($generated@@79 $generated@@605 $generated@@47 $generated@@604))
)))
(assert (forall (($generated@@606 T@U) ($generated@@607 T@U) ) (!  (=> (and (= (type $generated@@606) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@607) $generated@@4)) ($generated@@79 $generated@@607 $generated@@44 $generated@@606))
 :pattern ( ($generated@@79 $generated@@607 $generated@@44 $generated@@606))
)))
(assert (forall (($generated@@608 T@U) ($generated@@609 T@U) ) (!  (=> (and (= (type $generated@@608) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@609) $generated@@452)) ($generated@@79 $generated@@609 $generated@@45 $generated@@608))
 :pattern ( ($generated@@79 $generated@@609 $generated@@45 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ) (!  (=> (and (= (type $generated@@610) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@611) $generated@@158)) ($generated@@79 $generated@@611 $generated@@48 $generated@@610))
 :pattern ( ($generated@@79 $generated@@611 $generated@@48 $generated@@610))
)))
(assert (forall (($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (= (type $generated@@612) ($generated@@289 $generated@@158)) (= (type $generated@@613) $generated@@69)) (= ($generated@@146 $generated@@612 ($generated@@500 $generated@@613)) (forall (($generated@@614 Int) ) (!  (=> (and (<= 0 $generated@@614) (< $generated@@614 ($generated@@288 $generated@@612))) ($generated@@229 ($generated@@501 $generated@@612 $generated@@614) $generated@@613))
 :pattern ( ($generated@@501 $generated@@612 $generated@@614))
))))
 :pattern ( ($generated@@146 $generated@@612 ($generated@@500 $generated@@613)))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 Int) ) (!  (=> (= (type $generated@@616) ($generated@@289 $generated@@158)) (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@288 $generated@@616))) (< ($generated@@539 ($generated@@347 $generated@@82 ($generated@@501 $generated@@616 $generated@@617))) ($generated@@615 $generated@@616))))
 :pattern ( ($generated@@539 ($generated@@347 $generated@@82 ($generated@@501 $generated@@616 $generated@@617))))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (and (= (type $generated@@618) ($generated@@310 $generated@@158 $generated@@158)) (= (type $generated@@619) $generated@@69)) (= (type $generated@@620) $generated@@69)) ($generated@@146 $generated@@618 ($generated@@412 $generated@@619 $generated@@620))) (and (and ($generated@@146 ($generated@@308 $generated@@618) ($generated@@249 $generated@@619)) ($generated@@146 ($generated@@355 $generated@@618) ($generated@@249 $generated@@620))) ($generated@@146 ($generated@@386 $generated@@618) ($generated@@249 ($generated@@149 $generated@@619 $generated@@620)))))
 :pattern ( ($generated@@146 $generated@@618 ($generated@@412 $generated@@619 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) ($generated@@328 $generated@@158 $generated@@158)) (= (type $generated@@622) $generated@@69)) (= (type $generated@@623) $generated@@69)) ($generated@@146 $generated@@621 ($generated@@420 $generated@@622 $generated@@623))) (and (and ($generated@@146 ($generated@@326 $generated@@621) ($generated@@254 $generated@@622)) ($generated@@146 ($generated@@366 $generated@@621) ($generated@@254 $generated@@623))) ($generated@@146 ($generated@@394 $generated@@621) ($generated@@254 ($generated@@149 $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@146 $generated@@621 ($generated@@420 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ) (!  (=> (= (type $generated@@624) $generated@@2) ($generated@@146 $generated@@624 $generated@@46))
 :pattern ( ($generated@@146 $generated@@624 $generated@@46))
)))
(assert (forall (($generated@@625 T@U) ) (!  (=> (= (type $generated@@625) $generated@@3) ($generated@@146 $generated@@625 $generated@@47))
 :pattern ( ($generated@@146 $generated@@625 $generated@@47))
)))
(assert (forall (($generated@@626 T@U) ) (!  (=> (= (type $generated@@626) $generated@@4) ($generated@@146 $generated@@626 $generated@@44))
 :pattern ( ($generated@@146 $generated@@626 $generated@@44))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@452) ($generated@@146 $generated@@627 $generated@@45))
 :pattern ( ($generated@@146 $generated@@627 $generated@@45))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@158) ($generated@@146 $generated@@628 $generated@@48))
 :pattern ( ($generated@@146 $generated@@628 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@629 () Int)
(declare-fun $generated@@630 () T@U)
(declare-fun $generated@@631 () T@U)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () Int)
(declare-fun $generated@@635 (T@U) Bool)
(declare-fun $generated@@636 () Int)
(assert  (and (and (and (= (type $generated@@630) ($generated@@174 $generated@@84 $generated@@4)) (= (type $generated@@631) $generated@@84)) (= (type $generated@@632) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@633) $generated@@82)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@637 true))
(let (($generated@@638 true))
(let (($generated@@639  (=> (= $generated@@629 ($generated@@259 1)) (and (=> (= (ControlFlow 0 4) 2) $generated@@638) (=> (= (ControlFlow 0 4) 3) $generated@@637)))))
(let (($generated@@640 true))
(let (($generated@@641  (=> (= $generated@@630 ($generated@@173 $generated@@631 $generated@@632 $generated@@60 false)) (=> (and (= $generated@@633 ($generated@@261 ($generated@@80 ($generated@@259 1) ($generated@@261 ($generated@@80 ($generated@@259 2) ($generated@@261 $generated@@164)))))) ($generated@@146 $generated@@633 $generated@@81)) (and (=> (= (ControlFlow 0 5) (- 0 10)) ($generated@@243 $generated@@633)) (=> ($generated@@243 $generated@@633) (and (=> (= (ControlFlow 0 5) (- 0 9)) ($generated@@243 ($generated@@245 $generated@@633))) (=> ($generated@@243 ($generated@@245 $generated@@633)) (and (=> (= (ControlFlow 0 5) (- 0 8)) ($generated@@265 ($generated@@245 ($generated@@245 $generated@@633)))) (=> ($generated@@265 ($generated@@245 ($generated@@245 $generated@@633))) (=> (= ($generated@@80 $generated@@629 ($generated@@80 $generated@@634 ($generated@@261 $generated@@164))) $generated@@633) (and (=> (= (ControlFlow 0 5) (- 0 7)) (= $generated@@629 ($generated@@259 1))) (=> (= $generated@@629 ($generated@@259 1)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (= $generated@@634 ($generated@@259 2))) (=> (= $generated@@634 ($generated@@259 2)) (and (=> (= (ControlFlow 0 5) 1) $generated@@640) (=> (= (ControlFlow 0 5) 4) $generated@@639)))))))))))))))))
(let (($generated@@642  (=> (and (and ($generated@@86 $generated@@632) ($generated@@635 $generated@@632)) (and (= 1 $generated@@636) (= (ControlFlow 0 11) 5))) $generated@@641)))
$generated@@642)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@45 $generated@@57 $generated@@58)) 6)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@51 ($generated@@45 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@45 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@52 ($generated@@45 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (let (($generated@@65 ($generated@@52 (type $generated@@63))))
(= (type ($generated@@49 $generated@@63 $generated@@64)) $generated@@65))
 :pattern ( ($generated@@49 $generated@@63 $generated@@64))
))) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (let (($generated@@69 (type $generated@@68)))
(let (($generated@@70 (type $generated@@67)))
(= (type ($generated@@53 $generated@@66 $generated@@67 $generated@@68)) ($generated@@45 $generated@@70 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@66 $generated@@67 $generated@@68))
))) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (let (($generated@@74 ($generated@@52 (type $generated@@71))))
 (=> (= (type $generated@@73) $generated@@74) (= ($generated@@49 ($generated@@53 $generated@@71 $generated@@72 $generated@@73) $generated@@72) $generated@@73)))
 :weight 0
))) (and (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@49 ($generated@@53 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@49 $generated@@76 $generated@@78)))
 :weight 0
)) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or true (= ($generated@@49 ($generated@@53 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@49 $generated@@80 $generated@@82)))
 :weight 0
)))) (= ($generated@@1 $generated@@46) 7)) (forall (($generated@@83 T@T) ) (= ($generated@@1 ($generated@@54 $generated@@83)) 8))) (forall (($generated@@84 T@T) ) (! (= ($generated@@55 ($generated@@54 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@54 $generated@@84))
))) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (let (($generated@@87 ($generated@@55 (type $generated@@86))))
(= (type ($generated@@48 $generated@@85 $generated@@86)) $generated@@87))
 :pattern ( ($generated@@48 $generated@@85 $generated@@86))
))) (= ($generated@@1 $generated@@47) 9)) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= (type ($generated@@56 $generated@@88 $generated@@89 $generated@@90)) $generated@@47)
 :pattern ( ($generated@@56 $generated@@88 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (let (($generated@@94 ($generated@@55 (type $generated@@92))))
 (=> (= (type $generated@@93) $generated@@94) (= ($generated@@48 ($generated@@56 $generated@@91 $generated@@92 $generated@@93) $generated@@92) $generated@@93)))
 :weight 0
))) (and (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@97 $generated@@98) (= ($generated@@48 ($generated@@56 $generated@@96 $generated@@97 $generated@@95) $generated@@98) ($generated@@48 $generated@@96 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or true (= ($generated@@48 ($generated@@56 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@48 $generated@@100 $generated@@102)))
 :weight 0
)))) (= (type $generated@@50) ($generated@@54 $generated@@4))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and (and (= (type $generated@@103) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@104) ($generated@@45 $generated@@46 $generated@@47))) ($generated@@44 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ) (!  (=> (and (= (type $generated@@105) $generated@@46) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@103 $generated@@105) $generated@@50))) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50)))
 :pattern ( ($generated@@48 ($generated@@49 $generated@@104 $generated@@105) $generated@@50))
)))
 :pattern ( ($generated@@44 $generated@@103 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (= ($generated@@1 ($generated@@108 $generated@@112 $generated@@113)) 10)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (! (= ($generated@@109 ($generated@@108 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@114 $generated@@115))
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@110 ($generated@@108 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (let (($generated@@121 ($generated@@110 (type $generated@@118))))
(= (type ($generated@@106 $generated@@118 $generated@@119 $generated@@120)) $generated@@121))
 :pattern ( ($generated@@106 $generated@@118 $generated@@119 $generated@@120))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 (type $generated@@125)))
(let (($generated@@127 (type $generated@@123)))
(= (type ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125)) ($generated@@108 $generated@@127 $generated@@126))))
 :pattern ( ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@125))
))) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (let (($generated@@132 ($generated@@110 (type $generated@@128))))
 (=> (= (type $generated@@131) $generated@@132) (= ($generated@@106 ($generated@@111 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@129 $generated@@130) $generated@@131)))
 :weight 0
))) (and (and (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@106 ($generated@@111 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@106 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@106 ($generated@@111 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@106 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or true (= ($generated@@106 ($generated@@111 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@106 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ) (! (= (type ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154)) ($generated@@108 $generated@@46 $generated@@4))
 :pattern ( ($generated@@107 $generated@@151 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (let (($generated@@161 ($generated@@55 (type $generated@@160))))
 (=> (and (and (and (and (= (type $generated@@155) $generated@@46) (= (type $generated@@156) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@157) ($generated@@54 $generated@@4))) (= (type $generated@@159) $generated@@46)) (= (type $generated@@160) ($generated@@54 $generated@@161))) (= ($generated@@0 ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (not (= $generated@@159 $generated@@155)) ($generated@@0 ($generated@@48 ($generated@@49 $generated@@156 $generated@@159) $generated@@157))) $generated@@158))))
 :pattern ( ($generated@@106 ($generated@@107 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@162) ($generated@@45 $generated@@46 $generated@@47)) (= (type $generated@@163) ($generated@@45 $generated@@46 $generated@@47))) (= (type $generated@@164) ($generated@@45 $generated@@46 $generated@@47))) (not (= $generated@@162 $generated@@164))) (and ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))) ($generated@@44 $generated@@162 $generated@@164))
 :pattern ( ($generated@@44 $generated@@162 $generated@@163) ($generated@@44 $generated@@163 $generated@@164))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 2) true)
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
