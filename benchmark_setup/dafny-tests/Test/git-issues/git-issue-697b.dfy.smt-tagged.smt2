(set-logic UFNIRA)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U T@U) T@U)
(declare-fun $generated@@159 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@160 (T@T T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@214 (T@U) Bool)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@217 (T@U T@U) T@U)
(declare-fun $generated@@218 (T@U T@U) Bool)
(declare-fun $generated@@227 (T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(declare-fun $generated@@235 (T@U) T@U)
(declare-fun $generated@@240 (Int) Int)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U T@U T@U) Bool)
(declare-fun $generated@@253 (T@U) T@U)
(declare-fun $generated@@260 (T@T) T@U)
(declare-fun $generated@@261 (T@U) Int)
(declare-fun $generated@@262 (T@T) T@T)
(declare-fun $generated@@263 (T@T) T@T)
(declare-fun $generated@@268 (T@U) Int)
(declare-fun $generated@@271 (Int) T@U)
(declare-fun $generated@@275 (T@U) T@U)
(declare-fun $generated@@280 (T@U) Int)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@286 (T@U) T@U)
(declare-fun $generated@@287 (T@T T@T) T@U)
(declare-fun $generated@@288 (T@T T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@290 (T@T) T@T)
(declare-fun $generated@@304 (T@U) T@U)
(declare-fun $generated@@305 (T@T T@T) T@U)
(declare-fun $generated@@306 (T@T T@T) T@T)
(declare-fun $generated@@307 (T@T) T@T)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@325 (T@T T@U) T@U)
(declare-fun $generated@@333 (T@U) T@U)
(declare-fun $generated@@344 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@367 (T@U) T@U)
(declare-fun $generated@@374 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@392 (T@U T@U) T@U)
(declare-fun $generated@@400 (T@U T@U) T@U)
(declare-fun $generated@@408 (T@T) T@U)
(declare-fun $generated@@432 () T@T)
(declare-fun $generated@@440 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@450 (T@U) T@U)
(declare-fun $generated@@454 (T@U) T@U)
(declare-fun $generated@@462 (T@U) T@U)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@474 (T@U) T@U)
(declare-fun $generated@@475 (T@U Int) T@U)
(declare-fun $generated@@484 (T@U) Int)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@490 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@514 (T@U) Int)
(declare-fun $generated@@515 (T@U) Int)
(declare-fun $generated@@532 (Int Int) Int)
(declare-fun $generated@@535 (T@U) T@U)
(declare-fun $generated@@587 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@67) 6) (= (type $generated@@44) $generated@@67)) (= (type $generated@@45) $generated@@67)) (= (type $generated@@46) $generated@@67)) (= (type $generated@@47) $generated@@67)) (= (type $generated@@48) $generated@@67)) (= ($generated@@1 $generated@@68) 7)) (= (type $generated@@49) $generated@@68)) (= (type $generated@@50) $generated@@68)) (= (type $generated@@51) $generated@@68)) (= (type $generated@@52) $generated@@68)) (= (type $generated@@53) $generated@@68)) (= (type $generated@@54) $generated@@68)) (= (type $generated@@55) $generated@@68)) (= (type $generated@@56) $generated@@68)) (= (type $generated@@57) $generated@@68)) (= (type $generated@@58) $generated@@68)) (= (type $generated@@59) $generated@@68)) (forall (($generated@@73 T@T) ) (= ($generated@@1 ($generated@@69 $generated@@73)) 8))) (forall (($generated@@74 T@T) ) (! (= ($generated@@70 ($generated@@69 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@69 $generated@@74))
))) (= (type $generated@@60) ($generated@@69 $generated@@4))) (= ($generated@@1 $generated@@71) 9)) (= (type $generated@@61) $generated@@71)) (= (type $generated@@62) $generated@@68)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@68)) (= ($generated@@1 $generated@@72) 10)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66)
)
(assert (forall (($generated@@76 T@U) ) (! (= (type ($generated@@75 $generated@@76)) $generated@@68)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (= ($generated@@75 $generated@@44) $generated@@49))
(assert (= ($generated@@75 $generated@@45) $generated@@50))
(assert (= ($generated@@75 $generated@@46) $generated@@51))
(assert (= ($generated@@75 $generated@@47) $generated@@52))
(assert (= ($generated@@75 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@88 $generated@@89)) 11)) (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@79 $generated@@90 $generated@@91))
))) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@79 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (let (($generated@@96 ($generated@@83 (type $generated@@94))))
(= (type ($generated@@84 $generated@@94 $generated@@95)) $generated@@96))
 :pattern ( ($generated@@84 $generated@@94 $generated@@95))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 (type $generated@@99)))
(let (($generated@@101 (type $generated@@98)))
(= (type ($generated@@85 $generated@@97 $generated@@98 $generated@@99)) ($generated@@79 $generated@@101 $generated@@100))))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98 $generated@@99))
))) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (let (($generated@@105 ($generated@@83 (type $generated@@102))))
 (=> (= (type $generated@@104) $generated@@105) (= ($generated@@84 ($generated@@85 $generated@@102 $generated@@103 $generated@@104) $generated@@103) $generated@@104)))
 :weight 0
))) (and (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@108 $generated@@109) (= ($generated@@84 ($generated@@85 $generated@@107 $generated@@108 $generated@@106) $generated@@109) ($generated@@84 $generated@@107 $generated@@109)))
 :weight 0
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or true (= ($generated@@84 ($generated@@85 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@84 $generated@@111 $generated@@113)))
 :weight 0
)))) (= ($generated@@1 $generated@@80) 12)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (let (($generated@@116 ($generated@@70 (type $generated@@115))))
(= (type ($generated@@86 $generated@@114 $generated@@115)) $generated@@116))
 :pattern ( ($generated@@86 $generated@@114 $generated@@115))
))) (= ($generated@@1 $generated@@81) 13)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= (type ($generated@@87 $generated@@117 $generated@@118 $generated@@119)) $generated@@81)
 :pattern ( ($generated@@87 $generated@@117 $generated@@118 $generated@@119))
))) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (let (($generated@@123 ($generated@@70 (type $generated@@121))))
 (=> (= (type $generated@@122) $generated@@123) (= ($generated@@86 ($generated@@87 $generated@@120 $generated@@121 $generated@@122) $generated@@121) $generated@@122)))
 :weight 0
))) (and (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 ($generated@@87 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@125 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@86 $generated@@129 $generated@@131)))
 :weight 0
)))) (forall (($generated@@132 Int) ) (! (= (type ($generated@@78 $generated@@132)) $generated@@67)
 :pattern ( ($generated@@78 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@133) $generated@@2) (= (type $generated@@134) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
 :pattern ( ($generated@@77 $generated@@133 ($generated@@78 0) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@2) ($generated@@135 $generated@@136 ($generated@@78 0)))
 :pattern ( ($generated@@135 $generated@@136 ($generated@@78 0)))
)))
(assert  (and (= ($generated@@1 $generated@@139) 14) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@140 $generated@@141)) $generated@@67)
 :pattern ( ($generated@@138 $generated@@140 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (and (= (type $generated@@142) $generated@@67) (= (type $generated@@143) $generated@@67)) (= (type $generated@@144) $generated@@139)) ($generated@@135 $generated@@144 ($generated@@138 $generated@@142 $generated@@143))) ($generated@@137 $generated@@144))
 :pattern ( ($generated@@137 $generated@@144) ($generated@@135 $generated@@144 ($generated@@138 $generated@@142 $generated@@143)))
)))
(assert  (and (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@148)
 :pattern ( ($generated@@146 $generated@@149))
))) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@148)
 :pattern ( ($generated@@147 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) $generated@@139) (= (type $generated@@152) $generated@@139)) true) (= ($generated@@145 $generated@@151 $generated@@152)  (and (= ($generated@@146 $generated@@151) ($generated@@146 $generated@@152)) (= ($generated@@147 $generated@@151) ($generated@@147 $generated@@152)))))
 :pattern ( ($generated@@145 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@67)
 :pattern ( ($generated@@153 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@79 $generated@@148 $generated@@2)) (= (type $generated@@157) $generated@@67)) ($generated@@135 $generated@@156 ($generated@@153 $generated@@157))) ($generated@@154 $generated@@156))
 :pattern ( ($generated@@135 $generated@@156 ($generated@@153 $generated@@157)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@164 T@T) ($generated@@165 T@T) ) (= ($generated@@1 ($generated@@160 $generated@@164 $generated@@165)) 16)) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (! (= ($generated@@161 ($generated@@160 $generated@@166 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@162 ($generated@@160 $generated@@168 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@160 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (let (($generated@@173 ($generated@@162 (type $generated@@170))))
(= (type ($generated@@158 $generated@@170 $generated@@171 $generated@@172)) $generated@@173))
 :pattern ( ($generated@@158 $generated@@170 $generated@@171 $generated@@172))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(let (($generated@@179 (type $generated@@175)))
(= (type ($generated@@163 $generated@@174 $generated@@175 $generated@@176 $generated@@177)) ($generated@@160 $generated@@179 $generated@@178))))
 :pattern ( ($generated@@163 $generated@@174 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@162 (type $generated@@180))))
 (=> (= (type $generated@@183) $generated@@184) (= ($generated@@158 ($generated@@163 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@181 $generated@@182) $generated@@183)))
 :weight 0
))) (and (and (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (or (= $generated@@187 $generated@@189) (= ($generated@@158 ($generated@@163 $generated@@186 $generated@@187 $generated@@188 $generated@@185) $generated@@189 $generated@@190) ($generated@@158 $generated@@186 $generated@@189 $generated@@190)))
 :weight 0
)) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@158 ($generated@@163 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@158 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or true (= ($generated@@158 ($generated@@163 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@158 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 Bool) ) (! (= (type ($generated@@159 $generated@@203 $generated@@204 $generated@@205 $generated@@206)) ($generated@@160 $generated@@80 $generated@@4))
 :pattern ( ($generated@@159 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@70 (type $generated@@212))))
 (=> (and (and (and (and (= (type $generated@@207) $generated@@80) (= (type $generated@@208) ($generated@@79 $generated@@80 $generated@@81))) (= (type $generated@@209) ($generated@@69 $generated@@4))) (= (type $generated@@211) $generated@@80)) (= (type $generated@@212) ($generated@@69 $generated@@213))) (= ($generated@@0 ($generated@@158 ($generated@@159 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))  (=> (and (not (= $generated@@211 $generated@@207)) ($generated@@0 ($generated@@86 ($generated@@84 $generated@@208 $generated@@211) $generated@@209))) $generated@@210))))
 :pattern ( ($generated@@158 ($generated@@159 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))
)))
(assert (= (type $generated@@215) $generated@@67))
(assert (forall (($generated@@216 T@U) ) (!  (=> (and (= (type $generated@@216) $generated@@139) ($generated@@135 $generated@@216 $generated@@215)) ($generated@@214 $generated@@216))
 :pattern ( ($generated@@214 $generated@@216) ($generated@@135 $generated@@216 $generated@@215))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (! (= (type ($generated@@217 $generated@@219 $generated@@220)) $generated@@139)
 :pattern ( ($generated@@217 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (and (and (= (type $generated@@221) $generated@@67) (= (type $generated@@222) $generated@@67)) (= (type $generated@@223) $generated@@148)) (= (type $generated@@224) $generated@@148)) (= ($generated@@135 ($generated@@217 $generated@@223 $generated@@224) ($generated@@138 $generated@@221 $generated@@222))  (and ($generated@@218 $generated@@223 $generated@@221) ($generated@@218 $generated@@224 $generated@@222))))
 :pattern ( ($generated@@135 ($generated@@217 $generated@@223 $generated@@224) ($generated@@138 $generated@@221 $generated@@222)))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (= (type $generated@@225) $generated@@139) (= (type $generated@@226) $generated@@139)) (= ($generated@@145 $generated@@225 $generated@@226) (= $generated@@225 $generated@@226)))
 :pattern ( ($generated@@145 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@139) (= (type $generated@@229) $generated@@139)) (= ($generated@@227 $generated@@228 $generated@@229) (= $generated@@228 $generated@@229)))
 :pattern ( ($generated@@227 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! (= (type ($generated@@230 $generated@@231)) $generated@@67)
 :pattern ( ($generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@232) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@233) $generated@@67)) (= ($generated@@135 $generated@@232 ($generated@@230 $generated@@233)) (forall (($generated@@234 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@148) ($generated@@0 ($generated@@84 $generated@@232 $generated@@234))) ($generated@@218 $generated@@234 $generated@@233))
 :pattern ( ($generated@@84 $generated@@232 $generated@@234))
))))
 :pattern ( ($generated@@135 $generated@@232 ($generated@@230 $generated@@233)))
)))
(assert (forall (($generated@@236 T@U) ) (! (= (type ($generated@@235 $generated@@236)) $generated@@67)
 :pattern ( ($generated@@235 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (= (type $generated@@237) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@238) $generated@@67)) (= ($generated@@135 $generated@@237 ($generated@@235 $generated@@238)) (forall (($generated@@239 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@148) ($generated@@0 ($generated@@84 $generated@@237 $generated@@239))) ($generated@@218 $generated@@239 $generated@@238))
 :pattern ( ($generated@@84 $generated@@237 $generated@@239))
))))
 :pattern ( ($generated@@135 $generated@@237 ($generated@@235 $generated@@238)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@240 $generated@@241) $generated@@241)
 :pattern ( ($generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ) (! (let (($generated@@244 (type $generated@@243)))
(= (type ($generated@@242 $generated@@243)) $generated@@244))
 :pattern ( ($generated@@242 $generated@@243))
)))
(assert (forall (($generated@@245 T@U) ) (! (= ($generated@@242 $generated@@245) $generated@@245)
 :pattern ( ($generated@@242 $generated@@245))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@248) $generated@@67) (= (type $generated@@249) $generated@@67)) (= (type $generated@@250) $generated@@148)) (= (type $generated@@251) $generated@@148)) (= (type $generated@@252) ($generated@@79 $generated@@80 $generated@@81))) ($generated@@246 $generated@@252)) (= ($generated@@77 ($generated@@217 $generated@@250 $generated@@251) ($generated@@138 $generated@@248 $generated@@249) $generated@@252)  (and ($generated@@247 $generated@@250 $generated@@248 $generated@@252) ($generated@@247 $generated@@251 $generated@@249 $generated@@252))))
 :pattern ( ($generated@@77 ($generated@@217 $generated@@250 $generated@@251) ($generated@@138 $generated@@248 $generated@@249) $generated@@252))
)))
(assert (forall (($generated@@254 T@U) ) (! (= (type ($generated@@253 $generated@@254)) $generated@@71)
 :pattern ( ($generated@@253 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ) (!  (=> (= (type $generated@@255) $generated@@139) (= ($generated@@137 $generated@@255) (= ($generated@@253 $generated@@255) $generated@@61)))
 :pattern ( ($generated@@137 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ) (!  (=> (= (type $generated@@256) $generated@@139) (= ($generated@@214 $generated@@256) (= ($generated@@253 $generated@@256) $generated@@63)))
 :pattern ( ($generated@@214 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@257) $generated@@139) ($generated@@137 $generated@@257)) (exists (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (and (and (= (type $generated@@258) $generated@@148) (= (type $generated@@259) $generated@@148)) (= $generated@@257 ($generated@@217 $generated@@258 $generated@@259)))
 :no-pattern (type $generated@@258)
 :no-pattern (type $generated@@259)
 :no-pattern ($generated $generated@@258)
 :no-pattern ($generated@@0 $generated@@258)
 :no-pattern ($generated $generated@@259)
 :no-pattern ($generated@@0 $generated@@259)
)))
 :pattern ( ($generated@@137 $generated@@257))
)))
(assert  (and (and (forall (($generated@@264 T@T) ) (= ($generated@@1 ($generated@@262 $generated@@264)) 17)) (forall (($generated@@265 T@T) ) (! (= ($generated@@263 ($generated@@262 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@262 $generated@@265))
))) (forall (($generated@@266 T@T) ) (! (= (type ($generated@@260 $generated@@266)) ($generated@@262 $generated@@266))
 :pattern ( ($generated@@260 $generated@@266))
))))
(assert (forall (($generated@@267 T@T) ) (! (= ($generated@@261 ($generated@@260 $generated@@267)) 0)
 :pattern ( ($generated@@260 $generated@@267))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (= (type $generated@@269) $generated@@139) (= (type $generated@@270) $generated@@139)) true) (= ($generated@@227 $generated@@269 $generated@@270) (= ($generated@@268 $generated@@269) ($generated@@268 $generated@@270))))
 :pattern ( ($generated@@227 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 Int) ) (! (= (type ($generated@@271 $generated@@272)) $generated@@139)
 :pattern ( ($generated@@271 $generated@@272))
)))
(assert (forall (($generated@@273 T@U) ) (!  (=> (and (= (type $generated@@273) $generated@@139) ($generated@@214 $generated@@273)) (exists (($generated@@274 Int) ) (= $generated@@273 ($generated@@271 $generated@@274))))
 :pattern ( ($generated@@214 $generated@@273))
)))
(assert (forall (($generated@@276 T@U) ) (! (= (type ($generated@@275 $generated@@276)) $generated@@148)
 :pattern ( ($generated@@275 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@67) (= (type $generated@@279) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@247 ($generated@@275 $generated@@277) $generated@@278 $generated@@279) ($generated@@77 $generated@@277 $generated@@278 $generated@@279)))
 :pattern ( ($generated@@247 ($generated@@275 $generated@@277) $generated@@278 $generated@@279))
)))
(assert (forall (($generated@@282 T@T) ) (! (= (type ($generated@@281 $generated@@282)) ($generated@@79 $generated@@282 $generated@@2))
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (! (let (($generated@@284 ($generated@@82 (type $generated@@283))))
 (=> (= (type $generated@@283) ($generated@@79 $generated@@284 $generated@@2)) (and (= (= ($generated@@280 $generated@@283) 0) (= $generated@@283 ($generated@@281 $generated@@284))) (=> (not (= ($generated@@280 $generated@@283) 0)) (exists (($generated@@285 T@U) ) (!  (and (= (type $generated@@285) $generated@@284) (< 0 ($generated ($generated@@84 $generated@@283 $generated@@285))))
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
))))))
 :pattern ( ($generated@@280 $generated@@283))
)))
(assert  (and (and (and (and (forall (($generated@@291 T@T) ($generated@@292 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@291 $generated@@292)) 18)) (forall (($generated@@293 T@T) ($generated@@294 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@293 $generated@@294)) $generated@@293)
 :pattern ( ($generated@@288 $generated@@293 $generated@@294))
))) (forall (($generated@@295 T@T) ($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@288 $generated@@295 $generated@@296)) $generated@@296)
 :pattern ( ($generated@@288 $generated@@295 $generated@@296))
))) (forall (($generated@@297 T@U) ) (! (let (($generated@@298 ($generated@@289 (type $generated@@297))))
(= (type ($generated@@286 $generated@@297)) ($generated@@79 $generated@@298 $generated@@4)))
 :pattern ( ($generated@@286 $generated@@297))
))) (forall (($generated@@299 T@T) ($generated@@300 T@T) ) (! (= (type ($generated@@287 $generated@@299 $generated@@300)) ($generated@@288 $generated@@299 $generated@@300))
 :pattern ( ($generated@@287 $generated@@299 $generated@@300))
))))
(assert (forall (($generated@@301 T@U) ($generated@@302 T@T) ) (! (let (($generated@@303 (type $generated@@301)))
 (not ($generated@@0 ($generated@@84 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301))))
 :pattern ( (let (($generated@@303 (type $generated@@301)))
($generated@@84 ($generated@@286 ($generated@@287 $generated@@303 $generated@@302)) $generated@@301)))
)))
(assert  (and (and (and (and (forall (($generated@@309 T@T) ($generated@@310 T@T) ) (= ($generated@@1 ($generated@@306 $generated@@309 $generated@@310)) 19)) (forall (($generated@@311 T@T) ($generated@@312 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@311 $generated@@312)) $generated@@311)
 :pattern ( ($generated@@306 $generated@@311 $generated@@312))
))) (forall (($generated@@313 T@T) ($generated@@314 T@T) ) (! (= ($generated@@308 ($generated@@306 $generated@@313 $generated@@314)) $generated@@314)
 :pattern ( ($generated@@306 $generated@@313 $generated@@314))
))) (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@307 (type $generated@@315))))
(= (type ($generated@@304 $generated@@315)) ($generated@@79 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@304 $generated@@315))
))) (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (! (= (type ($generated@@305 $generated@@317 $generated@@318)) ($generated@@306 $generated@@317 $generated@@318))
 :pattern ( ($generated@@305 $generated@@317 $generated@@318))
))))
(assert (forall (($generated@@319 T@U) ($generated@@320 T@T) ) (! (let (($generated@@321 (type $generated@@319)))
 (not ($generated@@0 ($generated@@84 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319))))
 :pattern ( (let (($generated@@321 (type $generated@@319)))
($generated@@84 ($generated@@304 ($generated@@305 $generated@@321 $generated@@320)) $generated@@319)))
)))
(assert (forall (($generated@@322 T@U) ) (! (let (($generated@@323 ($generated@@82 (type $generated@@322))))
 (=> (= (type $generated@@322) ($generated@@79 $generated@@323 $generated@@2)) (= ($generated@@154 $generated@@322) (forall (($generated@@324 T@U) ) (!  (=> (= (type $generated@@324) $generated@@323) (and (<= 0 ($generated ($generated@@84 $generated@@322 $generated@@324))) (<= ($generated ($generated@@84 $generated@@322 $generated@@324)) ($generated@@280 $generated@@322))))
 :pattern ( ($generated@@84 $generated@@322 $generated@@324))
)))))
 :pattern ( ($generated@@154 $generated@@322))
)))
(assert (forall (($generated@@326 T@T) ($generated@@327 T@U) ) (! (= (type ($generated@@325 $generated@@326 $generated@@327)) $generated@@326)
 :pattern ( ($generated@@325 $generated@@326 $generated@@327))
)))
(assert (forall (($generated@@328 T@U) ) (!  (=> (and (= (type $generated@@328) $generated@@148) ($generated@@218 $generated@@328 $generated@@215)) (and (= ($generated@@275 ($generated@@325 $generated@@139 $generated@@328)) $generated@@328) ($generated@@135 ($generated@@325 $generated@@139 $generated@@328) $generated@@215)))
 :pattern ( ($generated@@218 $generated@@328 $generated@@215))
)))
(assert (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@290 (type $generated@@329))))
(let (($generated@@331 ($generated@@289 (type $generated@@329))))
 (=> (= (type $generated@@329) ($generated@@288 $generated@@331 $generated@@330)) (or (= $generated@@329 ($generated@@287 $generated@@331 $generated@@330)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@331) ($generated@@0 ($generated@@84 ($generated@@286 $generated@@329) $generated@@332)))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@286 $generated@@329))
)))
(assert (forall (($generated@@334 T@U) ) (! (let (($generated@@335 ($generated@@290 (type $generated@@334))))
(= (type ($generated@@333 $generated@@334)) ($generated@@79 $generated@@335 $generated@@4)))
 :pattern ( ($generated@@333 $generated@@334))
)))
(assert (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@290 (type $generated@@336))))
(let (($generated@@338 ($generated@@289 (type $generated@@336))))
 (=> (= (type $generated@@336) ($generated@@288 $generated@@338 $generated@@337)) (or (= $generated@@336 ($generated@@287 $generated@@338 $generated@@337)) (exists (($generated@@339 T@U) ) (!  (and (= (type $generated@@339) $generated@@337) ($generated@@0 ($generated@@84 ($generated@@333 $generated@@336) $generated@@339)))
 :no-pattern (type $generated@@339)
 :no-pattern ($generated $generated@@339)
 :no-pattern ($generated@@0 $generated@@339)
))))))
 :pattern ( ($generated@@333 $generated@@336))
)))
(assert (forall (($generated@@340 T@U) ) (! (let (($generated@@341 ($generated@@308 (type $generated@@340))))
(let (($generated@@342 ($generated@@307 (type $generated@@340))))
 (=> (= (type $generated@@340) ($generated@@306 $generated@@342 $generated@@341)) (or (= $generated@@340 ($generated@@305 $generated@@342 $generated@@341)) (exists (($generated@@343 T@U) ) (!  (and (= (type $generated@@343) $generated@@342) ($generated@@0 ($generated@@84 ($generated@@304 $generated@@340) $generated@@343)))
 :no-pattern (type $generated@@343)
 :no-pattern ($generated $generated@@343)
 :no-pattern ($generated@@0 $generated@@343)
))))))
 :pattern ( ($generated@@304 $generated@@340))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@308 (type $generated@@345))))
(= (type ($generated@@344 $generated@@345)) ($generated@@79 $generated@@346 $generated@@4)))
 :pattern ( ($generated@@344 $generated@@345))
)))
(assert (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@308 (type $generated@@347))))
(let (($generated@@349 ($generated@@307 (type $generated@@347))))
 (=> (= (type $generated@@347) ($generated@@306 $generated@@349 $generated@@348)) (or (= $generated@@347 ($generated@@305 $generated@@349 $generated@@348)) (exists (($generated@@350 T@U) ) (!  (and (= (type $generated@@350) $generated@@348) ($generated@@0 ($generated@@84 ($generated@@344 $generated@@347) $generated@@350)))
 :no-pattern (type $generated@@350)
 :no-pattern ($generated $generated@@350)
 :no-pattern ($generated@@0 $generated@@350)
))))))
 :pattern ( ($generated@@344 $generated@@347))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@351) ($generated@@79 $generated@@148 $generated@@2)) (= (type $generated@@352) $generated@@67)) (= ($generated@@135 $generated@@351 ($generated@@153 $generated@@352)) (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@148) (< 0 ($generated ($generated@@84 $generated@@351 $generated@@353)))) ($generated@@218 $generated@@353 $generated@@352))
 :pattern ( ($generated@@84 $generated@@351 $generated@@353))
))))
 :pattern ( ($generated@@135 $generated@@351 ($generated@@153 $generated@@352)))
)))
(assert (forall (($generated@@354 Int) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) ($generated@@79 $generated@@80 $generated@@81)) ($generated@@246 $generated@@355)) (= ($generated@@77 ($generated@@271 $generated@@354) $generated@@215 $generated@@355) ($generated@@77 ($generated@@8 $generated@@354) $generated@@46 $generated@@355)))
 :pattern ( ($generated@@77 ($generated@@271 $generated@@354) $generated@@215 $generated@@355))
)))
(assert (forall (($generated@@356 T@U) ($generated@@357 T@U) ($generated@@358 T@U) ) (!  (=> (and (and (= (type $generated@@356) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@357) $generated@@67)) (= (type $generated@@358) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@356 ($generated@@230 $generated@@357) $generated@@358) (forall (($generated@@359 T@U) ) (!  (=> (and (= (type $generated@@359) $generated@@148) ($generated@@0 ($generated@@84 $generated@@356 $generated@@359))) ($generated@@247 $generated@@359 $generated@@357 $generated@@358))
 :pattern ( ($generated@@84 $generated@@356 $generated@@359))
))))
 :pattern ( ($generated@@77 $generated@@356 ($generated@@230 $generated@@357) $generated@@358))
)))
(assert (forall (($generated@@360 T@U) ($generated@@361 T@U) ($generated@@362 T@U) ) (!  (=> (and (and (= (type $generated@@360) ($generated@@79 $generated@@148 $generated@@4)) (= (type $generated@@361) $generated@@67)) (= (type $generated@@362) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@360 ($generated@@235 $generated@@361) $generated@@362) (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@148) ($generated@@0 ($generated@@84 $generated@@360 $generated@@363))) ($generated@@247 $generated@@363 $generated@@361 $generated@@362))
 :pattern ( ($generated@@84 $generated@@360 $generated@@363))
))))
 :pattern ( ($generated@@77 $generated@@360 ($generated@@235 $generated@@361) $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 (type $generated@@364)))
(= ($generated ($generated@@84 ($generated@@281 $generated@@365) $generated@@364)) 0))
 :pattern ( (let (($generated@@365 (type $generated@@364)))
($generated@@84 ($generated@@281 $generated@@365) $generated@@364)))
)))
(assert  (and (forall (($generated@@368 T@U) ) (! (= (type ($generated@@366 $generated@@368)) ($generated@@79 $generated@@148 $generated@@4))
 :pattern ( ($generated@@366 $generated@@368))
)) (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@290 (type $generated@@369))))
(let (($generated@@371 ($generated@@289 (type $generated@@369))))
(= (type ($generated@@367 $generated@@369)) ($generated@@79 $generated@@371 $generated@@370))))
 :pattern ( ($generated@@367 $generated@@369))
))))
(assert (forall (($generated@@372 T@U) ($generated@@373 T@U) ) (!  (=> (and (= (type $generated@@372) ($generated@@288 $generated@@148 $generated@@148)) (= (type $generated@@373) $generated@@148)) (= ($generated@@0 ($generated@@84 ($generated@@366 $generated@@372) $generated@@373))  (and ($generated@@0 ($generated@@84 ($generated@@286 $generated@@372) ($generated@@146 ($generated@@325 $generated@@139 $generated@@373)))) (= ($generated@@84 ($generated@@367 $generated@@372) ($generated@@146 ($generated@@325 $generated@@139 $generated@@373))) ($generated@@147 ($generated@@325 $generated@@139 $generated@@373))))))
 :pattern ( ($generated@@84 ($generated@@366 $generated@@372) $generated@@373))
)))
(assert  (and (forall (($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@376)) ($generated@@79 $generated@@148 $generated@@4))
 :pattern ( ($generated@@374 $generated@@376))
)) (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@308 (type $generated@@377))))
(let (($generated@@379 ($generated@@307 (type $generated@@377))))
(= (type ($generated@@375 $generated@@377)) ($generated@@79 $generated@@379 $generated@@378))))
 :pattern ( ($generated@@375 $generated@@377))
))))
(assert (forall (($generated@@380 T@U) ($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@380) ($generated@@306 $generated@@148 $generated@@148)) (= (type $generated@@381) $generated@@148)) (= ($generated@@0 ($generated@@84 ($generated@@374 $generated@@380) $generated@@381))  (and ($generated@@0 ($generated@@84 ($generated@@304 $generated@@380) ($generated@@146 ($generated@@325 $generated@@139 $generated@@381)))) (= ($generated@@84 ($generated@@375 $generated@@380) ($generated@@146 ($generated@@325 $generated@@139 $generated@@381))) ($generated@@147 ($generated@@325 $generated@@139 $generated@@381))))))
 :pattern ( ($generated@@84 ($generated@@374 $generated@@380) $generated@@381))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (! (let (($generated@@384 (type $generated@@383)))
(let (($generated@@385 ($generated@@289 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@288 $generated@@385 $generated@@384)) (= ($generated@@0 ($generated@@84 ($generated@@333 $generated@@382) $generated@@383)) (exists (($generated@@386 T@U) ) (!  (and (= (type $generated@@386) $generated@@385) (and ($generated@@0 ($generated@@84 ($generated@@286 $generated@@382) $generated@@386)) (= $generated@@383 ($generated@@84 ($generated@@367 $generated@@382) $generated@@386))))
 :pattern ( ($generated@@84 ($generated@@286 $generated@@382) $generated@@386))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@382) $generated@@386))
))))))
 :pattern ( ($generated@@84 ($generated@@333 $generated@@382) $generated@@383))
)))
(assert (forall (($generated@@387 T@U) ($generated@@388 T@U) ) (! (let (($generated@@389 (type $generated@@388)))
(let (($generated@@390 ($generated@@307 (type $generated@@387))))
 (=> (= (type $generated@@387) ($generated@@306 $generated@@390 $generated@@389)) (= ($generated@@0 ($generated@@84 ($generated@@344 $generated@@387) $generated@@388)) (exists (($generated@@391 T@U) ) (!  (and (= (type $generated@@391) $generated@@390) (and ($generated@@0 ($generated@@84 ($generated@@304 $generated@@387) $generated@@391)) (= $generated@@388 ($generated@@84 ($generated@@375 $generated@@387) $generated@@391))))
 :pattern ( ($generated@@84 ($generated@@304 $generated@@387) $generated@@391))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@387) $generated@@391))
))))))
 :pattern ( ($generated@@84 ($generated@@344 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@393 $generated@@394)) $generated@@67)
 :pattern ( ($generated@@392 $generated@@393 $generated@@394))
)))
(assert (forall (($generated@@395 T@U) ($generated@@396 T@U) ($generated@@397 T@U) ($generated@@398 T@U) ) (!  (=> (and (and (and (= (type $generated@@395) ($generated@@288 $generated@@148 $generated@@148)) (= (type $generated@@396) $generated@@67)) (= (type $generated@@397) $generated@@67)) (= (type $generated@@398) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398) (forall (($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@399) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@286 $generated@@395) $generated@@399))) (and ($generated@@247 ($generated@@84 ($generated@@367 $generated@@395) $generated@@399) $generated@@397 $generated@@398) ($generated@@247 $generated@@399 $generated@@396 $generated@@398)))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@395) $generated@@399))
 :pattern ( ($generated@@84 ($generated@@286 $generated@@395) $generated@@399))
))))
 :pattern ( ($generated@@77 $generated@@395 ($generated@@392 $generated@@396 $generated@@397) $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@401 $generated@@402)) $generated@@67)
 :pattern ( ($generated@@400 $generated@@401 $generated@@402))
)))
(assert (forall (($generated@@403 T@U) ($generated@@404 T@U) ($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (and (and (= (type $generated@@403) ($generated@@306 $generated@@148 $generated@@148)) (= (type $generated@@404) $generated@@67)) (= (type $generated@@405) $generated@@67)) (= (type $generated@@406) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406) (forall (($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@407) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@304 $generated@@403) $generated@@407))) (and ($generated@@247 ($generated@@84 ($generated@@375 $generated@@403) $generated@@407) $generated@@405 $generated@@406) ($generated@@247 $generated@@407 $generated@@404 $generated@@406)))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@403) $generated@@407))
 :pattern ( ($generated@@84 ($generated@@304 $generated@@403) $generated@@407))
))))
 :pattern ( ($generated@@77 $generated@@403 ($generated@@400 $generated@@404 $generated@@405) $generated@@406))
)))
(assert (forall (($generated@@409 T@T) ) (! (= (type ($generated@@408 $generated@@409)) ($generated@@79 $generated@@409 $generated@@4))
 :pattern ( ($generated@@408 $generated@@409))
)))
(assert (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@308 (type $generated@@410))))
(let (($generated@@412 ($generated@@307 (type $generated@@410))))
 (=> (= (type $generated@@410) ($generated@@306 $generated@@412 $generated@@411)) (= (= $generated@@410 ($generated@@305 $generated@@412 $generated@@411)) (= ($generated@@304 $generated@@410) ($generated@@408 $generated@@412))))))
 :pattern ( ($generated@@304 $generated@@410))
)))
(assert (forall (($generated@@413 T@U) ) (! (let (($generated@@414 ($generated@@308 (type $generated@@413))))
(let (($generated@@415 ($generated@@307 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@306 $generated@@415 $generated@@414)) (= (= $generated@@413 ($generated@@305 $generated@@415 $generated@@414)) (= ($generated@@344 $generated@@413) ($generated@@408 $generated@@414))))))
 :pattern ( ($generated@@344 $generated@@413))
)))
(assert (forall (($generated@@416 T@U) ) (! (let (($generated@@417 ($generated@@308 (type $generated@@416))))
(let (($generated@@418 ($generated@@307 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@306 $generated@@418 $generated@@417)) (= (= $generated@@416 ($generated@@305 $generated@@418 $generated@@417)) (= ($generated@@374 $generated@@416) ($generated@@408 $generated@@148))))))
 :pattern ( ($generated@@374 $generated@@416))
)))
(assert (forall (($generated@@419 T@U) ) (! (let (($generated@@420 ($generated@@290 (type $generated@@419))))
(let (($generated@@421 ($generated@@289 (type $generated@@419))))
 (=> (= (type $generated@@419) ($generated@@288 $generated@@421 $generated@@420)) (or (= $generated@@419 ($generated@@287 $generated@@421 $generated@@420)) (exists (($generated@@422 T@U) ($generated@@423 T@U) ) (!  (and (and (= (type $generated@@422) $generated@@148) (= (type $generated@@423) $generated@@148)) ($generated@@0 ($generated@@84 ($generated@@366 $generated@@419) ($generated@@275 ($generated@@217 $generated@@422 $generated@@423)))))
 :no-pattern (type $generated@@422)
 :no-pattern (type $generated@@423)
 :no-pattern ($generated $generated@@422)
 :no-pattern ($generated@@0 $generated@@422)
 :no-pattern ($generated $generated@@423)
 :no-pattern ($generated@@0 $generated@@423)
))))))
 :pattern ( ($generated@@366 $generated@@419))
)))
(assert (forall (($generated@@424 T@U) ) (! (let (($generated@@425 ($generated@@308 (type $generated@@424))))
(let (($generated@@426 ($generated@@307 (type $generated@@424))))
 (=> (= (type $generated@@424) ($generated@@306 $generated@@426 $generated@@425)) (or (= $generated@@424 ($generated@@305 $generated@@426 $generated@@425)) (exists (($generated@@427 T@U) ($generated@@428 T@U) ) (!  (and (and (= (type $generated@@427) $generated@@148) (= (type $generated@@428) $generated@@148)) ($generated@@0 ($generated@@84 ($generated@@374 $generated@@424) ($generated@@275 ($generated@@217 $generated@@427 $generated@@428)))))
 :no-pattern (type $generated@@427)
 :no-pattern (type $generated@@428)
 :no-pattern ($generated $generated@@427)
 :no-pattern ($generated@@0 $generated@@427)
 :no-pattern ($generated $generated@@428)
 :no-pattern ($generated@@0 $generated@@428)
))))))
 :pattern ( ($generated@@374 $generated@@424))
)))
(assert (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@148) ($generated@@218 $generated@@429 $generated@@46)) (and (= ($generated@@275 ($generated@@325 $generated@@2 $generated@@429)) $generated@@429) ($generated@@135 ($generated@@325 $generated@@2 $generated@@429) $generated@@46)))
 :pattern ( ($generated@@218 $generated@@429 $generated@@46))
)))
(assert (forall (($generated@@430 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@148) ($generated@@218 $generated@@430 $generated@@47)) (and (= ($generated@@275 ($generated@@325 $generated@@3 $generated@@430)) $generated@@430) ($generated@@135 ($generated@@325 $generated@@3 $generated@@430) $generated@@47)))
 :pattern ( ($generated@@218 $generated@@430 $generated@@47))
)))
(assert (forall (($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@431) $generated@@148) ($generated@@218 $generated@@431 $generated@@44)) (and (= ($generated@@275 ($generated@@325 $generated@@4 $generated@@431)) $generated@@431) ($generated@@135 ($generated@@325 $generated@@4 $generated@@431) $generated@@44)))
 :pattern ( ($generated@@218 $generated@@431 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@432) 20))
(assert (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@148) ($generated@@218 $generated@@433 $generated@@45)) (and (= ($generated@@275 ($generated@@325 $generated@@432 $generated@@433)) $generated@@433) ($generated@@135 ($generated@@325 $generated@@432 $generated@@433) $generated@@45)))
 :pattern ( ($generated@@218 $generated@@433 $generated@@45))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (= (type $generated@@435) $generated@@67) (= ($generated@@218 ($generated@@275 $generated@@434) $generated@@435) ($generated@@135 $generated@@434 $generated@@435)))
 :pattern ( ($generated@@218 ($generated@@275 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@82 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@79 $generated@@437 $generated@@2)) (<= 0 ($generated@@280 $generated@@436))))
 :pattern ( ($generated@@280 $generated@@436))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@263 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@262 $generated@@439)) (<= 0 ($generated@@261 $generated@@438))))
 :pattern ( ($generated@@261 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (= (type ($generated@@440 $generated@@441)) $generated@@67)
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@67) (= (type $generated@@443) $generated@@67)) (= ($generated@@440 ($generated@@392 $generated@@442 $generated@@443)) $generated@@442))
 :pattern ( ($generated@@392 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@67)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@67) (= (type $generated@@447) $generated@@67)) (= ($generated@@444 ($generated@@392 $generated@@446 $generated@@447)) $generated@@447))
 :pattern ( ($generated@@392 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (=> (and (= (type $generated@@448) $generated@@67) (= (type $generated@@449) $generated@@67)) (= ($generated@@75 ($generated@@392 $generated@@448 $generated@@449)) $generated@@58))
 :pattern ( ($generated@@392 $generated@@448 $generated@@449))
)))
(assert (forall (($generated@@451 T@U) ) (! (= (type ($generated@@450 $generated@@451)) $generated@@67)
 :pattern ( ($generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@67) (= (type $generated@@453) $generated@@67)) (= ($generated@@450 ($generated@@400 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@400 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@455 T@U) ) (! (= (type ($generated@@454 $generated@@455)) $generated@@67)
 :pattern ( ($generated@@454 $generated@@455))
)))
(assert (forall (($generated@@456 T@U) ($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@67) (= (type $generated@@457) $generated@@67)) (= ($generated@@454 ($generated@@400 $generated@@456 $generated@@457)) $generated@@457))
 :pattern ( ($generated@@400 $generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@67) (= (type $generated@@459) $generated@@67)) (= ($generated@@75 ($generated@@400 $generated@@458 $generated@@459)) $generated@@59))
 :pattern ( ($generated@@400 $generated@@458 $generated@@459))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@460) $generated@@148) (= (type $generated@@461) $generated@@148)) (= ($generated@@253 ($generated@@217 $generated@@460 $generated@@461)) $generated@@61))
 :pattern ( ($generated@@217 $generated@@460 $generated@@461))
)))
(assert (forall (($generated@@463 T@U) ) (! (= (type ($generated@@462 $generated@@463)) $generated@@67)
 :pattern ( ($generated@@462 $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@464) $generated@@67) (= (type $generated@@465) $generated@@67)) (= ($generated@@462 ($generated@@138 $generated@@464 $generated@@465)) $generated@@464))
 :pattern ( ($generated@@138 $generated@@464 $generated@@465))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@67)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@67) (= (type $generated@@469) $generated@@67)) (= ($generated@@466 ($generated@@138 $generated@@468 $generated@@469)) $generated@@469))
 :pattern ( ($generated@@138 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@470) $generated@@148) (= (type $generated@@471) $generated@@148)) (= ($generated@@146 ($generated@@217 $generated@@470 $generated@@471)) $generated@@470))
 :pattern ( ($generated@@217 $generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@148) (= (type $generated@@473) $generated@@148)) (= ($generated@@147 ($generated@@217 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@217 $generated@@472 $generated@@473))
)))
(assert  (and (forall (($generated@@476 T@U) ) (! (= (type ($generated@@474 $generated@@476)) $generated@@67)
 :pattern ( ($generated@@474 $generated@@476))
)) (forall (($generated@@477 T@U) ($generated@@478 Int) ) (! (let (($generated@@479 ($generated@@263 (type $generated@@477))))
(= (type ($generated@@475 $generated@@477 $generated@@478)) $generated@@479))
 :pattern ( ($generated@@475 $generated@@477 $generated@@478))
))))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (and (= (type $generated@@480) ($generated@@262 $generated@@148)) (= (type $generated@@481) $generated@@67)) (= (type $generated@@482) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@480 ($generated@@474 $generated@@481) $generated@@482) (forall (($generated@@483 Int) ) (!  (=> (and (<= 0 $generated@@483) (< $generated@@483 ($generated@@261 $generated@@480))) ($generated@@247 ($generated@@475 $generated@@480 $generated@@483) $generated@@481 $generated@@482))
 :pattern ( ($generated@@475 $generated@@480 $generated@@483))
))))
 :pattern ( ($generated@@77 $generated@@480 ($generated@@474 $generated@@481) $generated@@482))
)))
(assert (forall (($generated@@485 Int) ) (! (= ($generated@@484 ($generated@@78 $generated@@485)) $generated@@485)
 :pattern ( ($generated@@78 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@67)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ) (!  (=> (= (type $generated@@488) $generated@@67) (= ($generated@@486 ($generated@@230 $generated@@488)) $generated@@488))
 :pattern ( ($generated@@230 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ) (!  (=> (= (type $generated@@489) $generated@@67) (= ($generated@@75 ($generated@@230 $generated@@489)) $generated@@54))
 :pattern ( ($generated@@230 $generated@@489))
)))
(assert (forall (($generated@@491 T@U) ) (! (= (type ($generated@@490 $generated@@491)) $generated@@67)
 :pattern ( ($generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ) (!  (=> (= (type $generated@@492) $generated@@67) (= ($generated@@490 ($generated@@235 $generated@@492)) $generated@@492))
 :pattern ( ($generated@@235 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ) (!  (=> (= (type $generated@@493) $generated@@67) (= ($generated@@75 ($generated@@235 $generated@@493)) $generated@@55))
 :pattern ( ($generated@@235 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@67)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ) (!  (=> (= (type $generated@@496) $generated@@67) (= ($generated@@494 ($generated@@153 $generated@@496)) $generated@@496))
 :pattern ( ($generated@@153 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ) (!  (=> (= (type $generated@@497) $generated@@67) (= ($generated@@75 ($generated@@153 $generated@@497)) $generated@@56))
 :pattern ( ($generated@@153 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@67)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ) (!  (=> (= (type $generated@@500) $generated@@67) (= ($generated@@498 ($generated@@474 $generated@@500)) $generated@@500))
 :pattern ( ($generated@@474 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ) (!  (=> (= (type $generated@@501) $generated@@67) (= ($generated@@75 ($generated@@474 $generated@@501)) $generated@@57))
 :pattern ( ($generated@@474 $generated@@501))
)))
(assert (forall (($generated@@502 Int) ) (! (= ($generated@@253 ($generated@@271 $generated@@502)) $generated@@63)
 :pattern ( ($generated@@271 $generated@@502))
)))
(assert (forall (($generated@@503 Int) ) (! (= ($generated@@268 ($generated@@271 $generated@@503)) $generated@@503)
 :pattern ( ($generated@@271 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ) (! (let (($generated@@505 (type $generated@@504)))
(= ($generated@@325 $generated@@505 ($generated@@275 $generated@@504)) $generated@@504))
 :pattern ( ($generated@@275 $generated@@504))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@288 $generated@@148 $generated@@148)) (= (type $generated@@507) $generated@@67)) (= (type $generated@@508) $generated@@67)) (= ($generated@@135 $generated@@506 ($generated@@392 $generated@@507 $generated@@508)) (forall (($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@509) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@286 $generated@@506) $generated@@509))) (and ($generated@@218 ($generated@@84 ($generated@@367 $generated@@506) $generated@@509) $generated@@508) ($generated@@218 $generated@@509 $generated@@507)))
 :pattern ( ($generated@@84 ($generated@@367 $generated@@506) $generated@@509))
 :pattern ( ($generated@@84 ($generated@@286 $generated@@506) $generated@@509))
))))
 :pattern ( ($generated@@135 $generated@@506 ($generated@@392 $generated@@507 $generated@@508)))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ($generated@@512 T@U) ) (!  (=> (and (and (= (type $generated@@510) ($generated@@306 $generated@@148 $generated@@148)) (= (type $generated@@511) $generated@@67)) (= (type $generated@@512) $generated@@67)) (= ($generated@@135 $generated@@510 ($generated@@400 $generated@@511 $generated@@512)) (forall (($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@148) ($generated@@0 ($generated@@84 ($generated@@304 $generated@@510) $generated@@513))) (and ($generated@@218 ($generated@@84 ($generated@@375 $generated@@510) $generated@@513) $generated@@512) ($generated@@218 $generated@@513 $generated@@511)))
 :pattern ( ($generated@@84 ($generated@@375 $generated@@510) $generated@@513))
 :pattern ( ($generated@@84 ($generated@@304 $generated@@510) $generated@@513))
))))
 :pattern ( ($generated@@135 $generated@@510 ($generated@@400 $generated@@511 $generated@@512)))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@148) (= (type $generated@@517) $generated@@148)) (< ($generated@@514 $generated@@516) ($generated@@515 ($generated@@217 $generated@@516 $generated@@517))))
 :pattern ( ($generated@@217 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ) (!  (=> (and (= (type $generated@@518) $generated@@148) (= (type $generated@@519) $generated@@148)) (< ($generated@@514 $generated@@519) ($generated@@515 ($generated@@217 $generated@@518 $generated@@519))))
 :pattern ( ($generated@@217 $generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 Int) ) (! (= ($generated@@135 ($generated@@271 $generated@@520) $generated@@215) ($generated@@135 ($generated@@8 $generated@@520) $generated@@46))
 :pattern ( ($generated@@135 ($generated@@271 $generated@@520) $generated@@215))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (and (and (= (type $generated@@521) $generated@@148) (= (type $generated@@522) $generated@@67)) (= (type $generated@@523) $generated@@67)) ($generated@@218 $generated@@521 ($generated@@392 $generated@@522 $generated@@523))) (and (= ($generated@@275 ($generated@@325 ($generated@@288 $generated@@148 $generated@@148) $generated@@521)) $generated@@521) ($generated@@135 ($generated@@325 ($generated@@288 $generated@@148 $generated@@148) $generated@@521) ($generated@@392 $generated@@522 $generated@@523))))
 :pattern ( ($generated@@218 $generated@@521 ($generated@@392 $generated@@522 $generated@@523)))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ($generated@@526 T@U) ) (!  (=> (and (and (and (= (type $generated@@524) $generated@@148) (= (type $generated@@525) $generated@@67)) (= (type $generated@@526) $generated@@67)) ($generated@@218 $generated@@524 ($generated@@400 $generated@@525 $generated@@526))) (and (= ($generated@@275 ($generated@@325 ($generated@@306 $generated@@148 $generated@@148) $generated@@524)) $generated@@524) ($generated@@135 ($generated@@325 ($generated@@306 $generated@@148 $generated@@148) $generated@@524) ($generated@@400 $generated@@525 $generated@@526))))
 :pattern ( ($generated@@218 $generated@@524 ($generated@@400 $generated@@525 $generated@@526)))
)))
(assert (forall (($generated@@527 T@U) ($generated@@528 T@U) ($generated@@529 T@U) ) (!  (=> (and (and (and (= (type $generated@@527) $generated@@67) (= (type $generated@@528) $generated@@67)) (= (type $generated@@529) $generated@@148)) ($generated@@218 $generated@@529 ($generated@@138 $generated@@527 $generated@@528))) (and (= ($generated@@275 ($generated@@325 $generated@@139 $generated@@529)) $generated@@529) ($generated@@135 ($generated@@325 $generated@@139 $generated@@529) ($generated@@138 $generated@@527 $generated@@528))))
 :pattern ( ($generated@@218 $generated@@529 ($generated@@138 $generated@@527 $generated@@528)))
)))
(assert (forall (($generated@@530 T@U) ) (! (let (($generated@@531 (type $generated@@530)))
 (not ($generated@@0 ($generated@@84 ($generated@@408 $generated@@531) $generated@@530))))
 :pattern ( (let (($generated@@531 (type $generated@@530)))
($generated@@84 ($generated@@408 $generated@@531) $generated@@530)))
)))
(assert (forall (($generated@@533 Int) ($generated@@534 Int) ) (! (= ($generated@@532 $generated@@533 $generated@@534) (mod $generated@@533 $generated@@534))
 :pattern ( ($generated@@532 $generated@@533 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ) (! (= (type ($generated@@535 $generated@@536)) $generated@@72)
 :pattern ( ($generated@@535 $generated@@536))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@67) (= (type $generated@@538) $generated@@67)) (and (= ($generated@@75 ($generated@@138 $generated@@537 $generated@@538)) $generated@@62) (= ($generated@@535 ($generated@@138 $generated@@537 $generated@@538)) $generated@@65)))
 :pattern ( ($generated@@138 $generated@@537 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ) (!  (=> (and (and (= (type $generated@@539) $generated@@139) (= (type $generated@@540) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@246 $generated@@540) (and ($generated@@214 $generated@@539) ($generated@@77 $generated@@539 $generated@@215 $generated@@540)))) ($generated@@77 ($generated@@8 ($generated@@268 $generated@@539)) $generated@@46 $generated@@540))
 :pattern ( ($generated@@77 ($generated@@8 ($generated@@268 $generated@@539)) $generated@@46 $generated@@540))
)))
(assert (forall (($generated@@541 T@U) ) (!  (=> (= (type $generated@@541) $generated@@139) (= ($generated@@514 ($generated@@275 $generated@@541)) ($generated@@515 $generated@@541)))
 :pattern ( ($generated@@514 ($generated@@275 $generated@@541)))
)))
(assert (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@148) ($generated@@218 $generated@@542 ($generated@@78 0))) (and (= ($generated@@275 ($generated@@325 $generated@@2 $generated@@542)) $generated@@542) ($generated@@135 ($generated@@325 ($generated@@79 $generated@@148 $generated@@4) $generated@@542) ($generated@@78 0))))
 :pattern ( ($generated@@218 $generated@@542 ($generated@@78 0)))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ) (!  (=> (and (and (= (type $generated@@543) $generated@@148) (= (type $generated@@544) $generated@@67)) ($generated@@218 $generated@@543 ($generated@@230 $generated@@544))) (and (= ($generated@@275 ($generated@@325 ($generated@@79 $generated@@148 $generated@@4) $generated@@543)) $generated@@543) ($generated@@135 ($generated@@325 ($generated@@79 $generated@@148 $generated@@4) $generated@@543) ($generated@@230 $generated@@544))))
 :pattern ( ($generated@@218 $generated@@543 ($generated@@230 $generated@@544)))
)))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ) (!  (=> (and (and (= (type $generated@@545) $generated@@148) (= (type $generated@@546) $generated@@67)) ($generated@@218 $generated@@545 ($generated@@235 $generated@@546))) (and (= ($generated@@275 ($generated@@325 ($generated@@79 $generated@@148 $generated@@4) $generated@@545)) $generated@@545) ($generated@@135 ($generated@@325 ($generated@@79 $generated@@148 $generated@@4) $generated@@545) ($generated@@235 $generated@@546))))
 :pattern ( ($generated@@218 $generated@@545 ($generated@@235 $generated@@546)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@547) $generated@@148) (= (type $generated@@548) $generated@@67)) ($generated@@218 $generated@@547 ($generated@@153 $generated@@548))) (and (= ($generated@@275 ($generated@@325 ($generated@@79 $generated@@148 $generated@@2) $generated@@547)) $generated@@547) ($generated@@135 ($generated@@325 ($generated@@79 $generated@@148 $generated@@2) $generated@@547) ($generated@@153 $generated@@548))))
 :pattern ( ($generated@@218 $generated@@547 ($generated@@153 $generated@@548)))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (= (type $generated@@549) $generated@@148) (= (type $generated@@550) $generated@@67)) ($generated@@218 $generated@@549 ($generated@@474 $generated@@550))) (and (= ($generated@@275 ($generated@@325 ($generated@@262 $generated@@148) $generated@@549)) $generated@@549) ($generated@@135 ($generated@@325 ($generated@@262 $generated@@148) $generated@@549) ($generated@@474 $generated@@550))))
 :pattern ( ($generated@@218 $generated@@549 ($generated@@474 $generated@@550)))
)))
(assert (= ($generated@@75 $generated@@215) $generated@@64))
(assert (= ($generated@@535 $generated@@215) $generated@@66))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (= (type $generated@@551) ($generated@@79 $generated@@148 $generated@@2)) (= (type $generated@@552) $generated@@67)) (= (type $generated@@553) ($generated@@79 $generated@@80 $generated@@81))) (= ($generated@@77 $generated@@551 ($generated@@153 $generated@@552) $generated@@553) (forall (($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@554) $generated@@148) (< 0 ($generated ($generated@@84 $generated@@551 $generated@@554)))) ($generated@@247 $generated@@554 $generated@@552 $generated@@553))
 :pattern ( ($generated@@84 $generated@@551 $generated@@554))
))))
 :pattern ( ($generated@@77 $generated@@551 ($generated@@153 $generated@@552) $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (and (and (= (type $generated@@555) $generated@@139) (= (type $generated@@556) $generated@@67)) (= (type $generated@@557) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@246 $generated@@557) (and ($generated@@137 $generated@@555) (exists (($generated@@558 T@U) ) (!  (and (= (type $generated@@558) $generated@@67) ($generated@@77 $generated@@555 ($generated@@138 $generated@@556 $generated@@558) $generated@@557))
 :pattern ( ($generated@@77 $generated@@555 ($generated@@138 $generated@@556 $generated@@558) $generated@@557))
))))) ($generated@@247 ($generated@@146 $generated@@555) $generated@@556 $generated@@557))
 :pattern ( ($generated@@247 ($generated@@146 $generated@@555) $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@559 T@U) ($generated@@560 T@U) ($generated@@561 T@U) ) (!  (=> (and (and (and (= (type $generated@@559) $generated@@139) (= (type $generated@@560) $generated@@67)) (= (type $generated@@561) ($generated@@79 $generated@@80 $generated@@81))) (and ($generated@@246 $generated@@561) (and ($generated@@137 $generated@@559) (exists (($generated@@562 T@U) ) (!  (and (= (type $generated@@562) $generated@@67) ($generated@@77 $generated@@559 ($generated@@138 $generated@@562 $generated@@560) $generated@@561))
 :pattern ( ($generated@@77 $generated@@559 ($generated@@138 $generated@@562 $generated@@560) $generated@@561))
))))) ($generated@@247 ($generated@@147 $generated@@559) $generated@@560 $generated@@561))
 :pattern ( ($generated@@247 ($generated@@147 $generated@@559) $generated@@560 $generated@@561))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@148) (= (type $generated@@564) $generated@@148)) (= ($generated@@217 ($generated@@242 $generated@@563) ($generated@@242 $generated@@564)) ($generated@@242 ($generated@@217 $generated@@563 $generated@@564))))
 :pattern ( ($generated@@217 ($generated@@242 $generated@@563) ($generated@@242 $generated@@564)))
)))
(assert (forall (($generated@@565 Int) ) (! (= ($generated@@275 ($generated@@8 ($generated@@240 $generated@@565))) ($generated@@242 ($generated@@275 ($generated@@8 $generated@@565))))
 :pattern ( ($generated@@275 ($generated@@8 ($generated@@240 $generated@@565))))
)))
(assert (forall (($generated@@566 Int) ) (! (= ($generated@@271 ($generated@@240 $generated@@566)) ($generated@@242 ($generated@@271 $generated@@566)))
 :pattern ( ($generated@@271 ($generated@@240 $generated@@566)))
)))
(assert (forall (($generated@@567 T@U) ) (! (= ($generated@@275 ($generated@@242 $generated@@567)) ($generated@@242 ($generated@@275 $generated@@567)))
 :pattern ( ($generated@@275 ($generated@@242 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ) (! (let (($generated@@569 ($generated@@263 (type $generated@@568))))
 (=> (and (= (type $generated@@568) ($generated@@262 $generated@@569)) (= ($generated@@261 $generated@@568) 0)) (= $generated@@568 ($generated@@260 $generated@@569))))
 :pattern ( ($generated@@261 $generated@@568))
)))
(assert (forall (($generated@@570 T@U) ($generated@@571 T@U) ($generated@@572 T@U) ) (! (let (($generated@@573 (type $generated@@571)))
 (=> (and (and (= (type $generated@@570) ($generated@@79 $generated@@573 $generated@@2)) (= (type $generated@@572) $generated@@2)) (<= 0 ($generated $generated@@572))) (= ($generated@@280 ($generated@@85 $generated@@570 $generated@@571 $generated@@572)) (+ (- ($generated@@280 $generated@@570) ($generated ($generated@@84 $generated@@570 $generated@@571))) ($generated $generated@@572)))))
 :pattern ( ($generated@@280 ($generated@@85 $generated@@570 $generated@@571 $generated@@572)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@575) $generated@@2)) ($generated@@77 $generated@@575 $generated@@46 $generated@@574))
 :pattern ( ($generated@@77 $generated@@575 $generated@@46 $generated@@574))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@576) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@577) $generated@@3)) ($generated@@77 $generated@@577 $generated@@47 $generated@@576))
 :pattern ( ($generated@@77 $generated@@577 $generated@@47 $generated@@576))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (= (type $generated@@578) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@579) $generated@@4)) ($generated@@77 $generated@@579 $generated@@44 $generated@@578))
 :pattern ( ($generated@@77 $generated@@579 $generated@@44 $generated@@578))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (= (type $generated@@580) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@581) $generated@@432)) ($generated@@77 $generated@@581 $generated@@45 $generated@@580))
 :pattern ( ($generated@@77 $generated@@581 $generated@@45 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (= (type $generated@@582) ($generated@@79 $generated@@80 $generated@@81)) (= (type $generated@@583) $generated@@148)) ($generated@@77 $generated@@583 $generated@@48 $generated@@582))
 :pattern ( ($generated@@77 $generated@@583 $generated@@48 $generated@@582))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@584) ($generated@@262 $generated@@148)) (= (type $generated@@585) $generated@@67)) (= ($generated@@135 $generated@@584 ($generated@@474 $generated@@585)) (forall (($generated@@586 Int) ) (!  (=> (and (<= 0 $generated@@586) (< $generated@@586 ($generated@@261 $generated@@584))) ($generated@@218 ($generated@@475 $generated@@584 $generated@@586) $generated@@585))
 :pattern ( ($generated@@475 $generated@@584 $generated@@586))
))))
 :pattern ( ($generated@@135 $generated@@584 ($generated@@474 $generated@@585)))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 Int) ) (!  (=> (= (type $generated@@588) ($generated@@262 $generated@@148)) (=> (and (<= 0 $generated@@589) (< $generated@@589 ($generated@@261 $generated@@588))) (< ($generated@@515 ($generated@@325 $generated@@139 ($generated@@475 $generated@@588 $generated@@589))) ($generated@@587 $generated@@588))))
 :pattern ( ($generated@@515 ($generated@@325 $generated@@139 ($generated@@475 $generated@@588 $generated@@589))))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) ($generated@@288 $generated@@148 $generated@@148)) (= (type $generated@@591) $generated@@67)) (= (type $generated@@592) $generated@@67)) ($generated@@135 $generated@@590 ($generated@@392 $generated@@591 $generated@@592))) (and (and ($generated@@135 ($generated@@286 $generated@@590) ($generated@@230 $generated@@591)) ($generated@@135 ($generated@@333 $generated@@590) ($generated@@230 $generated@@592))) ($generated@@135 ($generated@@366 $generated@@590) ($generated@@230 ($generated@@138 $generated@@591 $generated@@592)))))
 :pattern ( ($generated@@135 $generated@@590 ($generated@@392 $generated@@591 $generated@@592)))
)))
(assert (forall (($generated@@593 T@U) ($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (and (and (= (type $generated@@593) ($generated@@306 $generated@@148 $generated@@148)) (= (type $generated@@594) $generated@@67)) (= (type $generated@@595) $generated@@67)) ($generated@@135 $generated@@593 ($generated@@400 $generated@@594 $generated@@595))) (and (and ($generated@@135 ($generated@@304 $generated@@593) ($generated@@235 $generated@@594)) ($generated@@135 ($generated@@344 $generated@@593) ($generated@@235 $generated@@595))) ($generated@@135 ($generated@@374 $generated@@593) ($generated@@235 ($generated@@138 $generated@@594 $generated@@595)))))
 :pattern ( ($generated@@135 $generated@@593 ($generated@@400 $generated@@594 $generated@@595)))
)))
(assert (forall (($generated@@596 T@U) ) (!  (=> (= (type $generated@@596) $generated@@2) ($generated@@135 $generated@@596 $generated@@46))
 :pattern ( ($generated@@135 $generated@@596 $generated@@46))
)))
(assert (forall (($generated@@597 T@U) ) (!  (=> (= (type $generated@@597) $generated@@3) ($generated@@135 $generated@@597 $generated@@47))
 :pattern ( ($generated@@135 $generated@@597 $generated@@47))
)))
(assert (forall (($generated@@598 T@U) ) (!  (=> (= (type $generated@@598) $generated@@4) ($generated@@135 $generated@@598 $generated@@44))
 :pattern ( ($generated@@135 $generated@@598 $generated@@44))
)))
(assert (forall (($generated@@599 T@U) ) (!  (=> (= (type $generated@@599) $generated@@432) ($generated@@135 $generated@@599 $generated@@45))
 :pattern ( ($generated@@135 $generated@@599 $generated@@45))
)))
(assert (forall (($generated@@600 T@U) ) (!  (=> (= (type $generated@@600) $generated@@148) ($generated@@135 $generated@@600 $generated@@48))
 :pattern ( ($generated@@135 $generated@@600 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@601 () T@U)
(declare-fun $generated@@602 () T@U)
(declare-fun $generated@@603 () T@U)
(declare-fun $generated@@604 () T@U)
(declare-fun $generated@@605 (T@U) Bool)
(declare-fun $generated@@606 () Int)
(assert  (and (and (and (= (type $generated@@601) $generated@@139) (= (type $generated@@602) ($generated@@160 $generated@@80 $generated@@4))) (= (type $generated@@603) $generated@@80)) (= (type $generated@@604) ($generated@@79 $generated@@80 $generated@@81))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@607  (=> (and ($generated@@214 ($generated@@242 ($generated@@271 ($generated@@240 0)))) (= (ControlFlow 0 4) (- 0 3))) (= ($generated@@240 ($generated@@532 ($generated@@268 ($generated@@242 ($generated@@271 ($generated@@240 0)))) ($generated@@240 2))) ($generated@@240 0)))))
(let (($generated@@608  (=> (and ($generated@@214 $generated@@601) (= (ControlFlow 0 2) (- 0 1))) (not (= ($generated@@240 2) 0)))))
(let (($generated@@609  (=> (= $generated@@602 ($generated@@159 $generated@@603 $generated@@604 $generated@@60 false)) (and (=> (= (ControlFlow 0 5) 2) $generated@@608) (=> (= (ControlFlow 0 5) 4) $generated@@607)))))
(let (($generated@@610  (=> (and (and (and ($generated@@246 $generated@@604) ($generated@@605 $generated@@604)) ($generated@@135 $generated@@601 $generated@@215)) (and (= 1 $generated@@606) (= (ControlFlow 0 6) 5))) $generated@@609)))
$generated@@610)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@139 () Int)
(declare-fun $generated@@140 (T@U) Int)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) T@U)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@165 (T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T) T@T)
(declare-fun $generated@@169 (T@T) T@T)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@236 (T@U) Bool)
(declare-fun $generated@@238 (T@U T@U) T@U)
(declare-fun $generated@@239 (T@U T@U) Bool)
(declare-fun $generated@@248 (T@U T@U) Bool)
(declare-fun $generated@@251 (T@U) T@U)
(declare-fun $generated@@256 (T@U) T@U)
(declare-fun $generated@@261 (Int) Int)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@267 (T@U) Bool)
(declare-fun $generated@@268 (T@U T@U T@U) Bool)
(declare-fun $generated@@274 (T@U) T@U)
(declare-fun $generated@@281 (T@T) T@U)
(declare-fun $generated@@282 (T@U) Int)
(declare-fun $generated@@283 (T@T) T@T)
(declare-fun $generated@@284 (T@T) T@T)
(declare-fun $generated@@289 (T@U) Int)
(declare-fun $generated@@292 (Int) T@U)
(declare-fun $generated@@296 (T@U) T@U)
(declare-fun $generated@@301 (T@U) Int)
(declare-fun $generated@@302 (T@T) T@U)
(declare-fun $generated@@307 (T@U) T@U)
(declare-fun $generated@@308 (T@T T@T) T@U)
(declare-fun $generated@@309 (T@T T@T) T@T)
(declare-fun $generated@@310 (T@T) T@T)
(declare-fun $generated@@311 (T@T) T@T)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@326 (T@T T@T) T@U)
(declare-fun $generated@@327 (T@T T@T) T@T)
(declare-fun $generated@@328 (T@T) T@T)
(declare-fun $generated@@329 (T@T) T@T)
(declare-fun $generated@@346 (T@T T@U) T@U)
(declare-fun $generated@@355 (T@U) T@U)
(declare-fun $generated@@366 (T@U) T@U)
(declare-fun $generated@@388 (T@U) T@U)
(declare-fun $generated@@389 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@397 (T@U) T@U)
(declare-fun $generated@@414 (T@U T@U) T@U)
(declare-fun $generated@@422 (T@U T@U) T@U)
(declare-fun $generated@@430 (Int Int) Int)
(declare-fun $generated@@433 (T@T) T@U)
(declare-fun $generated@@454 (Int Int) Int)
(declare-fun $generated@@455 (Int Int) Int)
(declare-fun $generated@@460 () T@T)
(declare-fun $generated@@469 (T@U) T@U)
(declare-fun $generated@@473 (T@U) T@U)
(declare-fun $generated@@479 (T@U) T@U)
(declare-fun $generated@@483 (T@U) T@U)
(declare-fun $generated@@491 (T@U) T@U)
(declare-fun $generated@@495 (T@U) T@U)
(declare-fun $generated@@503 (T@U) T@U)
(declare-fun $generated@@504 (T@U Int) T@U)
(declare-fun $generated@@513 (T@U) Int)
(declare-fun $generated@@515 (T@U) T@U)
(declare-fun $generated@@519 (T@U) T@U)
(declare-fun $generated@@523 (T@U) T@U)
(declare-fun $generated@@527 (T@U) T@U)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@564 (T@U) T@U)
(declare-fun $generated@@618 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@69) 6) (= (type $generated@@44) $generated@@69)) (= (type $generated@@45) $generated@@69)) (= (type $generated@@46) $generated@@69)) (= (type $generated@@47) $generated@@69)) (= (type $generated@@48) $generated@@69)) (= ($generated@@1 $generated@@70) 7)) (= (type $generated@@49) $generated@@70)) (= (type $generated@@50) $generated@@70)) (= (type $generated@@51) $generated@@70)) (= (type $generated@@52) $generated@@70)) (= (type $generated@@53) $generated@@70)) (= (type $generated@@54) $generated@@70)) (= (type $generated@@55) $generated@@70)) (= (type $generated@@56) $generated@@70)) (= (type $generated@@57) $generated@@70)) (= (type $generated@@58) $generated@@70)) (= (type $generated@@59) $generated@@70)) (forall (($generated@@75 T@T) ) (= ($generated@@1 ($generated@@71 $generated@@75)) 8))) (forall (($generated@@76 T@T) ) (! (= ($generated@@72 ($generated@@71 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@71 $generated@@76))
))) (= (type $generated@@60) ($generated@@71 $generated@@4))) (= ($generated@@1 $generated@@73) 9)) (= (type $generated@@61) $generated@@73)) (= (type $generated@@62) $generated@@70)) (= (type $generated@@63) $generated@@73)) (= (type $generated@@64) $generated@@70)) (= (type $generated@@65) $generated@@70)) (= ($generated@@1 $generated@@74) 10)) (= (type $generated@@66) $generated@@74)) (= (type $generated@@67) $generated@@74)) (= (type $generated@@68) $generated@@74)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68)
)
(assert (forall (($generated@@78 T@U) ) (! (= (type ($generated@@77 $generated@@78)) $generated@@70)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (= ($generated@@77 $generated@@44) $generated@@49))
(assert (= ($generated@@77 $generated@@45) $generated@@50))
(assert (= ($generated@@77 $generated@@46) $generated@@51))
(assert (= ($generated@@77 $generated@@47) $generated@@52))
(assert (= ($generated@@77 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ) (= ($generated@@1 ($generated@@81 $generated@@90 $generated@@91)) 11)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@81 $generated@@92 $generated@@93))
))) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@81 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (let (($generated@@98 ($generated@@85 (type $generated@@96))))
(= (type ($generated@@86 $generated@@96 $generated@@97)) $generated@@98))
 :pattern ( ($generated@@86 $generated@@96 $generated@@97))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 (type $generated@@101)))
(let (($generated@@103 (type $generated@@100)))
(= (type ($generated@@87 $generated@@99 $generated@@100 $generated@@101)) ($generated@@81 $generated@@103 $generated@@102))))
 :pattern ( ($generated@@87 $generated@@99 $generated@@100 $generated@@101))
))) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (let (($generated@@107 ($generated@@85 (type $generated@@104))))
 (=> (= (type $generated@@106) $generated@@107) (= ($generated@@86 ($generated@@87 $generated@@104 $generated@@105 $generated@@106) $generated@@105) $generated@@106)))
 :weight 0
))) (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@110 $generated@@111) (= ($generated@@86 ($generated@@87 $generated@@109 $generated@@110 $generated@@108) $generated@@111) ($generated@@86 $generated@@109 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or true (= ($generated@@86 ($generated@@87 $generated@@113 $generated@@114 $generated@@112) $generated@@115) ($generated@@86 $generated@@113 $generated@@115)))
 :weight 0
)))) (= ($generated@@1 $generated@@82) 12)) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (let (($generated@@118 ($generated@@72 (type $generated@@117))))
(= (type ($generated@@88 $generated@@116 $generated@@117)) $generated@@118))
 :pattern ( ($generated@@88 $generated@@116 $generated@@117))
))) (= ($generated@@1 $generated@@83) 13)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= (type ($generated@@89 $generated@@119 $generated@@120 $generated@@121)) $generated@@83)
 :pattern ( ($generated@@89 $generated@@119 $generated@@120 $generated@@121))
))) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (let (($generated@@125 ($generated@@72 (type $generated@@123))))
 (=> (= (type $generated@@124) $generated@@125) (= ($generated@@88 ($generated@@89 $generated@@122 $generated@@123 $generated@@124) $generated@@123) $generated@@124)))
 :weight 0
))) (and (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@88 ($generated@@89 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@88 $generated@@127 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@88 $generated@@131 $generated@@133)))
 :weight 0
)))) (forall (($generated@@134 Int) ) (! (= (type ($generated@@80 $generated@@134)) $generated@@69)
 :pattern ( ($generated@@80 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (= (type $generated@@135) $generated@@2) (= (type $generated@@136) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
 :pattern ( ($generated@@79 $generated@@135 ($generated@@80 0) $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> (= (type $generated@@138) $generated@@2) ($generated@@137 $generated@@138 ($generated@@80 0)))
 :pattern ( ($generated@@137 $generated@@138 ($generated@@80 0)))
)))
(assert  (and (= ($generated@@1 $generated@@141) 14) (= (type $generated@@143) $generated@@69)))
(assert  (=> (<= 2 $generated@@139) (forall (($generated@@144 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@141) (or ($generated@@142 $generated@@144) (and (not (= 2 $generated@@139)) ($generated@@137 $generated@@144 $generated@@143)))) true)
 :pattern ( ($generated@@140 $generated@@144))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= (type ($generated@@146 $generated@@147 $generated@@148)) $generated@@69)
 :pattern ( ($generated@@146 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and (and (and (= (type $generated@@149) $generated@@69) (= (type $generated@@150) $generated@@69)) (= (type $generated@@151) $generated@@141)) ($generated@@137 $generated@@151 ($generated@@146 $generated@@149 $generated@@150))) ($generated@@145 $generated@@151))
 :pattern ( ($generated@@145 $generated@@151) ($generated@@137 $generated@@151 ($generated@@146 $generated@@149 $generated@@150)))
)))
(assert  (and (and (= ($generated@@1 $generated@@155) 15) (forall (($generated@@156 T@U) ) (! (= (type ($generated@@153 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@153 $generated@@156))
))) (forall (($generated@@157 T@U) ) (! (= (type ($generated@@154 $generated@@157)) $generated@@155)
 :pattern ( ($generated@@154 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (= (type $generated@@158) $generated@@141) (= (type $generated@@159) $generated@@141)) true) (= ($generated@@152 $generated@@158 $generated@@159)  (and (= ($generated@@153 $generated@@158) ($generated@@153 $generated@@159)) (= ($generated@@154 $generated@@158) ($generated@@154 $generated@@159)))))
 :pattern ( ($generated@@152 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (! (= (type ($generated@@160 $generated@@162)) $generated@@69)
 :pattern ( ($generated@@160 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (= (type $generated@@163) ($generated@@81 $generated@@155 $generated@@2)) (= (type $generated@@164) $generated@@69)) ($generated@@137 $generated@@163 ($generated@@160 $generated@@164))) ($generated@@161 $generated@@163))
 :pattern ( ($generated@@137 $generated@@163 ($generated@@160 $generated@@164)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@1 ($generated@@167 $generated@@171 $generated@@172)) 16)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@168 ($generated@@167 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@167 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@169 ($generated@@167 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@167 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (let (($generated@@180 ($generated@@169 (type $generated@@177))))
(= (type ($generated@@165 $generated@@177 $generated@@178 $generated@@179)) $generated@@180))
 :pattern ( ($generated@@165 $generated@@177 $generated@@178 $generated@@179))
))) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (let (($generated@@185 (type $generated@@184)))
(let (($generated@@186 (type $generated@@182)))
(= (type ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184)) ($generated@@167 $generated@@186 $generated@@185))))
 :pattern ( ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@184))
))) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (let (($generated@@191 ($generated@@169 (type $generated@@187))))
 (=> (= (type $generated@@190) $generated@@191) (= ($generated@@165 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@188 $generated@@189) $generated@@190)))
 :weight 0
))) (and (and (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@165 ($generated@@170 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@165 ($generated@@170 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@165 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
))) (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or true (= ($generated@@165 ($generated@@170 $generated@@205 $generated@@206 $generated@@207 $generated@@204) $generated@@208 $generated@@209) ($generated@@165 $generated@@205 $generated@@208 $generated@@209)))
 :weight 0
)))) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ) (! (= (type ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213)) ($generated@@167 $generated@@82 $generated@@4))
 :pattern ( ($generated@@166 $generated@@210 $generated@@211 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (let (($generated@@220 ($generated@@72 (type $generated@@219))))
 (=> (and (and (and (and (= (type $generated@@214) $generated@@82) (= (type $generated@@215) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@216) ($generated@@71 $generated@@4))) (= (type $generated@@218) $generated@@82)) (= (type $generated@@219) ($generated@@71 $generated@@220))) (= ($generated@@0 ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (not (= $generated@@218 $generated@@214)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@215 $generated@@218) $generated@@216))) $generated@@217))))
 :pattern ( ($generated@@165 ($generated@@166 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ) (! (= (type ($generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225)) ($generated@@167 $generated@@82 $generated@@4))
 :pattern ( ($generated@@221 $generated@@222 $generated@@223 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 Bool) ($generated@@230 T@U) ($generated@@231 T@U) ) (! (let (($generated@@232 ($generated@@72 (type $generated@@231))))
 (=> (and (and (and (and (= (type $generated@@226) $generated@@82) (= (type $generated@@227) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@228) ($generated@@71 $generated@@4))) (= (type $generated@@230) $generated@@82)) (= (type $generated@@231) ($generated@@71 $generated@@232))) (= ($generated@@0 ($generated@@165 ($generated@@221 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))  (=> (and (not (= $generated@@230 $generated@@226)) ($generated@@0 ($generated@@88 ($generated@@86 $generated@@227 $generated@@230) $generated@@228))) $generated@@229))))
 :pattern ( ($generated@@165 ($generated@@221 $generated@@226 $generated@@227 $generated@@228 $generated@@229) $generated@@230 $generated@@231))
)))
(assert (= (type $generated@@233) $generated@@69))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (= (type $generated@@234) $generated@@141) (= (type $generated@@235) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@234 $generated@@143 $generated@@235) ($generated@@79 $generated@@234 $generated@@233 $generated@@235)))
 :pattern ( ($generated@@79 $generated@@234 $generated@@143 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ) (!  (=> (and (= (type $generated@@237) $generated@@141) ($generated@@137 $generated@@237 $generated@@233)) ($generated@@236 $generated@@237))
 :pattern ( ($generated@@236 $generated@@237) ($generated@@137 $generated@@237 $generated@@233))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= (type ($generated@@238 $generated@@240 $generated@@241)) $generated@@141)
 :pattern ( ($generated@@238 $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (= (type $generated@@242) $generated@@69) (= (type $generated@@243) $generated@@69)) (= (type $generated@@244) $generated@@155)) (= (type $generated@@245) $generated@@155)) (= ($generated@@137 ($generated@@238 $generated@@244 $generated@@245) ($generated@@146 $generated@@242 $generated@@243))  (and ($generated@@239 $generated@@244 $generated@@242) ($generated@@239 $generated@@245 $generated@@243))))
 :pattern ( ($generated@@137 ($generated@@238 $generated@@244 $generated@@245) ($generated@@146 $generated@@242 $generated@@243)))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@141) (= (type $generated@@247) $generated@@141)) (= ($generated@@152 $generated@@246 $generated@@247) (= $generated@@246 $generated@@247)))
 :pattern ( ($generated@@152 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@141) (= (type $generated@@250) $generated@@141)) (= ($generated@@248 $generated@@249 $generated@@250) (= $generated@@249 $generated@@250)))
 :pattern ( ($generated@@248 $generated@@249 $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ) (! (= (type ($generated@@251 $generated@@252)) $generated@@69)
 :pattern ( ($generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and (= (type $generated@@253) ($generated@@81 $generated@@155 $generated@@4)) (= (type $generated@@254) $generated@@69)) (= ($generated@@137 $generated@@253 ($generated@@251 $generated@@254)) (forall (($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@255) $generated@@155) ($generated@@0 ($generated@@86 $generated@@253 $generated@@255))) ($generated@@239 $generated@@255 $generated@@254))
 :pattern ( ($generated@@86 $generated@@253 $generated@@255))
))))
 :pattern ( ($generated@@137 $generated@@253 ($generated@@251 $generated@@254)))
)))
(assert (forall (($generated@@257 T@U) ) (! (= (type ($generated@@256 $generated@@257)) $generated@@69)
 :pattern ( ($generated@@256 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and (= (type $generated@@258) ($generated@@81 $generated@@155 $generated@@4)) (= (type $generated@@259) $generated@@69)) (= ($generated@@137 $generated@@258 ($generated@@256 $generated@@259)) (forall (($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@260) $generated@@155) ($generated@@0 ($generated@@86 $generated@@258 $generated@@260))) ($generated@@239 $generated@@260 $generated@@259))
 :pattern ( ($generated@@86 $generated@@258 $generated@@260))
))))
 :pattern ( ($generated@@137 $generated@@258 ($generated@@256 $generated@@259)))
)))
(assert (forall (($generated@@262 Int) ) (! (= ($generated@@261 $generated@@262) $generated@@262)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ) (! (let (($generated@@265 (type $generated@@264)))
(= (type ($generated@@263 $generated@@264)) $generated@@265))
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@266 T@U) ) (! (= ($generated@@263 $generated@@266) $generated@@266)
 :pattern ( ($generated@@263 $generated@@266))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@269) $generated@@69) (= (type $generated@@270) $generated@@69)) (= (type $generated@@271) $generated@@155)) (= (type $generated@@272) $generated@@155)) (= (type $generated@@273) ($generated@@81 $generated@@82 $generated@@83))) ($generated@@267 $generated@@273)) (= ($generated@@79 ($generated@@238 $generated@@271 $generated@@272) ($generated@@146 $generated@@269 $generated@@270) $generated@@273)  (and ($generated@@268 $generated@@271 $generated@@269 $generated@@273) ($generated@@268 $generated@@272 $generated@@270 $generated@@273))))
 :pattern ( ($generated@@79 ($generated@@238 $generated@@271 $generated@@272) ($generated@@146 $generated@@269 $generated@@270) $generated@@273))
)))
(assert (forall (($generated@@275 T@U) ) (! (= (type ($generated@@274 $generated@@275)) $generated@@73)
 :pattern ( ($generated@@274 $generated@@275))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= (type $generated@@276) $generated@@141) (= ($generated@@145 $generated@@276) (= ($generated@@274 $generated@@276) $generated@@61)))
 :pattern ( ($generated@@145 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ) (!  (=> (= (type $generated@@277) $generated@@141) (= ($generated@@236 $generated@@277) (= ($generated@@274 $generated@@277) $generated@@63)))
 :pattern ( ($generated@@236 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ) (!  (=> (and (= (type $generated@@278) $generated@@141) ($generated@@145 $generated@@278)) (exists (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (and (= (type $generated@@279) $generated@@155) (= (type $generated@@280) $generated@@155)) (= $generated@@278 ($generated@@238 $generated@@279 $generated@@280)))
 :no-pattern (type $generated@@279)
 :no-pattern (type $generated@@280)
 :no-pattern ($generated $generated@@279)
 :no-pattern ($generated@@0 $generated@@279)
 :no-pattern ($generated $generated@@280)
 :no-pattern ($generated@@0 $generated@@280)
)))
 :pattern ( ($generated@@145 $generated@@278))
)))
(assert  (and (and (forall (($generated@@285 T@T) ) (= ($generated@@1 ($generated@@283 $generated@@285)) 17)) (forall (($generated@@286 T@T) ) (! (= ($generated@@284 ($generated@@283 $generated@@286)) $generated@@286)
 :pattern ( ($generated@@283 $generated@@286))
))) (forall (($generated@@287 T@T) ) (! (= (type ($generated@@281 $generated@@287)) ($generated@@283 $generated@@287))
 :pattern ( ($generated@@281 $generated@@287))
))))
(assert (forall (($generated@@288 T@T) ) (! (= ($generated@@282 ($generated@@281 $generated@@288)) 0)
 :pattern ( ($generated@@281 $generated@@288))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (and (and (= (type $generated@@290) $generated@@141) (= (type $generated@@291) $generated@@141)) true) (= ($generated@@248 $generated@@290 $generated@@291) (= ($generated@@289 $generated@@290) ($generated@@289 $generated@@291))))
 :pattern ( ($generated@@248 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@293 Int) ) (! (= (type ($generated@@292 $generated@@293)) $generated@@141)
 :pattern ( ($generated@@292 $generated@@293))
)))
(assert (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@141) ($generated@@236 $generated@@294)) (exists (($generated@@295 Int) ) (= $generated@@294 ($generated@@292 $generated@@295))))
 :pattern ( ($generated@@236 $generated@@294))
)))
(assert (forall (($generated@@297 T@U) ) (! (= (type ($generated@@296 $generated@@297)) $generated@@155)
 :pattern ( ($generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@69) (= (type $generated@@300) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@268 ($generated@@296 $generated@@298) $generated@@299 $generated@@300) ($generated@@79 $generated@@298 $generated@@299 $generated@@300)))
 :pattern ( ($generated@@268 ($generated@@296 $generated@@298) $generated@@299 $generated@@300))
)))
(assert (forall (($generated@@303 T@T) ) (! (= (type ($generated@@302 $generated@@303)) ($generated@@81 $generated@@303 $generated@@2))
 :pattern ( ($generated@@302 $generated@@303))
)))
(assert (forall (($generated@@304 T@U) ) (! (let (($generated@@305 ($generated@@84 (type $generated@@304))))
 (=> (= (type $generated@@304) ($generated@@81 $generated@@305 $generated@@2)) (and (= (= ($generated@@301 $generated@@304) 0) (= $generated@@304 ($generated@@302 $generated@@305))) (=> (not (= ($generated@@301 $generated@@304) 0)) (exists (($generated@@306 T@U) ) (!  (and (= (type $generated@@306) $generated@@305) (< 0 ($generated ($generated@@86 $generated@@304 $generated@@306))))
 :no-pattern (type $generated@@306)
 :no-pattern ($generated $generated@@306)
 :no-pattern ($generated@@0 $generated@@306)
))))))
 :pattern ( ($generated@@301 $generated@@304))
)))
(assert  (and (and (and (and (forall (($generated@@312 T@T) ($generated@@313 T@T) ) (= ($generated@@1 ($generated@@309 $generated@@312 $generated@@313)) 18)) (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (! (= ($generated@@310 ($generated@@309 $generated@@314 $generated@@315)) $generated@@314)
 :pattern ( ($generated@@309 $generated@@314 $generated@@315))
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@311 ($generated@@309 $generated@@316 $generated@@317)) $generated@@317)
 :pattern ( ($generated@@309 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@U) ) (! (let (($generated@@319 ($generated@@310 (type $generated@@318))))
(= (type ($generated@@307 $generated@@318)) ($generated@@81 $generated@@319 $generated@@4)))
 :pattern ( ($generated@@307 $generated@@318))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= (type ($generated@@308 $generated@@320 $generated@@321)) ($generated@@309 $generated@@320 $generated@@321))
 :pattern ( ($generated@@308 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@T) ) (! (let (($generated@@324 (type $generated@@322)))
 (not ($generated@@0 ($generated@@86 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322))))
 :pattern ( (let (($generated@@324 (type $generated@@322)))
($generated@@86 ($generated@@307 ($generated@@308 $generated@@324 $generated@@323)) $generated@@322)))
)))
(assert  (and (and (and (and (forall (($generated@@330 T@T) ($generated@@331 T@T) ) (= ($generated@@1 ($generated@@327 $generated@@330 $generated@@331)) 19)) (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (! (= ($generated@@328 ($generated@@327 $generated@@332 $generated@@333)) $generated@@332)
 :pattern ( ($generated@@327 $generated@@332 $generated@@333))
))) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@329 ($generated@@327 $generated@@334 $generated@@335)) $generated@@335)
 :pattern ( ($generated@@327 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@U) ) (! (let (($generated@@337 ($generated@@328 (type $generated@@336))))
(= (type ($generated@@325 $generated@@336)) ($generated@@81 $generated@@337 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@336))
))) (forall (($generated@@338 T@T) ($generated@@339 T@T) ) (! (= (type ($generated@@326 $generated@@338 $generated@@339)) ($generated@@327 $generated@@338 $generated@@339))
 :pattern ( ($generated@@326 $generated@@338 $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@T) ) (! (let (($generated@@342 (type $generated@@340)))
 (not ($generated@@0 ($generated@@86 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340))))
 :pattern ( (let (($generated@@342 (type $generated@@340)))
($generated@@86 ($generated@@325 ($generated@@326 $generated@@342 $generated@@341)) $generated@@340)))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 ($generated@@84 (type $generated@@343))))
 (=> (= (type $generated@@343) ($generated@@81 $generated@@344 $generated@@2)) (= ($generated@@161 $generated@@343) (forall (($generated@@345 T@U) ) (!  (=> (= (type $generated@@345) $generated@@344) (and (<= 0 ($generated ($generated@@86 $generated@@343 $generated@@345))) (<= ($generated ($generated@@86 $generated@@343 $generated@@345)) ($generated@@301 $generated@@343))))
 :pattern ( ($generated@@86 $generated@@343 $generated@@345))
)))))
 :pattern ( ($generated@@161 $generated@@343))
)))
(assert (forall (($generated@@347 T@T) ($generated@@348 T@U) ) (! (= (type ($generated@@346 $generated@@347 $generated@@348)) $generated@@347)
 :pattern ( ($generated@@346 $generated@@347 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ) (!  (=> (and (= (type $generated@@349) $generated@@155) ($generated@@239 $generated@@349 $generated@@233)) (and (= ($generated@@296 ($generated@@346 $generated@@141 $generated@@349)) $generated@@349) ($generated@@137 ($generated@@346 $generated@@141 $generated@@349) $generated@@233)))
 :pattern ( ($generated@@239 $generated@@349 $generated@@233))
)))
(assert (forall (($generated@@350 T@U) ) (!  (=> (and (= (type $generated@@350) $generated@@155) ($generated@@239 $generated@@350 $generated@@143)) (and (= ($generated@@296 ($generated@@346 $generated@@141 $generated@@350)) $generated@@350) ($generated@@137 ($generated@@346 $generated@@141 $generated@@350) $generated@@143)))
 :pattern ( ($generated@@239 $generated@@350 $generated@@143))
)))
(assert (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@311 (type $generated@@351))))
(let (($generated@@353 ($generated@@310 (type $generated@@351))))
 (=> (= (type $generated@@351) ($generated@@309 $generated@@353 $generated@@352)) (or (= $generated@@351 ($generated@@308 $generated@@353 $generated@@352)) (exists (($generated@@354 T@U) ) (!  (and (= (type $generated@@354) $generated@@353) ($generated@@0 ($generated@@86 ($generated@@307 $generated@@351) $generated@@354)))
 :no-pattern (type $generated@@354)
 :no-pattern ($generated $generated@@354)
 :no-pattern ($generated@@0 $generated@@354)
))))))
 :pattern ( ($generated@@307 $generated@@351))
)))
(assert (forall (($generated@@356 T@U) ) (! (let (($generated@@357 ($generated@@311 (type $generated@@356))))
(= (type ($generated@@355 $generated@@356)) ($generated@@81 $generated@@357 $generated@@4)))
 :pattern ( ($generated@@355 $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ) (! (let (($generated@@359 ($generated@@311 (type $generated@@358))))
(let (($generated@@360 ($generated@@310 (type $generated@@358))))
 (=> (= (type $generated@@358) ($generated@@309 $generated@@360 $generated@@359)) (or (= $generated@@358 ($generated@@308 $generated@@360 $generated@@359)) (exists (($generated@@361 T@U) ) (!  (and (= (type $generated@@361) $generated@@359) ($generated@@0 ($generated@@86 ($generated@@355 $generated@@358) $generated@@361)))
 :no-pattern (type $generated@@361)
 :no-pattern ($generated $generated@@361)
 :no-pattern ($generated@@0 $generated@@361)
))))))
 :pattern ( ($generated@@355 $generated@@358))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@329 (type $generated@@362))))
(let (($generated@@364 ($generated@@328 (type $generated@@362))))
 (=> (= (type $generated@@362) ($generated@@327 $generated@@364 $generated@@363)) (or (= $generated@@362 ($generated@@326 $generated@@364 $generated@@363)) (exists (($generated@@365 T@U) ) (!  (and (= (type $generated@@365) $generated@@364) ($generated@@0 ($generated@@86 ($generated@@325 $generated@@362) $generated@@365)))
 :no-pattern (type $generated@@365)
 :no-pattern ($generated $generated@@365)
 :no-pattern ($generated@@0 $generated@@365)
))))))
 :pattern ( ($generated@@325 $generated@@362))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@329 (type $generated@@367))))
(= (type ($generated@@366 $generated@@367)) ($generated@@81 $generated@@368 $generated@@4)))
 :pattern ( ($generated@@366 $generated@@367))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@329 (type $generated@@369))))
(let (($generated@@371 ($generated@@328 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@327 $generated@@371 $generated@@370)) (or (= $generated@@369 ($generated@@326 $generated@@371 $generated@@370)) (exists (($generated@@372 T@U) ) (!  (and (= (type $generated@@372) $generated@@370) ($generated@@0 ($generated@@86 ($generated@@366 $generated@@369) $generated@@372)))
 :no-pattern (type $generated@@372)
 :no-pattern ($generated $generated@@372)
 :no-pattern ($generated@@0 $generated@@372)
))))))
 :pattern ( ($generated@@366 $generated@@369))
)))
(assert (forall (($generated@@373 T@U) ($generated@@374 T@U) ) (!  (=> (and (= (type $generated@@373) ($generated@@81 $generated@@155 $generated@@2)) (= (type $generated@@374) $generated@@69)) (= ($generated@@137 $generated@@373 ($generated@@160 $generated@@374)) (forall (($generated@@375 T@U) ) (!  (=> (and (= (type $generated@@375) $generated@@155) (< 0 ($generated ($generated@@86 $generated@@373 $generated@@375)))) ($generated@@239 $generated@@375 $generated@@374))
 :pattern ( ($generated@@86 $generated@@373 $generated@@375))
))))
 :pattern ( ($generated@@137 $generated@@373 ($generated@@160 $generated@@374)))
)))
(assert (forall (($generated@@376 Int) ($generated@@377 T@U) ) (!  (=> (and (= (type $generated@@377) ($generated@@81 $generated@@82 $generated@@83)) ($generated@@267 $generated@@377)) (= ($generated@@79 ($generated@@292 $generated@@376) $generated@@233 $generated@@377) ($generated@@79 ($generated@@8 $generated@@376) $generated@@46 $generated@@377)))
 :pattern ( ($generated@@79 ($generated@@292 $generated@@376) $generated@@233 $generated@@377))
)))
(assert (forall (($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (= (type $generated@@378) ($generated@@81 $generated@@155 $generated@@4)) (= (type $generated@@379) $generated@@69)) (= (type $generated@@380) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@378 ($generated@@251 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@155) ($generated@@0 ($generated@@86 $generated@@378 $generated@@381))) ($generated@@268 $generated@@381 $generated@@379 $generated@@380))
 :pattern ( ($generated@@86 $generated@@378 $generated@@381))
))))
 :pattern ( ($generated@@79 $generated@@378 ($generated@@251 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@81 $generated@@155 $generated@@4)) (= (type $generated@@383) $generated@@69)) (= (type $generated@@384) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@382 ($generated@@256 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@155) ($generated@@0 ($generated@@86 $generated@@382 $generated@@385))) ($generated@@268 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@86 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@79 $generated@@382 ($generated@@256 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ) (! (let (($generated@@387 (type $generated@@386)))
(= ($generated ($generated@@86 ($generated@@302 $generated@@387) $generated@@386)) 0))
 :pattern ( (let (($generated@@387 (type $generated@@386)))
($generated@@86 ($generated@@302 $generated@@387) $generated@@386)))
)))
(assert  (and (forall (($generated@@390 T@U) ) (! (= (type ($generated@@388 $generated@@390)) ($generated@@81 $generated@@155 $generated@@4))
 :pattern ( ($generated@@388 $generated@@390))
)) (forall (($generated@@391 T@U) ) (! (let (($generated@@392 ($generated@@311 (type $generated@@391))))
(let (($generated@@393 ($generated@@310 (type $generated@@391))))
(= (type ($generated@@389 $generated@@391)) ($generated@@81 $generated@@393 $generated@@392))))
 :pattern ( ($generated@@389 $generated@@391))
))))
(assert (forall (($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (= (type $generated@@394) ($generated@@309 $generated@@155 $generated@@155)) (= (type $generated@@395) $generated@@155)) (= ($generated@@0 ($generated@@86 ($generated@@388 $generated@@394) $generated@@395))  (and ($generated@@0 ($generated@@86 ($generated@@307 $generated@@394) ($generated@@153 ($generated@@346 $generated@@141 $generated@@395)))) (= ($generated@@86 ($generated@@389 $generated@@394) ($generated@@153 ($generated@@346 $generated@@141 $generated@@395))) ($generated@@154 ($generated@@346 $generated@@141 $generated@@395))))))
 :pattern ( ($generated@@86 ($generated@@388 $generated@@394) $generated@@395))
)))
(assert  (and (forall (($generated@@398 T@U) ) (! (= (type ($generated@@396 $generated@@398)) ($generated@@81 $generated@@155 $generated@@4))
 :pattern ( ($generated@@396 $generated@@398))
)) (forall (($generated@@399 T@U) ) (! (let (($generated@@400 ($generated@@329 (type $generated@@399))))
(let (($generated@@401 ($generated@@328 (type $generated@@399))))
(= (type ($generated@@397 $generated@@399)) ($generated@@81 $generated@@401 $generated@@400))))
 :pattern ( ($generated@@397 $generated@@399))
))))
(assert (forall (($generated@@402 T@U) ($generated@@403 T@U) ) (!  (=> (and (= (type $generated@@402) ($generated@@327 $generated@@155 $generated@@155)) (= (type $generated@@403) $generated@@155)) (= ($generated@@0 ($generated@@86 ($generated@@396 $generated@@402) $generated@@403))  (and ($generated@@0 ($generated@@86 ($generated@@325 $generated@@402) ($generated@@153 ($generated@@346 $generated@@141 $generated@@403)))) (= ($generated@@86 ($generated@@397 $generated@@402) ($generated@@153 ($generated@@346 $generated@@141 $generated@@403))) ($generated@@154 ($generated@@346 $generated@@141 $generated@@403))))))
 :pattern ( ($generated@@86 ($generated@@396 $generated@@402) $generated@@403))
)))
(assert (forall (($generated@@404 T@U) ($generated@@405 T@U) ) (! (let (($generated@@406 (type $generated@@405)))
(let (($generated@@407 ($generated@@310 (type $generated@@404))))
 (=> (= (type $generated@@404) ($generated@@309 $generated@@407 $generated@@406)) (= ($generated@@0 ($generated@@86 ($generated@@355 $generated@@404) $generated@@405)) (exists (($generated@@408 T@U) ) (!  (and (= (type $generated@@408) $generated@@407) (and ($generated@@0 ($generated@@86 ($generated@@307 $generated@@404) $generated@@408)) (= $generated@@405 ($generated@@86 ($generated@@389 $generated@@404) $generated@@408))))
 :pattern ( ($generated@@86 ($generated@@307 $generated@@404) $generated@@408))
 :pattern ( ($generated@@86 ($generated@@389 $generated@@404) $generated@@408))
))))))
 :pattern ( ($generated@@86 ($generated@@355 $generated@@404) $generated@@405))
)))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (! (let (($generated@@411 (type $generated@@410)))
(let (($generated@@412 ($generated@@328 (type $generated@@409))))
 (=> (= (type $generated@@409) ($generated@@327 $generated@@412 $generated@@411)) (= ($generated@@0 ($generated@@86 ($generated@@366 $generated@@409) $generated@@410)) (exists (($generated@@413 T@U) ) (!  (and (= (type $generated@@413) $generated@@412) (and ($generated@@0 ($generated@@86 ($generated@@325 $generated@@409) $generated@@413)) (= $generated@@410 ($generated@@86 ($generated@@397 $generated@@409) $generated@@413))))
 :pattern ( ($generated@@86 ($generated@@325 $generated@@409) $generated@@413))
 :pattern ( ($generated@@86 ($generated@@397 $generated@@409) $generated@@413))
))))))
 :pattern ( ($generated@@86 ($generated@@366 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (= (type ($generated@@414 $generated@@415 $generated@@416)) $generated@@69)
 :pattern ( ($generated@@414 $generated@@415 $generated@@416))
)))
(assert (forall (($generated@@417 T@U) ($generated@@418 T@U) ($generated@@419 T@U) ($generated@@420 T@U) ) (!  (=> (and (and (and (= (type $generated@@417) ($generated@@309 $generated@@155 $generated@@155)) (= (type $generated@@418) $generated@@69)) (= (type $generated@@419) $generated@@69)) (= (type $generated@@420) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420) (forall (($generated@@421 T@U) ) (!  (=> (and (= (type $generated@@421) $generated@@155) ($generated@@0 ($generated@@86 ($generated@@307 $generated@@417) $generated@@421))) (and ($generated@@268 ($generated@@86 ($generated@@389 $generated@@417) $generated@@421) $generated@@419 $generated@@420) ($generated@@268 $generated@@421 $generated@@418 $generated@@420)))
 :pattern ( ($generated@@86 ($generated@@389 $generated@@417) $generated@@421))
 :pattern ( ($generated@@86 ($generated@@307 $generated@@417) $generated@@421))
))))
 :pattern ( ($generated@@79 $generated@@417 ($generated@@414 $generated@@418 $generated@@419) $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ($generated@@424 T@U) ) (! (= (type ($generated@@422 $generated@@423 $generated@@424)) $generated@@69)
 :pattern ( ($generated@@422 $generated@@423 $generated@@424))
)))
(assert (forall (($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ($generated@@428 T@U) ) (!  (=> (and (and (and (= (type $generated@@425) ($generated@@327 $generated@@155 $generated@@155)) (= (type $generated@@426) $generated@@69)) (= (type $generated@@427) $generated@@69)) (= (type $generated@@428) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428) (forall (($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@429) $generated@@155) ($generated@@0 ($generated@@86 ($generated@@325 $generated@@425) $generated@@429))) (and ($generated@@268 ($generated@@86 ($generated@@397 $generated@@425) $generated@@429) $generated@@427 $generated@@428) ($generated@@268 $generated@@429 $generated@@426 $generated@@428)))
 :pattern ( ($generated@@86 ($generated@@397 $generated@@425) $generated@@429))
 :pattern ( ($generated@@86 ($generated@@325 $generated@@425) $generated@@429))
))))
 :pattern ( ($generated@@79 $generated@@425 ($generated@@422 $generated@@426 $generated@@427) $generated@@428))
)))
(assert (forall (($generated@@431 Int) ($generated@@432 Int) ) (! (= ($generated@@430 $generated@@431 $generated@@432) (div $generated@@431 $generated@@432))
 :pattern ( ($generated@@430 $generated@@431 $generated@@432))
)))
(assert (forall (($generated@@434 T@T) ) (! (= (type ($generated@@433 $generated@@434)) ($generated@@81 $generated@@434 $generated@@4))
 :pattern ( ($generated@@433 $generated@@434))
)))
(assert (forall (($generated@@435 T@U) ) (! (let (($generated@@436 ($generated@@329 (type $generated@@435))))
(let (($generated@@437 ($generated@@328 (type $generated@@435))))
 (=> (= (type $generated@@435) ($generated@@327 $generated@@437 $generated@@436)) (= (= $generated@@435 ($generated@@326 $generated@@437 $generated@@436)) (= ($generated@@325 $generated@@435) ($generated@@433 $generated@@437))))))
 :pattern ( ($generated@@325 $generated@@435))
)))
(assert (forall (($generated@@438 T@U) ) (! (let (($generated@@439 ($generated@@329 (type $generated@@438))))
(let (($generated@@440 ($generated@@328 (type $generated@@438))))
 (=> (= (type $generated@@438) ($generated@@327 $generated@@440 $generated@@439)) (= (= $generated@@438 ($generated@@326 $generated@@440 $generated@@439)) (= ($generated@@366 $generated@@438) ($generated@@433 $generated@@439))))))
 :pattern ( ($generated@@366 $generated@@438))
)))
(assert (forall (($generated@@441 T@U) ) (! (let (($generated@@442 ($generated@@329 (type $generated@@441))))
(let (($generated@@443 ($generated@@328 (type $generated@@441))))
 (=> (= (type $generated@@441) ($generated@@327 $generated@@443 $generated@@442)) (= (= $generated@@441 ($generated@@326 $generated@@443 $generated@@442)) (= ($generated@@396 $generated@@441) ($generated@@433 $generated@@155))))))
 :pattern ( ($generated@@396 $generated@@441))
)))
(assert (forall (($generated@@444 T@U) ) (! (let (($generated@@445 ($generated@@311 (type $generated@@444))))
(let (($generated@@446 ($generated@@310 (type $generated@@444))))
 (=> (= (type $generated@@444) ($generated@@309 $generated@@446 $generated@@445)) (or (= $generated@@444 ($generated@@308 $generated@@446 $generated@@445)) (exists (($generated@@447 T@U) ($generated@@448 T@U) ) (!  (and (and (= (type $generated@@447) $generated@@155) (= (type $generated@@448) $generated@@155)) ($generated@@0 ($generated@@86 ($generated@@388 $generated@@444) ($generated@@296 ($generated@@238 $generated@@447 $generated@@448)))))
 :no-pattern (type $generated@@447)
 :no-pattern (type $generated@@448)
 :no-pattern ($generated $generated@@447)
 :no-pattern ($generated@@0 $generated@@447)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
))))))
 :pattern ( ($generated@@388 $generated@@444))
)))
(assert (forall (($generated@@449 T@U) ) (! (let (($generated@@450 ($generated@@329 (type $generated@@449))))
(let (($generated@@451 ($generated@@328 (type $generated@@449))))
 (=> (= (type $generated@@449) ($generated@@327 $generated@@451 $generated@@450)) (or (= $generated@@449 ($generated@@326 $generated@@451 $generated@@450)) (exists (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (and (and (= (type $generated@@452) $generated@@155) (= (type $generated@@453) $generated@@155)) ($generated@@0 ($generated@@86 ($generated@@396 $generated@@449) ($generated@@296 ($generated@@238 $generated@@452 $generated@@453)))))
 :no-pattern (type $generated@@452)
 :no-pattern (type $generated@@453)
 :no-pattern ($generated $generated@@452)
 :no-pattern ($generated@@0 $generated@@452)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
))))))
 :pattern ( ($generated@@396 $generated@@449))
)))
(assert  (=> (<= 2 $generated@@139) (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@141) (or ($generated@@142 ($generated@@263 $generated@@456)) (and (not (= 2 $generated@@139)) ($generated@@137 $generated@@456 $generated@@143)))) (and (and ($generated@@236 ($generated@@263 $generated@@456)) (=> (not (= ($generated@@261 ($generated@@454 ($generated@@289 ($generated@@263 $generated@@456)) ($generated@@261 2))) ($generated@@261 1))) ($generated@@236 ($generated@@263 $generated@@456)))) (= ($generated@@140 ($generated@@263 $generated@@456)) (ite (= ($generated@@261 ($generated@@454 ($generated@@289 ($generated@@263 $generated@@456)) ($generated@@261 2))) ($generated@@261 1)) ($generated@@430 1 ($generated@@261 0)) ($generated@@455 ($generated@@261 ($generated@@289 ($generated@@263 $generated@@456))) ($generated@@261 2))))))
 :weight 3
 :pattern ( ($generated@@140 ($generated@@263 $generated@@456)))
))))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@155) ($generated@@239 $generated@@457 $generated@@46)) (and (= ($generated@@296 ($generated@@346 $generated@@2 $generated@@457)) $generated@@457) ($generated@@137 ($generated@@346 $generated@@2 $generated@@457) $generated@@46)))
 :pattern ( ($generated@@239 $generated@@457 $generated@@46))
)))
(assert (forall (($generated@@458 T@U) ) (!  (=> (and (= (type $generated@@458) $generated@@155) ($generated@@239 $generated@@458 $generated@@47)) (and (= ($generated@@296 ($generated@@346 $generated@@3 $generated@@458)) $generated@@458) ($generated@@137 ($generated@@346 $generated@@3 $generated@@458) $generated@@47)))
 :pattern ( ($generated@@239 $generated@@458 $generated@@47))
)))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@155) ($generated@@239 $generated@@459 $generated@@44)) (and (= ($generated@@296 ($generated@@346 $generated@@4 $generated@@459)) $generated@@459) ($generated@@137 ($generated@@346 $generated@@4 $generated@@459) $generated@@44)))
 :pattern ( ($generated@@239 $generated@@459 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@460) 20))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@155) ($generated@@239 $generated@@461 $generated@@45)) (and (= ($generated@@296 ($generated@@346 $generated@@460 $generated@@461)) $generated@@461) ($generated@@137 ($generated@@346 $generated@@460 $generated@@461) $generated@@45)))
 :pattern ( ($generated@@239 $generated@@461 $generated@@45))
)))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ) (!  (=> (= (type $generated@@463) $generated@@69) (= ($generated@@239 ($generated@@296 $generated@@462) $generated@@463) ($generated@@137 $generated@@462 $generated@@463)))
 :pattern ( ($generated@@239 ($generated@@296 $generated@@462) $generated@@463))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@84 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@81 $generated@@465 $generated@@2)) (<= 0 ($generated@@301 $generated@@464))))
 :pattern ( ($generated@@301 $generated@@464))
)))
(assert (forall (($generated@@466 T@U) ) (! (let (($generated@@467 ($generated@@284 (type $generated@@466))))
 (=> (= (type $generated@@466) ($generated@@283 $generated@@467)) (<= 0 ($generated@@282 $generated@@466))))
 :pattern ( ($generated@@282 $generated@@466))
)))
(assert  (=> (<= 2 $generated@@139) (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@141) (or ($generated@@142 $generated@@468) (and (not (= 2 $generated@@139)) ($generated@@137 $generated@@468 $generated@@143)))) (and (and ($generated@@236 $generated@@468) (=> (not (= ($generated@@454 ($generated@@289 $generated@@468) ($generated@@261 2)) ($generated@@261 1))) ($generated@@236 $generated@@468))) (= ($generated@@140 $generated@@468) (ite (= ($generated@@454 ($generated@@289 $generated@@468) ($generated@@261 2)) ($generated@@261 1)) ($generated@@430 1 ($generated@@261 0)) ($generated@@455 ($generated@@289 $generated@@468) ($generated@@261 2))))))
 :pattern ( ($generated@@140 $generated@@468))
))))
(assert (forall (($generated@@470 T@U) ) (! (= (type ($generated@@469 $generated@@470)) $generated@@69)
 :pattern ( ($generated@@469 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ($generated@@472 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@69) (= (type $generated@@472) $generated@@69)) (= ($generated@@469 ($generated@@414 $generated@@471 $generated@@472)) $generated@@471))
 :pattern ( ($generated@@414 $generated@@471 $generated@@472))
)))
(assert (forall (($generated@@474 T@U) ) (! (= (type ($generated@@473 $generated@@474)) $generated@@69)
 :pattern ( ($generated@@473 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (=> (and (= (type $generated@@475) $generated@@69) (= (type $generated@@476) $generated@@69)) (= ($generated@@473 ($generated@@414 $generated@@475 $generated@@476)) $generated@@476))
 :pattern ( ($generated@@414 $generated@@475 $generated@@476))
)))
(assert (forall (($generated@@477 T@U) ($generated@@478 T@U) ) (!  (=> (and (= (type $generated@@477) $generated@@69) (= (type $generated@@478) $generated@@69)) (= ($generated@@77 ($generated@@414 $generated@@477 $generated@@478)) $generated@@58))
 :pattern ( ($generated@@414 $generated@@477 $generated@@478))
)))
(assert (forall (($generated@@480 T@U) ) (! (= (type ($generated@@479 $generated@@480)) $generated@@69)
 :pattern ( ($generated@@479 $generated@@480))
)))
(assert (forall (($generated@@481 T@U) ($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@69) (= (type $generated@@482) $generated@@69)) (= ($generated@@479 ($generated@@422 $generated@@481 $generated@@482)) $generated@@481))
 :pattern ( ($generated@@422 $generated@@481 $generated@@482))
)))
(assert (forall (($generated@@484 T@U) ) (! (= (type ($generated@@483 $generated@@484)) $generated@@69)
 :pattern ( ($generated@@483 $generated@@484))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (and (= (type $generated@@485) $generated@@69) (= (type $generated@@486) $generated@@69)) (= ($generated@@483 ($generated@@422 $generated@@485 $generated@@486)) $generated@@486))
 :pattern ( ($generated@@422 $generated@@485 $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (= (type $generated@@487) $generated@@69) (= (type $generated@@488) $generated@@69)) (= ($generated@@77 ($generated@@422 $generated@@487 $generated@@488)) $generated@@59))
 :pattern ( ($generated@@422 $generated@@487 $generated@@488))
)))
(assert (forall (($generated@@489 T@U) ($generated@@490 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@155) (= (type $generated@@490) $generated@@155)) (= ($generated@@274 ($generated@@238 $generated@@489 $generated@@490)) $generated@@61))
 :pattern ( ($generated@@238 $generated@@489 $generated@@490))
)))
(assert (forall (($generated@@492 T@U) ) (! (= (type ($generated@@491 $generated@@492)) $generated@@69)
 :pattern ( ($generated@@491 $generated@@492))
)))
(assert (forall (($generated@@493 T@U) ($generated@@494 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@69) (= (type $generated@@494) $generated@@69)) (= ($generated@@491 ($generated@@146 $generated@@493 $generated@@494)) $generated@@493))
 :pattern ( ($generated@@146 $generated@@493 $generated@@494))
)))
(assert (forall (($generated@@496 T@U) ) (! (= (type ($generated@@495 $generated@@496)) $generated@@69)
 :pattern ( ($generated@@495 $generated@@496))
)))
(assert (forall (($generated@@497 T@U) ($generated@@498 T@U) ) (!  (=> (and (= (type $generated@@497) $generated@@69) (= (type $generated@@498) $generated@@69)) (= ($generated@@495 ($generated@@146 $generated@@497 $generated@@498)) $generated@@498))
 :pattern ( ($generated@@146 $generated@@497 $generated@@498))
)))
(assert (forall (($generated@@499 T@U) ($generated@@500 T@U) ) (!  (=> (and (= (type $generated@@499) $generated@@155) (= (type $generated@@500) $generated@@155)) (= ($generated@@153 ($generated@@238 $generated@@499 $generated@@500)) $generated@@499))
 :pattern ( ($generated@@238 $generated@@499 $generated@@500))
)))
(assert (forall (($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (= (type $generated@@501) $generated@@155) (= (type $generated@@502) $generated@@155)) (= ($generated@@154 ($generated@@238 $generated@@501 $generated@@502)) $generated@@502))
 :pattern ( ($generated@@238 $generated@@501 $generated@@502))
)))
(assert  (and (forall (($generated@@505 T@U) ) (! (= (type ($generated@@503 $generated@@505)) $generated@@69)
 :pattern ( ($generated@@503 $generated@@505))
)) (forall (($generated@@506 T@U) ($generated@@507 Int) ) (! (let (($generated@@508 ($generated@@284 (type $generated@@506))))
(= (type ($generated@@504 $generated@@506 $generated@@507)) $generated@@508))
 :pattern ( ($generated@@504 $generated@@506 $generated@@507))
))))
(assert (forall (($generated@@509 T@U) ($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (and (= (type $generated@@509) ($generated@@283 $generated@@155)) (= (type $generated@@510) $generated@@69)) (= (type $generated@@511) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@509 ($generated@@503 $generated@@510) $generated@@511) (forall (($generated@@512 Int) ) (!  (=> (and (<= 0 $generated@@512) (< $generated@@512 ($generated@@282 $generated@@509))) ($generated@@268 ($generated@@504 $generated@@509 $generated@@512) $generated@@510 $generated@@511))
 :pattern ( ($generated@@504 $generated@@509 $generated@@512))
))))
 :pattern ( ($generated@@79 $generated@@509 ($generated@@503 $generated@@510) $generated@@511))
)))
(assert (forall (($generated@@514 Int) ) (! (= ($generated@@513 ($generated@@80 $generated@@514)) $generated@@514)
 :pattern ( ($generated@@80 $generated@@514))
)))
(assert (forall (($generated@@516 T@U) ) (! (= (type ($generated@@515 $generated@@516)) $generated@@69)
 :pattern ( ($generated@@515 $generated@@516))
)))
(assert (forall (($generated@@517 T@U) ) (!  (=> (= (type $generated@@517) $generated@@69) (= ($generated@@515 ($generated@@251 $generated@@517)) $generated@@517))
 :pattern ( ($generated@@251 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@69) (= ($generated@@77 ($generated@@251 $generated@@518)) $generated@@54))
 :pattern ( ($generated@@251 $generated@@518))
)))
(assert (forall (($generated@@520 T@U) ) (! (= (type ($generated@@519 $generated@@520)) $generated@@69)
 :pattern ( ($generated@@519 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@69) (= ($generated@@519 ($generated@@256 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@256 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@69) (= ($generated@@77 ($generated@@256 $generated@@522)) $generated@@55))
 :pattern ( ($generated@@256 $generated@@522))
)))
(assert (forall (($generated@@524 T@U) ) (! (= (type ($generated@@523 $generated@@524)) $generated@@69)
 :pattern ( ($generated@@523 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@69) (= ($generated@@523 ($generated@@160 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@160 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@69) (= ($generated@@77 ($generated@@160 $generated@@526)) $generated@@56))
 :pattern ( ($generated@@160 $generated@@526))
)))
(assert (forall (($generated@@528 T@U) ) (! (= (type ($generated@@527 $generated@@528)) $generated@@69)
 :pattern ( ($generated@@527 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@69) (= ($generated@@527 ($generated@@503 $generated@@529)) $generated@@529))
 :pattern ( ($generated@@503 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@69) (= ($generated@@77 ($generated@@503 $generated@@530)) $generated@@57))
 :pattern ( ($generated@@503 $generated@@530))
)))
(assert (forall (($generated@@531 Int) ) (! (= ($generated@@274 ($generated@@292 $generated@@531)) $generated@@63)
 :pattern ( ($generated@@292 $generated@@531))
)))
(assert (forall (($generated@@532 Int) ) (! (= ($generated@@289 ($generated@@292 $generated@@532)) $generated@@532)
 :pattern ( ($generated@@292 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (! (let (($generated@@534 (type $generated@@533)))
(= ($generated@@346 $generated@@534 ($generated@@296 $generated@@533)) $generated@@533))
 :pattern ( ($generated@@296 $generated@@533))
)))
(assert (forall (($generated@@535 T@U) ($generated@@536 T@U) ($generated@@537 T@U) ) (!  (=> (and (and (= (type $generated@@535) ($generated@@309 $generated@@155 $generated@@155)) (= (type $generated@@536) $generated@@69)) (= (type $generated@@537) $generated@@69)) (= ($generated@@137 $generated@@535 ($generated@@414 $generated@@536 $generated@@537)) (forall (($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@538) $generated@@155) ($generated@@0 ($generated@@86 ($generated@@307 $generated@@535) $generated@@538))) (and ($generated@@239 ($generated@@86 ($generated@@389 $generated@@535) $generated@@538) $generated@@537) ($generated@@239 $generated@@538 $generated@@536)))
 :pattern ( ($generated@@86 ($generated@@389 $generated@@535) $generated@@538))
 :pattern ( ($generated@@86 ($generated@@307 $generated@@535) $generated@@538))
))))
 :pattern ( ($generated@@137 $generated@@535 ($generated@@414 $generated@@536 $generated@@537)))
)))
(assert (forall (($generated@@539 T@U) ($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (and (= (type $generated@@539) ($generated@@327 $generated@@155 $generated@@155)) (= (type $generated@@540) $generated@@69)) (= (type $generated@@541) $generated@@69)) (= ($generated@@137 $generated@@539 ($generated@@422 $generated@@540 $generated@@541)) (forall (($generated@@542 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@155) ($generated@@0 ($generated@@86 ($generated@@325 $generated@@539) $generated@@542))) (and ($generated@@239 ($generated@@86 ($generated@@397 $generated@@539) $generated@@542) $generated@@541) ($generated@@239 $generated@@542 $generated@@540)))
 :pattern ( ($generated@@86 ($generated@@397 $generated@@539) $generated@@542))
 :pattern ( ($generated@@86 ($generated@@325 $generated@@539) $generated@@542))
))))
 :pattern ( ($generated@@137 $generated@@539 ($generated@@422 $generated@@540 $generated@@541)))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@141) (= ($generated@@137 $generated@@543 $generated@@143)  (and ($generated@@137 $generated@@543 $generated@@233) (= ($generated@@454 ($generated@@289 $generated@@543) ($generated@@261 2)) ($generated@@261 0)))))
 :pattern ( ($generated@@137 $generated@@543 $generated@@143))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@155) (= (type $generated@@547) $generated@@155)) (< ($generated@@544 $generated@@546) ($generated@@545 ($generated@@238 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@238 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@155) (= (type $generated@@549) $generated@@155)) (< ($generated@@544 $generated@@549) ($generated@@545 ($generated@@238 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@238 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 Int) ) (! (= ($generated@@137 ($generated@@292 $generated@@550) $generated@@233) ($generated@@137 ($generated@@8 $generated@@550) $generated@@46))
 :pattern ( ($generated@@137 ($generated@@292 $generated@@550) $generated@@233))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@155) (= (type $generated@@552) $generated@@69)) (= (type $generated@@553) $generated@@69)) ($generated@@239 $generated@@551 ($generated@@414 $generated@@552 $generated@@553))) (and (= ($generated@@296 ($generated@@346 ($generated@@309 $generated@@155 $generated@@155) $generated@@551)) $generated@@551) ($generated@@137 ($generated@@346 ($generated@@309 $generated@@155 $generated@@155) $generated@@551) ($generated@@414 $generated@@552 $generated@@553))))
 :pattern ( ($generated@@239 $generated@@551 ($generated@@414 $generated@@552 $generated@@553)))
)))
(assert (forall (($generated@@554 T@U) ($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (and (and (= (type $generated@@554) $generated@@155) (= (type $generated@@555) $generated@@69)) (= (type $generated@@556) $generated@@69)) ($generated@@239 $generated@@554 ($generated@@422 $generated@@555 $generated@@556))) (and (= ($generated@@296 ($generated@@346 ($generated@@327 $generated@@155 $generated@@155) $generated@@554)) $generated@@554) ($generated@@137 ($generated@@346 ($generated@@327 $generated@@155 $generated@@155) $generated@@554) ($generated@@422 $generated@@555 $generated@@556))))
 :pattern ( ($generated@@239 $generated@@554 ($generated@@422 $generated@@555 $generated@@556)))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (and (and (= (type $generated@@557) $generated@@69) (= (type $generated@@558) $generated@@69)) (= (type $generated@@559) $generated@@155)) ($generated@@239 $generated@@559 ($generated@@146 $generated@@557 $generated@@558))) (and (= ($generated@@296 ($generated@@346 $generated@@141 $generated@@559)) $generated@@559) ($generated@@137 ($generated@@346 $generated@@141 $generated@@559) ($generated@@146 $generated@@557 $generated@@558))))
 :pattern ( ($generated@@239 $generated@@559 ($generated@@146 $generated@@557 $generated@@558)))
)))
(assert (forall (($generated@@560 T@U) ) (! (let (($generated@@561 (type $generated@@560)))
 (not ($generated@@0 ($generated@@86 ($generated@@433 $generated@@561) $generated@@560))))
 :pattern ( (let (($generated@@561 (type $generated@@560)))
($generated@@86 ($generated@@433 $generated@@561) $generated@@560)))
)))
(assert (forall (($generated@@562 Int) ($generated@@563 Int) ) (! (= ($generated@@454 $generated@@562 $generated@@563) (mod $generated@@562 $generated@@563))
 :pattern ( ($generated@@454 $generated@@562 $generated@@563))
)))
(assert (forall (($generated@@565 T@U) ) (! (= (type ($generated@@564 $generated@@565)) $generated@@74)
 :pattern ( ($generated@@564 $generated@@565))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@69) (= (type $generated@@567) $generated@@69)) (and (= ($generated@@77 ($generated@@146 $generated@@566 $generated@@567)) $generated@@62) (= ($generated@@564 ($generated@@146 $generated@@566 $generated@@567)) $generated@@66)))
 :pattern ( ($generated@@146 $generated@@566 $generated@@567))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@141) (= (type $generated@@569) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@267 $generated@@569) (and ($generated@@236 $generated@@568) ($generated@@79 $generated@@568 $generated@@233 $generated@@569)))) ($generated@@79 ($generated@@8 ($generated@@289 $generated@@568)) $generated@@46 $generated@@569))
 :pattern ( ($generated@@79 ($generated@@8 ($generated@@289 $generated@@568)) $generated@@46 $generated@@569))
)))
(assert (forall (($generated@@570 Int) ($generated@@571 Int) ) (! (= ($generated@@455 $generated@@570 $generated@@571) (* $generated@@570 $generated@@571))
 :pattern ( ($generated@@455 $generated@@570 $generated@@571))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@141) (= ($generated@@544 ($generated@@296 $generated@@572)) ($generated@@545 $generated@@572)))
 :pattern ( ($generated@@544 ($generated@@296 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@155) ($generated@@239 $generated@@573 ($generated@@80 0))) (and (= ($generated@@296 ($generated@@346 $generated@@2 $generated@@573)) $generated@@573) ($generated@@137 ($generated@@346 ($generated@@81 $generated@@155 $generated@@4) $generated@@573) ($generated@@80 0))))
 :pattern ( ($generated@@239 $generated@@573 ($generated@@80 0)))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@574) $generated@@155) (= (type $generated@@575) $generated@@69)) ($generated@@239 $generated@@574 ($generated@@251 $generated@@575))) (and (= ($generated@@296 ($generated@@346 ($generated@@81 $generated@@155 $generated@@4) $generated@@574)) $generated@@574) ($generated@@137 ($generated@@346 ($generated@@81 $generated@@155 $generated@@4) $generated@@574) ($generated@@251 $generated@@575))))
 :pattern ( ($generated@@239 $generated@@574 ($generated@@251 $generated@@575)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@155) (= (type $generated@@577) $generated@@69)) ($generated@@239 $generated@@576 ($generated@@256 $generated@@577))) (and (= ($generated@@296 ($generated@@346 ($generated@@81 $generated@@155 $generated@@4) $generated@@576)) $generated@@576) ($generated@@137 ($generated@@346 ($generated@@81 $generated@@155 $generated@@4) $generated@@576) ($generated@@256 $generated@@577))))
 :pattern ( ($generated@@239 $generated@@576 ($generated@@256 $generated@@577)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@155) (= (type $generated@@579) $generated@@69)) ($generated@@239 $generated@@578 ($generated@@160 $generated@@579))) (and (= ($generated@@296 ($generated@@346 ($generated@@81 $generated@@155 $generated@@2) $generated@@578)) $generated@@578) ($generated@@137 ($generated@@346 ($generated@@81 $generated@@155 $generated@@2) $generated@@578) ($generated@@160 $generated@@579))))
 :pattern ( ($generated@@239 $generated@@578 ($generated@@160 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@155) (= (type $generated@@581) $generated@@69)) ($generated@@239 $generated@@580 ($generated@@503 $generated@@581))) (and (= ($generated@@296 ($generated@@346 ($generated@@283 $generated@@155) $generated@@580)) $generated@@580) ($generated@@137 ($generated@@346 ($generated@@283 $generated@@155) $generated@@580) ($generated@@503 $generated@@581))))
 :pattern ( ($generated@@239 $generated@@580 ($generated@@503 $generated@@581)))
)))
(assert (= ($generated@@77 $generated@@233) $generated@@64))
(assert (= ($generated@@564 $generated@@233) $generated@@67))
(assert (= ($generated@@77 $generated@@143) $generated@@65))
(assert (= ($generated@@564 $generated@@143) $generated@@68))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (= (type $generated@@582) ($generated@@81 $generated@@155 $generated@@2)) (= (type $generated@@583) $generated@@69)) (= (type $generated@@584) ($generated@@81 $generated@@82 $generated@@83))) (= ($generated@@79 $generated@@582 ($generated@@160 $generated@@583) $generated@@584) (forall (($generated@@585 T@U) ) (!  (=> (and (= (type $generated@@585) $generated@@155) (< 0 ($generated ($generated@@86 $generated@@582 $generated@@585)))) ($generated@@268 $generated@@585 $generated@@583 $generated@@584))
 :pattern ( ($generated@@86 $generated@@582 $generated@@585))
))))
 :pattern ( ($generated@@79 $generated@@582 ($generated@@160 $generated@@583) $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) $generated@@141) (= (type $generated@@587) $generated@@69)) (= (type $generated@@588) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@267 $generated@@588) (and ($generated@@145 $generated@@586) (exists (($generated@@589 T@U) ) (!  (and (= (type $generated@@589) $generated@@69) ($generated@@79 $generated@@586 ($generated@@146 $generated@@587 $generated@@589) $generated@@588))
 :pattern ( ($generated@@79 $generated@@586 ($generated@@146 $generated@@587 $generated@@589) $generated@@588))
))))) ($generated@@268 ($generated@@153 $generated@@586) $generated@@587 $generated@@588))
 :pattern ( ($generated@@268 ($generated@@153 $generated@@586) $generated@@587 $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@141) (= (type $generated@@591) $generated@@69)) (= (type $generated@@592) ($generated@@81 $generated@@82 $generated@@83))) (and ($generated@@267 $generated@@592) (and ($generated@@145 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@69) ($generated@@79 $generated@@590 ($generated@@146 $generated@@593 $generated@@591) $generated@@592))
 :pattern ( ($generated@@79 $generated@@590 ($generated@@146 $generated@@593 $generated@@591) $generated@@592))
))))) ($generated@@268 ($generated@@154 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@268 ($generated@@154 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ) (!  (=> (and (= (type $generated@@594) $generated@@155) (= (type $generated@@595) $generated@@155)) (= ($generated@@238 ($generated@@263 $generated@@594) ($generated@@263 $generated@@595)) ($generated@@263 ($generated@@238 $generated@@594 $generated@@595))))
 :pattern ( ($generated@@238 ($generated@@263 $generated@@594) ($generated@@263 $generated@@595)))
)))
(assert (forall (($generated@@596 Int) ) (! (= ($generated@@296 ($generated@@8 ($generated@@261 $generated@@596))) ($generated@@263 ($generated@@296 ($generated@@8 $generated@@596))))
 :pattern ( ($generated@@296 ($generated@@8 ($generated@@261 $generated@@596))))
)))
(assert (forall (($generated@@597 Int) ) (! (= ($generated@@292 ($generated@@261 $generated@@597)) ($generated@@263 ($generated@@292 $generated@@597)))
 :pattern ( ($generated@@292 ($generated@@261 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (! (= ($generated@@296 ($generated@@263 $generated@@598)) ($generated@@263 ($generated@@296 $generated@@598)))
 :pattern ( ($generated@@296 ($generated@@263 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (! (let (($generated@@600 ($generated@@284 (type $generated@@599))))
 (=> (and (= (type $generated@@599) ($generated@@283 $generated@@600)) (= ($generated@@282 $generated@@599) 0)) (= $generated@@599 ($generated@@281 $generated@@600))))
 :pattern ( ($generated@@282 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (! (let (($generated@@604 (type $generated@@602)))
 (=> (and (and (= (type $generated@@601) ($generated@@81 $generated@@604 $generated@@2)) (= (type $generated@@603) $generated@@2)) (<= 0 ($generated $generated@@603))) (= ($generated@@301 ($generated@@87 $generated@@601 $generated@@602 $generated@@603)) (+ (- ($generated@@301 $generated@@601) ($generated ($generated@@86 $generated@@601 $generated@@602))) ($generated $generated@@603)))))
 :pattern ( ($generated@@301 ($generated@@87 $generated@@601 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@606) $generated@@2)) ($generated@@79 $generated@@606 $generated@@46 $generated@@605))
 :pattern ( ($generated@@79 $generated@@606 $generated@@46 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@608) $generated@@3)) ($generated@@79 $generated@@608 $generated@@47 $generated@@607))
 :pattern ( ($generated@@79 $generated@@608 $generated@@47 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@610) $generated@@4)) ($generated@@79 $generated@@610 $generated@@44 $generated@@609))
 :pattern ( ($generated@@79 $generated@@610 $generated@@44 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@612) $generated@@460)) ($generated@@79 $generated@@612 $generated@@45 $generated@@611))
 :pattern ( ($generated@@79 $generated@@612 $generated@@45 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@81 $generated@@82 $generated@@83)) (= (type $generated@@614) $generated@@155)) ($generated@@79 $generated@@614 $generated@@48 $generated@@613))
 :pattern ( ($generated@@79 $generated@@614 $generated@@48 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@283 $generated@@155)) (= (type $generated@@616) $generated@@69)) (= ($generated@@137 $generated@@615 ($generated@@503 $generated@@616)) (forall (($generated@@617 Int) ) (!  (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@282 $generated@@615))) ($generated@@239 ($generated@@504 $generated@@615 $generated@@617) $generated@@616))
 :pattern ( ($generated@@504 $generated@@615 $generated@@617))
))))
 :pattern ( ($generated@@137 $generated@@615 ($generated@@503 $generated@@616)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 Int) ) (!  (=> (= (type $generated@@619) ($generated@@283 $generated@@155)) (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@282 $generated@@619))) (< ($generated@@545 ($generated@@346 $generated@@141 ($generated@@504 $generated@@619 $generated@@620))) ($generated@@618 $generated@@619))))
 :pattern ( ($generated@@545 ($generated@@346 $generated@@141 ($generated@@504 $generated@@619 $generated@@620))))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) ($generated@@309 $generated@@155 $generated@@155)) (= (type $generated@@622) $generated@@69)) (= (type $generated@@623) $generated@@69)) ($generated@@137 $generated@@621 ($generated@@414 $generated@@622 $generated@@623))) (and (and ($generated@@137 ($generated@@307 $generated@@621) ($generated@@251 $generated@@622)) ($generated@@137 ($generated@@355 $generated@@621) ($generated@@251 $generated@@623))) ($generated@@137 ($generated@@388 $generated@@621) ($generated@@251 ($generated@@146 $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@137 $generated@@621 ($generated@@414 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@327 $generated@@155 $generated@@155)) (= (type $generated@@625) $generated@@69)) (= (type $generated@@626) $generated@@69)) ($generated@@137 $generated@@624 ($generated@@422 $generated@@625 $generated@@626))) (and (and ($generated@@137 ($generated@@325 $generated@@624) ($generated@@256 $generated@@625)) ($generated@@137 ($generated@@366 $generated@@624) ($generated@@256 $generated@@626))) ($generated@@137 ($generated@@396 $generated@@624) ($generated@@256 ($generated@@146 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@137 $generated@@624 ($generated@@422 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@2) ($generated@@137 $generated@@627 $generated@@46))
 :pattern ( ($generated@@137 $generated@@627 $generated@@46))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@3) ($generated@@137 $generated@@628 $generated@@47))
 :pattern ( ($generated@@137 $generated@@628 $generated@@47))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@4) ($generated@@137 $generated@@629 $generated@@44))
 :pattern ( ($generated@@137 $generated@@629 $generated@@44))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@460) ($generated@@137 $generated@@630 $generated@@45))
 :pattern ( ($generated@@137 $generated@@630 $generated@@45))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@155) ($generated@@137 $generated@@631 $generated@@48))
 :pattern ( ($generated@@137 $generated@@631 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 () T@U)
(declare-fun $generated@@637 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@632) $generated@@141) (= (type $generated@@633) ($generated@@167 $generated@@82 $generated@@4))) (= (type $generated@@634) $generated@@82)) (= (type $generated@@635) ($generated@@81 $generated@@82 $generated@@83))) (= (type $generated@@636) ($generated@@167 $generated@@82 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@638 true))
(let (($generated@@639  (=> (and (= ($generated@@454 ($generated@@289 $generated@@632) ($generated@@261 2)) ($generated@@261 1)) (= (ControlFlow 0 3) (- 0 2))) (not (= ($generated@@261 0) 0)))))
(let (($generated@@640  (=> (and (= $generated@@633 ($generated@@221 $generated@@634 $generated@@635 $generated@@60 false)) ($generated@@236 $generated@@632)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (not (= ($generated@@261 2) 0))) (=> (not (= ($generated@@261 2) 0)) (and (=> (= (ControlFlow 0 5) 3) $generated@@639) (=> (= (ControlFlow 0 5) 4) $generated@@638)))))))
(let (($generated@@641 true))
(let (($generated@@642  (=> (= $generated@@636 ($generated@@166 $generated@@634 $generated@@635 $generated@@60 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@641) (=> (= (ControlFlow 0 7) 5) $generated@@640)))))
(let (($generated@@643  (=> (and (and (and ($generated@@267 $generated@@635) ($generated@@637 $generated@@635)) ($generated@@137 $generated@@632 $generated@@143)) (and (= 2 $generated@@139) (= (ControlFlow 0 8) 7))) $generated@@642)))
$generated@@643)))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (Int) T@U)
(declare-fun $generated@@83 (T@T T@T) T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@T) T@T)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@143 (T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@T T@T) T@T)
(declare-fun $generated@@145 (T@T) T@T)
(declare-fun $generated@@146 (T@T) T@T)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@174 (T@U T@U) Bool)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 (T@U) Int)
(declare-fun $generated@@178 () T@T)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 (T@U T@U) T@U)
(declare-fun $generated@@189 (T@U T@U) Bool)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@192 () T@T)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@202 (T@U T@U T@U) T@U)
(declare-fun $generated@@203 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@204 (T@T T@T) T@T)
(declare-fun $generated@@205 (T@T) T@T)
(declare-fun $generated@@206 (T@T) T@T)
(declare-fun $generated@@207 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@261 (T@U) Bool)
(declare-fun $generated@@263 (T@U T@U) T@U)
(declare-fun $generated@@264 (T@U T@U) Bool)
(declare-fun $generated@@273 (T@U T@U) Bool)
(declare-fun $generated@@276 (T@U) T@U)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@286 (Int) Int)
(declare-fun $generated@@288 (T@U) T@U)
(declare-fun $generated@@292 (T@U) Bool)
(declare-fun $generated@@293 (T@U T@U T@U) Bool)
(declare-fun $generated@@299 (T@U) T@U)
(declare-fun $generated@@306 (T@T) T@U)
(declare-fun $generated@@307 (T@U) Int)
(declare-fun $generated@@308 (T@T) T@T)
(declare-fun $generated@@309 (T@T) T@T)
(declare-fun $generated@@314 (T@U) Int)
(declare-fun $generated@@317 (Int) T@U)
(declare-fun $generated@@322 (T@U) T@U)
(declare-fun $generated@@327 (T@U) Int)
(declare-fun $generated@@328 (T@T) T@U)
(declare-fun $generated@@333 (T@T T@T) T@U)
(declare-fun $generated@@339 (T@U) T@U)
(declare-fun $generated@@340 (T@T T@T) T@U)
(declare-fun $generated@@341 (T@T T@T) T@T)
(declare-fun $generated@@342 (T@T) T@T)
(declare-fun $generated@@343 (T@T) T@T)
(declare-fun $generated@@360 (T@T T@U) T@U)
(declare-fun $generated@@370 (T@U) T@U)
(declare-fun $generated@@381 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@425 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@U T@U) T@U)
(declare-fun $generated@@441 (Int Int) Int)
(declare-fun $generated@@444 (T@U T@U) T@U)
(declare-fun $generated@@456 (T@T) T@U)
(declare-fun $generated@@477 (Int Int) Int)
(declare-fun $generated@@478 (Int Int) Int)
(declare-fun $generated@@483 () T@T)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@496 (T@U) T@U)
(declare-fun $generated@@502 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@514 (T@U) T@U)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@527 (T@U Int) T@U)
(declare-fun $generated@@539 (T@U) Int)
(declare-fun $generated@@541 (T@U) T@U)
(declare-fun $generated@@545 (T@U) T@U)
(declare-fun $generated@@549 (T@U) T@U)
(declare-fun $generated@@553 (T@U) T@U)
(declare-fun $generated@@570 (T@U) Int)
(declare-fun $generated@@571 (T@U) Int)
(declare-fun $generated@@576 (T@U T@U) T@U)
(declare-fun $generated@@592 (T@T) T@U)
(declare-fun $generated@@605 (T@U) T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@661 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@71) 6) (= (type $generated@@44) $generated@@71)) (= (type $generated@@45) $generated@@71)) (= (type $generated@@46) $generated@@71)) (= (type $generated@@47) $generated@@71)) (= (type $generated@@48) $generated@@71)) (= ($generated@@1 $generated@@72) 7)) (= (type $generated@@49) $generated@@72)) (= (type $generated@@50) $generated@@72)) (= (type $generated@@51) $generated@@72)) (= (type $generated@@52) $generated@@72)) (= (type $generated@@53) $generated@@72)) (= (type $generated@@54) $generated@@72)) (= (type $generated@@55) $generated@@72)) (= (type $generated@@56) $generated@@72)) (= (type $generated@@57) $generated@@72)) (= (type $generated@@58) $generated@@72)) (= (type $generated@@59) $generated@@72)) (forall (($generated@@77 T@T) ) (= ($generated@@1 ($generated@@73 $generated@@77)) 8))) (forall (($generated@@78 T@T) ) (! (= ($generated@@74 ($generated@@73 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@73 $generated@@78))
))) (= (type $generated@@60) ($generated@@73 $generated@@4))) (= (type $generated@@61) $generated@@72)) (= ($generated@@1 $generated@@75) 9)) (= (type $generated@@62) $generated@@75)) (= (type $generated@@63) $generated@@72)) (= (type $generated@@64) $generated@@75)) (= (type $generated@@65) $generated@@72)) (= (type $generated@@66) $generated@@72)) (= ($generated@@1 $generated@@76) 10)) (= (type $generated@@67) $generated@@76)) (= (type $generated@@68) $generated@@76)) (= (type $generated@@69) $generated@@76)) (= (type $generated@@70) $generated@@76)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@70)
)
(assert (forall (($generated@@80 T@U) ) (! (= (type ($generated@@79 $generated@@80)) $generated@@72)
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (= ($generated@@79 $generated@@44) $generated@@49))
(assert (= ($generated@@79 $generated@@45) $generated@@50))
(assert (= ($generated@@79 $generated@@46) $generated@@51))
(assert (= ($generated@@79 $generated@@47) $generated@@52))
(assert (= ($generated@@79 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ) (= ($generated@@1 ($generated@@83 $generated@@92 $generated@@93)) 11)) (forall (($generated@@94 T@T) ($generated@@95 T@T) ) (! (= ($generated@@86 ($generated@@83 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@83 $generated@@94 $generated@@95))
))) (forall (($generated@@96 T@T) ($generated@@97 T@T) ) (! (= ($generated@@87 ($generated@@83 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@83 $generated@@96 $generated@@97))
))) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (let (($generated@@100 ($generated@@87 (type $generated@@98))))
(= (type ($generated@@88 $generated@@98 $generated@@99)) $generated@@100))
 :pattern ( ($generated@@88 $generated@@98 $generated@@99))
))) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (let (($generated@@104 (type $generated@@103)))
(let (($generated@@105 (type $generated@@102)))
(= (type ($generated@@89 $generated@@101 $generated@@102 $generated@@103)) ($generated@@83 $generated@@105 $generated@@104))))
 :pattern ( ($generated@@89 $generated@@101 $generated@@102 $generated@@103))
))) (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (let (($generated@@109 ($generated@@87 (type $generated@@106))))
 (=> (= (type $generated@@108) $generated@@109) (= ($generated@@88 ($generated@@89 $generated@@106 $generated@@107 $generated@@108) $generated@@107) $generated@@108)))
 :weight 0
))) (and (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@88 ($generated@@89 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@88 $generated@@111 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or true (= ($generated@@88 ($generated@@89 $generated@@115 $generated@@116 $generated@@114) $generated@@117) ($generated@@88 $generated@@115 $generated@@117)))
 :weight 0
)))) (= ($generated@@1 $generated@@84) 12)) (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@74 (type $generated@@119))))
(= (type ($generated@@90 $generated@@118 $generated@@119)) $generated@@120))
 :pattern ( ($generated@@90 $generated@@118 $generated@@119))
))) (= ($generated@@1 $generated@@85) 13)) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= (type ($generated@@91 $generated@@121 $generated@@122 $generated@@123)) $generated@@85)
 :pattern ( ($generated@@91 $generated@@121 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (let (($generated@@127 ($generated@@74 (type $generated@@125))))
 (=> (= (type $generated@@126) $generated@@127) (= ($generated@@90 ($generated@@91 $generated@@124 $generated@@125 $generated@@126) $generated@@125) $generated@@126)))
 :weight 0
))) (and (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@90 ($generated@@91 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@90 $generated@@129 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or true (= ($generated@@90 ($generated@@91 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@90 $generated@@133 $generated@@135)))
 :weight 0
)))) (forall (($generated@@136 Int) ) (! (= (type ($generated@@82 $generated@@136)) $generated@@71)
 :pattern ( ($generated@@82 $generated@@136))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (= (type $generated@@137) $generated@@2) (= (type $generated@@138) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
 :pattern ( ($generated@@81 $generated@@137 ($generated@@82 0) $generated@@138))
)))
(assert (= (type $generated@@139) $generated@@71))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and (= (type $generated@@140) $generated@@2) (= (type $generated@@141) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@81 $generated@@140 $generated@@139 $generated@@141))
 :pattern ( ($generated@@81 $generated@@140 $generated@@139 $generated@@141))
)))
(assert  (and (and (and (and (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (= ($generated@@1 ($generated@@144 $generated@@147 $generated@@148)) 14)) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@145 ($generated@@144 $generated@@149 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@144 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (! (= ($generated@@146 ($generated@@144 $generated@@151 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@144 $generated@@151 $generated@@152))
))) (forall (($generated@@153 T@U) ) (! (let (($generated@@154 ($generated@@145 (type $generated@@153))))
(= (type ($generated@@142 $generated@@153)) ($generated@@83 $generated@@154 $generated@@4)))
 :pattern ( ($generated@@142 $generated@@153))
))) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (let (($generated@@158 ($generated@@87 (type $generated@@156))))
(let (($generated@@159 ($generated@@86 (type $generated@@155))))
(= (type ($generated@@143 $generated@@155 $generated@@156 $generated@@157)) ($generated@@144 $generated@@159 $generated@@158))))
 :pattern ( ($generated@@143 $generated@@155 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (let (($generated@@163 ($generated@@87 (type $generated@@161))))
(let (($generated@@164 ($generated@@86 (type $generated@@160))))
 (=> (and (and (= (type $generated@@160) ($generated@@83 $generated@@164 $generated@@4)) (= (type $generated@@161) ($generated@@83 $generated@@164 $generated@@163))) (= (type $generated@@162) $generated@@71)) (= ($generated@@142 ($generated@@143 $generated@@160 $generated@@161 $generated@@162)) $generated@@160))))
 :pattern ( ($generated@@142 ($generated@@143 $generated@@160 $generated@@161 $generated@@162)))
)))
(assert (forall (($generated@@166 T@U) ) (! (let (($generated@@167 ($generated@@146 (type $generated@@166))))
(let (($generated@@168 ($generated@@145 (type $generated@@166))))
(= (type ($generated@@165 $generated@@166)) ($generated@@83 $generated@@168 $generated@@167))))
 :pattern ( ($generated@@165 $generated@@166))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (let (($generated@@172 ($generated@@87 (type $generated@@170))))
(let (($generated@@173 ($generated@@86 (type $generated@@169))))
 (=> (and (and (= (type $generated@@169) ($generated@@83 $generated@@173 $generated@@4)) (= (type $generated@@170) ($generated@@83 $generated@@173 $generated@@172))) (= (type $generated@@171) $generated@@71)) (= ($generated@@165 ($generated@@143 $generated@@169 $generated@@170 $generated@@171)) $generated@@170))))
 :pattern ( ($generated@@165 ($generated@@143 $generated@@169 $generated@@170 $generated@@171)))
)))
(assert (forall (($generated@@175 T@U) ) (!  (=> (= (type $generated@@175) $generated@@2) ($generated@@174 $generated@@175 ($generated@@82 0)))
 :pattern ( ($generated@@174 $generated@@175 ($generated@@82 0)))
)))
(assert  (and (= ($generated@@1 $generated@@178) 15) (= (type $generated@@180) $generated@@71)))
(assert  (=> (<= 2 $generated@@176) (forall (($generated@@181 T@U) ) (!  (=> (and (= (type $generated@@181) $generated@@178) (or ($generated@@179 $generated@@181) (and (not (= 2 $generated@@176)) ($generated@@174 $generated@@181 $generated@@180)))) true)
 :pattern ( ($generated@@177 $generated@@181))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= (type ($generated@@183 $generated@@184 $generated@@185)) $generated@@71)
 :pattern ( ($generated@@183 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (and (and (= (type $generated@@186) $generated@@71) (= (type $generated@@187) $generated@@71)) (= (type $generated@@188) $generated@@178)) ($generated@@174 $generated@@188 ($generated@@183 $generated@@186 $generated@@187))) ($generated@@182 $generated@@188))
 :pattern ( ($generated@@182 $generated@@188) ($generated@@174 $generated@@188 ($generated@@183 $generated@@186 $generated@@187)))
)))
(assert  (and (and (= ($generated@@1 $generated@@192) 16) (forall (($generated@@193 T@U) ) (! (= (type ($generated@@190 $generated@@193)) $generated@@192)
 :pattern ( ($generated@@190 $generated@@193))
))) (forall (($generated@@194 T@U) ) (! (= (type ($generated@@191 $generated@@194)) $generated@@192)
 :pattern ( ($generated@@191 $generated@@194))
))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and (and (= (type $generated@@195) $generated@@178) (= (type $generated@@196) $generated@@178)) true) (= ($generated@@189 $generated@@195 $generated@@196)  (and (= ($generated@@190 $generated@@195) ($generated@@190 $generated@@196)) (= ($generated@@191 $generated@@195) ($generated@@191 $generated@@196)))))
 :pattern ( ($generated@@189 $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@199 T@U) ) (! (= (type ($generated@@197 $generated@@199)) $generated@@71)
 :pattern ( ($generated@@197 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and (and (= (type $generated@@200) ($generated@@83 $generated@@192 $generated@@2)) (= (type $generated@@201) $generated@@71)) ($generated@@174 $generated@@200 ($generated@@197 $generated@@201))) ($generated@@198 $generated@@200))
 :pattern ( ($generated@@174 $generated@@200 ($generated@@197 $generated@@201)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@208 T@T) ($generated@@209 T@T) ) (= ($generated@@1 ($generated@@204 $generated@@208 $generated@@209)) 17)) (forall (($generated@@210 T@T) ($generated@@211 T@T) ) (! (= ($generated@@205 ($generated@@204 $generated@@210 $generated@@211)) $generated@@210)
 :pattern ( ($generated@@204 $generated@@210 $generated@@211))
))) (forall (($generated@@212 T@T) ($generated@@213 T@T) ) (! (= ($generated@@206 ($generated@@204 $generated@@212 $generated@@213)) $generated@@213)
 :pattern ( ($generated@@204 $generated@@212 $generated@@213))
))) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (let (($generated@@217 ($generated@@206 (type $generated@@214))))
(= (type ($generated@@202 $generated@@214 $generated@@215 $generated@@216)) $generated@@217))
 :pattern ( ($generated@@202 $generated@@214 $generated@@215 $generated@@216))
))) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (let (($generated@@222 (type $generated@@221)))
(let (($generated@@223 (type $generated@@219)))
(= (type ($generated@@207 $generated@@218 $generated@@219 $generated@@220 $generated@@221)) ($generated@@204 $generated@@223 $generated@@222))))
 :pattern ( ($generated@@207 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
))) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (let (($generated@@228 ($generated@@206 (type $generated@@224))))
 (=> (= (type $generated@@227) $generated@@228) (= ($generated@@202 ($generated@@207 $generated@@224 $generated@@225 $generated@@226 $generated@@227) $generated@@225 $generated@@226) $generated@@227)))
 :weight 0
))) (and (and (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or (= $generated@@231 $generated@@233) (= ($generated@@202 ($generated@@207 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@202 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
)) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (or (= $generated@@238 $generated@@240) (= ($generated@@202 ($generated@@207 $generated@@236 $generated@@237 $generated@@238 $generated@@235) $generated@@239 $generated@@240) ($generated@@202 $generated@@236 $generated@@239 $generated@@240)))
 :weight 0
))) (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (or true (= ($generated@@202 ($generated@@207 $generated@@242 $generated@@243 $generated@@244 $generated@@241) $generated@@245 $generated@@246) ($generated@@202 $generated@@242 $generated@@245 $generated@@246)))
 :weight 0
)))) (forall (($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 Bool) ) (! (= (type ($generated@@203 $generated@@247 $generated@@248 $generated@@249 $generated@@250)) ($generated@@204 $generated@@84 $generated@@4))
 :pattern ( ($generated@@203 $generated@@247 $generated@@248 $generated@@249 $generated@@250))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 Bool) ($generated@@255 T@U) ($generated@@256 T@U) ) (! (let (($generated@@257 ($generated@@74 (type $generated@@256))))
 (=> (and (and (and (and (= (type $generated@@251) $generated@@84) (= (type $generated@@252) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@253) ($generated@@73 $generated@@4))) (= (type $generated@@255) $generated@@84)) (= (type $generated@@256) ($generated@@73 $generated@@257))) (= ($generated@@0 ($generated@@202 ($generated@@203 $generated@@251 $generated@@252 $generated@@253 $generated@@254) $generated@@255 $generated@@256))  (=> (and (not (= $generated@@255 $generated@@251)) ($generated@@0 ($generated@@90 ($generated@@88 $generated@@252 $generated@@255) $generated@@253))) $generated@@254))))
 :pattern ( ($generated@@202 ($generated@@203 $generated@@251 $generated@@252 $generated@@253 $generated@@254) $generated@@255 $generated@@256))
)))
(assert (= (type $generated@@258) $generated@@71))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@178) (= (type $generated@@260) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@259 $generated@@180 $generated@@260) ($generated@@81 $generated@@259 $generated@@258 $generated@@260)))
 :pattern ( ($generated@@81 $generated@@259 $generated@@180 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@178) ($generated@@174 $generated@@262 $generated@@258)) ($generated@@261 $generated@@262))
 :pattern ( ($generated@@261 $generated@@262) ($generated@@174 $generated@@262 $generated@@258))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (! (= (type ($generated@@263 $generated@@265 $generated@@266)) $generated@@178)
 :pattern ( ($generated@@263 $generated@@265 $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> (and (and (and (= (type $generated@@267) $generated@@71) (= (type $generated@@268) $generated@@71)) (= (type $generated@@269) $generated@@192)) (= (type $generated@@270) $generated@@192)) (= ($generated@@174 ($generated@@263 $generated@@269 $generated@@270) ($generated@@183 $generated@@267 $generated@@268))  (and ($generated@@264 $generated@@269 $generated@@267) ($generated@@264 $generated@@270 $generated@@268))))
 :pattern ( ($generated@@174 ($generated@@263 $generated@@269 $generated@@270) ($generated@@183 $generated@@267 $generated@@268)))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> (and (= (type $generated@@271) $generated@@178) (= (type $generated@@272) $generated@@178)) (= ($generated@@189 $generated@@271 $generated@@272) (= $generated@@271 $generated@@272)))
 :pattern ( ($generated@@189 $generated@@271 $generated@@272))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and (= (type $generated@@274) $generated@@178) (= (type $generated@@275) $generated@@178)) (= ($generated@@273 $generated@@274 $generated@@275) (= $generated@@274 $generated@@275)))
 :pattern ( ($generated@@273 $generated@@274 $generated@@275))
)))
(assert (forall (($generated@@277 T@U) ) (! (= (type ($generated@@276 $generated@@277)) $generated@@71)
 :pattern ( ($generated@@276 $generated@@277))
)))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and (= (type $generated@@278) ($generated@@83 $generated@@192 $generated@@4)) (= (type $generated@@279) $generated@@71)) (= ($generated@@174 $generated@@278 ($generated@@276 $generated@@279)) (forall (($generated@@280 T@U) ) (!  (=> (and (= (type $generated@@280) $generated@@192) ($generated@@0 ($generated@@88 $generated@@278 $generated@@280))) ($generated@@264 $generated@@280 $generated@@279))
 :pattern ( ($generated@@88 $generated@@278 $generated@@280))
))))
 :pattern ( ($generated@@174 $generated@@278 ($generated@@276 $generated@@279)))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@71)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (=> (and (= (type $generated@@283) ($generated@@83 $generated@@192 $generated@@4)) (= (type $generated@@284) $generated@@71)) (= ($generated@@174 $generated@@283 ($generated@@281 $generated@@284)) (forall (($generated@@285 T@U) ) (!  (=> (and (= (type $generated@@285) $generated@@192) ($generated@@0 ($generated@@88 $generated@@283 $generated@@285))) ($generated@@264 $generated@@285 $generated@@284))
 :pattern ( ($generated@@88 $generated@@283 $generated@@285))
))))
 :pattern ( ($generated@@174 $generated@@283 ($generated@@281 $generated@@284)))
)))
(assert (forall (($generated@@287 Int) ) (! (= ($generated@@286 $generated@@287) $generated@@287)
 :pattern ( ($generated@@286 $generated@@287))
)))
(assert (forall (($generated@@289 T@U) ) (! (let (($generated@@290 (type $generated@@289)))
(= (type ($generated@@288 $generated@@289)) $generated@@290))
 :pattern ( ($generated@@288 $generated@@289))
)))
(assert (forall (($generated@@291 T@U) ) (! (= ($generated@@288 $generated@@291) $generated@@291)
 :pattern ( ($generated@@288 $generated@@291))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@294) $generated@@71) (= (type $generated@@295) $generated@@71)) (= (type $generated@@296) $generated@@192)) (= (type $generated@@297) $generated@@192)) (= (type $generated@@298) ($generated@@83 $generated@@84 $generated@@85))) ($generated@@292 $generated@@298)) (= ($generated@@81 ($generated@@263 $generated@@296 $generated@@297) ($generated@@183 $generated@@294 $generated@@295) $generated@@298)  (and ($generated@@293 $generated@@296 $generated@@294 $generated@@298) ($generated@@293 $generated@@297 $generated@@295 $generated@@298))))
 :pattern ( ($generated@@81 ($generated@@263 $generated@@296 $generated@@297) ($generated@@183 $generated@@294 $generated@@295) $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ) (! (= (type ($generated@@299 $generated@@300)) $generated@@75)
 :pattern ( ($generated@@299 $generated@@300))
)))
(assert (forall (($generated@@301 T@U) ) (!  (=> (= (type $generated@@301) $generated@@178) (= ($generated@@182 $generated@@301) (= ($generated@@299 $generated@@301) $generated@@62)))
 :pattern ( ($generated@@182 $generated@@301))
)))
(assert (forall (($generated@@302 T@U) ) (!  (=> (= (type $generated@@302) $generated@@178) (= ($generated@@261 $generated@@302) (= ($generated@@299 $generated@@302) $generated@@64)))
 :pattern ( ($generated@@261 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@178) ($generated@@182 $generated@@303)) (exists (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (and (and (= (type $generated@@304) $generated@@192) (= (type $generated@@305) $generated@@192)) (= $generated@@303 ($generated@@263 $generated@@304 $generated@@305)))
 :no-pattern (type $generated@@304)
 :no-pattern (type $generated@@305)
 :no-pattern ($generated $generated@@304)
 :no-pattern ($generated@@0 $generated@@304)
 :no-pattern ($generated $generated@@305)
 :no-pattern ($generated@@0 $generated@@305)
)))
 :pattern ( ($generated@@182 $generated@@303))
)))
(assert  (and (and (forall (($generated@@310 T@T) ) (= ($generated@@1 ($generated@@308 $generated@@310)) 18)) (forall (($generated@@311 T@T) ) (! (= ($generated@@309 ($generated@@308 $generated@@311)) $generated@@311)
 :pattern ( ($generated@@308 $generated@@311))
))) (forall (($generated@@312 T@T) ) (! (= (type ($generated@@306 $generated@@312)) ($generated@@308 $generated@@312))
 :pattern ( ($generated@@306 $generated@@312))
))))
(assert (forall (($generated@@313 T@T) ) (! (= ($generated@@307 ($generated@@306 $generated@@313)) 0)
 :pattern ( ($generated@@306 $generated@@313))
)))
(assert (forall (($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and (= (type $generated@@315) $generated@@178) (= (type $generated@@316) $generated@@178)) true) (= ($generated@@273 $generated@@315 $generated@@316) (= ($generated@@314 $generated@@315) ($generated@@314 $generated@@316))))
 :pattern ( ($generated@@273 $generated@@315 $generated@@316))
)))
(assert (forall (($generated@@318 Int) ) (! (= (type ($generated@@317 $generated@@318)) $generated@@178)
 :pattern ( ($generated@@317 $generated@@318))
)))
(assert (forall (($generated@@319 T@U) ) (!  (=> (and (= (type $generated@@319) $generated@@178) ($generated@@261 $generated@@319)) (exists (($generated@@320 Int) ) (= $generated@@319 ($generated@@317 $generated@@320))))
 :pattern ( ($generated@@261 $generated@@319))
)))
(assert (forall (($generated@@321 T@U) ) (!  (=> (= (type $generated@@321) $generated@@2) (= ($generated@@174 $generated@@321 $generated@@139) (<= ($generated@@286 0) ($generated $generated@@321))))
 :pattern ( ($generated@@174 $generated@@321 $generated@@139))
)))
(assert (forall (($generated@@323 T@U) ) (! (= (type ($generated@@322 $generated@@323)) $generated@@192)
 :pattern ( ($generated@@322 $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and (= (type $generated@@325) $generated@@71) (= (type $generated@@326) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@293 ($generated@@322 $generated@@324) $generated@@325 $generated@@326) ($generated@@81 $generated@@324 $generated@@325 $generated@@326)))
 :pattern ( ($generated@@293 ($generated@@322 $generated@@324) $generated@@325 $generated@@326))
)))
(assert (forall (($generated@@329 T@T) ) (! (= (type ($generated@@328 $generated@@329)) ($generated@@83 $generated@@329 $generated@@2))
 :pattern ( ($generated@@328 $generated@@329))
)))
(assert (forall (($generated@@330 T@U) ) (! (let (($generated@@331 ($generated@@86 (type $generated@@330))))
 (=> (= (type $generated@@330) ($generated@@83 $generated@@331 $generated@@2)) (and (= (= ($generated@@327 $generated@@330) 0) (= $generated@@330 ($generated@@328 $generated@@331))) (=> (not (= ($generated@@327 $generated@@330) 0)) (exists (($generated@@332 T@U) ) (!  (and (= (type $generated@@332) $generated@@331) (< 0 ($generated ($generated@@88 $generated@@330 $generated@@332))))
 :no-pattern (type $generated@@332)
 :no-pattern ($generated $generated@@332)
 :no-pattern ($generated@@0 $generated@@332)
))))))
 :pattern ( ($generated@@327 $generated@@330))
)))
(assert (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= (type ($generated@@333 $generated@@334 $generated@@335)) ($generated@@144 $generated@@334 $generated@@335))
 :pattern ( ($generated@@333 $generated@@334 $generated@@335))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (let (($generated@@338 (type $generated@@336)))
 (not ($generated@@0 ($generated@@88 ($generated@@142 ($generated@@333 $generated@@338 $generated@@337)) $generated@@336))))
 :pattern ( (let (($generated@@338 (type $generated@@336)))
($generated@@88 ($generated@@142 ($generated@@333 $generated@@338 $generated@@337)) $generated@@336)))
)))
(assert  (and (and (and (and (forall (($generated@@344 T@T) ($generated@@345 T@T) ) (= ($generated@@1 ($generated@@341 $generated@@344 $generated@@345)) 19)) (forall (($generated@@346 T@T) ($generated@@347 T@T) ) (! (= ($generated@@342 ($generated@@341 $generated@@346 $generated@@347)) $generated@@346)
 :pattern ( ($generated@@341 $generated@@346 $generated@@347))
))) (forall (($generated@@348 T@T) ($generated@@349 T@T) ) (! (= ($generated@@343 ($generated@@341 $generated@@348 $generated@@349)) $generated@@349)
 :pattern ( ($generated@@341 $generated@@348 $generated@@349))
))) (forall (($generated@@350 T@U) ) (! (let (($generated@@351 ($generated@@342 (type $generated@@350))))
(= (type ($generated@@339 $generated@@350)) ($generated@@83 $generated@@351 $generated@@4)))
 :pattern ( ($generated@@339 $generated@@350))
))) (forall (($generated@@352 T@T) ($generated@@353 T@T) ) (! (= (type ($generated@@340 $generated@@352 $generated@@353)) ($generated@@341 $generated@@352 $generated@@353))
 :pattern ( ($generated@@340 $generated@@352 $generated@@353))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@T) ) (! (let (($generated@@356 (type $generated@@354)))
 (not ($generated@@0 ($generated@@88 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354))))
 :pattern ( (let (($generated@@356 (type $generated@@354)))
($generated@@88 ($generated@@339 ($generated@@340 $generated@@356 $generated@@355)) $generated@@354)))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@86 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@83 $generated@@358 $generated@@2)) (= ($generated@@198 $generated@@357) (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@358) (and (<= 0 ($generated ($generated@@88 $generated@@357 $generated@@359))) (<= ($generated ($generated@@88 $generated@@357 $generated@@359)) ($generated@@327 $generated@@357))))
 :pattern ( ($generated@@88 $generated@@357 $generated@@359))
)))))
 :pattern ( ($generated@@198 $generated@@357))
)))
(assert (forall (($generated@@361 T@T) ($generated@@362 T@U) ) (! (= (type ($generated@@360 $generated@@361 $generated@@362)) $generated@@361)
 :pattern ( ($generated@@360 $generated@@361 $generated@@362))
)))
(assert (forall (($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@363) $generated@@192) ($generated@@264 $generated@@363 $generated@@139)) (and (= ($generated@@322 ($generated@@360 $generated@@2 $generated@@363)) $generated@@363) ($generated@@174 ($generated@@360 $generated@@2 $generated@@363) $generated@@139)))
 :pattern ( ($generated@@264 $generated@@363 $generated@@139))
)))
(assert (forall (($generated@@364 T@U) ) (!  (=> (and (= (type $generated@@364) $generated@@192) ($generated@@264 $generated@@364 $generated@@258)) (and (= ($generated@@322 ($generated@@360 $generated@@178 $generated@@364)) $generated@@364) ($generated@@174 ($generated@@360 $generated@@178 $generated@@364) $generated@@258)))
 :pattern ( ($generated@@264 $generated@@364 $generated@@258))
)))
(assert (forall (($generated@@365 T@U) ) (!  (=> (and (= (type $generated@@365) $generated@@192) ($generated@@264 $generated@@365 $generated@@180)) (and (= ($generated@@322 ($generated@@360 $generated@@178 $generated@@365)) $generated@@365) ($generated@@174 ($generated@@360 $generated@@178 $generated@@365) $generated@@180)))
 :pattern ( ($generated@@264 $generated@@365 $generated@@180))
)))
(assert (forall (($generated@@366 T@U) ) (! (let (($generated@@367 ($generated@@146 (type $generated@@366))))
(let (($generated@@368 ($generated@@145 (type $generated@@366))))
 (=> (= (type $generated@@366) ($generated@@144 $generated@@368 $generated@@367)) (or (= $generated@@366 ($generated@@333 $generated@@368 $generated@@367)) (exists (($generated@@369 T@U) ) (!  (and (= (type $generated@@369) $generated@@368) ($generated@@0 ($generated@@88 ($generated@@142 $generated@@366) $generated@@369)))
 :no-pattern (type $generated@@369)
 :no-pattern ($generated $generated@@369)
 :no-pattern ($generated@@0 $generated@@369)
))))))
 :pattern ( ($generated@@142 $generated@@366))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@146 (type $generated@@371))))
(= (type ($generated@@370 $generated@@371)) ($generated@@83 $generated@@372 $generated@@4)))
 :pattern ( ($generated@@370 $generated@@371))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@146 (type $generated@@373))))
(let (($generated@@375 ($generated@@145 (type $generated@@373))))
 (=> (= (type $generated@@373) ($generated@@144 $generated@@375 $generated@@374)) (or (= $generated@@373 ($generated@@333 $generated@@375 $generated@@374)) (exists (($generated@@376 T@U) ) (!  (and (= (type $generated@@376) $generated@@374) ($generated@@0 ($generated@@88 ($generated@@370 $generated@@373) $generated@@376)))
 :no-pattern (type $generated@@376)
 :no-pattern ($generated $generated@@376)
 :no-pattern ($generated@@0 $generated@@376)
))))))
 :pattern ( ($generated@@370 $generated@@373))
)))
(assert (forall (($generated@@377 T@U) ) (! (let (($generated@@378 ($generated@@343 (type $generated@@377))))
(let (($generated@@379 ($generated@@342 (type $generated@@377))))
 (=> (= (type $generated@@377) ($generated@@341 $generated@@379 $generated@@378)) (or (= $generated@@377 ($generated@@340 $generated@@379 $generated@@378)) (exists (($generated@@380 T@U) ) (!  (and (= (type $generated@@380) $generated@@379) ($generated@@0 ($generated@@88 ($generated@@339 $generated@@377) $generated@@380)))
 :no-pattern (type $generated@@380)
 :no-pattern ($generated $generated@@380)
 :no-pattern ($generated@@0 $generated@@380)
))))))
 :pattern ( ($generated@@339 $generated@@377))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@343 (type $generated@@382))))
(= (type ($generated@@381 $generated@@382)) ($generated@@83 $generated@@383 $generated@@4)))
 :pattern ( ($generated@@381 $generated@@382))
)))
(assert (forall (($generated@@384 T@U) ) (! (let (($generated@@385 ($generated@@343 (type $generated@@384))))
(let (($generated@@386 ($generated@@342 (type $generated@@384))))
 (=> (= (type $generated@@384) ($generated@@341 $generated@@386 $generated@@385)) (or (= $generated@@384 ($generated@@340 $generated@@386 $generated@@385)) (exists (($generated@@387 T@U) ) (!  (and (= (type $generated@@387) $generated@@385) ($generated@@0 ($generated@@88 ($generated@@381 $generated@@384) $generated@@387)))
 :no-pattern (type $generated@@387)
 :no-pattern ($generated $generated@@387)
 :no-pattern ($generated@@0 $generated@@387)
))))))
 :pattern ( ($generated@@381 $generated@@384))
)))
(assert (forall (($generated@@388 T@U) ($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@388) ($generated@@83 $generated@@192 $generated@@2)) (= (type $generated@@389) $generated@@71)) (= ($generated@@174 $generated@@388 ($generated@@197 $generated@@389)) (forall (($generated@@390 T@U) ) (!  (=> (and (= (type $generated@@390) $generated@@192) (< 0 ($generated ($generated@@88 $generated@@388 $generated@@390)))) ($generated@@264 $generated@@390 $generated@@389))
 :pattern ( ($generated@@88 $generated@@388 $generated@@390))
))))
 :pattern ( ($generated@@174 $generated@@388 ($generated@@197 $generated@@389)))
)))
(assert (forall (($generated@@391 Int) ($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) ($generated@@83 $generated@@84 $generated@@85)) ($generated@@292 $generated@@392)) (= ($generated@@81 ($generated@@317 $generated@@391) $generated@@258 $generated@@392) ($generated@@81 ($generated@@8 $generated@@391) $generated@@46 $generated@@392)))
 :pattern ( ($generated@@81 ($generated@@317 $generated@@391) $generated@@258 $generated@@392))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@83 $generated@@192 $generated@@4)) (= (type $generated@@394) $generated@@71)) (= (type $generated@@395) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@393 ($generated@@276 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@192) ($generated@@0 ($generated@@88 $generated@@393 $generated@@396))) ($generated@@293 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@88 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@81 $generated@@393 ($generated@@276 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (and (= (type $generated@@397) ($generated@@83 $generated@@192 $generated@@4)) (= (type $generated@@398) $generated@@71)) (= (type $generated@@399) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@397 ($generated@@281 $generated@@398) $generated@@399) (forall (($generated@@400 T@U) ) (!  (=> (and (= (type $generated@@400) $generated@@192) ($generated@@0 ($generated@@88 $generated@@397 $generated@@400))) ($generated@@293 $generated@@400 $generated@@398 $generated@@399))
 :pattern ( ($generated@@88 $generated@@397 $generated@@400))
))))
 :pattern ( ($generated@@81 $generated@@397 ($generated@@281 $generated@@398) $generated@@399))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 (type $generated@@401)))
(= ($generated ($generated@@88 ($generated@@328 $generated@@402) $generated@@401)) 0))
 :pattern ( (let (($generated@@402 (type $generated@@401)))
($generated@@88 ($generated@@328 $generated@@402) $generated@@401)))
)))
(assert (forall (($generated@@404 T@U) ) (! (= (type ($generated@@403 $generated@@404)) ($generated@@83 $generated@@192 $generated@@4))
 :pattern ( ($generated@@403 $generated@@404))
)))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@144 $generated@@192 $generated@@192)) (= (type $generated@@406) $generated@@192)) (= ($generated@@0 ($generated@@88 ($generated@@403 $generated@@405) $generated@@406))  (and ($generated@@0 ($generated@@88 ($generated@@142 $generated@@405) ($generated@@190 ($generated@@360 $generated@@178 $generated@@406)))) (= ($generated@@88 ($generated@@165 $generated@@405) ($generated@@190 ($generated@@360 $generated@@178 $generated@@406))) ($generated@@191 ($generated@@360 $generated@@178 $generated@@406))))))
 :pattern ( ($generated@@88 ($generated@@403 $generated@@405) $generated@@406))
)))
(assert  (and (forall (($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@409)) ($generated@@83 $generated@@192 $generated@@4))
 :pattern ( ($generated@@407 $generated@@409))
)) (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@343 (type $generated@@410))))
(let (($generated@@412 ($generated@@342 (type $generated@@410))))
(= (type ($generated@@408 $generated@@410)) ($generated@@83 $generated@@412 $generated@@411))))
 :pattern ( ($generated@@408 $generated@@410))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@413) ($generated@@341 $generated@@192 $generated@@192)) (= (type $generated@@414) $generated@@192)) (= ($generated@@0 ($generated@@88 ($generated@@407 $generated@@413) $generated@@414))  (and ($generated@@0 ($generated@@88 ($generated@@339 $generated@@413) ($generated@@190 ($generated@@360 $generated@@178 $generated@@414)))) (= ($generated@@88 ($generated@@408 $generated@@413) ($generated@@190 ($generated@@360 $generated@@178 $generated@@414))) ($generated@@191 ($generated@@360 $generated@@178 $generated@@414))))))
 :pattern ( ($generated@@88 ($generated@@407 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
(let (($generated@@418 ($generated@@145 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@144 $generated@@418 $generated@@417)) (= ($generated@@0 ($generated@@88 ($generated@@370 $generated@@415) $generated@@416)) (exists (($generated@@419 T@U) ) (!  (and (= (type $generated@@419) $generated@@418) (and ($generated@@0 ($generated@@88 ($generated@@142 $generated@@415) $generated@@419)) (= $generated@@416 ($generated@@88 ($generated@@165 $generated@@415) $generated@@419))))
 :pattern ( ($generated@@88 ($generated@@142 $generated@@415) $generated@@419))
 :pattern ( ($generated@@88 ($generated@@165 $generated@@415) $generated@@419))
))))))
 :pattern ( ($generated@@88 ($generated@@370 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@342 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@341 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@88 ($generated@@381 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@88 ($generated@@339 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@88 ($generated@@408 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@88 ($generated@@339 $generated@@420) $generated@@424))
 :pattern ( ($generated@@88 ($generated@@408 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@88 ($generated@@381 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@426 $generated@@427)) $generated@@71)
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (= (type $generated@@428) ($generated@@144 $generated@@192 $generated@@192)) (= (type $generated@@429) $generated@@71)) (= (type $generated@@430) $generated@@71)) (= (type $generated@@431) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@192) ($generated@@0 ($generated@@88 ($generated@@142 $generated@@428) $generated@@432))) (and ($generated@@293 ($generated@@88 ($generated@@165 $generated@@428) $generated@@432) $generated@@430 $generated@@431) ($generated@@293 $generated@@432 $generated@@429 $generated@@431)))
 :pattern ( ($generated@@88 ($generated@@165 $generated@@428) $generated@@432))
 :pattern ( ($generated@@88 ($generated@@142 $generated@@428) $generated@@432))
))))
 :pattern ( ($generated@@81 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@434 $generated@@435)) $generated@@71)
 :pattern ( ($generated@@433 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (and (= (type $generated@@436) ($generated@@341 $generated@@192 $generated@@192)) (= (type $generated@@437) $generated@@71)) (= (type $generated@@438) $generated@@71)) (= (type $generated@@439) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439) (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@192) ($generated@@0 ($generated@@88 ($generated@@339 $generated@@436) $generated@@440))) (and ($generated@@293 ($generated@@88 ($generated@@408 $generated@@436) $generated@@440) $generated@@438 $generated@@439) ($generated@@293 $generated@@440 $generated@@437 $generated@@439)))
 :pattern ( ($generated@@88 ($generated@@408 $generated@@436) $generated@@440))
 :pattern ( ($generated@@88 ($generated@@339 $generated@@436) $generated@@440))
))))
 :pattern ( ($generated@@81 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@442 Int) ($generated@@443 Int) ) (! (= ($generated@@441 $generated@@442 $generated@@443) (div $generated@@442 $generated@@443))
 :pattern ( ($generated@@441 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ($generated@@446 T@U) ) (! (let (($generated@@447 (type $generated@@446)))
(= (type ($generated@@444 $generated@@445 $generated@@446)) ($generated@@83 $generated@@447 $generated@@4)))
 :pattern ( ($generated@@444 $generated@@445 $generated@@446))
)))
(assert (forall (($generated@@448 T@U) ($generated@@449 T@U) ($generated@@450 T@U) ) (! (let (($generated@@451 (type $generated@@449)))
 (=> (and (and (= (type $generated@@448) ($generated@@83 $generated@@451 $generated@@4)) (= (type $generated@@450) $generated@@451)) ($generated@@0 ($generated@@88 $generated@@448 $generated@@450))) ($generated@@0 ($generated@@88 ($generated@@444 $generated@@448 $generated@@449) $generated@@450))))
 :pattern ( ($generated@@444 $generated@@448 $generated@@449) ($generated@@88 $generated@@448 $generated@@450))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ($generated@@454 T@U) ) (! (let (($generated@@455 (type $generated@@453)))
 (=> (and (= (type $generated@@452) ($generated@@83 $generated@@455 $generated@@4)) (= (type $generated@@454) $generated@@455)) (= ($generated@@0 ($generated@@88 ($generated@@444 $generated@@452 $generated@@453) $generated@@454))  (or (= $generated@@454 $generated@@453) ($generated@@0 ($generated@@88 $generated@@452 $generated@@454))))))
 :pattern ( ($generated@@88 ($generated@@444 $generated@@452 $generated@@453) $generated@@454))
)))
(assert (forall (($generated@@457 T@T) ) (! (= (type ($generated@@456 $generated@@457)) ($generated@@83 $generated@@457 $generated@@4))
 :pattern ( ($generated@@456 $generated@@457))
)))
(assert (forall (($generated@@458 T@U) ) (! (let (($generated@@459 ($generated@@343 (type $generated@@458))))
(let (($generated@@460 ($generated@@342 (type $generated@@458))))
 (=> (= (type $generated@@458) ($generated@@341 $generated@@460 $generated@@459)) (= (= $generated@@458 ($generated@@340 $generated@@460 $generated@@459)) (= ($generated@@339 $generated@@458) ($generated@@456 $generated@@460))))))
 :pattern ( ($generated@@339 $generated@@458))
)))
(assert (forall (($generated@@461 T@U) ) (! (let (($generated@@462 ($generated@@343 (type $generated@@461))))
(let (($generated@@463 ($generated@@342 (type $generated@@461))))
 (=> (= (type $generated@@461) ($generated@@341 $generated@@463 $generated@@462)) (= (= $generated@@461 ($generated@@340 $generated@@463 $generated@@462)) (= ($generated@@381 $generated@@461) ($generated@@456 $generated@@462))))))
 :pattern ( ($generated@@381 $generated@@461))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@343 (type $generated@@464))))
(let (($generated@@466 ($generated@@342 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@341 $generated@@466 $generated@@465)) (= (= $generated@@464 ($generated@@340 $generated@@466 $generated@@465)) (= ($generated@@407 $generated@@464) ($generated@@456 $generated@@192))))))
 :pattern ( ($generated@@407 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (let (($generated@@468 ($generated@@146 (type $generated@@467))))
(let (($generated@@469 ($generated@@145 (type $generated@@467))))
 (=> (= (type $generated@@467) ($generated@@144 $generated@@469 $generated@@468)) (or (= $generated@@467 ($generated@@333 $generated@@469 $generated@@468)) (exists (($generated@@470 T@U) ($generated@@471 T@U) ) (!  (and (and (= (type $generated@@470) $generated@@192) (= (type $generated@@471) $generated@@192)) ($generated@@0 ($generated@@88 ($generated@@403 $generated@@467) ($generated@@322 ($generated@@263 $generated@@470 $generated@@471)))))
 :no-pattern (type $generated@@470)
 :no-pattern (type $generated@@471)
 :no-pattern ($generated $generated@@470)
 :no-pattern ($generated@@0 $generated@@470)
 :no-pattern ($generated $generated@@471)
 :no-pattern ($generated@@0 $generated@@471)
))))))
 :pattern ( ($generated@@403 $generated@@467))
)))
(assert (forall (($generated@@472 T@U) ) (! (let (($generated@@473 ($generated@@343 (type $generated@@472))))
(let (($generated@@474 ($generated@@342 (type $generated@@472))))
 (=> (= (type $generated@@472) ($generated@@341 $generated@@474 $generated@@473)) (or (= $generated@@472 ($generated@@340 $generated@@474 $generated@@473)) (exists (($generated@@475 T@U) ($generated@@476 T@U) ) (!  (and (and (= (type $generated@@475) $generated@@192) (= (type $generated@@476) $generated@@192)) ($generated@@0 ($generated@@88 ($generated@@407 $generated@@472) ($generated@@322 ($generated@@263 $generated@@475 $generated@@476)))))
 :no-pattern (type $generated@@475)
 :no-pattern (type $generated@@476)
 :no-pattern ($generated $generated@@475)
 :no-pattern ($generated@@0 $generated@@475)
 :no-pattern ($generated $generated@@476)
 :no-pattern ($generated@@0 $generated@@476)
))))))
 :pattern ( ($generated@@407 $generated@@472))
)))
(assert  (=> (<= 2 $generated@@176) (forall (($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@479) $generated@@178) (or ($generated@@179 ($generated@@288 $generated@@479)) (and (not (= 2 $generated@@176)) ($generated@@174 $generated@@479 $generated@@180)))) (and (and ($generated@@261 ($generated@@288 $generated@@479)) (=> (not (= ($generated@@286 ($generated@@477 ($generated@@314 ($generated@@288 $generated@@479)) ($generated@@286 2))) ($generated@@286 1))) ($generated@@261 ($generated@@288 $generated@@479)))) (= ($generated@@177 ($generated@@288 $generated@@479)) (ite (= ($generated@@286 ($generated@@477 ($generated@@314 ($generated@@288 $generated@@479)) ($generated@@286 2))) ($generated@@286 1)) ($generated@@441 1 ($generated@@286 0)) ($generated@@478 ($generated@@286 ($generated@@314 ($generated@@288 $generated@@479))) ($generated@@286 2))))))
 :weight 3
 :pattern ( ($generated@@177 ($generated@@288 $generated@@479)))
))))
(assert (forall (($generated@@480 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@192) ($generated@@264 $generated@@480 $generated@@46)) (and (= ($generated@@322 ($generated@@360 $generated@@2 $generated@@480)) $generated@@480) ($generated@@174 ($generated@@360 $generated@@2 $generated@@480) $generated@@46)))
 :pattern ( ($generated@@264 $generated@@480 $generated@@46))
)))
(assert (forall (($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@481) $generated@@192) ($generated@@264 $generated@@481 $generated@@47)) (and (= ($generated@@322 ($generated@@360 $generated@@3 $generated@@481)) $generated@@481) ($generated@@174 ($generated@@360 $generated@@3 $generated@@481) $generated@@47)))
 :pattern ( ($generated@@264 $generated@@481 $generated@@47))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@192) ($generated@@264 $generated@@482 $generated@@44)) (and (= ($generated@@322 ($generated@@360 $generated@@4 $generated@@482)) $generated@@482) ($generated@@174 ($generated@@360 $generated@@4 $generated@@482) $generated@@44)))
 :pattern ( ($generated@@264 $generated@@482 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@483) 20))
(assert (forall (($generated@@484 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@192) ($generated@@264 $generated@@484 $generated@@45)) (and (= ($generated@@322 ($generated@@360 $generated@@483 $generated@@484)) $generated@@484) ($generated@@174 ($generated@@360 $generated@@483 $generated@@484) $generated@@45)))
 :pattern ( ($generated@@264 $generated@@484 $generated@@45))
)))
(assert (forall (($generated@@485 T@U) ($generated@@486 T@U) ) (!  (=> (= (type $generated@@486) $generated@@71) (= ($generated@@264 ($generated@@322 $generated@@485) $generated@@486) ($generated@@174 $generated@@485 $generated@@486)))
 :pattern ( ($generated@@264 ($generated@@322 $generated@@485) $generated@@486))
)))
(assert (forall (($generated@@487 T@U) ) (! (let (($generated@@488 ($generated@@86 (type $generated@@487))))
 (=> (= (type $generated@@487) ($generated@@83 $generated@@488 $generated@@2)) (<= 0 ($generated@@327 $generated@@487))))
 :pattern ( ($generated@@327 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (let (($generated@@490 ($generated@@309 (type $generated@@489))))
 (=> (= (type $generated@@489) ($generated@@308 $generated@@490)) (<= 0 ($generated@@307 $generated@@489))))
 :pattern ( ($generated@@307 $generated@@489))
)))
(assert  (=> (<= 2 $generated@@176) (forall (($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@491) $generated@@178) (or ($generated@@179 $generated@@491) (and (not (= 2 $generated@@176)) ($generated@@174 $generated@@491 $generated@@180)))) (and (and ($generated@@261 $generated@@491) (=> (not (= ($generated@@477 ($generated@@314 $generated@@491) ($generated@@286 2)) ($generated@@286 1))) ($generated@@261 $generated@@491))) (= ($generated@@177 $generated@@491) (ite (= ($generated@@477 ($generated@@314 $generated@@491) ($generated@@286 2)) ($generated@@286 1)) ($generated@@441 1 ($generated@@286 0)) ($generated@@478 ($generated@@314 $generated@@491) ($generated@@286 2))))))
 :pattern ( ($generated@@177 $generated@@491))
))))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@71)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@71) (= (type $generated@@495) $generated@@71)) (= ($generated@@492 ($generated@@425 $generated@@494 $generated@@495)) $generated@@494))
 :pattern ( ($generated@@425 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@497 T@U) ) (! (= (type ($generated@@496 $generated@@497)) $generated@@71)
 :pattern ( ($generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@71) (= (type $generated@@499) $generated@@71)) (= ($generated@@496 ($generated@@425 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@425 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@71) (= (type $generated@@501) $generated@@71)) (= ($generated@@79 ($generated@@425 $generated@@500 $generated@@501)) $generated@@58))
 :pattern ( ($generated@@425 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@503 T@U) ) (! (= (type ($generated@@502 $generated@@503)) $generated@@71)
 :pattern ( ($generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@71) (= (type $generated@@505) $generated@@71)) (= ($generated@@502 ($generated@@433 $generated@@504 $generated@@505)) $generated@@504))
 :pattern ( ($generated@@433 $generated@@504 $generated@@505))
)))
(assert (forall (($generated@@507 T@U) ) (! (= (type ($generated@@506 $generated@@507)) $generated@@71)
 :pattern ( ($generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@71) (= (type $generated@@509) $generated@@71)) (= ($generated@@506 ($generated@@433 $generated@@508 $generated@@509)) $generated@@509))
 :pattern ( ($generated@@433 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@71) (= (type $generated@@511) $generated@@71)) (= ($generated@@79 ($generated@@433 $generated@@510 $generated@@511)) $generated@@59))
 :pattern ( ($generated@@433 $generated@@510 $generated@@511))
)))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ) (!  (=> (and (= (type $generated@@512) $generated@@192) (= (type $generated@@513) $generated@@192)) (= ($generated@@299 ($generated@@263 $generated@@512 $generated@@513)) $generated@@62))
 :pattern ( ($generated@@263 $generated@@512 $generated@@513))
)))
(assert (forall (($generated@@515 T@U) ) (! (= (type ($generated@@514 $generated@@515)) $generated@@71)
 :pattern ( ($generated@@514 $generated@@515))
)))
(assert (forall (($generated@@516 T@U) ($generated@@517 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@71) (= (type $generated@@517) $generated@@71)) (= ($generated@@514 ($generated@@183 $generated@@516 $generated@@517)) $generated@@516))
 :pattern ( ($generated@@183 $generated@@516 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@71)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ($generated@@521 T@U) ) (!  (=> (and (= (type $generated@@520) $generated@@71) (= (type $generated@@521) $generated@@71)) (= ($generated@@518 ($generated@@183 $generated@@520 $generated@@521)) $generated@@521))
 :pattern ( ($generated@@183 $generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ($generated@@523 T@U) ) (!  (=> (and (= (type $generated@@522) $generated@@192) (= (type $generated@@523) $generated@@192)) (= ($generated@@190 ($generated@@263 $generated@@522 $generated@@523)) $generated@@522))
 :pattern ( ($generated@@263 $generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ($generated@@525 T@U) ) (!  (=> (and (= (type $generated@@524) $generated@@192) (= (type $generated@@525) $generated@@192)) (= ($generated@@191 ($generated@@263 $generated@@524 $generated@@525)) $generated@@525))
 :pattern ( ($generated@@263 $generated@@524 $generated@@525))
)))
(assert  (and (forall (($generated@@528 T@U) ) (! (= (type ($generated@@526 $generated@@528)) $generated@@71)
 :pattern ( ($generated@@526 $generated@@528))
)) (forall (($generated@@529 T@U) ($generated@@530 Int) ) (! (let (($generated@@531 ($generated@@309 (type $generated@@529))))
(= (type ($generated@@527 $generated@@529 $generated@@530)) $generated@@531))
 :pattern ( ($generated@@527 $generated@@529 $generated@@530))
))))
(assert (forall (($generated@@532 T@U) ($generated@@533 T@U) ($generated@@534 T@U) ) (!  (=> (and (and (= (type $generated@@532) ($generated@@308 $generated@@192)) (= (type $generated@@533) $generated@@71)) (= (type $generated@@534) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@532 ($generated@@526 $generated@@533) $generated@@534) (forall (($generated@@535 Int) ) (!  (=> (and (<= 0 $generated@@535) (< $generated@@535 ($generated@@307 $generated@@532))) ($generated@@293 ($generated@@527 $generated@@532 $generated@@535) $generated@@533 $generated@@534))
 :pattern ( ($generated@@527 $generated@@532 $generated@@535))
))))
 :pattern ( ($generated@@81 $generated@@532 ($generated@@526 $generated@@533) $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ) (! (let (($generated@@538 (type $generated@@537)))
 (=> (= (type $generated@@536) ($generated@@83 $generated@@538 $generated@@4)) ($generated@@0 ($generated@@88 ($generated@@444 $generated@@536 $generated@@537) $generated@@537))))
 :pattern ( ($generated@@444 $generated@@536 $generated@@537))
)))
(assert (forall (($generated@@540 Int) ) (! (= ($generated@@539 ($generated@@82 $generated@@540)) $generated@@540)
 :pattern ( ($generated@@82 $generated@@540))
)))
(assert (forall (($generated@@542 T@U) ) (! (= (type ($generated@@541 $generated@@542)) $generated@@71)
 :pattern ( ($generated@@541 $generated@@542))
)))
(assert (forall (($generated@@543 T@U) ) (!  (=> (= (type $generated@@543) $generated@@71) (= ($generated@@541 ($generated@@276 $generated@@543)) $generated@@543))
 :pattern ( ($generated@@276 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@71) (= ($generated@@79 ($generated@@276 $generated@@544)) $generated@@54))
 :pattern ( ($generated@@276 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ) (! (= (type ($generated@@545 $generated@@546)) $generated@@71)
 :pattern ( ($generated@@545 $generated@@546))
)))
(assert (forall (($generated@@547 T@U) ) (!  (=> (= (type $generated@@547) $generated@@71) (= ($generated@@545 ($generated@@281 $generated@@547)) $generated@@547))
 :pattern ( ($generated@@281 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ) (!  (=> (= (type $generated@@548) $generated@@71) (= ($generated@@79 ($generated@@281 $generated@@548)) $generated@@55))
 :pattern ( ($generated@@281 $generated@@548))
)))
(assert (forall (($generated@@550 T@U) ) (! (= (type ($generated@@549 $generated@@550)) $generated@@71)
 :pattern ( ($generated@@549 $generated@@550))
)))
(assert (forall (($generated@@551 T@U) ) (!  (=> (= (type $generated@@551) $generated@@71) (= ($generated@@549 ($generated@@197 $generated@@551)) $generated@@551))
 :pattern ( ($generated@@197 $generated@@551))
)))
(assert (forall (($generated@@552 T@U) ) (!  (=> (= (type $generated@@552) $generated@@71) (= ($generated@@79 ($generated@@197 $generated@@552)) $generated@@56))
 :pattern ( ($generated@@197 $generated@@552))
)))
(assert (forall (($generated@@554 T@U) ) (! (= (type ($generated@@553 $generated@@554)) $generated@@71)
 :pattern ( ($generated@@553 $generated@@554))
)))
(assert (forall (($generated@@555 T@U) ) (!  (=> (= (type $generated@@555) $generated@@71) (= ($generated@@553 ($generated@@526 $generated@@555)) $generated@@555))
 :pattern ( ($generated@@526 $generated@@555))
)))
(assert (forall (($generated@@556 T@U) ) (!  (=> (= (type $generated@@556) $generated@@71) (= ($generated@@79 ($generated@@526 $generated@@556)) $generated@@57))
 :pattern ( ($generated@@526 $generated@@556))
)))
(assert (forall (($generated@@557 Int) ) (! (= ($generated@@299 ($generated@@317 $generated@@557)) $generated@@64)
 :pattern ( ($generated@@317 $generated@@557))
)))
(assert (forall (($generated@@558 Int) ) (! (= ($generated@@314 ($generated@@317 $generated@@558)) $generated@@558)
 :pattern ( ($generated@@317 $generated@@558))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
(= ($generated@@360 $generated@@560 ($generated@@322 $generated@@559)) $generated@@559))
 :pattern ( ($generated@@322 $generated@@559))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@561) ($generated@@144 $generated@@192 $generated@@192)) (= (type $generated@@562) $generated@@71)) (= (type $generated@@563) $generated@@71)) (= ($generated@@174 $generated@@561 ($generated@@425 $generated@@562 $generated@@563)) (forall (($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@564) $generated@@192) ($generated@@0 ($generated@@88 ($generated@@142 $generated@@561) $generated@@564))) (and ($generated@@264 ($generated@@88 ($generated@@165 $generated@@561) $generated@@564) $generated@@563) ($generated@@264 $generated@@564 $generated@@562)))
 :pattern ( ($generated@@88 ($generated@@165 $generated@@561) $generated@@564))
 :pattern ( ($generated@@88 ($generated@@142 $generated@@561) $generated@@564))
))))
 :pattern ( ($generated@@174 $generated@@561 ($generated@@425 $generated@@562 $generated@@563)))
)))
(assert (forall (($generated@@565 T@U) ($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@565) ($generated@@341 $generated@@192 $generated@@192)) (= (type $generated@@566) $generated@@71)) (= (type $generated@@567) $generated@@71)) (= ($generated@@174 $generated@@565 ($generated@@433 $generated@@566 $generated@@567)) (forall (($generated@@568 T@U) ) (!  (=> (and (= (type $generated@@568) $generated@@192) ($generated@@0 ($generated@@88 ($generated@@339 $generated@@565) $generated@@568))) (and ($generated@@264 ($generated@@88 ($generated@@408 $generated@@565) $generated@@568) $generated@@567) ($generated@@264 $generated@@568 $generated@@566)))
 :pattern ( ($generated@@88 ($generated@@408 $generated@@565) $generated@@568))
 :pattern ( ($generated@@88 ($generated@@339 $generated@@565) $generated@@568))
))))
 :pattern ( ($generated@@174 $generated@@565 ($generated@@433 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@178) (= ($generated@@174 $generated@@569 $generated@@180)  (and ($generated@@174 $generated@@569 $generated@@258) (= ($generated@@477 ($generated@@314 $generated@@569) ($generated@@286 2)) ($generated@@286 0)))))
 :pattern ( ($generated@@174 $generated@@569 $generated@@180))
)))
(assert (forall (($generated@@572 T@U) ($generated@@573 T@U) ) (!  (=> (and (= (type $generated@@572) $generated@@192) (= (type $generated@@573) $generated@@192)) (< ($generated@@570 $generated@@572) ($generated@@571 ($generated@@263 $generated@@572 $generated@@573))))
 :pattern ( ($generated@@263 $generated@@572 $generated@@573))
)))
(assert (forall (($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@574) $generated@@192) (= (type $generated@@575) $generated@@192)) (< ($generated@@570 $generated@@575) ($generated@@571 ($generated@@263 $generated@@574 $generated@@575))))
 :pattern ( ($generated@@263 $generated@@574 $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ($generated@@578 T@U) ) (! (= (type ($generated@@576 $generated@@577 $generated@@578)) ($generated@@83 $generated@@192 $generated@@4))
 :pattern ( ($generated@@576 $generated@@577 $generated@@578))
)))
(assert (forall (($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@579) $generated@@71) (= (type $generated@@580) ($generated@@83 $generated@@192 $generated@@4))) (= (type $generated@@581) $generated@@192)) (= ($generated@@0 ($generated@@88 ($generated@@576 $generated@@579 $generated@@580) $generated@@581))  (and ($generated@@264 $generated@@581 $generated@@579) ($generated@@0 ($generated@@88 $generated@@580 $generated@@581)))))
 :pattern ( ($generated@@88 ($generated@@576 $generated@@579 $generated@@580) $generated@@581))
)))
(assert (forall (($generated@@582 Int) ) (! (= ($generated@@174 ($generated@@317 $generated@@582) $generated@@258) ($generated@@174 ($generated@@8 $generated@@582) $generated@@46))
 :pattern ( ($generated@@174 ($generated@@317 $generated@@582) $generated@@258))
)))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (and (= (type $generated@@583) $generated@@192) (= (type $generated@@584) $generated@@71)) (= (type $generated@@585) $generated@@71)) ($generated@@264 $generated@@583 ($generated@@425 $generated@@584 $generated@@585))) (and (= ($generated@@322 ($generated@@360 ($generated@@144 $generated@@192 $generated@@192) $generated@@583)) $generated@@583) ($generated@@174 ($generated@@360 ($generated@@144 $generated@@192 $generated@@192) $generated@@583) ($generated@@425 $generated@@584 $generated@@585))))
 :pattern ( ($generated@@264 $generated@@583 ($generated@@425 $generated@@584 $generated@@585)))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (and (= (type $generated@@586) $generated@@192) (= (type $generated@@587) $generated@@71)) (= (type $generated@@588) $generated@@71)) ($generated@@264 $generated@@586 ($generated@@433 $generated@@587 $generated@@588))) (and (= ($generated@@322 ($generated@@360 ($generated@@341 $generated@@192 $generated@@192) $generated@@586)) $generated@@586) ($generated@@174 ($generated@@360 ($generated@@341 $generated@@192 $generated@@192) $generated@@586) ($generated@@433 $generated@@587 $generated@@588))))
 :pattern ( ($generated@@264 $generated@@586 ($generated@@433 $generated@@587 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ($generated@@590 T@U) ($generated@@591 T@U) ) (!  (=> (and (and (and (= (type $generated@@589) $generated@@71) (= (type $generated@@590) $generated@@71)) (= (type $generated@@591) $generated@@192)) ($generated@@264 $generated@@591 ($generated@@183 $generated@@589 $generated@@590))) (and (= ($generated@@322 ($generated@@360 $generated@@178 $generated@@591)) $generated@@591) ($generated@@174 ($generated@@360 $generated@@178 $generated@@591) ($generated@@183 $generated@@589 $generated@@590))))
 :pattern ( ($generated@@264 $generated@@591 ($generated@@183 $generated@@589 $generated@@590)))
)))
(assert (forall (($generated@@593 T@T) ) (! (= (type ($generated@@592 $generated@@593)) ($generated@@83 $generated@@593 $generated@@4))
 :pattern ( ($generated@@592 $generated@@593))
)))
(assert (forall (($generated@@594 T@U) ) (! (let (($generated@@595 (type $generated@@594)))
 (not ($generated@@0 ($generated@@88 ($generated@@592 $generated@@595) $generated@@594))))
 :pattern ( (let (($generated@@595 (type $generated@@594)))
($generated@@88 ($generated@@592 $generated@@595) $generated@@594)))
)))
(assert (forall (($generated@@596 T@U) ) (! (let (($generated@@597 (type $generated@@596)))
 (not ($generated@@0 ($generated@@88 ($generated@@456 $generated@@597) $generated@@596))))
 :pattern ( (let (($generated@@597 (type $generated@@596)))
($generated@@88 ($generated@@456 $generated@@597) $generated@@596)))
)))
(assert (forall (($generated@@598 Int) ($generated@@599 Int) ) (! (= ($generated@@477 $generated@@598 $generated@@599) (mod $generated@@598 $generated@@599))
 :pattern ( ($generated@@477 $generated@@598 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@600) ($generated@@83 $generated@@192 $generated@@4)) (= (type $generated@@601) ($generated@@83 $generated@@192 $generated@@192))) (= (type $generated@@602) $generated@@71)) (= (type $generated@@603) $generated@@71)) (forall (($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@604) $generated@@192) ($generated@@0 ($generated@@88 $generated@@600 $generated@@604))) (and ($generated@@264 $generated@@604 $generated@@602) ($generated@@264 ($generated@@88 $generated@@601 $generated@@604) $generated@@603)))
 :no-pattern (type $generated@@604)
 :no-pattern ($generated $generated@@604)
 :no-pattern ($generated@@0 $generated@@604)
))) ($generated@@174 ($generated@@143 $generated@@600 $generated@@601 ($generated@@425 $generated@@602 $generated@@603)) ($generated@@425 $generated@@602 $generated@@603)))
 :pattern ( ($generated@@143 $generated@@600 $generated@@601 ($generated@@425 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@606 T@U) ) (! (= (type ($generated@@605 $generated@@606)) $generated@@76)
 :pattern ( ($generated@@605 $generated@@606))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) $generated@@71) (= (type $generated@@608) $generated@@71)) (and (= ($generated@@79 ($generated@@183 $generated@@607 $generated@@608)) $generated@@63) (= ($generated@@605 ($generated@@183 $generated@@607 $generated@@608)) $generated@@68)))
 :pattern ( ($generated@@183 $generated@@607 $generated@@608))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (and (= (type $generated@@609) $generated@@178) (= (type $generated@@610) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@292 $generated@@610) (and ($generated@@261 $generated@@609) ($generated@@81 $generated@@609 $generated@@258 $generated@@610)))) ($generated@@81 ($generated@@8 ($generated@@314 $generated@@609)) $generated@@46 $generated@@610))
 :pattern ( ($generated@@81 ($generated@@8 ($generated@@314 $generated@@609)) $generated@@46 $generated@@610))
)))
(assert (forall (($generated@@611 Int) ($generated@@612 Int) ) (! (= ($generated@@478 $generated@@611 $generated@@612) (* $generated@@611 $generated@@612))
 :pattern ( ($generated@@478 $generated@@611 $generated@@612))
)))
(assert (forall (($generated@@613 T@U) ) (!  (=> (= (type $generated@@613) $generated@@178) (= ($generated@@570 ($generated@@322 $generated@@613)) ($generated@@571 $generated@@613)))
 :pattern ( ($generated@@570 ($generated@@322 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@614) $generated@@192) ($generated@@264 $generated@@614 ($generated@@82 0))) (and (= ($generated@@322 ($generated@@360 $generated@@2 $generated@@614)) $generated@@614) ($generated@@174 ($generated@@360 ($generated@@83 $generated@@192 $generated@@4) $generated@@614) ($generated@@82 0))))
 :pattern ( ($generated@@264 $generated@@614 ($generated@@82 0)))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (= (type $generated@@615) $generated@@192) (= (type $generated@@616) $generated@@71)) ($generated@@264 $generated@@615 ($generated@@276 $generated@@616))) (and (= ($generated@@322 ($generated@@360 ($generated@@83 $generated@@192 $generated@@4) $generated@@615)) $generated@@615) ($generated@@174 ($generated@@360 ($generated@@83 $generated@@192 $generated@@4) $generated@@615) ($generated@@276 $generated@@616))))
 :pattern ( ($generated@@264 $generated@@615 ($generated@@276 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ($generated@@618 T@U) ) (!  (=> (and (and (= (type $generated@@617) $generated@@192) (= (type $generated@@618) $generated@@71)) ($generated@@264 $generated@@617 ($generated@@281 $generated@@618))) (and (= ($generated@@322 ($generated@@360 ($generated@@83 $generated@@192 $generated@@4) $generated@@617)) $generated@@617) ($generated@@174 ($generated@@360 ($generated@@83 $generated@@192 $generated@@4) $generated@@617) ($generated@@281 $generated@@618))))
 :pattern ( ($generated@@264 $generated@@617 ($generated@@281 $generated@@618)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 T@U) ) (!  (=> (and (and (= (type $generated@@619) $generated@@192) (= (type $generated@@620) $generated@@71)) ($generated@@264 $generated@@619 ($generated@@197 $generated@@620))) (and (= ($generated@@322 ($generated@@360 ($generated@@83 $generated@@192 $generated@@2) $generated@@619)) $generated@@619) ($generated@@174 ($generated@@360 ($generated@@83 $generated@@192 $generated@@2) $generated@@619) ($generated@@197 $generated@@620))))
 :pattern ( ($generated@@264 $generated@@619 ($generated@@197 $generated@@620)))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ) (!  (=> (and (and (= (type $generated@@621) $generated@@192) (= (type $generated@@622) $generated@@71)) ($generated@@264 $generated@@621 ($generated@@526 $generated@@622))) (and (= ($generated@@322 ($generated@@360 ($generated@@308 $generated@@192) $generated@@621)) $generated@@621) ($generated@@174 ($generated@@360 ($generated@@308 $generated@@192) $generated@@621) ($generated@@526 $generated@@622))))
 :pattern ( ($generated@@264 $generated@@621 ($generated@@526 $generated@@622)))
)))
(assert (= ($generated@@79 $generated@@139) $generated@@61))
(assert (= ($generated@@605 $generated@@139) $generated@@67))
(assert (= ($generated@@79 $generated@@258) $generated@@65))
(assert (= ($generated@@605 $generated@@258) $generated@@69))
(assert (= ($generated@@79 $generated@@180) $generated@@66))
(assert (= ($generated@@605 $generated@@180) $generated@@70))
(assert (forall (($generated@@623 T@U) ($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (and (= (type $generated@@623) ($generated@@83 $generated@@192 $generated@@2)) (= (type $generated@@624) $generated@@71)) (= (type $generated@@625) ($generated@@83 $generated@@84 $generated@@85))) (= ($generated@@81 $generated@@623 ($generated@@197 $generated@@624) $generated@@625) (forall (($generated@@626 T@U) ) (!  (=> (and (= (type $generated@@626) $generated@@192) (< 0 ($generated ($generated@@88 $generated@@623 $generated@@626)))) ($generated@@293 $generated@@626 $generated@@624 $generated@@625))
 :pattern ( ($generated@@88 $generated@@623 $generated@@626))
))))
 :pattern ( ($generated@@81 $generated@@623 ($generated@@197 $generated@@624) $generated@@625))
)))
(assert (forall (($generated@@627 T@U) ($generated@@628 T@U) ($generated@@629 T@U) ) (!  (=> (and (and (and (= (type $generated@@627) $generated@@178) (= (type $generated@@628) $generated@@71)) (= (type $generated@@629) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@292 $generated@@629) (and ($generated@@182 $generated@@627) (exists (($generated@@630 T@U) ) (!  (and (= (type $generated@@630) $generated@@71) ($generated@@81 $generated@@627 ($generated@@183 $generated@@628 $generated@@630) $generated@@629))
 :pattern ( ($generated@@81 $generated@@627 ($generated@@183 $generated@@628 $generated@@630) $generated@@629))
))))) ($generated@@293 ($generated@@190 $generated@@627) $generated@@628 $generated@@629))
 :pattern ( ($generated@@293 ($generated@@190 $generated@@627) $generated@@628 $generated@@629))
)))
(assert (forall (($generated@@631 T@U) ($generated@@632 T@U) ($generated@@633 T@U) ) (!  (=> (and (and (and (= (type $generated@@631) $generated@@178) (= (type $generated@@632) $generated@@71)) (= (type $generated@@633) ($generated@@83 $generated@@84 $generated@@85))) (and ($generated@@292 $generated@@633) (and ($generated@@182 $generated@@631) (exists (($generated@@634 T@U) ) (!  (and (= (type $generated@@634) $generated@@71) ($generated@@81 $generated@@631 ($generated@@183 $generated@@634 $generated@@632) $generated@@633))
 :pattern ( ($generated@@81 $generated@@631 ($generated@@183 $generated@@634 $generated@@632) $generated@@633))
))))) ($generated@@293 ($generated@@191 $generated@@631) $generated@@632 $generated@@633))
 :pattern ( ($generated@@293 ($generated@@191 $generated@@631) $generated@@632 $generated@@633))
)))
(assert (= (type $generated@@635) ($generated@@83 $generated@@192 $generated@@192)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@192) (= ($generated@@88 $generated@@635 $generated@@636) ($generated@@322 ($generated@@8 ($generated@@314 ($generated@@360 $generated@@178 $generated@@636))))))
 :pattern ( ($generated@@88 $generated@@635 $generated@@636))
)))
(assert (forall (($generated@@637 T@U) ($generated@@638 T@U) ) (!  (=> (and (= (type $generated@@637) $generated@@192) (= (type $generated@@638) $generated@@192)) (= ($generated@@263 ($generated@@288 $generated@@637) ($generated@@288 $generated@@638)) ($generated@@288 ($generated@@263 $generated@@637 $generated@@638))))
 :pattern ( ($generated@@263 ($generated@@288 $generated@@637) ($generated@@288 $generated@@638)))
)))
(assert (forall (($generated@@639 Int) ) (! (= ($generated@@322 ($generated@@8 ($generated@@286 $generated@@639))) ($generated@@288 ($generated@@322 ($generated@@8 $generated@@639))))
 :pattern ( ($generated@@322 ($generated@@8 ($generated@@286 $generated@@639))))
)))
(assert (forall (($generated@@640 Int) ) (! (= ($generated@@317 ($generated@@286 $generated@@640)) ($generated@@288 ($generated@@317 $generated@@640)))
 :pattern ( ($generated@@317 ($generated@@286 $generated@@640)))
)))
(assert (forall (($generated@@641 T@U) ) (! (= ($generated@@322 ($generated@@288 $generated@@641)) ($generated@@288 ($generated@@322 $generated@@641)))
 :pattern ( ($generated@@322 ($generated@@288 $generated@@641)))
)))
(assert (forall (($generated@@642 T@U) ) (! (let (($generated@@643 ($generated@@309 (type $generated@@642))))
 (=> (and (= (type $generated@@642) ($generated@@308 $generated@@643)) (= ($generated@@307 $generated@@642) 0)) (= $generated@@642 ($generated@@306 $generated@@643))))
 :pattern ( ($generated@@307 $generated@@642))
)))
(assert (forall (($generated@@644 T@U) ($generated@@645 T@U) ($generated@@646 T@U) ) (! (let (($generated@@647 (type $generated@@645)))
 (=> (and (and (= (type $generated@@644) ($generated@@83 $generated@@647 $generated@@2)) (= (type $generated@@646) $generated@@2)) (<= 0 ($generated $generated@@646))) (= ($generated@@327 ($generated@@89 $generated@@644 $generated@@645 $generated@@646)) (+ (- ($generated@@327 $generated@@644) ($generated ($generated@@88 $generated@@644 $generated@@645))) ($generated $generated@@646)))))
 :pattern ( ($generated@@327 ($generated@@89 $generated@@644 $generated@@645 $generated@@646)))
)))
(assert (forall (($generated@@648 T@U) ($generated@@649 T@U) ) (!  (=> (and (= (type $generated@@648) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@649) $generated@@2)) ($generated@@81 $generated@@649 $generated@@46 $generated@@648))
 :pattern ( ($generated@@81 $generated@@649 $generated@@46 $generated@@648))
)))
(assert (forall (($generated@@650 T@U) ($generated@@651 T@U) ) (!  (=> (and (= (type $generated@@650) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@651) $generated@@3)) ($generated@@81 $generated@@651 $generated@@47 $generated@@650))
 :pattern ( ($generated@@81 $generated@@651 $generated@@47 $generated@@650))
)))
(assert (forall (($generated@@652 T@U) ($generated@@653 T@U) ) (!  (=> (and (= (type $generated@@652) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@653) $generated@@4)) ($generated@@81 $generated@@653 $generated@@44 $generated@@652))
 :pattern ( ($generated@@81 $generated@@653 $generated@@44 $generated@@652))
)))
(assert (forall (($generated@@654 T@U) ($generated@@655 T@U) ) (!  (=> (and (= (type $generated@@654) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@655) $generated@@483)) ($generated@@81 $generated@@655 $generated@@45 $generated@@654))
 :pattern ( ($generated@@81 $generated@@655 $generated@@45 $generated@@654))
)))
(assert (forall (($generated@@656 T@U) ($generated@@657 T@U) ) (!  (=> (and (= (type $generated@@656) ($generated@@83 $generated@@84 $generated@@85)) (= (type $generated@@657) $generated@@192)) ($generated@@81 $generated@@657 $generated@@48 $generated@@656))
 :pattern ( ($generated@@81 $generated@@657 $generated@@48 $generated@@656))
)))
(assert (forall (($generated@@658 T@U) ($generated@@659 T@U) ) (!  (=> (and (= (type $generated@@658) ($generated@@308 $generated@@192)) (= (type $generated@@659) $generated@@71)) (= ($generated@@174 $generated@@658 ($generated@@526 $generated@@659)) (forall (($generated@@660 Int) ) (!  (=> (and (<= 0 $generated@@660) (< $generated@@660 ($generated@@307 $generated@@658))) ($generated@@264 ($generated@@527 $generated@@658 $generated@@660) $generated@@659))
 :pattern ( ($generated@@527 $generated@@658 $generated@@660))
))))
 :pattern ( ($generated@@174 $generated@@658 ($generated@@526 $generated@@659)))
)))
(assert (forall (($generated@@662 T@U) ($generated@@663 Int) ) (!  (=> (= (type $generated@@662) ($generated@@308 $generated@@192)) (=> (and (<= 0 $generated@@663) (< $generated@@663 ($generated@@307 $generated@@662))) (< ($generated@@571 ($generated@@360 $generated@@178 ($generated@@527 $generated@@662 $generated@@663))) ($generated@@661 $generated@@662))))
 :pattern ( ($generated@@571 ($generated@@360 $generated@@178 ($generated@@527 $generated@@662 $generated@@663))))
)))
(assert (forall (($generated@@664 T@U) ($generated@@665 T@U) ($generated@@666 T@U) ) (!  (=> (and (and (and (= (type $generated@@664) ($generated@@144 $generated@@192 $generated@@192)) (= (type $generated@@665) $generated@@71)) (= (type $generated@@666) $generated@@71)) ($generated@@174 $generated@@664 ($generated@@425 $generated@@665 $generated@@666))) (and (and ($generated@@174 ($generated@@142 $generated@@664) ($generated@@276 $generated@@665)) ($generated@@174 ($generated@@370 $generated@@664) ($generated@@276 $generated@@666))) ($generated@@174 ($generated@@403 $generated@@664) ($generated@@276 ($generated@@183 $generated@@665 $generated@@666)))))
 :pattern ( ($generated@@174 $generated@@664 ($generated@@425 $generated@@665 $generated@@666)))
)))
(assert (forall (($generated@@667 T@U) ($generated@@668 T@U) ($generated@@669 T@U) ) (!  (=> (and (and (and (= (type $generated@@667) ($generated@@341 $generated@@192 $generated@@192)) (= (type $generated@@668) $generated@@71)) (= (type $generated@@669) $generated@@71)) ($generated@@174 $generated@@667 ($generated@@433 $generated@@668 $generated@@669))) (and (and ($generated@@174 ($generated@@339 $generated@@667) ($generated@@281 $generated@@668)) ($generated@@174 ($generated@@381 $generated@@667) ($generated@@281 $generated@@669))) ($generated@@174 ($generated@@407 $generated@@667) ($generated@@281 ($generated@@183 $generated@@668 $generated@@669)))))
 :pattern ( ($generated@@174 $generated@@667 ($generated@@433 $generated@@668 $generated@@669)))
)))
(assert (forall (($generated@@670 T@U) ) (!  (=> (= (type $generated@@670) $generated@@2) ($generated@@174 $generated@@670 $generated@@46))
 :pattern ( ($generated@@174 $generated@@670 $generated@@46))
)))
(assert (forall (($generated@@671 T@U) ) (!  (=> (= (type $generated@@671) $generated@@3) ($generated@@174 $generated@@671 $generated@@47))
 :pattern ( ($generated@@174 $generated@@671 $generated@@47))
)))
(assert (forall (($generated@@672 T@U) ) (!  (=> (= (type $generated@@672) $generated@@4) ($generated@@174 $generated@@672 $generated@@44))
 :pattern ( ($generated@@174 $generated@@672 $generated@@44))
)))
(assert (forall (($generated@@673 T@U) ) (!  (=> (= (type $generated@@673) $generated@@483) ($generated@@174 $generated@@673 $generated@@45))
 :pattern ( ($generated@@174 $generated@@673 $generated@@45))
)))
(assert (forall (($generated@@674 T@U) ) (!  (=> (= (type $generated@@674) $generated@@192) ($generated@@174 $generated@@674 $generated@@48))
 :pattern ( ($generated@@174 $generated@@674 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@675 () T@U)
(declare-fun $generated@@676 () Bool)
(declare-fun $generated@@677 () T@U)
(declare-fun $generated@@678 () T@U)
(declare-fun $generated@@679 () T@U)
(declare-fun $generated@@680 () T@U)
(declare-fun $generated@@681 () T@U)
(declare-fun $generated@@682 () T@U)
(declare-fun $generated@@683 () T@U)
(declare-fun $generated@@684 (T@U) Bool)
(declare-fun $generated@@685 () T@U)
(declare-fun $generated@@686 () T@U)
(declare-fun $generated@@687 () T@U)
(assert  (and (and (and (and (and (and (and (and (and (and (= (type $generated@@675) ($generated@@83 $generated@@192 $generated@@4)) (= (type $generated@@677) ($generated@@144 $generated@@192 $generated@@192))) (= (type $generated@@678) $generated@@178)) (= (type $generated@@679) ($generated@@83 $generated@@84 $generated@@85))) (= (type $generated@@680) ($generated@@83 $generated@@192 $generated@@4))) (= (type $generated@@681) $generated@@178)) (= (type $generated@@682) ($generated@@204 $generated@@84 $generated@@4))) (= (type $generated@@683) $generated@@84)) (= (type $generated@@685) ($generated@@83 $generated@@192 $generated@@4))) (= (type $generated@@686) ($generated@@144 $generated@@192 $generated@@192))) (= (type $generated@@687) ($generated@@83 $generated@@192 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@688  (=> (and (forall (($generated@@689 T@U) ) (!  (=> (and (and (= (type $generated@@689) $generated@@178) ($generated@@174 $generated@@689 $generated@@180)) ($generated@@0 ($generated@@88 $generated@@675 ($generated@@322 $generated@@689)))) ($generated@@179 $generated@@689))
 :pattern ( ($generated@@177 $generated@@689))
 :pattern ( ($generated@@88 $generated@@675 ($generated@@322 $generated@@689)))
)) (= $generated@@676 (forall (($generated@@690 T@U) ) (!  (=> (and (and (= (type $generated@@690) $generated@@178) ($generated@@174 $generated@@690 $generated@@180)) ($generated@@0 ($generated@@88 $generated@@675 ($generated@@322 $generated@@690)))) (> ($generated@@177 $generated@@690) 0))
 :pattern ( ($generated@@177 $generated@@690))
 :pattern ( ($generated@@88 $generated@@675 ($generated@@322 $generated@@690)))
)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) $generated@@676) (=> $generated@@676 (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@0 ($generated@@88 ($generated@@142 $generated@@677) ($generated@@322 ($generated@@288 ($generated@@317 ($generated@@286 2))))))))))))
(let (($generated@@691  (=> (and (not ($generated@@0 ($generated@@88 $generated@@675 ($generated@@322 $generated@@678)))) (= (ControlFlow 0 6) 2)) $generated@@688)))
(let (($generated@@692  (=> (and (and ($generated@@0 ($generated@@88 $generated@@675 ($generated@@322 $generated@@678))) ($generated@@81 $generated@@678 $generated@@180 $generated@@679)) (and ($generated@@179 $generated@@678) (= (ControlFlow 0 5) 2))) $generated@@688)))
(let (($generated@@693  (=> (and ($generated@@174 $generated@@678 $generated@@180) ($generated@@81 $generated@@678 $generated@@180 $generated@@679)) (and (=> (= (ControlFlow 0 7) 5) $generated@@692) (=> (= (ControlFlow 0 7) 6) $generated@@691)))))
(let (($generated@@694  (=> (and (not (and ($generated@@174 $generated@@678 $generated@@180) ($generated@@81 $generated@@678 $generated@@180 $generated@@679))) (= (ControlFlow 0 4) 2)) $generated@@688)))
(let (($generated@@695  (=> (forall (($generated@@696 T@U) ) (!  (=> (and (and (= (type $generated@@696) $generated@@178) ($generated@@174 $generated@@696 $generated@@180)) ($generated@@0 ($generated@@88 $generated@@680 ($generated@@322 $generated@@696)))) ($generated@@261 $generated@@696))
 :pattern ( ($generated@@314 $generated@@696))
 :pattern ( ($generated@@88 $generated@@680 ($generated@@322 $generated@@696)))
)) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@174 ($generated@@143 ($generated@@576 $generated@@180 $generated@@680) $generated@@635 ($generated@@425 $generated@@180 $generated@@46)) ($generated@@425 $generated@@180 $generated@@139))) (=> ($generated@@174 ($generated@@143 ($generated@@576 $generated@@180 $generated@@680) $generated@@635 ($generated@@425 $generated@@180 $generated@@46)) ($generated@@425 $generated@@180 $generated@@139)) (=> (and (= $generated@@677 ($generated@@143 ($generated@@576 $generated@@180 $generated@@680) $generated@@635 ($generated@@425 $generated@@180 $generated@@46))) (= $generated@@675 ($generated@@142 $generated@@677))) (and (=> (= (ControlFlow 0 8) 7) $generated@@693) (=> (= (ControlFlow 0 8) 4) $generated@@694))))))))
(let (($generated@@697  (=> (and (not ($generated@@0 ($generated@@88 $generated@@680 ($generated@@322 $generated@@681)))) (= (ControlFlow 0 12) 8)) $generated@@695)))
(let (($generated@@698  (=> ($generated@@0 ($generated@@88 $generated@@680 ($generated@@322 $generated@@681))) (=> (and ($generated@@261 $generated@@681) (= (ControlFlow 0 11) 8)) $generated@@695))))
(let (($generated@@699  (=> (and ($generated@@174 $generated@@681 $generated@@180) ($generated@@81 $generated@@681 $generated@@180 $generated@@679)) (and (=> (= (ControlFlow 0 13) 11) $generated@@698) (=> (= (ControlFlow 0 13) 12) $generated@@697)))))
(let (($generated@@700  (=> (and (not (and ($generated@@174 $generated@@681 $generated@@180) ($generated@@81 $generated@@681 $generated@@180 $generated@@679))) (= (ControlFlow 0 10) 8)) $generated@@695)))
(let (($generated@@701  (=> (and (= $generated@@682 ($generated@@203 $generated@@683 $generated@@679 $generated@@60 false)) (= $generated@@680 ($generated@@288 ($generated@@444 ($generated@@444 ($generated@@444 ($generated@@444 ($generated@@592 $generated@@192) ($generated@@322 ($generated@@288 ($generated@@317 ($generated@@286 1))))) ($generated@@322 ($generated@@288 ($generated@@317 ($generated@@286 2))))) ($generated@@322 ($generated@@288 ($generated@@317 ($generated@@286 3))))) ($generated@@322 ($generated@@288 ($generated@@317 ($generated@@286 4)))))))) (and (=> (= (ControlFlow 0 14) 13) $generated@@699) (=> (= (ControlFlow 0 14) 10) $generated@@700)))))
(let (($generated@@702  (=> (and ($generated@@292 $generated@@679) ($generated@@684 $generated@@679)) (=> (and (and (and (and ($generated@@174 $generated@@685 ($generated@@276 $generated@@258)) ($generated@@81 $generated@@685 ($generated@@276 $generated@@258) $generated@@679)) true) (and (and ($generated@@174 $generated@@686 ($generated@@425 $generated@@180 $generated@@139)) ($generated@@81 $generated@@686 ($generated@@425 $generated@@180 $generated@@139) $generated@@679)) true)) (and (and (and ($generated@@174 $generated@@687 ($generated@@276 $generated@@180)) ($generated@@81 $generated@@687 ($generated@@276 $generated@@180) $generated@@679)) true) (and (= 3 $generated@@176) (= (ControlFlow 0 15) 14)))) $generated@@701))))
$generated@@702)))))))))))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
