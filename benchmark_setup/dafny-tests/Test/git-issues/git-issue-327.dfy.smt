(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U T@U) T@U)
(declare-fun $generated@@159 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@160 (T@T T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@214 (T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) Bool)
(declare-fun $generated@@224 (T@U) T@U)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@234 (Int) Int)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@240 (T@U T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@252 (T@T) T@U)
(declare-fun $generated@@253 (T@U) Int)
(declare-fun $generated@@254 (T@T) T@T)
(declare-fun $generated@@255 (T@T) T@T)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Int)
(declare-fun $generated@@266 (T@T) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@272 (T@T T@T) T@U)
(declare-fun $generated@@273 (T@T T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@374 (T@U T@U) T@U)
(declare-fun $generated@@382 (T@U T@U) T@U)
(declare-fun $generated@@390 (T@T) T@U)
(declare-fun $generated@@414 () T@T)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@457 (T@U Int) T@U)
(declare-fun $generated@@466 (T@U) Int)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@494 (T@U) Int)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@560 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78)) ($generated@@133 $generated@@134)) ($generated@@74 ($generated@@8 $generated@@132) $generated@@46 $generated@@134))
 :pattern ( ($generated@@74 ($generated@@8 $generated@@132) $generated@@46 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@2) ($generated@@135 $generated@@136 ($generated@@75 0)))
 :pattern ( ($generated@@135 $generated@@136 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@139) 14) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@140 $generated@@141)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@140 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (and (= (type $generated@@142) $generated@@64) (= (type $generated@@143) $generated@@64)) (= (type $generated@@144) $generated@@139)) ($generated@@135 $generated@@144 ($generated@@138 $generated@@142 $generated@@143))) ($generated@@137 $generated@@144))
 :pattern ( ($generated@@137 $generated@@144) ($generated@@135 $generated@@144 ($generated@@138 $generated@@142 $generated@@143)))
)))
(assert  (and (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@148)
 :pattern ( ($generated@@146 $generated@@149))
))) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@148)
 :pattern ( ($generated@@147 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) $generated@@139) (= (type $generated@@152) $generated@@139)) true) (= ($generated@@145 $generated@@151 $generated@@152)  (and (= ($generated@@146 $generated@@151) ($generated@@146 $generated@@152)) (= ($generated@@147 $generated@@151) ($generated@@147 $generated@@152)))))
 :pattern ( ($generated@@145 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@64)
 :pattern ( ($generated@@153 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@76 $generated@@148 $generated@@2)) (= (type $generated@@157) $generated@@64)) ($generated@@135 $generated@@156 ($generated@@153 $generated@@157))) ($generated@@154 $generated@@156))
 :pattern ( ($generated@@135 $generated@@156 ($generated@@153 $generated@@157)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@164 T@T) ($generated@@165 T@T) ) (= ($generated@@1 ($generated@@160 $generated@@164 $generated@@165)) 16)) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (! (= ($generated@@161 ($generated@@160 $generated@@166 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@162 ($generated@@160 $generated@@168 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@160 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (let (($generated@@173 ($generated@@162 (type $generated@@170))))
(= (type ($generated@@158 $generated@@170 $generated@@171 $generated@@172)) $generated@@173))
 :pattern ( ($generated@@158 $generated@@170 $generated@@171 $generated@@172))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(let (($generated@@179 (type $generated@@175)))
(= (type ($generated@@163 $generated@@174 $generated@@175 $generated@@176 $generated@@177)) ($generated@@160 $generated@@179 $generated@@178))))
 :pattern ( ($generated@@163 $generated@@174 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@162 (type $generated@@180))))
 (=> (= (type $generated@@183) $generated@@184) (= ($generated@@158 ($generated@@163 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@181 $generated@@182) $generated@@183)))
 :weight 0
))) (and (and (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (or (= $generated@@187 $generated@@189) (= ($generated@@158 ($generated@@163 $generated@@186 $generated@@187 $generated@@188 $generated@@185) $generated@@189 $generated@@190) ($generated@@158 $generated@@186 $generated@@189 $generated@@190)))
 :weight 0
)) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@158 ($generated@@163 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@158 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or true (= ($generated@@158 ($generated@@163 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@158 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 Bool) ) (! (= (type ($generated@@159 $generated@@203 $generated@@204 $generated@@205 $generated@@206)) ($generated@@160 $generated@@77 $generated@@4))
 :pattern ( ($generated@@159 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@67 (type $generated@@212))))
 (=> (and (and (and (and (= (type $generated@@207) $generated@@77) (= (type $generated@@208) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@209) ($generated@@66 $generated@@4))) (= (type $generated@@211) $generated@@77)) (= (type $generated@@212) ($generated@@66 $generated@@213))) (= ($generated@@0 ($generated@@158 ($generated@@159 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))  (=> (and (not (= $generated@@211 $generated@@207)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@208 $generated@@211) $generated@@209))) $generated@@210))))
 :pattern ( ($generated@@158 ($generated@@159 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (! (= (type ($generated@@214 $generated@@216 $generated@@217)) $generated@@139)
 :pattern ( ($generated@@214 $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and (and (and (= (type $generated@@218) $generated@@64) (= (type $generated@@219) $generated@@64)) (= (type $generated@@220) $generated@@148)) (= (type $generated@@221) $generated@@148)) (= ($generated@@135 ($generated@@214 $generated@@220 $generated@@221) ($generated@@138 $generated@@218 $generated@@219))  (and ($generated@@215 $generated@@220 $generated@@218) ($generated@@215 $generated@@221 $generated@@219))))
 :pattern ( ($generated@@135 ($generated@@214 $generated@@220 $generated@@221) ($generated@@138 $generated@@218 $generated@@219)))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@139) (= (type $generated@@223) $generated@@139)) (= ($generated@@145 $generated@@222 $generated@@223) (= $generated@@222 $generated@@223)))
 :pattern ( ($generated@@145 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@225 T@U) ) (! (= (type ($generated@@224 $generated@@225)) $generated@@64)
 :pattern ( ($generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) ($generated@@76 $generated@@148 $generated@@4)) (= (type $generated@@227) $generated@@64)) (= ($generated@@135 $generated@@226 ($generated@@224 $generated@@227)) (forall (($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@148) ($generated@@0 ($generated@@81 $generated@@226 $generated@@228))) ($generated@@215 $generated@@228 $generated@@227))
 :pattern ( ($generated@@81 $generated@@226 $generated@@228))
))))
 :pattern ( ($generated@@135 $generated@@226 ($generated@@224 $generated@@227)))
)))
(assert (forall (($generated@@230 T@U) ) (! (= (type ($generated@@229 $generated@@230)) $generated@@64)
 :pattern ( ($generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) ($generated@@76 $generated@@148 $generated@@4)) (= (type $generated@@232) $generated@@64)) (= ($generated@@135 $generated@@231 ($generated@@229 $generated@@232)) (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@148) ($generated@@0 ($generated@@81 $generated@@231 $generated@@233))) ($generated@@215 $generated@@233 $generated@@232))
 :pattern ( ($generated@@81 $generated@@231 $generated@@233))
))))
 :pattern ( ($generated@@135 $generated@@231 ($generated@@229 $generated@@232)))
)))
(assert (forall (($generated@@235 Int) ) (! (= ($generated@@234 $generated@@235) $generated@@235)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ) (! (let (($generated@@238 (type $generated@@237)))
(= (type ($generated@@236 $generated@@237)) $generated@@238))
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= ($generated@@236 $generated@@239) $generated@@239)
 :pattern ( ($generated@@236 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@241) $generated@@64) (= (type $generated@@242) $generated@@64)) (= (type $generated@@243) $generated@@148)) (= (type $generated@@244) $generated@@148)) (= (type $generated@@245) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@133 $generated@@245)) (= ($generated@@74 ($generated@@214 $generated@@243 $generated@@244) ($generated@@138 $generated@@241 $generated@@242) $generated@@245)  (and ($generated@@240 $generated@@243 $generated@@241 $generated@@245) ($generated@@240 $generated@@244 $generated@@242 $generated@@245))))
 :pattern ( ($generated@@74 ($generated@@214 $generated@@243 $generated@@244) ($generated@@138 $generated@@241 $generated@@242) $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@68)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ) (!  (=> (= (type $generated@@248) $generated@@139) (= ($generated@@137 $generated@@248) (= ($generated@@246 $generated@@248) $generated@@61)))
 :pattern ( ($generated@@137 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@139) ($generated@@137 $generated@@249)) (exists (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (and (and (= (type $generated@@250) $generated@@148) (= (type $generated@@251) $generated@@148)) (= $generated@@249 ($generated@@214 $generated@@250 $generated@@251)))
 :no-pattern (type $generated@@250)
 :no-pattern (type $generated@@251)
 :no-pattern ($generated $generated@@250)
 :no-pattern ($generated@@0 $generated@@250)
 :no-pattern ($generated $generated@@251)
 :no-pattern ($generated@@0 $generated@@251)
)))
 :pattern ( ($generated@@137 $generated@@249))
)))
(assert  (and (and (forall (($generated@@256 T@T) ) (= ($generated@@1 ($generated@@254 $generated@@256)) 17)) (forall (($generated@@257 T@T) ) (! (= ($generated@@255 ($generated@@254 $generated@@257)) $generated@@257)
 :pattern ( ($generated@@254 $generated@@257))
))) (forall (($generated@@258 T@T) ) (! (= (type ($generated@@252 $generated@@258)) ($generated@@254 $generated@@258))
 :pattern ( ($generated@@252 $generated@@258))
))))
(assert (forall (($generated@@259 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@259)) 0)
 :pattern ( ($generated@@252 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@148)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@64) (= (type $generated@@264) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@240 ($generated@@260 $generated@@262) $generated@@263 $generated@@264) ($generated@@74 $generated@@262 $generated@@263 $generated@@264)))
 :pattern ( ($generated@@240 ($generated@@260 $generated@@262) $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@267 T@T) ) (! (= (type ($generated@@266 $generated@@267)) ($generated@@76 $generated@@267 $generated@@2))
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@79 (type $generated@@268))))
 (=> (= (type $generated@@268) ($generated@@76 $generated@@269 $generated@@2)) (and (= (= ($generated@@265 $generated@@268) 0) (= $generated@@268 ($generated@@266 $generated@@269))) (=> (not (= ($generated@@265 $generated@@268) 0)) (exists (($generated@@270 T@U) ) (!  (and (= (type $generated@@270) $generated@@269) (< 0 ($generated ($generated@@81 $generated@@268 $generated@@270))))
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
))))))
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert  (and (and (and (and (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (= ($generated@@1 ($generated@@273 $generated@@276 $generated@@277)) 18)) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@278 $generated@@279)) $generated@@278)
 :pattern ( ($generated@@273 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (! (= ($generated@@275 ($generated@@273 $generated@@280 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@273 $generated@@280 $generated@@281))
))) (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@274 (type $generated@@282))))
(= (type ($generated@@271 $generated@@282)) ($generated@@76 $generated@@283 $generated@@4)))
 :pattern ( ($generated@@271 $generated@@282))
))) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= (type ($generated@@272 $generated@@284 $generated@@285)) ($generated@@273 $generated@@284 $generated@@285))
 :pattern ( ($generated@@272 $generated@@284 $generated@@285))
))))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@T) ) (! (let (($generated@@288 (type $generated@@286)))
 (not ($generated@@0 ($generated@@81 ($generated@@271 ($generated@@272 $generated@@288 $generated@@287)) $generated@@286))))
 :pattern ( (let (($generated@@288 (type $generated@@286)))
($generated@@81 ($generated@@271 ($generated@@272 $generated@@288 $generated@@287)) $generated@@286)))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 19)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@76 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@81 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@81 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert ($generated@@135 ($generated@@8 $generated@@132) $generated@@46))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@79 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@76 $generated@@308 $generated@@2)) (= ($generated@@154 $generated@@307) (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@308) (and (<= 0 ($generated ($generated@@81 $generated@@307 $generated@@309))) (<= ($generated ($generated@@81 $generated@@307 $generated@@309)) ($generated@@265 $generated@@307))))
 :pattern ( ($generated@@81 $generated@@307 $generated@@309))
)))))
 :pattern ( ($generated@@154 $generated@@307))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@275 (type $generated@@310))))
(let (($generated@@312 ($generated@@274 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@273 $generated@@312 $generated@@311)) (or (= $generated@@310 ($generated@@272 $generated@@312 $generated@@311)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@312) ($generated@@0 ($generated@@81 ($generated@@271 $generated@@310) $generated@@313)))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@271 $generated@@310))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@275 (type $generated@@315))))
(= (type ($generated@@314 $generated@@315)) ($generated@@76 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@275 (type $generated@@317))))
(let (($generated@@319 ($generated@@274 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@273 $generated@@319 $generated@@318)) (or (= $generated@@317 ($generated@@272 $generated@@319 $generated@@318)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@318) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@317) $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@314 $generated@@317))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@293 (type $generated@@321))))
(let (($generated@@323 ($generated@@292 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@291 $generated@@323 $generated@@322)) (or (= $generated@@321 ($generated@@290 $generated@@323 $generated@@322)) (exists (($generated@@324 T@U) ) (!  (and (= (type $generated@@324) $generated@@323) ($generated@@0 ($generated@@81 ($generated@@289 $generated@@321) $generated@@324)))
 :no-pattern (type $generated@@324)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
))))))
 :pattern ( ($generated@@289 $generated@@321))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@293 (type $generated@@326))))
(= (type ($generated@@325 $generated@@326)) ($generated@@76 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@293 (type $generated@@328))))
(let (($generated@@330 ($generated@@292 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@291 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@290 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@329) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@325 $generated@@328))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@332) ($generated@@76 $generated@@148 $generated@@2)) (= (type $generated@@333) $generated@@64)) (= ($generated@@135 $generated@@332 ($generated@@153 $generated@@333)) (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@148) (< 0 ($generated ($generated@@81 $generated@@332 $generated@@334)))) ($generated@@215 $generated@@334 $generated@@333))
 :pattern ( ($generated@@81 $generated@@332 $generated@@334))
))))
 :pattern ( ($generated@@135 $generated@@332 ($generated@@153 $generated@@333)))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (= (type $generated@@335) ($generated@@76 $generated@@148 $generated@@4)) (= (type $generated@@336) $generated@@64)) (= (type $generated@@337) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@335 ($generated@@224 $generated@@336) $generated@@337) (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@148) ($generated@@0 ($generated@@81 $generated@@335 $generated@@338))) ($generated@@240 $generated@@338 $generated@@336 $generated@@337))
 :pattern ( ($generated@@81 $generated@@335 $generated@@338))
))))
 :pattern ( ($generated@@74 $generated@@335 ($generated@@224 $generated@@336) $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (= (type $generated@@339) ($generated@@76 $generated@@148 $generated@@4)) (= (type $generated@@340) $generated@@64)) (= (type $generated@@341) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@339 ($generated@@229 $generated@@340) $generated@@341) (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@148) ($generated@@0 ($generated@@81 $generated@@339 $generated@@342))) ($generated@@240 $generated@@342 $generated@@340 $generated@@341))
 :pattern ( ($generated@@81 $generated@@339 $generated@@342))
))))
 :pattern ( ($generated@@74 $generated@@339 ($generated@@229 $generated@@340) $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 (type $generated@@343)))
(= ($generated ($generated@@81 ($generated@@266 $generated@@344) $generated@@343)) 0))
 :pattern ( (let (($generated@@344 (type $generated@@343)))
($generated@@81 ($generated@@266 $generated@@344) $generated@@343)))
)))
(assert  (and (and (forall (($generated@@348 T@U) ) (! (= (type ($generated@@345 $generated@@348)) ($generated@@76 $generated@@148 $generated@@4))
 :pattern ( ($generated@@345 $generated@@348))
)) (forall (($generated@@349 T@T) ($generated@@350 T@U) ) (! (= (type ($generated@@346 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@346 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@275 (type $generated@@351))))
(let (($generated@@353 ($generated@@274 (type $generated@@351))))
(= (type ($generated@@347 $generated@@351)) ($generated@@76 $generated@@353 $generated@@352))))
 :pattern ( ($generated@@347 $generated@@351))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@273 $generated@@148 $generated@@148)) (= (type $generated@@355) $generated@@148)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@354) $generated@@355))  (and ($generated@@0 ($generated@@81 ($generated@@271 $generated@@354) ($generated@@146 ($generated@@346 $generated@@139 $generated@@355)))) (= ($generated@@81 ($generated@@347 $generated@@354) ($generated@@146 ($generated@@346 $generated@@139 $generated@@355))) ($generated@@147 ($generated@@346 $generated@@139 $generated@@355))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@354) $generated@@355))
)))
(assert  (and (forall (($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@358)) ($generated@@76 $generated@@148 $generated@@4))
 :pattern ( ($generated@@356 $generated@@358))
)) (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@293 (type $generated@@359))))
(let (($generated@@361 ($generated@@292 (type $generated@@359))))
(= (type ($generated@@357 $generated@@359)) ($generated@@76 $generated@@361 $generated@@360))))
 :pattern ( ($generated@@357 $generated@@359))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@291 $generated@@148 $generated@@148)) (= (type $generated@@363) $generated@@148)) (= ($generated@@0 ($generated@@81 ($generated@@356 $generated@@362) $generated@@363))  (and ($generated@@0 ($generated@@81 ($generated@@289 $generated@@362) ($generated@@146 ($generated@@346 $generated@@139 $generated@@363)))) (= ($generated@@81 ($generated@@357 $generated@@362) ($generated@@146 ($generated@@346 $generated@@139 $generated@@363))) ($generated@@147 ($generated@@346 $generated@@139 $generated@@363))))))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(let (($generated@@367 ($generated@@274 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@273 $generated@@367 $generated@@366)) (= ($generated@@0 ($generated@@81 ($generated@@314 $generated@@364) $generated@@365)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) (and ($generated@@0 ($generated@@81 ($generated@@271 $generated@@364) $generated@@368)) (= $generated@@365 ($generated@@81 ($generated@@347 $generated@@364) $generated@@368))))
 :pattern ( ($generated@@81 ($generated@@271 $generated@@364) $generated@@368))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@364) $generated@@368))
))))))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(let (($generated@@372 ($generated@@292 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@291 $generated@@372 $generated@@371)) (= ($generated@@0 ($generated@@81 ($generated@@325 $generated@@369) $generated@@370)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) (and ($generated@@0 ($generated@@81 ($generated@@289 $generated@@369) $generated@@373)) (= $generated@@370 ($generated@@81 ($generated@@357 $generated@@369) $generated@@373))))
 :pattern ( ($generated@@81 ($generated@@289 $generated@@369) $generated@@373))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@369) $generated@@373))
))))))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@375 $generated@@376)) $generated@@64)
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (and (= (type $generated@@377) ($generated@@273 $generated@@148 $generated@@148)) (= (type $generated@@378) $generated@@64)) (= (type $generated@@379) $generated@@64)) (= (type $generated@@380) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@148) ($generated@@0 ($generated@@81 ($generated@@271 $generated@@377) $generated@@381))) (and ($generated@@240 ($generated@@81 ($generated@@347 $generated@@377) $generated@@381) $generated@@379 $generated@@380) ($generated@@240 $generated@@381 $generated@@378 $generated@@380)))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@377) $generated@@381))
 :pattern ( ($generated@@81 ($generated@@271 $generated@@377) $generated@@381))
))))
 :pattern ( ($generated@@74 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@383 $generated@@384)) $generated@@64)
 :pattern ( ($generated@@382 $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (and (= (type $generated@@385) ($generated@@291 $generated@@148 $generated@@148)) (= (type $generated@@386) $generated@@64)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@385 ($generated@@382 $generated@@386 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@148) ($generated@@0 ($generated@@81 ($generated@@289 $generated@@385) $generated@@389))) (and ($generated@@240 ($generated@@81 ($generated@@357 $generated@@385) $generated@@389) $generated@@387 $generated@@388) ($generated@@240 $generated@@389 $generated@@386 $generated@@388)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@385) $generated@@389))
 :pattern ( ($generated@@81 ($generated@@289 $generated@@385) $generated@@389))
))))
 :pattern ( ($generated@@74 $generated@@385 ($generated@@382 $generated@@386 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@391 T@T) ) (! (= (type ($generated@@390 $generated@@391)) ($generated@@76 $generated@@391 $generated@@4))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@293 (type $generated@@392))))
(let (($generated@@394 ($generated@@292 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@291 $generated@@394 $generated@@393)) (= (= $generated@@392 ($generated@@290 $generated@@394 $generated@@393)) (= ($generated@@289 $generated@@392) ($generated@@390 $generated@@394))))))
 :pattern ( ($generated@@289 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@293 (type $generated@@395))))
(let (($generated@@397 ($generated@@292 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@291 $generated@@397 $generated@@396)) (= (= $generated@@395 ($generated@@290 $generated@@397 $generated@@396)) (= ($generated@@325 $generated@@395) ($generated@@390 $generated@@396))))))
 :pattern ( ($generated@@325 $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@293 (type $generated@@398))))
(let (($generated@@400 ($generated@@292 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@291 $generated@@400 $generated@@399)) (= (= $generated@@398 ($generated@@290 $generated@@400 $generated@@399)) (= ($generated@@356 $generated@@398) ($generated@@390 $generated@@148))))))
 :pattern ( ($generated@@356 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@275 (type $generated@@401))))
(let (($generated@@403 ($generated@@274 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@273 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@272 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (and (and (= (type $generated@@404) $generated@@148) (= (type $generated@@405) $generated@@148)) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@401) ($generated@@260 ($generated@@214 $generated@@404 $generated@@405)))))
 :no-pattern (type $generated@@404)
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@345 $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@293 (type $generated@@406))))
(let (($generated@@408 ($generated@@292 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@291 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@290 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (and (and (= (type $generated@@409) $generated@@148) (= (type $generated@@410) $generated@@148)) ($generated@@0 ($generated@@81 ($generated@@356 $generated@@406) ($generated@@260 ($generated@@214 $generated@@409 $generated@@410)))))
 :no-pattern (type $generated@@409)
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@356 $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@148) ($generated@@215 $generated@@411 $generated@@46)) (and (= ($generated@@260 ($generated@@346 $generated@@2 $generated@@411)) $generated@@411) ($generated@@135 ($generated@@346 $generated@@2 $generated@@411) $generated@@46)))
 :pattern ( ($generated@@215 $generated@@411 $generated@@46))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@148) ($generated@@215 $generated@@412 $generated@@47)) (and (= ($generated@@260 ($generated@@346 $generated@@3 $generated@@412)) $generated@@412) ($generated@@135 ($generated@@346 $generated@@3 $generated@@412) $generated@@47)))
 :pattern ( ($generated@@215 $generated@@412 $generated@@47))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@148) ($generated@@215 $generated@@413 $generated@@44)) (and (= ($generated@@260 ($generated@@346 $generated@@4 $generated@@413)) $generated@@413) ($generated@@135 ($generated@@346 $generated@@4 $generated@@413) $generated@@44)))
 :pattern ( ($generated@@215 $generated@@413 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@414) 20))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@148) ($generated@@215 $generated@@415 $generated@@45)) (and (= ($generated@@260 ($generated@@346 $generated@@414 $generated@@415)) $generated@@415) ($generated@@135 ($generated@@346 $generated@@414 $generated@@415) $generated@@45)))
 :pattern ( ($generated@@215 $generated@@415 $generated@@45))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@64) (= ($generated@@215 ($generated@@260 $generated@@416) $generated@@417) ($generated@@135 $generated@@416 $generated@@417)))
 :pattern ( ($generated@@215 ($generated@@260 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@79 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@76 $generated@@419 $generated@@2)) (<= 0 ($generated@@265 $generated@@418))))
 :pattern ( ($generated@@265 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@255 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@254 $generated@@421)) (<= 0 ($generated@@253 $generated@@420))))
 :pattern ( ($generated@@253 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@64)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@64) (= (type $generated@@425) $generated@@64)) (= ($generated@@422 ($generated@@374 $generated@@424 $generated@@425)) $generated@@424))
 :pattern ( ($generated@@374 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (= (type ($generated@@426 $generated@@427)) $generated@@64)
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@64) (= (type $generated@@429) $generated@@64)) (= ($generated@@426 ($generated@@374 $generated@@428 $generated@@429)) $generated@@429))
 :pattern ( ($generated@@374 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@64) (= (type $generated@@431) $generated@@64)) (= ($generated@@72 ($generated@@374 $generated@@430 $generated@@431)) $generated@@58))
 :pattern ( ($generated@@374 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@64) (= (type $generated@@435) $generated@@64)) (= ($generated@@432 ($generated@@382 $generated@@434 $generated@@435)) $generated@@434))
 :pattern ( ($generated@@382 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@64)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@436 ($generated@@382 $generated@@438 $generated@@439)) $generated@@439))
 :pattern ( ($generated@@382 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@64) (= (type $generated@@441) $generated@@64)) (= ($generated@@72 ($generated@@382 $generated@@440 $generated@@441)) $generated@@59))
 :pattern ( ($generated@@382 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@148) (= (type $generated@@443) $generated@@148)) (= ($generated@@246 ($generated@@214 $generated@@442 $generated@@443)) $generated@@61))
 :pattern ( ($generated@@214 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@138 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@138 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@138 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@138 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@148) (= (type $generated@@453) $generated@@148)) (= ($generated@@146 ($generated@@214 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@214 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@148) (= (type $generated@@455) $generated@@148)) (= ($generated@@147 ($generated@@214 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@214 $generated@@454 $generated@@455))
)))
(assert  (and (forall (($generated@@458 T@U) ) (! (= (type ($generated@@456 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@458))
)) (forall (($generated@@459 T@U) ($generated@@460 Int) ) (! (let (($generated@@461 ($generated@@255 (type $generated@@459))))
(= (type ($generated@@457 $generated@@459 $generated@@460)) $generated@@461))
 :pattern ( ($generated@@457 $generated@@459 $generated@@460))
))))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (= (type $generated@@462) ($generated@@254 $generated@@148)) (= (type $generated@@463) $generated@@64)) (= (type $generated@@464) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@462 ($generated@@456 $generated@@463) $generated@@464) (forall (($generated@@465 Int) ) (!  (=> (and (<= 0 $generated@@465) (< $generated@@465 ($generated@@253 $generated@@462))) ($generated@@240 ($generated@@457 $generated@@462 $generated@@465) $generated@@463 $generated@@464))
 :pattern ( ($generated@@457 $generated@@462 $generated@@465))
))))
 :pattern ( ($generated@@74 $generated@@462 ($generated@@456 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@467 Int) ) (! (= ($generated@@466 ($generated@@75 $generated@@467)) $generated@@467)
 :pattern ( ($generated@@75 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@64) (= ($generated@@468 ($generated@@224 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@224 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@64) (= ($generated@@72 ($generated@@224 $generated@@471)) $generated@@54))
 :pattern ( ($generated@@224 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@64) (= ($generated@@472 ($generated@@229 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@229 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@64) (= ($generated@@72 ($generated@@229 $generated@@475)) $generated@@55))
 :pattern ( ($generated@@229 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@64) (= ($generated@@476 ($generated@@153 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@153 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@72 ($generated@@153 $generated@@479)) $generated@@56))
 :pattern ( ($generated@@153 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@64) (= ($generated@@480 ($generated@@456 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@456 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@72 ($generated@@456 $generated@@483)) $generated@@57))
 :pattern ( ($generated@@456 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 (type $generated@@484)))
(= ($generated@@346 $generated@@485 ($generated@@260 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@260 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@273 $generated@@148 $generated@@148)) (= (type $generated@@487) $generated@@64)) (= (type $generated@@488) $generated@@64)) (= ($generated@@135 $generated@@486 ($generated@@374 $generated@@487 $generated@@488)) (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@148) ($generated@@0 ($generated@@81 ($generated@@271 $generated@@486) $generated@@489))) (and ($generated@@215 ($generated@@81 ($generated@@347 $generated@@486) $generated@@489) $generated@@488) ($generated@@215 $generated@@489 $generated@@487)))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@486) $generated@@489))
 :pattern ( ($generated@@81 ($generated@@271 $generated@@486) $generated@@489))
))))
 :pattern ( ($generated@@135 $generated@@486 ($generated@@374 $generated@@487 $generated@@488)))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@291 $generated@@148 $generated@@148)) (= (type $generated@@491) $generated@@64)) (= (type $generated@@492) $generated@@64)) (= ($generated@@135 $generated@@490 ($generated@@382 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@148) ($generated@@0 ($generated@@81 ($generated@@289 $generated@@490) $generated@@493))) (and ($generated@@215 ($generated@@81 ($generated@@357 $generated@@490) $generated@@493) $generated@@492) ($generated@@215 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@490) $generated@@493))
 :pattern ( ($generated@@81 ($generated@@289 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@135 $generated@@490 ($generated@@382 $generated@@491 $generated@@492)))
)))
(assert (= $generated@@132 ($generated@@234 51)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@148) (= (type $generated@@497) $generated@@148)) (< ($generated@@494 $generated@@496) ($generated@@495 ($generated@@214 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@214 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@148) (= (type $generated@@499) $generated@@148)) (< ($generated@@494 $generated@@499) ($generated@@495 ($generated@@214 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@214 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (and (= (type $generated@@500) $generated@@148) (= (type $generated@@501) $generated@@64)) (= (type $generated@@502) $generated@@64)) ($generated@@215 $generated@@500 ($generated@@374 $generated@@501 $generated@@502))) (and (= ($generated@@260 ($generated@@346 ($generated@@273 $generated@@148 $generated@@148) $generated@@500)) $generated@@500) ($generated@@135 ($generated@@346 ($generated@@273 $generated@@148 $generated@@148) $generated@@500) ($generated@@374 $generated@@501 $generated@@502))))
 :pattern ( ($generated@@215 $generated@@500 ($generated@@374 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (and (= (type $generated@@503) $generated@@148) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) $generated@@64)) ($generated@@215 $generated@@503 ($generated@@382 $generated@@504 $generated@@505))) (and (= ($generated@@260 ($generated@@346 ($generated@@291 $generated@@148 $generated@@148) $generated@@503)) $generated@@503) ($generated@@135 ($generated@@346 ($generated@@291 $generated@@148 $generated@@148) $generated@@503) ($generated@@382 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@215 $generated@@503 ($generated@@382 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) $generated@@64) (= (type $generated@@507) $generated@@64)) (= (type $generated@@508) $generated@@148)) ($generated@@215 $generated@@508 ($generated@@138 $generated@@506 $generated@@507))) (and (= ($generated@@260 ($generated@@346 $generated@@139 $generated@@508)) $generated@@508) ($generated@@135 ($generated@@346 $generated@@139 $generated@@508) ($generated@@138 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@215 $generated@@508 ($generated@@138 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
 (not ($generated@@0 ($generated@@81 ($generated@@390 $generated@@510) $generated@@509))))
 :pattern ( (let (($generated@@510 (type $generated@@509)))
($generated@@81 ($generated@@390 $generated@@510) $generated@@509)))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@69)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@64) (= (type $generated@@514) $generated@@64)) (and (= ($generated@@72 ($generated@@138 $generated@@513 $generated@@514)) $generated@@62) (= ($generated@@511 ($generated@@138 $generated@@513 $generated@@514)) $generated@@63)))
 :pattern ( ($generated@@138 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@139) (= ($generated@@494 ($generated@@260 $generated@@515)) ($generated@@495 $generated@@515)))
 :pattern ( ($generated@@494 ($generated@@260 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@148) ($generated@@215 $generated@@516 ($generated@@75 0))) (and (= ($generated@@260 ($generated@@346 $generated@@2 $generated@@516)) $generated@@516) ($generated@@135 ($generated@@346 ($generated@@76 $generated@@148 $generated@@4) $generated@@516) ($generated@@75 0))))
 :pattern ( ($generated@@215 $generated@@516 ($generated@@75 0)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@517) $generated@@148) (= (type $generated@@518) $generated@@64)) ($generated@@215 $generated@@517 ($generated@@224 $generated@@518))) (and (= ($generated@@260 ($generated@@346 ($generated@@76 $generated@@148 $generated@@4) $generated@@517)) $generated@@517) ($generated@@135 ($generated@@346 ($generated@@76 $generated@@148 $generated@@4) $generated@@517) ($generated@@224 $generated@@518))))
 :pattern ( ($generated@@215 $generated@@517 ($generated@@224 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) $generated@@148) (= (type $generated@@520) $generated@@64)) ($generated@@215 $generated@@519 ($generated@@229 $generated@@520))) (and (= ($generated@@260 ($generated@@346 ($generated@@76 $generated@@148 $generated@@4) $generated@@519)) $generated@@519) ($generated@@135 ($generated@@346 ($generated@@76 $generated@@148 $generated@@4) $generated@@519) ($generated@@229 $generated@@520))))
 :pattern ( ($generated@@215 $generated@@519 ($generated@@229 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@521) $generated@@148) (= (type $generated@@522) $generated@@64)) ($generated@@215 $generated@@521 ($generated@@153 $generated@@522))) (and (= ($generated@@260 ($generated@@346 ($generated@@76 $generated@@148 $generated@@2) $generated@@521)) $generated@@521) ($generated@@135 ($generated@@346 ($generated@@76 $generated@@148 $generated@@2) $generated@@521) ($generated@@153 $generated@@522))))
 :pattern ( ($generated@@215 $generated@@521 ($generated@@153 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@523) $generated@@148) (= (type $generated@@524) $generated@@64)) ($generated@@215 $generated@@523 ($generated@@456 $generated@@524))) (and (= ($generated@@260 ($generated@@346 ($generated@@254 $generated@@148) $generated@@523)) $generated@@523) ($generated@@135 ($generated@@346 ($generated@@254 $generated@@148) $generated@@523) ($generated@@456 $generated@@524))))
 :pattern ( ($generated@@215 $generated@@523 ($generated@@456 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@76 $generated@@148 $generated@@2)) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@525 ($generated@@153 $generated@@526) $generated@@527) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@148) (< 0 ($generated ($generated@@81 $generated@@525 $generated@@528)))) ($generated@@240 $generated@@528 $generated@@526 $generated@@527))
 :pattern ( ($generated@@81 $generated@@525 $generated@@528))
))))
 :pattern ( ($generated@@74 $generated@@525 ($generated@@153 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@139) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@133 $generated@@531) (and ($generated@@137 $generated@@529) (exists (($generated@@532 T@U) ) (!  (and (= (type $generated@@532) $generated@@64) ($generated@@74 $generated@@529 ($generated@@138 $generated@@530 $generated@@532) $generated@@531))
 :pattern ( ($generated@@74 $generated@@529 ($generated@@138 $generated@@530 $generated@@532) $generated@@531))
))))) ($generated@@240 ($generated@@146 $generated@@529) $generated@@530 $generated@@531))
 :pattern ( ($generated@@240 ($generated@@146 $generated@@529) $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@139) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@133 $generated@@535) (and ($generated@@137 $generated@@533) (exists (($generated@@536 T@U) ) (!  (and (= (type $generated@@536) $generated@@64) ($generated@@74 $generated@@533 ($generated@@138 $generated@@536 $generated@@534) $generated@@535))
 :pattern ( ($generated@@74 $generated@@533 ($generated@@138 $generated@@536 $generated@@534) $generated@@535))
))))) ($generated@@240 ($generated@@147 $generated@@533) $generated@@534 $generated@@535))
 :pattern ( ($generated@@240 ($generated@@147 $generated@@533) $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@148) (= (type $generated@@538) $generated@@148)) (= ($generated@@214 ($generated@@236 $generated@@537) ($generated@@236 $generated@@538)) ($generated@@236 ($generated@@214 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@214 ($generated@@236 $generated@@537) ($generated@@236 $generated@@538)))
)))
(assert (forall (($generated@@539 Int) ) (! (= ($generated@@260 ($generated@@8 ($generated@@234 $generated@@539))) ($generated@@236 ($generated@@260 ($generated@@8 $generated@@539))))
 :pattern ( ($generated@@260 ($generated@@8 ($generated@@234 $generated@@539))))
)))
(assert (forall (($generated@@540 T@U) ) (! (= ($generated@@260 ($generated@@236 $generated@@540)) ($generated@@236 ($generated@@260 $generated@@540)))
 :pattern ( ($generated@@260 ($generated@@236 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@255 (type $generated@@541))))
 (=> (and (= (type $generated@@541) ($generated@@254 $generated@@542)) (= ($generated@@253 $generated@@541) 0)) (= $generated@@541 ($generated@@252 $generated@@542))))
 :pattern ( ($generated@@253 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@544)))
 (=> (and (and (= (type $generated@@543) ($generated@@76 $generated@@546 $generated@@2)) (= (type $generated@@545) $generated@@2)) (<= 0 ($generated $generated@@545))) (= ($generated@@265 ($generated@@82 $generated@@543 $generated@@544 $generated@@545)) (+ (- ($generated@@265 $generated@@543) ($generated ($generated@@81 $generated@@543 $generated@@544))) ($generated $generated@@545)))))
 :pattern ( ($generated@@265 ($generated@@82 $generated@@543 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@548) $generated@@2)) ($generated@@74 $generated@@548 $generated@@46 $generated@@547))
 :pattern ( ($generated@@74 $generated@@548 $generated@@46 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@550) $generated@@3)) ($generated@@74 $generated@@550 $generated@@47 $generated@@549))
 :pattern ( ($generated@@74 $generated@@550 $generated@@47 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@552) $generated@@4)) ($generated@@74 $generated@@552 $generated@@44 $generated@@551))
 :pattern ( ($generated@@74 $generated@@552 $generated@@44 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@554) $generated@@414)) ($generated@@74 $generated@@554 $generated@@45 $generated@@553))
 :pattern ( ($generated@@74 $generated@@554 $generated@@45 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@556) $generated@@148)) ($generated@@74 $generated@@556 $generated@@48 $generated@@555))
 :pattern ( ($generated@@74 $generated@@556 $generated@@48 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) ($generated@@254 $generated@@148)) (= (type $generated@@558) $generated@@64)) (= ($generated@@135 $generated@@557 ($generated@@456 $generated@@558)) (forall (($generated@@559 Int) ) (!  (=> (and (<= 0 $generated@@559) (< $generated@@559 ($generated@@253 $generated@@557))) ($generated@@215 ($generated@@457 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@457 $generated@@557 $generated@@559))
))))
 :pattern ( ($generated@@135 $generated@@557 ($generated@@456 $generated@@558)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 Int) ) (!  (=> (= (type $generated@@561) ($generated@@254 $generated@@148)) (=> (and (<= 0 $generated@@562) (< $generated@@562 ($generated@@253 $generated@@561))) (< ($generated@@495 ($generated@@346 $generated@@139 ($generated@@457 $generated@@561 $generated@@562))) ($generated@@560 $generated@@561))))
 :pattern ( ($generated@@495 ($generated@@346 $generated@@139 ($generated@@457 $generated@@561 $generated@@562))))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) ($generated@@273 $generated@@148 $generated@@148)) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) $generated@@64)) ($generated@@135 $generated@@563 ($generated@@374 $generated@@564 $generated@@565))) (and (and ($generated@@135 ($generated@@271 $generated@@563) ($generated@@224 $generated@@564)) ($generated@@135 ($generated@@314 $generated@@563) ($generated@@224 $generated@@565))) ($generated@@135 ($generated@@345 $generated@@563) ($generated@@224 ($generated@@138 $generated@@564 $generated@@565)))))
 :pattern ( ($generated@@135 $generated@@563 ($generated@@374 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) ($generated@@291 $generated@@148 $generated@@148)) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) $generated@@64)) ($generated@@135 $generated@@566 ($generated@@382 $generated@@567 $generated@@568))) (and (and ($generated@@135 ($generated@@289 $generated@@566) ($generated@@229 $generated@@567)) ($generated@@135 ($generated@@325 $generated@@566) ($generated@@229 $generated@@568))) ($generated@@135 ($generated@@356 $generated@@566) ($generated@@229 ($generated@@138 $generated@@567 $generated@@568)))))
 :pattern ( ($generated@@135 $generated@@566 ($generated@@382 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@2) ($generated@@135 $generated@@569 $generated@@46))
 :pattern ( ($generated@@135 $generated@@569 $generated@@46))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@3) ($generated@@135 $generated@@570 $generated@@47))
 :pattern ( ($generated@@135 $generated@@570 $generated@@47))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@4) ($generated@@135 $generated@@571 $generated@@44))
 :pattern ( ($generated@@135 $generated@@571 $generated@@44))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@414) ($generated@@135 $generated@@572 $generated@@45))
 :pattern ( ($generated@@135 $generated@@572 $generated@@45))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@148) ($generated@@135 $generated@@573 $generated@@48))
 :pattern ( ($generated@@135 $generated@@573 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@574 () T@U)
(declare-fun $generated@@575 () T@U)
(declare-fun $generated@@576 () T@U)
(declare-fun $generated@@577 (T@U) Bool)
(declare-fun $generated@@578 () Int)
(assert  (and (and (= (type $generated@@574) ($generated@@160 $generated@@77 $generated@@4)) (= (type $generated@@575) $generated@@77)) (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@579  (=> (and (= $generated@@574 ($generated@@159 $generated@@575 $generated@@576 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@132 ($generated@@234 51)))))
(let (($generated@@580  (=> (and (and ($generated@@133 $generated@@576) ($generated@@577 $generated@@576)) (and (= 0 $generated@@578) (= (ControlFlow 0 3) 2))) $generated@@579)))
$generated@@580)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U T@U) T@U)
(declare-fun $generated@@159 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@160 (T@T T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@214 (T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) Bool)
(declare-fun $generated@@224 (T@U) T@U)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@234 (Int) Int)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@240 (T@U T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@252 (T@T) T@U)
(declare-fun $generated@@253 (T@U) Int)
(declare-fun $generated@@254 (T@T) T@T)
(declare-fun $generated@@255 (T@T) T@T)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Int)
(declare-fun $generated@@266 (T@T) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@272 (T@T T@T) T@U)
(declare-fun $generated@@273 (T@T T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@374 (T@U T@U) T@U)
(declare-fun $generated@@382 (T@U T@U) T@U)
(declare-fun $generated@@390 (T@T) T@U)
(declare-fun $generated@@414 () T@T)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@457 (T@U Int) T@U)
(declare-fun $generated@@466 (T@U) Int)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@494 (T@U) Int)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@560 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78)) ($generated@@133 $generated@@134)) ($generated@@74 ($generated@@8 $generated@@132) $generated@@46 $generated@@134))
 :pattern ( ($generated@@74 ($generated@@8 $generated@@132) $generated@@46 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@2) ($generated@@135 $generated@@136 ($generated@@75 0)))
 :pattern ( ($generated@@135 $generated@@136 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@139) 14) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@140 $generated@@141)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@140 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (and (= (type $generated@@142) $generated@@64) (= (type $generated@@143) $generated@@64)) (= (type $generated@@144) $generated@@139)) ($generated@@135 $generated@@144 ($generated@@138 $generated@@142 $generated@@143))) ($generated@@137 $generated@@144))
 :pattern ( ($generated@@137 $generated@@144) ($generated@@135 $generated@@144 ($generated@@138 $generated@@142 $generated@@143)))
)))
(assert  (and (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@148)
 :pattern ( ($generated@@146 $generated@@149))
))) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@148)
 :pattern ( ($generated@@147 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) $generated@@139) (= (type $generated@@152) $generated@@139)) true) (= ($generated@@145 $generated@@151 $generated@@152)  (and (= ($generated@@146 $generated@@151) ($generated@@146 $generated@@152)) (= ($generated@@147 $generated@@151) ($generated@@147 $generated@@152)))))
 :pattern ( ($generated@@145 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@64)
 :pattern ( ($generated@@153 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@76 $generated@@148 $generated@@2)) (= (type $generated@@157) $generated@@64)) ($generated@@135 $generated@@156 ($generated@@153 $generated@@157))) ($generated@@154 $generated@@156))
 :pattern ( ($generated@@135 $generated@@156 ($generated@@153 $generated@@157)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@164 T@T) ($generated@@165 T@T) ) (= ($generated@@1 ($generated@@160 $generated@@164 $generated@@165)) 16)) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (! (= ($generated@@161 ($generated@@160 $generated@@166 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@162 ($generated@@160 $generated@@168 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@160 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (let (($generated@@173 ($generated@@162 (type $generated@@170))))
(= (type ($generated@@158 $generated@@170 $generated@@171 $generated@@172)) $generated@@173))
 :pattern ( ($generated@@158 $generated@@170 $generated@@171 $generated@@172))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(let (($generated@@179 (type $generated@@175)))
(= (type ($generated@@163 $generated@@174 $generated@@175 $generated@@176 $generated@@177)) ($generated@@160 $generated@@179 $generated@@178))))
 :pattern ( ($generated@@163 $generated@@174 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@162 (type $generated@@180))))
 (=> (= (type $generated@@183) $generated@@184) (= ($generated@@158 ($generated@@163 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@181 $generated@@182) $generated@@183)))
 :weight 0
))) (and (and (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (or (= $generated@@187 $generated@@189) (= ($generated@@158 ($generated@@163 $generated@@186 $generated@@187 $generated@@188 $generated@@185) $generated@@189 $generated@@190) ($generated@@158 $generated@@186 $generated@@189 $generated@@190)))
 :weight 0
)) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@158 ($generated@@163 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@158 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or true (= ($generated@@158 ($generated@@163 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@158 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 Bool) ) (! (= (type ($generated@@159 $generated@@203 $generated@@204 $generated@@205 $generated@@206)) ($generated@@160 $generated@@77 $generated@@4))
 :pattern ( ($generated@@159 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@67 (type $generated@@212))))
 (=> (and (and (and (and (= (type $generated@@207) $generated@@77) (= (type $generated@@208) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@209) ($generated@@66 $generated@@4))) (= (type $generated@@211) $generated@@77)) (= (type $generated@@212) ($generated@@66 $generated@@213))) (= ($generated@@0 ($generated@@158 ($generated@@159 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))  (=> (and (not (= $generated@@211 $generated@@207)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@208 $generated@@211) $generated@@209))) $generated@@210))))
 :pattern ( ($generated@@158 ($generated@@159 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (! (= (type ($generated@@214 $generated@@216 $generated@@217)) $generated@@139)
 :pattern ( ($generated@@214 $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and (and (and (= (type $generated@@218) $generated@@64) (= (type $generated@@219) $generated@@64)) (= (type $generated@@220) $generated@@148)) (= (type $generated@@221) $generated@@148)) (= ($generated@@135 ($generated@@214 $generated@@220 $generated@@221) ($generated@@138 $generated@@218 $generated@@219))  (and ($generated@@215 $generated@@220 $generated@@218) ($generated@@215 $generated@@221 $generated@@219))))
 :pattern ( ($generated@@135 ($generated@@214 $generated@@220 $generated@@221) ($generated@@138 $generated@@218 $generated@@219)))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@139) (= (type $generated@@223) $generated@@139)) (= ($generated@@145 $generated@@222 $generated@@223) (= $generated@@222 $generated@@223)))
 :pattern ( ($generated@@145 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@225 T@U) ) (! (= (type ($generated@@224 $generated@@225)) $generated@@64)
 :pattern ( ($generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) ($generated@@76 $generated@@148 $generated@@4)) (= (type $generated@@227) $generated@@64)) (= ($generated@@135 $generated@@226 ($generated@@224 $generated@@227)) (forall (($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@148) ($generated@@0 ($generated@@81 $generated@@226 $generated@@228))) ($generated@@215 $generated@@228 $generated@@227))
 :pattern ( ($generated@@81 $generated@@226 $generated@@228))
))))
 :pattern ( ($generated@@135 $generated@@226 ($generated@@224 $generated@@227)))
)))
(assert (forall (($generated@@230 T@U) ) (! (= (type ($generated@@229 $generated@@230)) $generated@@64)
 :pattern ( ($generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) ($generated@@76 $generated@@148 $generated@@4)) (= (type $generated@@232) $generated@@64)) (= ($generated@@135 $generated@@231 ($generated@@229 $generated@@232)) (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@148) ($generated@@0 ($generated@@81 $generated@@231 $generated@@233))) ($generated@@215 $generated@@233 $generated@@232))
 :pattern ( ($generated@@81 $generated@@231 $generated@@233))
))))
 :pattern ( ($generated@@135 $generated@@231 ($generated@@229 $generated@@232)))
)))
(assert (forall (($generated@@235 Int) ) (! (= ($generated@@234 $generated@@235) $generated@@235)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ) (! (let (($generated@@238 (type $generated@@237)))
(= (type ($generated@@236 $generated@@237)) $generated@@238))
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= ($generated@@236 $generated@@239) $generated@@239)
 :pattern ( ($generated@@236 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@241) $generated@@64) (= (type $generated@@242) $generated@@64)) (= (type $generated@@243) $generated@@148)) (= (type $generated@@244) $generated@@148)) (= (type $generated@@245) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@133 $generated@@245)) (= ($generated@@74 ($generated@@214 $generated@@243 $generated@@244) ($generated@@138 $generated@@241 $generated@@242) $generated@@245)  (and ($generated@@240 $generated@@243 $generated@@241 $generated@@245) ($generated@@240 $generated@@244 $generated@@242 $generated@@245))))
 :pattern ( ($generated@@74 ($generated@@214 $generated@@243 $generated@@244) ($generated@@138 $generated@@241 $generated@@242) $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@68)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ) (!  (=> (= (type $generated@@248) $generated@@139) (= ($generated@@137 $generated@@248) (= ($generated@@246 $generated@@248) $generated@@61)))
 :pattern ( ($generated@@137 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@139) ($generated@@137 $generated@@249)) (exists (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (and (and (= (type $generated@@250) $generated@@148) (= (type $generated@@251) $generated@@148)) (= $generated@@249 ($generated@@214 $generated@@250 $generated@@251)))
 :no-pattern (type $generated@@250)
 :no-pattern (type $generated@@251)
 :no-pattern ($generated $generated@@250)
 :no-pattern ($generated@@0 $generated@@250)
 :no-pattern ($generated $generated@@251)
 :no-pattern ($generated@@0 $generated@@251)
)))
 :pattern ( ($generated@@137 $generated@@249))
)))
(assert  (and (and (forall (($generated@@256 T@T) ) (= ($generated@@1 ($generated@@254 $generated@@256)) 17)) (forall (($generated@@257 T@T) ) (! (= ($generated@@255 ($generated@@254 $generated@@257)) $generated@@257)
 :pattern ( ($generated@@254 $generated@@257))
))) (forall (($generated@@258 T@T) ) (! (= (type ($generated@@252 $generated@@258)) ($generated@@254 $generated@@258))
 :pattern ( ($generated@@252 $generated@@258))
))))
(assert (forall (($generated@@259 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@259)) 0)
 :pattern ( ($generated@@252 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@148)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@64) (= (type $generated@@264) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@240 ($generated@@260 $generated@@262) $generated@@263 $generated@@264) ($generated@@74 $generated@@262 $generated@@263 $generated@@264)))
 :pattern ( ($generated@@240 ($generated@@260 $generated@@262) $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@267 T@T) ) (! (= (type ($generated@@266 $generated@@267)) ($generated@@76 $generated@@267 $generated@@2))
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@79 (type $generated@@268))))
 (=> (= (type $generated@@268) ($generated@@76 $generated@@269 $generated@@2)) (and (= (= ($generated@@265 $generated@@268) 0) (= $generated@@268 ($generated@@266 $generated@@269))) (=> (not (= ($generated@@265 $generated@@268) 0)) (exists (($generated@@270 T@U) ) (!  (and (= (type $generated@@270) $generated@@269) (< 0 ($generated ($generated@@81 $generated@@268 $generated@@270))))
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
))))))
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert  (and (and (and (and (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (= ($generated@@1 ($generated@@273 $generated@@276 $generated@@277)) 18)) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@278 $generated@@279)) $generated@@278)
 :pattern ( ($generated@@273 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (! (= ($generated@@275 ($generated@@273 $generated@@280 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@273 $generated@@280 $generated@@281))
))) (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@274 (type $generated@@282))))
(= (type ($generated@@271 $generated@@282)) ($generated@@76 $generated@@283 $generated@@4)))
 :pattern ( ($generated@@271 $generated@@282))
))) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= (type ($generated@@272 $generated@@284 $generated@@285)) ($generated@@273 $generated@@284 $generated@@285))
 :pattern ( ($generated@@272 $generated@@284 $generated@@285))
))))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@T) ) (! (let (($generated@@288 (type $generated@@286)))
 (not ($generated@@0 ($generated@@81 ($generated@@271 ($generated@@272 $generated@@288 $generated@@287)) $generated@@286))))
 :pattern ( (let (($generated@@288 (type $generated@@286)))
($generated@@81 ($generated@@271 ($generated@@272 $generated@@288 $generated@@287)) $generated@@286)))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 19)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@76 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@81 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@81 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert ($generated@@135 ($generated@@8 $generated@@132) $generated@@46))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@79 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@76 $generated@@308 $generated@@2)) (= ($generated@@154 $generated@@307) (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@308) (and (<= 0 ($generated ($generated@@81 $generated@@307 $generated@@309))) (<= ($generated ($generated@@81 $generated@@307 $generated@@309)) ($generated@@265 $generated@@307))))
 :pattern ( ($generated@@81 $generated@@307 $generated@@309))
)))))
 :pattern ( ($generated@@154 $generated@@307))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@275 (type $generated@@310))))
(let (($generated@@312 ($generated@@274 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@273 $generated@@312 $generated@@311)) (or (= $generated@@310 ($generated@@272 $generated@@312 $generated@@311)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@312) ($generated@@0 ($generated@@81 ($generated@@271 $generated@@310) $generated@@313)))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@271 $generated@@310))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@275 (type $generated@@315))))
(= (type ($generated@@314 $generated@@315)) ($generated@@76 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@275 (type $generated@@317))))
(let (($generated@@319 ($generated@@274 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@273 $generated@@319 $generated@@318)) (or (= $generated@@317 ($generated@@272 $generated@@319 $generated@@318)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@318) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@317) $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@314 $generated@@317))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@293 (type $generated@@321))))
(let (($generated@@323 ($generated@@292 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@291 $generated@@323 $generated@@322)) (or (= $generated@@321 ($generated@@290 $generated@@323 $generated@@322)) (exists (($generated@@324 T@U) ) (!  (and (= (type $generated@@324) $generated@@323) ($generated@@0 ($generated@@81 ($generated@@289 $generated@@321) $generated@@324)))
 :no-pattern (type $generated@@324)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
))))))
 :pattern ( ($generated@@289 $generated@@321))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@293 (type $generated@@326))))
(= (type ($generated@@325 $generated@@326)) ($generated@@76 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@293 (type $generated@@328))))
(let (($generated@@330 ($generated@@292 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@291 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@290 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@329) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@325 $generated@@328))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@332) ($generated@@76 $generated@@148 $generated@@2)) (= (type $generated@@333) $generated@@64)) (= ($generated@@135 $generated@@332 ($generated@@153 $generated@@333)) (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@148) (< 0 ($generated ($generated@@81 $generated@@332 $generated@@334)))) ($generated@@215 $generated@@334 $generated@@333))
 :pattern ( ($generated@@81 $generated@@332 $generated@@334))
))))
 :pattern ( ($generated@@135 $generated@@332 ($generated@@153 $generated@@333)))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (= (type $generated@@335) ($generated@@76 $generated@@148 $generated@@4)) (= (type $generated@@336) $generated@@64)) (= (type $generated@@337) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@335 ($generated@@224 $generated@@336) $generated@@337) (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@148) ($generated@@0 ($generated@@81 $generated@@335 $generated@@338))) ($generated@@240 $generated@@338 $generated@@336 $generated@@337))
 :pattern ( ($generated@@81 $generated@@335 $generated@@338))
))))
 :pattern ( ($generated@@74 $generated@@335 ($generated@@224 $generated@@336) $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (= (type $generated@@339) ($generated@@76 $generated@@148 $generated@@4)) (= (type $generated@@340) $generated@@64)) (= (type $generated@@341) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@339 ($generated@@229 $generated@@340) $generated@@341) (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@148) ($generated@@0 ($generated@@81 $generated@@339 $generated@@342))) ($generated@@240 $generated@@342 $generated@@340 $generated@@341))
 :pattern ( ($generated@@81 $generated@@339 $generated@@342))
))))
 :pattern ( ($generated@@74 $generated@@339 ($generated@@229 $generated@@340) $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 (type $generated@@343)))
(= ($generated ($generated@@81 ($generated@@266 $generated@@344) $generated@@343)) 0))
 :pattern ( (let (($generated@@344 (type $generated@@343)))
($generated@@81 ($generated@@266 $generated@@344) $generated@@343)))
)))
(assert  (and (and (forall (($generated@@348 T@U) ) (! (= (type ($generated@@345 $generated@@348)) ($generated@@76 $generated@@148 $generated@@4))
 :pattern ( ($generated@@345 $generated@@348))
)) (forall (($generated@@349 T@T) ($generated@@350 T@U) ) (! (= (type ($generated@@346 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@346 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@275 (type $generated@@351))))
(let (($generated@@353 ($generated@@274 (type $generated@@351))))
(= (type ($generated@@347 $generated@@351)) ($generated@@76 $generated@@353 $generated@@352))))
 :pattern ( ($generated@@347 $generated@@351))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@273 $generated@@148 $generated@@148)) (= (type $generated@@355) $generated@@148)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@354) $generated@@355))  (and ($generated@@0 ($generated@@81 ($generated@@271 $generated@@354) ($generated@@146 ($generated@@346 $generated@@139 $generated@@355)))) (= ($generated@@81 ($generated@@347 $generated@@354) ($generated@@146 ($generated@@346 $generated@@139 $generated@@355))) ($generated@@147 ($generated@@346 $generated@@139 $generated@@355))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@354) $generated@@355))
)))
(assert  (and (forall (($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@358)) ($generated@@76 $generated@@148 $generated@@4))
 :pattern ( ($generated@@356 $generated@@358))
)) (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@293 (type $generated@@359))))
(let (($generated@@361 ($generated@@292 (type $generated@@359))))
(= (type ($generated@@357 $generated@@359)) ($generated@@76 $generated@@361 $generated@@360))))
 :pattern ( ($generated@@357 $generated@@359))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@291 $generated@@148 $generated@@148)) (= (type $generated@@363) $generated@@148)) (= ($generated@@0 ($generated@@81 ($generated@@356 $generated@@362) $generated@@363))  (and ($generated@@0 ($generated@@81 ($generated@@289 $generated@@362) ($generated@@146 ($generated@@346 $generated@@139 $generated@@363)))) (= ($generated@@81 ($generated@@357 $generated@@362) ($generated@@146 ($generated@@346 $generated@@139 $generated@@363))) ($generated@@147 ($generated@@346 $generated@@139 $generated@@363))))))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(let (($generated@@367 ($generated@@274 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@273 $generated@@367 $generated@@366)) (= ($generated@@0 ($generated@@81 ($generated@@314 $generated@@364) $generated@@365)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) (and ($generated@@0 ($generated@@81 ($generated@@271 $generated@@364) $generated@@368)) (= $generated@@365 ($generated@@81 ($generated@@347 $generated@@364) $generated@@368))))
 :pattern ( ($generated@@81 ($generated@@271 $generated@@364) $generated@@368))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@364) $generated@@368))
))))))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(let (($generated@@372 ($generated@@292 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@291 $generated@@372 $generated@@371)) (= ($generated@@0 ($generated@@81 ($generated@@325 $generated@@369) $generated@@370)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) (and ($generated@@0 ($generated@@81 ($generated@@289 $generated@@369) $generated@@373)) (= $generated@@370 ($generated@@81 ($generated@@357 $generated@@369) $generated@@373))))
 :pattern ( ($generated@@81 ($generated@@289 $generated@@369) $generated@@373))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@369) $generated@@373))
))))))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@375 $generated@@376)) $generated@@64)
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (and (= (type $generated@@377) ($generated@@273 $generated@@148 $generated@@148)) (= (type $generated@@378) $generated@@64)) (= (type $generated@@379) $generated@@64)) (= (type $generated@@380) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@148) ($generated@@0 ($generated@@81 ($generated@@271 $generated@@377) $generated@@381))) (and ($generated@@240 ($generated@@81 ($generated@@347 $generated@@377) $generated@@381) $generated@@379 $generated@@380) ($generated@@240 $generated@@381 $generated@@378 $generated@@380)))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@377) $generated@@381))
 :pattern ( ($generated@@81 ($generated@@271 $generated@@377) $generated@@381))
))))
 :pattern ( ($generated@@74 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@383 $generated@@384)) $generated@@64)
 :pattern ( ($generated@@382 $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (and (= (type $generated@@385) ($generated@@291 $generated@@148 $generated@@148)) (= (type $generated@@386) $generated@@64)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@385 ($generated@@382 $generated@@386 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@148) ($generated@@0 ($generated@@81 ($generated@@289 $generated@@385) $generated@@389))) (and ($generated@@240 ($generated@@81 ($generated@@357 $generated@@385) $generated@@389) $generated@@387 $generated@@388) ($generated@@240 $generated@@389 $generated@@386 $generated@@388)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@385) $generated@@389))
 :pattern ( ($generated@@81 ($generated@@289 $generated@@385) $generated@@389))
))))
 :pattern ( ($generated@@74 $generated@@385 ($generated@@382 $generated@@386 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@391 T@T) ) (! (= (type ($generated@@390 $generated@@391)) ($generated@@76 $generated@@391 $generated@@4))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@293 (type $generated@@392))))
(let (($generated@@394 ($generated@@292 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@291 $generated@@394 $generated@@393)) (= (= $generated@@392 ($generated@@290 $generated@@394 $generated@@393)) (= ($generated@@289 $generated@@392) ($generated@@390 $generated@@394))))))
 :pattern ( ($generated@@289 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@293 (type $generated@@395))))
(let (($generated@@397 ($generated@@292 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@291 $generated@@397 $generated@@396)) (= (= $generated@@395 ($generated@@290 $generated@@397 $generated@@396)) (= ($generated@@325 $generated@@395) ($generated@@390 $generated@@396))))))
 :pattern ( ($generated@@325 $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@293 (type $generated@@398))))
(let (($generated@@400 ($generated@@292 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@291 $generated@@400 $generated@@399)) (= (= $generated@@398 ($generated@@290 $generated@@400 $generated@@399)) (= ($generated@@356 $generated@@398) ($generated@@390 $generated@@148))))))
 :pattern ( ($generated@@356 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@275 (type $generated@@401))))
(let (($generated@@403 ($generated@@274 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@273 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@272 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (and (and (= (type $generated@@404) $generated@@148) (= (type $generated@@405) $generated@@148)) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@401) ($generated@@260 ($generated@@214 $generated@@404 $generated@@405)))))
 :no-pattern (type $generated@@404)
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@345 $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@293 (type $generated@@406))))
(let (($generated@@408 ($generated@@292 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@291 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@290 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (and (and (= (type $generated@@409) $generated@@148) (= (type $generated@@410) $generated@@148)) ($generated@@0 ($generated@@81 ($generated@@356 $generated@@406) ($generated@@260 ($generated@@214 $generated@@409 $generated@@410)))))
 :no-pattern (type $generated@@409)
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@356 $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@148) ($generated@@215 $generated@@411 $generated@@46)) (and (= ($generated@@260 ($generated@@346 $generated@@2 $generated@@411)) $generated@@411) ($generated@@135 ($generated@@346 $generated@@2 $generated@@411) $generated@@46)))
 :pattern ( ($generated@@215 $generated@@411 $generated@@46))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@148) ($generated@@215 $generated@@412 $generated@@47)) (and (= ($generated@@260 ($generated@@346 $generated@@3 $generated@@412)) $generated@@412) ($generated@@135 ($generated@@346 $generated@@3 $generated@@412) $generated@@47)))
 :pattern ( ($generated@@215 $generated@@412 $generated@@47))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@148) ($generated@@215 $generated@@413 $generated@@44)) (and (= ($generated@@260 ($generated@@346 $generated@@4 $generated@@413)) $generated@@413) ($generated@@135 ($generated@@346 $generated@@4 $generated@@413) $generated@@44)))
 :pattern ( ($generated@@215 $generated@@413 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@414) 20))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@148) ($generated@@215 $generated@@415 $generated@@45)) (and (= ($generated@@260 ($generated@@346 $generated@@414 $generated@@415)) $generated@@415) ($generated@@135 ($generated@@346 $generated@@414 $generated@@415) $generated@@45)))
 :pattern ( ($generated@@215 $generated@@415 $generated@@45))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@64) (= ($generated@@215 ($generated@@260 $generated@@416) $generated@@417) ($generated@@135 $generated@@416 $generated@@417)))
 :pattern ( ($generated@@215 ($generated@@260 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@79 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@76 $generated@@419 $generated@@2)) (<= 0 ($generated@@265 $generated@@418))))
 :pattern ( ($generated@@265 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@255 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@254 $generated@@421)) (<= 0 ($generated@@253 $generated@@420))))
 :pattern ( ($generated@@253 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@64)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@64) (= (type $generated@@425) $generated@@64)) (= ($generated@@422 ($generated@@374 $generated@@424 $generated@@425)) $generated@@424))
 :pattern ( ($generated@@374 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (= (type ($generated@@426 $generated@@427)) $generated@@64)
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@64) (= (type $generated@@429) $generated@@64)) (= ($generated@@426 ($generated@@374 $generated@@428 $generated@@429)) $generated@@429))
 :pattern ( ($generated@@374 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@64) (= (type $generated@@431) $generated@@64)) (= ($generated@@72 ($generated@@374 $generated@@430 $generated@@431)) $generated@@58))
 :pattern ( ($generated@@374 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@64) (= (type $generated@@435) $generated@@64)) (= ($generated@@432 ($generated@@382 $generated@@434 $generated@@435)) $generated@@434))
 :pattern ( ($generated@@382 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@64)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@436 ($generated@@382 $generated@@438 $generated@@439)) $generated@@439))
 :pattern ( ($generated@@382 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@64) (= (type $generated@@441) $generated@@64)) (= ($generated@@72 ($generated@@382 $generated@@440 $generated@@441)) $generated@@59))
 :pattern ( ($generated@@382 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@148) (= (type $generated@@443) $generated@@148)) (= ($generated@@246 ($generated@@214 $generated@@442 $generated@@443)) $generated@@61))
 :pattern ( ($generated@@214 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@138 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@138 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@138 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@138 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@148) (= (type $generated@@453) $generated@@148)) (= ($generated@@146 ($generated@@214 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@214 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@148) (= (type $generated@@455) $generated@@148)) (= ($generated@@147 ($generated@@214 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@214 $generated@@454 $generated@@455))
)))
(assert  (and (forall (($generated@@458 T@U) ) (! (= (type ($generated@@456 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@458))
)) (forall (($generated@@459 T@U) ($generated@@460 Int) ) (! (let (($generated@@461 ($generated@@255 (type $generated@@459))))
(= (type ($generated@@457 $generated@@459 $generated@@460)) $generated@@461))
 :pattern ( ($generated@@457 $generated@@459 $generated@@460))
))))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (= (type $generated@@462) ($generated@@254 $generated@@148)) (= (type $generated@@463) $generated@@64)) (= (type $generated@@464) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@462 ($generated@@456 $generated@@463) $generated@@464) (forall (($generated@@465 Int) ) (!  (=> (and (<= 0 $generated@@465) (< $generated@@465 ($generated@@253 $generated@@462))) ($generated@@240 ($generated@@457 $generated@@462 $generated@@465) $generated@@463 $generated@@464))
 :pattern ( ($generated@@457 $generated@@462 $generated@@465))
))))
 :pattern ( ($generated@@74 $generated@@462 ($generated@@456 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@467 Int) ) (! (= ($generated@@466 ($generated@@75 $generated@@467)) $generated@@467)
 :pattern ( ($generated@@75 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@64) (= ($generated@@468 ($generated@@224 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@224 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@64) (= ($generated@@72 ($generated@@224 $generated@@471)) $generated@@54))
 :pattern ( ($generated@@224 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@64) (= ($generated@@472 ($generated@@229 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@229 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@64) (= ($generated@@72 ($generated@@229 $generated@@475)) $generated@@55))
 :pattern ( ($generated@@229 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@64) (= ($generated@@476 ($generated@@153 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@153 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@72 ($generated@@153 $generated@@479)) $generated@@56))
 :pattern ( ($generated@@153 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@64) (= ($generated@@480 ($generated@@456 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@456 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@72 ($generated@@456 $generated@@483)) $generated@@57))
 :pattern ( ($generated@@456 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 (type $generated@@484)))
(= ($generated@@346 $generated@@485 ($generated@@260 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@260 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@273 $generated@@148 $generated@@148)) (= (type $generated@@487) $generated@@64)) (= (type $generated@@488) $generated@@64)) (= ($generated@@135 $generated@@486 ($generated@@374 $generated@@487 $generated@@488)) (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@148) ($generated@@0 ($generated@@81 ($generated@@271 $generated@@486) $generated@@489))) (and ($generated@@215 ($generated@@81 ($generated@@347 $generated@@486) $generated@@489) $generated@@488) ($generated@@215 $generated@@489 $generated@@487)))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@486) $generated@@489))
 :pattern ( ($generated@@81 ($generated@@271 $generated@@486) $generated@@489))
))))
 :pattern ( ($generated@@135 $generated@@486 ($generated@@374 $generated@@487 $generated@@488)))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@291 $generated@@148 $generated@@148)) (= (type $generated@@491) $generated@@64)) (= (type $generated@@492) $generated@@64)) (= ($generated@@135 $generated@@490 ($generated@@382 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@148) ($generated@@0 ($generated@@81 ($generated@@289 $generated@@490) $generated@@493))) (and ($generated@@215 ($generated@@81 ($generated@@357 $generated@@490) $generated@@493) $generated@@492) ($generated@@215 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@490) $generated@@493))
 :pattern ( ($generated@@81 ($generated@@289 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@135 $generated@@490 ($generated@@382 $generated@@491 $generated@@492)))
)))
(assert (= $generated@@132 ($generated@@234 50)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@148) (= (type $generated@@497) $generated@@148)) (< ($generated@@494 $generated@@496) ($generated@@495 ($generated@@214 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@214 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@148) (= (type $generated@@499) $generated@@148)) (< ($generated@@494 $generated@@499) ($generated@@495 ($generated@@214 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@214 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (and (= (type $generated@@500) $generated@@148) (= (type $generated@@501) $generated@@64)) (= (type $generated@@502) $generated@@64)) ($generated@@215 $generated@@500 ($generated@@374 $generated@@501 $generated@@502))) (and (= ($generated@@260 ($generated@@346 ($generated@@273 $generated@@148 $generated@@148) $generated@@500)) $generated@@500) ($generated@@135 ($generated@@346 ($generated@@273 $generated@@148 $generated@@148) $generated@@500) ($generated@@374 $generated@@501 $generated@@502))))
 :pattern ( ($generated@@215 $generated@@500 ($generated@@374 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (and (= (type $generated@@503) $generated@@148) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) $generated@@64)) ($generated@@215 $generated@@503 ($generated@@382 $generated@@504 $generated@@505))) (and (= ($generated@@260 ($generated@@346 ($generated@@291 $generated@@148 $generated@@148) $generated@@503)) $generated@@503) ($generated@@135 ($generated@@346 ($generated@@291 $generated@@148 $generated@@148) $generated@@503) ($generated@@382 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@215 $generated@@503 ($generated@@382 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) $generated@@64) (= (type $generated@@507) $generated@@64)) (= (type $generated@@508) $generated@@148)) ($generated@@215 $generated@@508 ($generated@@138 $generated@@506 $generated@@507))) (and (= ($generated@@260 ($generated@@346 $generated@@139 $generated@@508)) $generated@@508) ($generated@@135 ($generated@@346 $generated@@139 $generated@@508) ($generated@@138 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@215 $generated@@508 ($generated@@138 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
 (not ($generated@@0 ($generated@@81 ($generated@@390 $generated@@510) $generated@@509))))
 :pattern ( (let (($generated@@510 (type $generated@@509)))
($generated@@81 ($generated@@390 $generated@@510) $generated@@509)))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@69)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@64) (= (type $generated@@514) $generated@@64)) (and (= ($generated@@72 ($generated@@138 $generated@@513 $generated@@514)) $generated@@62) (= ($generated@@511 ($generated@@138 $generated@@513 $generated@@514)) $generated@@63)))
 :pattern ( ($generated@@138 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@139) (= ($generated@@494 ($generated@@260 $generated@@515)) ($generated@@495 $generated@@515)))
 :pattern ( ($generated@@494 ($generated@@260 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@148) ($generated@@215 $generated@@516 ($generated@@75 0))) (and (= ($generated@@260 ($generated@@346 $generated@@2 $generated@@516)) $generated@@516) ($generated@@135 ($generated@@346 ($generated@@76 $generated@@148 $generated@@4) $generated@@516) ($generated@@75 0))))
 :pattern ( ($generated@@215 $generated@@516 ($generated@@75 0)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@517) $generated@@148) (= (type $generated@@518) $generated@@64)) ($generated@@215 $generated@@517 ($generated@@224 $generated@@518))) (and (= ($generated@@260 ($generated@@346 ($generated@@76 $generated@@148 $generated@@4) $generated@@517)) $generated@@517) ($generated@@135 ($generated@@346 ($generated@@76 $generated@@148 $generated@@4) $generated@@517) ($generated@@224 $generated@@518))))
 :pattern ( ($generated@@215 $generated@@517 ($generated@@224 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) $generated@@148) (= (type $generated@@520) $generated@@64)) ($generated@@215 $generated@@519 ($generated@@229 $generated@@520))) (and (= ($generated@@260 ($generated@@346 ($generated@@76 $generated@@148 $generated@@4) $generated@@519)) $generated@@519) ($generated@@135 ($generated@@346 ($generated@@76 $generated@@148 $generated@@4) $generated@@519) ($generated@@229 $generated@@520))))
 :pattern ( ($generated@@215 $generated@@519 ($generated@@229 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@521) $generated@@148) (= (type $generated@@522) $generated@@64)) ($generated@@215 $generated@@521 ($generated@@153 $generated@@522))) (and (= ($generated@@260 ($generated@@346 ($generated@@76 $generated@@148 $generated@@2) $generated@@521)) $generated@@521) ($generated@@135 ($generated@@346 ($generated@@76 $generated@@148 $generated@@2) $generated@@521) ($generated@@153 $generated@@522))))
 :pattern ( ($generated@@215 $generated@@521 ($generated@@153 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@523) $generated@@148) (= (type $generated@@524) $generated@@64)) ($generated@@215 $generated@@523 ($generated@@456 $generated@@524))) (and (= ($generated@@260 ($generated@@346 ($generated@@254 $generated@@148) $generated@@523)) $generated@@523) ($generated@@135 ($generated@@346 ($generated@@254 $generated@@148) $generated@@523) ($generated@@456 $generated@@524))))
 :pattern ( ($generated@@215 $generated@@523 ($generated@@456 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@76 $generated@@148 $generated@@2)) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@525 ($generated@@153 $generated@@526) $generated@@527) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@148) (< 0 ($generated ($generated@@81 $generated@@525 $generated@@528)))) ($generated@@240 $generated@@528 $generated@@526 $generated@@527))
 :pattern ( ($generated@@81 $generated@@525 $generated@@528))
))))
 :pattern ( ($generated@@74 $generated@@525 ($generated@@153 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@139) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@133 $generated@@531) (and ($generated@@137 $generated@@529) (exists (($generated@@532 T@U) ) (!  (and (= (type $generated@@532) $generated@@64) ($generated@@74 $generated@@529 ($generated@@138 $generated@@530 $generated@@532) $generated@@531))
 :pattern ( ($generated@@74 $generated@@529 ($generated@@138 $generated@@530 $generated@@532) $generated@@531))
))))) ($generated@@240 ($generated@@146 $generated@@529) $generated@@530 $generated@@531))
 :pattern ( ($generated@@240 ($generated@@146 $generated@@529) $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@139) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@133 $generated@@535) (and ($generated@@137 $generated@@533) (exists (($generated@@536 T@U) ) (!  (and (= (type $generated@@536) $generated@@64) ($generated@@74 $generated@@533 ($generated@@138 $generated@@536 $generated@@534) $generated@@535))
 :pattern ( ($generated@@74 $generated@@533 ($generated@@138 $generated@@536 $generated@@534) $generated@@535))
))))) ($generated@@240 ($generated@@147 $generated@@533) $generated@@534 $generated@@535))
 :pattern ( ($generated@@240 ($generated@@147 $generated@@533) $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@148) (= (type $generated@@538) $generated@@148)) (= ($generated@@214 ($generated@@236 $generated@@537) ($generated@@236 $generated@@538)) ($generated@@236 ($generated@@214 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@214 ($generated@@236 $generated@@537) ($generated@@236 $generated@@538)))
)))
(assert (forall (($generated@@539 Int) ) (! (= ($generated@@260 ($generated@@8 ($generated@@234 $generated@@539))) ($generated@@236 ($generated@@260 ($generated@@8 $generated@@539))))
 :pattern ( ($generated@@260 ($generated@@8 ($generated@@234 $generated@@539))))
)))
(assert (forall (($generated@@540 T@U) ) (! (= ($generated@@260 ($generated@@236 $generated@@540)) ($generated@@236 ($generated@@260 $generated@@540)))
 :pattern ( ($generated@@260 ($generated@@236 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@255 (type $generated@@541))))
 (=> (and (= (type $generated@@541) ($generated@@254 $generated@@542)) (= ($generated@@253 $generated@@541) 0)) (= $generated@@541 ($generated@@252 $generated@@542))))
 :pattern ( ($generated@@253 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@544)))
 (=> (and (and (= (type $generated@@543) ($generated@@76 $generated@@546 $generated@@2)) (= (type $generated@@545) $generated@@2)) (<= 0 ($generated $generated@@545))) (= ($generated@@265 ($generated@@82 $generated@@543 $generated@@544 $generated@@545)) (+ (- ($generated@@265 $generated@@543) ($generated ($generated@@81 $generated@@543 $generated@@544))) ($generated $generated@@545)))))
 :pattern ( ($generated@@265 ($generated@@82 $generated@@543 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@548) $generated@@2)) ($generated@@74 $generated@@548 $generated@@46 $generated@@547))
 :pattern ( ($generated@@74 $generated@@548 $generated@@46 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@550) $generated@@3)) ($generated@@74 $generated@@550 $generated@@47 $generated@@549))
 :pattern ( ($generated@@74 $generated@@550 $generated@@47 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@552) $generated@@4)) ($generated@@74 $generated@@552 $generated@@44 $generated@@551))
 :pattern ( ($generated@@74 $generated@@552 $generated@@44 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@554) $generated@@414)) ($generated@@74 $generated@@554 $generated@@45 $generated@@553))
 :pattern ( ($generated@@74 $generated@@554 $generated@@45 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@556) $generated@@148)) ($generated@@74 $generated@@556 $generated@@48 $generated@@555))
 :pattern ( ($generated@@74 $generated@@556 $generated@@48 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) ($generated@@254 $generated@@148)) (= (type $generated@@558) $generated@@64)) (= ($generated@@135 $generated@@557 ($generated@@456 $generated@@558)) (forall (($generated@@559 Int) ) (!  (=> (and (<= 0 $generated@@559) (< $generated@@559 ($generated@@253 $generated@@557))) ($generated@@215 ($generated@@457 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@457 $generated@@557 $generated@@559))
))))
 :pattern ( ($generated@@135 $generated@@557 ($generated@@456 $generated@@558)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 Int) ) (!  (=> (= (type $generated@@561) ($generated@@254 $generated@@148)) (=> (and (<= 0 $generated@@562) (< $generated@@562 ($generated@@253 $generated@@561))) (< ($generated@@495 ($generated@@346 $generated@@139 ($generated@@457 $generated@@561 $generated@@562))) ($generated@@560 $generated@@561))))
 :pattern ( ($generated@@495 ($generated@@346 $generated@@139 ($generated@@457 $generated@@561 $generated@@562))))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) ($generated@@273 $generated@@148 $generated@@148)) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) $generated@@64)) ($generated@@135 $generated@@563 ($generated@@374 $generated@@564 $generated@@565))) (and (and ($generated@@135 ($generated@@271 $generated@@563) ($generated@@224 $generated@@564)) ($generated@@135 ($generated@@314 $generated@@563) ($generated@@224 $generated@@565))) ($generated@@135 ($generated@@345 $generated@@563) ($generated@@224 ($generated@@138 $generated@@564 $generated@@565)))))
 :pattern ( ($generated@@135 $generated@@563 ($generated@@374 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) ($generated@@291 $generated@@148 $generated@@148)) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) $generated@@64)) ($generated@@135 $generated@@566 ($generated@@382 $generated@@567 $generated@@568))) (and (and ($generated@@135 ($generated@@289 $generated@@566) ($generated@@229 $generated@@567)) ($generated@@135 ($generated@@325 $generated@@566) ($generated@@229 $generated@@568))) ($generated@@135 ($generated@@356 $generated@@566) ($generated@@229 ($generated@@138 $generated@@567 $generated@@568)))))
 :pattern ( ($generated@@135 $generated@@566 ($generated@@382 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@2) ($generated@@135 $generated@@569 $generated@@46))
 :pattern ( ($generated@@135 $generated@@569 $generated@@46))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@3) ($generated@@135 $generated@@570 $generated@@47))
 :pattern ( ($generated@@135 $generated@@570 $generated@@47))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@4) ($generated@@135 $generated@@571 $generated@@44))
 :pattern ( ($generated@@135 $generated@@571 $generated@@44))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@414) ($generated@@135 $generated@@572 $generated@@45))
 :pattern ( ($generated@@135 $generated@@572 $generated@@45))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@148) ($generated@@135 $generated@@573 $generated@@48))
 :pattern ( ($generated@@135 $generated@@573 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@574 () T@U)
(declare-fun $generated@@575 () T@U)
(declare-fun $generated@@576 () T@U)
(declare-fun $generated@@577 (T@U) Bool)
(declare-fun $generated@@578 () Int)
(assert  (and (and (= (type $generated@@574) ($generated@@160 $generated@@77 $generated@@4)) (= (type $generated@@575) $generated@@77)) (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@579  (=> (and (= $generated@@574 ($generated@@159 $generated@@575 $generated@@576 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@132 ($generated@@234 50)))))
(let (($generated@@580  (=> (and (and ($generated@@133 $generated@@576) ($generated@@577 $generated@@576)) (and (= 0 $generated@@578) (= (ControlFlow 0 3) 2))) $generated@@579)))
$generated@@580)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U T@U) T@U)
(declare-fun $generated@@159 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@160 (T@T T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@214 (T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) Bool)
(declare-fun $generated@@224 (T@U) T@U)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@234 (Int) Int)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@240 (T@U T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@252 (T@T) T@U)
(declare-fun $generated@@253 (T@U) Int)
(declare-fun $generated@@254 (T@T) T@T)
(declare-fun $generated@@255 (T@T) T@T)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Int)
(declare-fun $generated@@266 (T@T) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@272 (T@T T@T) T@U)
(declare-fun $generated@@273 (T@T T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@374 (T@U T@U) T@U)
(declare-fun $generated@@382 (T@U T@U) T@U)
(declare-fun $generated@@390 (T@T) T@U)
(declare-fun $generated@@414 () T@T)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@457 (T@U Int) T@U)
(declare-fun $generated@@466 (T@U) Int)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@494 (T@U) Int)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@560 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78)) ($generated@@133 $generated@@134)) ($generated@@74 ($generated@@8 $generated@@132) $generated@@46 $generated@@134))
 :pattern ( ($generated@@74 ($generated@@8 $generated@@132) $generated@@46 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@2) ($generated@@135 $generated@@136 ($generated@@75 0)))
 :pattern ( ($generated@@135 $generated@@136 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@139) 14) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@140 $generated@@141)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@140 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (and (= (type $generated@@142) $generated@@64) (= (type $generated@@143) $generated@@64)) (= (type $generated@@144) $generated@@139)) ($generated@@135 $generated@@144 ($generated@@138 $generated@@142 $generated@@143))) ($generated@@137 $generated@@144))
 :pattern ( ($generated@@137 $generated@@144) ($generated@@135 $generated@@144 ($generated@@138 $generated@@142 $generated@@143)))
)))
(assert  (and (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@148)
 :pattern ( ($generated@@146 $generated@@149))
))) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@148)
 :pattern ( ($generated@@147 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) $generated@@139) (= (type $generated@@152) $generated@@139)) true) (= ($generated@@145 $generated@@151 $generated@@152)  (and (= ($generated@@146 $generated@@151) ($generated@@146 $generated@@152)) (= ($generated@@147 $generated@@151) ($generated@@147 $generated@@152)))))
 :pattern ( ($generated@@145 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@64)
 :pattern ( ($generated@@153 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@76 $generated@@148 $generated@@2)) (= (type $generated@@157) $generated@@64)) ($generated@@135 $generated@@156 ($generated@@153 $generated@@157))) ($generated@@154 $generated@@156))
 :pattern ( ($generated@@135 $generated@@156 ($generated@@153 $generated@@157)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@164 T@T) ($generated@@165 T@T) ) (= ($generated@@1 ($generated@@160 $generated@@164 $generated@@165)) 16)) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (! (= ($generated@@161 ($generated@@160 $generated@@166 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@162 ($generated@@160 $generated@@168 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@160 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (let (($generated@@173 ($generated@@162 (type $generated@@170))))
(= (type ($generated@@158 $generated@@170 $generated@@171 $generated@@172)) $generated@@173))
 :pattern ( ($generated@@158 $generated@@170 $generated@@171 $generated@@172))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(let (($generated@@179 (type $generated@@175)))
(= (type ($generated@@163 $generated@@174 $generated@@175 $generated@@176 $generated@@177)) ($generated@@160 $generated@@179 $generated@@178))))
 :pattern ( ($generated@@163 $generated@@174 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@162 (type $generated@@180))))
 (=> (= (type $generated@@183) $generated@@184) (= ($generated@@158 ($generated@@163 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@181 $generated@@182) $generated@@183)))
 :weight 0
))) (and (and (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (or (= $generated@@187 $generated@@189) (= ($generated@@158 ($generated@@163 $generated@@186 $generated@@187 $generated@@188 $generated@@185) $generated@@189 $generated@@190) ($generated@@158 $generated@@186 $generated@@189 $generated@@190)))
 :weight 0
)) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@158 ($generated@@163 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@158 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or true (= ($generated@@158 ($generated@@163 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@158 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 Bool) ) (! (= (type ($generated@@159 $generated@@203 $generated@@204 $generated@@205 $generated@@206)) ($generated@@160 $generated@@77 $generated@@4))
 :pattern ( ($generated@@159 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@67 (type $generated@@212))))
 (=> (and (and (and (and (= (type $generated@@207) $generated@@77) (= (type $generated@@208) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@209) ($generated@@66 $generated@@4))) (= (type $generated@@211) $generated@@77)) (= (type $generated@@212) ($generated@@66 $generated@@213))) (= ($generated@@0 ($generated@@158 ($generated@@159 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))  (=> (and (not (= $generated@@211 $generated@@207)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@208 $generated@@211) $generated@@209))) $generated@@210))))
 :pattern ( ($generated@@158 ($generated@@159 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (! (= (type ($generated@@214 $generated@@216 $generated@@217)) $generated@@139)
 :pattern ( ($generated@@214 $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and (and (and (= (type $generated@@218) $generated@@64) (= (type $generated@@219) $generated@@64)) (= (type $generated@@220) $generated@@148)) (= (type $generated@@221) $generated@@148)) (= ($generated@@135 ($generated@@214 $generated@@220 $generated@@221) ($generated@@138 $generated@@218 $generated@@219))  (and ($generated@@215 $generated@@220 $generated@@218) ($generated@@215 $generated@@221 $generated@@219))))
 :pattern ( ($generated@@135 ($generated@@214 $generated@@220 $generated@@221) ($generated@@138 $generated@@218 $generated@@219)))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@139) (= (type $generated@@223) $generated@@139)) (= ($generated@@145 $generated@@222 $generated@@223) (= $generated@@222 $generated@@223)))
 :pattern ( ($generated@@145 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@225 T@U) ) (! (= (type ($generated@@224 $generated@@225)) $generated@@64)
 :pattern ( ($generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) ($generated@@76 $generated@@148 $generated@@4)) (= (type $generated@@227) $generated@@64)) (= ($generated@@135 $generated@@226 ($generated@@224 $generated@@227)) (forall (($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@148) ($generated@@0 ($generated@@81 $generated@@226 $generated@@228))) ($generated@@215 $generated@@228 $generated@@227))
 :pattern ( ($generated@@81 $generated@@226 $generated@@228))
))))
 :pattern ( ($generated@@135 $generated@@226 ($generated@@224 $generated@@227)))
)))
(assert (forall (($generated@@230 T@U) ) (! (= (type ($generated@@229 $generated@@230)) $generated@@64)
 :pattern ( ($generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) ($generated@@76 $generated@@148 $generated@@4)) (= (type $generated@@232) $generated@@64)) (= ($generated@@135 $generated@@231 ($generated@@229 $generated@@232)) (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@148) ($generated@@0 ($generated@@81 $generated@@231 $generated@@233))) ($generated@@215 $generated@@233 $generated@@232))
 :pattern ( ($generated@@81 $generated@@231 $generated@@233))
))))
 :pattern ( ($generated@@135 $generated@@231 ($generated@@229 $generated@@232)))
)))
(assert (forall (($generated@@235 Int) ) (! (= ($generated@@234 $generated@@235) $generated@@235)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ) (! (let (($generated@@238 (type $generated@@237)))
(= (type ($generated@@236 $generated@@237)) $generated@@238))
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= ($generated@@236 $generated@@239) $generated@@239)
 :pattern ( ($generated@@236 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@241) $generated@@64) (= (type $generated@@242) $generated@@64)) (= (type $generated@@243) $generated@@148)) (= (type $generated@@244) $generated@@148)) (= (type $generated@@245) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@133 $generated@@245)) (= ($generated@@74 ($generated@@214 $generated@@243 $generated@@244) ($generated@@138 $generated@@241 $generated@@242) $generated@@245)  (and ($generated@@240 $generated@@243 $generated@@241 $generated@@245) ($generated@@240 $generated@@244 $generated@@242 $generated@@245))))
 :pattern ( ($generated@@74 ($generated@@214 $generated@@243 $generated@@244) ($generated@@138 $generated@@241 $generated@@242) $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@68)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ) (!  (=> (= (type $generated@@248) $generated@@139) (= ($generated@@137 $generated@@248) (= ($generated@@246 $generated@@248) $generated@@61)))
 :pattern ( ($generated@@137 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@139) ($generated@@137 $generated@@249)) (exists (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (and (and (= (type $generated@@250) $generated@@148) (= (type $generated@@251) $generated@@148)) (= $generated@@249 ($generated@@214 $generated@@250 $generated@@251)))
 :no-pattern (type $generated@@250)
 :no-pattern (type $generated@@251)
 :no-pattern ($generated $generated@@250)
 :no-pattern ($generated@@0 $generated@@250)
 :no-pattern ($generated $generated@@251)
 :no-pattern ($generated@@0 $generated@@251)
)))
 :pattern ( ($generated@@137 $generated@@249))
)))
(assert  (and (and (forall (($generated@@256 T@T) ) (= ($generated@@1 ($generated@@254 $generated@@256)) 17)) (forall (($generated@@257 T@T) ) (! (= ($generated@@255 ($generated@@254 $generated@@257)) $generated@@257)
 :pattern ( ($generated@@254 $generated@@257))
))) (forall (($generated@@258 T@T) ) (! (= (type ($generated@@252 $generated@@258)) ($generated@@254 $generated@@258))
 :pattern ( ($generated@@252 $generated@@258))
))))
(assert (forall (($generated@@259 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@259)) 0)
 :pattern ( ($generated@@252 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@148)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@64) (= (type $generated@@264) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@240 ($generated@@260 $generated@@262) $generated@@263 $generated@@264) ($generated@@74 $generated@@262 $generated@@263 $generated@@264)))
 :pattern ( ($generated@@240 ($generated@@260 $generated@@262) $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@267 T@T) ) (! (= (type ($generated@@266 $generated@@267)) ($generated@@76 $generated@@267 $generated@@2))
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@79 (type $generated@@268))))
 (=> (= (type $generated@@268) ($generated@@76 $generated@@269 $generated@@2)) (and (= (= ($generated@@265 $generated@@268) 0) (= $generated@@268 ($generated@@266 $generated@@269))) (=> (not (= ($generated@@265 $generated@@268) 0)) (exists (($generated@@270 T@U) ) (!  (and (= (type $generated@@270) $generated@@269) (< 0 ($generated ($generated@@81 $generated@@268 $generated@@270))))
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
))))))
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert  (and (and (and (and (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (= ($generated@@1 ($generated@@273 $generated@@276 $generated@@277)) 18)) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@278 $generated@@279)) $generated@@278)
 :pattern ( ($generated@@273 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (! (= ($generated@@275 ($generated@@273 $generated@@280 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@273 $generated@@280 $generated@@281))
))) (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@274 (type $generated@@282))))
(= (type ($generated@@271 $generated@@282)) ($generated@@76 $generated@@283 $generated@@4)))
 :pattern ( ($generated@@271 $generated@@282))
))) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= (type ($generated@@272 $generated@@284 $generated@@285)) ($generated@@273 $generated@@284 $generated@@285))
 :pattern ( ($generated@@272 $generated@@284 $generated@@285))
))))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@T) ) (! (let (($generated@@288 (type $generated@@286)))
 (not ($generated@@0 ($generated@@81 ($generated@@271 ($generated@@272 $generated@@288 $generated@@287)) $generated@@286))))
 :pattern ( (let (($generated@@288 (type $generated@@286)))
($generated@@81 ($generated@@271 ($generated@@272 $generated@@288 $generated@@287)) $generated@@286)))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 19)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@76 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@81 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@81 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert ($generated@@135 ($generated@@8 $generated@@132) $generated@@46))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@79 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@76 $generated@@308 $generated@@2)) (= ($generated@@154 $generated@@307) (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@308) (and (<= 0 ($generated ($generated@@81 $generated@@307 $generated@@309))) (<= ($generated ($generated@@81 $generated@@307 $generated@@309)) ($generated@@265 $generated@@307))))
 :pattern ( ($generated@@81 $generated@@307 $generated@@309))
)))))
 :pattern ( ($generated@@154 $generated@@307))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@275 (type $generated@@310))))
(let (($generated@@312 ($generated@@274 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@273 $generated@@312 $generated@@311)) (or (= $generated@@310 ($generated@@272 $generated@@312 $generated@@311)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@312) ($generated@@0 ($generated@@81 ($generated@@271 $generated@@310) $generated@@313)))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@271 $generated@@310))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@275 (type $generated@@315))))
(= (type ($generated@@314 $generated@@315)) ($generated@@76 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@275 (type $generated@@317))))
(let (($generated@@319 ($generated@@274 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@273 $generated@@319 $generated@@318)) (or (= $generated@@317 ($generated@@272 $generated@@319 $generated@@318)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@318) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@317) $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@314 $generated@@317))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@293 (type $generated@@321))))
(let (($generated@@323 ($generated@@292 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@291 $generated@@323 $generated@@322)) (or (= $generated@@321 ($generated@@290 $generated@@323 $generated@@322)) (exists (($generated@@324 T@U) ) (!  (and (= (type $generated@@324) $generated@@323) ($generated@@0 ($generated@@81 ($generated@@289 $generated@@321) $generated@@324)))
 :no-pattern (type $generated@@324)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
))))))
 :pattern ( ($generated@@289 $generated@@321))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@293 (type $generated@@326))))
(= (type ($generated@@325 $generated@@326)) ($generated@@76 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@293 (type $generated@@328))))
(let (($generated@@330 ($generated@@292 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@291 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@290 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@329) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@325 $generated@@328))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@332) ($generated@@76 $generated@@148 $generated@@2)) (= (type $generated@@333) $generated@@64)) (= ($generated@@135 $generated@@332 ($generated@@153 $generated@@333)) (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@148) (< 0 ($generated ($generated@@81 $generated@@332 $generated@@334)))) ($generated@@215 $generated@@334 $generated@@333))
 :pattern ( ($generated@@81 $generated@@332 $generated@@334))
))))
 :pattern ( ($generated@@135 $generated@@332 ($generated@@153 $generated@@333)))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (= (type $generated@@335) ($generated@@76 $generated@@148 $generated@@4)) (= (type $generated@@336) $generated@@64)) (= (type $generated@@337) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@335 ($generated@@224 $generated@@336) $generated@@337) (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@148) ($generated@@0 ($generated@@81 $generated@@335 $generated@@338))) ($generated@@240 $generated@@338 $generated@@336 $generated@@337))
 :pattern ( ($generated@@81 $generated@@335 $generated@@338))
))))
 :pattern ( ($generated@@74 $generated@@335 ($generated@@224 $generated@@336) $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (= (type $generated@@339) ($generated@@76 $generated@@148 $generated@@4)) (= (type $generated@@340) $generated@@64)) (= (type $generated@@341) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@339 ($generated@@229 $generated@@340) $generated@@341) (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@148) ($generated@@0 ($generated@@81 $generated@@339 $generated@@342))) ($generated@@240 $generated@@342 $generated@@340 $generated@@341))
 :pattern ( ($generated@@81 $generated@@339 $generated@@342))
))))
 :pattern ( ($generated@@74 $generated@@339 ($generated@@229 $generated@@340) $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 (type $generated@@343)))
(= ($generated ($generated@@81 ($generated@@266 $generated@@344) $generated@@343)) 0))
 :pattern ( (let (($generated@@344 (type $generated@@343)))
($generated@@81 ($generated@@266 $generated@@344) $generated@@343)))
)))
(assert  (and (and (forall (($generated@@348 T@U) ) (! (= (type ($generated@@345 $generated@@348)) ($generated@@76 $generated@@148 $generated@@4))
 :pattern ( ($generated@@345 $generated@@348))
)) (forall (($generated@@349 T@T) ($generated@@350 T@U) ) (! (= (type ($generated@@346 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@346 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@275 (type $generated@@351))))
(let (($generated@@353 ($generated@@274 (type $generated@@351))))
(= (type ($generated@@347 $generated@@351)) ($generated@@76 $generated@@353 $generated@@352))))
 :pattern ( ($generated@@347 $generated@@351))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@273 $generated@@148 $generated@@148)) (= (type $generated@@355) $generated@@148)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@354) $generated@@355))  (and ($generated@@0 ($generated@@81 ($generated@@271 $generated@@354) ($generated@@146 ($generated@@346 $generated@@139 $generated@@355)))) (= ($generated@@81 ($generated@@347 $generated@@354) ($generated@@146 ($generated@@346 $generated@@139 $generated@@355))) ($generated@@147 ($generated@@346 $generated@@139 $generated@@355))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@354) $generated@@355))
)))
(assert  (and (forall (($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@358)) ($generated@@76 $generated@@148 $generated@@4))
 :pattern ( ($generated@@356 $generated@@358))
)) (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@293 (type $generated@@359))))
(let (($generated@@361 ($generated@@292 (type $generated@@359))))
(= (type ($generated@@357 $generated@@359)) ($generated@@76 $generated@@361 $generated@@360))))
 :pattern ( ($generated@@357 $generated@@359))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@291 $generated@@148 $generated@@148)) (= (type $generated@@363) $generated@@148)) (= ($generated@@0 ($generated@@81 ($generated@@356 $generated@@362) $generated@@363))  (and ($generated@@0 ($generated@@81 ($generated@@289 $generated@@362) ($generated@@146 ($generated@@346 $generated@@139 $generated@@363)))) (= ($generated@@81 ($generated@@357 $generated@@362) ($generated@@146 ($generated@@346 $generated@@139 $generated@@363))) ($generated@@147 ($generated@@346 $generated@@139 $generated@@363))))))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(let (($generated@@367 ($generated@@274 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@273 $generated@@367 $generated@@366)) (= ($generated@@0 ($generated@@81 ($generated@@314 $generated@@364) $generated@@365)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) (and ($generated@@0 ($generated@@81 ($generated@@271 $generated@@364) $generated@@368)) (= $generated@@365 ($generated@@81 ($generated@@347 $generated@@364) $generated@@368))))
 :pattern ( ($generated@@81 ($generated@@271 $generated@@364) $generated@@368))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@364) $generated@@368))
))))))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(let (($generated@@372 ($generated@@292 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@291 $generated@@372 $generated@@371)) (= ($generated@@0 ($generated@@81 ($generated@@325 $generated@@369) $generated@@370)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) (and ($generated@@0 ($generated@@81 ($generated@@289 $generated@@369) $generated@@373)) (= $generated@@370 ($generated@@81 ($generated@@357 $generated@@369) $generated@@373))))
 :pattern ( ($generated@@81 ($generated@@289 $generated@@369) $generated@@373))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@369) $generated@@373))
))))))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@375 $generated@@376)) $generated@@64)
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (and (= (type $generated@@377) ($generated@@273 $generated@@148 $generated@@148)) (= (type $generated@@378) $generated@@64)) (= (type $generated@@379) $generated@@64)) (= (type $generated@@380) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@148) ($generated@@0 ($generated@@81 ($generated@@271 $generated@@377) $generated@@381))) (and ($generated@@240 ($generated@@81 ($generated@@347 $generated@@377) $generated@@381) $generated@@379 $generated@@380) ($generated@@240 $generated@@381 $generated@@378 $generated@@380)))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@377) $generated@@381))
 :pattern ( ($generated@@81 ($generated@@271 $generated@@377) $generated@@381))
))))
 :pattern ( ($generated@@74 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@383 $generated@@384)) $generated@@64)
 :pattern ( ($generated@@382 $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (and (= (type $generated@@385) ($generated@@291 $generated@@148 $generated@@148)) (= (type $generated@@386) $generated@@64)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@385 ($generated@@382 $generated@@386 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@148) ($generated@@0 ($generated@@81 ($generated@@289 $generated@@385) $generated@@389))) (and ($generated@@240 ($generated@@81 ($generated@@357 $generated@@385) $generated@@389) $generated@@387 $generated@@388) ($generated@@240 $generated@@389 $generated@@386 $generated@@388)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@385) $generated@@389))
 :pattern ( ($generated@@81 ($generated@@289 $generated@@385) $generated@@389))
))))
 :pattern ( ($generated@@74 $generated@@385 ($generated@@382 $generated@@386 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@391 T@T) ) (! (= (type ($generated@@390 $generated@@391)) ($generated@@76 $generated@@391 $generated@@4))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@293 (type $generated@@392))))
(let (($generated@@394 ($generated@@292 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@291 $generated@@394 $generated@@393)) (= (= $generated@@392 ($generated@@290 $generated@@394 $generated@@393)) (= ($generated@@289 $generated@@392) ($generated@@390 $generated@@394))))))
 :pattern ( ($generated@@289 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@293 (type $generated@@395))))
(let (($generated@@397 ($generated@@292 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@291 $generated@@397 $generated@@396)) (= (= $generated@@395 ($generated@@290 $generated@@397 $generated@@396)) (= ($generated@@325 $generated@@395) ($generated@@390 $generated@@396))))))
 :pattern ( ($generated@@325 $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@293 (type $generated@@398))))
(let (($generated@@400 ($generated@@292 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@291 $generated@@400 $generated@@399)) (= (= $generated@@398 ($generated@@290 $generated@@400 $generated@@399)) (= ($generated@@356 $generated@@398) ($generated@@390 $generated@@148))))))
 :pattern ( ($generated@@356 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@275 (type $generated@@401))))
(let (($generated@@403 ($generated@@274 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@273 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@272 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (and (and (= (type $generated@@404) $generated@@148) (= (type $generated@@405) $generated@@148)) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@401) ($generated@@260 ($generated@@214 $generated@@404 $generated@@405)))))
 :no-pattern (type $generated@@404)
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@345 $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@293 (type $generated@@406))))
(let (($generated@@408 ($generated@@292 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@291 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@290 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (and (and (= (type $generated@@409) $generated@@148) (= (type $generated@@410) $generated@@148)) ($generated@@0 ($generated@@81 ($generated@@356 $generated@@406) ($generated@@260 ($generated@@214 $generated@@409 $generated@@410)))))
 :no-pattern (type $generated@@409)
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@356 $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@148) ($generated@@215 $generated@@411 $generated@@46)) (and (= ($generated@@260 ($generated@@346 $generated@@2 $generated@@411)) $generated@@411) ($generated@@135 ($generated@@346 $generated@@2 $generated@@411) $generated@@46)))
 :pattern ( ($generated@@215 $generated@@411 $generated@@46))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@148) ($generated@@215 $generated@@412 $generated@@47)) (and (= ($generated@@260 ($generated@@346 $generated@@3 $generated@@412)) $generated@@412) ($generated@@135 ($generated@@346 $generated@@3 $generated@@412) $generated@@47)))
 :pattern ( ($generated@@215 $generated@@412 $generated@@47))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@148) ($generated@@215 $generated@@413 $generated@@44)) (and (= ($generated@@260 ($generated@@346 $generated@@4 $generated@@413)) $generated@@413) ($generated@@135 ($generated@@346 $generated@@4 $generated@@413) $generated@@44)))
 :pattern ( ($generated@@215 $generated@@413 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@414) 20))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@148) ($generated@@215 $generated@@415 $generated@@45)) (and (= ($generated@@260 ($generated@@346 $generated@@414 $generated@@415)) $generated@@415) ($generated@@135 ($generated@@346 $generated@@414 $generated@@415) $generated@@45)))
 :pattern ( ($generated@@215 $generated@@415 $generated@@45))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@64) (= ($generated@@215 ($generated@@260 $generated@@416) $generated@@417) ($generated@@135 $generated@@416 $generated@@417)))
 :pattern ( ($generated@@215 ($generated@@260 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@79 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@76 $generated@@419 $generated@@2)) (<= 0 ($generated@@265 $generated@@418))))
 :pattern ( ($generated@@265 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@255 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@254 $generated@@421)) (<= 0 ($generated@@253 $generated@@420))))
 :pattern ( ($generated@@253 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@64)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@64) (= (type $generated@@425) $generated@@64)) (= ($generated@@422 ($generated@@374 $generated@@424 $generated@@425)) $generated@@424))
 :pattern ( ($generated@@374 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (= (type ($generated@@426 $generated@@427)) $generated@@64)
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@64) (= (type $generated@@429) $generated@@64)) (= ($generated@@426 ($generated@@374 $generated@@428 $generated@@429)) $generated@@429))
 :pattern ( ($generated@@374 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@64) (= (type $generated@@431) $generated@@64)) (= ($generated@@72 ($generated@@374 $generated@@430 $generated@@431)) $generated@@58))
 :pattern ( ($generated@@374 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@64) (= (type $generated@@435) $generated@@64)) (= ($generated@@432 ($generated@@382 $generated@@434 $generated@@435)) $generated@@434))
 :pattern ( ($generated@@382 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@64)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@436 ($generated@@382 $generated@@438 $generated@@439)) $generated@@439))
 :pattern ( ($generated@@382 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@64) (= (type $generated@@441) $generated@@64)) (= ($generated@@72 ($generated@@382 $generated@@440 $generated@@441)) $generated@@59))
 :pattern ( ($generated@@382 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@148) (= (type $generated@@443) $generated@@148)) (= ($generated@@246 ($generated@@214 $generated@@442 $generated@@443)) $generated@@61))
 :pattern ( ($generated@@214 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@138 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@138 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@138 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@138 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@148) (= (type $generated@@453) $generated@@148)) (= ($generated@@146 ($generated@@214 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@214 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@148) (= (type $generated@@455) $generated@@148)) (= ($generated@@147 ($generated@@214 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@214 $generated@@454 $generated@@455))
)))
(assert  (and (forall (($generated@@458 T@U) ) (! (= (type ($generated@@456 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@458))
)) (forall (($generated@@459 T@U) ($generated@@460 Int) ) (! (let (($generated@@461 ($generated@@255 (type $generated@@459))))
(= (type ($generated@@457 $generated@@459 $generated@@460)) $generated@@461))
 :pattern ( ($generated@@457 $generated@@459 $generated@@460))
))))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (= (type $generated@@462) ($generated@@254 $generated@@148)) (= (type $generated@@463) $generated@@64)) (= (type $generated@@464) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@462 ($generated@@456 $generated@@463) $generated@@464) (forall (($generated@@465 Int) ) (!  (=> (and (<= 0 $generated@@465) (< $generated@@465 ($generated@@253 $generated@@462))) ($generated@@240 ($generated@@457 $generated@@462 $generated@@465) $generated@@463 $generated@@464))
 :pattern ( ($generated@@457 $generated@@462 $generated@@465))
))))
 :pattern ( ($generated@@74 $generated@@462 ($generated@@456 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@467 Int) ) (! (= ($generated@@466 ($generated@@75 $generated@@467)) $generated@@467)
 :pattern ( ($generated@@75 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@64) (= ($generated@@468 ($generated@@224 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@224 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@64) (= ($generated@@72 ($generated@@224 $generated@@471)) $generated@@54))
 :pattern ( ($generated@@224 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@64) (= ($generated@@472 ($generated@@229 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@229 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@64) (= ($generated@@72 ($generated@@229 $generated@@475)) $generated@@55))
 :pattern ( ($generated@@229 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@64) (= ($generated@@476 ($generated@@153 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@153 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@72 ($generated@@153 $generated@@479)) $generated@@56))
 :pattern ( ($generated@@153 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@64) (= ($generated@@480 ($generated@@456 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@456 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@72 ($generated@@456 $generated@@483)) $generated@@57))
 :pattern ( ($generated@@456 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 (type $generated@@484)))
(= ($generated@@346 $generated@@485 ($generated@@260 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@260 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@273 $generated@@148 $generated@@148)) (= (type $generated@@487) $generated@@64)) (= (type $generated@@488) $generated@@64)) (= ($generated@@135 $generated@@486 ($generated@@374 $generated@@487 $generated@@488)) (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@148) ($generated@@0 ($generated@@81 ($generated@@271 $generated@@486) $generated@@489))) (and ($generated@@215 ($generated@@81 ($generated@@347 $generated@@486) $generated@@489) $generated@@488) ($generated@@215 $generated@@489 $generated@@487)))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@486) $generated@@489))
 :pattern ( ($generated@@81 ($generated@@271 $generated@@486) $generated@@489))
))))
 :pattern ( ($generated@@135 $generated@@486 ($generated@@374 $generated@@487 $generated@@488)))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@291 $generated@@148 $generated@@148)) (= (type $generated@@491) $generated@@64)) (= (type $generated@@492) $generated@@64)) (= ($generated@@135 $generated@@490 ($generated@@382 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@148) ($generated@@0 ($generated@@81 ($generated@@289 $generated@@490) $generated@@493))) (and ($generated@@215 ($generated@@81 ($generated@@357 $generated@@490) $generated@@493) $generated@@492) ($generated@@215 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@490) $generated@@493))
 :pattern ( ($generated@@81 ($generated@@289 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@135 $generated@@490 ($generated@@382 $generated@@491 $generated@@492)))
)))
(assert (= $generated@@132 ($generated@@234 52)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@148) (= (type $generated@@497) $generated@@148)) (< ($generated@@494 $generated@@496) ($generated@@495 ($generated@@214 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@214 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@148) (= (type $generated@@499) $generated@@148)) (< ($generated@@494 $generated@@499) ($generated@@495 ($generated@@214 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@214 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (and (= (type $generated@@500) $generated@@148) (= (type $generated@@501) $generated@@64)) (= (type $generated@@502) $generated@@64)) ($generated@@215 $generated@@500 ($generated@@374 $generated@@501 $generated@@502))) (and (= ($generated@@260 ($generated@@346 ($generated@@273 $generated@@148 $generated@@148) $generated@@500)) $generated@@500) ($generated@@135 ($generated@@346 ($generated@@273 $generated@@148 $generated@@148) $generated@@500) ($generated@@374 $generated@@501 $generated@@502))))
 :pattern ( ($generated@@215 $generated@@500 ($generated@@374 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (and (= (type $generated@@503) $generated@@148) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) $generated@@64)) ($generated@@215 $generated@@503 ($generated@@382 $generated@@504 $generated@@505))) (and (= ($generated@@260 ($generated@@346 ($generated@@291 $generated@@148 $generated@@148) $generated@@503)) $generated@@503) ($generated@@135 ($generated@@346 ($generated@@291 $generated@@148 $generated@@148) $generated@@503) ($generated@@382 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@215 $generated@@503 ($generated@@382 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) $generated@@64) (= (type $generated@@507) $generated@@64)) (= (type $generated@@508) $generated@@148)) ($generated@@215 $generated@@508 ($generated@@138 $generated@@506 $generated@@507))) (and (= ($generated@@260 ($generated@@346 $generated@@139 $generated@@508)) $generated@@508) ($generated@@135 ($generated@@346 $generated@@139 $generated@@508) ($generated@@138 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@215 $generated@@508 ($generated@@138 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
 (not ($generated@@0 ($generated@@81 ($generated@@390 $generated@@510) $generated@@509))))
 :pattern ( (let (($generated@@510 (type $generated@@509)))
($generated@@81 ($generated@@390 $generated@@510) $generated@@509)))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@69)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@64) (= (type $generated@@514) $generated@@64)) (and (= ($generated@@72 ($generated@@138 $generated@@513 $generated@@514)) $generated@@62) (= ($generated@@511 ($generated@@138 $generated@@513 $generated@@514)) $generated@@63)))
 :pattern ( ($generated@@138 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@139) (= ($generated@@494 ($generated@@260 $generated@@515)) ($generated@@495 $generated@@515)))
 :pattern ( ($generated@@494 ($generated@@260 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@148) ($generated@@215 $generated@@516 ($generated@@75 0))) (and (= ($generated@@260 ($generated@@346 $generated@@2 $generated@@516)) $generated@@516) ($generated@@135 ($generated@@346 ($generated@@76 $generated@@148 $generated@@4) $generated@@516) ($generated@@75 0))))
 :pattern ( ($generated@@215 $generated@@516 ($generated@@75 0)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@517) $generated@@148) (= (type $generated@@518) $generated@@64)) ($generated@@215 $generated@@517 ($generated@@224 $generated@@518))) (and (= ($generated@@260 ($generated@@346 ($generated@@76 $generated@@148 $generated@@4) $generated@@517)) $generated@@517) ($generated@@135 ($generated@@346 ($generated@@76 $generated@@148 $generated@@4) $generated@@517) ($generated@@224 $generated@@518))))
 :pattern ( ($generated@@215 $generated@@517 ($generated@@224 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) $generated@@148) (= (type $generated@@520) $generated@@64)) ($generated@@215 $generated@@519 ($generated@@229 $generated@@520))) (and (= ($generated@@260 ($generated@@346 ($generated@@76 $generated@@148 $generated@@4) $generated@@519)) $generated@@519) ($generated@@135 ($generated@@346 ($generated@@76 $generated@@148 $generated@@4) $generated@@519) ($generated@@229 $generated@@520))))
 :pattern ( ($generated@@215 $generated@@519 ($generated@@229 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@521) $generated@@148) (= (type $generated@@522) $generated@@64)) ($generated@@215 $generated@@521 ($generated@@153 $generated@@522))) (and (= ($generated@@260 ($generated@@346 ($generated@@76 $generated@@148 $generated@@2) $generated@@521)) $generated@@521) ($generated@@135 ($generated@@346 ($generated@@76 $generated@@148 $generated@@2) $generated@@521) ($generated@@153 $generated@@522))))
 :pattern ( ($generated@@215 $generated@@521 ($generated@@153 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@523) $generated@@148) (= (type $generated@@524) $generated@@64)) ($generated@@215 $generated@@523 ($generated@@456 $generated@@524))) (and (= ($generated@@260 ($generated@@346 ($generated@@254 $generated@@148) $generated@@523)) $generated@@523) ($generated@@135 ($generated@@346 ($generated@@254 $generated@@148) $generated@@523) ($generated@@456 $generated@@524))))
 :pattern ( ($generated@@215 $generated@@523 ($generated@@456 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@76 $generated@@148 $generated@@2)) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@525 ($generated@@153 $generated@@526) $generated@@527) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@148) (< 0 ($generated ($generated@@81 $generated@@525 $generated@@528)))) ($generated@@240 $generated@@528 $generated@@526 $generated@@527))
 :pattern ( ($generated@@81 $generated@@525 $generated@@528))
))))
 :pattern ( ($generated@@74 $generated@@525 ($generated@@153 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@139) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@133 $generated@@531) (and ($generated@@137 $generated@@529) (exists (($generated@@532 T@U) ) (!  (and (= (type $generated@@532) $generated@@64) ($generated@@74 $generated@@529 ($generated@@138 $generated@@530 $generated@@532) $generated@@531))
 :pattern ( ($generated@@74 $generated@@529 ($generated@@138 $generated@@530 $generated@@532) $generated@@531))
))))) ($generated@@240 ($generated@@146 $generated@@529) $generated@@530 $generated@@531))
 :pattern ( ($generated@@240 ($generated@@146 $generated@@529) $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@139) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@133 $generated@@535) (and ($generated@@137 $generated@@533) (exists (($generated@@536 T@U) ) (!  (and (= (type $generated@@536) $generated@@64) ($generated@@74 $generated@@533 ($generated@@138 $generated@@536 $generated@@534) $generated@@535))
 :pattern ( ($generated@@74 $generated@@533 ($generated@@138 $generated@@536 $generated@@534) $generated@@535))
))))) ($generated@@240 ($generated@@147 $generated@@533) $generated@@534 $generated@@535))
 :pattern ( ($generated@@240 ($generated@@147 $generated@@533) $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@148) (= (type $generated@@538) $generated@@148)) (= ($generated@@214 ($generated@@236 $generated@@537) ($generated@@236 $generated@@538)) ($generated@@236 ($generated@@214 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@214 ($generated@@236 $generated@@537) ($generated@@236 $generated@@538)))
)))
(assert (forall (($generated@@539 Int) ) (! (= ($generated@@260 ($generated@@8 ($generated@@234 $generated@@539))) ($generated@@236 ($generated@@260 ($generated@@8 $generated@@539))))
 :pattern ( ($generated@@260 ($generated@@8 ($generated@@234 $generated@@539))))
)))
(assert (forall (($generated@@540 T@U) ) (! (= ($generated@@260 ($generated@@236 $generated@@540)) ($generated@@236 ($generated@@260 $generated@@540)))
 :pattern ( ($generated@@260 ($generated@@236 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@255 (type $generated@@541))))
 (=> (and (= (type $generated@@541) ($generated@@254 $generated@@542)) (= ($generated@@253 $generated@@541) 0)) (= $generated@@541 ($generated@@252 $generated@@542))))
 :pattern ( ($generated@@253 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@544)))
 (=> (and (and (= (type $generated@@543) ($generated@@76 $generated@@546 $generated@@2)) (= (type $generated@@545) $generated@@2)) (<= 0 ($generated $generated@@545))) (= ($generated@@265 ($generated@@82 $generated@@543 $generated@@544 $generated@@545)) (+ (- ($generated@@265 $generated@@543) ($generated ($generated@@81 $generated@@543 $generated@@544))) ($generated $generated@@545)))))
 :pattern ( ($generated@@265 ($generated@@82 $generated@@543 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@548) $generated@@2)) ($generated@@74 $generated@@548 $generated@@46 $generated@@547))
 :pattern ( ($generated@@74 $generated@@548 $generated@@46 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@550) $generated@@3)) ($generated@@74 $generated@@550 $generated@@47 $generated@@549))
 :pattern ( ($generated@@74 $generated@@550 $generated@@47 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@552) $generated@@4)) ($generated@@74 $generated@@552 $generated@@44 $generated@@551))
 :pattern ( ($generated@@74 $generated@@552 $generated@@44 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@554) $generated@@414)) ($generated@@74 $generated@@554 $generated@@45 $generated@@553))
 :pattern ( ($generated@@74 $generated@@554 $generated@@45 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@556) $generated@@148)) ($generated@@74 $generated@@556 $generated@@48 $generated@@555))
 :pattern ( ($generated@@74 $generated@@556 $generated@@48 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) ($generated@@254 $generated@@148)) (= (type $generated@@558) $generated@@64)) (= ($generated@@135 $generated@@557 ($generated@@456 $generated@@558)) (forall (($generated@@559 Int) ) (!  (=> (and (<= 0 $generated@@559) (< $generated@@559 ($generated@@253 $generated@@557))) ($generated@@215 ($generated@@457 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@457 $generated@@557 $generated@@559))
))))
 :pattern ( ($generated@@135 $generated@@557 ($generated@@456 $generated@@558)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 Int) ) (!  (=> (= (type $generated@@561) ($generated@@254 $generated@@148)) (=> (and (<= 0 $generated@@562) (< $generated@@562 ($generated@@253 $generated@@561))) (< ($generated@@495 ($generated@@346 $generated@@139 ($generated@@457 $generated@@561 $generated@@562))) ($generated@@560 $generated@@561))))
 :pattern ( ($generated@@495 ($generated@@346 $generated@@139 ($generated@@457 $generated@@561 $generated@@562))))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) ($generated@@273 $generated@@148 $generated@@148)) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) $generated@@64)) ($generated@@135 $generated@@563 ($generated@@374 $generated@@564 $generated@@565))) (and (and ($generated@@135 ($generated@@271 $generated@@563) ($generated@@224 $generated@@564)) ($generated@@135 ($generated@@314 $generated@@563) ($generated@@224 $generated@@565))) ($generated@@135 ($generated@@345 $generated@@563) ($generated@@224 ($generated@@138 $generated@@564 $generated@@565)))))
 :pattern ( ($generated@@135 $generated@@563 ($generated@@374 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) ($generated@@291 $generated@@148 $generated@@148)) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) $generated@@64)) ($generated@@135 $generated@@566 ($generated@@382 $generated@@567 $generated@@568))) (and (and ($generated@@135 ($generated@@289 $generated@@566) ($generated@@229 $generated@@567)) ($generated@@135 ($generated@@325 $generated@@566) ($generated@@229 $generated@@568))) ($generated@@135 ($generated@@356 $generated@@566) ($generated@@229 ($generated@@138 $generated@@567 $generated@@568)))))
 :pattern ( ($generated@@135 $generated@@566 ($generated@@382 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@2) ($generated@@135 $generated@@569 $generated@@46))
 :pattern ( ($generated@@135 $generated@@569 $generated@@46))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@3) ($generated@@135 $generated@@570 $generated@@47))
 :pattern ( ($generated@@135 $generated@@570 $generated@@47))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@4) ($generated@@135 $generated@@571 $generated@@44))
 :pattern ( ($generated@@135 $generated@@571 $generated@@44))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@414) ($generated@@135 $generated@@572 $generated@@45))
 :pattern ( ($generated@@135 $generated@@572 $generated@@45))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@148) ($generated@@135 $generated@@573 $generated@@48))
 :pattern ( ($generated@@135 $generated@@573 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@574 () T@U)
(declare-fun $generated@@575 () T@U)
(declare-fun $generated@@576 () T@U)
(declare-fun $generated@@577 (T@U) Bool)
(declare-fun $generated@@578 () Int)
(assert  (and (and (= (type $generated@@574) ($generated@@160 $generated@@77 $generated@@4)) (= (type $generated@@575) $generated@@77)) (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@579  (=> (and (= $generated@@574 ($generated@@159 $generated@@575 $generated@@576 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@132 ($generated@@234 52)))))
(let (($generated@@580  (=> (and (and ($generated@@133 $generated@@576) ($generated@@577 $generated@@576)) (and (= 0 $generated@@578) (= (ControlFlow 0 3) 2))) $generated@@579)))
$generated@@580)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U T@U) T@U)
(declare-fun $generated@@159 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@160 (T@T T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@214 (T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) Bool)
(declare-fun $generated@@224 (T@U) T@U)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@234 (Int) Int)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@240 (T@U T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@252 (T@T) T@U)
(declare-fun $generated@@253 (T@U) Int)
(declare-fun $generated@@254 (T@T) T@T)
(declare-fun $generated@@255 (T@T) T@T)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Int)
(declare-fun $generated@@266 (T@T) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@272 (T@T T@T) T@U)
(declare-fun $generated@@273 (T@T T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@374 (T@U T@U) T@U)
(declare-fun $generated@@382 (T@U T@U) T@U)
(declare-fun $generated@@390 (T@T) T@U)
(declare-fun $generated@@414 () T@T)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@457 (T@U Int) T@U)
(declare-fun $generated@@466 (T@U) Int)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@494 (T@U) Int)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@560 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78)) ($generated@@133 $generated@@134)) ($generated@@74 ($generated@@8 $generated@@132) $generated@@46 $generated@@134))
 :pattern ( ($generated@@74 ($generated@@8 $generated@@132) $generated@@46 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@2) ($generated@@135 $generated@@136 ($generated@@75 0)))
 :pattern ( ($generated@@135 $generated@@136 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@139) 14) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@140 $generated@@141)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@140 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (and (= (type $generated@@142) $generated@@64) (= (type $generated@@143) $generated@@64)) (= (type $generated@@144) $generated@@139)) ($generated@@135 $generated@@144 ($generated@@138 $generated@@142 $generated@@143))) ($generated@@137 $generated@@144))
 :pattern ( ($generated@@137 $generated@@144) ($generated@@135 $generated@@144 ($generated@@138 $generated@@142 $generated@@143)))
)))
(assert  (and (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@148)
 :pattern ( ($generated@@146 $generated@@149))
))) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@148)
 :pattern ( ($generated@@147 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) $generated@@139) (= (type $generated@@152) $generated@@139)) true) (= ($generated@@145 $generated@@151 $generated@@152)  (and (= ($generated@@146 $generated@@151) ($generated@@146 $generated@@152)) (= ($generated@@147 $generated@@151) ($generated@@147 $generated@@152)))))
 :pattern ( ($generated@@145 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@64)
 :pattern ( ($generated@@153 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@76 $generated@@148 $generated@@2)) (= (type $generated@@157) $generated@@64)) ($generated@@135 $generated@@156 ($generated@@153 $generated@@157))) ($generated@@154 $generated@@156))
 :pattern ( ($generated@@135 $generated@@156 ($generated@@153 $generated@@157)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@164 T@T) ($generated@@165 T@T) ) (= ($generated@@1 ($generated@@160 $generated@@164 $generated@@165)) 16)) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (! (= ($generated@@161 ($generated@@160 $generated@@166 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@162 ($generated@@160 $generated@@168 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@160 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (let (($generated@@173 ($generated@@162 (type $generated@@170))))
(= (type ($generated@@158 $generated@@170 $generated@@171 $generated@@172)) $generated@@173))
 :pattern ( ($generated@@158 $generated@@170 $generated@@171 $generated@@172))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(let (($generated@@179 (type $generated@@175)))
(= (type ($generated@@163 $generated@@174 $generated@@175 $generated@@176 $generated@@177)) ($generated@@160 $generated@@179 $generated@@178))))
 :pattern ( ($generated@@163 $generated@@174 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@162 (type $generated@@180))))
 (=> (= (type $generated@@183) $generated@@184) (= ($generated@@158 ($generated@@163 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@181 $generated@@182) $generated@@183)))
 :weight 0
))) (and (and (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (or (= $generated@@187 $generated@@189) (= ($generated@@158 ($generated@@163 $generated@@186 $generated@@187 $generated@@188 $generated@@185) $generated@@189 $generated@@190) ($generated@@158 $generated@@186 $generated@@189 $generated@@190)))
 :weight 0
)) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@158 ($generated@@163 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@158 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or true (= ($generated@@158 ($generated@@163 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@158 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 Bool) ) (! (= (type ($generated@@159 $generated@@203 $generated@@204 $generated@@205 $generated@@206)) ($generated@@160 $generated@@77 $generated@@4))
 :pattern ( ($generated@@159 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@67 (type $generated@@212))))
 (=> (and (and (and (and (= (type $generated@@207) $generated@@77) (= (type $generated@@208) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@209) ($generated@@66 $generated@@4))) (= (type $generated@@211) $generated@@77)) (= (type $generated@@212) ($generated@@66 $generated@@213))) (= ($generated@@0 ($generated@@158 ($generated@@159 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))  (=> (and (not (= $generated@@211 $generated@@207)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@208 $generated@@211) $generated@@209))) $generated@@210))))
 :pattern ( ($generated@@158 ($generated@@159 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (! (= (type ($generated@@214 $generated@@216 $generated@@217)) $generated@@139)
 :pattern ( ($generated@@214 $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and (and (and (= (type $generated@@218) $generated@@64) (= (type $generated@@219) $generated@@64)) (= (type $generated@@220) $generated@@148)) (= (type $generated@@221) $generated@@148)) (= ($generated@@135 ($generated@@214 $generated@@220 $generated@@221) ($generated@@138 $generated@@218 $generated@@219))  (and ($generated@@215 $generated@@220 $generated@@218) ($generated@@215 $generated@@221 $generated@@219))))
 :pattern ( ($generated@@135 ($generated@@214 $generated@@220 $generated@@221) ($generated@@138 $generated@@218 $generated@@219)))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@139) (= (type $generated@@223) $generated@@139)) (= ($generated@@145 $generated@@222 $generated@@223) (= $generated@@222 $generated@@223)))
 :pattern ( ($generated@@145 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@225 T@U) ) (! (= (type ($generated@@224 $generated@@225)) $generated@@64)
 :pattern ( ($generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) ($generated@@76 $generated@@148 $generated@@4)) (= (type $generated@@227) $generated@@64)) (= ($generated@@135 $generated@@226 ($generated@@224 $generated@@227)) (forall (($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@148) ($generated@@0 ($generated@@81 $generated@@226 $generated@@228))) ($generated@@215 $generated@@228 $generated@@227))
 :pattern ( ($generated@@81 $generated@@226 $generated@@228))
))))
 :pattern ( ($generated@@135 $generated@@226 ($generated@@224 $generated@@227)))
)))
(assert (forall (($generated@@230 T@U) ) (! (= (type ($generated@@229 $generated@@230)) $generated@@64)
 :pattern ( ($generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) ($generated@@76 $generated@@148 $generated@@4)) (= (type $generated@@232) $generated@@64)) (= ($generated@@135 $generated@@231 ($generated@@229 $generated@@232)) (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@148) ($generated@@0 ($generated@@81 $generated@@231 $generated@@233))) ($generated@@215 $generated@@233 $generated@@232))
 :pattern ( ($generated@@81 $generated@@231 $generated@@233))
))))
 :pattern ( ($generated@@135 $generated@@231 ($generated@@229 $generated@@232)))
)))
(assert (forall (($generated@@235 Int) ) (! (= ($generated@@234 $generated@@235) $generated@@235)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ) (! (let (($generated@@238 (type $generated@@237)))
(= (type ($generated@@236 $generated@@237)) $generated@@238))
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= ($generated@@236 $generated@@239) $generated@@239)
 :pattern ( ($generated@@236 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@241) $generated@@64) (= (type $generated@@242) $generated@@64)) (= (type $generated@@243) $generated@@148)) (= (type $generated@@244) $generated@@148)) (= (type $generated@@245) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@133 $generated@@245)) (= ($generated@@74 ($generated@@214 $generated@@243 $generated@@244) ($generated@@138 $generated@@241 $generated@@242) $generated@@245)  (and ($generated@@240 $generated@@243 $generated@@241 $generated@@245) ($generated@@240 $generated@@244 $generated@@242 $generated@@245))))
 :pattern ( ($generated@@74 ($generated@@214 $generated@@243 $generated@@244) ($generated@@138 $generated@@241 $generated@@242) $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@68)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ) (!  (=> (= (type $generated@@248) $generated@@139) (= ($generated@@137 $generated@@248) (= ($generated@@246 $generated@@248) $generated@@61)))
 :pattern ( ($generated@@137 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@139) ($generated@@137 $generated@@249)) (exists (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (and (and (= (type $generated@@250) $generated@@148) (= (type $generated@@251) $generated@@148)) (= $generated@@249 ($generated@@214 $generated@@250 $generated@@251)))
 :no-pattern (type $generated@@250)
 :no-pattern (type $generated@@251)
 :no-pattern ($generated $generated@@250)
 :no-pattern ($generated@@0 $generated@@250)
 :no-pattern ($generated $generated@@251)
 :no-pattern ($generated@@0 $generated@@251)
)))
 :pattern ( ($generated@@137 $generated@@249))
)))
(assert  (and (and (forall (($generated@@256 T@T) ) (= ($generated@@1 ($generated@@254 $generated@@256)) 17)) (forall (($generated@@257 T@T) ) (! (= ($generated@@255 ($generated@@254 $generated@@257)) $generated@@257)
 :pattern ( ($generated@@254 $generated@@257))
))) (forall (($generated@@258 T@T) ) (! (= (type ($generated@@252 $generated@@258)) ($generated@@254 $generated@@258))
 :pattern ( ($generated@@252 $generated@@258))
))))
(assert (forall (($generated@@259 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@259)) 0)
 :pattern ( ($generated@@252 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@148)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@64) (= (type $generated@@264) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@240 ($generated@@260 $generated@@262) $generated@@263 $generated@@264) ($generated@@74 $generated@@262 $generated@@263 $generated@@264)))
 :pattern ( ($generated@@240 ($generated@@260 $generated@@262) $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@267 T@T) ) (! (= (type ($generated@@266 $generated@@267)) ($generated@@76 $generated@@267 $generated@@2))
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@79 (type $generated@@268))))
 (=> (= (type $generated@@268) ($generated@@76 $generated@@269 $generated@@2)) (and (= (= ($generated@@265 $generated@@268) 0) (= $generated@@268 ($generated@@266 $generated@@269))) (=> (not (= ($generated@@265 $generated@@268) 0)) (exists (($generated@@270 T@U) ) (!  (and (= (type $generated@@270) $generated@@269) (< 0 ($generated ($generated@@81 $generated@@268 $generated@@270))))
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
))))))
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert  (and (and (and (and (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (= ($generated@@1 ($generated@@273 $generated@@276 $generated@@277)) 18)) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@278 $generated@@279)) $generated@@278)
 :pattern ( ($generated@@273 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (! (= ($generated@@275 ($generated@@273 $generated@@280 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@273 $generated@@280 $generated@@281))
))) (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@274 (type $generated@@282))))
(= (type ($generated@@271 $generated@@282)) ($generated@@76 $generated@@283 $generated@@4)))
 :pattern ( ($generated@@271 $generated@@282))
))) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= (type ($generated@@272 $generated@@284 $generated@@285)) ($generated@@273 $generated@@284 $generated@@285))
 :pattern ( ($generated@@272 $generated@@284 $generated@@285))
))))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@T) ) (! (let (($generated@@288 (type $generated@@286)))
 (not ($generated@@0 ($generated@@81 ($generated@@271 ($generated@@272 $generated@@288 $generated@@287)) $generated@@286))))
 :pattern ( (let (($generated@@288 (type $generated@@286)))
($generated@@81 ($generated@@271 ($generated@@272 $generated@@288 $generated@@287)) $generated@@286)))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 19)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@76 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@81 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@81 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert ($generated@@135 ($generated@@8 $generated@@132) $generated@@46))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@79 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@76 $generated@@308 $generated@@2)) (= ($generated@@154 $generated@@307) (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@308) (and (<= 0 ($generated ($generated@@81 $generated@@307 $generated@@309))) (<= ($generated ($generated@@81 $generated@@307 $generated@@309)) ($generated@@265 $generated@@307))))
 :pattern ( ($generated@@81 $generated@@307 $generated@@309))
)))))
 :pattern ( ($generated@@154 $generated@@307))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@275 (type $generated@@310))))
(let (($generated@@312 ($generated@@274 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@273 $generated@@312 $generated@@311)) (or (= $generated@@310 ($generated@@272 $generated@@312 $generated@@311)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@312) ($generated@@0 ($generated@@81 ($generated@@271 $generated@@310) $generated@@313)))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@271 $generated@@310))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@275 (type $generated@@315))))
(= (type ($generated@@314 $generated@@315)) ($generated@@76 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@275 (type $generated@@317))))
(let (($generated@@319 ($generated@@274 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@273 $generated@@319 $generated@@318)) (or (= $generated@@317 ($generated@@272 $generated@@319 $generated@@318)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@318) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@317) $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@314 $generated@@317))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@293 (type $generated@@321))))
(let (($generated@@323 ($generated@@292 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@291 $generated@@323 $generated@@322)) (or (= $generated@@321 ($generated@@290 $generated@@323 $generated@@322)) (exists (($generated@@324 T@U) ) (!  (and (= (type $generated@@324) $generated@@323) ($generated@@0 ($generated@@81 ($generated@@289 $generated@@321) $generated@@324)))
 :no-pattern (type $generated@@324)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
))))))
 :pattern ( ($generated@@289 $generated@@321))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@293 (type $generated@@326))))
(= (type ($generated@@325 $generated@@326)) ($generated@@76 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@293 (type $generated@@328))))
(let (($generated@@330 ($generated@@292 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@291 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@290 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@329) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@325 $generated@@328))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@332) ($generated@@76 $generated@@148 $generated@@2)) (= (type $generated@@333) $generated@@64)) (= ($generated@@135 $generated@@332 ($generated@@153 $generated@@333)) (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@148) (< 0 ($generated ($generated@@81 $generated@@332 $generated@@334)))) ($generated@@215 $generated@@334 $generated@@333))
 :pattern ( ($generated@@81 $generated@@332 $generated@@334))
))))
 :pattern ( ($generated@@135 $generated@@332 ($generated@@153 $generated@@333)))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (= (type $generated@@335) ($generated@@76 $generated@@148 $generated@@4)) (= (type $generated@@336) $generated@@64)) (= (type $generated@@337) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@335 ($generated@@224 $generated@@336) $generated@@337) (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@148) ($generated@@0 ($generated@@81 $generated@@335 $generated@@338))) ($generated@@240 $generated@@338 $generated@@336 $generated@@337))
 :pattern ( ($generated@@81 $generated@@335 $generated@@338))
))))
 :pattern ( ($generated@@74 $generated@@335 ($generated@@224 $generated@@336) $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (= (type $generated@@339) ($generated@@76 $generated@@148 $generated@@4)) (= (type $generated@@340) $generated@@64)) (= (type $generated@@341) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@339 ($generated@@229 $generated@@340) $generated@@341) (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@148) ($generated@@0 ($generated@@81 $generated@@339 $generated@@342))) ($generated@@240 $generated@@342 $generated@@340 $generated@@341))
 :pattern ( ($generated@@81 $generated@@339 $generated@@342))
))))
 :pattern ( ($generated@@74 $generated@@339 ($generated@@229 $generated@@340) $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 (type $generated@@343)))
(= ($generated ($generated@@81 ($generated@@266 $generated@@344) $generated@@343)) 0))
 :pattern ( (let (($generated@@344 (type $generated@@343)))
($generated@@81 ($generated@@266 $generated@@344) $generated@@343)))
)))
(assert  (and (and (forall (($generated@@348 T@U) ) (! (= (type ($generated@@345 $generated@@348)) ($generated@@76 $generated@@148 $generated@@4))
 :pattern ( ($generated@@345 $generated@@348))
)) (forall (($generated@@349 T@T) ($generated@@350 T@U) ) (! (= (type ($generated@@346 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@346 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@275 (type $generated@@351))))
(let (($generated@@353 ($generated@@274 (type $generated@@351))))
(= (type ($generated@@347 $generated@@351)) ($generated@@76 $generated@@353 $generated@@352))))
 :pattern ( ($generated@@347 $generated@@351))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@273 $generated@@148 $generated@@148)) (= (type $generated@@355) $generated@@148)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@354) $generated@@355))  (and ($generated@@0 ($generated@@81 ($generated@@271 $generated@@354) ($generated@@146 ($generated@@346 $generated@@139 $generated@@355)))) (= ($generated@@81 ($generated@@347 $generated@@354) ($generated@@146 ($generated@@346 $generated@@139 $generated@@355))) ($generated@@147 ($generated@@346 $generated@@139 $generated@@355))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@354) $generated@@355))
)))
(assert  (and (forall (($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@358)) ($generated@@76 $generated@@148 $generated@@4))
 :pattern ( ($generated@@356 $generated@@358))
)) (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@293 (type $generated@@359))))
(let (($generated@@361 ($generated@@292 (type $generated@@359))))
(= (type ($generated@@357 $generated@@359)) ($generated@@76 $generated@@361 $generated@@360))))
 :pattern ( ($generated@@357 $generated@@359))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@291 $generated@@148 $generated@@148)) (= (type $generated@@363) $generated@@148)) (= ($generated@@0 ($generated@@81 ($generated@@356 $generated@@362) $generated@@363))  (and ($generated@@0 ($generated@@81 ($generated@@289 $generated@@362) ($generated@@146 ($generated@@346 $generated@@139 $generated@@363)))) (= ($generated@@81 ($generated@@357 $generated@@362) ($generated@@146 ($generated@@346 $generated@@139 $generated@@363))) ($generated@@147 ($generated@@346 $generated@@139 $generated@@363))))))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(let (($generated@@367 ($generated@@274 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@273 $generated@@367 $generated@@366)) (= ($generated@@0 ($generated@@81 ($generated@@314 $generated@@364) $generated@@365)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) (and ($generated@@0 ($generated@@81 ($generated@@271 $generated@@364) $generated@@368)) (= $generated@@365 ($generated@@81 ($generated@@347 $generated@@364) $generated@@368))))
 :pattern ( ($generated@@81 ($generated@@271 $generated@@364) $generated@@368))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@364) $generated@@368))
))))))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(let (($generated@@372 ($generated@@292 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@291 $generated@@372 $generated@@371)) (= ($generated@@0 ($generated@@81 ($generated@@325 $generated@@369) $generated@@370)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) (and ($generated@@0 ($generated@@81 ($generated@@289 $generated@@369) $generated@@373)) (= $generated@@370 ($generated@@81 ($generated@@357 $generated@@369) $generated@@373))))
 :pattern ( ($generated@@81 ($generated@@289 $generated@@369) $generated@@373))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@369) $generated@@373))
))))))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@375 $generated@@376)) $generated@@64)
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (and (= (type $generated@@377) ($generated@@273 $generated@@148 $generated@@148)) (= (type $generated@@378) $generated@@64)) (= (type $generated@@379) $generated@@64)) (= (type $generated@@380) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@148) ($generated@@0 ($generated@@81 ($generated@@271 $generated@@377) $generated@@381))) (and ($generated@@240 ($generated@@81 ($generated@@347 $generated@@377) $generated@@381) $generated@@379 $generated@@380) ($generated@@240 $generated@@381 $generated@@378 $generated@@380)))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@377) $generated@@381))
 :pattern ( ($generated@@81 ($generated@@271 $generated@@377) $generated@@381))
))))
 :pattern ( ($generated@@74 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@383 $generated@@384)) $generated@@64)
 :pattern ( ($generated@@382 $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (and (= (type $generated@@385) ($generated@@291 $generated@@148 $generated@@148)) (= (type $generated@@386) $generated@@64)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@385 ($generated@@382 $generated@@386 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@148) ($generated@@0 ($generated@@81 ($generated@@289 $generated@@385) $generated@@389))) (and ($generated@@240 ($generated@@81 ($generated@@357 $generated@@385) $generated@@389) $generated@@387 $generated@@388) ($generated@@240 $generated@@389 $generated@@386 $generated@@388)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@385) $generated@@389))
 :pattern ( ($generated@@81 ($generated@@289 $generated@@385) $generated@@389))
))))
 :pattern ( ($generated@@74 $generated@@385 ($generated@@382 $generated@@386 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@391 T@T) ) (! (= (type ($generated@@390 $generated@@391)) ($generated@@76 $generated@@391 $generated@@4))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@293 (type $generated@@392))))
(let (($generated@@394 ($generated@@292 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@291 $generated@@394 $generated@@393)) (= (= $generated@@392 ($generated@@290 $generated@@394 $generated@@393)) (= ($generated@@289 $generated@@392) ($generated@@390 $generated@@394))))))
 :pattern ( ($generated@@289 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@293 (type $generated@@395))))
(let (($generated@@397 ($generated@@292 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@291 $generated@@397 $generated@@396)) (= (= $generated@@395 ($generated@@290 $generated@@397 $generated@@396)) (= ($generated@@325 $generated@@395) ($generated@@390 $generated@@396))))))
 :pattern ( ($generated@@325 $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@293 (type $generated@@398))))
(let (($generated@@400 ($generated@@292 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@291 $generated@@400 $generated@@399)) (= (= $generated@@398 ($generated@@290 $generated@@400 $generated@@399)) (= ($generated@@356 $generated@@398) ($generated@@390 $generated@@148))))))
 :pattern ( ($generated@@356 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@275 (type $generated@@401))))
(let (($generated@@403 ($generated@@274 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@273 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@272 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (and (and (= (type $generated@@404) $generated@@148) (= (type $generated@@405) $generated@@148)) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@401) ($generated@@260 ($generated@@214 $generated@@404 $generated@@405)))))
 :no-pattern (type $generated@@404)
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@345 $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@293 (type $generated@@406))))
(let (($generated@@408 ($generated@@292 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@291 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@290 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (and (and (= (type $generated@@409) $generated@@148) (= (type $generated@@410) $generated@@148)) ($generated@@0 ($generated@@81 ($generated@@356 $generated@@406) ($generated@@260 ($generated@@214 $generated@@409 $generated@@410)))))
 :no-pattern (type $generated@@409)
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@356 $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@148) ($generated@@215 $generated@@411 $generated@@46)) (and (= ($generated@@260 ($generated@@346 $generated@@2 $generated@@411)) $generated@@411) ($generated@@135 ($generated@@346 $generated@@2 $generated@@411) $generated@@46)))
 :pattern ( ($generated@@215 $generated@@411 $generated@@46))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@148) ($generated@@215 $generated@@412 $generated@@47)) (and (= ($generated@@260 ($generated@@346 $generated@@3 $generated@@412)) $generated@@412) ($generated@@135 ($generated@@346 $generated@@3 $generated@@412) $generated@@47)))
 :pattern ( ($generated@@215 $generated@@412 $generated@@47))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@148) ($generated@@215 $generated@@413 $generated@@44)) (and (= ($generated@@260 ($generated@@346 $generated@@4 $generated@@413)) $generated@@413) ($generated@@135 ($generated@@346 $generated@@4 $generated@@413) $generated@@44)))
 :pattern ( ($generated@@215 $generated@@413 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@414) 20))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@148) ($generated@@215 $generated@@415 $generated@@45)) (and (= ($generated@@260 ($generated@@346 $generated@@414 $generated@@415)) $generated@@415) ($generated@@135 ($generated@@346 $generated@@414 $generated@@415) $generated@@45)))
 :pattern ( ($generated@@215 $generated@@415 $generated@@45))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@64) (= ($generated@@215 ($generated@@260 $generated@@416) $generated@@417) ($generated@@135 $generated@@416 $generated@@417)))
 :pattern ( ($generated@@215 ($generated@@260 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@79 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@76 $generated@@419 $generated@@2)) (<= 0 ($generated@@265 $generated@@418))))
 :pattern ( ($generated@@265 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@255 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@254 $generated@@421)) (<= 0 ($generated@@253 $generated@@420))))
 :pattern ( ($generated@@253 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@64)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@64) (= (type $generated@@425) $generated@@64)) (= ($generated@@422 ($generated@@374 $generated@@424 $generated@@425)) $generated@@424))
 :pattern ( ($generated@@374 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (= (type ($generated@@426 $generated@@427)) $generated@@64)
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@64) (= (type $generated@@429) $generated@@64)) (= ($generated@@426 ($generated@@374 $generated@@428 $generated@@429)) $generated@@429))
 :pattern ( ($generated@@374 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@64) (= (type $generated@@431) $generated@@64)) (= ($generated@@72 ($generated@@374 $generated@@430 $generated@@431)) $generated@@58))
 :pattern ( ($generated@@374 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@64) (= (type $generated@@435) $generated@@64)) (= ($generated@@432 ($generated@@382 $generated@@434 $generated@@435)) $generated@@434))
 :pattern ( ($generated@@382 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@64)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@436 ($generated@@382 $generated@@438 $generated@@439)) $generated@@439))
 :pattern ( ($generated@@382 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@64) (= (type $generated@@441) $generated@@64)) (= ($generated@@72 ($generated@@382 $generated@@440 $generated@@441)) $generated@@59))
 :pattern ( ($generated@@382 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@148) (= (type $generated@@443) $generated@@148)) (= ($generated@@246 ($generated@@214 $generated@@442 $generated@@443)) $generated@@61))
 :pattern ( ($generated@@214 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@138 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@138 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@138 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@138 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@148) (= (type $generated@@453) $generated@@148)) (= ($generated@@146 ($generated@@214 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@214 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@148) (= (type $generated@@455) $generated@@148)) (= ($generated@@147 ($generated@@214 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@214 $generated@@454 $generated@@455))
)))
(assert  (and (forall (($generated@@458 T@U) ) (! (= (type ($generated@@456 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@458))
)) (forall (($generated@@459 T@U) ($generated@@460 Int) ) (! (let (($generated@@461 ($generated@@255 (type $generated@@459))))
(= (type ($generated@@457 $generated@@459 $generated@@460)) $generated@@461))
 :pattern ( ($generated@@457 $generated@@459 $generated@@460))
))))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (= (type $generated@@462) ($generated@@254 $generated@@148)) (= (type $generated@@463) $generated@@64)) (= (type $generated@@464) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@462 ($generated@@456 $generated@@463) $generated@@464) (forall (($generated@@465 Int) ) (!  (=> (and (<= 0 $generated@@465) (< $generated@@465 ($generated@@253 $generated@@462))) ($generated@@240 ($generated@@457 $generated@@462 $generated@@465) $generated@@463 $generated@@464))
 :pattern ( ($generated@@457 $generated@@462 $generated@@465))
))))
 :pattern ( ($generated@@74 $generated@@462 ($generated@@456 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@467 Int) ) (! (= ($generated@@466 ($generated@@75 $generated@@467)) $generated@@467)
 :pattern ( ($generated@@75 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@64) (= ($generated@@468 ($generated@@224 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@224 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@64) (= ($generated@@72 ($generated@@224 $generated@@471)) $generated@@54))
 :pattern ( ($generated@@224 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@64) (= ($generated@@472 ($generated@@229 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@229 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@64) (= ($generated@@72 ($generated@@229 $generated@@475)) $generated@@55))
 :pattern ( ($generated@@229 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@64) (= ($generated@@476 ($generated@@153 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@153 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@72 ($generated@@153 $generated@@479)) $generated@@56))
 :pattern ( ($generated@@153 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@64) (= ($generated@@480 ($generated@@456 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@456 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@72 ($generated@@456 $generated@@483)) $generated@@57))
 :pattern ( ($generated@@456 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 (type $generated@@484)))
(= ($generated@@346 $generated@@485 ($generated@@260 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@260 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@273 $generated@@148 $generated@@148)) (= (type $generated@@487) $generated@@64)) (= (type $generated@@488) $generated@@64)) (= ($generated@@135 $generated@@486 ($generated@@374 $generated@@487 $generated@@488)) (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@148) ($generated@@0 ($generated@@81 ($generated@@271 $generated@@486) $generated@@489))) (and ($generated@@215 ($generated@@81 ($generated@@347 $generated@@486) $generated@@489) $generated@@488) ($generated@@215 $generated@@489 $generated@@487)))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@486) $generated@@489))
 :pattern ( ($generated@@81 ($generated@@271 $generated@@486) $generated@@489))
))))
 :pattern ( ($generated@@135 $generated@@486 ($generated@@374 $generated@@487 $generated@@488)))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@291 $generated@@148 $generated@@148)) (= (type $generated@@491) $generated@@64)) (= (type $generated@@492) $generated@@64)) (= ($generated@@135 $generated@@490 ($generated@@382 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@148) ($generated@@0 ($generated@@81 ($generated@@289 $generated@@490) $generated@@493))) (and ($generated@@215 ($generated@@81 ($generated@@357 $generated@@490) $generated@@493) $generated@@492) ($generated@@215 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@490) $generated@@493))
 :pattern ( ($generated@@81 ($generated@@289 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@135 $generated@@490 ($generated@@382 $generated@@491 $generated@@492)))
)))
(assert (= $generated@@132 ($generated@@234 51)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@148) (= (type $generated@@497) $generated@@148)) (< ($generated@@494 $generated@@496) ($generated@@495 ($generated@@214 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@214 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@148) (= (type $generated@@499) $generated@@148)) (< ($generated@@494 $generated@@499) ($generated@@495 ($generated@@214 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@214 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (and (= (type $generated@@500) $generated@@148) (= (type $generated@@501) $generated@@64)) (= (type $generated@@502) $generated@@64)) ($generated@@215 $generated@@500 ($generated@@374 $generated@@501 $generated@@502))) (and (= ($generated@@260 ($generated@@346 ($generated@@273 $generated@@148 $generated@@148) $generated@@500)) $generated@@500) ($generated@@135 ($generated@@346 ($generated@@273 $generated@@148 $generated@@148) $generated@@500) ($generated@@374 $generated@@501 $generated@@502))))
 :pattern ( ($generated@@215 $generated@@500 ($generated@@374 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (and (= (type $generated@@503) $generated@@148) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) $generated@@64)) ($generated@@215 $generated@@503 ($generated@@382 $generated@@504 $generated@@505))) (and (= ($generated@@260 ($generated@@346 ($generated@@291 $generated@@148 $generated@@148) $generated@@503)) $generated@@503) ($generated@@135 ($generated@@346 ($generated@@291 $generated@@148 $generated@@148) $generated@@503) ($generated@@382 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@215 $generated@@503 ($generated@@382 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) $generated@@64) (= (type $generated@@507) $generated@@64)) (= (type $generated@@508) $generated@@148)) ($generated@@215 $generated@@508 ($generated@@138 $generated@@506 $generated@@507))) (and (= ($generated@@260 ($generated@@346 $generated@@139 $generated@@508)) $generated@@508) ($generated@@135 ($generated@@346 $generated@@139 $generated@@508) ($generated@@138 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@215 $generated@@508 ($generated@@138 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
 (not ($generated@@0 ($generated@@81 ($generated@@390 $generated@@510) $generated@@509))))
 :pattern ( (let (($generated@@510 (type $generated@@509)))
($generated@@81 ($generated@@390 $generated@@510) $generated@@509)))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@69)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@64) (= (type $generated@@514) $generated@@64)) (and (= ($generated@@72 ($generated@@138 $generated@@513 $generated@@514)) $generated@@62) (= ($generated@@511 ($generated@@138 $generated@@513 $generated@@514)) $generated@@63)))
 :pattern ( ($generated@@138 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@139) (= ($generated@@494 ($generated@@260 $generated@@515)) ($generated@@495 $generated@@515)))
 :pattern ( ($generated@@494 ($generated@@260 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@148) ($generated@@215 $generated@@516 ($generated@@75 0))) (and (= ($generated@@260 ($generated@@346 $generated@@2 $generated@@516)) $generated@@516) ($generated@@135 ($generated@@346 ($generated@@76 $generated@@148 $generated@@4) $generated@@516) ($generated@@75 0))))
 :pattern ( ($generated@@215 $generated@@516 ($generated@@75 0)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@517) $generated@@148) (= (type $generated@@518) $generated@@64)) ($generated@@215 $generated@@517 ($generated@@224 $generated@@518))) (and (= ($generated@@260 ($generated@@346 ($generated@@76 $generated@@148 $generated@@4) $generated@@517)) $generated@@517) ($generated@@135 ($generated@@346 ($generated@@76 $generated@@148 $generated@@4) $generated@@517) ($generated@@224 $generated@@518))))
 :pattern ( ($generated@@215 $generated@@517 ($generated@@224 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) $generated@@148) (= (type $generated@@520) $generated@@64)) ($generated@@215 $generated@@519 ($generated@@229 $generated@@520))) (and (= ($generated@@260 ($generated@@346 ($generated@@76 $generated@@148 $generated@@4) $generated@@519)) $generated@@519) ($generated@@135 ($generated@@346 ($generated@@76 $generated@@148 $generated@@4) $generated@@519) ($generated@@229 $generated@@520))))
 :pattern ( ($generated@@215 $generated@@519 ($generated@@229 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@521) $generated@@148) (= (type $generated@@522) $generated@@64)) ($generated@@215 $generated@@521 ($generated@@153 $generated@@522))) (and (= ($generated@@260 ($generated@@346 ($generated@@76 $generated@@148 $generated@@2) $generated@@521)) $generated@@521) ($generated@@135 ($generated@@346 ($generated@@76 $generated@@148 $generated@@2) $generated@@521) ($generated@@153 $generated@@522))))
 :pattern ( ($generated@@215 $generated@@521 ($generated@@153 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@523) $generated@@148) (= (type $generated@@524) $generated@@64)) ($generated@@215 $generated@@523 ($generated@@456 $generated@@524))) (and (= ($generated@@260 ($generated@@346 ($generated@@254 $generated@@148) $generated@@523)) $generated@@523) ($generated@@135 ($generated@@346 ($generated@@254 $generated@@148) $generated@@523) ($generated@@456 $generated@@524))))
 :pattern ( ($generated@@215 $generated@@523 ($generated@@456 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@76 $generated@@148 $generated@@2)) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@525 ($generated@@153 $generated@@526) $generated@@527) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@148) (< 0 ($generated ($generated@@81 $generated@@525 $generated@@528)))) ($generated@@240 $generated@@528 $generated@@526 $generated@@527))
 :pattern ( ($generated@@81 $generated@@525 $generated@@528))
))))
 :pattern ( ($generated@@74 $generated@@525 ($generated@@153 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@139) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@133 $generated@@531) (and ($generated@@137 $generated@@529) (exists (($generated@@532 T@U) ) (!  (and (= (type $generated@@532) $generated@@64) ($generated@@74 $generated@@529 ($generated@@138 $generated@@530 $generated@@532) $generated@@531))
 :pattern ( ($generated@@74 $generated@@529 ($generated@@138 $generated@@530 $generated@@532) $generated@@531))
))))) ($generated@@240 ($generated@@146 $generated@@529) $generated@@530 $generated@@531))
 :pattern ( ($generated@@240 ($generated@@146 $generated@@529) $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@139) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@133 $generated@@535) (and ($generated@@137 $generated@@533) (exists (($generated@@536 T@U) ) (!  (and (= (type $generated@@536) $generated@@64) ($generated@@74 $generated@@533 ($generated@@138 $generated@@536 $generated@@534) $generated@@535))
 :pattern ( ($generated@@74 $generated@@533 ($generated@@138 $generated@@536 $generated@@534) $generated@@535))
))))) ($generated@@240 ($generated@@147 $generated@@533) $generated@@534 $generated@@535))
 :pattern ( ($generated@@240 ($generated@@147 $generated@@533) $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@148) (= (type $generated@@538) $generated@@148)) (= ($generated@@214 ($generated@@236 $generated@@537) ($generated@@236 $generated@@538)) ($generated@@236 ($generated@@214 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@214 ($generated@@236 $generated@@537) ($generated@@236 $generated@@538)))
)))
(assert (forall (($generated@@539 Int) ) (! (= ($generated@@260 ($generated@@8 ($generated@@234 $generated@@539))) ($generated@@236 ($generated@@260 ($generated@@8 $generated@@539))))
 :pattern ( ($generated@@260 ($generated@@8 ($generated@@234 $generated@@539))))
)))
(assert (forall (($generated@@540 T@U) ) (! (= ($generated@@260 ($generated@@236 $generated@@540)) ($generated@@236 ($generated@@260 $generated@@540)))
 :pattern ( ($generated@@260 ($generated@@236 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@255 (type $generated@@541))))
 (=> (and (= (type $generated@@541) ($generated@@254 $generated@@542)) (= ($generated@@253 $generated@@541) 0)) (= $generated@@541 ($generated@@252 $generated@@542))))
 :pattern ( ($generated@@253 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@544)))
 (=> (and (and (= (type $generated@@543) ($generated@@76 $generated@@546 $generated@@2)) (= (type $generated@@545) $generated@@2)) (<= 0 ($generated $generated@@545))) (= ($generated@@265 ($generated@@82 $generated@@543 $generated@@544 $generated@@545)) (+ (- ($generated@@265 $generated@@543) ($generated ($generated@@81 $generated@@543 $generated@@544))) ($generated $generated@@545)))))
 :pattern ( ($generated@@265 ($generated@@82 $generated@@543 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@548) $generated@@2)) ($generated@@74 $generated@@548 $generated@@46 $generated@@547))
 :pattern ( ($generated@@74 $generated@@548 $generated@@46 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@550) $generated@@3)) ($generated@@74 $generated@@550 $generated@@47 $generated@@549))
 :pattern ( ($generated@@74 $generated@@550 $generated@@47 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@552) $generated@@4)) ($generated@@74 $generated@@552 $generated@@44 $generated@@551))
 :pattern ( ($generated@@74 $generated@@552 $generated@@44 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@554) $generated@@414)) ($generated@@74 $generated@@554 $generated@@45 $generated@@553))
 :pattern ( ($generated@@74 $generated@@554 $generated@@45 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@556) $generated@@148)) ($generated@@74 $generated@@556 $generated@@48 $generated@@555))
 :pattern ( ($generated@@74 $generated@@556 $generated@@48 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) ($generated@@254 $generated@@148)) (= (type $generated@@558) $generated@@64)) (= ($generated@@135 $generated@@557 ($generated@@456 $generated@@558)) (forall (($generated@@559 Int) ) (!  (=> (and (<= 0 $generated@@559) (< $generated@@559 ($generated@@253 $generated@@557))) ($generated@@215 ($generated@@457 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@457 $generated@@557 $generated@@559))
))))
 :pattern ( ($generated@@135 $generated@@557 ($generated@@456 $generated@@558)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 Int) ) (!  (=> (= (type $generated@@561) ($generated@@254 $generated@@148)) (=> (and (<= 0 $generated@@562) (< $generated@@562 ($generated@@253 $generated@@561))) (< ($generated@@495 ($generated@@346 $generated@@139 ($generated@@457 $generated@@561 $generated@@562))) ($generated@@560 $generated@@561))))
 :pattern ( ($generated@@495 ($generated@@346 $generated@@139 ($generated@@457 $generated@@561 $generated@@562))))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) ($generated@@273 $generated@@148 $generated@@148)) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) $generated@@64)) ($generated@@135 $generated@@563 ($generated@@374 $generated@@564 $generated@@565))) (and (and ($generated@@135 ($generated@@271 $generated@@563) ($generated@@224 $generated@@564)) ($generated@@135 ($generated@@314 $generated@@563) ($generated@@224 $generated@@565))) ($generated@@135 ($generated@@345 $generated@@563) ($generated@@224 ($generated@@138 $generated@@564 $generated@@565)))))
 :pattern ( ($generated@@135 $generated@@563 ($generated@@374 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) ($generated@@291 $generated@@148 $generated@@148)) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) $generated@@64)) ($generated@@135 $generated@@566 ($generated@@382 $generated@@567 $generated@@568))) (and (and ($generated@@135 ($generated@@289 $generated@@566) ($generated@@229 $generated@@567)) ($generated@@135 ($generated@@325 $generated@@566) ($generated@@229 $generated@@568))) ($generated@@135 ($generated@@356 $generated@@566) ($generated@@229 ($generated@@138 $generated@@567 $generated@@568)))))
 :pattern ( ($generated@@135 $generated@@566 ($generated@@382 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@2) ($generated@@135 $generated@@569 $generated@@46))
 :pattern ( ($generated@@135 $generated@@569 $generated@@46))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@3) ($generated@@135 $generated@@570 $generated@@47))
 :pattern ( ($generated@@135 $generated@@570 $generated@@47))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@4) ($generated@@135 $generated@@571 $generated@@44))
 :pattern ( ($generated@@135 $generated@@571 $generated@@44))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@414) ($generated@@135 $generated@@572 $generated@@45))
 :pattern ( ($generated@@135 $generated@@572 $generated@@45))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@148) ($generated@@135 $generated@@573 $generated@@48))
 :pattern ( ($generated@@135 $generated@@573 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@574 () T@U)
(declare-fun $generated@@575 () T@U)
(declare-fun $generated@@576 () T@U)
(declare-fun $generated@@577 (T@U) Bool)
(declare-fun $generated@@578 () Int)
(assert  (and (and (= (type $generated@@574) ($generated@@160 $generated@@77 $generated@@4)) (= (type $generated@@575) $generated@@77)) (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@579  (=> (and (= $generated@@574 ($generated@@159 $generated@@575 $generated@@576 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@132 ($generated@@234 51)))))
(let (($generated@@580  (=> (and (and ($generated@@133 $generated@@576) ($generated@@577 $generated@@576)) (and (= 0 $generated@@578) (= (ControlFlow 0 3) 2))) $generated@@579)))
$generated@@580)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) T@U)
(declare-fun $generated@@132 () Int)
(declare-fun $generated@@133 (T@U) Bool)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@138 (T@U T@U) T@U)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U T@U) T@U)
(declare-fun $generated@@159 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@160 (T@T T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(declare-fun $generated@@163 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@214 (T@U T@U) T@U)
(declare-fun $generated@@215 (T@U T@U) Bool)
(declare-fun $generated@@224 (T@U) T@U)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@234 (Int) Int)
(declare-fun $generated@@236 (T@U) T@U)
(declare-fun $generated@@240 (T@U T@U T@U) Bool)
(declare-fun $generated@@246 (T@U) T@U)
(declare-fun $generated@@252 (T@T) T@U)
(declare-fun $generated@@253 (T@U) Int)
(declare-fun $generated@@254 (T@T) T@T)
(declare-fun $generated@@255 (T@T) T@T)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@265 (T@U) Int)
(declare-fun $generated@@266 (T@T) T@U)
(declare-fun $generated@@271 (T@U) T@U)
(declare-fun $generated@@272 (T@T T@T) T@U)
(declare-fun $generated@@273 (T@T T@T) T@T)
(declare-fun $generated@@274 (T@T) T@T)
(declare-fun $generated@@275 (T@T) T@T)
(declare-fun $generated@@289 (T@U) T@U)
(declare-fun $generated@@290 (T@T T@T) T@U)
(declare-fun $generated@@291 (T@T T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@293 (T@T) T@T)
(declare-fun $generated@@314 (T@U) T@U)
(declare-fun $generated@@325 (T@U) T@U)
(declare-fun $generated@@345 (T@U) T@U)
(declare-fun $generated@@346 (T@T T@U) T@U)
(declare-fun $generated@@347 (T@U) T@U)
(declare-fun $generated@@356 (T@U) T@U)
(declare-fun $generated@@357 (T@U) T@U)
(declare-fun $generated@@374 (T@U T@U) T@U)
(declare-fun $generated@@382 (T@U T@U) T@U)
(declare-fun $generated@@390 (T@T) T@U)
(declare-fun $generated@@414 () T@T)
(declare-fun $generated@@422 (T@U) T@U)
(declare-fun $generated@@426 (T@U) T@U)
(declare-fun $generated@@432 (T@U) T@U)
(declare-fun $generated@@436 (T@U) T@U)
(declare-fun $generated@@444 (T@U) T@U)
(declare-fun $generated@@448 (T@U) T@U)
(declare-fun $generated@@456 (T@U) T@U)
(declare-fun $generated@@457 (T@U Int) T@U)
(declare-fun $generated@@466 (T@U) Int)
(declare-fun $generated@@468 (T@U) T@U)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@494 (T@U) Int)
(declare-fun $generated@@495 (T@U) Int)
(declare-fun $generated@@511 (T@U) T@U)
(declare-fun $generated@@560 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@64) 6) (= (type $generated@@44) $generated@@64)) (= (type $generated@@45) $generated@@64)) (= (type $generated@@46) $generated@@64)) (= (type $generated@@47) $generated@@64)) (= (type $generated@@48) $generated@@64)) (= ($generated@@1 $generated@@65) 7)) (= (type $generated@@49) $generated@@65)) (= (type $generated@@50) $generated@@65)) (= (type $generated@@51) $generated@@65)) (= (type $generated@@52) $generated@@65)) (= (type $generated@@53) $generated@@65)) (= (type $generated@@54) $generated@@65)) (= (type $generated@@55) $generated@@65)) (= (type $generated@@56) $generated@@65)) (= (type $generated@@57) $generated@@65)) (= (type $generated@@58) $generated@@65)) (= (type $generated@@59) $generated@@65)) (forall (($generated@@70 T@T) ) (= ($generated@@1 ($generated@@66 $generated@@70)) 8))) (forall (($generated@@71 T@T) ) (! (= ($generated@@67 ($generated@@66 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@66 $generated@@71))
))) (= (type $generated@@60) ($generated@@66 $generated@@4))) (= ($generated@@1 $generated@@68) 9)) (= (type $generated@@61) $generated@@68)) (= (type $generated@@62) $generated@@65)) (= ($generated@@1 $generated@@69) 10)) (= (type $generated@@63) $generated@@69)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63)
)
(assert (forall (($generated@@73 T@U) ) (! (= (type ($generated@@72 $generated@@73)) $generated@@65)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (= ($generated@@72 $generated@@44) $generated@@49))
(assert (= ($generated@@72 $generated@@45) $generated@@50))
(assert (= ($generated@@72 $generated@@46) $generated@@51))
(assert (= ($generated@@72 $generated@@47) $generated@@52))
(assert (= ($generated@@72 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@85 $generated@@86)) 11)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@76 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@76 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (let (($generated@@93 ($generated@@80 (type $generated@@91))))
(= (type ($generated@@81 $generated@@91 $generated@@92)) $generated@@93))
 :pattern ( ($generated@@81 $generated@@91 $generated@@92))
))) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (let (($generated@@97 (type $generated@@96)))
(let (($generated@@98 (type $generated@@95)))
(= (type ($generated@@82 $generated@@94 $generated@@95 $generated@@96)) ($generated@@76 $generated@@98 $generated@@97))))
 :pattern ( ($generated@@82 $generated@@94 $generated@@95 $generated@@96))
))) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (let (($generated@@102 ($generated@@80 (type $generated@@99))))
 (=> (= (type $generated@@101) $generated@@102) (= ($generated@@81 ($generated@@82 $generated@@99 $generated@@100 $generated@@101) $generated@@100) $generated@@101)))
 :weight 0
))) (and (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (or (= $generated@@105 $generated@@106) (= ($generated@@81 ($generated@@82 $generated@@104 $generated@@105 $generated@@103) $generated@@106) ($generated@@81 $generated@@104 $generated@@106)))
 :weight 0
)) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or true (= ($generated@@81 ($generated@@82 $generated@@108 $generated@@109 $generated@@107) $generated@@110) ($generated@@81 $generated@@108 $generated@@110)))
 :weight 0
)))) (= ($generated@@1 $generated@@77) 12)) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (let (($generated@@113 ($generated@@67 (type $generated@@112))))
(= (type ($generated@@83 $generated@@111 $generated@@112)) $generated@@113))
 :pattern ( ($generated@@83 $generated@@111 $generated@@112))
))) (= ($generated@@1 $generated@@78) 13)) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= (type ($generated@@84 $generated@@114 $generated@@115 $generated@@116)) $generated@@78)
 :pattern ( ($generated@@84 $generated@@114 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (let (($generated@@120 ($generated@@67 (type $generated@@118))))
 (=> (= (type $generated@@119) $generated@@120) (= ($generated@@83 ($generated@@84 $generated@@117 $generated@@118 $generated@@119) $generated@@118) $generated@@119)))
 :weight 0
))) (and (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@123 $generated@@124) (= ($generated@@83 ($generated@@84 $generated@@122 $generated@@123 $generated@@121) $generated@@124) ($generated@@83 $generated@@122 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or true (= ($generated@@83 ($generated@@84 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@83 $generated@@126 $generated@@128)))
 :weight 0
)))) (forall (($generated@@129 Int) ) (! (= (type ($generated@@75 $generated@@129)) $generated@@64)
 :pattern ( ($generated@@75 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (= (type $generated@@130) $generated@@2) (= (type $generated@@131) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
 :pattern ( ($generated@@74 $generated@@130 ($generated@@75 0) $generated@@131))
)))
(assert (forall (($generated@@134 T@U) ) (!  (=> (and (= (type $generated@@134) ($generated@@76 $generated@@77 $generated@@78)) ($generated@@133 $generated@@134)) ($generated@@74 ($generated@@8 $generated@@132) $generated@@46 $generated@@134))
 :pattern ( ($generated@@74 ($generated@@8 $generated@@132) $generated@@46 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> (= (type $generated@@136) $generated@@2) ($generated@@135 $generated@@136 ($generated@@75 0)))
 :pattern ( ($generated@@135 $generated@@136 ($generated@@75 0)))
)))
(assert  (and (= ($generated@@1 $generated@@139) 14) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= (type ($generated@@138 $generated@@140 $generated@@141)) $generated@@64)
 :pattern ( ($generated@@138 $generated@@140 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and (and (= (type $generated@@142) $generated@@64) (= (type $generated@@143) $generated@@64)) (= (type $generated@@144) $generated@@139)) ($generated@@135 $generated@@144 ($generated@@138 $generated@@142 $generated@@143))) ($generated@@137 $generated@@144))
 :pattern ( ($generated@@137 $generated@@144) ($generated@@135 $generated@@144 ($generated@@138 $generated@@142 $generated@@143)))
)))
(assert  (and (and (= ($generated@@1 $generated@@148) 15) (forall (($generated@@149 T@U) ) (! (= (type ($generated@@146 $generated@@149)) $generated@@148)
 :pattern ( ($generated@@146 $generated@@149))
))) (forall (($generated@@150 T@U) ) (! (= (type ($generated@@147 $generated@@150)) $generated@@148)
 :pattern ( ($generated@@147 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and (= (type $generated@@151) $generated@@139) (= (type $generated@@152) $generated@@139)) true) (= ($generated@@145 $generated@@151 $generated@@152)  (and (= ($generated@@146 $generated@@151) ($generated@@146 $generated@@152)) (= ($generated@@147 $generated@@151) ($generated@@147 $generated@@152)))))
 :pattern ( ($generated@@145 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (! (= (type ($generated@@153 $generated@@155)) $generated@@64)
 :pattern ( ($generated@@153 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and (and (= (type $generated@@156) ($generated@@76 $generated@@148 $generated@@2)) (= (type $generated@@157) $generated@@64)) ($generated@@135 $generated@@156 ($generated@@153 $generated@@157))) ($generated@@154 $generated@@156))
 :pattern ( ($generated@@135 $generated@@156 ($generated@@153 $generated@@157)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@164 T@T) ($generated@@165 T@T) ) (= ($generated@@1 ($generated@@160 $generated@@164 $generated@@165)) 16)) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (! (= ($generated@@161 ($generated@@160 $generated@@166 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@162 ($generated@@160 $generated@@168 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@160 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (let (($generated@@173 ($generated@@162 (type $generated@@170))))
(= (type ($generated@@158 $generated@@170 $generated@@171 $generated@@172)) $generated@@173))
 :pattern ( ($generated@@158 $generated@@170 $generated@@171 $generated@@172))
))) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (let (($generated@@178 (type $generated@@177)))
(let (($generated@@179 (type $generated@@175)))
(= (type ($generated@@163 $generated@@174 $generated@@175 $generated@@176 $generated@@177)) ($generated@@160 $generated@@179 $generated@@178))))
 :pattern ( ($generated@@163 $generated@@174 $generated@@175 $generated@@176 $generated@@177))
))) (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (let (($generated@@184 ($generated@@162 (type $generated@@180))))
 (=> (= (type $generated@@183) $generated@@184) (= ($generated@@158 ($generated@@163 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@181 $generated@@182) $generated@@183)))
 :weight 0
))) (and (and (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (or (= $generated@@187 $generated@@189) (= ($generated@@158 ($generated@@163 $generated@@186 $generated@@187 $generated@@188 $generated@@185) $generated@@189 $generated@@190) ($generated@@158 $generated@@186 $generated@@189 $generated@@190)))
 :weight 0
)) (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@158 ($generated@@163 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@158 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
))) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or true (= ($generated@@158 ($generated@@163 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@158 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 Bool) ) (! (= (type ($generated@@159 $generated@@203 $generated@@204 $generated@@205 $generated@@206)) ($generated@@160 $generated@@77 $generated@@4))
 :pattern ( ($generated@@159 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@67 (type $generated@@212))))
 (=> (and (and (and (and (= (type $generated@@207) $generated@@77) (= (type $generated@@208) ($generated@@76 $generated@@77 $generated@@78))) (= (type $generated@@209) ($generated@@66 $generated@@4))) (= (type $generated@@211) $generated@@77)) (= (type $generated@@212) ($generated@@66 $generated@@213))) (= ($generated@@0 ($generated@@158 ($generated@@159 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))  (=> (and (not (= $generated@@211 $generated@@207)) ($generated@@0 ($generated@@83 ($generated@@81 $generated@@208 $generated@@211) $generated@@209))) $generated@@210))))
 :pattern ( ($generated@@158 ($generated@@159 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (! (= (type ($generated@@214 $generated@@216 $generated@@217)) $generated@@139)
 :pattern ( ($generated@@214 $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and (and (and (= (type $generated@@218) $generated@@64) (= (type $generated@@219) $generated@@64)) (= (type $generated@@220) $generated@@148)) (= (type $generated@@221) $generated@@148)) (= ($generated@@135 ($generated@@214 $generated@@220 $generated@@221) ($generated@@138 $generated@@218 $generated@@219))  (and ($generated@@215 $generated@@220 $generated@@218) ($generated@@215 $generated@@221 $generated@@219))))
 :pattern ( ($generated@@135 ($generated@@214 $generated@@220 $generated@@221) ($generated@@138 $generated@@218 $generated@@219)))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and (= (type $generated@@222) $generated@@139) (= (type $generated@@223) $generated@@139)) (= ($generated@@145 $generated@@222 $generated@@223) (= $generated@@222 $generated@@223)))
 :pattern ( ($generated@@145 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@225 T@U) ) (! (= (type ($generated@@224 $generated@@225)) $generated@@64)
 :pattern ( ($generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and (= (type $generated@@226) ($generated@@76 $generated@@148 $generated@@4)) (= (type $generated@@227) $generated@@64)) (= ($generated@@135 $generated@@226 ($generated@@224 $generated@@227)) (forall (($generated@@228 T@U) ) (!  (=> (and (= (type $generated@@228) $generated@@148) ($generated@@0 ($generated@@81 $generated@@226 $generated@@228))) ($generated@@215 $generated@@228 $generated@@227))
 :pattern ( ($generated@@81 $generated@@226 $generated@@228))
))))
 :pattern ( ($generated@@135 $generated@@226 ($generated@@224 $generated@@227)))
)))
(assert (forall (($generated@@230 T@U) ) (! (= (type ($generated@@229 $generated@@230)) $generated@@64)
 :pattern ( ($generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and (= (type $generated@@231) ($generated@@76 $generated@@148 $generated@@4)) (= (type $generated@@232) $generated@@64)) (= ($generated@@135 $generated@@231 ($generated@@229 $generated@@232)) (forall (($generated@@233 T@U) ) (!  (=> (and (= (type $generated@@233) $generated@@148) ($generated@@0 ($generated@@81 $generated@@231 $generated@@233))) ($generated@@215 $generated@@233 $generated@@232))
 :pattern ( ($generated@@81 $generated@@231 $generated@@233))
))))
 :pattern ( ($generated@@135 $generated@@231 ($generated@@229 $generated@@232)))
)))
(assert (forall (($generated@@235 Int) ) (! (= ($generated@@234 $generated@@235) $generated@@235)
 :pattern ( ($generated@@234 $generated@@235))
)))
(assert (forall (($generated@@237 T@U) ) (! (let (($generated@@238 (type $generated@@237)))
(= (type ($generated@@236 $generated@@237)) $generated@@238))
 :pattern ( ($generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ) (! (= ($generated@@236 $generated@@239) $generated@@239)
 :pattern ( ($generated@@236 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@241) $generated@@64) (= (type $generated@@242) $generated@@64)) (= (type $generated@@243) $generated@@148)) (= (type $generated@@244) $generated@@148)) (= (type $generated@@245) ($generated@@76 $generated@@77 $generated@@78))) ($generated@@133 $generated@@245)) (= ($generated@@74 ($generated@@214 $generated@@243 $generated@@244) ($generated@@138 $generated@@241 $generated@@242) $generated@@245)  (and ($generated@@240 $generated@@243 $generated@@241 $generated@@245) ($generated@@240 $generated@@244 $generated@@242 $generated@@245))))
 :pattern ( ($generated@@74 ($generated@@214 $generated@@243 $generated@@244) ($generated@@138 $generated@@241 $generated@@242) $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ) (! (= (type ($generated@@246 $generated@@247)) $generated@@68)
 :pattern ( ($generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ) (!  (=> (= (type $generated@@248) $generated@@139) (= ($generated@@137 $generated@@248) (= ($generated@@246 $generated@@248) $generated@@61)))
 :pattern ( ($generated@@137 $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ) (!  (=> (and (= (type $generated@@249) $generated@@139) ($generated@@137 $generated@@249)) (exists (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (and (and (= (type $generated@@250) $generated@@148) (= (type $generated@@251) $generated@@148)) (= $generated@@249 ($generated@@214 $generated@@250 $generated@@251)))
 :no-pattern (type $generated@@250)
 :no-pattern (type $generated@@251)
 :no-pattern ($generated $generated@@250)
 :no-pattern ($generated@@0 $generated@@250)
 :no-pattern ($generated $generated@@251)
 :no-pattern ($generated@@0 $generated@@251)
)))
 :pattern ( ($generated@@137 $generated@@249))
)))
(assert  (and (and (forall (($generated@@256 T@T) ) (= ($generated@@1 ($generated@@254 $generated@@256)) 17)) (forall (($generated@@257 T@T) ) (! (= ($generated@@255 ($generated@@254 $generated@@257)) $generated@@257)
 :pattern ( ($generated@@254 $generated@@257))
))) (forall (($generated@@258 T@T) ) (! (= (type ($generated@@252 $generated@@258)) ($generated@@254 $generated@@258))
 :pattern ( ($generated@@252 $generated@@258))
))))
(assert (forall (($generated@@259 T@T) ) (! (= ($generated@@253 ($generated@@252 $generated@@259)) 0)
 :pattern ( ($generated@@252 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= (type ($generated@@260 $generated@@261)) $generated@@148)
 :pattern ( ($generated@@260 $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) $generated@@64) (= (type $generated@@264) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@240 ($generated@@260 $generated@@262) $generated@@263 $generated@@264) ($generated@@74 $generated@@262 $generated@@263 $generated@@264)))
 :pattern ( ($generated@@240 ($generated@@260 $generated@@262) $generated@@263 $generated@@264))
)))
(assert (forall (($generated@@267 T@T) ) (! (= (type ($generated@@266 $generated@@267)) ($generated@@76 $generated@@267 $generated@@2))
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (! (let (($generated@@269 ($generated@@79 (type $generated@@268))))
 (=> (= (type $generated@@268) ($generated@@76 $generated@@269 $generated@@2)) (and (= (= ($generated@@265 $generated@@268) 0) (= $generated@@268 ($generated@@266 $generated@@269))) (=> (not (= ($generated@@265 $generated@@268) 0)) (exists (($generated@@270 T@U) ) (!  (and (= (type $generated@@270) $generated@@269) (< 0 ($generated ($generated@@81 $generated@@268 $generated@@270))))
 :no-pattern (type $generated@@270)
 :no-pattern ($generated $generated@@270)
 :no-pattern ($generated@@0 $generated@@270)
))))))
 :pattern ( ($generated@@265 $generated@@268))
)))
(assert  (and (and (and (and (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (= ($generated@@1 ($generated@@273 $generated@@276 $generated@@277)) 18)) (forall (($generated@@278 T@T) ($generated@@279 T@T) ) (! (= ($generated@@274 ($generated@@273 $generated@@278 $generated@@279)) $generated@@278)
 :pattern ( ($generated@@273 $generated@@278 $generated@@279))
))) (forall (($generated@@280 T@T) ($generated@@281 T@T) ) (! (= ($generated@@275 ($generated@@273 $generated@@280 $generated@@281)) $generated@@281)
 :pattern ( ($generated@@273 $generated@@280 $generated@@281))
))) (forall (($generated@@282 T@U) ) (! (let (($generated@@283 ($generated@@274 (type $generated@@282))))
(= (type ($generated@@271 $generated@@282)) ($generated@@76 $generated@@283 $generated@@4)))
 :pattern ( ($generated@@271 $generated@@282))
))) (forall (($generated@@284 T@T) ($generated@@285 T@T) ) (! (= (type ($generated@@272 $generated@@284 $generated@@285)) ($generated@@273 $generated@@284 $generated@@285))
 :pattern ( ($generated@@272 $generated@@284 $generated@@285))
))))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@T) ) (! (let (($generated@@288 (type $generated@@286)))
 (not ($generated@@0 ($generated@@81 ($generated@@271 ($generated@@272 $generated@@288 $generated@@287)) $generated@@286))))
 :pattern ( (let (($generated@@288 (type $generated@@286)))
($generated@@81 ($generated@@271 ($generated@@272 $generated@@288 $generated@@287)) $generated@@286)))
)))
(assert  (and (and (and (and (forall (($generated@@294 T@T) ($generated@@295 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@294 $generated@@295)) 19)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@296 $generated@@297)) $generated@@296)
 :pattern ( ($generated@@291 $generated@@296 $generated@@297))
))) (forall (($generated@@298 T@T) ($generated@@299 T@T) ) (! (= ($generated@@293 ($generated@@291 $generated@@298 $generated@@299)) $generated@@299)
 :pattern ( ($generated@@291 $generated@@298 $generated@@299))
))) (forall (($generated@@300 T@U) ) (! (let (($generated@@301 ($generated@@292 (type $generated@@300))))
(= (type ($generated@@289 $generated@@300)) ($generated@@76 $generated@@301 $generated@@4)))
 :pattern ( ($generated@@289 $generated@@300))
))) (forall (($generated@@302 T@T) ($generated@@303 T@T) ) (! (= (type ($generated@@290 $generated@@302 $generated@@303)) ($generated@@291 $generated@@302 $generated@@303))
 :pattern ( ($generated@@290 $generated@@302 $generated@@303))
))))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@T) ) (! (let (($generated@@306 (type $generated@@304)))
 (not ($generated@@0 ($generated@@81 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304))))
 :pattern ( (let (($generated@@306 (type $generated@@304)))
($generated@@81 ($generated@@289 ($generated@@290 $generated@@306 $generated@@305)) $generated@@304)))
)))
(assert ($generated@@135 ($generated@@8 $generated@@132) $generated@@46))
(assert (forall (($generated@@307 T@U) ) (! (let (($generated@@308 ($generated@@79 (type $generated@@307))))
 (=> (= (type $generated@@307) ($generated@@76 $generated@@308 $generated@@2)) (= ($generated@@154 $generated@@307) (forall (($generated@@309 T@U) ) (!  (=> (= (type $generated@@309) $generated@@308) (and (<= 0 ($generated ($generated@@81 $generated@@307 $generated@@309))) (<= ($generated ($generated@@81 $generated@@307 $generated@@309)) ($generated@@265 $generated@@307))))
 :pattern ( ($generated@@81 $generated@@307 $generated@@309))
)))))
 :pattern ( ($generated@@154 $generated@@307))
)))
(assert (forall (($generated@@310 T@U) ) (! (let (($generated@@311 ($generated@@275 (type $generated@@310))))
(let (($generated@@312 ($generated@@274 (type $generated@@310))))
 (=> (= (type $generated@@310) ($generated@@273 $generated@@312 $generated@@311)) (or (= $generated@@310 ($generated@@272 $generated@@312 $generated@@311)) (exists (($generated@@313 T@U) ) (!  (and (= (type $generated@@313) $generated@@312) ($generated@@0 ($generated@@81 ($generated@@271 $generated@@310) $generated@@313)))
 :no-pattern (type $generated@@313)
 :no-pattern ($generated $generated@@313)
 :no-pattern ($generated@@0 $generated@@313)
))))))
 :pattern ( ($generated@@271 $generated@@310))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@275 (type $generated@@315))))
(= (type ($generated@@314 $generated@@315)) ($generated@@76 $generated@@316 $generated@@4)))
 :pattern ( ($generated@@314 $generated@@315))
)))
(assert (forall (($generated@@317 T@U) ) (! (let (($generated@@318 ($generated@@275 (type $generated@@317))))
(let (($generated@@319 ($generated@@274 (type $generated@@317))))
 (=> (= (type $generated@@317) ($generated@@273 $generated@@319 $generated@@318)) (or (= $generated@@317 ($generated@@272 $generated@@319 $generated@@318)) (exists (($generated@@320 T@U) ) (!  (and (= (type $generated@@320) $generated@@318) ($generated@@0 ($generated@@81 ($generated@@314 $generated@@317) $generated@@320)))
 :no-pattern (type $generated@@320)
 :no-pattern ($generated $generated@@320)
 :no-pattern ($generated@@0 $generated@@320)
))))))
 :pattern ( ($generated@@314 $generated@@317))
)))
(assert (forall (($generated@@321 T@U) ) (! (let (($generated@@322 ($generated@@293 (type $generated@@321))))
(let (($generated@@323 ($generated@@292 (type $generated@@321))))
 (=> (= (type $generated@@321) ($generated@@291 $generated@@323 $generated@@322)) (or (= $generated@@321 ($generated@@290 $generated@@323 $generated@@322)) (exists (($generated@@324 T@U) ) (!  (and (= (type $generated@@324) $generated@@323) ($generated@@0 ($generated@@81 ($generated@@289 $generated@@321) $generated@@324)))
 :no-pattern (type $generated@@324)
 :no-pattern ($generated $generated@@324)
 :no-pattern ($generated@@0 $generated@@324)
))))))
 :pattern ( ($generated@@289 $generated@@321))
)))
(assert (forall (($generated@@326 T@U) ) (! (let (($generated@@327 ($generated@@293 (type $generated@@326))))
(= (type ($generated@@325 $generated@@326)) ($generated@@76 $generated@@327 $generated@@4)))
 :pattern ( ($generated@@325 $generated@@326))
)))
(assert (forall (($generated@@328 T@U) ) (! (let (($generated@@329 ($generated@@293 (type $generated@@328))))
(let (($generated@@330 ($generated@@292 (type $generated@@328))))
 (=> (= (type $generated@@328) ($generated@@291 $generated@@330 $generated@@329)) (or (= $generated@@328 ($generated@@290 $generated@@330 $generated@@329)) (exists (($generated@@331 T@U) ) (!  (and (= (type $generated@@331) $generated@@329) ($generated@@0 ($generated@@81 ($generated@@325 $generated@@328) $generated@@331)))
 :no-pattern (type $generated@@331)
 :no-pattern ($generated $generated@@331)
 :no-pattern ($generated@@0 $generated@@331)
))))))
 :pattern ( ($generated@@325 $generated@@328))
)))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (!  (=> (and (= (type $generated@@332) ($generated@@76 $generated@@148 $generated@@2)) (= (type $generated@@333) $generated@@64)) (= ($generated@@135 $generated@@332 ($generated@@153 $generated@@333)) (forall (($generated@@334 T@U) ) (!  (=> (and (= (type $generated@@334) $generated@@148) (< 0 ($generated ($generated@@81 $generated@@332 $generated@@334)))) ($generated@@215 $generated@@334 $generated@@333))
 :pattern ( ($generated@@81 $generated@@332 $generated@@334))
))))
 :pattern ( ($generated@@135 $generated@@332 ($generated@@153 $generated@@333)))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and (and (= (type $generated@@335) ($generated@@76 $generated@@148 $generated@@4)) (= (type $generated@@336) $generated@@64)) (= (type $generated@@337) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@335 ($generated@@224 $generated@@336) $generated@@337) (forall (($generated@@338 T@U) ) (!  (=> (and (= (type $generated@@338) $generated@@148) ($generated@@0 ($generated@@81 $generated@@335 $generated@@338))) ($generated@@240 $generated@@338 $generated@@336 $generated@@337))
 :pattern ( ($generated@@81 $generated@@335 $generated@@338))
))))
 :pattern ( ($generated@@74 $generated@@335 ($generated@@224 $generated@@336) $generated@@337))
)))
(assert (forall (($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (and (and (= (type $generated@@339) ($generated@@76 $generated@@148 $generated@@4)) (= (type $generated@@340) $generated@@64)) (= (type $generated@@341) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@339 ($generated@@229 $generated@@340) $generated@@341) (forall (($generated@@342 T@U) ) (!  (=> (and (= (type $generated@@342) $generated@@148) ($generated@@0 ($generated@@81 $generated@@339 $generated@@342))) ($generated@@240 $generated@@342 $generated@@340 $generated@@341))
 :pattern ( ($generated@@81 $generated@@339 $generated@@342))
))))
 :pattern ( ($generated@@74 $generated@@339 ($generated@@229 $generated@@340) $generated@@341))
)))
(assert (forall (($generated@@343 T@U) ) (! (let (($generated@@344 (type $generated@@343)))
(= ($generated ($generated@@81 ($generated@@266 $generated@@344) $generated@@343)) 0))
 :pattern ( (let (($generated@@344 (type $generated@@343)))
($generated@@81 ($generated@@266 $generated@@344) $generated@@343)))
)))
(assert  (and (and (forall (($generated@@348 T@U) ) (! (= (type ($generated@@345 $generated@@348)) ($generated@@76 $generated@@148 $generated@@4))
 :pattern ( ($generated@@345 $generated@@348))
)) (forall (($generated@@349 T@T) ($generated@@350 T@U) ) (! (= (type ($generated@@346 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@346 $generated@@349 $generated@@350))
))) (forall (($generated@@351 T@U) ) (! (let (($generated@@352 ($generated@@275 (type $generated@@351))))
(let (($generated@@353 ($generated@@274 (type $generated@@351))))
(= (type ($generated@@347 $generated@@351)) ($generated@@76 $generated@@353 $generated@@352))))
 :pattern ( ($generated@@347 $generated@@351))
))))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@354) ($generated@@273 $generated@@148 $generated@@148)) (= (type $generated@@355) $generated@@148)) (= ($generated@@0 ($generated@@81 ($generated@@345 $generated@@354) $generated@@355))  (and ($generated@@0 ($generated@@81 ($generated@@271 $generated@@354) ($generated@@146 ($generated@@346 $generated@@139 $generated@@355)))) (= ($generated@@81 ($generated@@347 $generated@@354) ($generated@@146 ($generated@@346 $generated@@139 $generated@@355))) ($generated@@147 ($generated@@346 $generated@@139 $generated@@355))))))
 :pattern ( ($generated@@81 ($generated@@345 $generated@@354) $generated@@355))
)))
(assert  (and (forall (($generated@@358 T@U) ) (! (= (type ($generated@@356 $generated@@358)) ($generated@@76 $generated@@148 $generated@@4))
 :pattern ( ($generated@@356 $generated@@358))
)) (forall (($generated@@359 T@U) ) (! (let (($generated@@360 ($generated@@293 (type $generated@@359))))
(let (($generated@@361 ($generated@@292 (type $generated@@359))))
(= (type ($generated@@357 $generated@@359)) ($generated@@76 $generated@@361 $generated@@360))))
 :pattern ( ($generated@@357 $generated@@359))
))))
(assert (forall (($generated@@362 T@U) ($generated@@363 T@U) ) (!  (=> (and (= (type $generated@@362) ($generated@@291 $generated@@148 $generated@@148)) (= (type $generated@@363) $generated@@148)) (= ($generated@@0 ($generated@@81 ($generated@@356 $generated@@362) $generated@@363))  (and ($generated@@0 ($generated@@81 ($generated@@289 $generated@@362) ($generated@@146 ($generated@@346 $generated@@139 $generated@@363)))) (= ($generated@@81 ($generated@@357 $generated@@362) ($generated@@146 ($generated@@346 $generated@@139 $generated@@363))) ($generated@@147 ($generated@@346 $generated@@139 $generated@@363))))))
 :pattern ( ($generated@@81 ($generated@@356 $generated@@362) $generated@@363))
)))
(assert (forall (($generated@@364 T@U) ($generated@@365 T@U) ) (! (let (($generated@@366 (type $generated@@365)))
(let (($generated@@367 ($generated@@274 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@273 $generated@@367 $generated@@366)) (= ($generated@@0 ($generated@@81 ($generated@@314 $generated@@364) $generated@@365)) (exists (($generated@@368 T@U) ) (!  (and (= (type $generated@@368) $generated@@367) (and ($generated@@0 ($generated@@81 ($generated@@271 $generated@@364) $generated@@368)) (= $generated@@365 ($generated@@81 ($generated@@347 $generated@@364) $generated@@368))))
 :pattern ( ($generated@@81 ($generated@@271 $generated@@364) $generated@@368))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@364) $generated@@368))
))))))
 :pattern ( ($generated@@81 ($generated@@314 $generated@@364) $generated@@365))
)))
(assert (forall (($generated@@369 T@U) ($generated@@370 T@U) ) (! (let (($generated@@371 (type $generated@@370)))
(let (($generated@@372 ($generated@@292 (type $generated@@369))))
 (=> (= (type $generated@@369) ($generated@@291 $generated@@372 $generated@@371)) (= ($generated@@0 ($generated@@81 ($generated@@325 $generated@@369) $generated@@370)) (exists (($generated@@373 T@U) ) (!  (and (= (type $generated@@373) $generated@@372) (and ($generated@@0 ($generated@@81 ($generated@@289 $generated@@369) $generated@@373)) (= $generated@@370 ($generated@@81 ($generated@@357 $generated@@369) $generated@@373))))
 :pattern ( ($generated@@81 ($generated@@289 $generated@@369) $generated@@373))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@369) $generated@@373))
))))))
 :pattern ( ($generated@@81 ($generated@@325 $generated@@369) $generated@@370))
)))
(assert (forall (($generated@@375 T@U) ($generated@@376 T@U) ) (! (= (type ($generated@@374 $generated@@375 $generated@@376)) $generated@@64)
 :pattern ( ($generated@@374 $generated@@375 $generated@@376))
)))
(assert (forall (($generated@@377 T@U) ($generated@@378 T@U) ($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (and (and (= (type $generated@@377) ($generated@@273 $generated@@148 $generated@@148)) (= (type $generated@@378) $generated@@64)) (= (type $generated@@379) $generated@@64)) (= (type $generated@@380) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@148) ($generated@@0 ($generated@@81 ($generated@@271 $generated@@377) $generated@@381))) (and ($generated@@240 ($generated@@81 ($generated@@347 $generated@@377) $generated@@381) $generated@@379 $generated@@380) ($generated@@240 $generated@@381 $generated@@378 $generated@@380)))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@377) $generated@@381))
 :pattern ( ($generated@@81 ($generated@@271 $generated@@377) $generated@@381))
))))
 :pattern ( ($generated@@74 $generated@@377 ($generated@@374 $generated@@378 $generated@@379) $generated@@380))
)))
(assert (forall (($generated@@383 T@U) ($generated@@384 T@U) ) (! (= (type ($generated@@382 $generated@@383 $generated@@384)) $generated@@64)
 :pattern ( ($generated@@382 $generated@@383 $generated@@384))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (and (= (type $generated@@385) ($generated@@291 $generated@@148 $generated@@148)) (= (type $generated@@386) $generated@@64)) (= (type $generated@@387) $generated@@64)) (= (type $generated@@388) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@385 ($generated@@382 $generated@@386 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@148) ($generated@@0 ($generated@@81 ($generated@@289 $generated@@385) $generated@@389))) (and ($generated@@240 ($generated@@81 ($generated@@357 $generated@@385) $generated@@389) $generated@@387 $generated@@388) ($generated@@240 $generated@@389 $generated@@386 $generated@@388)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@385) $generated@@389))
 :pattern ( ($generated@@81 ($generated@@289 $generated@@385) $generated@@389))
))))
 :pattern ( ($generated@@74 $generated@@385 ($generated@@382 $generated@@386 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@391 T@T) ) (! (= (type ($generated@@390 $generated@@391)) ($generated@@76 $generated@@391 $generated@@4))
 :pattern ( ($generated@@390 $generated@@391))
)))
(assert (forall (($generated@@392 T@U) ) (! (let (($generated@@393 ($generated@@293 (type $generated@@392))))
(let (($generated@@394 ($generated@@292 (type $generated@@392))))
 (=> (= (type $generated@@392) ($generated@@291 $generated@@394 $generated@@393)) (= (= $generated@@392 ($generated@@290 $generated@@394 $generated@@393)) (= ($generated@@289 $generated@@392) ($generated@@390 $generated@@394))))))
 :pattern ( ($generated@@289 $generated@@392))
)))
(assert (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@293 (type $generated@@395))))
(let (($generated@@397 ($generated@@292 (type $generated@@395))))
 (=> (= (type $generated@@395) ($generated@@291 $generated@@397 $generated@@396)) (= (= $generated@@395 ($generated@@290 $generated@@397 $generated@@396)) (= ($generated@@325 $generated@@395) ($generated@@390 $generated@@396))))))
 :pattern ( ($generated@@325 $generated@@395))
)))
(assert (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@293 (type $generated@@398))))
(let (($generated@@400 ($generated@@292 (type $generated@@398))))
 (=> (= (type $generated@@398) ($generated@@291 $generated@@400 $generated@@399)) (= (= $generated@@398 ($generated@@290 $generated@@400 $generated@@399)) (= ($generated@@356 $generated@@398) ($generated@@390 $generated@@148))))))
 :pattern ( ($generated@@356 $generated@@398))
)))
(assert (forall (($generated@@401 T@U) ) (! (let (($generated@@402 ($generated@@275 (type $generated@@401))))
(let (($generated@@403 ($generated@@274 (type $generated@@401))))
 (=> (= (type $generated@@401) ($generated@@273 $generated@@403 $generated@@402)) (or (= $generated@@401 ($generated@@272 $generated@@403 $generated@@402)) (exists (($generated@@404 T@U) ($generated@@405 T@U) ) (!  (and (and (= (type $generated@@404) $generated@@148) (= (type $generated@@405) $generated@@148)) ($generated@@0 ($generated@@81 ($generated@@345 $generated@@401) ($generated@@260 ($generated@@214 $generated@@404 $generated@@405)))))
 :no-pattern (type $generated@@404)
 :no-pattern (type $generated@@405)
 :no-pattern ($generated $generated@@404)
 :no-pattern ($generated@@0 $generated@@404)
 :no-pattern ($generated $generated@@405)
 :no-pattern ($generated@@0 $generated@@405)
))))))
 :pattern ( ($generated@@345 $generated@@401))
)))
(assert (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@293 (type $generated@@406))))
(let (($generated@@408 ($generated@@292 (type $generated@@406))))
 (=> (= (type $generated@@406) ($generated@@291 $generated@@408 $generated@@407)) (or (= $generated@@406 ($generated@@290 $generated@@408 $generated@@407)) (exists (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (and (and (= (type $generated@@409) $generated@@148) (= (type $generated@@410) $generated@@148)) ($generated@@0 ($generated@@81 ($generated@@356 $generated@@406) ($generated@@260 ($generated@@214 $generated@@409 $generated@@410)))))
 :no-pattern (type $generated@@409)
 :no-pattern (type $generated@@410)
 :no-pattern ($generated $generated@@409)
 :no-pattern ($generated@@0 $generated@@409)
 :no-pattern ($generated $generated@@410)
 :no-pattern ($generated@@0 $generated@@410)
))))))
 :pattern ( ($generated@@356 $generated@@406))
)))
(assert (forall (($generated@@411 T@U) ) (!  (=> (and (= (type $generated@@411) $generated@@148) ($generated@@215 $generated@@411 $generated@@46)) (and (= ($generated@@260 ($generated@@346 $generated@@2 $generated@@411)) $generated@@411) ($generated@@135 ($generated@@346 $generated@@2 $generated@@411) $generated@@46)))
 :pattern ( ($generated@@215 $generated@@411 $generated@@46))
)))
(assert (forall (($generated@@412 T@U) ) (!  (=> (and (= (type $generated@@412) $generated@@148) ($generated@@215 $generated@@412 $generated@@47)) (and (= ($generated@@260 ($generated@@346 $generated@@3 $generated@@412)) $generated@@412) ($generated@@135 ($generated@@346 $generated@@3 $generated@@412) $generated@@47)))
 :pattern ( ($generated@@215 $generated@@412 $generated@@47))
)))
(assert (forall (($generated@@413 T@U) ) (!  (=> (and (= (type $generated@@413) $generated@@148) ($generated@@215 $generated@@413 $generated@@44)) (and (= ($generated@@260 ($generated@@346 $generated@@4 $generated@@413)) $generated@@413) ($generated@@135 ($generated@@346 $generated@@4 $generated@@413) $generated@@44)))
 :pattern ( ($generated@@215 $generated@@413 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@414) 20))
(assert (forall (($generated@@415 T@U) ) (!  (=> (and (= (type $generated@@415) $generated@@148) ($generated@@215 $generated@@415 $generated@@45)) (and (= ($generated@@260 ($generated@@346 $generated@@414 $generated@@415)) $generated@@415) ($generated@@135 ($generated@@346 $generated@@414 $generated@@415) $generated@@45)))
 :pattern ( ($generated@@215 $generated@@415 $generated@@45))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (!  (=> (= (type $generated@@417) $generated@@64) (= ($generated@@215 ($generated@@260 $generated@@416) $generated@@417) ($generated@@135 $generated@@416 $generated@@417)))
 :pattern ( ($generated@@215 ($generated@@260 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@418 T@U) ) (! (let (($generated@@419 ($generated@@79 (type $generated@@418))))
 (=> (= (type $generated@@418) ($generated@@76 $generated@@419 $generated@@2)) (<= 0 ($generated@@265 $generated@@418))))
 :pattern ( ($generated@@265 $generated@@418))
)))
(assert (forall (($generated@@420 T@U) ) (! (let (($generated@@421 ($generated@@255 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@254 $generated@@421)) (<= 0 ($generated@@253 $generated@@420))))
 :pattern ( ($generated@@253 $generated@@420))
)))
(assert (forall (($generated@@423 T@U) ) (! (= (type ($generated@@422 $generated@@423)) $generated@@64)
 :pattern ( ($generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@424) $generated@@64) (= (type $generated@@425) $generated@@64)) (= ($generated@@422 ($generated@@374 $generated@@424 $generated@@425)) $generated@@424))
 :pattern ( ($generated@@374 $generated@@424 $generated@@425))
)))
(assert (forall (($generated@@427 T@U) ) (! (= (type ($generated@@426 $generated@@427)) $generated@@64)
 :pattern ( ($generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@64) (= (type $generated@@429) $generated@@64)) (= ($generated@@426 ($generated@@374 $generated@@428 $generated@@429)) $generated@@429))
 :pattern ( ($generated@@374 $generated@@428 $generated@@429))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (= (type $generated@@430) $generated@@64) (= (type $generated@@431) $generated@@64)) (= ($generated@@72 ($generated@@374 $generated@@430 $generated@@431)) $generated@@58))
 :pattern ( ($generated@@374 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@433 T@U) ) (! (= (type ($generated@@432 $generated@@433)) $generated@@64)
 :pattern ( ($generated@@432 $generated@@433))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (= (type $generated@@434) $generated@@64) (= (type $generated@@435) $generated@@64)) (= ($generated@@432 ($generated@@382 $generated@@434 $generated@@435)) $generated@@434))
 :pattern ( ($generated@@382 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ) (! (= (type ($generated@@436 $generated@@437)) $generated@@64)
 :pattern ( ($generated@@436 $generated@@437))
)))
(assert (forall (($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (= (type $generated@@438) $generated@@64) (= (type $generated@@439) $generated@@64)) (= ($generated@@436 ($generated@@382 $generated@@438 $generated@@439)) $generated@@439))
 :pattern ( ($generated@@382 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@440 T@U) ($generated@@441 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@64) (= (type $generated@@441) $generated@@64)) (= ($generated@@72 ($generated@@382 $generated@@440 $generated@@441)) $generated@@59))
 :pattern ( ($generated@@382 $generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ($generated@@443 T@U) ) (!  (=> (and (= (type $generated@@442) $generated@@148) (= (type $generated@@443) $generated@@148)) (= ($generated@@246 ($generated@@214 $generated@@442 $generated@@443)) $generated@@61))
 :pattern ( ($generated@@214 $generated@@442 $generated@@443))
)))
(assert (forall (($generated@@445 T@U) ) (! (= (type ($generated@@444 $generated@@445)) $generated@@64)
 :pattern ( ($generated@@444 $generated@@445))
)))
(assert (forall (($generated@@446 T@U) ($generated@@447 T@U) ) (!  (=> (and (= (type $generated@@446) $generated@@64) (= (type $generated@@447) $generated@@64)) (= ($generated@@444 ($generated@@138 $generated@@446 $generated@@447)) $generated@@446))
 :pattern ( ($generated@@138 $generated@@446 $generated@@447))
)))
(assert (forall (($generated@@449 T@U) ) (! (= (type ($generated@@448 $generated@@449)) $generated@@64)
 :pattern ( ($generated@@448 $generated@@449))
)))
(assert (forall (($generated@@450 T@U) ($generated@@451 T@U) ) (!  (=> (and (= (type $generated@@450) $generated@@64) (= (type $generated@@451) $generated@@64)) (= ($generated@@448 ($generated@@138 $generated@@450 $generated@@451)) $generated@@451))
 :pattern ( ($generated@@138 $generated@@450 $generated@@451))
)))
(assert (forall (($generated@@452 T@U) ($generated@@453 T@U) ) (!  (=> (and (= (type $generated@@452) $generated@@148) (= (type $generated@@453) $generated@@148)) (= ($generated@@146 ($generated@@214 $generated@@452 $generated@@453)) $generated@@452))
 :pattern ( ($generated@@214 $generated@@452 $generated@@453))
)))
(assert (forall (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@454) $generated@@148) (= (type $generated@@455) $generated@@148)) (= ($generated@@147 ($generated@@214 $generated@@454 $generated@@455)) $generated@@455))
 :pattern ( ($generated@@214 $generated@@454 $generated@@455))
)))
(assert  (and (forall (($generated@@458 T@U) ) (! (= (type ($generated@@456 $generated@@458)) $generated@@64)
 :pattern ( ($generated@@456 $generated@@458))
)) (forall (($generated@@459 T@U) ($generated@@460 Int) ) (! (let (($generated@@461 ($generated@@255 (type $generated@@459))))
(= (type ($generated@@457 $generated@@459 $generated@@460)) $generated@@461))
 :pattern ( ($generated@@457 $generated@@459 $generated@@460))
))))
(assert (forall (($generated@@462 T@U) ($generated@@463 T@U) ($generated@@464 T@U) ) (!  (=> (and (and (= (type $generated@@462) ($generated@@254 $generated@@148)) (= (type $generated@@463) $generated@@64)) (= (type $generated@@464) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@462 ($generated@@456 $generated@@463) $generated@@464) (forall (($generated@@465 Int) ) (!  (=> (and (<= 0 $generated@@465) (< $generated@@465 ($generated@@253 $generated@@462))) ($generated@@240 ($generated@@457 $generated@@462 $generated@@465) $generated@@463 $generated@@464))
 :pattern ( ($generated@@457 $generated@@462 $generated@@465))
))))
 :pattern ( ($generated@@74 $generated@@462 ($generated@@456 $generated@@463) $generated@@464))
)))
(assert (forall (($generated@@467 Int) ) (! (= ($generated@@466 ($generated@@75 $generated@@467)) $generated@@467)
 :pattern ( ($generated@@75 $generated@@467))
)))
(assert (forall (($generated@@469 T@U) ) (! (= (type ($generated@@468 $generated@@469)) $generated@@64)
 :pattern ( ($generated@@468 $generated@@469))
)))
(assert (forall (($generated@@470 T@U) ) (!  (=> (= (type $generated@@470) $generated@@64) (= ($generated@@468 ($generated@@224 $generated@@470)) $generated@@470))
 :pattern ( ($generated@@224 $generated@@470))
)))
(assert (forall (($generated@@471 T@U) ) (!  (=> (= (type $generated@@471) $generated@@64) (= ($generated@@72 ($generated@@224 $generated@@471)) $generated@@54))
 :pattern ( ($generated@@224 $generated@@471))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@64)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (!  (=> (= (type $generated@@474) $generated@@64) (= ($generated@@472 ($generated@@229 $generated@@474)) $generated@@474))
 :pattern ( ($generated@@229 $generated@@474))
)))
(assert (forall (($generated@@475 T@U) ) (!  (=> (= (type $generated@@475) $generated@@64) (= ($generated@@72 ($generated@@229 $generated@@475)) $generated@@55))
 :pattern ( ($generated@@229 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@64)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ) (!  (=> (= (type $generated@@478) $generated@@64) (= ($generated@@476 ($generated@@153 $generated@@478)) $generated@@478))
 :pattern ( ($generated@@153 $generated@@478))
)))
(assert (forall (($generated@@479 T@U) ) (!  (=> (= (type $generated@@479) $generated@@64) (= ($generated@@72 ($generated@@153 $generated@@479)) $generated@@56))
 :pattern ( ($generated@@153 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@64)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ) (!  (=> (= (type $generated@@482) $generated@@64) (= ($generated@@480 ($generated@@456 $generated@@482)) $generated@@482))
 :pattern ( ($generated@@456 $generated@@482))
)))
(assert (forall (($generated@@483 T@U) ) (!  (=> (= (type $generated@@483) $generated@@64) (= ($generated@@72 ($generated@@456 $generated@@483)) $generated@@57))
 :pattern ( ($generated@@456 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ) (! (let (($generated@@485 (type $generated@@484)))
(= ($generated@@346 $generated@@485 ($generated@@260 $generated@@484)) $generated@@484))
 :pattern ( ($generated@@260 $generated@@484))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ($generated@@488 T@U) ) (!  (=> (and (and (= (type $generated@@486) ($generated@@273 $generated@@148 $generated@@148)) (= (type $generated@@487) $generated@@64)) (= (type $generated@@488) $generated@@64)) (= ($generated@@135 $generated@@486 ($generated@@374 $generated@@487 $generated@@488)) (forall (($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@489) $generated@@148) ($generated@@0 ($generated@@81 ($generated@@271 $generated@@486) $generated@@489))) (and ($generated@@215 ($generated@@81 ($generated@@347 $generated@@486) $generated@@489) $generated@@488) ($generated@@215 $generated@@489 $generated@@487)))
 :pattern ( ($generated@@81 ($generated@@347 $generated@@486) $generated@@489))
 :pattern ( ($generated@@81 ($generated@@271 $generated@@486) $generated@@489))
))))
 :pattern ( ($generated@@135 $generated@@486 ($generated@@374 $generated@@487 $generated@@488)))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ($generated@@492 T@U) ) (!  (=> (and (and (= (type $generated@@490) ($generated@@291 $generated@@148 $generated@@148)) (= (type $generated@@491) $generated@@64)) (= (type $generated@@492) $generated@@64)) (= ($generated@@135 $generated@@490 ($generated@@382 $generated@@491 $generated@@492)) (forall (($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@493) $generated@@148) ($generated@@0 ($generated@@81 ($generated@@289 $generated@@490) $generated@@493))) (and ($generated@@215 ($generated@@81 ($generated@@357 $generated@@490) $generated@@493) $generated@@492) ($generated@@215 $generated@@493 $generated@@491)))
 :pattern ( ($generated@@81 ($generated@@357 $generated@@490) $generated@@493))
 :pattern ( ($generated@@81 ($generated@@289 $generated@@490) $generated@@493))
))))
 :pattern ( ($generated@@135 $generated@@490 ($generated@@382 $generated@@491 $generated@@492)))
)))
(assert (= $generated@@132 ($generated@@234 50)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@148) (= (type $generated@@497) $generated@@148)) (< ($generated@@494 $generated@@496) ($generated@@495 ($generated@@214 $generated@@496 $generated@@497))))
 :pattern ( ($generated@@214 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@148) (= (type $generated@@499) $generated@@148)) (< ($generated@@494 $generated@@499) ($generated@@495 ($generated@@214 $generated@@498 $generated@@499))))
 :pattern ( ($generated@@214 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ($generated@@502 T@U) ) (!  (=> (and (and (and (= (type $generated@@500) $generated@@148) (= (type $generated@@501) $generated@@64)) (= (type $generated@@502) $generated@@64)) ($generated@@215 $generated@@500 ($generated@@374 $generated@@501 $generated@@502))) (and (= ($generated@@260 ($generated@@346 ($generated@@273 $generated@@148 $generated@@148) $generated@@500)) $generated@@500) ($generated@@135 ($generated@@346 ($generated@@273 $generated@@148 $generated@@148) $generated@@500) ($generated@@374 $generated@@501 $generated@@502))))
 :pattern ( ($generated@@215 $generated@@500 ($generated@@374 $generated@@501 $generated@@502)))
)))
(assert (forall (($generated@@503 T@U) ($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (and (and (= (type $generated@@503) $generated@@148) (= (type $generated@@504) $generated@@64)) (= (type $generated@@505) $generated@@64)) ($generated@@215 $generated@@503 ($generated@@382 $generated@@504 $generated@@505))) (and (= ($generated@@260 ($generated@@346 ($generated@@291 $generated@@148 $generated@@148) $generated@@503)) $generated@@503) ($generated@@135 ($generated@@346 ($generated@@291 $generated@@148 $generated@@148) $generated@@503) ($generated@@382 $generated@@504 $generated@@505))))
 :pattern ( ($generated@@215 $generated@@503 ($generated@@382 $generated@@504 $generated@@505)))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (and (= (type $generated@@506) $generated@@64) (= (type $generated@@507) $generated@@64)) (= (type $generated@@508) $generated@@148)) ($generated@@215 $generated@@508 ($generated@@138 $generated@@506 $generated@@507))) (and (= ($generated@@260 ($generated@@346 $generated@@139 $generated@@508)) $generated@@508) ($generated@@135 ($generated@@346 $generated@@139 $generated@@508) ($generated@@138 $generated@@506 $generated@@507))))
 :pattern ( ($generated@@215 $generated@@508 ($generated@@138 $generated@@506 $generated@@507)))
)))
(assert (forall (($generated@@509 T@U) ) (! (let (($generated@@510 (type $generated@@509)))
 (not ($generated@@0 ($generated@@81 ($generated@@390 $generated@@510) $generated@@509))))
 :pattern ( (let (($generated@@510 (type $generated@@509)))
($generated@@81 ($generated@@390 $generated@@510) $generated@@509)))
)))
(assert (forall (($generated@@512 T@U) ) (! (= (type ($generated@@511 $generated@@512)) $generated@@69)
 :pattern ( ($generated@@511 $generated@@512))
)))
(assert (forall (($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (= (type $generated@@513) $generated@@64) (= (type $generated@@514) $generated@@64)) (and (= ($generated@@72 ($generated@@138 $generated@@513 $generated@@514)) $generated@@62) (= ($generated@@511 ($generated@@138 $generated@@513 $generated@@514)) $generated@@63)))
 :pattern ( ($generated@@138 $generated@@513 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@139) (= ($generated@@494 ($generated@@260 $generated@@515)) ($generated@@495 $generated@@515)))
 :pattern ( ($generated@@494 ($generated@@260 $generated@@515)))
)))
(assert (forall (($generated@@516 T@U) ) (!  (=> (and (= (type $generated@@516) $generated@@148) ($generated@@215 $generated@@516 ($generated@@75 0))) (and (= ($generated@@260 ($generated@@346 $generated@@2 $generated@@516)) $generated@@516) ($generated@@135 ($generated@@346 ($generated@@76 $generated@@148 $generated@@4) $generated@@516) ($generated@@75 0))))
 :pattern ( ($generated@@215 $generated@@516 ($generated@@75 0)))
)))
(assert (forall (($generated@@517 T@U) ($generated@@518 T@U) ) (!  (=> (and (and (= (type $generated@@517) $generated@@148) (= (type $generated@@518) $generated@@64)) ($generated@@215 $generated@@517 ($generated@@224 $generated@@518))) (and (= ($generated@@260 ($generated@@346 ($generated@@76 $generated@@148 $generated@@4) $generated@@517)) $generated@@517) ($generated@@135 ($generated@@346 ($generated@@76 $generated@@148 $generated@@4) $generated@@517) ($generated@@224 $generated@@518))))
 :pattern ( ($generated@@215 $generated@@517 ($generated@@224 $generated@@518)))
)))
(assert (forall (($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@519) $generated@@148) (= (type $generated@@520) $generated@@64)) ($generated@@215 $generated@@519 ($generated@@229 $generated@@520))) (and (= ($generated@@260 ($generated@@346 ($generated@@76 $generated@@148 $generated@@4) $generated@@519)) $generated@@519) ($generated@@135 ($generated@@346 ($generated@@76 $generated@@148 $generated@@4) $generated@@519) ($generated@@229 $generated@@520))))
 :pattern ( ($generated@@215 $generated@@519 ($generated@@229 $generated@@520)))
)))
(assert (forall (($generated@@521 T@U) ($generated@@522 T@U) ) (!  (=> (and (and (= (type $generated@@521) $generated@@148) (= (type $generated@@522) $generated@@64)) ($generated@@215 $generated@@521 ($generated@@153 $generated@@522))) (and (= ($generated@@260 ($generated@@346 ($generated@@76 $generated@@148 $generated@@2) $generated@@521)) $generated@@521) ($generated@@135 ($generated@@346 ($generated@@76 $generated@@148 $generated@@2) $generated@@521) ($generated@@153 $generated@@522))))
 :pattern ( ($generated@@215 $generated@@521 ($generated@@153 $generated@@522)))
)))
(assert (forall (($generated@@523 T@U) ($generated@@524 T@U) ) (!  (=> (and (and (= (type $generated@@523) $generated@@148) (= (type $generated@@524) $generated@@64)) ($generated@@215 $generated@@523 ($generated@@456 $generated@@524))) (and (= ($generated@@260 ($generated@@346 ($generated@@254 $generated@@148) $generated@@523)) $generated@@523) ($generated@@135 ($generated@@346 ($generated@@254 $generated@@148) $generated@@523) ($generated@@456 $generated@@524))))
 :pattern ( ($generated@@215 $generated@@523 ($generated@@456 $generated@@524)))
)))
(assert (forall (($generated@@525 T@U) ($generated@@526 T@U) ($generated@@527 T@U) ) (!  (=> (and (and (= (type $generated@@525) ($generated@@76 $generated@@148 $generated@@2)) (= (type $generated@@526) $generated@@64)) (= (type $generated@@527) ($generated@@76 $generated@@77 $generated@@78))) (= ($generated@@74 $generated@@525 ($generated@@153 $generated@@526) $generated@@527) (forall (($generated@@528 T@U) ) (!  (=> (and (= (type $generated@@528) $generated@@148) (< 0 ($generated ($generated@@81 $generated@@525 $generated@@528)))) ($generated@@240 $generated@@528 $generated@@526 $generated@@527))
 :pattern ( ($generated@@81 $generated@@525 $generated@@528))
))))
 :pattern ( ($generated@@74 $generated@@525 ($generated@@153 $generated@@526) $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ($generated@@530 T@U) ($generated@@531 T@U) ) (!  (=> (and (and (and (= (type $generated@@529) $generated@@139) (= (type $generated@@530) $generated@@64)) (= (type $generated@@531) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@133 $generated@@531) (and ($generated@@137 $generated@@529) (exists (($generated@@532 T@U) ) (!  (and (= (type $generated@@532) $generated@@64) ($generated@@74 $generated@@529 ($generated@@138 $generated@@530 $generated@@532) $generated@@531))
 :pattern ( ($generated@@74 $generated@@529 ($generated@@138 $generated@@530 $generated@@532) $generated@@531))
))))) ($generated@@240 ($generated@@146 $generated@@529) $generated@@530 $generated@@531))
 :pattern ( ($generated@@240 ($generated@@146 $generated@@529) $generated@@530 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ($generated@@534 T@U) ($generated@@535 T@U) ) (!  (=> (and (and (and (= (type $generated@@533) $generated@@139) (= (type $generated@@534) $generated@@64)) (= (type $generated@@535) ($generated@@76 $generated@@77 $generated@@78))) (and ($generated@@133 $generated@@535) (and ($generated@@137 $generated@@533) (exists (($generated@@536 T@U) ) (!  (and (= (type $generated@@536) $generated@@64) ($generated@@74 $generated@@533 ($generated@@138 $generated@@536 $generated@@534) $generated@@535))
 :pattern ( ($generated@@74 $generated@@533 ($generated@@138 $generated@@536 $generated@@534) $generated@@535))
))))) ($generated@@240 ($generated@@147 $generated@@533) $generated@@534 $generated@@535))
 :pattern ( ($generated@@240 ($generated@@147 $generated@@533) $generated@@534 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@148) (= (type $generated@@538) $generated@@148)) (= ($generated@@214 ($generated@@236 $generated@@537) ($generated@@236 $generated@@538)) ($generated@@236 ($generated@@214 $generated@@537 $generated@@538))))
 :pattern ( ($generated@@214 ($generated@@236 $generated@@537) ($generated@@236 $generated@@538)))
)))
(assert (forall (($generated@@539 Int) ) (! (= ($generated@@260 ($generated@@8 ($generated@@234 $generated@@539))) ($generated@@236 ($generated@@260 ($generated@@8 $generated@@539))))
 :pattern ( ($generated@@260 ($generated@@8 ($generated@@234 $generated@@539))))
)))
(assert (forall (($generated@@540 T@U) ) (! (= ($generated@@260 ($generated@@236 $generated@@540)) ($generated@@236 ($generated@@260 $generated@@540)))
 :pattern ( ($generated@@260 ($generated@@236 $generated@@540)))
)))
(assert (forall (($generated@@541 T@U) ) (! (let (($generated@@542 ($generated@@255 (type $generated@@541))))
 (=> (and (= (type $generated@@541) ($generated@@254 $generated@@542)) (= ($generated@@253 $generated@@541) 0)) (= $generated@@541 ($generated@@252 $generated@@542))))
 :pattern ( ($generated@@253 $generated@@541))
)))
(assert (forall (($generated@@543 T@U) ($generated@@544 T@U) ($generated@@545 T@U) ) (! (let (($generated@@546 (type $generated@@544)))
 (=> (and (and (= (type $generated@@543) ($generated@@76 $generated@@546 $generated@@2)) (= (type $generated@@545) $generated@@2)) (<= 0 ($generated $generated@@545))) (= ($generated@@265 ($generated@@82 $generated@@543 $generated@@544 $generated@@545)) (+ (- ($generated@@265 $generated@@543) ($generated ($generated@@81 $generated@@543 $generated@@544))) ($generated $generated@@545)))))
 :pattern ( ($generated@@265 ($generated@@82 $generated@@543 $generated@@544 $generated@@545)))
)))
(assert (forall (($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (= (type $generated@@547) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@548) $generated@@2)) ($generated@@74 $generated@@548 $generated@@46 $generated@@547))
 :pattern ( ($generated@@74 $generated@@548 $generated@@46 $generated@@547))
)))
(assert (forall (($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (= (type $generated@@549) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@550) $generated@@3)) ($generated@@74 $generated@@550 $generated@@47 $generated@@549))
 :pattern ( ($generated@@74 $generated@@550 $generated@@47 $generated@@549))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (= (type $generated@@551) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@552) $generated@@4)) ($generated@@74 $generated@@552 $generated@@44 $generated@@551))
 :pattern ( ($generated@@74 $generated@@552 $generated@@44 $generated@@551))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ) (!  (=> (and (= (type $generated@@553) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@554) $generated@@414)) ($generated@@74 $generated@@554 $generated@@45 $generated@@553))
 :pattern ( ($generated@@74 $generated@@554 $generated@@45 $generated@@553))
)))
(assert (forall (($generated@@555 T@U) ($generated@@556 T@U) ) (!  (=> (and (= (type $generated@@555) ($generated@@76 $generated@@77 $generated@@78)) (= (type $generated@@556) $generated@@148)) ($generated@@74 $generated@@556 $generated@@48 $generated@@555))
 :pattern ( ($generated@@74 $generated@@556 $generated@@48 $generated@@555))
)))
(assert (forall (($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (= (type $generated@@557) ($generated@@254 $generated@@148)) (= (type $generated@@558) $generated@@64)) (= ($generated@@135 $generated@@557 ($generated@@456 $generated@@558)) (forall (($generated@@559 Int) ) (!  (=> (and (<= 0 $generated@@559) (< $generated@@559 ($generated@@253 $generated@@557))) ($generated@@215 ($generated@@457 $generated@@557 $generated@@559) $generated@@558))
 :pattern ( ($generated@@457 $generated@@557 $generated@@559))
))))
 :pattern ( ($generated@@135 $generated@@557 ($generated@@456 $generated@@558)))
)))
(assert (forall (($generated@@561 T@U) ($generated@@562 Int) ) (!  (=> (= (type $generated@@561) ($generated@@254 $generated@@148)) (=> (and (<= 0 $generated@@562) (< $generated@@562 ($generated@@253 $generated@@561))) (< ($generated@@495 ($generated@@346 $generated@@139 ($generated@@457 $generated@@561 $generated@@562))) ($generated@@560 $generated@@561))))
 :pattern ( ($generated@@495 ($generated@@346 $generated@@139 ($generated@@457 $generated@@561 $generated@@562))))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) ($generated@@273 $generated@@148 $generated@@148)) (= (type $generated@@564) $generated@@64)) (= (type $generated@@565) $generated@@64)) ($generated@@135 $generated@@563 ($generated@@374 $generated@@564 $generated@@565))) (and (and ($generated@@135 ($generated@@271 $generated@@563) ($generated@@224 $generated@@564)) ($generated@@135 ($generated@@314 $generated@@563) ($generated@@224 $generated@@565))) ($generated@@135 ($generated@@345 $generated@@563) ($generated@@224 ($generated@@138 $generated@@564 $generated@@565)))))
 :pattern ( ($generated@@135 $generated@@563 ($generated@@374 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) ($generated@@291 $generated@@148 $generated@@148)) (= (type $generated@@567) $generated@@64)) (= (type $generated@@568) $generated@@64)) ($generated@@135 $generated@@566 ($generated@@382 $generated@@567 $generated@@568))) (and (and ($generated@@135 ($generated@@289 $generated@@566) ($generated@@229 $generated@@567)) ($generated@@135 ($generated@@325 $generated@@566) ($generated@@229 $generated@@568))) ($generated@@135 ($generated@@356 $generated@@566) ($generated@@229 ($generated@@138 $generated@@567 $generated@@568)))))
 :pattern ( ($generated@@135 $generated@@566 ($generated@@382 $generated@@567 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ) (!  (=> (= (type $generated@@569) $generated@@2) ($generated@@135 $generated@@569 $generated@@46))
 :pattern ( ($generated@@135 $generated@@569 $generated@@46))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (= (type $generated@@570) $generated@@3) ($generated@@135 $generated@@570 $generated@@47))
 :pattern ( ($generated@@135 $generated@@570 $generated@@47))
)))
(assert (forall (($generated@@571 T@U) ) (!  (=> (= (type $generated@@571) $generated@@4) ($generated@@135 $generated@@571 $generated@@44))
 :pattern ( ($generated@@135 $generated@@571 $generated@@44))
)))
(assert (forall (($generated@@572 T@U) ) (!  (=> (= (type $generated@@572) $generated@@414) ($generated@@135 $generated@@572 $generated@@45))
 :pattern ( ($generated@@135 $generated@@572 $generated@@45))
)))
(assert (forall (($generated@@573 T@U) ) (!  (=> (= (type $generated@@573) $generated@@148) ($generated@@135 $generated@@573 $generated@@48))
 :pattern ( ($generated@@135 $generated@@573 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@574 () T@U)
(declare-fun $generated@@575 () T@U)
(declare-fun $generated@@576 () T@U)
(declare-fun $generated@@577 (T@U) Bool)
(declare-fun $generated@@578 () Int)
(assert  (and (and (= (type $generated@@574) ($generated@@160 $generated@@77 $generated@@4)) (= (type $generated@@575) $generated@@77)) (= (type $generated@@576) ($generated@@76 $generated@@77 $generated@@78))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@579  (=> (and (= $generated@@574 ($generated@@159 $generated@@575 $generated@@576 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (= $generated@@132 ($generated@@234 50)))))
(let (($generated@@580  (=> (and (and ($generated@@133 $generated@@576) ($generated@@577 $generated@@576)) (and (= 0 $generated@@578) (= (ControlFlow 0 3) 2))) $generated@@579)))
$generated@@580)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
