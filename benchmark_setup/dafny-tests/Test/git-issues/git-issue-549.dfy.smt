(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 ((_ BitVec 8)) T@U)
(declare-fun $generated@@140 (T@U) (_ BitVec 8))
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@165 (T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@185 (T@T T@T) T@T)
(declare-fun $generated@@186 (T@T) T@T)
(declare-fun $generated@@187 (T@T) T@T)
(declare-fun $generated@@188 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@244 (T@U T@U) T@U)
(declare-fun $generated@@245 (T@U T@U) Bool)
(declare-fun $generated@@252 () Int)
(declare-fun $generated@@253 (T@U) (_ BitVec 8))
(declare-fun $generated@@254 (T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(declare-fun $generated@@266 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Bool)
(declare-fun $generated@@273 (T@U T@U T@U) Bool)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@286 (T@T) T@U)
(declare-fun $generated@@287 (T@U) Int)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@289 (T@T) T@T)
(declare-fun $generated@@295 (T@U) (_ BitVec 8))
(declare-fun $generated@@296 (T@U) Bool)
(declare-fun $generated@@298 (T@U) T@U)
(declare-fun $generated@@303 (T@U) Int)
(declare-fun $generated@@304 (T@T) T@U)
(declare-fun $generated@@309 (T@U) T@U)
(declare-fun $generated@@310 (T@T T@T) T@U)
(declare-fun $generated@@311 (T@T T@T) T@T)
(declare-fun $generated@@312 (T@T) T@T)
(declare-fun $generated@@313 (T@T) T@T)
(declare-fun $generated@@327 (T@U) T@U)
(declare-fun $generated@@328 (T@T T@T) T@U)
(declare-fun $generated@@329 (T@T T@T) T@T)
(declare-fun $generated@@330 (T@T) T@T)
(declare-fun $generated@@331 (T@T) T@T)
(declare-fun $generated@@348 (T@T T@U) T@U)
(declare-fun $generated@@361 (T@U) T@U)
(declare-fun $generated@@372 (T@U) T@U)
(declare-fun $generated@@392 (T@U) T@U)
(declare-fun $generated@@393 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@401 (T@U) T@U)
(declare-fun $generated@@418 (T@U T@U) T@U)
(declare-fun $generated@@426 (T@U T@U) T@U)
(declare-fun $generated@@434 (T@T) T@U)
(declare-fun $generated@@458 () T@T)
(declare-fun $generated@@466 (T@U) T@U)
(declare-fun $generated@@470 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@480 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@501 (T@U Int) T@U)
(declare-fun $generated@@510 (T@U) Int)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@516 (T@U) T@U)
(declare-fun $generated@@520 (T@U) T@U)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@538 (T@U) Int)
(declare-fun $generated@@539 (T@U) Int)
(declare-fun $generated@@556 (T@U) T@U)
(declare-fun $generated@@608 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (and (and (forall (($generated@@141 (_ BitVec 8)) ) (! (= ($generated@@140 ($generated@@139 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@139 $generated@@141))
)) (= ($generated@@1 $generated@@138) 14)) (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@138) (= ($generated@@139 ($generated@@140 $generated@@142)) $generated@@142))
 :pattern ( ($generated@@140 $generated@@142))
))) (forall (($generated@@143 (_ BitVec 8)) ) (! (= (type ($generated@@139 $generated@@143)) $generated@@138)
 :pattern ( ($generated@@139 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@138) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@144 ($generated@@81 8) $generated@@145))
 :pattern ( ($generated@@80 $generated@@144 ($generated@@81 8) $generated@@145))
)))
(assert  (and (= (type $generated@@146) $generated@@70) (= (type $generated@@147) $generated@@83)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@148) $generated@@83) (= (type $generated@@149) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@148 $generated@@146 $generated@@149)  (or (= $generated@@148 $generated@@147) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@149 $generated@@148) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@148 $generated@@146 $generated@@149))
)))
(assert (= (type $generated@@150) $generated@@70))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (= (type $generated@@151) $generated@@83) (= (type $generated@@152) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@151 $generated@@150 $generated@@152)  (or (= $generated@@151 $generated@@147) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@152 $generated@@151) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@151 $generated@@150 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> (= (type $generated@@154) $generated@@2) ($generated@@153 $generated@@154 ($generated@@81 0)))
 :pattern ( ($generated@@153 $generated@@154 ($generated@@81 0)))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> (= (type $generated@@155) $generated@@138) ($generated@@153 $generated@@155 ($generated@@81 8)))
 :pattern ( ($generated@@153 $generated@@155 ($generated@@81 8)))
)))
(assert ($generated@@156 $generated@@150))
(assert  (and (= ($generated@@1 $generated@@159) 15) (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= (type ($generated@@158 $generated@@160 $generated@@161)) $generated@@70)
 :pattern ( ($generated@@158 $generated@@160 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and (and (= (type $generated@@162) $generated@@70) (= (type $generated@@163) $generated@@70)) (= (type $generated@@164) $generated@@159)) ($generated@@153 $generated@@164 ($generated@@158 $generated@@162 $generated@@163))) ($generated@@157 $generated@@164))
 :pattern ( ($generated@@157 $generated@@164) ($generated@@153 $generated@@164 ($generated@@158 $generated@@162 $generated@@163)))
)))
(assert  (and (and (= ($generated@@1 $generated@@168) 16) (forall (($generated@@169 T@U) ) (! (= (type ($generated@@166 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@166 $generated@@169))
))) (forall (($generated@@170 T@U) ) (! (= (type ($generated@@167 $generated@@170)) $generated@@168)
 :pattern ( ($generated@@167 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (= (type $generated@@171) $generated@@159) (= (type $generated@@172) $generated@@159)) true) (= ($generated@@165 $generated@@171 $generated@@172)  (and (= ($generated@@166 $generated@@171) ($generated@@166 $generated@@172)) (= ($generated@@167 $generated@@171) ($generated@@167 $generated@@172)))))
 :pattern ( ($generated@@165 $generated@@171 $generated@@172))
)))
(assert (= (type $generated@@173) $generated@@70))
(assert (forall (($generated@@174 T@U) ) (!  (=> (= (type $generated@@174) $generated@@83) (=> (and (not (= $generated@@174 $generated@@147)) ($generated@@153 $generated@@174 $generated@@150)) ($generated@@153 $generated@@174 $generated@@173)))
 :pattern ( ($generated@@153 $generated@@174 $generated@@150))
)))
(assert (forall (($generated@@177 T@U) ) (! (= (type ($generated@@175 $generated@@177)) $generated@@70)
 :pattern ( ($generated@@175 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and (and (= (type $generated@@178) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@179) $generated@@70)) ($generated@@153 $generated@@178 ($generated@@175 $generated@@179))) ($generated@@176 $generated@@178))
 :pattern ( ($generated@@153 $generated@@178 ($generated@@175 $generated@@179)))
)))
(assert (forall (($generated@@181 T@U) ) (! (= (type ($generated@@180 $generated@@181)) $generated@@70)
 :pattern ( ($generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ) (!  (=> (= (type $generated@@182) $generated@@83) (= ($generated@@153 $generated@@182 $generated@@150)  (or (= $generated@@182 $generated@@147) (= ($generated@@180 $generated@@182) $generated@@150))))
 :pattern ( ($generated@@153 $generated@@182 $generated@@150))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@1 ($generated@@185 $generated@@189 $generated@@190)) 17)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@186 ($generated@@185 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@185 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@187 ($generated@@185 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@185 $generated@@193 $generated@@194))
))) (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 ($generated@@187 (type $generated@@195))))
(= (type ($generated@@183 $generated@@195 $generated@@196 $generated@@197)) $generated@@198))
 :pattern ( ($generated@@183 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (let (($generated@@203 (type $generated@@202)))
(let (($generated@@204 (type $generated@@200)))
(= (type ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202)) ($generated@@185 $generated@@204 $generated@@203))))
 :pattern ( ($generated@@188 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
))) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (let (($generated@@209 ($generated@@187 (type $generated@@205))))
 (=> (= (type $generated@@208) $generated@@209) (= ($generated@@183 ($generated@@188 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@206 $generated@@207) $generated@@208)))
 :weight 0
))) (and (and (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@183 ($generated@@188 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@183 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (or (= $generated@@219 $generated@@221) (= ($generated@@183 ($generated@@188 $generated@@217 $generated@@218 $generated@@219 $generated@@216) $generated@@220 $generated@@221) ($generated@@183 $generated@@217 $generated@@220 $generated@@221)))
 :weight 0
))) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or true (= ($generated@@183 ($generated@@188 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@183 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)))) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 Bool) ) (! (= (type ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231)) ($generated@@185 $generated@@83 $generated@@4))
 :pattern ( ($generated@@184 $generated@@228 $generated@@229 $generated@@230 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (let (($generated@@238 ($generated@@73 (type $generated@@237))))
 (=> (and (and (and (and (= (type $generated@@232) $generated@@83) (= (type $generated@@233) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@234) ($generated@@72 $generated@@4))) (= (type $generated@@236) $generated@@83)) (= (type $generated@@237) ($generated@@72 $generated@@238))) (= ($generated@@0 ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))  (=> (and (not (= $generated@@236 $generated@@232)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@233 $generated@@236) $generated@@234))) $generated@@235))))
 :pattern ( ($generated@@183 ($generated@@184 $generated@@232 $generated@@233 $generated@@234 $generated@@235) $generated@@236 $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (= (type $generated@@239) $generated@@83) (= (type $generated@@240) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@239 $generated@@173 $generated@@240) ($generated@@80 $generated@@239 $generated@@146 $generated@@240)))
 :pattern ( ($generated@@80 $generated@@239 $generated@@173 $generated@@240))
)))
(assert (= (type $generated@@241) $generated@@70))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and (= (type $generated@@242) $generated@@83) (= (type $generated@@243) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@242 $generated@@241 $generated@@243) ($generated@@80 $generated@@242 $generated@@150 $generated@@243)))
 :pattern ( ($generated@@80 $generated@@242 $generated@@241 $generated@@243))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (! (= (type ($generated@@244 $generated@@246 $generated@@247)) $generated@@159)
 :pattern ( ($generated@@244 $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and (and (and (= (type $generated@@248) $generated@@70) (= (type $generated@@249) $generated@@70)) (= (type $generated@@250) $generated@@168)) (= (type $generated@@251) $generated@@168)) (= ($generated@@153 ($generated@@244 $generated@@250 $generated@@251) ($generated@@158 $generated@@248 $generated@@249))  (and ($generated@@245 $generated@@250 $generated@@248) ($generated@@245 $generated@@251 $generated@@249))))
 :pattern ( ($generated@@153 ($generated@@244 $generated@@250 $generated@@251) ($generated@@158 $generated@@248 $generated@@249)))
)))
(assert (forall (($generated@@256 T@U) ) (! (let (($generated@@257 (type $generated@@256)))
(= (type ($generated@@255 $generated@@256)) $generated@@257))
 :pattern ( ($generated@@255 $generated@@256))
)))
(assert  (=> (<= 0 $generated@@252) (forall (($generated@@258 T@U) ) (!  (=> (and (= (type $generated@@258) $generated@@83) (or ($generated@@254 $generated@@258) (and (not (= 0 $generated@@252)) (and (not (= $generated@@258 $generated@@147)) ($generated@@153 $generated@@258 $generated@@241))))) (= ($generated@@253 $generated@@258) ($generated@@140 ($generated@@255 ($generated@@139 #x01)))))
 :pattern ( ($generated@@253 $generated@@258))
))))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> (and (= (type $generated@@259) $generated@@159) (= (type $generated@@260) $generated@@159)) (= ($generated@@165 $generated@@259 $generated@@260) (= $generated@@259 $generated@@260)))
 :pattern ( ($generated@@165 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ) (! (= (type ($generated@@261 $generated@@262)) $generated@@70)
 :pattern ( ($generated@@261 $generated@@262))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and (= (type $generated@@263) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@264) $generated@@70)) (= ($generated@@153 $generated@@263 ($generated@@261 $generated@@264)) (forall (($generated@@265 T@U) ) (!  (=> (and (= (type $generated@@265) $generated@@168) ($generated@@0 ($generated@@87 $generated@@263 $generated@@265))) ($generated@@245 $generated@@265 $generated@@264))
 :pattern ( ($generated@@87 $generated@@263 $generated@@265))
))))
 :pattern ( ($generated@@153 $generated@@263 ($generated@@261 $generated@@264)))
)))
(assert (forall (($generated@@267 T@U) ) (! (= (type ($generated@@266 $generated@@267)) $generated@@70)
 :pattern ( ($generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and (= (type $generated@@268) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@269) $generated@@70)) (= ($generated@@153 $generated@@268 ($generated@@266 $generated@@269)) (forall (($generated@@270 T@U) ) (!  (=> (and (= (type $generated@@270) $generated@@168) ($generated@@0 ($generated@@87 $generated@@268 $generated@@270))) ($generated@@245 $generated@@270 $generated@@269))
 :pattern ( ($generated@@87 $generated@@268 $generated@@270))
))))
 :pattern ( ($generated@@153 $generated@@268 ($generated@@266 $generated@@269)))
)))
(assert (forall (($generated@@271 T@U) ) (! (= ($generated@@255 $generated@@271) $generated@@271)
 :pattern ( ($generated@@255 $generated@@271))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@274) $generated@@70) (= (type $generated@@275) $generated@@70)) (= (type $generated@@276) $generated@@168)) (= (type $generated@@277) $generated@@168)) (= (type $generated@@278) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@272 $generated@@278)) (= ($generated@@80 ($generated@@244 $generated@@276 $generated@@277) ($generated@@158 $generated@@274 $generated@@275) $generated@@278)  (and ($generated@@273 $generated@@276 $generated@@274 $generated@@278) ($generated@@273 $generated@@277 $generated@@275 $generated@@278))))
 :pattern ( ($generated@@80 ($generated@@244 $generated@@276 $generated@@277) ($generated@@158 $generated@@274 $generated@@275) $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@74)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@159) (= ($generated@@157 $generated@@281) (= ($generated@@279 $generated@@281) $generated@@61)))
 :pattern ( ($generated@@157 $generated@@281))
)))
(assert  (=> (<= 0 $generated@@252) (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@83) (or ($generated@@254 ($generated@@255 $generated@@282)) (and (not (= 0 $generated@@252)) (and (not (= $generated@@282 $generated@@147)) ($generated@@153 $generated@@282 $generated@@241))))) (= ($generated@@253 ($generated@@255 $generated@@282)) ($generated@@140 ($generated@@255 ($generated@@139 #x01)))))
 :weight 3
 :pattern ( ($generated@@253 ($generated@@255 $generated@@282)))
))))
(assert (forall (($generated@@283 T@U) ) (!  (=> (and (= (type $generated@@283) $generated@@159) ($generated@@157 $generated@@283)) (exists (($generated@@284 T@U) ($generated@@285 T@U) ) (!  (and (and (= (type $generated@@284) $generated@@168) (= (type $generated@@285) $generated@@168)) (= $generated@@283 ($generated@@244 $generated@@284 $generated@@285)))
 :no-pattern (type $generated@@284)
 :no-pattern (type $generated@@285)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
 :no-pattern ($generated $generated@@285)
 :no-pattern ($generated@@0 $generated@@285)
)))
 :pattern ( ($generated@@157 $generated@@283))
)))
(assert  (and (and (forall (($generated@@290 T@T) ) (= ($generated@@1 ($generated@@288 $generated@@290)) 18)) (forall (($generated@@291 T@T) ) (! (= ($generated@@289 ($generated@@288 $generated@@291)) $generated@@291)
 :pattern ( ($generated@@288 $generated@@291))
))) (forall (($generated@@292 T@T) ) (! (= (type ($generated@@286 $generated@@292)) ($generated@@288 $generated@@292))
 :pattern ( ($generated@@286 $generated@@292))
))))
(assert (forall (($generated@@293 T@T) ) (! (= ($generated@@287 ($generated@@286 $generated@@293)) 0)
 :pattern ( ($generated@@286 $generated@@293))
)))
(assert  (=> (<= 0 $generated@@252) (forall (($generated@@294 T@U) ) (!  (=> (and (= (type $generated@@294) $generated@@83) (or ($generated@@254 $generated@@294) (and (not (= 0 $generated@@252)) (and (not (= $generated@@294 $generated@@147)) ($generated@@153 $generated@@294 $generated@@241))))) true)
 :pattern ( ($generated@@253 $generated@@294))
))))
(assert  (=> (<= 1 $generated@@252) (forall (($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@297) $generated@@83) (or ($generated@@296 $generated@@297) (and (not (= 1 $generated@@252)) (and (not (= $generated@@297 $generated@@147)) ($generated@@153 $generated@@297 $generated@@173))))) true)
 :pattern ( ($generated@@295 $generated@@297))
))))
(assert (forall (($generated@@299 T@U) ) (! (= (type ($generated@@298 $generated@@299)) $generated@@168)
 :pattern ( ($generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ) (!  (=> (and (= (type $generated@@301) $generated@@70) (= (type $generated@@302) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@273 ($generated@@298 $generated@@300) $generated@@301 $generated@@302) ($generated@@80 $generated@@300 $generated@@301 $generated@@302)))
 :pattern ( ($generated@@273 ($generated@@298 $generated@@300) $generated@@301 $generated@@302))
)))
(assert (forall (($generated@@305 T@T) ) (! (= (type ($generated@@304 $generated@@305)) ($generated@@82 $generated@@305 $generated@@2))
 :pattern ( ($generated@@304 $generated@@305))
)))
(assert (forall (($generated@@306 T@U) ) (! (let (($generated@@307 ($generated@@85 (type $generated@@306))))
 (=> (= (type $generated@@306) ($generated@@82 $generated@@307 $generated@@2)) (and (= (= ($generated@@303 $generated@@306) 0) (= $generated@@306 ($generated@@304 $generated@@307))) (=> (not (= ($generated@@303 $generated@@306) 0)) (exists (($generated@@308 T@U) ) (!  (and (= (type $generated@@308) $generated@@307) (< 0 ($generated ($generated@@87 $generated@@306 $generated@@308))))
 :no-pattern (type $generated@@308)
 :no-pattern ($generated $generated@@308)
 :no-pattern ($generated@@0 $generated@@308)
))))))
 :pattern ( ($generated@@303 $generated@@306))
)))
(assert  (and (and (and (and (forall (($generated@@314 T@T) ($generated@@315 T@T) ) (= ($generated@@1 ($generated@@311 $generated@@314 $generated@@315)) 19)) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (! (= ($generated@@312 ($generated@@311 $generated@@316 $generated@@317)) $generated@@316)
 :pattern ( ($generated@@311 $generated@@316 $generated@@317))
))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@313 ($generated@@311 $generated@@318 $generated@@319)) $generated@@319)
 :pattern ( ($generated@@311 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@U) ) (! (let (($generated@@321 ($generated@@312 (type $generated@@320))))
(= (type ($generated@@309 $generated@@320)) ($generated@@82 $generated@@321 $generated@@4)))
 :pattern ( ($generated@@309 $generated@@320))
))) (forall (($generated@@322 T@T) ($generated@@323 T@T) ) (! (= (type ($generated@@310 $generated@@322 $generated@@323)) ($generated@@311 $generated@@322 $generated@@323))
 :pattern ( ($generated@@310 $generated@@322 $generated@@323))
))))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@T) ) (! (let (($generated@@326 (type $generated@@324)))
 (not ($generated@@0 ($generated@@87 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324))))
 :pattern ( (let (($generated@@326 (type $generated@@324)))
($generated@@87 ($generated@@309 ($generated@@310 $generated@@326 $generated@@325)) $generated@@324)))
)))
(assert  (and (and (and (and (forall (($generated@@332 T@T) ($generated@@333 T@T) ) (= ($generated@@1 ($generated@@329 $generated@@332 $generated@@333)) 20)) (forall (($generated@@334 T@T) ($generated@@335 T@T) ) (! (= ($generated@@330 ($generated@@329 $generated@@334 $generated@@335)) $generated@@334)
 :pattern ( ($generated@@329 $generated@@334 $generated@@335))
))) (forall (($generated@@336 T@T) ($generated@@337 T@T) ) (! (= ($generated@@331 ($generated@@329 $generated@@336 $generated@@337)) $generated@@337)
 :pattern ( ($generated@@329 $generated@@336 $generated@@337))
))) (forall (($generated@@338 T@U) ) (! (let (($generated@@339 ($generated@@330 (type $generated@@338))))
(= (type ($generated@@327 $generated@@338)) ($generated@@82 $generated@@339 $generated@@4)))
 :pattern ( ($generated@@327 $generated@@338))
))) (forall (($generated@@340 T@T) ($generated@@341 T@T) ) (! (= (type ($generated@@328 $generated@@340 $generated@@341)) ($generated@@329 $generated@@340 $generated@@341))
 :pattern ( ($generated@@328 $generated@@340 $generated@@341))
))))
(assert (forall (($generated@@342 T@U) ($generated@@343 T@T) ) (! (let (($generated@@344 (type $generated@@342)))
 (not ($generated@@0 ($generated@@87 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342))))
 :pattern ( (let (($generated@@344 (type $generated@@342)))
($generated@@87 ($generated@@327 ($generated@@328 $generated@@344 $generated@@343)) $generated@@342)))
)))
(assert (forall (($generated@@345 T@U) ) (! (let (($generated@@346 ($generated@@85 (type $generated@@345))))
 (=> (= (type $generated@@345) ($generated@@82 $generated@@346 $generated@@2)) (= ($generated@@176 $generated@@345) (forall (($generated@@347 T@U) ) (!  (=> (= (type $generated@@347) $generated@@346) (and (<= 0 ($generated ($generated@@87 $generated@@345 $generated@@347))) (<= ($generated ($generated@@87 $generated@@345 $generated@@347)) ($generated@@303 $generated@@345))))
 :pattern ( ($generated@@87 $generated@@345 $generated@@347))
)))))
 :pattern ( ($generated@@176 $generated@@345))
)))
(assert (forall (($generated@@349 T@T) ($generated@@350 T@U) ) (! (= (type ($generated@@348 $generated@@349 $generated@@350)) $generated@@349)
 :pattern ( ($generated@@348 $generated@@349 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ) (!  (=> (and (= (type $generated@@351) $generated@@168) ($generated@@245 $generated@@351 $generated@@146)) (and (= ($generated@@298 ($generated@@348 $generated@@83 $generated@@351)) $generated@@351) ($generated@@153 ($generated@@348 $generated@@83 $generated@@351) $generated@@146)))
 :pattern ( ($generated@@245 $generated@@351 $generated@@146))
)))
(assert (forall (($generated@@352 T@U) ) (!  (=> (and (= (type $generated@@352) $generated@@168) ($generated@@245 $generated@@352 $generated@@173)) (and (= ($generated@@298 ($generated@@348 $generated@@83 $generated@@352)) $generated@@352) ($generated@@153 ($generated@@348 $generated@@83 $generated@@352) $generated@@173)))
 :pattern ( ($generated@@245 $generated@@352 $generated@@173))
)))
(assert (forall (($generated@@353 T@U) ) (!  (=> (and (= (type $generated@@353) $generated@@168) ($generated@@245 $generated@@353 $generated@@150)) (and (= ($generated@@298 ($generated@@348 $generated@@83 $generated@@353)) $generated@@353) ($generated@@153 ($generated@@348 $generated@@83 $generated@@353) $generated@@150)))
 :pattern ( ($generated@@245 $generated@@353 $generated@@150))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@168) ($generated@@245 $generated@@354 $generated@@241)) (and (= ($generated@@298 ($generated@@348 $generated@@83 $generated@@354)) $generated@@354) ($generated@@153 ($generated@@348 $generated@@83 $generated@@354) $generated@@241)))
 :pattern ( ($generated@@245 $generated@@354 $generated@@241))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (= (type $generated@@355) $generated@@83) (= ($generated@@153 $generated@@355 $generated@@173)  (and ($generated@@153 $generated@@355 $generated@@146) (not (= $generated@@355 $generated@@147)))))
 :pattern ( ($generated@@153 $generated@@355 $generated@@173))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@83) (= ($generated@@153 $generated@@356 $generated@@241)  (and ($generated@@153 $generated@@356 $generated@@150) (not (= $generated@@356 $generated@@147)))))
 :pattern ( ($generated@@153 $generated@@356 $generated@@241))
)))
(assert (forall (($generated@@357 T@U) ) (! (let (($generated@@358 ($generated@@313 (type $generated@@357))))
(let (($generated@@359 ($generated@@312 (type $generated@@357))))
 (=> (= (type $generated@@357) ($generated@@311 $generated@@359 $generated@@358)) (or (= $generated@@357 ($generated@@310 $generated@@359 $generated@@358)) (exists (($generated@@360 T@U) ) (!  (and (= (type $generated@@360) $generated@@359) ($generated@@0 ($generated@@87 ($generated@@309 $generated@@357) $generated@@360)))
 :no-pattern (type $generated@@360)
 :no-pattern ($generated $generated@@360)
 :no-pattern ($generated@@0 $generated@@360)
))))))
 :pattern ( ($generated@@309 $generated@@357))
)))
(assert (forall (($generated@@362 T@U) ) (! (let (($generated@@363 ($generated@@313 (type $generated@@362))))
(= (type ($generated@@361 $generated@@362)) ($generated@@82 $generated@@363 $generated@@4)))
 :pattern ( ($generated@@361 $generated@@362))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@313 (type $generated@@364))))
(let (($generated@@366 ($generated@@312 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@311 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@310 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@365) ($generated@@0 ($generated@@87 ($generated@@361 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@361 $generated@@364))
)))
(assert (forall (($generated@@368 T@U) ) (! (let (($generated@@369 ($generated@@331 (type $generated@@368))))
(let (($generated@@370 ($generated@@330 (type $generated@@368))))
 (=> (= (type $generated@@368) ($generated@@329 $generated@@370 $generated@@369)) (or (= $generated@@368 ($generated@@328 $generated@@370 $generated@@369)) (exists (($generated@@371 T@U) ) (!  (and (= (type $generated@@371) $generated@@370) ($generated@@0 ($generated@@87 ($generated@@327 $generated@@368) $generated@@371)))
 :no-pattern (type $generated@@371)
 :no-pattern ($generated $generated@@371)
 :no-pattern ($generated@@0 $generated@@371)
))))))
 :pattern ( ($generated@@327 $generated@@368))
)))
(assert (forall (($generated@@373 T@U) ) (! (let (($generated@@374 ($generated@@331 (type $generated@@373))))
(= (type ($generated@@372 $generated@@373)) ($generated@@82 $generated@@374 $generated@@4)))
 :pattern ( ($generated@@372 $generated@@373))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@331 (type $generated@@375))))
(let (($generated@@377 ($generated@@330 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@329 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@328 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@376) ($generated@@0 ($generated@@87 ($generated@@372 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@372 $generated@@375))
)))
(assert (forall (($generated@@379 T@U) ($generated@@380 T@U) ) (!  (=> (and (= (type $generated@@379) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@380) $generated@@70)) (= ($generated@@153 $generated@@379 ($generated@@175 $generated@@380)) (forall (($generated@@381 T@U) ) (!  (=> (and (= (type $generated@@381) $generated@@168) (< 0 ($generated ($generated@@87 $generated@@379 $generated@@381)))) ($generated@@245 $generated@@381 $generated@@380))
 :pattern ( ($generated@@87 $generated@@379 $generated@@381))
))))
 :pattern ( ($generated@@153 $generated@@379 ($generated@@175 $generated@@380)))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ($generated@@384 T@U) ) (!  (=> (and (and (= (type $generated@@382) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@383) $generated@@70)) (= (type $generated@@384) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@382 ($generated@@261 $generated@@383) $generated@@384) (forall (($generated@@385 T@U) ) (!  (=> (and (= (type $generated@@385) $generated@@168) ($generated@@0 ($generated@@87 $generated@@382 $generated@@385))) ($generated@@273 $generated@@385 $generated@@383 $generated@@384))
 :pattern ( ($generated@@87 $generated@@382 $generated@@385))
))))
 :pattern ( ($generated@@80 $generated@@382 ($generated@@261 $generated@@383) $generated@@384))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ($generated@@388 T@U) ) (!  (=> (and (and (= (type $generated@@386) ($generated@@82 $generated@@168 $generated@@4)) (= (type $generated@@387) $generated@@70)) (= (type $generated@@388) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@386 ($generated@@266 $generated@@387) $generated@@388) (forall (($generated@@389 T@U) ) (!  (=> (and (= (type $generated@@389) $generated@@168) ($generated@@0 ($generated@@87 $generated@@386 $generated@@389))) ($generated@@273 $generated@@389 $generated@@387 $generated@@388))
 :pattern ( ($generated@@87 $generated@@386 $generated@@389))
))))
 :pattern ( ($generated@@80 $generated@@386 ($generated@@266 $generated@@387) $generated@@388))
)))
(assert (forall (($generated@@390 T@U) ) (! (let (($generated@@391 (type $generated@@390)))
(= ($generated ($generated@@87 ($generated@@304 $generated@@391) $generated@@390)) 0))
 :pattern ( (let (($generated@@391 (type $generated@@390)))
($generated@@87 ($generated@@304 $generated@@391) $generated@@390)))
)))
(assert  (and (forall (($generated@@394 T@U) ) (! (= (type ($generated@@392 $generated@@394)) ($generated@@82 $generated@@168 $generated@@4))
 :pattern ( ($generated@@392 $generated@@394))
)) (forall (($generated@@395 T@U) ) (! (let (($generated@@396 ($generated@@313 (type $generated@@395))))
(let (($generated@@397 ($generated@@312 (type $generated@@395))))
(= (type ($generated@@393 $generated@@395)) ($generated@@82 $generated@@397 $generated@@396))))
 :pattern ( ($generated@@393 $generated@@395))
))))
(assert (forall (($generated@@398 T@U) ($generated@@399 T@U) ) (!  (=> (and (= (type $generated@@398) ($generated@@311 $generated@@168 $generated@@168)) (= (type $generated@@399) $generated@@168)) (= ($generated@@0 ($generated@@87 ($generated@@392 $generated@@398) $generated@@399))  (and ($generated@@0 ($generated@@87 ($generated@@309 $generated@@398) ($generated@@166 ($generated@@348 $generated@@159 $generated@@399)))) (= ($generated@@87 ($generated@@393 $generated@@398) ($generated@@166 ($generated@@348 $generated@@159 $generated@@399))) ($generated@@167 ($generated@@348 $generated@@159 $generated@@399))))))
 :pattern ( ($generated@@87 ($generated@@392 $generated@@398) $generated@@399))
)))
(assert  (and (forall (($generated@@402 T@U) ) (! (= (type ($generated@@400 $generated@@402)) ($generated@@82 $generated@@168 $generated@@4))
 :pattern ( ($generated@@400 $generated@@402))
)) (forall (($generated@@403 T@U) ) (! (let (($generated@@404 ($generated@@331 (type $generated@@403))))
(let (($generated@@405 ($generated@@330 (type $generated@@403))))
(= (type ($generated@@401 $generated@@403)) ($generated@@82 $generated@@405 $generated@@404))))
 :pattern ( ($generated@@401 $generated@@403))
))))
(assert (forall (($generated@@406 T@U) ($generated@@407 T@U) ) (!  (=> (and (= (type $generated@@406) ($generated@@329 $generated@@168 $generated@@168)) (= (type $generated@@407) $generated@@168)) (= ($generated@@0 ($generated@@87 ($generated@@400 $generated@@406) $generated@@407))  (and ($generated@@0 ($generated@@87 ($generated@@327 $generated@@406) ($generated@@166 ($generated@@348 $generated@@159 $generated@@407)))) (= ($generated@@87 ($generated@@401 $generated@@406) ($generated@@166 ($generated@@348 $generated@@159 $generated@@407))) ($generated@@167 ($generated@@348 $generated@@159 $generated@@407))))))
 :pattern ( ($generated@@87 ($generated@@400 $generated@@406) $generated@@407))
)))
(assert (forall (($generated@@408 T@U) ($generated@@409 T@U) ) (! (let (($generated@@410 (type $generated@@409)))
(let (($generated@@411 ($generated@@312 (type $generated@@408))))
 (=> (= (type $generated@@408) ($generated@@311 $generated@@411 $generated@@410)) (= ($generated@@0 ($generated@@87 ($generated@@361 $generated@@408) $generated@@409)) (exists (($generated@@412 T@U) ) (!  (and (= (type $generated@@412) $generated@@411) (and ($generated@@0 ($generated@@87 ($generated@@309 $generated@@408) $generated@@412)) (= $generated@@409 ($generated@@87 ($generated@@393 $generated@@408) $generated@@412))))
 :pattern ( ($generated@@87 ($generated@@309 $generated@@408) $generated@@412))
 :pattern ( ($generated@@87 ($generated@@393 $generated@@408) $generated@@412))
))))))
 :pattern ( ($generated@@87 ($generated@@361 $generated@@408) $generated@@409))
)))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (! (let (($generated@@415 (type $generated@@414)))
(let (($generated@@416 ($generated@@330 (type $generated@@413))))
 (=> (= (type $generated@@413) ($generated@@329 $generated@@416 $generated@@415)) (= ($generated@@0 ($generated@@87 ($generated@@372 $generated@@413) $generated@@414)) (exists (($generated@@417 T@U) ) (!  (and (= (type $generated@@417) $generated@@416) (and ($generated@@0 ($generated@@87 ($generated@@327 $generated@@413) $generated@@417)) (= $generated@@414 ($generated@@87 ($generated@@401 $generated@@413) $generated@@417))))
 :pattern ( ($generated@@87 ($generated@@327 $generated@@413) $generated@@417))
 :pattern ( ($generated@@87 ($generated@@401 $generated@@413) $generated@@417))
))))))
 :pattern ( ($generated@@87 ($generated@@372 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@419 T@U) ($generated@@420 T@U) ) (! (= (type ($generated@@418 $generated@@419 $generated@@420)) $generated@@70)
 :pattern ( ($generated@@418 $generated@@419 $generated@@420))
)))
(assert (forall (($generated@@421 T@U) ($generated@@422 T@U) ($generated@@423 T@U) ($generated@@424 T@U) ) (!  (=> (and (and (and (= (type $generated@@421) ($generated@@311 $generated@@168 $generated@@168)) (= (type $generated@@422) $generated@@70)) (= (type $generated@@423) $generated@@70)) (= (type $generated@@424) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424) (forall (($generated@@425 T@U) ) (!  (=> (and (= (type $generated@@425) $generated@@168) ($generated@@0 ($generated@@87 ($generated@@309 $generated@@421) $generated@@425))) (and ($generated@@273 ($generated@@87 ($generated@@393 $generated@@421) $generated@@425) $generated@@423 $generated@@424) ($generated@@273 $generated@@425 $generated@@422 $generated@@424)))
 :pattern ( ($generated@@87 ($generated@@393 $generated@@421) $generated@@425))
 :pattern ( ($generated@@87 ($generated@@309 $generated@@421) $generated@@425))
))))
 :pattern ( ($generated@@80 $generated@@421 ($generated@@418 $generated@@422 $generated@@423) $generated@@424))
)))
(assert (forall (($generated@@427 T@U) ($generated@@428 T@U) ) (! (= (type ($generated@@426 $generated@@427 $generated@@428)) $generated@@70)
 :pattern ( ($generated@@426 $generated@@427 $generated@@428))
)))
(assert (forall (($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ($generated@@432 T@U) ) (!  (=> (and (and (and (= (type $generated@@429) ($generated@@329 $generated@@168 $generated@@168)) (= (type $generated@@430) $generated@@70)) (= (type $generated@@431) $generated@@70)) (= (type $generated@@432) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432) (forall (($generated@@433 T@U) ) (!  (=> (and (= (type $generated@@433) $generated@@168) ($generated@@0 ($generated@@87 ($generated@@327 $generated@@429) $generated@@433))) (and ($generated@@273 ($generated@@87 ($generated@@401 $generated@@429) $generated@@433) $generated@@431 $generated@@432) ($generated@@273 $generated@@433 $generated@@430 $generated@@432)))
 :pattern ( ($generated@@87 ($generated@@401 $generated@@429) $generated@@433))
 :pattern ( ($generated@@87 ($generated@@327 $generated@@429) $generated@@433))
))))
 :pattern ( ($generated@@80 $generated@@429 ($generated@@426 $generated@@430 $generated@@431) $generated@@432))
)))
(assert (forall (($generated@@435 T@T) ) (! (= (type ($generated@@434 $generated@@435)) ($generated@@82 $generated@@435 $generated@@4))
 :pattern ( ($generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ) (! (let (($generated@@437 ($generated@@331 (type $generated@@436))))
(let (($generated@@438 ($generated@@330 (type $generated@@436))))
 (=> (= (type $generated@@436) ($generated@@329 $generated@@438 $generated@@437)) (= (= $generated@@436 ($generated@@328 $generated@@438 $generated@@437)) (= ($generated@@327 $generated@@436) ($generated@@434 $generated@@438))))))
 :pattern ( ($generated@@327 $generated@@436))
)))
(assert (forall (($generated@@439 T@U) ) (! (let (($generated@@440 ($generated@@331 (type $generated@@439))))
(let (($generated@@441 ($generated@@330 (type $generated@@439))))
 (=> (= (type $generated@@439) ($generated@@329 $generated@@441 $generated@@440)) (= (= $generated@@439 ($generated@@328 $generated@@441 $generated@@440)) (= ($generated@@372 $generated@@439) ($generated@@434 $generated@@440))))))
 :pattern ( ($generated@@372 $generated@@439))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@331 (type $generated@@442))))
(let (($generated@@444 ($generated@@330 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@329 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@328 $generated@@444 $generated@@443)) (= ($generated@@400 $generated@@442) ($generated@@434 $generated@@168))))))
 :pattern ( ($generated@@400 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@313 (type $generated@@445))))
(let (($generated@@447 ($generated@@312 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@311 $generated@@447 $generated@@446)) (or (= $generated@@445 ($generated@@310 $generated@@447 $generated@@446)) (exists (($generated@@448 T@U) ($generated@@449 T@U) ) (!  (and (and (= (type $generated@@448) $generated@@168) (= (type $generated@@449) $generated@@168)) ($generated@@0 ($generated@@87 ($generated@@392 $generated@@445) ($generated@@298 ($generated@@244 $generated@@448 $generated@@449)))))
 :no-pattern (type $generated@@448)
 :no-pattern (type $generated@@449)
 :no-pattern ($generated $generated@@448)
 :no-pattern ($generated@@0 $generated@@448)
 :no-pattern ($generated $generated@@449)
 :no-pattern ($generated@@0 $generated@@449)
))))))
 :pattern ( ($generated@@392 $generated@@445))
)))
(assert (forall (($generated@@450 T@U) ) (! (let (($generated@@451 ($generated@@331 (type $generated@@450))))
(let (($generated@@452 ($generated@@330 (type $generated@@450))))
 (=> (= (type $generated@@450) ($generated@@329 $generated@@452 $generated@@451)) (or (= $generated@@450 ($generated@@328 $generated@@452 $generated@@451)) (exists (($generated@@453 T@U) ($generated@@454 T@U) ) (!  (and (and (= (type $generated@@453) $generated@@168) (= (type $generated@@454) $generated@@168)) ($generated@@0 ($generated@@87 ($generated@@400 $generated@@450) ($generated@@298 ($generated@@244 $generated@@453 $generated@@454)))))
 :no-pattern (type $generated@@453)
 :no-pattern (type $generated@@454)
 :no-pattern ($generated $generated@@453)
 :no-pattern ($generated@@0 $generated@@453)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
))))))
 :pattern ( ($generated@@400 $generated@@450))
)))
(assert (forall (($generated@@455 T@U) ) (!  (=> (and (= (type $generated@@455) $generated@@168) ($generated@@245 $generated@@455 $generated@@46)) (and (= ($generated@@298 ($generated@@348 $generated@@2 $generated@@455)) $generated@@455) ($generated@@153 ($generated@@348 $generated@@2 $generated@@455) $generated@@46)))
 :pattern ( ($generated@@245 $generated@@455 $generated@@46))
)))
(assert (forall (($generated@@456 T@U) ) (!  (=> (and (= (type $generated@@456) $generated@@168) ($generated@@245 $generated@@456 $generated@@47)) (and (= ($generated@@298 ($generated@@348 $generated@@3 $generated@@456)) $generated@@456) ($generated@@153 ($generated@@348 $generated@@3 $generated@@456) $generated@@47)))
 :pattern ( ($generated@@245 $generated@@456 $generated@@47))
)))
(assert (forall (($generated@@457 T@U) ) (!  (=> (and (= (type $generated@@457) $generated@@168) ($generated@@245 $generated@@457 $generated@@44)) (and (= ($generated@@298 ($generated@@348 $generated@@4 $generated@@457)) $generated@@457) ($generated@@153 ($generated@@348 $generated@@4 $generated@@457) $generated@@44)))
 :pattern ( ($generated@@245 $generated@@457 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@458) 21))
(assert (forall (($generated@@459 T@U) ) (!  (=> (and (= (type $generated@@459) $generated@@168) ($generated@@245 $generated@@459 $generated@@45)) (and (= ($generated@@298 ($generated@@348 $generated@@458 $generated@@459)) $generated@@459) ($generated@@153 ($generated@@348 $generated@@458 $generated@@459) $generated@@45)))
 :pattern ( ($generated@@245 $generated@@459 $generated@@45))
)))
(assert (forall (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (=> (= (type $generated@@461) $generated@@70) (= ($generated@@245 ($generated@@298 $generated@@460) $generated@@461) ($generated@@153 $generated@@460 $generated@@461)))
 :pattern ( ($generated@@245 ($generated@@298 $generated@@460) $generated@@461))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@85 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@82 $generated@@463 $generated@@2)) (<= 0 ($generated@@303 $generated@@462))))
 :pattern ( ($generated@@303 $generated@@462))
)))
(assert (forall (($generated@@464 T@U) ) (! (let (($generated@@465 ($generated@@289 (type $generated@@464))))
 (=> (= (type $generated@@464) ($generated@@288 $generated@@465)) (<= 0 ($generated@@287 $generated@@464))))
 :pattern ( ($generated@@287 $generated@@464))
)))
(assert (forall (($generated@@467 T@U) ) (! (= (type ($generated@@466 $generated@@467)) $generated@@70)
 :pattern ( ($generated@@466 $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@70) (= (type $generated@@469) $generated@@70)) (= ($generated@@466 ($generated@@418 $generated@@468 $generated@@469)) $generated@@468))
 :pattern ( ($generated@@418 $generated@@468 $generated@@469))
)))
(assert (forall (($generated@@471 T@U) ) (! (= (type ($generated@@470 $generated@@471)) $generated@@70)
 :pattern ( ($generated@@470 $generated@@471))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (and (= (type $generated@@472) $generated@@70) (= (type $generated@@473) $generated@@70)) (= ($generated@@470 ($generated@@418 $generated@@472 $generated@@473)) $generated@@473))
 :pattern ( ($generated@@418 $generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@70) (= (type $generated@@475) $generated@@70)) (= ($generated@@78 ($generated@@418 $generated@@474 $generated@@475)) $generated@@58))
 :pattern ( ($generated@@418 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@70)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@70) (= (type $generated@@479) $generated@@70)) (= ($generated@@476 ($generated@@426 $generated@@478 $generated@@479)) $generated@@478))
 :pattern ( ($generated@@426 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@481 T@U) ) (! (= (type ($generated@@480 $generated@@481)) $generated@@70)
 :pattern ( ($generated@@480 $generated@@481))
)))
(assert (forall (($generated@@482 T@U) ($generated@@483 T@U) ) (!  (=> (and (= (type $generated@@482) $generated@@70) (= (type $generated@@483) $generated@@70)) (= ($generated@@480 ($generated@@426 $generated@@482 $generated@@483)) $generated@@483))
 :pattern ( ($generated@@426 $generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@70) (= (type $generated@@485) $generated@@70)) (= ($generated@@78 ($generated@@426 $generated@@484 $generated@@485)) $generated@@59))
 :pattern ( ($generated@@426 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@168) (= (type $generated@@487) $generated@@168)) (= ($generated@@279 ($generated@@244 $generated@@486 $generated@@487)) $generated@@61))
 :pattern ( ($generated@@244 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@70)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@70) (= (type $generated@@491) $generated@@70)) (= ($generated@@488 ($generated@@158 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@158 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@70)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@70) (= (type $generated@@495) $generated@@70)) (= ($generated@@492 ($generated@@158 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@158 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@168) (= (type $generated@@497) $generated@@168)) (= ($generated@@166 ($generated@@244 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@244 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@168) (= (type $generated@@499) $generated@@168)) (= ($generated@@167 ($generated@@244 $generated@@498 $generated@@499)) $generated@@499))
 :pattern ( ($generated@@244 $generated@@498 $generated@@499))
)))
(assert  (and (forall (($generated@@502 T@U) ) (! (= (type ($generated@@500 $generated@@502)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@502))
)) (forall (($generated@@503 T@U) ($generated@@504 Int) ) (! (let (($generated@@505 ($generated@@289 (type $generated@@503))))
(= (type ($generated@@501 $generated@@503 $generated@@504)) $generated@@505))
 :pattern ( ($generated@@501 $generated@@503 $generated@@504))
))))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ($generated@@508 T@U) ) (!  (=> (and (and (= (type $generated@@506) ($generated@@288 $generated@@168)) (= (type $generated@@507) $generated@@70)) (= (type $generated@@508) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@506 ($generated@@500 $generated@@507) $generated@@508) (forall (($generated@@509 Int) ) (!  (=> (and (<= 0 $generated@@509) (< $generated@@509 ($generated@@287 $generated@@506))) ($generated@@273 ($generated@@501 $generated@@506 $generated@@509) $generated@@507 $generated@@508))
 :pattern ( ($generated@@501 $generated@@506 $generated@@509))
))))
 :pattern ( ($generated@@80 $generated@@506 ($generated@@500 $generated@@507) $generated@@508))
)))
(assert (forall (($generated@@511 Int) ) (! (= ($generated@@510 ($generated@@81 $generated@@511)) $generated@@511)
 :pattern ( ($generated@@81 $generated@@511))
)))
(assert (forall (($generated@@513 T@U) ) (! (= (type ($generated@@512 $generated@@513)) $generated@@70)
 :pattern ( ($generated@@512 $generated@@513))
)))
(assert (forall (($generated@@514 T@U) ) (!  (=> (= (type $generated@@514) $generated@@70) (= ($generated@@512 ($generated@@261 $generated@@514)) $generated@@514))
 :pattern ( ($generated@@261 $generated@@514))
)))
(assert (forall (($generated@@515 T@U) ) (!  (=> (= (type $generated@@515) $generated@@70) (= ($generated@@78 ($generated@@261 $generated@@515)) $generated@@54))
 :pattern ( ($generated@@261 $generated@@515))
)))
(assert (forall (($generated@@517 T@U) ) (! (= (type ($generated@@516 $generated@@517)) $generated@@70)
 :pattern ( ($generated@@516 $generated@@517))
)))
(assert (forall (($generated@@518 T@U) ) (!  (=> (= (type $generated@@518) $generated@@70) (= ($generated@@516 ($generated@@266 $generated@@518)) $generated@@518))
 :pattern ( ($generated@@266 $generated@@518))
)))
(assert (forall (($generated@@519 T@U) ) (!  (=> (= (type $generated@@519) $generated@@70) (= ($generated@@78 ($generated@@266 $generated@@519)) $generated@@55))
 :pattern ( ($generated@@266 $generated@@519))
)))
(assert (forall (($generated@@521 T@U) ) (! (= (type ($generated@@520 $generated@@521)) $generated@@70)
 :pattern ( ($generated@@520 $generated@@521))
)))
(assert (forall (($generated@@522 T@U) ) (!  (=> (= (type $generated@@522) $generated@@70) (= ($generated@@520 ($generated@@175 $generated@@522)) $generated@@522))
 :pattern ( ($generated@@175 $generated@@522))
)))
(assert (forall (($generated@@523 T@U) ) (!  (=> (= (type $generated@@523) $generated@@70) (= ($generated@@78 ($generated@@175 $generated@@523)) $generated@@56))
 :pattern ( ($generated@@175 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@70)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@524 ($generated@@500 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@500 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@70) (= ($generated@@78 ($generated@@500 $generated@@527)) $generated@@57))
 :pattern ( ($generated@@500 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (! (let (($generated@@529 (type $generated@@528)))
(= ($generated@@348 $generated@@529 ($generated@@298 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@298 $generated@@528))
)))
(assert (forall (($generated@@530 T@U) ($generated@@531 T@U) ($generated@@532 T@U) ) (!  (=> (and (and (= (type $generated@@530) ($generated@@311 $generated@@168 $generated@@168)) (= (type $generated@@531) $generated@@70)) (= (type $generated@@532) $generated@@70)) (= ($generated@@153 $generated@@530 ($generated@@418 $generated@@531 $generated@@532)) (forall (($generated@@533 T@U) ) (!  (=> (and (= (type $generated@@533) $generated@@168) ($generated@@0 ($generated@@87 ($generated@@309 $generated@@530) $generated@@533))) (and ($generated@@245 ($generated@@87 ($generated@@393 $generated@@530) $generated@@533) $generated@@532) ($generated@@245 $generated@@533 $generated@@531)))
 :pattern ( ($generated@@87 ($generated@@393 $generated@@530) $generated@@533))
 :pattern ( ($generated@@87 ($generated@@309 $generated@@530) $generated@@533))
))))
 :pattern ( ($generated@@153 $generated@@530 ($generated@@418 $generated@@531 $generated@@532)))
)))
(assert (forall (($generated@@534 T@U) ($generated@@535 T@U) ($generated@@536 T@U) ) (!  (=> (and (and (= (type $generated@@534) ($generated@@329 $generated@@168 $generated@@168)) (= (type $generated@@535) $generated@@70)) (= (type $generated@@536) $generated@@70)) (= ($generated@@153 $generated@@534 ($generated@@426 $generated@@535 $generated@@536)) (forall (($generated@@537 T@U) ) (!  (=> (and (= (type $generated@@537) $generated@@168) ($generated@@0 ($generated@@87 ($generated@@327 $generated@@534) $generated@@537))) (and ($generated@@245 ($generated@@87 ($generated@@401 $generated@@534) $generated@@537) $generated@@536) ($generated@@245 $generated@@537 $generated@@535)))
 :pattern ( ($generated@@87 ($generated@@401 $generated@@534) $generated@@537))
 :pattern ( ($generated@@87 ($generated@@327 $generated@@534) $generated@@537))
))))
 :pattern ( ($generated@@153 $generated@@534 ($generated@@426 $generated@@535 $generated@@536)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ) (!  (=> (and (= (type $generated@@540) $generated@@168) (= (type $generated@@541) $generated@@168)) (< ($generated@@538 $generated@@540) ($generated@@539 ($generated@@244 $generated@@540 $generated@@541))))
 :pattern ( ($generated@@244 $generated@@540 $generated@@541))
)))
(assert (forall (($generated@@542 T@U) ($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@542) $generated@@168) (= (type $generated@@543) $generated@@168)) (< ($generated@@538 $generated@@543) ($generated@@539 ($generated@@244 $generated@@542 $generated@@543))))
 :pattern ( ($generated@@244 $generated@@542 $generated@@543))
)))
(assert  (=> (<= 1 $generated@@252) (forall (($generated@@544 T@U) ) (!  (=> (= (type $generated@@544) $generated@@83) (=> (and (not (= $generated@@544 $generated@@147)) ($generated@@153 $generated@@544 $generated@@241)) (= ($generated@@295 $generated@@544) ($generated@@253 $generated@@544))))
 :pattern ( ($generated@@295 $generated@@544) ($generated@@153 $generated@@544 $generated@@241))
 :pattern ( ($generated@@295 $generated@@544) ($generated@@253 $generated@@544))
))))
(assert (forall (($generated@@545 T@U) ($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (and (and (= (type $generated@@545) $generated@@168) (= (type $generated@@546) $generated@@70)) (= (type $generated@@547) $generated@@70)) ($generated@@245 $generated@@545 ($generated@@418 $generated@@546 $generated@@547))) (and (= ($generated@@298 ($generated@@348 ($generated@@311 $generated@@168 $generated@@168) $generated@@545)) $generated@@545) ($generated@@153 ($generated@@348 ($generated@@311 $generated@@168 $generated@@168) $generated@@545) ($generated@@418 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@245 $generated@@545 ($generated@@418 $generated@@546 $generated@@547)))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ($generated@@550 T@U) ) (!  (=> (and (and (and (= (type $generated@@548) $generated@@168) (= (type $generated@@549) $generated@@70)) (= (type $generated@@550) $generated@@70)) ($generated@@245 $generated@@548 ($generated@@426 $generated@@549 $generated@@550))) (and (= ($generated@@298 ($generated@@348 ($generated@@329 $generated@@168 $generated@@168) $generated@@548)) $generated@@548) ($generated@@153 ($generated@@348 ($generated@@329 $generated@@168 $generated@@168) $generated@@548) ($generated@@426 $generated@@549 $generated@@550))))
 :pattern ( ($generated@@245 $generated@@548 ($generated@@426 $generated@@549 $generated@@550)))
)))
(assert (forall (($generated@@551 T@U) ($generated@@552 T@U) ($generated@@553 T@U) ) (!  (=> (and (and (and (= (type $generated@@551) $generated@@70) (= (type $generated@@552) $generated@@70)) (= (type $generated@@553) $generated@@168)) ($generated@@245 $generated@@553 ($generated@@158 $generated@@551 $generated@@552))) (and (= ($generated@@298 ($generated@@348 $generated@@159 $generated@@553)) $generated@@553) ($generated@@153 ($generated@@348 $generated@@159 $generated@@553) ($generated@@158 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@245 $generated@@553 ($generated@@158 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@554 T@U) ) (! (let (($generated@@555 (type $generated@@554)))
 (not ($generated@@0 ($generated@@87 ($generated@@434 $generated@@555) $generated@@554))))
 :pattern ( (let (($generated@@555 (type $generated@@554)))
($generated@@87 ($generated@@434 $generated@@555) $generated@@554)))
)))
(assert (forall (($generated@@557 T@U) ) (! (= (type ($generated@@556 $generated@@557)) $generated@@75)
 :pattern ( ($generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@70) (= (type $generated@@559) $generated@@70)) (and (= ($generated@@78 ($generated@@158 $generated@@558 $generated@@559)) $generated@@62) (= ($generated@@556 ($generated@@158 $generated@@558 $generated@@559)) $generated@@67)))
 :pattern ( ($generated@@158 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ) (!  (=> (= (type $generated@@560) $generated@@159) (= ($generated@@538 ($generated@@298 $generated@@560)) ($generated@@539 $generated@@560)))
 :pattern ( ($generated@@538 ($generated@@298 $generated@@560)))
)))
(assert (forall (($generated@@561 T@U) ) (!  (=> (and (= (type $generated@@561) $generated@@168) ($generated@@245 $generated@@561 ($generated@@81 0))) (and (= ($generated@@298 ($generated@@348 $generated@@2 $generated@@561)) $generated@@561) ($generated@@153 ($generated@@348 ($generated@@82 $generated@@168 $generated@@4) $generated@@561) ($generated@@81 0))))
 :pattern ( ($generated@@245 $generated@@561 ($generated@@81 0)))
)))
(assert (forall (($generated@@562 T@U) ($generated@@563 T@U) ) (!  (=> (and (and (= (type $generated@@562) $generated@@168) (= (type $generated@@563) $generated@@70)) ($generated@@245 $generated@@562 ($generated@@261 $generated@@563))) (and (= ($generated@@298 ($generated@@348 ($generated@@82 $generated@@168 $generated@@4) $generated@@562)) $generated@@562) ($generated@@153 ($generated@@348 ($generated@@82 $generated@@168 $generated@@4) $generated@@562) ($generated@@261 $generated@@563))))
 :pattern ( ($generated@@245 $generated@@562 ($generated@@261 $generated@@563)))
)))
(assert (forall (($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (= (type $generated@@564) $generated@@168) (= (type $generated@@565) $generated@@70)) ($generated@@245 $generated@@564 ($generated@@266 $generated@@565))) (and (= ($generated@@298 ($generated@@348 ($generated@@82 $generated@@168 $generated@@4) $generated@@564)) $generated@@564) ($generated@@153 ($generated@@348 ($generated@@82 $generated@@168 $generated@@4) $generated@@564) ($generated@@266 $generated@@565))))
 :pattern ( ($generated@@245 $generated@@564 ($generated@@266 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ) (!  (=> (and (and (= (type $generated@@566) $generated@@168) (= (type $generated@@567) $generated@@70)) ($generated@@245 $generated@@566 ($generated@@175 $generated@@567))) (and (= ($generated@@298 ($generated@@348 ($generated@@82 $generated@@168 $generated@@2) $generated@@566)) $generated@@566) ($generated@@153 ($generated@@348 ($generated@@82 $generated@@168 $generated@@2) $generated@@566) ($generated@@175 $generated@@567))))
 :pattern ( ($generated@@245 $generated@@566 ($generated@@175 $generated@@567)))
)))
(assert (forall (($generated@@568 T@U) ($generated@@569 T@U) ) (!  (=> (and (and (= (type $generated@@568) $generated@@168) (= (type $generated@@569) $generated@@70)) ($generated@@245 $generated@@568 ($generated@@500 $generated@@569))) (and (= ($generated@@298 ($generated@@348 ($generated@@288 $generated@@168) $generated@@568)) $generated@@568) ($generated@@153 ($generated@@348 ($generated@@288 $generated@@168) $generated@@568) ($generated@@500 $generated@@569))))
 :pattern ( ($generated@@245 $generated@@568 ($generated@@500 $generated@@569)))
)))
(assert (forall (($generated@@570 T@U) ) (!  (=> (and (= (type $generated@@570) $generated@@168) ($generated@@245 $generated@@570 ($generated@@81 8))) (and (= ($generated@@298 ($generated@@348 $generated@@138 $generated@@570)) $generated@@570) ($generated@@153 ($generated@@348 $generated@@138 $generated@@570) ($generated@@81 8))))
 :pattern ( ($generated@@245 $generated@@570 ($generated@@81 8)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@83) (= (type $generated@@572) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@571 $generated@@147)) ($generated@@80 $generated@@571 $generated@@150 $generated@@572))) ($generated@@80 $generated@@571 $generated@@173 $generated@@572))
 :pattern ( ($generated@@80 $generated@@571 $generated@@150 $generated@@572))
)))
(assert (= ($generated@@78 $generated@@146) $generated@@63))
(assert (= ($generated@@556 $generated@@146) $generated@@68))
(assert (= ($generated@@78 $generated@@173) $generated@@64))
(assert (= ($generated@@556 $generated@@173) $generated@@68))
(assert (= ($generated@@78 $generated@@150) $generated@@65))
(assert (= ($generated@@556 $generated@@150) $generated@@69))
(assert (= ($generated@@78 $generated@@241) $generated@@66))
(assert (= ($generated@@556 $generated@@241) $generated@@69))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ($generated@@575 T@U) ) (!  (=> (and (and (= (type $generated@@573) ($generated@@82 $generated@@168 $generated@@2)) (= (type $generated@@574) $generated@@70)) (= (type $generated@@575) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@573 ($generated@@175 $generated@@574) $generated@@575) (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@168) (< 0 ($generated ($generated@@87 $generated@@573 $generated@@576)))) ($generated@@273 $generated@@576 $generated@@574 $generated@@575))
 :pattern ( ($generated@@87 $generated@@573 $generated@@576))
))))
 :pattern ( ($generated@@80 $generated@@573 ($generated@@175 $generated@@574) $generated@@575))
)))
(assert (forall (($generated@@577 T@U) ) (!  (=> (= (type $generated@@577) $generated@@83) (= ($generated@@153 $generated@@577 $generated@@146)  (or (= $generated@@577 $generated@@147) ($generated@@156 ($generated@@180 $generated@@577)))))
 :pattern ( ($generated@@153 $generated@@577 $generated@@146))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ) (!  (=> (and (and (and (= (type $generated@@578) $generated@@159) (= (type $generated@@579) $generated@@70)) (= (type $generated@@580) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@272 $generated@@580) (and ($generated@@157 $generated@@578) (exists (($generated@@581 T@U) ) (!  (and (= (type $generated@@581) $generated@@70) ($generated@@80 $generated@@578 ($generated@@158 $generated@@579 $generated@@581) $generated@@580))
 :pattern ( ($generated@@80 $generated@@578 ($generated@@158 $generated@@579 $generated@@581) $generated@@580))
))))) ($generated@@273 ($generated@@166 $generated@@578) $generated@@579 $generated@@580))
 :pattern ( ($generated@@273 ($generated@@166 $generated@@578) $generated@@579 $generated@@580))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ($generated@@584 T@U) ) (!  (=> (and (and (and (= (type $generated@@582) $generated@@159) (= (type $generated@@583) $generated@@70)) (= (type $generated@@584) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@272 $generated@@584) (and ($generated@@157 $generated@@582) (exists (($generated@@585 T@U) ) (!  (and (= (type $generated@@585) $generated@@70) ($generated@@80 $generated@@582 ($generated@@158 $generated@@585 $generated@@583) $generated@@584))
 :pattern ( ($generated@@80 $generated@@582 ($generated@@158 $generated@@585 $generated@@583) $generated@@584))
))))) ($generated@@273 ($generated@@167 $generated@@582) $generated@@583 $generated@@584))
 :pattern ( ($generated@@273 ($generated@@167 $generated@@582) $generated@@583 $generated@@584))
)))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@168) (= (type $generated@@587) $generated@@168)) (= ($generated@@244 ($generated@@255 $generated@@586) ($generated@@255 $generated@@587)) ($generated@@255 ($generated@@244 $generated@@586 $generated@@587))))
 :pattern ( ($generated@@244 ($generated@@255 $generated@@586) ($generated@@255 $generated@@587)))
)))
(assert (forall (($generated@@588 T@U) ) (! (= ($generated@@298 ($generated@@255 $generated@@588)) ($generated@@255 ($generated@@298 $generated@@588)))
 :pattern ( ($generated@@298 ($generated@@255 $generated@@588)))
)))
(assert (forall (($generated@@589 T@U) ) (! (let (($generated@@590 ($generated@@289 (type $generated@@589))))
 (=> (and (= (type $generated@@589) ($generated@@288 $generated@@590)) (= ($generated@@287 $generated@@589) 0)) (= $generated@@589 ($generated@@286 $generated@@590))))
 :pattern ( ($generated@@287 $generated@@589))
)))
(assert (forall (($generated@@591 T@U) ($generated@@592 T@U) ($generated@@593 T@U) ) (! (let (($generated@@594 (type $generated@@592)))
 (=> (and (and (= (type $generated@@591) ($generated@@82 $generated@@594 $generated@@2)) (= (type $generated@@593) $generated@@2)) (<= 0 ($generated $generated@@593))) (= ($generated@@303 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)) (+ (- ($generated@@303 $generated@@591) ($generated ($generated@@87 $generated@@591 $generated@@592))) ($generated $generated@@593)))))
 :pattern ( ($generated@@303 ($generated@@88 $generated@@591 $generated@@592 $generated@@593)))
)))
(assert (forall (($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (= (type $generated@@595) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@596) $generated@@2)) ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
 :pattern ( ($generated@@80 $generated@@596 $generated@@46 $generated@@595))
)))
(assert (forall (($generated@@597 T@U) ($generated@@598 T@U) ) (!  (=> (and (= (type $generated@@597) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@598) $generated@@3)) ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
 :pattern ( ($generated@@80 $generated@@598 $generated@@47 $generated@@597))
)))
(assert (forall (($generated@@599 T@U) ($generated@@600 T@U) ) (!  (=> (and (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@600) $generated@@4)) ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
 :pattern ( ($generated@@80 $generated@@600 $generated@@44 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ) (!  (=> (and (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@602) $generated@@458)) ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
 :pattern ( ($generated@@80 $generated@@602 $generated@@45 $generated@@601))
)))
(assert (forall (($generated@@603 T@U) ($generated@@604 T@U) ) (!  (=> (and (= (type $generated@@603) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@604) $generated@@168)) ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
 :pattern ( ($generated@@80 $generated@@604 $generated@@48 $generated@@603))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@288 $generated@@168)) (= (type $generated@@606) $generated@@70)) (= ($generated@@153 $generated@@605 ($generated@@500 $generated@@606)) (forall (($generated@@607 Int) ) (!  (=> (and (<= 0 $generated@@607) (< $generated@@607 ($generated@@287 $generated@@605))) ($generated@@245 ($generated@@501 $generated@@605 $generated@@607) $generated@@606))
 :pattern ( ($generated@@501 $generated@@605 $generated@@607))
))))
 :pattern ( ($generated@@153 $generated@@605 ($generated@@500 $generated@@606)))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 Int) ) (!  (=> (= (type $generated@@609) ($generated@@288 $generated@@168)) (=> (and (<= 0 $generated@@610) (< $generated@@610 ($generated@@287 $generated@@609))) (< ($generated@@539 ($generated@@348 $generated@@159 ($generated@@501 $generated@@609 $generated@@610))) ($generated@@608 $generated@@609))))
 :pattern ( ($generated@@539 ($generated@@348 $generated@@159 ($generated@@501 $generated@@609 $generated@@610))))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ($generated@@613 T@U) ) (!  (=> (and (and (and (= (type $generated@@611) ($generated@@311 $generated@@168 $generated@@168)) (= (type $generated@@612) $generated@@70)) (= (type $generated@@613) $generated@@70)) ($generated@@153 $generated@@611 ($generated@@418 $generated@@612 $generated@@613))) (and (and ($generated@@153 ($generated@@309 $generated@@611) ($generated@@261 $generated@@612)) ($generated@@153 ($generated@@361 $generated@@611) ($generated@@261 $generated@@613))) ($generated@@153 ($generated@@392 $generated@@611) ($generated@@261 ($generated@@158 $generated@@612 $generated@@613)))))
 :pattern ( ($generated@@153 $generated@@611 ($generated@@418 $generated@@612 $generated@@613)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (and (and (= (type $generated@@614) ($generated@@329 $generated@@168 $generated@@168)) (= (type $generated@@615) $generated@@70)) (= (type $generated@@616) $generated@@70)) ($generated@@153 $generated@@614 ($generated@@426 $generated@@615 $generated@@616))) (and (and ($generated@@153 ($generated@@327 $generated@@614) ($generated@@266 $generated@@615)) ($generated@@153 ($generated@@372 $generated@@614) ($generated@@266 $generated@@616))) ($generated@@153 ($generated@@400 $generated@@614) ($generated@@266 ($generated@@158 $generated@@615 $generated@@616)))))
 :pattern ( ($generated@@153 $generated@@614 ($generated@@426 $generated@@615 $generated@@616)))
)))
(assert (forall (($generated@@617 T@U) ) (!  (=> (= (type $generated@@617) $generated@@2) ($generated@@153 $generated@@617 $generated@@46))
 :pattern ( ($generated@@153 $generated@@617 $generated@@46))
)))
(assert (forall (($generated@@618 T@U) ) (!  (=> (= (type $generated@@618) $generated@@3) ($generated@@153 $generated@@618 $generated@@47))
 :pattern ( ($generated@@153 $generated@@618 $generated@@47))
)))
(assert (forall (($generated@@619 T@U) ) (!  (=> (= (type $generated@@619) $generated@@4) ($generated@@153 $generated@@619 $generated@@44))
 :pattern ( ($generated@@153 $generated@@619 $generated@@44))
)))
(assert (forall (($generated@@620 T@U) ) (!  (=> (= (type $generated@@620) $generated@@458) ($generated@@153 $generated@@620 $generated@@45))
 :pattern ( ($generated@@153 $generated@@620 $generated@@45))
)))
(assert (forall (($generated@@621 T@U) ) (!  (=> (= (type $generated@@621) $generated@@168) ($generated@@153 $generated@@621 $generated@@48))
 :pattern ( ($generated@@153 $generated@@621 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@622 () T@U)
(declare-fun $generated@@623 () T@U)
(declare-fun $generated@@624 (T@U) Bool)
(declare-fun $generated@@625 () T@U)
(assert  (and (and (= (type $generated@@622) ($generated@@185 $generated@@83 $generated@@4)) (= (type $generated@@623) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@625) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@626  (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (and (= $generated@@622 ($generated@@184 $generated@@147 $generated@@623 $generated@@60 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@627 T@T) )  (=> false false))))))
(let (($generated@@628  (=> (and ($generated@@272 $generated@@623) ($generated@@624 $generated@@623)) (=> (and (and (not (= $generated@@625 $generated@@147)) (and ($generated@@153 $generated@@625 $generated@@241) ($generated@@80 $generated@@625 $generated@@241 $generated@@623))) (and (= 1 $generated@@252) (= (ControlFlow 0 4) 2))) $generated@@626))))
$generated@@628)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 ((_ BitVec 8)) T@U)
(declare-fun $generated@@140 (T@U) (_ BitVec 8))
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@157 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@169 (T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U) T@U)
(declare-fun $generated@@188 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@189 (T@T T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@191 (T@T) T@T)
(declare-fun $generated@@192 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@248 (T@U T@U) T@U)
(declare-fun $generated@@249 (T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (T@U) T@U)
(declare-fun $generated@@272 (T@U) Bool)
(declare-fun $generated@@273 (T@U T@U T@U) Bool)
(declare-fun $generated@@279 (T@U) T@U)
(declare-fun $generated@@285 (T@T) T@U)
(declare-fun $generated@@286 (T@U) Int)
(declare-fun $generated@@287 (T@T) T@T)
(declare-fun $generated@@288 (T@T) T@T)
(declare-fun $generated@@293 (T@U) T@U)
(declare-fun $generated@@306 (T@U) Int)
(declare-fun $generated@@307 (T@T) T@U)
(declare-fun $generated@@312 (T@U) T@U)
(declare-fun $generated@@313 (T@T T@T) T@U)
(declare-fun $generated@@314 (T@T T@T) T@T)
(declare-fun $generated@@315 (T@T) T@T)
(declare-fun $generated@@316 (T@T) T@T)
(declare-fun $generated@@330 (T@U) T@U)
(declare-fun $generated@@331 (T@T T@T) T@U)
(declare-fun $generated@@332 (T@T T@T) T@T)
(declare-fun $generated@@333 (T@T) T@T)
(declare-fun $generated@@334 (T@T) T@T)
(declare-fun $generated@@351 (T@T T@U) T@U)
(declare-fun $generated@@364 (T@U) T@U)
(declare-fun $generated@@375 (T@U) T@U)
(declare-fun $generated@@395 (T@U) T@U)
(declare-fun $generated@@396 (T@U) T@U)
(declare-fun $generated@@403 (T@U) T@U)
(declare-fun $generated@@404 (T@U) T@U)
(declare-fun $generated@@421 (T@U T@U) T@U)
(declare-fun $generated@@429 (T@U T@U) T@U)
(declare-fun $generated@@440 (T@T) T@U)
(declare-fun $generated@@464 () T@T)
(declare-fun $generated@@472 (T@U) T@U)
(declare-fun $generated@@476 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@486 (T@U) T@U)
(declare-fun $generated@@494 (T@U) T@U)
(declare-fun $generated@@498 (T@U) T@U)
(declare-fun $generated@@506 (T@U) T@U)
(declare-fun $generated@@507 (T@U Int) T@U)
(declare-fun $generated@@516 (T@U) Int)
(declare-fun $generated@@518 (T@U) T@U)
(declare-fun $generated@@522 (T@U) T@U)
(declare-fun $generated@@526 (T@U) T@U)
(declare-fun $generated@@530 (T@U) T@U)
(declare-fun $generated@@544 (T@U) Int)
(declare-fun $generated@@545 (T@U) Int)
(declare-fun $generated@@561 (T@U) T@U)
(declare-fun $generated@@618 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@61) $generated@@74)) (= (type $generated@@62) $generated@@71)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@71)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@71)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert  (and (and (and (forall (($generated@@141 (_ BitVec 8)) ) (! (= ($generated@@140 ($generated@@139 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@139 $generated@@141))
)) (= ($generated@@1 $generated@@138) 14)) (forall (($generated@@142 T@U) ) (!  (=> (= (type $generated@@142) $generated@@138) (= ($generated@@139 ($generated@@140 $generated@@142)) $generated@@142))
 :pattern ( ($generated@@140 $generated@@142))
))) (forall (($generated@@143 (_ BitVec 8)) ) (! (= (type ($generated@@139 $generated@@143)) $generated@@138)
 :pattern ( ($generated@@139 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (= (type $generated@@144) $generated@@138) (= (type $generated@@145) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@144 ($generated@@81 8) $generated@@145))
 :pattern ( ($generated@@80 $generated@@144 ($generated@@81 8) $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and (= (type $generated@@147) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@148) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@146 $generated@@147 $generated@@148)) (forall (($generated@@149 T@U) ) (!  (=> (and (= (type $generated@@149) $generated@@83) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@147 $generated@@149) $generated@@60))) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@148 $generated@@149) $generated@@60)))
 :pattern ( ($generated@@89 ($generated@@87 $generated@@148 $generated@@149) $generated@@60))
)))
 :pattern ( ($generated@@146 $generated@@147 $generated@@148))
)))
(assert  (and (= (type $generated@@150) $generated@@70) (= (type $generated@@151) $generated@@83)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and (= (type $generated@@152) $generated@@83) (= (type $generated@@153) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@152 $generated@@150 $generated@@153)  (or (= $generated@@152 $generated@@151) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@153 $generated@@152) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@152 $generated@@150 $generated@@153))
)))
(assert (= (type $generated@@154) $generated@@70))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (= (type $generated@@155) $generated@@83) (= (type $generated@@156) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@155 $generated@@154 $generated@@156)  (or (= $generated@@155 $generated@@151) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@156 $generated@@155) $generated@@60)))))
 :pattern ( ($generated@@80 $generated@@155 $generated@@154 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= (type $generated@@158) $generated@@2) ($generated@@157 $generated@@158 ($generated@@81 0)))
 :pattern ( ($generated@@157 $generated@@158 ($generated@@81 0)))
)))
(assert (forall (($generated@@159 T@U) ) (!  (=> (= (type $generated@@159) $generated@@138) ($generated@@157 $generated@@159 ($generated@@81 8)))
 :pattern ( ($generated@@157 $generated@@159 ($generated@@81 8)))
)))
(assert ($generated@@160 $generated@@154))
(assert  (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@164 $generated@@165)) $generated@@70)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and (and (= (type $generated@@166) $generated@@70) (= (type $generated@@167) $generated@@70)) (= (type $generated@@168) $generated@@163)) ($generated@@157 $generated@@168 ($generated@@162 $generated@@166 $generated@@167))) ($generated@@161 $generated@@168))
 :pattern ( ($generated@@161 $generated@@168) ($generated@@157 $generated@@168 ($generated@@162 $generated@@166 $generated@@167)))
)))
(assert  (and (and (= ($generated@@1 $generated@@172) 16) (forall (($generated@@173 T@U) ) (! (= (type ($generated@@170 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@170 $generated@@173))
))) (forall (($generated@@174 T@U) ) (! (= (type ($generated@@171 $generated@@174)) $generated@@172)
 :pattern ( ($generated@@171 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and (= (type $generated@@175) $generated@@163) (= (type $generated@@176) $generated@@163)) true) (= ($generated@@169 $generated@@175 $generated@@176)  (and (= ($generated@@170 $generated@@175) ($generated@@170 $generated@@176)) (= ($generated@@171 $generated@@175) ($generated@@171 $generated@@176)))))
 :pattern ( ($generated@@169 $generated@@175 $generated@@176))
)))
(assert (= (type $generated@@177) $generated@@70))
(assert (forall (($generated@@178 T@U) ) (!  (=> (= (type $generated@@178) $generated@@83) (=> (and (not (= $generated@@178 $generated@@151)) ($generated@@157 $generated@@178 $generated@@154)) ($generated@@157 $generated@@178 $generated@@177)))
 :pattern ( ($generated@@157 $generated@@178 $generated@@154))
)))
(assert (forall (($generated@@181 T@U) ) (! (= (type ($generated@@179 $generated@@181)) $generated@@70)
 :pattern ( ($generated@@179 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and (and (= (type $generated@@182) ($generated@@82 $generated@@172 $generated@@2)) (= (type $generated@@183) $generated@@70)) ($generated@@157 $generated@@182 ($generated@@179 $generated@@183))) ($generated@@180 $generated@@182))
 :pattern ( ($generated@@157 $generated@@182 ($generated@@179 $generated@@183)))
)))
(assert (forall (($generated@@185 T@U) ) (! (= (type ($generated@@184 $generated@@185)) $generated@@70)
 :pattern ( ($generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ) (!  (=> (= (type $generated@@186) $generated@@83) (= ($generated@@157 $generated@@186 $generated@@154)  (or (= $generated@@186 $generated@@151) (= ($generated@@184 $generated@@186) $generated@@154))))
 :pattern ( ($generated@@157 $generated@@186 $generated@@154))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (= ($generated@@1 ($generated@@189 $generated@@193 $generated@@194)) 17)) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (! (= ($generated@@190 ($generated@@189 $generated@@195 $generated@@196)) $generated@@195)
 :pattern ( ($generated@@189 $generated@@195 $generated@@196))
))) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@191 ($generated@@189 $generated@@197 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@189 $generated@@197 $generated@@198))
))) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (let (($generated@@202 ($generated@@191 (type $generated@@199))))
(= (type ($generated@@187 $generated@@199 $generated@@200 $generated@@201)) $generated@@202))
 :pattern ( ($generated@@187 $generated@@199 $generated@@200 $generated@@201))
))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (let (($generated@@207 (type $generated@@206)))
(let (($generated@@208 (type $generated@@204)))
(= (type ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206)) ($generated@@189 $generated@@208 $generated@@207))))
 :pattern ( ($generated@@192 $generated@@203 $generated@@204 $generated@@205 $generated@@206))
))) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (let (($generated@@213 ($generated@@191 (type $generated@@209))))
 (=> (= (type $generated@@212) $generated@@213) (= ($generated@@187 ($generated@@192 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@210 $generated@@211) $generated@@212)))
 :weight 0
))) (and (and (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@216 $generated@@218) (= ($generated@@187 ($generated@@192 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@187 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@187 ($generated@@192 $generated@@221 $generated@@222 $generated@@223 $generated@@220) $generated@@224 $generated@@225) ($generated@@187 $generated@@221 $generated@@224 $generated@@225)))
 :weight 0
))) (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or true (= ($generated@@187 ($generated@@192 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@187 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
)))) (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Bool) ) (! (= (type ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235)) ($generated@@189 $generated@@83 $generated@@4))
 :pattern ( ($generated@@188 $generated@@232 $generated@@233 $generated@@234 $generated@@235))
))))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 Bool) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (let (($generated@@242 ($generated@@73 (type $generated@@241))))
 (=> (and (and (and (and (= (type $generated@@236) $generated@@83) (= (type $generated@@237) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@238) ($generated@@72 $generated@@4))) (= (type $generated@@240) $generated@@83)) (= (type $generated@@241) ($generated@@72 $generated@@242))) (= ($generated@@0 ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))  (=> (and (not (= $generated@@240 $generated@@236)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@237 $generated@@240) $generated@@238))) $generated@@239))))
 :pattern ( ($generated@@187 ($generated@@188 $generated@@236 $generated@@237 $generated@@238 $generated@@239) $generated@@240 $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (= (type $generated@@243) $generated@@83) (= (type $generated@@244) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@243 $generated@@177 $generated@@244) ($generated@@80 $generated@@243 $generated@@150 $generated@@244)))
 :pattern ( ($generated@@80 $generated@@243 $generated@@177 $generated@@244))
)))
(assert (= (type $generated@@245) $generated@@70))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and (= (type $generated@@246) $generated@@83) (= (type $generated@@247) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@246 $generated@@245 $generated@@247) ($generated@@80 $generated@@246 $generated@@154 $generated@@247)))
 :pattern ( ($generated@@80 $generated@@246 $generated@@245 $generated@@247))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (! (= (type ($generated@@248 $generated@@250 $generated@@251)) $generated@@163)
 :pattern ( ($generated@@248 $generated@@250 $generated@@251))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (and (and (= (type $generated@@252) $generated@@70) (= (type $generated@@253) $generated@@70)) (= (type $generated@@254) $generated@@172)) (= (type $generated@@255) $generated@@172)) (= ($generated@@157 ($generated@@248 $generated@@254 $generated@@255) ($generated@@162 $generated@@252 $generated@@253))  (and ($generated@@249 $generated@@254 $generated@@252) ($generated@@249 $generated@@255 $generated@@253))))
 :pattern ( ($generated@@157 ($generated@@248 $generated@@254 $generated@@255) ($generated@@162 $generated@@252 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@163) (= (type $generated@@257) $generated@@163)) (= ($generated@@169 $generated@@256 $generated@@257) (= $generated@@256 $generated@@257)))
 :pattern ( ($generated@@169 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@70)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@82 $generated@@172 $generated@@4)) (= (type $generated@@261) $generated@@70)) (= ($generated@@157 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@172) ($generated@@0 ($generated@@87 $generated@@260 $generated@@262))) ($generated@@249 $generated@@262 $generated@@261))
 :pattern ( ($generated@@87 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@157 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@70)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@82 $generated@@172 $generated@@4)) (= (type $generated@@266) $generated@@70)) (= ($generated@@157 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@172) ($generated@@0 ($generated@@87 $generated@@265 $generated@@267))) ($generated@@249 $generated@@267 $generated@@266))
 :pattern ( ($generated@@87 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@157 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@269 T@U) ) (! (let (($generated@@270 (type $generated@@269)))
(= (type ($generated@@268 $generated@@269)) $generated@@270))
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (= ($generated@@268 $generated@@271) $generated@@271)
 :pattern ( ($generated@@268 $generated@@271))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@274) $generated@@70) (= (type $generated@@275) $generated@@70)) (= (type $generated@@276) $generated@@172)) (= (type $generated@@277) $generated@@172)) (= (type $generated@@278) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@272 $generated@@278)) (= ($generated@@80 ($generated@@248 $generated@@276 $generated@@277) ($generated@@162 $generated@@274 $generated@@275) $generated@@278)  (and ($generated@@273 $generated@@276 $generated@@274 $generated@@278) ($generated@@273 $generated@@277 $generated@@275 $generated@@278))))
 :pattern ( ($generated@@80 ($generated@@248 $generated@@276 $generated@@277) ($generated@@162 $generated@@274 $generated@@275) $generated@@278))
)))
(assert (forall (($generated@@280 T@U) ) (! (= (type ($generated@@279 $generated@@280)) $generated@@74)
 :pattern ( ($generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= (type $generated@@281) $generated@@163) (= ($generated@@161 $generated@@281) (= ($generated@@279 $generated@@281) $generated@@61)))
 :pattern ( ($generated@@161 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ) (!  (=> (and (= (type $generated@@282) $generated@@163) ($generated@@161 $generated@@282)) (exists (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (and (and (= (type $generated@@283) $generated@@172) (= (type $generated@@284) $generated@@172)) (= $generated@@282 ($generated@@248 $generated@@283 $generated@@284)))
 :no-pattern (type $generated@@283)
 :no-pattern (type $generated@@284)
 :no-pattern ($generated $generated@@283)
 :no-pattern ($generated@@0 $generated@@283)
 :no-pattern ($generated $generated@@284)
 :no-pattern ($generated@@0 $generated@@284)
)))
 :pattern ( ($generated@@161 $generated@@282))
)))
(assert  (and (and (forall (($generated@@289 T@T) ) (= ($generated@@1 ($generated@@287 $generated@@289)) 18)) (forall (($generated@@290 T@T) ) (! (= ($generated@@288 ($generated@@287 $generated@@290)) $generated@@290)
 :pattern ( ($generated@@287 $generated@@290))
))) (forall (($generated@@291 T@T) ) (! (= (type ($generated@@285 $generated@@291)) ($generated@@287 $generated@@291))
 :pattern ( ($generated@@285 $generated@@291))
))))
(assert (forall (($generated@@292 T@T) ) (! (= ($generated@@286 ($generated@@285 $generated@@292)) 0)
 :pattern ( ($generated@@285 $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ) (! (= (type ($generated@@293 $generated@@294)) $generated@@172)
 :pattern ( ($generated@@293 $generated@@294))
)))
(assert (forall (($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and (= (type $generated@@296) $generated@@70) (= (type $generated@@297) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@273 ($generated@@293 $generated@@295) $generated@@296 $generated@@297) ($generated@@80 $generated@@295 $generated@@296 $generated@@297)))
 :pattern ( ($generated@@273 ($generated@@293 $generated@@295) $generated@@296 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@298) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@299) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@300) $generated@@172)) (= (type $generated@@301) $generated@@70)) ($generated@@146 $generated@@298 $generated@@299)) ($generated@@273 $generated@@300 $generated@@301 $generated@@298)) ($generated@@273 $generated@@300 $generated@@301 $generated@@299))
 :pattern ( ($generated@@146 $generated@@298 $generated@@299) ($generated@@273 $generated@@300 $generated@@301 $generated@@298))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@302) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@303) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@305) $generated@@70)) ($generated@@146 $generated@@302 $generated@@303)) ($generated@@80 $generated@@304 $generated@@305 $generated@@302)) ($generated@@80 $generated@@304 $generated@@305 $generated@@303))
 :pattern ( ($generated@@146 $generated@@302 $generated@@303) ($generated@@80 $generated@@304 $generated@@305 $generated@@302))
)))
(assert (forall (($generated@@308 T@T) ) (! (= (type ($generated@@307 $generated@@308)) ($generated@@82 $generated@@308 $generated@@2))
 :pattern ( ($generated@@307 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ) (! (let (($generated@@310 ($generated@@85 (type $generated@@309))))
 (=> (= (type $generated@@309) ($generated@@82 $generated@@310 $generated@@2)) (and (= (= ($generated@@306 $generated@@309) 0) (= $generated@@309 ($generated@@307 $generated@@310))) (=> (not (= ($generated@@306 $generated@@309) 0)) (exists (($generated@@311 T@U) ) (!  (and (= (type $generated@@311) $generated@@310) (< 0 ($generated ($generated@@87 $generated@@309 $generated@@311))))
 :no-pattern (type $generated@@311)
 :no-pattern ($generated $generated@@311)
 :no-pattern ($generated@@0 $generated@@311)
))))))
 :pattern ( ($generated@@306 $generated@@309))
)))
(assert  (and (and (and (and (forall (($generated@@317 T@T) ($generated@@318 T@T) ) (= ($generated@@1 ($generated@@314 $generated@@317 $generated@@318)) 19)) (forall (($generated@@319 T@T) ($generated@@320 T@T) ) (! (= ($generated@@315 ($generated@@314 $generated@@319 $generated@@320)) $generated@@319)
 :pattern ( ($generated@@314 $generated@@319 $generated@@320))
))) (forall (($generated@@321 T@T) ($generated@@322 T@T) ) (! (= ($generated@@316 ($generated@@314 $generated@@321 $generated@@322)) $generated@@322)
 :pattern ( ($generated@@314 $generated@@321 $generated@@322))
))) (forall (($generated@@323 T@U) ) (! (let (($generated@@324 ($generated@@315 (type $generated@@323))))
(= (type ($generated@@312 $generated@@323)) ($generated@@82 $generated@@324 $generated@@4)))
 :pattern ( ($generated@@312 $generated@@323))
))) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= (type ($generated@@313 $generated@@325 $generated@@326)) ($generated@@314 $generated@@325 $generated@@326))
 :pattern ( ($generated@@313 $generated@@325 $generated@@326))
))))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@T) ) (! (let (($generated@@329 (type $generated@@327)))
 (not ($generated@@0 ($generated@@87 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327))))
 :pattern ( (let (($generated@@329 (type $generated@@327)))
($generated@@87 ($generated@@312 ($generated@@313 $generated@@329 $generated@@328)) $generated@@327)))
)))
(assert  (and (and (and (and (forall (($generated@@335 T@T) ($generated@@336 T@T) ) (= ($generated@@1 ($generated@@332 $generated@@335 $generated@@336)) 20)) (forall (($generated@@337 T@T) ($generated@@338 T@T) ) (! (= ($generated@@333 ($generated@@332 $generated@@337 $generated@@338)) $generated@@337)
 :pattern ( ($generated@@332 $generated@@337 $generated@@338))
))) (forall (($generated@@339 T@T) ($generated@@340 T@T) ) (! (= ($generated@@334 ($generated@@332 $generated@@339 $generated@@340)) $generated@@340)
 :pattern ( ($generated@@332 $generated@@339 $generated@@340))
))) (forall (($generated@@341 T@U) ) (! (let (($generated@@342 ($generated@@333 (type $generated@@341))))
(= (type ($generated@@330 $generated@@341)) ($generated@@82 $generated@@342 $generated@@4)))
 :pattern ( ($generated@@330 $generated@@341))
))) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= (type ($generated@@331 $generated@@343 $generated@@344)) ($generated@@332 $generated@@343 $generated@@344))
 :pattern ( ($generated@@331 $generated@@343 $generated@@344))
))))
(assert (forall (($generated@@345 T@U) ($generated@@346 T@T) ) (! (let (($generated@@347 (type $generated@@345)))
 (not ($generated@@0 ($generated@@87 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345))))
 :pattern ( (let (($generated@@347 (type $generated@@345)))
($generated@@87 ($generated@@330 ($generated@@331 $generated@@347 $generated@@346)) $generated@@345)))
)))
(assert (forall (($generated@@348 T@U) ) (! (let (($generated@@349 ($generated@@85 (type $generated@@348))))
 (=> (= (type $generated@@348) ($generated@@82 $generated@@349 $generated@@2)) (= ($generated@@180 $generated@@348) (forall (($generated@@350 T@U) ) (!  (=> (= (type $generated@@350) $generated@@349) (and (<= 0 ($generated ($generated@@87 $generated@@348 $generated@@350))) (<= ($generated ($generated@@87 $generated@@348 $generated@@350)) ($generated@@306 $generated@@348))))
 :pattern ( ($generated@@87 $generated@@348 $generated@@350))
)))))
 :pattern ( ($generated@@180 $generated@@348))
)))
(assert (forall (($generated@@352 T@T) ($generated@@353 T@U) ) (! (= (type ($generated@@351 $generated@@352 $generated@@353)) $generated@@352)
 :pattern ( ($generated@@351 $generated@@352 $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ) (!  (=> (and (= (type $generated@@354) $generated@@172) ($generated@@249 $generated@@354 $generated@@150)) (and (= ($generated@@293 ($generated@@351 $generated@@83 $generated@@354)) $generated@@354) ($generated@@157 ($generated@@351 $generated@@83 $generated@@354) $generated@@150)))
 :pattern ( ($generated@@249 $generated@@354 $generated@@150))
)))
(assert (forall (($generated@@355 T@U) ) (!  (=> (and (= (type $generated@@355) $generated@@172) ($generated@@249 $generated@@355 $generated@@177)) (and (= ($generated@@293 ($generated@@351 $generated@@83 $generated@@355)) $generated@@355) ($generated@@157 ($generated@@351 $generated@@83 $generated@@355) $generated@@177)))
 :pattern ( ($generated@@249 $generated@@355 $generated@@177))
)))
(assert (forall (($generated@@356 T@U) ) (!  (=> (and (= (type $generated@@356) $generated@@172) ($generated@@249 $generated@@356 $generated@@154)) (and (= ($generated@@293 ($generated@@351 $generated@@83 $generated@@356)) $generated@@356) ($generated@@157 ($generated@@351 $generated@@83 $generated@@356) $generated@@154)))
 :pattern ( ($generated@@249 $generated@@356 $generated@@154))
)))
(assert (forall (($generated@@357 T@U) ) (!  (=> (and (= (type $generated@@357) $generated@@172) ($generated@@249 $generated@@357 $generated@@245)) (and (= ($generated@@293 ($generated@@351 $generated@@83 $generated@@357)) $generated@@357) ($generated@@157 ($generated@@351 $generated@@83 $generated@@357) $generated@@245)))
 :pattern ( ($generated@@249 $generated@@357 $generated@@245))
)))
(assert (forall (($generated@@358 T@U) ) (!  (=> (= (type $generated@@358) $generated@@83) (= ($generated@@157 $generated@@358 $generated@@177)  (and ($generated@@157 $generated@@358 $generated@@150) (not (= $generated@@358 $generated@@151)))))
 :pattern ( ($generated@@157 $generated@@358 $generated@@177))
)))
(assert (forall (($generated@@359 T@U) ) (!  (=> (= (type $generated@@359) $generated@@83) (= ($generated@@157 $generated@@359 $generated@@245)  (and ($generated@@157 $generated@@359 $generated@@154) (not (= $generated@@359 $generated@@151)))))
 :pattern ( ($generated@@157 $generated@@359 $generated@@245))
)))
(assert (forall (($generated@@360 T@U) ) (! (let (($generated@@361 ($generated@@316 (type $generated@@360))))
(let (($generated@@362 ($generated@@315 (type $generated@@360))))
 (=> (= (type $generated@@360) ($generated@@314 $generated@@362 $generated@@361)) (or (= $generated@@360 ($generated@@313 $generated@@362 $generated@@361)) (exists (($generated@@363 T@U) ) (!  (and (= (type $generated@@363) $generated@@362) ($generated@@0 ($generated@@87 ($generated@@312 $generated@@360) $generated@@363)))
 :no-pattern (type $generated@@363)
 :no-pattern ($generated $generated@@363)
 :no-pattern ($generated@@0 $generated@@363)
))))))
 :pattern ( ($generated@@312 $generated@@360))
)))
(assert (forall (($generated@@365 T@U) ) (! (let (($generated@@366 ($generated@@316 (type $generated@@365))))
(= (type ($generated@@364 $generated@@365)) ($generated@@82 $generated@@366 $generated@@4)))
 :pattern ( ($generated@@364 $generated@@365))
)))
(assert (forall (($generated@@367 T@U) ) (! (let (($generated@@368 ($generated@@316 (type $generated@@367))))
(let (($generated@@369 ($generated@@315 (type $generated@@367))))
 (=> (= (type $generated@@367) ($generated@@314 $generated@@369 $generated@@368)) (or (= $generated@@367 ($generated@@313 $generated@@369 $generated@@368)) (exists (($generated@@370 T@U) ) (!  (and (= (type $generated@@370) $generated@@368) ($generated@@0 ($generated@@87 ($generated@@364 $generated@@367) $generated@@370)))
 :no-pattern (type $generated@@370)
 :no-pattern ($generated $generated@@370)
 :no-pattern ($generated@@0 $generated@@370)
))))))
 :pattern ( ($generated@@364 $generated@@367))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@334 (type $generated@@371))))
(let (($generated@@373 ($generated@@333 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@332 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@331 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@373) ($generated@@0 ($generated@@87 ($generated@@330 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@330 $generated@@371))
)))
(assert (forall (($generated@@376 T@U) ) (! (let (($generated@@377 ($generated@@334 (type $generated@@376))))
(= (type ($generated@@375 $generated@@376)) ($generated@@82 $generated@@377 $generated@@4)))
 :pattern ( ($generated@@375 $generated@@376))
)))
(assert (forall (($generated@@378 T@U) ) (! (let (($generated@@379 ($generated@@334 (type $generated@@378))))
(let (($generated@@380 ($generated@@333 (type $generated@@378))))
 (=> (= (type $generated@@378) ($generated@@332 $generated@@380 $generated@@379)) (or (= $generated@@378 ($generated@@331 $generated@@380 $generated@@379)) (exists (($generated@@381 T@U) ) (!  (and (= (type $generated@@381) $generated@@379) ($generated@@0 ($generated@@87 ($generated@@375 $generated@@378) $generated@@381)))
 :no-pattern (type $generated@@381)
 :no-pattern ($generated $generated@@381)
 :no-pattern ($generated@@0 $generated@@381)
))))))
 :pattern ( ($generated@@375 $generated@@378))
)))
(assert (forall (($generated@@382 T@U) ($generated@@383 T@U) ) (!  (=> (and (= (type $generated@@382) ($generated@@82 $generated@@172 $generated@@2)) (= (type $generated@@383) $generated@@70)) (= ($generated@@157 $generated@@382 ($generated@@179 $generated@@383)) (forall (($generated@@384 T@U) ) (!  (=> (and (= (type $generated@@384) $generated@@172) (< 0 ($generated ($generated@@87 $generated@@382 $generated@@384)))) ($generated@@249 $generated@@384 $generated@@383))
 :pattern ( ($generated@@87 $generated@@382 $generated@@384))
))))
 :pattern ( ($generated@@157 $generated@@382 ($generated@@179 $generated@@383)))
)))
(assert (forall (($generated@@385 T@U) ($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (and (= (type $generated@@385) ($generated@@82 $generated@@172 $generated@@4)) (= (type $generated@@386) $generated@@70)) (= (type $generated@@387) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@385 ($generated@@258 $generated@@386) $generated@@387) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@172) ($generated@@0 ($generated@@87 $generated@@385 $generated@@388))) ($generated@@273 $generated@@388 $generated@@386 $generated@@387))
 :pattern ( ($generated@@87 $generated@@385 $generated@@388))
))))
 :pattern ( ($generated@@80 $generated@@385 ($generated@@258 $generated@@386) $generated@@387))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) ($generated@@82 $generated@@172 $generated@@4)) (= (type $generated@@390) $generated@@70)) (= (type $generated@@391) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@389 ($generated@@263 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@172) ($generated@@0 ($generated@@87 $generated@@389 $generated@@392))) ($generated@@273 $generated@@392 $generated@@390 $generated@@391))
 :pattern ( ($generated@@87 $generated@@389 $generated@@392))
))))
 :pattern ( ($generated@@80 $generated@@389 ($generated@@263 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ) (! (let (($generated@@394 (type $generated@@393)))
(= ($generated ($generated@@87 ($generated@@307 $generated@@394) $generated@@393)) 0))
 :pattern ( (let (($generated@@394 (type $generated@@393)))
($generated@@87 ($generated@@307 $generated@@394) $generated@@393)))
)))
(assert  (and (forall (($generated@@397 T@U) ) (! (= (type ($generated@@395 $generated@@397)) ($generated@@82 $generated@@172 $generated@@4))
 :pattern ( ($generated@@395 $generated@@397))
)) (forall (($generated@@398 T@U) ) (! (let (($generated@@399 ($generated@@316 (type $generated@@398))))
(let (($generated@@400 ($generated@@315 (type $generated@@398))))
(= (type ($generated@@396 $generated@@398)) ($generated@@82 $generated@@400 $generated@@399))))
 :pattern ( ($generated@@396 $generated@@398))
))))
(assert (forall (($generated@@401 T@U) ($generated@@402 T@U) ) (!  (=> (and (= (type $generated@@401) ($generated@@314 $generated@@172 $generated@@172)) (= (type $generated@@402) $generated@@172)) (= ($generated@@0 ($generated@@87 ($generated@@395 $generated@@401) $generated@@402))  (and ($generated@@0 ($generated@@87 ($generated@@312 $generated@@401) ($generated@@170 ($generated@@351 $generated@@163 $generated@@402)))) (= ($generated@@87 ($generated@@396 $generated@@401) ($generated@@170 ($generated@@351 $generated@@163 $generated@@402))) ($generated@@171 ($generated@@351 $generated@@163 $generated@@402))))))
 :pattern ( ($generated@@87 ($generated@@395 $generated@@401) $generated@@402))
)))
(assert  (and (forall (($generated@@405 T@U) ) (! (= (type ($generated@@403 $generated@@405)) ($generated@@82 $generated@@172 $generated@@4))
 :pattern ( ($generated@@403 $generated@@405))
)) (forall (($generated@@406 T@U) ) (! (let (($generated@@407 ($generated@@334 (type $generated@@406))))
(let (($generated@@408 ($generated@@333 (type $generated@@406))))
(= (type ($generated@@404 $generated@@406)) ($generated@@82 $generated@@408 $generated@@407))))
 :pattern ( ($generated@@404 $generated@@406))
))))
(assert (forall (($generated@@409 T@U) ($generated@@410 T@U) ) (!  (=> (and (= (type $generated@@409) ($generated@@332 $generated@@172 $generated@@172)) (= (type $generated@@410) $generated@@172)) (= ($generated@@0 ($generated@@87 ($generated@@403 $generated@@409) $generated@@410))  (and ($generated@@0 ($generated@@87 ($generated@@330 $generated@@409) ($generated@@170 ($generated@@351 $generated@@163 $generated@@410)))) (= ($generated@@87 ($generated@@404 $generated@@409) ($generated@@170 ($generated@@351 $generated@@163 $generated@@410))) ($generated@@171 ($generated@@351 $generated@@163 $generated@@410))))))
 :pattern ( ($generated@@87 ($generated@@403 $generated@@409) $generated@@410))
)))
(assert (forall (($generated@@411 T@U) ($generated@@412 T@U) ) (! (let (($generated@@413 (type $generated@@412)))
(let (($generated@@414 ($generated@@315 (type $generated@@411))))
 (=> (= (type $generated@@411) ($generated@@314 $generated@@414 $generated@@413)) (= ($generated@@0 ($generated@@87 ($generated@@364 $generated@@411) $generated@@412)) (exists (($generated@@415 T@U) ) (!  (and (= (type $generated@@415) $generated@@414) (and ($generated@@0 ($generated@@87 ($generated@@312 $generated@@411) $generated@@415)) (= $generated@@412 ($generated@@87 ($generated@@396 $generated@@411) $generated@@415))))
 :pattern ( ($generated@@87 ($generated@@312 $generated@@411) $generated@@415))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@411) $generated@@415))
))))))
 :pattern ( ($generated@@87 ($generated@@364 $generated@@411) $generated@@412))
)))
(assert (forall (($generated@@416 T@U) ($generated@@417 T@U) ) (! (let (($generated@@418 (type $generated@@417)))
(let (($generated@@419 ($generated@@333 (type $generated@@416))))
 (=> (= (type $generated@@416) ($generated@@332 $generated@@419 $generated@@418)) (= ($generated@@0 ($generated@@87 ($generated@@375 $generated@@416) $generated@@417)) (exists (($generated@@420 T@U) ) (!  (and (= (type $generated@@420) $generated@@419) (and ($generated@@0 ($generated@@87 ($generated@@330 $generated@@416) $generated@@420)) (= $generated@@417 ($generated@@87 ($generated@@404 $generated@@416) $generated@@420))))
 :pattern ( ($generated@@87 ($generated@@330 $generated@@416) $generated@@420))
 :pattern ( ($generated@@87 ($generated@@404 $generated@@416) $generated@@420))
))))))
 :pattern ( ($generated@@87 ($generated@@375 $generated@@416) $generated@@417))
)))
(assert (forall (($generated@@422 T@U) ($generated@@423 T@U) ) (! (= (type ($generated@@421 $generated@@422 $generated@@423)) $generated@@70)
 :pattern ( ($generated@@421 $generated@@422 $generated@@423))
)))
(assert (forall (($generated@@424 T@U) ($generated@@425 T@U) ($generated@@426 T@U) ($generated@@427 T@U) ) (!  (=> (and (and (and (= (type $generated@@424) ($generated@@314 $generated@@172 $generated@@172)) (= (type $generated@@425) $generated@@70)) (= (type $generated@@426) $generated@@70)) (= (type $generated@@427) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427) (forall (($generated@@428 T@U) ) (!  (=> (and (= (type $generated@@428) $generated@@172) ($generated@@0 ($generated@@87 ($generated@@312 $generated@@424) $generated@@428))) (and ($generated@@273 ($generated@@87 ($generated@@396 $generated@@424) $generated@@428) $generated@@426 $generated@@427) ($generated@@273 $generated@@428 $generated@@425 $generated@@427)))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@424) $generated@@428))
 :pattern ( ($generated@@87 ($generated@@312 $generated@@424) $generated@@428))
))))
 :pattern ( ($generated@@80 $generated@@424 ($generated@@421 $generated@@425 $generated@@426) $generated@@427))
)))
(assert (forall (($generated@@430 T@U) ($generated@@431 T@U) ) (! (= (type ($generated@@429 $generated@@430 $generated@@431)) $generated@@70)
 :pattern ( ($generated@@429 $generated@@430 $generated@@431))
)))
(assert (forall (($generated@@432 T@U) ($generated@@433 T@U) ($generated@@434 T@U) ($generated@@435 T@U) ) (!  (=> (and (and (and (= (type $generated@@432) ($generated@@332 $generated@@172 $generated@@172)) (= (type $generated@@433) $generated@@70)) (= (type $generated@@434) $generated@@70)) (= (type $generated@@435) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435) (forall (($generated@@436 T@U) ) (!  (=> (and (= (type $generated@@436) $generated@@172) ($generated@@0 ($generated@@87 ($generated@@330 $generated@@432) $generated@@436))) (and ($generated@@273 ($generated@@87 ($generated@@404 $generated@@432) $generated@@436) $generated@@434 $generated@@435) ($generated@@273 $generated@@436 $generated@@433 $generated@@435)))
 :pattern ( ($generated@@87 ($generated@@404 $generated@@432) $generated@@436))
 :pattern ( ($generated@@87 ($generated@@330 $generated@@432) $generated@@436))
))))
 :pattern ( ($generated@@80 $generated@@432 ($generated@@429 $generated@@433 $generated@@434) $generated@@435))
)))
(assert (forall (($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (and (and (= (type $generated@@437) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@438) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@439) ($generated@@82 $generated@@83 $generated@@84))) (not (= $generated@@437 $generated@@439))) (and ($generated@@146 $generated@@437 $generated@@438) ($generated@@146 $generated@@438 $generated@@439))) ($generated@@146 $generated@@437 $generated@@439))
 :pattern ( ($generated@@146 $generated@@437 $generated@@438) ($generated@@146 $generated@@438 $generated@@439))
)))
(assert (forall (($generated@@441 T@T) ) (! (= (type ($generated@@440 $generated@@441)) ($generated@@82 $generated@@441 $generated@@4))
 :pattern ( ($generated@@440 $generated@@441))
)))
(assert (forall (($generated@@442 T@U) ) (! (let (($generated@@443 ($generated@@334 (type $generated@@442))))
(let (($generated@@444 ($generated@@333 (type $generated@@442))))
 (=> (= (type $generated@@442) ($generated@@332 $generated@@444 $generated@@443)) (= (= $generated@@442 ($generated@@331 $generated@@444 $generated@@443)) (= ($generated@@330 $generated@@442) ($generated@@440 $generated@@444))))))
 :pattern ( ($generated@@330 $generated@@442))
)))
(assert (forall (($generated@@445 T@U) ) (! (let (($generated@@446 ($generated@@334 (type $generated@@445))))
(let (($generated@@447 ($generated@@333 (type $generated@@445))))
 (=> (= (type $generated@@445) ($generated@@332 $generated@@447 $generated@@446)) (= (= $generated@@445 ($generated@@331 $generated@@447 $generated@@446)) (= ($generated@@375 $generated@@445) ($generated@@440 $generated@@446))))))
 :pattern ( ($generated@@375 $generated@@445))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@334 (type $generated@@448))))
(let (($generated@@450 ($generated@@333 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@332 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@331 $generated@@450 $generated@@449)) (= ($generated@@403 $generated@@448) ($generated@@440 $generated@@172))))))
 :pattern ( ($generated@@403 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@316 (type $generated@@451))))
(let (($generated@@453 ($generated@@315 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@314 $generated@@453 $generated@@452)) (or (= $generated@@451 ($generated@@313 $generated@@453 $generated@@452)) (exists (($generated@@454 T@U) ($generated@@455 T@U) ) (!  (and (and (= (type $generated@@454) $generated@@172) (= (type $generated@@455) $generated@@172)) ($generated@@0 ($generated@@87 ($generated@@395 $generated@@451) ($generated@@293 ($generated@@248 $generated@@454 $generated@@455)))))
 :no-pattern (type $generated@@454)
 :no-pattern (type $generated@@455)
 :no-pattern ($generated $generated@@454)
 :no-pattern ($generated@@0 $generated@@454)
 :no-pattern ($generated $generated@@455)
 :no-pattern ($generated@@0 $generated@@455)
))))))
 :pattern ( ($generated@@395 $generated@@451))
)))
(assert (forall (($generated@@456 T@U) ) (! (let (($generated@@457 ($generated@@334 (type $generated@@456))))
(let (($generated@@458 ($generated@@333 (type $generated@@456))))
 (=> (= (type $generated@@456) ($generated@@332 $generated@@458 $generated@@457)) (or (= $generated@@456 ($generated@@331 $generated@@458 $generated@@457)) (exists (($generated@@459 T@U) ($generated@@460 T@U) ) (!  (and (and (= (type $generated@@459) $generated@@172) (= (type $generated@@460) $generated@@172)) ($generated@@0 ($generated@@87 ($generated@@403 $generated@@456) ($generated@@293 ($generated@@248 $generated@@459 $generated@@460)))))
 :no-pattern (type $generated@@459)
 :no-pattern (type $generated@@460)
 :no-pattern ($generated $generated@@459)
 :no-pattern ($generated@@0 $generated@@459)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
))))))
 :pattern ( ($generated@@403 $generated@@456))
)))
(assert (forall (($generated@@461 T@U) ) (!  (=> (and (= (type $generated@@461) $generated@@172) ($generated@@249 $generated@@461 $generated@@46)) (and (= ($generated@@293 ($generated@@351 $generated@@2 $generated@@461)) $generated@@461) ($generated@@157 ($generated@@351 $generated@@2 $generated@@461) $generated@@46)))
 :pattern ( ($generated@@249 $generated@@461 $generated@@46))
)))
(assert (forall (($generated@@462 T@U) ) (!  (=> (and (= (type $generated@@462) $generated@@172) ($generated@@249 $generated@@462 $generated@@47)) (and (= ($generated@@293 ($generated@@351 $generated@@3 $generated@@462)) $generated@@462) ($generated@@157 ($generated@@351 $generated@@3 $generated@@462) $generated@@47)))
 :pattern ( ($generated@@249 $generated@@462 $generated@@47))
)))
(assert (forall (($generated@@463 T@U) ) (!  (=> (and (= (type $generated@@463) $generated@@172) ($generated@@249 $generated@@463 $generated@@44)) (and (= ($generated@@293 ($generated@@351 $generated@@4 $generated@@463)) $generated@@463) ($generated@@157 ($generated@@351 $generated@@4 $generated@@463) $generated@@44)))
 :pattern ( ($generated@@249 $generated@@463 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@464) 21))
(assert (forall (($generated@@465 T@U) ) (!  (=> (and (= (type $generated@@465) $generated@@172) ($generated@@249 $generated@@465 $generated@@45)) (and (= ($generated@@293 ($generated@@351 $generated@@464 $generated@@465)) $generated@@465) ($generated@@157 ($generated@@351 $generated@@464 $generated@@465) $generated@@45)))
 :pattern ( ($generated@@249 $generated@@465 $generated@@45))
)))
(assert (forall (($generated@@466 T@U) ($generated@@467 T@U) ) (!  (=> (= (type $generated@@467) $generated@@70) (= ($generated@@249 ($generated@@293 $generated@@466) $generated@@467) ($generated@@157 $generated@@466 $generated@@467)))
 :pattern ( ($generated@@249 ($generated@@293 $generated@@466) $generated@@467))
)))
(assert (forall (($generated@@468 T@U) ) (! (let (($generated@@469 ($generated@@85 (type $generated@@468))))
 (=> (= (type $generated@@468) ($generated@@82 $generated@@469 $generated@@2)) (<= 0 ($generated@@306 $generated@@468))))
 :pattern ( ($generated@@306 $generated@@468))
)))
(assert (forall (($generated@@470 T@U) ) (! (let (($generated@@471 ($generated@@288 (type $generated@@470))))
 (=> (= (type $generated@@470) ($generated@@287 $generated@@471)) (<= 0 ($generated@@286 $generated@@470))))
 :pattern ( ($generated@@286 $generated@@470))
)))
(assert (forall (($generated@@473 T@U) ) (! (= (type ($generated@@472 $generated@@473)) $generated@@70)
 :pattern ( ($generated@@472 $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ($generated@@475 T@U) ) (!  (=> (and (= (type $generated@@474) $generated@@70) (= (type $generated@@475) $generated@@70)) (= ($generated@@472 ($generated@@421 $generated@@474 $generated@@475)) $generated@@474))
 :pattern ( ($generated@@421 $generated@@474 $generated@@475))
)))
(assert (forall (($generated@@477 T@U) ) (! (= (type ($generated@@476 $generated@@477)) $generated@@70)
 :pattern ( ($generated@@476 $generated@@477))
)))
(assert (forall (($generated@@478 T@U) ($generated@@479 T@U) ) (!  (=> (and (= (type $generated@@478) $generated@@70) (= (type $generated@@479) $generated@@70)) (= ($generated@@476 ($generated@@421 $generated@@478 $generated@@479)) $generated@@479))
 :pattern ( ($generated@@421 $generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@70) (= (type $generated@@481) $generated@@70)) (= ($generated@@78 ($generated@@421 $generated@@480 $generated@@481)) $generated@@58))
 :pattern ( ($generated@@421 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@70)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@70) (= (type $generated@@485) $generated@@70)) (= ($generated@@482 ($generated@@429 $generated@@484 $generated@@485)) $generated@@484))
 :pattern ( ($generated@@429 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@487 T@U) ) (! (= (type ($generated@@486 $generated@@487)) $generated@@70)
 :pattern ( ($generated@@486 $generated@@487))
)))
(assert (forall (($generated@@488 T@U) ($generated@@489 T@U) ) (!  (=> (and (= (type $generated@@488) $generated@@70) (= (type $generated@@489) $generated@@70)) (= ($generated@@486 ($generated@@429 $generated@@488 $generated@@489)) $generated@@489))
 :pattern ( ($generated@@429 $generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@70) (= (type $generated@@491) $generated@@70)) (= ($generated@@78 ($generated@@429 $generated@@490 $generated@@491)) $generated@@59))
 :pattern ( ($generated@@429 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@492 T@U) ($generated@@493 T@U) ) (!  (=> (and (= (type $generated@@492) $generated@@172) (= (type $generated@@493) $generated@@172)) (= ($generated@@279 ($generated@@248 $generated@@492 $generated@@493)) $generated@@61))
 :pattern ( ($generated@@248 $generated@@492 $generated@@493))
)))
(assert (forall (($generated@@495 T@U) ) (! (= (type ($generated@@494 $generated@@495)) $generated@@70)
 :pattern ( ($generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@70) (= (type $generated@@497) $generated@@70)) (= ($generated@@494 ($generated@@162 $generated@@496 $generated@@497)) $generated@@496))
 :pattern ( ($generated@@162 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@499 T@U) ) (! (= (type ($generated@@498 $generated@@499)) $generated@@70)
 :pattern ( ($generated@@498 $generated@@499))
)))
(assert (forall (($generated@@500 T@U) ($generated@@501 T@U) ) (!  (=> (and (= (type $generated@@500) $generated@@70) (= (type $generated@@501) $generated@@70)) (= ($generated@@498 ($generated@@162 $generated@@500 $generated@@501)) $generated@@501))
 :pattern ( ($generated@@162 $generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@172) (= (type $generated@@503) $generated@@172)) (= ($generated@@170 ($generated@@248 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@248 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@504 T@U) ($generated@@505 T@U) ) (!  (=> (and (= (type $generated@@504) $generated@@172) (= (type $generated@@505) $generated@@172)) (= ($generated@@171 ($generated@@248 $generated@@504 $generated@@505)) $generated@@505))
 :pattern ( ($generated@@248 $generated@@504 $generated@@505))
)))
(assert  (and (forall (($generated@@508 T@U) ) (! (= (type ($generated@@506 $generated@@508)) $generated@@70)
 :pattern ( ($generated@@506 $generated@@508))
)) (forall (($generated@@509 T@U) ($generated@@510 Int) ) (! (let (($generated@@511 ($generated@@288 (type $generated@@509))))
(= (type ($generated@@507 $generated@@509 $generated@@510)) $generated@@511))
 :pattern ( ($generated@@507 $generated@@509 $generated@@510))
))))
(assert (forall (($generated@@512 T@U) ($generated@@513 T@U) ($generated@@514 T@U) ) (!  (=> (and (and (= (type $generated@@512) ($generated@@287 $generated@@172)) (= (type $generated@@513) $generated@@70)) (= (type $generated@@514) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@512 ($generated@@506 $generated@@513) $generated@@514) (forall (($generated@@515 Int) ) (!  (=> (and (<= 0 $generated@@515) (< $generated@@515 ($generated@@286 $generated@@512))) ($generated@@273 ($generated@@507 $generated@@512 $generated@@515) $generated@@513 $generated@@514))
 :pattern ( ($generated@@507 $generated@@512 $generated@@515))
))))
 :pattern ( ($generated@@80 $generated@@512 ($generated@@506 $generated@@513) $generated@@514))
)))
(assert (forall (($generated@@517 Int) ) (! (= ($generated@@516 ($generated@@81 $generated@@517)) $generated@@517)
 :pattern ( ($generated@@81 $generated@@517))
)))
(assert (forall (($generated@@519 T@U) ) (! (= (type ($generated@@518 $generated@@519)) $generated@@70)
 :pattern ( ($generated@@518 $generated@@519))
)))
(assert (forall (($generated@@520 T@U) ) (!  (=> (= (type $generated@@520) $generated@@70) (= ($generated@@518 ($generated@@258 $generated@@520)) $generated@@520))
 :pattern ( ($generated@@258 $generated@@520))
)))
(assert (forall (($generated@@521 T@U) ) (!  (=> (= (type $generated@@521) $generated@@70) (= ($generated@@78 ($generated@@258 $generated@@521)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@521))
)))
(assert (forall (($generated@@523 T@U) ) (! (= (type ($generated@@522 $generated@@523)) $generated@@70)
 :pattern ( ($generated@@522 $generated@@523))
)))
(assert (forall (($generated@@524 T@U) ) (!  (=> (= (type $generated@@524) $generated@@70) (= ($generated@@522 ($generated@@263 $generated@@524)) $generated@@524))
 :pattern ( ($generated@@263 $generated@@524))
)))
(assert (forall (($generated@@525 T@U) ) (!  (=> (= (type $generated@@525) $generated@@70) (= ($generated@@78 ($generated@@263 $generated@@525)) $generated@@55))
 :pattern ( ($generated@@263 $generated@@525))
)))
(assert (forall (($generated@@527 T@U) ) (! (= (type ($generated@@526 $generated@@527)) $generated@@70)
 :pattern ( ($generated@@526 $generated@@527))
)))
(assert (forall (($generated@@528 T@U) ) (!  (=> (= (type $generated@@528) $generated@@70) (= ($generated@@526 ($generated@@179 $generated@@528)) $generated@@528))
 :pattern ( ($generated@@179 $generated@@528))
)))
(assert (forall (($generated@@529 T@U) ) (!  (=> (= (type $generated@@529) $generated@@70) (= ($generated@@78 ($generated@@179 $generated@@529)) $generated@@56))
 :pattern ( ($generated@@179 $generated@@529))
)))
(assert (forall (($generated@@531 T@U) ) (! (= (type ($generated@@530 $generated@@531)) $generated@@70)
 :pattern ( ($generated@@530 $generated@@531))
)))
(assert (forall (($generated@@532 T@U) ) (!  (=> (= (type $generated@@532) $generated@@70) (= ($generated@@530 ($generated@@506 $generated@@532)) $generated@@532))
 :pattern ( ($generated@@506 $generated@@532))
)))
(assert (forall (($generated@@533 T@U) ) (!  (=> (= (type $generated@@533) $generated@@70) (= ($generated@@78 ($generated@@506 $generated@@533)) $generated@@57))
 :pattern ( ($generated@@506 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (! (let (($generated@@535 (type $generated@@534)))
(= ($generated@@351 $generated@@535 ($generated@@293 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@293 $generated@@534))
)))
(assert (forall (($generated@@536 T@U) ($generated@@537 T@U) ($generated@@538 T@U) ) (!  (=> (and (and (= (type $generated@@536) ($generated@@314 $generated@@172 $generated@@172)) (= (type $generated@@537) $generated@@70)) (= (type $generated@@538) $generated@@70)) (= ($generated@@157 $generated@@536 ($generated@@421 $generated@@537 $generated@@538)) (forall (($generated@@539 T@U) ) (!  (=> (and (= (type $generated@@539) $generated@@172) ($generated@@0 ($generated@@87 ($generated@@312 $generated@@536) $generated@@539))) (and ($generated@@249 ($generated@@87 ($generated@@396 $generated@@536) $generated@@539) $generated@@538) ($generated@@249 $generated@@539 $generated@@537)))
 :pattern ( ($generated@@87 ($generated@@396 $generated@@536) $generated@@539))
 :pattern ( ($generated@@87 ($generated@@312 $generated@@536) $generated@@539))
))))
 :pattern ( ($generated@@157 $generated@@536 ($generated@@421 $generated@@537 $generated@@538)))
)))
(assert (forall (($generated@@540 T@U) ($generated@@541 T@U) ($generated@@542 T@U) ) (!  (=> (and (and (= (type $generated@@540) ($generated@@332 $generated@@172 $generated@@172)) (= (type $generated@@541) $generated@@70)) (= (type $generated@@542) $generated@@70)) (= ($generated@@157 $generated@@540 ($generated@@429 $generated@@541 $generated@@542)) (forall (($generated@@543 T@U) ) (!  (=> (and (= (type $generated@@543) $generated@@172) ($generated@@0 ($generated@@87 ($generated@@330 $generated@@540) $generated@@543))) (and ($generated@@249 ($generated@@87 ($generated@@404 $generated@@540) $generated@@543) $generated@@542) ($generated@@249 $generated@@543 $generated@@541)))
 :pattern ( ($generated@@87 ($generated@@404 $generated@@540) $generated@@543))
 :pattern ( ($generated@@87 ($generated@@330 $generated@@540) $generated@@543))
))))
 :pattern ( ($generated@@157 $generated@@540 ($generated@@429 $generated@@541 $generated@@542)))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ) (!  (=> (and (= (type $generated@@546) $generated@@172) (= (type $generated@@547) $generated@@172)) (< ($generated@@544 $generated@@546) ($generated@@545 ($generated@@248 $generated@@546 $generated@@547))))
 :pattern ( ($generated@@248 $generated@@546 $generated@@547))
)))
(assert (forall (($generated@@548 T@U) ($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@548) $generated@@172) (= (type $generated@@549) $generated@@172)) (< ($generated@@544 $generated@@549) ($generated@@545 ($generated@@248 $generated@@548 $generated@@549))))
 :pattern ( ($generated@@248 $generated@@548 $generated@@549))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (and (= (type $generated@@550) $generated@@172) (= (type $generated@@551) $generated@@70)) (= (type $generated@@552) $generated@@70)) ($generated@@249 $generated@@550 ($generated@@421 $generated@@551 $generated@@552))) (and (= ($generated@@293 ($generated@@351 ($generated@@314 $generated@@172 $generated@@172) $generated@@550)) $generated@@550) ($generated@@157 ($generated@@351 ($generated@@314 $generated@@172 $generated@@172) $generated@@550) ($generated@@421 $generated@@551 $generated@@552))))
 :pattern ( ($generated@@249 $generated@@550 ($generated@@421 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@553 T@U) ($generated@@554 T@U) ($generated@@555 T@U) ) (!  (=> (and (and (and (= (type $generated@@553) $generated@@172) (= (type $generated@@554) $generated@@70)) (= (type $generated@@555) $generated@@70)) ($generated@@249 $generated@@553 ($generated@@429 $generated@@554 $generated@@555))) (and (= ($generated@@293 ($generated@@351 ($generated@@332 $generated@@172 $generated@@172) $generated@@553)) $generated@@553) ($generated@@157 ($generated@@351 ($generated@@332 $generated@@172 $generated@@172) $generated@@553) ($generated@@429 $generated@@554 $generated@@555))))
 :pattern ( ($generated@@249 $generated@@553 ($generated@@429 $generated@@554 $generated@@555)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ($generated@@558 T@U) ) (!  (=> (and (and (and (= (type $generated@@556) $generated@@70) (= (type $generated@@557) $generated@@70)) (= (type $generated@@558) $generated@@172)) ($generated@@249 $generated@@558 ($generated@@162 $generated@@556 $generated@@557))) (and (= ($generated@@293 ($generated@@351 $generated@@163 $generated@@558)) $generated@@558) ($generated@@157 ($generated@@351 $generated@@163 $generated@@558) ($generated@@162 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@249 $generated@@558 ($generated@@162 $generated@@556 $generated@@557)))
)))
(assert (forall (($generated@@559 T@U) ) (! (let (($generated@@560 (type $generated@@559)))
 (not ($generated@@0 ($generated@@87 ($generated@@440 $generated@@560) $generated@@559))))
 :pattern ( (let (($generated@@560 (type $generated@@559)))
($generated@@87 ($generated@@440 $generated@@560) $generated@@559)))
)))
(assert (forall (($generated@@562 T@U) ) (! (= (type ($generated@@561 $generated@@562)) $generated@@75)
 :pattern ( ($generated@@561 $generated@@562))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ) (!  (=> (and (= (type $generated@@563) $generated@@70) (= (type $generated@@564) $generated@@70)) (and (= ($generated@@78 ($generated@@162 $generated@@563 $generated@@564)) $generated@@62) (= ($generated@@561 ($generated@@162 $generated@@563 $generated@@564)) $generated@@67)))
 :pattern ( ($generated@@162 $generated@@563 $generated@@564))
)))
(assert (forall (($generated@@565 T@U) ) (!  (=> (= (type $generated@@565) $generated@@163) (= ($generated@@544 ($generated@@293 $generated@@565)) ($generated@@545 $generated@@565)))
 :pattern ( ($generated@@544 ($generated@@293 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ) (!  (=> (and (= (type $generated@@566) $generated@@172) ($generated@@249 $generated@@566 ($generated@@81 0))) (and (= ($generated@@293 ($generated@@351 $generated@@2 $generated@@566)) $generated@@566) ($generated@@157 ($generated@@351 ($generated@@82 $generated@@172 $generated@@4) $generated@@566) ($generated@@81 0))))
 :pattern ( ($generated@@249 $generated@@566 ($generated@@81 0)))
)))
(assert (forall (($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (= (type $generated@@567) $generated@@172) (= (type $generated@@568) $generated@@70)) ($generated@@249 $generated@@567 ($generated@@258 $generated@@568))) (and (= ($generated@@293 ($generated@@351 ($generated@@82 $generated@@172 $generated@@4) $generated@@567)) $generated@@567) ($generated@@157 ($generated@@351 ($generated@@82 $generated@@172 $generated@@4) $generated@@567) ($generated@@258 $generated@@568))))
 :pattern ( ($generated@@249 $generated@@567 ($generated@@258 $generated@@568)))
)))
(assert (forall (($generated@@569 T@U) ($generated@@570 T@U) ) (!  (=> (and (and (= (type $generated@@569) $generated@@172) (= (type $generated@@570) $generated@@70)) ($generated@@249 $generated@@569 ($generated@@263 $generated@@570))) (and (= ($generated@@293 ($generated@@351 ($generated@@82 $generated@@172 $generated@@4) $generated@@569)) $generated@@569) ($generated@@157 ($generated@@351 ($generated@@82 $generated@@172 $generated@@4) $generated@@569) ($generated@@263 $generated@@570))))
 :pattern ( ($generated@@249 $generated@@569 ($generated@@263 $generated@@570)))
)))
(assert (forall (($generated@@571 T@U) ($generated@@572 T@U) ) (!  (=> (and (and (= (type $generated@@571) $generated@@172) (= (type $generated@@572) $generated@@70)) ($generated@@249 $generated@@571 ($generated@@179 $generated@@572))) (and (= ($generated@@293 ($generated@@351 ($generated@@82 $generated@@172 $generated@@2) $generated@@571)) $generated@@571) ($generated@@157 ($generated@@351 ($generated@@82 $generated@@172 $generated@@2) $generated@@571) ($generated@@179 $generated@@572))))
 :pattern ( ($generated@@249 $generated@@571 ($generated@@179 $generated@@572)))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (and (= (type $generated@@573) $generated@@172) (= (type $generated@@574) $generated@@70)) ($generated@@249 $generated@@573 ($generated@@506 $generated@@574))) (and (= ($generated@@293 ($generated@@351 ($generated@@287 $generated@@172) $generated@@573)) $generated@@573) ($generated@@157 ($generated@@351 ($generated@@287 $generated@@172) $generated@@573) ($generated@@506 $generated@@574))))
 :pattern ( ($generated@@249 $generated@@573 ($generated@@506 $generated@@574)))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (and (= (type $generated@@575) $generated@@172) ($generated@@249 $generated@@575 ($generated@@81 8))) (and (= ($generated@@293 ($generated@@351 $generated@@138 $generated@@575)) $generated@@575) ($generated@@157 ($generated@@351 $generated@@138 $generated@@575) ($generated@@81 8))))
 :pattern ( ($generated@@249 $generated@@575 ($generated@@81 8)))
)))
(assert (forall (($generated@@576 T@U) ($generated@@577 T@U) ) (!  (=> (and (and (= (type $generated@@576) $generated@@83) (= (type $generated@@577) ($generated@@82 $generated@@83 $generated@@84))) (and (not (= $generated@@576 $generated@@151)) ($generated@@80 $generated@@576 $generated@@154 $generated@@577))) ($generated@@80 $generated@@576 $generated@@177 $generated@@577))
 :pattern ( ($generated@@80 $generated@@576 $generated@@154 $generated@@577))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ($generated@@580 T@U) ($generated@@581 T@U) ) (! (let (($generated@@582 (type $generated@@581)))
 (=> (and (and (and (= (type $generated@@578) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@579) $generated@@83)) (= (type $generated@@580) ($generated@@72 $generated@@582))) ($generated@@272 ($generated@@88 $generated@@578 $generated@@579 ($generated@@90 ($generated@@87 $generated@@578 $generated@@579) $generated@@580 $generated@@581)))) ($generated@@146 $generated@@578 ($generated@@88 $generated@@578 $generated@@579 ($generated@@90 ($generated@@87 $generated@@578 $generated@@579) $generated@@580 $generated@@581)))))
 :pattern ( ($generated@@88 $generated@@578 $generated@@579 ($generated@@90 ($generated@@87 $generated@@578 $generated@@579) $generated@@580 $generated@@581)))
)))
(assert (= ($generated@@78 $generated@@150) $generated@@63))
(assert (= ($generated@@561 $generated@@150) $generated@@68))
(assert (= ($generated@@78 $generated@@177) $generated@@64))
(assert (= ($generated@@561 $generated@@177) $generated@@68))
(assert (= ($generated@@78 $generated@@154) $generated@@65))
(assert (= ($generated@@561 $generated@@154) $generated@@69))
(assert (= ($generated@@78 $generated@@245) $generated@@66))
(assert (= ($generated@@561 $generated@@245) $generated@@69))
(assert (forall (($generated@@583 T@U) ($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@583) ($generated@@82 $generated@@172 $generated@@2)) (= (type $generated@@584) $generated@@70)) (= (type $generated@@585) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@583 ($generated@@179 $generated@@584) $generated@@585) (forall (($generated@@586 T@U) ) (!  (=> (and (= (type $generated@@586) $generated@@172) (< 0 ($generated ($generated@@87 $generated@@583 $generated@@586)))) ($generated@@273 $generated@@586 $generated@@584 $generated@@585))
 :pattern ( ($generated@@87 $generated@@583 $generated@@586))
))))
 :pattern ( ($generated@@80 $generated@@583 ($generated@@179 $generated@@584) $generated@@585))
)))
(assert (forall (($generated@@587 T@U) ) (!  (=> (= (type $generated@@587) $generated@@83) (= ($generated@@157 $generated@@587 $generated@@150)  (or (= $generated@@587 $generated@@151) ($generated@@160 ($generated@@184 $generated@@587)))))
 :pattern ( ($generated@@157 $generated@@587 $generated@@150))
)))
(assert (forall (($generated@@588 T@U) ($generated@@589 T@U) ($generated@@590 T@U) ) (!  (=> (and (and (and (= (type $generated@@588) $generated@@163) (= (type $generated@@589) $generated@@70)) (= (type $generated@@590) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@272 $generated@@590) (and ($generated@@161 $generated@@588) (exists (($generated@@591 T@U) ) (!  (and (= (type $generated@@591) $generated@@70) ($generated@@80 $generated@@588 ($generated@@162 $generated@@589 $generated@@591) $generated@@590))
 :pattern ( ($generated@@80 $generated@@588 ($generated@@162 $generated@@589 $generated@@591) $generated@@590))
))))) ($generated@@273 ($generated@@170 $generated@@588) $generated@@589 $generated@@590))
 :pattern ( ($generated@@273 ($generated@@170 $generated@@588) $generated@@589 $generated@@590))
)))
(assert (forall (($generated@@592 T@U) ($generated@@593 T@U) ($generated@@594 T@U) ) (!  (=> (and (and (and (= (type $generated@@592) $generated@@163) (= (type $generated@@593) $generated@@70)) (= (type $generated@@594) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@272 $generated@@594) (and ($generated@@161 $generated@@592) (exists (($generated@@595 T@U) ) (!  (and (= (type $generated@@595) $generated@@70) ($generated@@80 $generated@@592 ($generated@@162 $generated@@595 $generated@@593) $generated@@594))
 :pattern ( ($generated@@80 $generated@@592 ($generated@@162 $generated@@595 $generated@@593) $generated@@594))
))))) ($generated@@273 ($generated@@171 $generated@@592) $generated@@593 $generated@@594))
 :pattern ( ($generated@@273 ($generated@@171 $generated@@592) $generated@@593 $generated@@594))
)))
(assert (forall (($generated@@596 T@U) ($generated@@597 T@U) ) (!  (=> (and (= (type $generated@@596) $generated@@172) (= (type $generated@@597) $generated@@172)) (= ($generated@@248 ($generated@@268 $generated@@596) ($generated@@268 $generated@@597)) ($generated@@268 ($generated@@248 $generated@@596 $generated@@597))))
 :pattern ( ($generated@@248 ($generated@@268 $generated@@596) ($generated@@268 $generated@@597)))
)))
(assert (forall (($generated@@598 T@U) ) (! (= ($generated@@293 ($generated@@268 $generated@@598)) ($generated@@268 ($generated@@293 $generated@@598)))
 :pattern ( ($generated@@293 ($generated@@268 $generated@@598)))
)))
(assert (forall (($generated@@599 T@U) ) (! (let (($generated@@600 ($generated@@288 (type $generated@@599))))
 (=> (and (= (type $generated@@599) ($generated@@287 $generated@@600)) (= ($generated@@286 $generated@@599) 0)) (= $generated@@599 ($generated@@285 $generated@@600))))
 :pattern ( ($generated@@286 $generated@@599))
)))
(assert (forall (($generated@@601 T@U) ($generated@@602 T@U) ($generated@@603 T@U) ) (! (let (($generated@@604 (type $generated@@602)))
 (=> (and (and (= (type $generated@@601) ($generated@@82 $generated@@604 $generated@@2)) (= (type $generated@@603) $generated@@2)) (<= 0 ($generated $generated@@603))) (= ($generated@@306 ($generated@@88 $generated@@601 $generated@@602 $generated@@603)) (+ (- ($generated@@306 $generated@@601) ($generated ($generated@@87 $generated@@601 $generated@@602))) ($generated $generated@@603)))))
 :pattern ( ($generated@@306 ($generated@@88 $generated@@601 $generated@@602 $generated@@603)))
)))
(assert (forall (($generated@@605 T@U) ($generated@@606 T@U) ) (!  (=> (and (= (type $generated@@605) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@606) $generated@@2)) ($generated@@80 $generated@@606 $generated@@46 $generated@@605))
 :pattern ( ($generated@@80 $generated@@606 $generated@@46 $generated@@605))
)))
(assert (forall (($generated@@607 T@U) ($generated@@608 T@U) ) (!  (=> (and (= (type $generated@@607) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@608) $generated@@3)) ($generated@@80 $generated@@608 $generated@@47 $generated@@607))
 :pattern ( ($generated@@80 $generated@@608 $generated@@47 $generated@@607))
)))
(assert (forall (($generated@@609 T@U) ($generated@@610 T@U) ) (!  (=> (and (= (type $generated@@609) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@610) $generated@@4)) ($generated@@80 $generated@@610 $generated@@44 $generated@@609))
 :pattern ( ($generated@@80 $generated@@610 $generated@@44 $generated@@609))
)))
(assert (forall (($generated@@611 T@U) ($generated@@612 T@U) ) (!  (=> (and (= (type $generated@@611) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@612) $generated@@464)) ($generated@@80 $generated@@612 $generated@@45 $generated@@611))
 :pattern ( ($generated@@80 $generated@@612 $generated@@45 $generated@@611))
)))
(assert (forall (($generated@@613 T@U) ($generated@@614 T@U) ) (!  (=> (and (= (type $generated@@613) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@614) $generated@@172)) ($generated@@80 $generated@@614 $generated@@48 $generated@@613))
 :pattern ( ($generated@@80 $generated@@614 $generated@@48 $generated@@613))
)))
(assert (forall (($generated@@615 T@U) ($generated@@616 T@U) ) (!  (=> (and (= (type $generated@@615) ($generated@@287 $generated@@172)) (= (type $generated@@616) $generated@@70)) (= ($generated@@157 $generated@@615 ($generated@@506 $generated@@616)) (forall (($generated@@617 Int) ) (!  (=> (and (<= 0 $generated@@617) (< $generated@@617 ($generated@@286 $generated@@615))) ($generated@@249 ($generated@@507 $generated@@615 $generated@@617) $generated@@616))
 :pattern ( ($generated@@507 $generated@@615 $generated@@617))
))))
 :pattern ( ($generated@@157 $generated@@615 ($generated@@506 $generated@@616)))
)))
(assert (forall (($generated@@619 T@U) ($generated@@620 Int) ) (!  (=> (= (type $generated@@619) ($generated@@287 $generated@@172)) (=> (and (<= 0 $generated@@620) (< $generated@@620 ($generated@@286 $generated@@619))) (< ($generated@@545 ($generated@@351 $generated@@163 ($generated@@507 $generated@@619 $generated@@620))) ($generated@@618 $generated@@619))))
 :pattern ( ($generated@@545 ($generated@@351 $generated@@163 ($generated@@507 $generated@@619 $generated@@620))))
)))
(assert (forall (($generated@@621 T@U) ($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (and (and (= (type $generated@@621) ($generated@@314 $generated@@172 $generated@@172)) (= (type $generated@@622) $generated@@70)) (= (type $generated@@623) $generated@@70)) ($generated@@157 $generated@@621 ($generated@@421 $generated@@622 $generated@@623))) (and (and ($generated@@157 ($generated@@312 $generated@@621) ($generated@@258 $generated@@622)) ($generated@@157 ($generated@@364 $generated@@621) ($generated@@258 $generated@@623))) ($generated@@157 ($generated@@395 $generated@@621) ($generated@@258 ($generated@@162 $generated@@622 $generated@@623)))))
 :pattern ( ($generated@@157 $generated@@621 ($generated@@421 $generated@@622 $generated@@623)))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ($generated@@626 T@U) ) (!  (=> (and (and (and (= (type $generated@@624) ($generated@@332 $generated@@172 $generated@@172)) (= (type $generated@@625) $generated@@70)) (= (type $generated@@626) $generated@@70)) ($generated@@157 $generated@@624 ($generated@@429 $generated@@625 $generated@@626))) (and (and ($generated@@157 ($generated@@330 $generated@@624) ($generated@@263 $generated@@625)) ($generated@@157 ($generated@@375 $generated@@624) ($generated@@263 $generated@@626))) ($generated@@157 ($generated@@403 $generated@@624) ($generated@@263 ($generated@@162 $generated@@625 $generated@@626)))))
 :pattern ( ($generated@@157 $generated@@624 ($generated@@429 $generated@@625 $generated@@626)))
)))
(assert (forall (($generated@@627 T@U) ) (!  (=> (= (type $generated@@627) $generated@@2) ($generated@@157 $generated@@627 $generated@@46))
 :pattern ( ($generated@@157 $generated@@627 $generated@@46))
)))
(assert (forall (($generated@@628 T@U) ) (!  (=> (= (type $generated@@628) $generated@@3) ($generated@@157 $generated@@628 $generated@@47))
 :pattern ( ($generated@@157 $generated@@628 $generated@@47))
)))
(assert (forall (($generated@@629 T@U) ) (!  (=> (= (type $generated@@629) $generated@@4) ($generated@@157 $generated@@629 $generated@@44))
 :pattern ( ($generated@@157 $generated@@629 $generated@@44))
)))
(assert (forall (($generated@@630 T@U) ) (!  (=> (= (type $generated@@630) $generated@@464) ($generated@@157 $generated@@630 $generated@@45))
 :pattern ( ($generated@@157 $generated@@630 $generated@@45))
)))
(assert (forall (($generated@@631 T@U) ) (!  (=> (= (type $generated@@631) $generated@@172) ($generated@@157 $generated@@631 $generated@@48))
 :pattern ( ($generated@@157 $generated@@631 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@632 () T@U)
(declare-fun $generated@@633 () T@U)
(declare-fun $generated@@634 () T@U)
(declare-fun $generated@@635 () T@U)
(declare-fun $generated@@636 (T@U) Bool)
(declare-fun $generated@@637 (T@U) Bool)
(declare-fun $generated@@638 () T@U)
(declare-fun $generated@@639 () T@U)
(declare-fun $generated@@640 () Bool)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () Bool)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () Int)
(assert  (and (and (and (and (and (and (and (= (type $generated@@632) ($generated@@189 $generated@@83 $generated@@4)) (= (type $generated@@633) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@634) $generated@@83)) (= (type $generated@@635) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@638) $generated@@83)) (= (type $generated@@639) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@641) $generated@@83)) (= (type $generated@@643) $generated@@83)))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@645  (=> (= $generated@@632 ($generated@@188 $generated@@151 $generated@@633 $generated@@60 false)) (=> (and (not (= $generated@@634 $generated@@151)) (= ($generated@@184 $generated@@634) $generated@@154)) (=> (and (and (not ($generated@@0 ($generated@@89 ($generated@@87 $generated@@633 $generated@@634) $generated@@60))) (= $generated@@635 ($generated@@88 $generated@@633 $generated@@634 ($generated@@90 ($generated@@87 $generated@@633 $generated@@634) $generated@@60 ($generated@@11 true))))) (and ($generated@@272 $generated@@635) ($generated@@636 $generated@@635))) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not (= $generated@@634 $generated@@151))) (=> ($generated@@80 $generated@@634 $generated@@154 $generated@@635) (=> (and (and (and ($generated@@637 $generated@@634) ($generated@@637 $generated@@634)) (and (not (= $generated@@638 $generated@@151)) (= ($generated@@184 $generated@@638) $generated@@154))) (and (and (not ($generated@@0 ($generated@@89 ($generated@@87 $generated@@635 $generated@@638) $generated@@60))) (= $generated@@639 ($generated@@88 $generated@@635 $generated@@638 ($generated@@90 ($generated@@87 $generated@@635 $generated@@638) $generated@@60 ($generated@@11 true))))) (and ($generated@@272 $generated@@639) ($generated@@636 $generated@@639)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) (not (= $generated@@638 $generated@@151)))))))))))))
(let (($generated@@646  (=> (and (and (and ($generated@@272 $generated@@633) ($generated@@636 $generated@@633)) (and (=> $generated@@640 (and ($generated@@157 $generated@@641 $generated@@245) ($generated@@80 $generated@@641 $generated@@245 $generated@@633))) true)) (and (and (=> $generated@@642 (and ($generated@@157 $generated@@643 $generated@@177) ($generated@@80 $generated@@643 $generated@@177 $generated@@633))) true) (and (= 2 $generated@@644) (= (ControlFlow 0 6) 2)))) $generated@@645)))
$generated@@646)))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
