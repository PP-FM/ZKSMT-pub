(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.mbqi false)
(set-option :model.compact false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (T@U) Int)
(declare-fun $generated@@0 (T@U) Bool)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun type (T@U) T@T)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (RoundingMode) T@U)
(declare-fun $generated@@13 (T@U) RoundingMode)
(declare-fun $generated@@14 (String) T@U)
(declare-fun $generated@@15 (T@U) String)
(declare-fun $generated@@16 ((RegEx String)) T@U)
(declare-fun $generated@@17 (T@U) (RegEx String))
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (Int) T@U)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 (T@U) Int)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) Int)
(declare-fun $generated@@151 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@168 () Int)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@178 (T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@180 (T@T T@T) T@T)
(declare-fun $generated@@181 (T@T) T@T)
(declare-fun $generated@@182 (T@T) T@T)
(declare-fun $generated@@183 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@234 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@246 (T@U T@U) T@U)
(declare-fun $generated@@247 (T@U T@U) Bool)
(declare-fun $generated@@258 (T@U) T@U)
(declare-fun $generated@@263 (T@U) T@U)
(declare-fun $generated@@268 (Int) Int)
(declare-fun $generated@@270 (T@U) T@U)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@275 (T@U T@U T@U) Bool)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@289 (T@T) T@U)
(declare-fun $generated@@290 (T@U) Int)
(declare-fun $generated@@291 (T@T) T@T)
(declare-fun $generated@@292 (T@T) T@T)
(declare-fun $generated@@297 (Int) T@U)
(declare-fun $generated@@301 (Int) T@U)
(declare-fun $generated@@306 (T@U) T@U)
(declare-fun $generated@@312 (T@U) Int)
(declare-fun $generated@@313 (T@T) T@U)
(declare-fun $generated@@318 (T@U) T@U)
(declare-fun $generated@@319 (T@T T@T) T@U)
(declare-fun $generated@@320 (T@T T@T) T@T)
(declare-fun $generated@@321 (T@T) T@T)
(declare-fun $generated@@322 (T@T) T@T)
(declare-fun $generated@@336 (T@U) T@U)
(declare-fun $generated@@337 (T@T T@T) T@U)
(declare-fun $generated@@338 (T@T T@T) T@T)
(declare-fun $generated@@339 (T@T) T@T)
(declare-fun $generated@@340 (T@T) T@T)
(declare-fun $generated@@357 (T@T T@U) T@U)
(declare-fun $generated@@368 (T@U) T@U)
(declare-fun $generated@@379 (T@U) T@U)
(declare-fun $generated@@399 (T@U) T@U)
(declare-fun $generated@@400 (T@U) T@U)
(declare-fun $generated@@407 (T@U) T@U)
(declare-fun $generated@@408 (T@U) T@U)
(declare-fun $generated@@425 (T@U T@U) T@U)
(declare-fun $generated@@433 (T@U T@U) T@U)
(declare-fun $generated@@446 (T@T) T@U)
(declare-fun $generated@@470 () T@T)
(declare-fun $generated@@478 (T@U) T@U)
(declare-fun $generated@@482 (T@U) T@U)
(declare-fun $generated@@488 (T@U) T@U)
(declare-fun $generated@@492 (T@U) T@U)
(declare-fun $generated@@500 (T@U) T@U)
(declare-fun $generated@@504 (T@U) T@U)
(declare-fun $generated@@512 (T@U) T@U)
(declare-fun $generated@@513 (T@U Int) T@U)
(declare-fun $generated@@522 (T@U) Int)
(declare-fun $generated@@524 (T@U) T@U)
(declare-fun $generated@@528 (T@U) T@U)
(declare-fun $generated@@532 (T@U) T@U)
(declare-fun $generated@@536 (T@U) T@U)
(declare-fun $generated@@554 (T@U) Int)
(declare-fun $generated@@555 (T@U) Int)
(declare-fun $generated@@571 (T@U) T@U)
(declare-fun $generated@@627 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (= ($generated@@1 $generated@@5) 3)) (= ($generated@@1 $generated@@6) 4)) (= ($generated@@1 $generated@@7) 5)) (forall (($generated@@18 Int) ) (! (= ($generated ($generated@@8 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@8 $generated@@18))
))) (forall (($generated@@19 T@U) ) (!  (=> (= (type $generated@@19) $generated@@2) (= ($generated@@8 ($generated $generated@@19)) $generated@@19))
 :pattern ( ($generated $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= (type ($generated@@8 $generated@@20)) $generated@@2)
 :pattern ( ($generated@@8 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@9 $generated@@21))
))) (forall (($generated@@22 T@U) ) (!  (=> (= (type $generated@@22) $generated@@3) (= ($generated@@9 ($generated@@10 $generated@@22)) $generated@@22))
 :pattern ( ($generated@@10 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= (type ($generated@@9 $generated@@23)) $generated@@3)
 :pattern ( ($generated@@9 $generated@@23))
))) (forall (($generated@@24 Bool) ) (! (= ($generated@@0 ($generated@@11 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@11 $generated@@24))
))) (forall (($generated@@25 T@U) ) (!  (=> (= (type $generated@@25) $generated@@4) (= ($generated@@11 ($generated@@0 $generated@@25)) $generated@@25))
 :pattern ( ($generated@@0 $generated@@25))
))) (forall (($generated@@26 Bool) ) (! (= (type ($generated@@11 $generated@@26)) $generated@@4)
 :pattern ( ($generated@@11 $generated@@26))
))) (forall (($generated@@27 RoundingMode) ) (! (= ($generated@@13 ($generated@@12 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@12 $generated@@27))
))) (forall (($generated@@28 T@U) ) (!  (=> (= (type $generated@@28) $generated@@5) (= ($generated@@12 ($generated@@13 $generated@@28)) $generated@@28))
 :pattern ( ($generated@@13 $generated@@28))
))) (forall (($generated@@29 RoundingMode) ) (! (= (type ($generated@@12 $generated@@29)) $generated@@5)
 :pattern ( ($generated@@12 $generated@@29))
))) (forall (($generated@@30 String) ) (! (= ($generated@@15 ($generated@@14 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@14 $generated@@30))
))) (forall (($generated@@31 T@U) ) (!  (=> (= (type $generated@@31) $generated@@6) (= ($generated@@14 ($generated@@15 $generated@@31)) $generated@@31))
 :pattern ( ($generated@@15 $generated@@31))
))) (forall (($generated@@32 String) ) (! (= (type ($generated@@14 $generated@@32)) $generated@@6)
 :pattern ( ($generated@@14 $generated@@32))
))) (forall (($generated@@33 (RegEx String)) ) (! (= ($generated@@17 ($generated@@16 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@16 $generated@@33))
))) (forall (($generated@@34 T@U) ) (!  (=> (= (type $generated@@34) $generated@@7) (= ($generated@@16 ($generated@@17 $generated@@34)) $generated@@34))
 :pattern ( ($generated@@17 $generated@@34))
))) (forall (($generated@@35 (RegEx String)) ) (! (= (type ($generated@@16 $generated@@35)) $generated@@7)
 :pattern ( ($generated@@16 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! (UOrdering2 $generated@@36 $generated@@36)
 :no-pattern ($generated $generated@@36)
 :no-pattern ($generated@@0 $generated@@36)
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (let (($generated@@40 (type $generated@@37)))
 (=> (and (and (= (type $generated@@38) $generated@@40) (= (type $generated@@39) $generated@@40)) (and (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))) (UOrdering2 $generated@@37 $generated@@39)))
 :pattern ( (UOrdering2 $generated@@37 $generated@@38) (UOrdering2 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (let (($generated@@43 (type $generated@@41)))
 (=> (= (type $generated@@42) $generated@@43) (=> (and (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41)) (= $generated@@41 $generated@@42))))
 :pattern ( (UOrdering2 $generated@@41 $generated@@42) (UOrdering2 $generated@@42 $generated@@41))
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@70) 6) (= (type $generated@@44) $generated@@70)) (= (type $generated@@45) $generated@@70)) (= (type $generated@@46) $generated@@70)) (= (type $generated@@47) $generated@@70)) (= (type $generated@@48) $generated@@70)) (= ($generated@@1 $generated@@71) 7)) (= (type $generated@@49) $generated@@71)) (= (type $generated@@50) $generated@@71)) (= (type $generated@@51) $generated@@71)) (= (type $generated@@52) $generated@@71)) (= (type $generated@@53) $generated@@71)) (= (type $generated@@54) $generated@@71)) (= (type $generated@@55) $generated@@71)) (= (type $generated@@56) $generated@@71)) (= (type $generated@@57) $generated@@71)) (= (type $generated@@58) $generated@@71)) (= (type $generated@@59) $generated@@71)) (forall (($generated@@76 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@76)) 8))) (forall (($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@72 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@72 $generated@@77))
))) (= (type $generated@@60) ($generated@@72 $generated@@4))) (= (type $generated@@61) $generated@@71)) (= ($generated@@1 $generated@@74) 9)) (= (type $generated@@62) $generated@@74)) (= (type $generated@@63) $generated@@71)) (= (type $generated@@64) $generated@@74)) (= (type $generated@@65) $generated@@71)) (= (type $generated@@66) $generated@@74)) (= ($generated@@1 $generated@@75) 10)) (= (type $generated@@67) $generated@@75)) (= (type $generated@@68) $generated@@75)) (= (type $generated@@69) $generated@@75)))
(assert (distinct $generated@@44 $generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56 $generated@@57 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65 $generated@@66 $generated@@67 $generated@@68 $generated@@69)
)
(assert (forall (($generated@@79 T@U) ) (! (= (type ($generated@@78 $generated@@79)) $generated@@71)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (= ($generated@@78 $generated@@44) $generated@@49))
(assert (= ($generated@@78 $generated@@45) $generated@@50))
(assert (= ($generated@@78 $generated@@46) $generated@@51))
(assert (= ($generated@@78 $generated@@47) $generated@@52))
(assert (= ($generated@@78 $generated@@48) $generated@@53))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@1 ($generated@@82 $generated@@91 $generated@@92)) 11)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@82 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@82 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (let (($generated@@99 ($generated@@86 (type $generated@@97))))
(= (type ($generated@@87 $generated@@97 $generated@@98)) $generated@@99))
 :pattern ( ($generated@@87 $generated@@97 $generated@@98))
))) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (let (($generated@@103 (type $generated@@102)))
(let (($generated@@104 (type $generated@@101)))
(= (type ($generated@@88 $generated@@100 $generated@@101 $generated@@102)) ($generated@@82 $generated@@104 $generated@@103))))
 :pattern ( ($generated@@88 $generated@@100 $generated@@101 $generated@@102))
))) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (let (($generated@@108 ($generated@@86 (type $generated@@105))))
 (=> (= (type $generated@@107) $generated@@108) (= ($generated@@87 ($generated@@88 $generated@@105 $generated@@106 $generated@@107) $generated@@106) $generated@@107)))
 :weight 0
))) (and (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@87 ($generated@@88 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@87 $generated@@110 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or true (= ($generated@@87 ($generated@@88 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@87 $generated@@114 $generated@@116)))
 :weight 0
)))) (= ($generated@@1 $generated@@83) 12)) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (let (($generated@@119 ($generated@@73 (type $generated@@118))))
(= (type ($generated@@89 $generated@@117 $generated@@118)) $generated@@119))
 :pattern ( ($generated@@89 $generated@@117 $generated@@118))
))) (= ($generated@@1 $generated@@84) 13)) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= (type ($generated@@90 $generated@@120 $generated@@121 $generated@@122)) $generated@@84)
 :pattern ( ($generated@@90 $generated@@120 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (let (($generated@@126 ($generated@@73 (type $generated@@124))))
 (=> (= (type $generated@@125) $generated@@126) (= ($generated@@89 ($generated@@90 $generated@@123 $generated@@124 $generated@@125) $generated@@124) $generated@@125)))
 :weight 0
))) (and (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@89 ($generated@@90 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@89 $generated@@128 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or true (= ($generated@@89 ($generated@@90 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@89 $generated@@132 $generated@@134)))
 :weight 0
)))) (forall (($generated@@135 Int) ) (! (= (type ($generated@@81 $generated@@135)) $generated@@70)
 :pattern ( ($generated@@81 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (= (type $generated@@136) $generated@@2) (= (type $generated@@137) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
 :pattern ( ($generated@@80 $generated@@136 ($generated@@81 0) $generated@@137))
)))
(assert (= (type $generated@@138) $generated@@70))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (= (type $generated@@139) $generated@@2) (= (type $generated@@140) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
 :pattern ( ($generated@@80 $generated@@139 $generated@@138 $generated@@140))
)))
(assert (= ($generated@@1 $generated@@143) 14))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (and (and (= (type $generated@@145) $generated@@143) (= (type $generated@@146) $generated@@143)) (and ($generated@@142 $generated@@145) ($generated@@142 $generated@@146))) (= ($generated@@141 $generated@@145 $generated@@146) (= ($generated@@144 $generated@@145) ($generated@@144 $generated@@146))))
 :pattern ( ($generated@@141 $generated@@145 $generated@@146) ($generated@@142 $generated@@145))
 :pattern ( ($generated@@141 $generated@@145 $generated@@146) ($generated@@142 $generated@@146))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and (and (= (type $generated@@149) $generated@@143) (= (type $generated@@150) $generated@@143)) (and ($generated@@147 $generated@@149) ($generated@@147 $generated@@150))) (= ($generated@@141 $generated@@149 $generated@@150) (= ($generated@@148 $generated@@149) ($generated@@148 $generated@@150))))
 :pattern ( ($generated@@141 $generated@@149 $generated@@150) ($generated@@147 $generated@@149))
 :pattern ( ($generated@@141 $generated@@149 $generated@@150) ($generated@@147 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> (= (type $generated@@152) $generated@@2) ($generated@@151 $generated@@152 ($generated@@81 0)))
 :pattern ( ($generated@@151 $generated@@152 ($generated@@81 0)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= (type ($generated@@154 $generated@@155 $generated@@156)) $generated@@70)
 :pattern ( ($generated@@154 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and (and (and (= (type $generated@@157) $generated@@70) (= (type $generated@@158) $generated@@70)) (= (type $generated@@159) $generated@@143)) ($generated@@151 $generated@@159 ($generated@@154 $generated@@157 $generated@@158))) ($generated@@153 $generated@@159))
 :pattern ( ($generated@@153 $generated@@159) ($generated@@151 $generated@@159 ($generated@@154 $generated@@157 $generated@@158)))
)))
(assert  (and (and (= ($generated@@1 $generated@@163) 15) (forall (($generated@@164 T@U) ) (! (= (type ($generated@@161 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@161 $generated@@164))
))) (forall (($generated@@165 T@U) ) (! (= (type ($generated@@162 $generated@@165)) $generated@@163)
 :pattern ( ($generated@@162 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and (= (type $generated@@166) $generated@@143) (= (type $generated@@167) $generated@@143)) true) (= ($generated@@160 $generated@@166 $generated@@167)  (and (= ($generated@@161 $generated@@166) ($generated@@161 $generated@@167)) (= ($generated@@162 $generated@@166) ($generated@@162 $generated@@167)))))
 :pattern ( ($generated@@160 $generated@@166 $generated@@167))
)))
(assert (= (type $generated@@171) $generated@@70))
(assert  (=> (<= 0 $generated@@168) (forall (($generated@@172 T@U) ) (!  (=> (and (= (type $generated@@172) $generated@@143) (or ($generated@@170 $generated@@172) (and (not (= 0 $generated@@168)) (and ($generated@@151 $generated@@172 $generated@@171) ($generated@@147 $generated@@172))))) true)
 :pattern ( ($generated@@169 $generated@@172))
))))
(assert (forall (($generated@@175 T@U) ) (! (= (type ($generated@@173 $generated@@175)) $generated@@70)
 :pattern ( ($generated@@173 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (= (type $generated@@176) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@177) $generated@@70)) ($generated@@151 $generated@@176 ($generated@@173 $generated@@177))) ($generated@@174 $generated@@176))
 :pattern ( ($generated@@151 $generated@@176 ($generated@@173 $generated@@177)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@1 ($generated@@180 $generated@@184 $generated@@185)) 16)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@181 ($generated@@180 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@180 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@182 ($generated@@180 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@180 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (let (($generated@@193 ($generated@@182 (type $generated@@190))))
(= (type ($generated@@178 $generated@@190 $generated@@191 $generated@@192)) $generated@@193))
 :pattern ( ($generated@@178 $generated@@190 $generated@@191 $generated@@192))
))) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (let (($generated@@198 (type $generated@@197)))
(let (($generated@@199 (type $generated@@195)))
(= (type ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197)) ($generated@@180 $generated@@199 $generated@@198))))
 :pattern ( ($generated@@183 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
))) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (let (($generated@@204 ($generated@@182 (type $generated@@200))))
 (=> (= (type $generated@@203) $generated@@204) (= ($generated@@178 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@201 $generated@@202) $generated@@203)))
 :weight 0
))) (and (and (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@178 ($generated@@183 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@178 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@214 $generated@@216) (= ($generated@@178 ($generated@@183 $generated@@212 $generated@@213 $generated@@214 $generated@@211) $generated@@215 $generated@@216) ($generated@@178 $generated@@212 $generated@@215 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (or true (= ($generated@@178 ($generated@@183 $generated@@218 $generated@@219 $generated@@220 $generated@@217) $generated@@221 $generated@@222) ($generated@@178 $generated@@218 $generated@@221 $generated@@222)))
 :weight 0
)))) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ) (! (= (type ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@179 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 Bool) ($generated@@231 T@U) ($generated@@232 T@U) ) (! (let (($generated@@233 ($generated@@73 (type $generated@@232))))
 (=> (and (and (and (and (= (type $generated@@227) $generated@@83) (= (type $generated@@228) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@229) ($generated@@72 $generated@@4))) (= (type $generated@@231) $generated@@83)) (= (type $generated@@232) ($generated@@72 $generated@@233))) (= ($generated@@0 ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))  (=> (and (not (= $generated@@231 $generated@@227)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@228 $generated@@231) $generated@@229))) $generated@@230))))
 :pattern ( ($generated@@178 ($generated@@179 $generated@@227 $generated@@228 $generated@@229 $generated@@230) $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Bool) ) (! (= (type ($generated@@234 $generated@@235 $generated@@236 $generated@@237 $generated@@238)) ($generated@@180 $generated@@83 $generated@@4))
 :pattern ( ($generated@@234 $generated@@235 $generated@@236 $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Bool) ($generated@@243 T@U) ($generated@@244 T@U) ) (! (let (($generated@@245 ($generated@@73 (type $generated@@244))))
 (=> (and (and (and (and (= (type $generated@@239) $generated@@83) (= (type $generated@@240) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@241) ($generated@@72 $generated@@4))) (= (type $generated@@243) $generated@@83)) (= (type $generated@@244) ($generated@@72 $generated@@245))) (= ($generated@@0 ($generated@@178 ($generated@@234 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))  (=> (and (not (= $generated@@243 $generated@@239)) ($generated@@0 ($generated@@89 ($generated@@87 $generated@@240 $generated@@243) $generated@@241))) $generated@@242))))
 :pattern ( ($generated@@178 ($generated@@234 $generated@@239 $generated@@240 $generated@@241 $generated@@242) $generated@@243 $generated@@244))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (! (= (type ($generated@@246 $generated@@248 $generated@@249)) $generated@@143)
 :pattern ( ($generated@@246 $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and (= (type $generated@@250) $generated@@70) (= (type $generated@@251) $generated@@70)) (= (type $generated@@252) $generated@@163)) (= (type $generated@@253) $generated@@163)) (= ($generated@@151 ($generated@@246 $generated@@252 $generated@@253) ($generated@@154 $generated@@250 $generated@@251))  (and ($generated@@247 $generated@@252 $generated@@250) ($generated@@247 $generated@@253 $generated@@251))))
 :pattern ( ($generated@@151 ($generated@@246 $generated@@252 $generated@@253) ($generated@@154 $generated@@250 $generated@@251)))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and (= (type $generated@@254) $generated@@143) (= (type $generated@@255) $generated@@143)) (= ($generated@@160 $generated@@254 $generated@@255) (= $generated@@254 $generated@@255)))
 :pattern ( ($generated@@160 $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and (= (type $generated@@256) $generated@@143) (= (type $generated@@257) $generated@@143)) (= ($generated@@141 $generated@@256 $generated@@257) (= $generated@@256 $generated@@257)))
 :pattern ( ($generated@@141 $generated@@256 $generated@@257))
)))
(assert (forall (($generated@@259 T@U) ) (! (= (type ($generated@@258 $generated@@259)) $generated@@70)
 :pattern ( ($generated@@258 $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (= (type $generated@@260) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@261) $generated@@70)) (= ($generated@@151 $generated@@260 ($generated@@258 $generated@@261)) (forall (($generated@@262 T@U) ) (!  (=> (and (= (type $generated@@262) $generated@@163) ($generated@@0 ($generated@@87 $generated@@260 $generated@@262))) ($generated@@247 $generated@@262 $generated@@261))
 :pattern ( ($generated@@87 $generated@@260 $generated@@262))
))))
 :pattern ( ($generated@@151 $generated@@260 ($generated@@258 $generated@@261)))
)))
(assert (forall (($generated@@264 T@U) ) (! (= (type ($generated@@263 $generated@@264)) $generated@@70)
 :pattern ( ($generated@@263 $generated@@264))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and (= (type $generated@@265) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@266) $generated@@70)) (= ($generated@@151 $generated@@265 ($generated@@263 $generated@@266)) (forall (($generated@@267 T@U) ) (!  (=> (and (= (type $generated@@267) $generated@@163) ($generated@@0 ($generated@@87 $generated@@265 $generated@@267))) ($generated@@247 $generated@@267 $generated@@266))
 :pattern ( ($generated@@87 $generated@@265 $generated@@267))
))))
 :pattern ( ($generated@@151 $generated@@265 ($generated@@263 $generated@@266)))
)))
(assert (forall (($generated@@269 Int) ) (! (= ($generated@@268 $generated@@269) $generated@@269)
 :pattern ( ($generated@@268 $generated@@269))
)))
(assert (forall (($generated@@271 T@U) ) (! (let (($generated@@272 (type $generated@@271)))
(= (type ($generated@@270 $generated@@271)) $generated@@272))
 :pattern ( ($generated@@270 $generated@@271))
)))
(assert (forall (($generated@@273 T@U) ) (! (= ($generated@@270 $generated@@273) $generated@@273)
 :pattern ( ($generated@@270 $generated@@273))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ) (!  (=> (and (and (and (and (and (= (type $generated@@276) $generated@@70) (= (type $generated@@277) $generated@@70)) (= (type $generated@@278) $generated@@163)) (= (type $generated@@279) $generated@@163)) (= (type $generated@@280) ($generated@@82 $generated@@83 $generated@@84))) ($generated@@274 $generated@@280)) (= ($generated@@80 ($generated@@246 $generated@@278 $generated@@279) ($generated@@154 $generated@@276 $generated@@277) $generated@@280)  (and ($generated@@275 $generated@@278 $generated@@276 $generated@@280) ($generated@@275 $generated@@279 $generated@@277 $generated@@280))))
 :pattern ( ($generated@@80 ($generated@@246 $generated@@278 $generated@@279) ($generated@@154 $generated@@276 $generated@@277) $generated@@280))
)))
(assert (forall (($generated@@282 T@U) ) (! (= (type ($generated@@281 $generated@@282)) $generated@@74)
 :pattern ( ($generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ) (!  (=> (= (type $generated@@283) $generated@@143) (= ($generated@@153 $generated@@283) (= ($generated@@281 $generated@@283) $generated@@62)))
 :pattern ( ($generated@@153 $generated@@283))
)))
(assert (forall (($generated@@284 T@U) ) (!  (=> (= (type $generated@@284) $generated@@143) (= ($generated@@142 $generated@@284) (= ($generated@@281 $generated@@284) $generated@@64)))
 :pattern ( ($generated@@142 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> (= (type $generated@@285) $generated@@143) (= ($generated@@147 $generated@@285) (= ($generated@@281 $generated@@285) $generated@@66)))
 :pattern ( ($generated@@147 $generated@@285))
)))
(assert (forall (($generated@@286 T@U) ) (!  (=> (and (= (type $generated@@286) $generated@@143) ($generated@@153 $generated@@286)) (exists (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (and (= (type $generated@@287) $generated@@163) (= (type $generated@@288) $generated@@163)) (= $generated@@286 ($generated@@246 $generated@@287 $generated@@288)))
 :no-pattern (type $generated@@287)
 :no-pattern (type $generated@@288)
 :no-pattern ($generated $generated@@287)
 :no-pattern ($generated@@0 $generated@@287)
 :no-pattern ($generated $generated@@288)
 :no-pattern ($generated@@0 $generated@@288)
)))
 :pattern ( ($generated@@153 $generated@@286))
)))
(assert  (and (and (forall (($generated@@293 T@T) ) (= ($generated@@1 ($generated@@291 $generated@@293)) 17)) (forall (($generated@@294 T@T) ) (! (= ($generated@@292 ($generated@@291 $generated@@294)) $generated@@294)
 :pattern ( ($generated@@291 $generated@@294))
))) (forall (($generated@@295 T@T) ) (! (= (type ($generated@@289 $generated@@295)) ($generated@@291 $generated@@295))
 :pattern ( ($generated@@289 $generated@@295))
))))
(assert (forall (($generated@@296 T@T) ) (! (= ($generated@@290 ($generated@@289 $generated@@296)) 0)
 :pattern ( ($generated@@289 $generated@@296))
)))
(assert (forall (($generated@@298 Int) ) (! (= (type ($generated@@297 $generated@@298)) $generated@@143)
 :pattern ( ($generated@@297 $generated@@298))
)))
(assert (forall (($generated@@299 T@U) ) (!  (=> (and (= (type $generated@@299) $generated@@143) ($generated@@142 $generated@@299)) (exists (($generated@@300 Int) ) (= $generated@@299 ($generated@@297 $generated@@300))))
 :pattern ( ($generated@@142 $generated@@299))
)))
(assert (forall (($generated@@302 Int) ) (! (= (type ($generated@@301 $generated@@302)) $generated@@143)
 :pattern ( ($generated@@301 $generated@@302))
)))
(assert (forall (($generated@@303 T@U) ) (!  (=> (and (= (type $generated@@303) $generated@@143) ($generated@@147 $generated@@303)) (exists (($generated@@304 Int) ) (= $generated@@303 ($generated@@301 $generated@@304))))
 :pattern ( ($generated@@147 $generated@@303))
)))
(assert (forall (($generated@@305 T@U) ) (!  (=> (= (type $generated@@305) $generated@@2) (= ($generated@@151 $generated@@305 $generated@@138) (<= ($generated@@268 0) ($generated $generated@@305))))
 :pattern ( ($generated@@151 $generated@@305 $generated@@138))
)))
(assert (forall (($generated@@307 T@U) ) (! (= (type ($generated@@306 $generated@@307)) $generated@@163)
 :pattern ( ($generated@@306 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ) (!  (=> (and (= (type $generated@@309) $generated@@70) (= (type $generated@@310) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@275 ($generated@@306 $generated@@308) $generated@@309 $generated@@310) ($generated@@80 $generated@@308 $generated@@309 $generated@@310)))
 :pattern ( ($generated@@275 ($generated@@306 $generated@@308) $generated@@309 $generated@@310))
)))
(assert  (=> (<= 0 $generated@@168) (forall (($generated@@311 T@U) ) (!  (=> (and (= (type $generated@@311) $generated@@143) (or ($generated@@170 $generated@@311) (and (not (= 0 $generated@@168)) (and ($generated@@151 $generated@@311 $generated@@171) ($generated@@147 $generated@@311))))) (= ($generated@@169 $generated@@311) (> ($generated@@148 $generated@@311) 0)))
 :pattern ( ($generated@@169 $generated@@311))
))))
(assert (forall (($generated@@314 T@T) ) (! (= (type ($generated@@313 $generated@@314)) ($generated@@82 $generated@@314 $generated@@2))
 :pattern ( ($generated@@313 $generated@@314))
)))
(assert (forall (($generated@@315 T@U) ) (! (let (($generated@@316 ($generated@@85 (type $generated@@315))))
 (=> (= (type $generated@@315) ($generated@@82 $generated@@316 $generated@@2)) (and (= (= ($generated@@312 $generated@@315) 0) (= $generated@@315 ($generated@@313 $generated@@316))) (=> (not (= ($generated@@312 $generated@@315) 0)) (exists (($generated@@317 T@U) ) (!  (and (= (type $generated@@317) $generated@@316) (< 0 ($generated ($generated@@87 $generated@@315 $generated@@317))))
 :no-pattern (type $generated@@317)
 :no-pattern ($generated $generated@@317)
 :no-pattern ($generated@@0 $generated@@317)
))))))
 :pattern ( ($generated@@312 $generated@@315))
)))
(assert  (and (and (and (and (forall (($generated@@323 T@T) ($generated@@324 T@T) ) (= ($generated@@1 ($generated@@320 $generated@@323 $generated@@324)) 18)) (forall (($generated@@325 T@T) ($generated@@326 T@T) ) (! (= ($generated@@321 ($generated@@320 $generated@@325 $generated@@326)) $generated@@325)
 :pattern ( ($generated@@320 $generated@@325 $generated@@326))
))) (forall (($generated@@327 T@T) ($generated@@328 T@T) ) (! (= ($generated@@322 ($generated@@320 $generated@@327 $generated@@328)) $generated@@328)
 :pattern ( ($generated@@320 $generated@@327 $generated@@328))
))) (forall (($generated@@329 T@U) ) (! (let (($generated@@330 ($generated@@321 (type $generated@@329))))
(= (type ($generated@@318 $generated@@329)) ($generated@@82 $generated@@330 $generated@@4)))
 :pattern ( ($generated@@318 $generated@@329))
))) (forall (($generated@@331 T@T) ($generated@@332 T@T) ) (! (= (type ($generated@@319 $generated@@331 $generated@@332)) ($generated@@320 $generated@@331 $generated@@332))
 :pattern ( ($generated@@319 $generated@@331 $generated@@332))
))))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@T) ) (! (let (($generated@@335 (type $generated@@333)))
 (not ($generated@@0 ($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333))))
 :pattern ( (let (($generated@@335 (type $generated@@333)))
($generated@@87 ($generated@@318 ($generated@@319 $generated@@335 $generated@@334)) $generated@@333)))
)))
(assert  (and (and (and (and (forall (($generated@@341 T@T) ($generated@@342 T@T) ) (= ($generated@@1 ($generated@@338 $generated@@341 $generated@@342)) 19)) (forall (($generated@@343 T@T) ($generated@@344 T@T) ) (! (= ($generated@@339 ($generated@@338 $generated@@343 $generated@@344)) $generated@@343)
 :pattern ( ($generated@@338 $generated@@343 $generated@@344))
))) (forall (($generated@@345 T@T) ($generated@@346 T@T) ) (! (= ($generated@@340 ($generated@@338 $generated@@345 $generated@@346)) $generated@@346)
 :pattern ( ($generated@@338 $generated@@345 $generated@@346))
))) (forall (($generated@@347 T@U) ) (! (let (($generated@@348 ($generated@@339 (type $generated@@347))))
(= (type ($generated@@336 $generated@@347)) ($generated@@82 $generated@@348 $generated@@4)))
 :pattern ( ($generated@@336 $generated@@347))
))) (forall (($generated@@349 T@T) ($generated@@350 T@T) ) (! (= (type ($generated@@337 $generated@@349 $generated@@350)) ($generated@@338 $generated@@349 $generated@@350))
 :pattern ( ($generated@@337 $generated@@349 $generated@@350))
))))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@T) ) (! (let (($generated@@353 (type $generated@@351)))
 (not ($generated@@0 ($generated@@87 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351))))
 :pattern ( (let (($generated@@353 (type $generated@@351)))
($generated@@87 ($generated@@336 ($generated@@337 $generated@@353 $generated@@352)) $generated@@351)))
)))
(assert (forall (($generated@@354 T@U) ) (! (let (($generated@@355 ($generated@@85 (type $generated@@354))))
 (=> (= (type $generated@@354) ($generated@@82 $generated@@355 $generated@@2)) (= ($generated@@174 $generated@@354) (forall (($generated@@356 T@U) ) (!  (=> (= (type $generated@@356) $generated@@355) (and (<= 0 ($generated ($generated@@87 $generated@@354 $generated@@356))) (<= ($generated ($generated@@87 $generated@@354 $generated@@356)) ($generated@@312 $generated@@354))))
 :pattern ( ($generated@@87 $generated@@354 $generated@@356))
)))))
 :pattern ( ($generated@@174 $generated@@354))
)))
(assert (forall (($generated@@358 T@T) ($generated@@359 T@U) ) (! (= (type ($generated@@357 $generated@@358 $generated@@359)) $generated@@358)
 :pattern ( ($generated@@357 $generated@@358 $generated@@359))
)))
(assert (forall (($generated@@360 T@U) ) (!  (=> (and (= (type $generated@@360) $generated@@163) ($generated@@247 $generated@@360 $generated@@138)) (and (= ($generated@@306 ($generated@@357 $generated@@2 $generated@@360)) $generated@@360) ($generated@@151 ($generated@@357 $generated@@2 $generated@@360) $generated@@138)))
 :pattern ( ($generated@@247 $generated@@360 $generated@@138))
)))
(assert (forall (($generated@@361 T@U) ) (!  (=> (and (= (type $generated@@361) $generated@@163) ($generated@@247 $generated@@361 $generated@@171)) (and (= ($generated@@306 ($generated@@357 $generated@@143 $generated@@361)) $generated@@361) ($generated@@151 ($generated@@357 $generated@@143 $generated@@361) $generated@@171)))
 :pattern ( ($generated@@247 $generated@@361 $generated@@171))
)))
(assert (forall (($generated@@362 Int) ) (! (= ($generated@@151 ($generated@@297 $generated@@362) $generated@@171) ($generated@@151 ($generated@@8 $generated@@362) $generated@@138))
 :pattern ( ($generated@@151 ($generated@@297 $generated@@362) $generated@@171))
)))
(assert (forall (($generated@@363 Int) ) (! (= ($generated@@151 ($generated@@301 $generated@@363) $generated@@171) ($generated@@151 ($generated@@8 $generated@@363) $generated@@138))
 :pattern ( ($generated@@151 ($generated@@301 $generated@@363) $generated@@171))
)))
(assert (forall (($generated@@364 T@U) ) (! (let (($generated@@365 ($generated@@322 (type $generated@@364))))
(let (($generated@@366 ($generated@@321 (type $generated@@364))))
 (=> (= (type $generated@@364) ($generated@@320 $generated@@366 $generated@@365)) (or (= $generated@@364 ($generated@@319 $generated@@366 $generated@@365)) (exists (($generated@@367 T@U) ) (!  (and (= (type $generated@@367) $generated@@366) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@364) $generated@@367)))
 :no-pattern (type $generated@@367)
 :no-pattern ($generated $generated@@367)
 :no-pattern ($generated@@0 $generated@@367)
))))))
 :pattern ( ($generated@@318 $generated@@364))
)))
(assert (forall (($generated@@369 T@U) ) (! (let (($generated@@370 ($generated@@322 (type $generated@@369))))
(= (type ($generated@@368 $generated@@369)) ($generated@@82 $generated@@370 $generated@@4)))
 :pattern ( ($generated@@368 $generated@@369))
)))
(assert (forall (($generated@@371 T@U) ) (! (let (($generated@@372 ($generated@@322 (type $generated@@371))))
(let (($generated@@373 ($generated@@321 (type $generated@@371))))
 (=> (= (type $generated@@371) ($generated@@320 $generated@@373 $generated@@372)) (or (= $generated@@371 ($generated@@319 $generated@@373 $generated@@372)) (exists (($generated@@374 T@U) ) (!  (and (= (type $generated@@374) $generated@@372) ($generated@@0 ($generated@@87 ($generated@@368 $generated@@371) $generated@@374)))
 :no-pattern (type $generated@@374)
 :no-pattern ($generated $generated@@374)
 :no-pattern ($generated@@0 $generated@@374)
))))))
 :pattern ( ($generated@@368 $generated@@371))
)))
(assert (forall (($generated@@375 T@U) ) (! (let (($generated@@376 ($generated@@340 (type $generated@@375))))
(let (($generated@@377 ($generated@@339 (type $generated@@375))))
 (=> (= (type $generated@@375) ($generated@@338 $generated@@377 $generated@@376)) (or (= $generated@@375 ($generated@@337 $generated@@377 $generated@@376)) (exists (($generated@@378 T@U) ) (!  (and (= (type $generated@@378) $generated@@377) ($generated@@0 ($generated@@87 ($generated@@336 $generated@@375) $generated@@378)))
 :no-pattern (type $generated@@378)
 :no-pattern ($generated $generated@@378)
 :no-pattern ($generated@@0 $generated@@378)
))))))
 :pattern ( ($generated@@336 $generated@@375))
)))
(assert (forall (($generated@@380 T@U) ) (! (let (($generated@@381 ($generated@@340 (type $generated@@380))))
(= (type ($generated@@379 $generated@@380)) ($generated@@82 $generated@@381 $generated@@4)))
 :pattern ( ($generated@@379 $generated@@380))
)))
(assert (forall (($generated@@382 T@U) ) (! (let (($generated@@383 ($generated@@340 (type $generated@@382))))
(let (($generated@@384 ($generated@@339 (type $generated@@382))))
 (=> (= (type $generated@@382) ($generated@@338 $generated@@384 $generated@@383)) (or (= $generated@@382 ($generated@@337 $generated@@384 $generated@@383)) (exists (($generated@@385 T@U) ) (!  (and (= (type $generated@@385) $generated@@383) ($generated@@0 ($generated@@87 ($generated@@379 $generated@@382) $generated@@385)))
 :no-pattern (type $generated@@385)
 :no-pattern ($generated $generated@@385)
 :no-pattern ($generated@@0 $generated@@385)
))))))
 :pattern ( ($generated@@379 $generated@@382))
)))
(assert (forall (($generated@@386 T@U) ($generated@@387 T@U) ) (!  (=> (and (= (type $generated@@386) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@387) $generated@@70)) (= ($generated@@151 $generated@@386 ($generated@@173 $generated@@387)) (forall (($generated@@388 T@U) ) (!  (=> (and (= (type $generated@@388) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@386 $generated@@388)))) ($generated@@247 $generated@@388 $generated@@387))
 :pattern ( ($generated@@87 $generated@@386 $generated@@388))
))))
 :pattern ( ($generated@@151 $generated@@386 ($generated@@173 $generated@@387)))
)))
(assert (forall (($generated@@389 T@U) ($generated@@390 T@U) ($generated@@391 T@U) ) (!  (=> (and (and (= (type $generated@@389) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@390) $generated@@70)) (= (type $generated@@391) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@389 ($generated@@258 $generated@@390) $generated@@391) (forall (($generated@@392 T@U) ) (!  (=> (and (= (type $generated@@392) $generated@@163) ($generated@@0 ($generated@@87 $generated@@389 $generated@@392))) ($generated@@275 $generated@@392 $generated@@390 $generated@@391))
 :pattern ( ($generated@@87 $generated@@389 $generated@@392))
))))
 :pattern ( ($generated@@80 $generated@@389 ($generated@@258 $generated@@390) $generated@@391))
)))
(assert (forall (($generated@@393 T@U) ($generated@@394 T@U) ($generated@@395 T@U) ) (!  (=> (and (and (= (type $generated@@393) ($generated@@82 $generated@@163 $generated@@4)) (= (type $generated@@394) $generated@@70)) (= (type $generated@@395) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@393 ($generated@@263 $generated@@394) $generated@@395) (forall (($generated@@396 T@U) ) (!  (=> (and (= (type $generated@@396) $generated@@163) ($generated@@0 ($generated@@87 $generated@@393 $generated@@396))) ($generated@@275 $generated@@396 $generated@@394 $generated@@395))
 :pattern ( ($generated@@87 $generated@@393 $generated@@396))
))))
 :pattern ( ($generated@@80 $generated@@393 ($generated@@263 $generated@@394) $generated@@395))
)))
(assert (forall (($generated@@397 T@U) ) (! (let (($generated@@398 (type $generated@@397)))
(= ($generated ($generated@@87 ($generated@@313 $generated@@398) $generated@@397)) 0))
 :pattern ( (let (($generated@@398 (type $generated@@397)))
($generated@@87 ($generated@@313 $generated@@398) $generated@@397)))
)))
(assert  (and (forall (($generated@@401 T@U) ) (! (= (type ($generated@@399 $generated@@401)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@399 $generated@@401))
)) (forall (($generated@@402 T@U) ) (! (let (($generated@@403 ($generated@@322 (type $generated@@402))))
(let (($generated@@404 ($generated@@321 (type $generated@@402))))
(= (type ($generated@@400 $generated@@402)) ($generated@@82 $generated@@404 $generated@@403))))
 :pattern ( ($generated@@400 $generated@@402))
))))
(assert (forall (($generated@@405 T@U) ($generated@@406 T@U) ) (!  (=> (and (= (type $generated@@405) ($generated@@320 $generated@@163 $generated@@163)) (= (type $generated@@406) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@399 $generated@@405) $generated@@406))  (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@405) ($generated@@161 ($generated@@357 $generated@@143 $generated@@406)))) (= ($generated@@87 ($generated@@400 $generated@@405) ($generated@@161 ($generated@@357 $generated@@143 $generated@@406))) ($generated@@162 ($generated@@357 $generated@@143 $generated@@406))))))
 :pattern ( ($generated@@87 ($generated@@399 $generated@@405) $generated@@406))
)))
(assert  (and (forall (($generated@@409 T@U) ) (! (= (type ($generated@@407 $generated@@409)) ($generated@@82 $generated@@163 $generated@@4))
 :pattern ( ($generated@@407 $generated@@409))
)) (forall (($generated@@410 T@U) ) (! (let (($generated@@411 ($generated@@340 (type $generated@@410))))
(let (($generated@@412 ($generated@@339 (type $generated@@410))))
(= (type ($generated@@408 $generated@@410)) ($generated@@82 $generated@@412 $generated@@411))))
 :pattern ( ($generated@@408 $generated@@410))
))))
(assert (forall (($generated@@413 T@U) ($generated@@414 T@U) ) (!  (=> (and (= (type $generated@@413) ($generated@@338 $generated@@163 $generated@@163)) (= (type $generated@@414) $generated@@163)) (= ($generated@@0 ($generated@@87 ($generated@@407 $generated@@413) $generated@@414))  (and ($generated@@0 ($generated@@87 ($generated@@336 $generated@@413) ($generated@@161 ($generated@@357 $generated@@143 $generated@@414)))) (= ($generated@@87 ($generated@@408 $generated@@413) ($generated@@161 ($generated@@357 $generated@@143 $generated@@414))) ($generated@@162 ($generated@@357 $generated@@143 $generated@@414))))))
 :pattern ( ($generated@@87 ($generated@@407 $generated@@413) $generated@@414))
)))
(assert (forall (($generated@@415 T@U) ($generated@@416 T@U) ) (! (let (($generated@@417 (type $generated@@416)))
(let (($generated@@418 ($generated@@321 (type $generated@@415))))
 (=> (= (type $generated@@415) ($generated@@320 $generated@@418 $generated@@417)) (= ($generated@@0 ($generated@@87 ($generated@@368 $generated@@415) $generated@@416)) (exists (($generated@@419 T@U) ) (!  (and (= (type $generated@@419) $generated@@418) (and ($generated@@0 ($generated@@87 ($generated@@318 $generated@@415) $generated@@419)) (= $generated@@416 ($generated@@87 ($generated@@400 $generated@@415) $generated@@419))))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@415) $generated@@419))
 :pattern ( ($generated@@87 ($generated@@400 $generated@@415) $generated@@419))
))))))
 :pattern ( ($generated@@87 ($generated@@368 $generated@@415) $generated@@416))
)))
(assert (forall (($generated@@420 T@U) ($generated@@421 T@U) ) (! (let (($generated@@422 (type $generated@@421)))
(let (($generated@@423 ($generated@@339 (type $generated@@420))))
 (=> (= (type $generated@@420) ($generated@@338 $generated@@423 $generated@@422)) (= ($generated@@0 ($generated@@87 ($generated@@379 $generated@@420) $generated@@421)) (exists (($generated@@424 T@U) ) (!  (and (= (type $generated@@424) $generated@@423) (and ($generated@@0 ($generated@@87 ($generated@@336 $generated@@420) $generated@@424)) (= $generated@@421 ($generated@@87 ($generated@@408 $generated@@420) $generated@@424))))
 :pattern ( ($generated@@87 ($generated@@336 $generated@@420) $generated@@424))
 :pattern ( ($generated@@87 ($generated@@408 $generated@@420) $generated@@424))
))))))
 :pattern ( ($generated@@87 ($generated@@379 $generated@@420) $generated@@421))
)))
(assert (forall (($generated@@426 T@U) ($generated@@427 T@U) ) (! (= (type ($generated@@425 $generated@@426 $generated@@427)) $generated@@70)
 :pattern ( ($generated@@425 $generated@@426 $generated@@427))
)))
(assert (forall (($generated@@428 T@U) ($generated@@429 T@U) ($generated@@430 T@U) ($generated@@431 T@U) ) (!  (=> (and (and (and (= (type $generated@@428) ($generated@@320 $generated@@163 $generated@@163)) (= (type $generated@@429) $generated@@70)) (= (type $generated@@430) $generated@@70)) (= (type $generated@@431) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431) (forall (($generated@@432 T@U) ) (!  (=> (and (= (type $generated@@432) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@428) $generated@@432))) (and ($generated@@275 ($generated@@87 ($generated@@400 $generated@@428) $generated@@432) $generated@@430 $generated@@431) ($generated@@275 $generated@@432 $generated@@429 $generated@@431)))
 :pattern ( ($generated@@87 ($generated@@400 $generated@@428) $generated@@432))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@428) $generated@@432))
))))
 :pattern ( ($generated@@80 $generated@@428 ($generated@@425 $generated@@429 $generated@@430) $generated@@431))
)))
(assert (forall (($generated@@434 T@U) ($generated@@435 T@U) ) (! (= (type ($generated@@433 $generated@@434 $generated@@435)) $generated@@70)
 :pattern ( ($generated@@433 $generated@@434 $generated@@435))
)))
(assert (forall (($generated@@436 T@U) ($generated@@437 T@U) ($generated@@438 T@U) ($generated@@439 T@U) ) (!  (=> (and (and (and (= (type $generated@@436) ($generated@@338 $generated@@163 $generated@@163)) (= (type $generated@@437) $generated@@70)) (= (type $generated@@438) $generated@@70)) (= (type $generated@@439) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439) (forall (($generated@@440 T@U) ) (!  (=> (and (= (type $generated@@440) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@336 $generated@@436) $generated@@440))) (and ($generated@@275 ($generated@@87 ($generated@@408 $generated@@436) $generated@@440) $generated@@438 $generated@@439) ($generated@@275 $generated@@440 $generated@@437 $generated@@439)))
 :pattern ( ($generated@@87 ($generated@@408 $generated@@436) $generated@@440))
 :pattern ( ($generated@@87 ($generated@@336 $generated@@436) $generated@@440))
))))
 :pattern ( ($generated@@80 $generated@@436 ($generated@@433 $generated@@437 $generated@@438) $generated@@439))
)))
(assert (forall (($generated@@441 Int) ($generated@@442 T@U) ) (!  (=> (and (= (type $generated@@442) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@274 $generated@@442)) (= ($generated@@80 ($generated@@297 $generated@@441) $generated@@171 $generated@@442) ($generated@@80 ($generated@@8 $generated@@441) $generated@@138 $generated@@442)))
 :pattern ( ($generated@@80 ($generated@@297 $generated@@441) $generated@@171 $generated@@442))
)))
(assert (forall (($generated@@443 Int) ($generated@@444 T@U) ) (!  (=> (and (= (type $generated@@444) ($generated@@82 $generated@@83 $generated@@84)) ($generated@@274 $generated@@444)) (= ($generated@@80 ($generated@@301 $generated@@443) $generated@@171 $generated@@444) ($generated@@80 ($generated@@8 $generated@@443) $generated@@138 $generated@@444)))
 :pattern ( ($generated@@80 ($generated@@301 $generated@@443) $generated@@171 $generated@@444))
)))
(assert (forall (($generated@@445 T@U) ) (!  (=> (and (= (type $generated@@445) $generated@@143) ($generated@@151 $generated@@445 $generated@@171)) (or ($generated@@142 $generated@@445) ($generated@@147 $generated@@445)))
 :pattern ( ($generated@@147 $generated@@445) ($generated@@151 $generated@@445 $generated@@171))
 :pattern ( ($generated@@142 $generated@@445) ($generated@@151 $generated@@445 $generated@@171))
)))
(assert (forall (($generated@@447 T@T) ) (! (= (type ($generated@@446 $generated@@447)) ($generated@@82 $generated@@447 $generated@@4))
 :pattern ( ($generated@@446 $generated@@447))
)))
(assert (forall (($generated@@448 T@U) ) (! (let (($generated@@449 ($generated@@340 (type $generated@@448))))
(let (($generated@@450 ($generated@@339 (type $generated@@448))))
 (=> (= (type $generated@@448) ($generated@@338 $generated@@450 $generated@@449)) (= (= $generated@@448 ($generated@@337 $generated@@450 $generated@@449)) (= ($generated@@336 $generated@@448) ($generated@@446 $generated@@450))))))
 :pattern ( ($generated@@336 $generated@@448))
)))
(assert (forall (($generated@@451 T@U) ) (! (let (($generated@@452 ($generated@@340 (type $generated@@451))))
(let (($generated@@453 ($generated@@339 (type $generated@@451))))
 (=> (= (type $generated@@451) ($generated@@338 $generated@@453 $generated@@452)) (= (= $generated@@451 ($generated@@337 $generated@@453 $generated@@452)) (= ($generated@@379 $generated@@451) ($generated@@446 $generated@@452))))))
 :pattern ( ($generated@@379 $generated@@451))
)))
(assert (forall (($generated@@454 T@U) ) (! (let (($generated@@455 ($generated@@340 (type $generated@@454))))
(let (($generated@@456 ($generated@@339 (type $generated@@454))))
 (=> (= (type $generated@@454) ($generated@@338 $generated@@456 $generated@@455)) (= (= $generated@@454 ($generated@@337 $generated@@456 $generated@@455)) (= ($generated@@407 $generated@@454) ($generated@@446 $generated@@163))))))
 :pattern ( ($generated@@407 $generated@@454))
)))
(assert (forall (($generated@@457 T@U) ) (! (let (($generated@@458 ($generated@@322 (type $generated@@457))))
(let (($generated@@459 ($generated@@321 (type $generated@@457))))
 (=> (= (type $generated@@457) ($generated@@320 $generated@@459 $generated@@458)) (or (= $generated@@457 ($generated@@319 $generated@@459 $generated@@458)) (exists (($generated@@460 T@U) ($generated@@461 T@U) ) (!  (and (and (= (type $generated@@460) $generated@@163) (= (type $generated@@461) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@399 $generated@@457) ($generated@@306 ($generated@@246 $generated@@460 $generated@@461)))))
 :no-pattern (type $generated@@460)
 :no-pattern (type $generated@@461)
 :no-pattern ($generated $generated@@460)
 :no-pattern ($generated@@0 $generated@@460)
 :no-pattern ($generated $generated@@461)
 :no-pattern ($generated@@0 $generated@@461)
))))))
 :pattern ( ($generated@@399 $generated@@457))
)))
(assert (forall (($generated@@462 T@U) ) (! (let (($generated@@463 ($generated@@340 (type $generated@@462))))
(let (($generated@@464 ($generated@@339 (type $generated@@462))))
 (=> (= (type $generated@@462) ($generated@@338 $generated@@464 $generated@@463)) (or (= $generated@@462 ($generated@@337 $generated@@464 $generated@@463)) (exists (($generated@@465 T@U) ($generated@@466 T@U) ) (!  (and (and (= (type $generated@@465) $generated@@163) (= (type $generated@@466) $generated@@163)) ($generated@@0 ($generated@@87 ($generated@@407 $generated@@462) ($generated@@306 ($generated@@246 $generated@@465 $generated@@466)))))
 :no-pattern (type $generated@@465)
 :no-pattern (type $generated@@466)
 :no-pattern ($generated $generated@@465)
 :no-pattern ($generated@@0 $generated@@465)
 :no-pattern ($generated $generated@@466)
 :no-pattern ($generated@@0 $generated@@466)
))))))
 :pattern ( ($generated@@407 $generated@@462))
)))
(assert (forall (($generated@@467 T@U) ) (!  (=> (and (= (type $generated@@467) $generated@@163) ($generated@@247 $generated@@467 $generated@@46)) (and (= ($generated@@306 ($generated@@357 $generated@@2 $generated@@467)) $generated@@467) ($generated@@151 ($generated@@357 $generated@@2 $generated@@467) $generated@@46)))
 :pattern ( ($generated@@247 $generated@@467 $generated@@46))
)))
(assert (forall (($generated@@468 T@U) ) (!  (=> (and (= (type $generated@@468) $generated@@163) ($generated@@247 $generated@@468 $generated@@47)) (and (= ($generated@@306 ($generated@@357 $generated@@3 $generated@@468)) $generated@@468) ($generated@@151 ($generated@@357 $generated@@3 $generated@@468) $generated@@47)))
 :pattern ( ($generated@@247 $generated@@468 $generated@@47))
)))
(assert (forall (($generated@@469 T@U) ) (!  (=> (and (= (type $generated@@469) $generated@@163) ($generated@@247 $generated@@469 $generated@@44)) (and (= ($generated@@306 ($generated@@357 $generated@@4 $generated@@469)) $generated@@469) ($generated@@151 ($generated@@357 $generated@@4 $generated@@469) $generated@@44)))
 :pattern ( ($generated@@247 $generated@@469 $generated@@44))
)))
(assert (= ($generated@@1 $generated@@470) 20))
(assert (forall (($generated@@471 T@U) ) (!  (=> (and (= (type $generated@@471) $generated@@163) ($generated@@247 $generated@@471 $generated@@45)) (and (= ($generated@@306 ($generated@@357 $generated@@470 $generated@@471)) $generated@@471) ($generated@@151 ($generated@@357 $generated@@470 $generated@@471) $generated@@45)))
 :pattern ( ($generated@@247 $generated@@471 $generated@@45))
)))
(assert (forall (($generated@@472 T@U) ($generated@@473 T@U) ) (!  (=> (= (type $generated@@473) $generated@@70) (= ($generated@@247 ($generated@@306 $generated@@472) $generated@@473) ($generated@@151 $generated@@472 $generated@@473)))
 :pattern ( ($generated@@247 ($generated@@306 $generated@@472) $generated@@473))
)))
(assert (forall (($generated@@474 T@U) ) (! (let (($generated@@475 ($generated@@85 (type $generated@@474))))
 (=> (= (type $generated@@474) ($generated@@82 $generated@@475 $generated@@2)) (<= 0 ($generated@@312 $generated@@474))))
 :pattern ( ($generated@@312 $generated@@474))
)))
(assert (forall (($generated@@476 T@U) ) (! (let (($generated@@477 ($generated@@292 (type $generated@@476))))
 (=> (= (type $generated@@476) ($generated@@291 $generated@@477)) (<= 0 ($generated@@290 $generated@@476))))
 :pattern ( ($generated@@290 $generated@@476))
)))
(assert (forall (($generated@@479 T@U) ) (! (= (type ($generated@@478 $generated@@479)) $generated@@70)
 :pattern ( ($generated@@478 $generated@@479))
)))
(assert (forall (($generated@@480 T@U) ($generated@@481 T@U) ) (!  (=> (and (= (type $generated@@480) $generated@@70) (= (type $generated@@481) $generated@@70)) (= ($generated@@478 ($generated@@425 $generated@@480 $generated@@481)) $generated@@480))
 :pattern ( ($generated@@425 $generated@@480 $generated@@481))
)))
(assert (forall (($generated@@483 T@U) ) (! (= (type ($generated@@482 $generated@@483)) $generated@@70)
 :pattern ( ($generated@@482 $generated@@483))
)))
(assert (forall (($generated@@484 T@U) ($generated@@485 T@U) ) (!  (=> (and (= (type $generated@@484) $generated@@70) (= (type $generated@@485) $generated@@70)) (= ($generated@@482 ($generated@@425 $generated@@484 $generated@@485)) $generated@@485))
 :pattern ( ($generated@@425 $generated@@484 $generated@@485))
)))
(assert (forall (($generated@@486 T@U) ($generated@@487 T@U) ) (!  (=> (and (= (type $generated@@486) $generated@@70) (= (type $generated@@487) $generated@@70)) (= ($generated@@78 ($generated@@425 $generated@@486 $generated@@487)) $generated@@58))
 :pattern ( ($generated@@425 $generated@@486 $generated@@487))
)))
(assert (forall (($generated@@489 T@U) ) (! (= (type ($generated@@488 $generated@@489)) $generated@@70)
 :pattern ( ($generated@@488 $generated@@489))
)))
(assert (forall (($generated@@490 T@U) ($generated@@491 T@U) ) (!  (=> (and (= (type $generated@@490) $generated@@70) (= (type $generated@@491) $generated@@70)) (= ($generated@@488 ($generated@@433 $generated@@490 $generated@@491)) $generated@@490))
 :pattern ( ($generated@@433 $generated@@490 $generated@@491))
)))
(assert (forall (($generated@@493 T@U) ) (! (= (type ($generated@@492 $generated@@493)) $generated@@70)
 :pattern ( ($generated@@492 $generated@@493))
)))
(assert (forall (($generated@@494 T@U) ($generated@@495 T@U) ) (!  (=> (and (= (type $generated@@494) $generated@@70) (= (type $generated@@495) $generated@@70)) (= ($generated@@492 ($generated@@433 $generated@@494 $generated@@495)) $generated@@495))
 :pattern ( ($generated@@433 $generated@@494 $generated@@495))
)))
(assert (forall (($generated@@496 T@U) ($generated@@497 T@U) ) (!  (=> (and (= (type $generated@@496) $generated@@70) (= (type $generated@@497) $generated@@70)) (= ($generated@@78 ($generated@@433 $generated@@496 $generated@@497)) $generated@@59))
 :pattern ( ($generated@@433 $generated@@496 $generated@@497))
)))
(assert (forall (($generated@@498 T@U) ($generated@@499 T@U) ) (!  (=> (and (= (type $generated@@498) $generated@@163) (= (type $generated@@499) $generated@@163)) (= ($generated@@281 ($generated@@246 $generated@@498 $generated@@499)) $generated@@62))
 :pattern ( ($generated@@246 $generated@@498 $generated@@499))
)))
(assert (forall (($generated@@501 T@U) ) (! (= (type ($generated@@500 $generated@@501)) $generated@@70)
 :pattern ( ($generated@@500 $generated@@501))
)))
(assert (forall (($generated@@502 T@U) ($generated@@503 T@U) ) (!  (=> (and (= (type $generated@@502) $generated@@70) (= (type $generated@@503) $generated@@70)) (= ($generated@@500 ($generated@@154 $generated@@502 $generated@@503)) $generated@@502))
 :pattern ( ($generated@@154 $generated@@502 $generated@@503))
)))
(assert (forall (($generated@@505 T@U) ) (! (= (type ($generated@@504 $generated@@505)) $generated@@70)
 :pattern ( ($generated@@504 $generated@@505))
)))
(assert (forall (($generated@@506 T@U) ($generated@@507 T@U) ) (!  (=> (and (= (type $generated@@506) $generated@@70) (= (type $generated@@507) $generated@@70)) (= ($generated@@504 ($generated@@154 $generated@@506 $generated@@507)) $generated@@507))
 :pattern ( ($generated@@154 $generated@@506 $generated@@507))
)))
(assert (forall (($generated@@508 T@U) ($generated@@509 T@U) ) (!  (=> (and (= (type $generated@@508) $generated@@163) (= (type $generated@@509) $generated@@163)) (= ($generated@@161 ($generated@@246 $generated@@508 $generated@@509)) $generated@@508))
 :pattern ( ($generated@@246 $generated@@508 $generated@@509))
)))
(assert (forall (($generated@@510 T@U) ($generated@@511 T@U) ) (!  (=> (and (= (type $generated@@510) $generated@@163) (= (type $generated@@511) $generated@@163)) (= ($generated@@162 ($generated@@246 $generated@@510 $generated@@511)) $generated@@511))
 :pattern ( ($generated@@246 $generated@@510 $generated@@511))
)))
(assert  (and (forall (($generated@@514 T@U) ) (! (= (type ($generated@@512 $generated@@514)) $generated@@70)
 :pattern ( ($generated@@512 $generated@@514))
)) (forall (($generated@@515 T@U) ($generated@@516 Int) ) (! (let (($generated@@517 ($generated@@292 (type $generated@@515))))
(= (type ($generated@@513 $generated@@515 $generated@@516)) $generated@@517))
 :pattern ( ($generated@@513 $generated@@515 $generated@@516))
))))
(assert (forall (($generated@@518 T@U) ($generated@@519 T@U) ($generated@@520 T@U) ) (!  (=> (and (and (= (type $generated@@518) ($generated@@291 $generated@@163)) (= (type $generated@@519) $generated@@70)) (= (type $generated@@520) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@518 ($generated@@512 $generated@@519) $generated@@520) (forall (($generated@@521 Int) ) (!  (=> (and (<= 0 $generated@@521) (< $generated@@521 ($generated@@290 $generated@@518))) ($generated@@275 ($generated@@513 $generated@@518 $generated@@521) $generated@@519 $generated@@520))
 :pattern ( ($generated@@513 $generated@@518 $generated@@521))
))))
 :pattern ( ($generated@@80 $generated@@518 ($generated@@512 $generated@@519) $generated@@520))
)))
(assert (forall (($generated@@523 Int) ) (! (= ($generated@@522 ($generated@@81 $generated@@523)) $generated@@523)
 :pattern ( ($generated@@81 $generated@@523))
)))
(assert (forall (($generated@@525 T@U) ) (! (= (type ($generated@@524 $generated@@525)) $generated@@70)
 :pattern ( ($generated@@524 $generated@@525))
)))
(assert (forall (($generated@@526 T@U) ) (!  (=> (= (type $generated@@526) $generated@@70) (= ($generated@@524 ($generated@@258 $generated@@526)) $generated@@526))
 :pattern ( ($generated@@258 $generated@@526))
)))
(assert (forall (($generated@@527 T@U) ) (!  (=> (= (type $generated@@527) $generated@@70) (= ($generated@@78 ($generated@@258 $generated@@527)) $generated@@54))
 :pattern ( ($generated@@258 $generated@@527))
)))
(assert (forall (($generated@@529 T@U) ) (! (= (type ($generated@@528 $generated@@529)) $generated@@70)
 :pattern ( ($generated@@528 $generated@@529))
)))
(assert (forall (($generated@@530 T@U) ) (!  (=> (= (type $generated@@530) $generated@@70) (= ($generated@@528 ($generated@@263 $generated@@530)) $generated@@530))
 :pattern ( ($generated@@263 $generated@@530))
)))
(assert (forall (($generated@@531 T@U) ) (!  (=> (= (type $generated@@531) $generated@@70) (= ($generated@@78 ($generated@@263 $generated@@531)) $generated@@55))
 :pattern ( ($generated@@263 $generated@@531))
)))
(assert (forall (($generated@@533 T@U) ) (! (= (type ($generated@@532 $generated@@533)) $generated@@70)
 :pattern ( ($generated@@532 $generated@@533))
)))
(assert (forall (($generated@@534 T@U) ) (!  (=> (= (type $generated@@534) $generated@@70) (= ($generated@@532 ($generated@@173 $generated@@534)) $generated@@534))
 :pattern ( ($generated@@173 $generated@@534))
)))
(assert (forall (($generated@@535 T@U) ) (!  (=> (= (type $generated@@535) $generated@@70) (= ($generated@@78 ($generated@@173 $generated@@535)) $generated@@56))
 :pattern ( ($generated@@173 $generated@@535))
)))
(assert (forall (($generated@@537 T@U) ) (! (= (type ($generated@@536 $generated@@537)) $generated@@70)
 :pattern ( ($generated@@536 $generated@@537))
)))
(assert (forall (($generated@@538 T@U) ) (!  (=> (= (type $generated@@538) $generated@@70) (= ($generated@@536 ($generated@@512 $generated@@538)) $generated@@538))
 :pattern ( ($generated@@512 $generated@@538))
)))
(assert (forall (($generated@@539 T@U) ) (!  (=> (= (type $generated@@539) $generated@@70) (= ($generated@@78 ($generated@@512 $generated@@539)) $generated@@57))
 :pattern ( ($generated@@512 $generated@@539))
)))
(assert (forall (($generated@@540 Int) ) (! (= ($generated@@281 ($generated@@297 $generated@@540)) $generated@@64)
 :pattern ( ($generated@@297 $generated@@540))
)))
(assert (forall (($generated@@541 Int) ) (! (= ($generated@@144 ($generated@@297 $generated@@541)) $generated@@541)
 :pattern ( ($generated@@297 $generated@@541))
)))
(assert (forall (($generated@@542 Int) ) (! (= ($generated@@281 ($generated@@301 $generated@@542)) $generated@@66)
 :pattern ( ($generated@@301 $generated@@542))
)))
(assert (forall (($generated@@543 Int) ) (! (= ($generated@@148 ($generated@@301 $generated@@543)) $generated@@543)
 :pattern ( ($generated@@301 $generated@@543))
)))
(assert (forall (($generated@@544 T@U) ) (! (let (($generated@@545 (type $generated@@544)))
(= ($generated@@357 $generated@@545 ($generated@@306 $generated@@544)) $generated@@544))
 :pattern ( ($generated@@306 $generated@@544))
)))
(assert (forall (($generated@@546 T@U) ($generated@@547 T@U) ($generated@@548 T@U) ) (!  (=> (and (and (= (type $generated@@546) ($generated@@320 $generated@@163 $generated@@163)) (= (type $generated@@547) $generated@@70)) (= (type $generated@@548) $generated@@70)) (= ($generated@@151 $generated@@546 ($generated@@425 $generated@@547 $generated@@548)) (forall (($generated@@549 T@U) ) (!  (=> (and (= (type $generated@@549) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@318 $generated@@546) $generated@@549))) (and ($generated@@247 ($generated@@87 ($generated@@400 $generated@@546) $generated@@549) $generated@@548) ($generated@@247 $generated@@549 $generated@@547)))
 :pattern ( ($generated@@87 ($generated@@400 $generated@@546) $generated@@549))
 :pattern ( ($generated@@87 ($generated@@318 $generated@@546) $generated@@549))
))))
 :pattern ( ($generated@@151 $generated@@546 ($generated@@425 $generated@@547 $generated@@548)))
)))
(assert (forall (($generated@@550 T@U) ($generated@@551 T@U) ($generated@@552 T@U) ) (!  (=> (and (and (= (type $generated@@550) ($generated@@338 $generated@@163 $generated@@163)) (= (type $generated@@551) $generated@@70)) (= (type $generated@@552) $generated@@70)) (= ($generated@@151 $generated@@550 ($generated@@433 $generated@@551 $generated@@552)) (forall (($generated@@553 T@U) ) (!  (=> (and (= (type $generated@@553) $generated@@163) ($generated@@0 ($generated@@87 ($generated@@336 $generated@@550) $generated@@553))) (and ($generated@@247 ($generated@@87 ($generated@@408 $generated@@550) $generated@@553) $generated@@552) ($generated@@247 $generated@@553 $generated@@551)))
 :pattern ( ($generated@@87 ($generated@@408 $generated@@550) $generated@@553))
 :pattern ( ($generated@@87 ($generated@@336 $generated@@550) $generated@@553))
))))
 :pattern ( ($generated@@151 $generated@@550 ($generated@@433 $generated@@551 $generated@@552)))
)))
(assert (forall (($generated@@556 T@U) ($generated@@557 T@U) ) (!  (=> (and (= (type $generated@@556) $generated@@163) (= (type $generated@@557) $generated@@163)) (< ($generated@@554 $generated@@556) ($generated@@555 ($generated@@246 $generated@@556 $generated@@557))))
 :pattern ( ($generated@@246 $generated@@556 $generated@@557))
)))
(assert (forall (($generated@@558 T@U) ($generated@@559 T@U) ) (!  (=> (and (= (type $generated@@558) $generated@@163) (= (type $generated@@559) $generated@@163)) (< ($generated@@554 $generated@@559) ($generated@@555 ($generated@@246 $generated@@558 $generated@@559))))
 :pattern ( ($generated@@246 $generated@@558 $generated@@559))
)))
(assert (forall (($generated@@560 T@U) ($generated@@561 T@U) ($generated@@562 T@U) ) (!  (=> (and (and (and (= (type $generated@@560) $generated@@163) (= (type $generated@@561) $generated@@70)) (= (type $generated@@562) $generated@@70)) ($generated@@247 $generated@@560 ($generated@@425 $generated@@561 $generated@@562))) (and (= ($generated@@306 ($generated@@357 ($generated@@320 $generated@@163 $generated@@163) $generated@@560)) $generated@@560) ($generated@@151 ($generated@@357 ($generated@@320 $generated@@163 $generated@@163) $generated@@560) ($generated@@425 $generated@@561 $generated@@562))))
 :pattern ( ($generated@@247 $generated@@560 ($generated@@425 $generated@@561 $generated@@562)))
)))
(assert (forall (($generated@@563 T@U) ($generated@@564 T@U) ($generated@@565 T@U) ) (!  (=> (and (and (and (= (type $generated@@563) $generated@@163) (= (type $generated@@564) $generated@@70)) (= (type $generated@@565) $generated@@70)) ($generated@@247 $generated@@563 ($generated@@433 $generated@@564 $generated@@565))) (and (= ($generated@@306 ($generated@@357 ($generated@@338 $generated@@163 $generated@@163) $generated@@563)) $generated@@563) ($generated@@151 ($generated@@357 ($generated@@338 $generated@@163 $generated@@163) $generated@@563) ($generated@@433 $generated@@564 $generated@@565))))
 :pattern ( ($generated@@247 $generated@@563 ($generated@@433 $generated@@564 $generated@@565)))
)))
(assert (forall (($generated@@566 T@U) ($generated@@567 T@U) ($generated@@568 T@U) ) (!  (=> (and (and (and (= (type $generated@@566) $generated@@70) (= (type $generated@@567) $generated@@70)) (= (type $generated@@568) $generated@@163)) ($generated@@247 $generated@@568 ($generated@@154 $generated@@566 $generated@@567))) (and (= ($generated@@306 ($generated@@357 $generated@@143 $generated@@568)) $generated@@568) ($generated@@151 ($generated@@357 $generated@@143 $generated@@568) ($generated@@154 $generated@@566 $generated@@567))))
 :pattern ( ($generated@@247 $generated@@568 ($generated@@154 $generated@@566 $generated@@567)))
)))
(assert (forall (($generated@@569 T@U) ) (! (let (($generated@@570 (type $generated@@569)))
 (not ($generated@@0 ($generated@@87 ($generated@@446 $generated@@570) $generated@@569))))
 :pattern ( (let (($generated@@570 (type $generated@@569)))
($generated@@87 ($generated@@446 $generated@@570) $generated@@569)))
)))
(assert (forall (($generated@@572 T@U) ) (! (= (type ($generated@@571 $generated@@572)) $generated@@75)
 :pattern ( ($generated@@571 $generated@@572))
)))
(assert (forall (($generated@@573 T@U) ($generated@@574 T@U) ) (!  (=> (and (= (type $generated@@573) $generated@@70) (= (type $generated@@574) $generated@@70)) (and (= ($generated@@78 ($generated@@154 $generated@@573 $generated@@574)) $generated@@63) (= ($generated@@571 ($generated@@154 $generated@@573 $generated@@574)) $generated@@68)))
 :pattern ( ($generated@@154 $generated@@573 $generated@@574))
)))
(assert (forall (($generated@@575 T@U) ) (!  (=> (= (type $generated@@575) $generated@@143) (= ($generated@@554 ($generated@@306 $generated@@575)) ($generated@@555 $generated@@575)))
 :pattern ( ($generated@@554 ($generated@@306 $generated@@575)))
)))
(assert  (=> (<= 0 $generated@@168) (forall (($generated@@576 T@U) ) (!  (=> (and (= (type $generated@@576) $generated@@143) (or ($generated@@170 ($generated@@270 $generated@@576)) (and (not (= 0 $generated@@168)) (and ($generated@@151 $generated@@576 $generated@@171) ($generated@@0 ($generated@@270 ($generated@@11 ($generated@@147 ($generated@@270 $generated@@576))))))))) (= ($generated@@169 ($generated@@270 $generated@@576)) ($generated@@0 ($generated@@270 ($generated@@11 (> ($generated@@148 ($generated@@270 $generated@@576)) 0))))))
 :weight 3
 :pattern ( ($generated@@169 ($generated@@270 $generated@@576)))
))))
(assert (forall (($generated@@577 T@U) ) (!  (=> (and (= (type $generated@@577) $generated@@163) ($generated@@247 $generated@@577 ($generated@@81 0))) (and (= ($generated@@306 ($generated@@357 $generated@@2 $generated@@577)) $generated@@577) ($generated@@151 ($generated@@357 ($generated@@82 $generated@@163 $generated@@4) $generated@@577) ($generated@@81 0))))
 :pattern ( ($generated@@247 $generated@@577 ($generated@@81 0)))
)))
(assert (forall (($generated@@578 T@U) ($generated@@579 T@U) ) (!  (=> (and (and (= (type $generated@@578) $generated@@163) (= (type $generated@@579) $generated@@70)) ($generated@@247 $generated@@578 ($generated@@258 $generated@@579))) (and (= ($generated@@306 ($generated@@357 ($generated@@82 $generated@@163 $generated@@4) $generated@@578)) $generated@@578) ($generated@@151 ($generated@@357 ($generated@@82 $generated@@163 $generated@@4) $generated@@578) ($generated@@258 $generated@@579))))
 :pattern ( ($generated@@247 $generated@@578 ($generated@@258 $generated@@579)))
)))
(assert (forall (($generated@@580 T@U) ($generated@@581 T@U) ) (!  (=> (and (and (= (type $generated@@580) $generated@@163) (= (type $generated@@581) $generated@@70)) ($generated@@247 $generated@@580 ($generated@@263 $generated@@581))) (and (= ($generated@@306 ($generated@@357 ($generated@@82 $generated@@163 $generated@@4) $generated@@580)) $generated@@580) ($generated@@151 ($generated@@357 ($generated@@82 $generated@@163 $generated@@4) $generated@@580) ($generated@@263 $generated@@581))))
 :pattern ( ($generated@@247 $generated@@580 ($generated@@263 $generated@@581)))
)))
(assert (forall (($generated@@582 T@U) ($generated@@583 T@U) ) (!  (=> (and (and (= (type $generated@@582) $generated@@163) (= (type $generated@@583) $generated@@70)) ($generated@@247 $generated@@582 ($generated@@173 $generated@@583))) (and (= ($generated@@306 ($generated@@357 ($generated@@82 $generated@@163 $generated@@2) $generated@@582)) $generated@@582) ($generated@@151 ($generated@@357 ($generated@@82 $generated@@163 $generated@@2) $generated@@582) ($generated@@173 $generated@@583))))
 :pattern ( ($generated@@247 $generated@@582 ($generated@@173 $generated@@583)))
)))
(assert (forall (($generated@@584 T@U) ($generated@@585 T@U) ) (!  (=> (and (and (= (type $generated@@584) $generated@@163) (= (type $generated@@585) $generated@@70)) ($generated@@247 $generated@@584 ($generated@@512 $generated@@585))) (and (= ($generated@@306 ($generated@@357 ($generated@@291 $generated@@163) $generated@@584)) $generated@@584) ($generated@@151 ($generated@@357 ($generated@@291 $generated@@163) $generated@@584) ($generated@@512 $generated@@585))))
 :pattern ( ($generated@@247 $generated@@584 ($generated@@512 $generated@@585)))
)))
(assert (= ($generated@@78 $generated@@138) $generated@@61))
(assert (= ($generated@@571 $generated@@138) $generated@@67))
(assert (= ($generated@@78 $generated@@171) $generated@@65))
(assert (= ($generated@@571 $generated@@171) $generated@@69))
(assert (forall (($generated@@586 T@U) ($generated@@587 T@U) ($generated@@588 T@U) ) (!  (=> (and (and (= (type $generated@@586) ($generated@@82 $generated@@163 $generated@@2)) (= (type $generated@@587) $generated@@70)) (= (type $generated@@588) ($generated@@82 $generated@@83 $generated@@84))) (= ($generated@@80 $generated@@586 ($generated@@173 $generated@@587) $generated@@588) (forall (($generated@@589 T@U) ) (!  (=> (and (= (type $generated@@589) $generated@@163) (< 0 ($generated ($generated@@87 $generated@@586 $generated@@589)))) ($generated@@275 $generated@@589 $generated@@587 $generated@@588))
 :pattern ( ($generated@@87 $generated@@586 $generated@@589))
))))
 :pattern ( ($generated@@80 $generated@@586 ($generated@@173 $generated@@587) $generated@@588))
)))
(assert (forall (($generated@@590 T@U) ($generated@@591 T@U) ($generated@@592 T@U) ) (!  (=> (and (and (and (= (type $generated@@590) $generated@@143) (= (type $generated@@591) $generated@@70)) (= (type $generated@@592) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@274 $generated@@592) (and ($generated@@153 $generated@@590) (exists (($generated@@593 T@U) ) (!  (and (= (type $generated@@593) $generated@@70) ($generated@@80 $generated@@590 ($generated@@154 $generated@@591 $generated@@593) $generated@@592))
 :pattern ( ($generated@@80 $generated@@590 ($generated@@154 $generated@@591 $generated@@593) $generated@@592))
))))) ($generated@@275 ($generated@@161 $generated@@590) $generated@@591 $generated@@592))
 :pattern ( ($generated@@275 ($generated@@161 $generated@@590) $generated@@591 $generated@@592))
)))
(assert (forall (($generated@@594 T@U) ($generated@@595 T@U) ($generated@@596 T@U) ) (!  (=> (and (and (and (= (type $generated@@594) $generated@@143) (= (type $generated@@595) $generated@@70)) (= (type $generated@@596) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@274 $generated@@596) (and ($generated@@153 $generated@@594) (exists (($generated@@597 T@U) ) (!  (and (= (type $generated@@597) $generated@@70) ($generated@@80 $generated@@594 ($generated@@154 $generated@@597 $generated@@595) $generated@@596))
 :pattern ( ($generated@@80 $generated@@594 ($generated@@154 $generated@@597 $generated@@595) $generated@@596))
))))) ($generated@@275 ($generated@@162 $generated@@594) $generated@@595 $generated@@596))
 :pattern ( ($generated@@275 ($generated@@162 $generated@@594) $generated@@595 $generated@@596))
)))
(assert (forall (($generated@@598 T@U) ($generated@@599 T@U) ) (!  (=> (and (and (= (type $generated@@598) $generated@@143) (= (type $generated@@599) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@274 $generated@@599) (and ($generated@@142 $generated@@598) ($generated@@80 $generated@@598 $generated@@171 $generated@@599)))) ($generated@@80 ($generated@@8 ($generated@@144 $generated@@598)) $generated@@138 $generated@@599))
 :pattern ( ($generated@@80 ($generated@@8 ($generated@@144 $generated@@598)) $generated@@138 $generated@@599))
)))
(assert (forall (($generated@@600 T@U) ($generated@@601 T@U) ) (!  (=> (and (and (= (type $generated@@600) $generated@@143) (= (type $generated@@601) ($generated@@82 $generated@@83 $generated@@84))) (and ($generated@@274 $generated@@601) (and ($generated@@147 $generated@@600) ($generated@@80 $generated@@600 $generated@@171 $generated@@601)))) ($generated@@80 ($generated@@8 ($generated@@148 $generated@@600)) $generated@@138 $generated@@601))
 :pattern ( ($generated@@80 ($generated@@8 ($generated@@148 $generated@@600)) $generated@@138 $generated@@601))
)))
(assert (forall (($generated@@602 T@U) ($generated@@603 T@U) ) (!  (=> (and (= (type $generated@@602) $generated@@163) (= (type $generated@@603) $generated@@163)) (= ($generated@@246 ($generated@@270 $generated@@602) ($generated@@270 $generated@@603)) ($generated@@270 ($generated@@246 $generated@@602 $generated@@603))))
 :pattern ( ($generated@@246 ($generated@@270 $generated@@602) ($generated@@270 $generated@@603)))
)))
(assert (forall (($generated@@604 Int) ) (! (= ($generated@@306 ($generated@@8 ($generated@@268 $generated@@604))) ($generated@@270 ($generated@@306 ($generated@@8 $generated@@604))))
 :pattern ( ($generated@@306 ($generated@@8 ($generated@@268 $generated@@604))))
)))
(assert (forall (($generated@@605 Int) ) (! (= ($generated@@297 ($generated@@268 $generated@@605)) ($generated@@270 ($generated@@297 $generated@@605)))
 :pattern ( ($generated@@297 ($generated@@268 $generated@@605)))
)))
(assert (forall (($generated@@606 Int) ) (! (= ($generated@@301 ($generated@@268 $generated@@606)) ($generated@@270 ($generated@@301 $generated@@606)))
 :pattern ( ($generated@@301 ($generated@@268 $generated@@606)))
)))
(assert (forall (($generated@@607 T@U) ) (! (= ($generated@@306 ($generated@@270 $generated@@607)) ($generated@@270 ($generated@@306 $generated@@607)))
 :pattern ( ($generated@@306 ($generated@@270 $generated@@607)))
)))
(assert (forall (($generated@@608 T@U) ) (! (let (($generated@@609 ($generated@@292 (type $generated@@608))))
 (=> (and (= (type $generated@@608) ($generated@@291 $generated@@609)) (= ($generated@@290 $generated@@608) 0)) (= $generated@@608 ($generated@@289 $generated@@609))))
 :pattern ( ($generated@@290 $generated@@608))
)))
(assert (forall (($generated@@610 T@U) ($generated@@611 T@U) ($generated@@612 T@U) ) (! (let (($generated@@613 (type $generated@@611)))
 (=> (and (and (= (type $generated@@610) ($generated@@82 $generated@@613 $generated@@2)) (= (type $generated@@612) $generated@@2)) (<= 0 ($generated $generated@@612))) (= ($generated@@312 ($generated@@88 $generated@@610 $generated@@611 $generated@@612)) (+ (- ($generated@@312 $generated@@610) ($generated ($generated@@87 $generated@@610 $generated@@611))) ($generated $generated@@612)))))
 :pattern ( ($generated@@312 ($generated@@88 $generated@@610 $generated@@611 $generated@@612)))
)))
(assert (forall (($generated@@614 T@U) ($generated@@615 T@U) ) (!  (=> (and (= (type $generated@@614) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@615) $generated@@2)) ($generated@@80 $generated@@615 $generated@@46 $generated@@614))
 :pattern ( ($generated@@80 $generated@@615 $generated@@46 $generated@@614))
)))
(assert (forall (($generated@@616 T@U) ($generated@@617 T@U) ) (!  (=> (and (= (type $generated@@616) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@617) $generated@@3)) ($generated@@80 $generated@@617 $generated@@47 $generated@@616))
 :pattern ( ($generated@@80 $generated@@617 $generated@@47 $generated@@616))
)))
(assert (forall (($generated@@618 T@U) ($generated@@619 T@U) ) (!  (=> (and (= (type $generated@@618) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@619) $generated@@4)) ($generated@@80 $generated@@619 $generated@@44 $generated@@618))
 :pattern ( ($generated@@80 $generated@@619 $generated@@44 $generated@@618))
)))
(assert (forall (($generated@@620 T@U) ($generated@@621 T@U) ) (!  (=> (and (= (type $generated@@620) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@621) $generated@@470)) ($generated@@80 $generated@@621 $generated@@45 $generated@@620))
 :pattern ( ($generated@@80 $generated@@621 $generated@@45 $generated@@620))
)))
(assert (forall (($generated@@622 T@U) ($generated@@623 T@U) ) (!  (=> (and (= (type $generated@@622) ($generated@@82 $generated@@83 $generated@@84)) (= (type $generated@@623) $generated@@163)) ($generated@@80 $generated@@623 $generated@@48 $generated@@622))
 :pattern ( ($generated@@80 $generated@@623 $generated@@48 $generated@@622))
)))
(assert (forall (($generated@@624 T@U) ($generated@@625 T@U) ) (!  (=> (and (= (type $generated@@624) ($generated@@291 $generated@@163)) (= (type $generated@@625) $generated@@70)) (= ($generated@@151 $generated@@624 ($generated@@512 $generated@@625)) (forall (($generated@@626 Int) ) (!  (=> (and (<= 0 $generated@@626) (< $generated@@626 ($generated@@290 $generated@@624))) ($generated@@247 ($generated@@513 $generated@@624 $generated@@626) $generated@@625))
 :pattern ( ($generated@@513 $generated@@624 $generated@@626))
))))
 :pattern ( ($generated@@151 $generated@@624 ($generated@@512 $generated@@625)))
)))
(assert (forall (($generated@@628 T@U) ($generated@@629 Int) ) (!  (=> (= (type $generated@@628) ($generated@@291 $generated@@163)) (=> (and (<= 0 $generated@@629) (< $generated@@629 ($generated@@290 $generated@@628))) (< ($generated@@555 ($generated@@357 $generated@@143 ($generated@@513 $generated@@628 $generated@@629))) ($generated@@627 $generated@@628))))
 :pattern ( ($generated@@555 ($generated@@357 $generated@@143 ($generated@@513 $generated@@628 $generated@@629))))
)))
(assert (forall (($generated@@630 T@U) ($generated@@631 T@U) ($generated@@632 T@U) ) (!  (=> (and (and (and (= (type $generated@@630) ($generated@@320 $generated@@163 $generated@@163)) (= (type $generated@@631) $generated@@70)) (= (type $generated@@632) $generated@@70)) ($generated@@151 $generated@@630 ($generated@@425 $generated@@631 $generated@@632))) (and (and ($generated@@151 ($generated@@318 $generated@@630) ($generated@@258 $generated@@631)) ($generated@@151 ($generated@@368 $generated@@630) ($generated@@258 $generated@@632))) ($generated@@151 ($generated@@399 $generated@@630) ($generated@@258 ($generated@@154 $generated@@631 $generated@@632)))))
 :pattern ( ($generated@@151 $generated@@630 ($generated@@425 $generated@@631 $generated@@632)))
)))
(assert (forall (($generated@@633 T@U) ($generated@@634 T@U) ($generated@@635 T@U) ) (!  (=> (and (and (and (= (type $generated@@633) ($generated@@338 $generated@@163 $generated@@163)) (= (type $generated@@634) $generated@@70)) (= (type $generated@@635) $generated@@70)) ($generated@@151 $generated@@633 ($generated@@433 $generated@@634 $generated@@635))) (and (and ($generated@@151 ($generated@@336 $generated@@633) ($generated@@263 $generated@@634)) ($generated@@151 ($generated@@379 $generated@@633) ($generated@@263 $generated@@635))) ($generated@@151 ($generated@@407 $generated@@633) ($generated@@263 ($generated@@154 $generated@@634 $generated@@635)))))
 :pattern ( ($generated@@151 $generated@@633 ($generated@@433 $generated@@634 $generated@@635)))
)))
(assert (forall (($generated@@636 T@U) ) (!  (=> (= (type $generated@@636) $generated@@2) ($generated@@151 $generated@@636 $generated@@46))
 :pattern ( ($generated@@151 $generated@@636 $generated@@46))
)))
(assert (forall (($generated@@637 T@U) ) (!  (=> (= (type $generated@@637) $generated@@3) ($generated@@151 $generated@@637 $generated@@47))
 :pattern ( ($generated@@151 $generated@@637 $generated@@47))
)))
(assert (forall (($generated@@638 T@U) ) (!  (=> (= (type $generated@@638) $generated@@4) ($generated@@151 $generated@@638 $generated@@44))
 :pattern ( ($generated@@151 $generated@@638 $generated@@44))
)))
(assert (forall (($generated@@639 T@U) ) (!  (=> (= (type $generated@@639) $generated@@470) ($generated@@151 $generated@@639 $generated@@45))
 :pattern ( ($generated@@151 $generated@@639 $generated@@45))
)))
(assert (forall (($generated@@640 T@U) ) (!  (=> (= (type $generated@@640) $generated@@163) ($generated@@151 $generated@@640 $generated@@48))
 :pattern ( ($generated@@151 $generated@@640 $generated@@48))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@641 () T@U)
(declare-fun $generated@@642 () T@U)
(declare-fun $generated@@643 () T@U)
(declare-fun $generated@@644 () T@U)
(declare-fun $generated@@645 () T@U)
(declare-fun $generated@@646 (T@U) Bool)
(assert  (and (and (and (and (= (type $generated@@641) ($generated@@180 $generated@@83 $generated@@4)) (= (type $generated@@642) $generated@@83)) (= (type $generated@@643) ($generated@@82 $generated@@83 $generated@@84))) (= (type $generated@@644) $generated@@143)) (= (type $generated@@645) ($generated@@180 $generated@@83 $generated@@4))))
(set-option :timeout 0)
(set-option :rlimit 0)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@647  (=> (and (= $generated@@641 ($generated@@234 $generated@@642 $generated@@643 $generated@@60 false)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@147 $generated@@644))))
(let (($generated@@648 true))
(let (($generated@@649  (=> (and (= $generated@@645 ($generated@@179 $generated@@642 $generated@@643 $generated@@60 false)) ($generated@@147 $generated@@644)) (and (=> (= (ControlFlow 0 4) 1) $generated@@648) (=> (= (ControlFlow 0 4) 3) $generated@@647)))))
(let (($generated@@650  (=> (and ($generated@@274 $generated@@643) ($generated@@646 $generated@@643)) (=> (and (and ($generated@@151 $generated@@644 $generated@@171) ($generated@@80 $generated@@644 $generated@@171 $generated@@643)) (and (= 0 $generated@@168) (= (ControlFlow 0 5) 4))) $generated@@649))))
$generated@@650)))))
))
(check-sat)
(pop 1)
; Valid
(get-info :rlimit)
